{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/settings/server/functions/overrideGenerator.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/settings/server/functions/overrideGenerator.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/settings/server/functions/overrideGenerator.ts","inputSourceMap":{"version":3,"file":"app/settings/server/functions/overrideGenerator.ts","sourceRoot":"","sources":["app/settings/server/functions/overrideGenerator.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C,MAAM,oBAAoB,GAAG,CAAC,CAAoB,EAAE,CAAoB,EAAE,IAAuB,EAAW,EAAE;IAC7G,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1C,IAAI,IAAI,KAAK,aAAa,EAAE,CAAC;YAC5B,CAAC,GAAG,CAA4B,CAAC;YACjC,CAAC,GAAG,CAA4B,CAAC;YACjC,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,oBAAoB,CAAC,KAAK,EAAG,CAA6B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/H,CAAC;QAED,IAAI,IAAI,KAAK,UAAU,EAAE,CAAC;YACzB,CAAC,GAAG,CAAyB,CAAC;YAC9B,CAAC,GAAG,CAAyB,CAAC;YAC9B,OAAO,CACN,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM;gBACrB,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;oBACxB,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CACvC,oBAAoB,CACnB,KAAK,CAAC,GAAyB,CAAC,EAC/B,CAA0B,CAAC,KAAuB,CAAC,CAAC,GAAqB,CAAC,CAC3E,CACD,CAAC;gBACH,CAAC,CAAC,CACF,CAAC;QACH,CAAC;IACF,CAAC;IACD,OAAO,CAAC,KAAK,CAAC,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAC7B,CAAC,EAAuC,EAAE,EAAE,CAC5C,CAAC,OAAiB,EAAY,EAAE;IAC/B,MAAM,cAAc,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACvC,IAAI,cAAc,KAAK,IAAI,IAAI,cAAc,KAAK,SAAS,EAAE,CAAC;QAC7D,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,IAAI,CAAC;QACJ,MAAM,KAAK,GAAG,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;QAEzD,IAAI,oBAAoB,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;YAC9D,OAAO,OAAO,CAAC;QAChB,CAAC;QAED,OAAO;YACN,GAAG,OAAO;YACV,KAAK;YACL,eAAe,EAAE,KAAK;YACtB,WAAW,EAAE,iBAAiB;SAC9B,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QAChB,OAAO,CAAC,KAAK,CAAC,sCAAsC,OAAO,CAAC,GAAG,cAAc,OAAO,CAAC,IAAI,QAAQ,CAAC,CAAC;QACnG,OAAO,OAAO,CAAC;IAChB,CAAC;AACF,CAAC,CAAC","sourcesContent":["import type { ISetting, SettingValueMultiSelect, SettingValueRoomPick } from '@rocket.chat/core-typings';\n\nimport { convertValue } from './convertValue';\n\nconst compareSettingsValue = (a: ISetting['value'], b: ISetting['value'], type?: ISetting['type']): boolean => {\n\tif (Array.isArray(a) && Array.isArray(b)) {\n\t\tif (type === 'multiSelect') {\n\t\t\ta = a as SettingValueMultiSelect;\n\t\t\tb = b as SettingValueMultiSelect;\n\t\t\treturn a.length === b.length && a.every((value, index) => compareSettingsValue(value, (b as SettingValueMultiSelect)[index]));\n\t\t}\n\n\t\tif (type === 'roomPick') {\n\t\t\ta = a as SettingValueRoomPick;\n\t\t\tb = b as SettingValueRoomPick;\n\t\t\treturn (\n\t\t\t\ta.length === b.length &&\n\t\t\t\ta.every((value, index) => {\n\t\t\t\t\treturn Object.keys(value).every((key) =>\n\t\t\t\t\t\tcompareSettingsValue(\n\t\t\t\t\t\t\tvalue[key as keyof typeof value],\n\t\t\t\t\t\t\t(b as SettingValueRoomPick)[index as keyof typeof b][key as keyof typeof b],\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\treturn a === b;\n};\n\nexport const overrideGenerator =\n\t(fn: (key: string) => string | undefined) =>\n\t(setting: ISetting): ISetting => {\n\t\tconst overwriteValue = fn(setting._id);\n\t\tif (overwriteValue === null || overwriteValue === undefined) {\n\t\t\treturn setting;\n\t\t}\n\n\t\ttry {\n\t\t\tconst value = convertValue(overwriteValue, setting.type);\n\n\t\t\tif (compareSettingsValue(value, setting.value, setting.type)) {\n\t\t\t\treturn setting;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...setting,\n\t\t\t\tvalue,\n\t\t\t\tprocessEnvValue: value,\n\t\t\t\tvalueSource: 'processEnvValue',\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tconsole.error(`Error converting value for setting ${setting._id} expected \"${setting.type}\" type`);\n\t\t\treturn setting;\n\t\t}\n\t};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/settings/server/functions/overrideGenerator.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/settings/server/functions/overrideGenerator.ts","inputSourceMap":{"version":3,"file":"app/settings/server/functions/overrideGenerator.ts","sourceRoot":"","sources":["app/settings/server/functions/overrideGenerator.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C,MAAM,oBAAoB,GAAG,CAAC,CAAoB,EAAE,CAAoB,EAAE,IAAuB,EAAW,EAAE;IAC7G,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1C,IAAI,IAAI,KAAK,aAAa,EAAE,CAAC;YAC5B,CAAC,GAAG,CAA4B,CAAC;YACjC,CAAC,GAAG,CAA4B,CAAC;YACjC,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,oBAAoB,CAAC,KAAK,EAAG,CAA6B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/H,CAAC;QAED,IAAI,IAAI,KAAK,UAAU,EAAE,CAAC;YACzB,CAAC,GAAG,CAAyB,CAAC;YAC9B,CAAC,GAAG,CAAyB,CAAC;YAC9B,OAAO,CACN,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM;gBACrB,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;oBACxB,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CACvC,oBAAoB,CACnB,KAAK,CAAC,GAAyB,CAAC,EAC/B,CAA0B,CAAC,KAAuB,CAAC,CAAC,GAAqB,CAAC,CAC3E,CACD,CAAC;gBACH,CAAC,CAAC,CACF,CAAC;QACH,CAAC;IACF,CAAC;IACD,OAAO,CAAC,KAAK,CAAC,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAC7B,CAAC,EAAuC,EAAE,EAAE,CAC5C,CAAC,OAAiB,EAAY,EAAE;IAC/B,MAAM,cAAc,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACvC,IAAI,cAAc,KAAK,IAAI,IAAI,cAAc,KAAK,SAAS,EAAE,CAAC;QAC7D,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,IAAI,CAAC;QACJ,MAAM,KAAK,GAAG,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;QAEzD,IAAI,oBAAoB,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;YAC9D,OAAO,OAAO,CAAC;QAChB,CAAC;QAED,OAAO;YACN,GAAG,OAAO;YACV,KAAK;YACL,eAAe,EAAE,KAAK;YACtB,WAAW,EAAE,iBAAiB;SAC9B,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QAChB,OAAO,CAAC,KAAK,CAAC,sCAAsC,OAAO,CAAC,GAAG,cAAc,OAAO,CAAC,IAAI,QAAQ,CAAC,CAAC;QACnG,OAAO,OAAO,CAAC;IAChB,CAAC;AACF,CAAC,CAAC","sourcesContent":["import type { ISetting, SettingValueMultiSelect, SettingValueRoomPick } from '@rocket.chat/core-typings';\n\nimport { convertValue } from './convertValue';\n\nconst compareSettingsValue = (a: ISetting['value'], b: ISetting['value'], type?: ISetting['type']): boolean => {\n\tif (Array.isArray(a) && Array.isArray(b)) {\n\t\tif (type === 'multiSelect') {\n\t\t\ta = a as SettingValueMultiSelect;\n\t\t\tb = b as SettingValueMultiSelect;\n\t\t\treturn a.length === b.length && a.every((value, index) => compareSettingsValue(value, (b as SettingValueMultiSelect)[index]));\n\t\t}\n\n\t\tif (type === 'roomPick') {\n\t\t\ta = a as SettingValueRoomPick;\n\t\t\tb = b as SettingValueRoomPick;\n\t\t\treturn (\n\t\t\t\ta.length === b.length &&\n\t\t\t\ta.every((value, index) => {\n\t\t\t\t\treturn Object.keys(value).every((key) =>\n\t\t\t\t\t\tcompareSettingsValue(\n\t\t\t\t\t\t\tvalue[key as keyof typeof value],\n\t\t\t\t\t\t\t(b as SettingValueRoomPick)[index as keyof typeof b][key as keyof typeof b],\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\treturn a === b;\n};\n\nexport const overrideGenerator =\n\t(fn: (key: string) => string | undefined) =>\n\t(setting: ISetting): ISetting => {\n\t\tconst overwriteValue = fn(setting._id);\n\t\tif (overwriteValue === null || overwriteValue === undefined) {\n\t\t\treturn setting;\n\t\t}\n\n\t\ttry {\n\t\t\tconst value = convertValue(overwriteValue, setting.type);\n\n\t\t\tif (compareSettingsValue(value, setting.value, setting.type)) {\n\t\t\t\treturn setting;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...setting,\n\t\t\t\tvalue,\n\t\t\t\tprocessEnvValue: value,\n\t\t\t\tvalueSource: 'processEnvValue',\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tconsole.error(`Error converting value for setting ${setting._id} expected \"${setting.type}\" type`);\n\t\t\treturn setting;\n\t\t}\n\t};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      overrideGenerator: () => overrideGenerator\n    });\n    let convertValue;\n    module.link(\"./convertValue\", {\n      convertValue(v) {\n        convertValue = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const compareSettingsValue = (a, b, type) => {\n      if (Array.isArray(a) && Array.isArray(b)) {\n        if (type === 'multiSelect') {\n          a = a;\n          b = b;\n          return a.length === b.length && a.every((value, index) => compareSettingsValue(value, b[index]));\n        }\n        if (type === 'roomPick') {\n          a = a;\n          b = b;\n          return a.length === b.length && a.every((value, index) => {\n            return Object.keys(value).every(key => compareSettingsValue(value[key], b[index][key]));\n          });\n        }\n      }\n      return a === b;\n    };\n    const overrideGenerator = fn => setting => {\n      const overwriteValue = fn(setting._id);\n      if (overwriteValue === null || overwriteValue === undefined) {\n        return setting;\n      }\n      try {\n        const value = convertValue(overwriteValue, setting.type);\n        if (compareSettingsValue(value, setting.value, setting.type)) {\n          return setting;\n        }\n        return _objectSpread(_objectSpread({}, setting), {}, {\n          value,\n          processEnvValue: value,\n          valueSource: 'processEnvValue'\n        });\n      } catch (error) {\n        console.error(\"Error converting value for setting \".concat(setting._id, \" expected \\\"\").concat(setting.type, \"\\\" type\"));\n        return setting;\n      }\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","overrideGenerator","convertValue","__reifyWaitForDeps__","compareSettingsValue","a","b","type","Array","isArray","length","every","value","index","Object","keys","key","fn","setting","overwriteValue","_id","undefined","processEnvValue","valueSource","error","console","concat","__reify_async_result__","_reifyError","self","async"],"sources":["app/settings/server/functions/overrideGenerator.ts"],"sourcesContent":["import type { ISetting, SettingValueMultiSelect, SettingValueRoomPick } from '@rocket.chat/core-typings';\n\nimport { convertValue } from './convertValue';\n\nconst compareSettingsValue = (a: ISetting['value'], b: ISetting['value'], type?: ISetting['type']): boolean => {\n\tif (Array.isArray(a) && Array.isArray(b)) {\n\t\tif (type === 'multiSelect') {\n\t\t\ta = a as SettingValueMultiSelect;\n\t\t\tb = b as SettingValueMultiSelect;\n\t\t\treturn a.length === b.length && a.every((value, index) => compareSettingsValue(value, (b as SettingValueMultiSelect)[index]));\n\t\t}\n\n\t\tif (type === 'roomPick') {\n\t\t\ta = a as SettingValueRoomPick;\n\t\t\tb = b as SettingValueRoomPick;\n\t\t\treturn (\n\t\t\t\ta.length === b.length &&\n\t\t\t\ta.every((value, index) => {\n\t\t\t\t\treturn Object.keys(value).every((key) =>\n\t\t\t\t\t\tcompareSettingsValue(\n\t\t\t\t\t\t\tvalue[key as keyof typeof value],\n\t\t\t\t\t\t\t(b as SettingValueRoomPick)[index as keyof typeof b][key as keyof typeof b],\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\treturn a === b;\n};\n\nexport const overrideGenerator =\n\t(fn: (key: string) => string | undefined) =>\n\t(setting: ISetting): ISetting => {\n\t\tconst overwriteValue = fn(setting._id);\n\t\tif (overwriteValue === null || overwriteValue === undefined) {\n\t\t\treturn setting;\n\t\t}\n\n\t\ttry {\n\t\t\tconst value = convertValue(overwriteValue, setting.type);\n\n\t\t\tif (compareSettingsValue(value, setting.value, setting.type)) {\n\t\t\t\treturn setting;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...setting,\n\t\t\t\tvalue,\n\t\t\t\tprocessEnvValue: value,\n\t\t\t\tvalueSource: 'processEnvValue',\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tconsole.error(`Error converting value for setting ${setting._id} expected \"${setting.type}\" type`);\n\t\t\treturn setting;\n\t\t}\n\t};\n"],"mappings":";;;IAEA,IAAAA,aAAS;IAAAC,MAAc,CAAAC,IAAM,uCAAiB;MAAAC,QAAAC,CAAA;QAAAJ,aAAA,GAAAI,CAAA;MAAA;IAAA;IAA9CH,MAAA,CAAOI,MAAE;MAAAC,iBAAoB,EAAAA,CAAA,KAAAA;IAAiB;IAAA,IAAAC,YAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,aAAAH,CAAA;QAAAG,YAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,oBAAA,WAAAA,oBAAA;IAE9C,MAAMC,oBAAoB,GAAGA,CAACC,CAAoB,EAAEC,CAAoB,EAAEC,IAAuB,KAAa;MAC7G,IAAIC,KAAK,CAACC,OAAO,CAACJ,CAAC,CAAC,IAAIG,KAAK,CAACC,OAAO,CAACH,CAAC,CAAC,EAAE;QACzC,IAAIC,IAAI,KAAK,aAAa,EAAE;UAC3BF,CAAC,GAAGA,CAA4B;UAChCC,CAAC,GAAGA,CAA4B;UAChC,OAAOD,CAAC,CAACK,MAAM,KAAKJ,CAAC,CAACI,MAAM,IAAIL,CAAC,CAACM,KAAK,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAKT,oBAAoB,CAACQ,KAAK,EAAGN,CAA6B,CAACO,KAAK,CAAC,CAAC,CAAC;QAC9H;QAEA,IAAIN,IAAI,KAAK,UAAU,EAAE;UACxBF,CAAC,GAAGA,CAAyB;UAC7BC,CAAC,GAAGA,CAAyB;UAC7B,OACCD,CAAC,CAACK,MAAM,KAAKJ,CAAC,CAACI,MAAM,IACrBL,CAAC,CAACM,KAAK,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAI;YACxB,OAAOC,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAACD,KAAK,CAAEK,GAAG,IACnCZ,oBAAoB,CACnBQ,KAAK,CAACI,GAAyB,CAAC,EAC/BV,CAA0B,CAACO,KAAuB,CAAC,CAACG,GAAqB,CAAC,CAC3E,CACD;UACF,CAAC,CAAC;QAEJ;MACD;MACA,OAAOX,CAAC,KAAKC,CAAC;IACf,CAAC;IAEM,MAAML,iBAAiB,GAC5BgB,EAAuC,IACvCC,OAAiB,IAAc;MAC/B,MAAMC,cAAc,GAAGF,EAAE,CAACC,OAAO,CAACE,GAAG,CAAC;MACtC,IAAID,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAKE,SAAS,EAAE;QAC5D,OAAOH,OAAO;MACf;MAEA,IAAI;QACH,MAAMN,KAAK,GAAGV,YAAY,CAACiB,cAAc,EAAED,OAAO,CAACX,IAAI,CAAC;QAExD,IAAIH,oBAAoB,CAACQ,KAAK,EAAEM,OAAO,CAACN,KAAK,EAAEM,OAAO,CAACX,IAAI,CAAC,EAAE;UAC7D,OAAOW,OAAO;QACf;QAEA,OAAAvB,aAAA,CAAAA,aAAA,KACIuB,OAAO;UACVN,KAAK;UACLU,eAAe,EAAEV,KAAK;UACtBW,WAAW,EAAE;QAAiB;MAEhC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,uCAAAE,MAAA,CAAuCR,OAAO,CAACE,GAAG,kBAAAM,MAAA,CAAcR,OAAO,CAACX,IAAI,YAAQ,CAAC;QAClG,OAAOW,OAAO;MACf;IACD,CAAC;IAACS,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"4bcbf50f7a7a563a89c81fbb1faff1990653034f"}
