{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/slashcommands-hide/server/hide.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/slashcommands-hide/server/hide.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/slashcommands-hide/server/hide.ts","inputSourceMap":{"version":3,"file":"app/slashcommands-hide/server/hide.ts","sourceRoot":"","sources":["app/slashcommands-hide/server/hide.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IRoom, SlashCommandCallbackParams } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions, Users } from '@rocket.chat/models';\n\nimport { i18n } from '../../../server/lib/i18n';\nimport { hideRoomMethod } from '../../../server/methods/hideRoom';\nimport { settings } from '../../settings/server';\nimport { slashCommands } from '../../utils/server/slashCommand';\n\n/*\n * Hide is a named function that will replace /hide commands\n * @param {Object} message - The message object\n */\n\nslashCommands.add({\n\tcommand: 'hide',\n\tcallback: async ({ params, message, userId }: SlashCommandCallbackParams<'hide'>): Promise<void> => {\n\t\tconst room = params.trim();\n\t\tif (!userId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = await Users.findOneById(userId);\n\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lng = user.language || settings.get('Language') || 'en';\n\n\t\t// if there is not a param, hide the current room\n\t\tlet { rid } = message;\n\t\tif (room !== '') {\n\t\t\tconst [strippedRoom] = room.replace(/#|@/, '').split(' ');\n\n\t\t\tconst [type] = room;\n\n\t\t\tconst roomObject: IRoom | null =\n\t\t\t\ttype === '#'\n\t\t\t\t\t? await Rooms.findOneByName(strippedRoom)\n\t\t\t\t\t: await Rooms.findOne({\n\t\t\t\t\t\t\tt: 'd',\n\t\t\t\t\t\t\tusernames: { $all: [user.username, strippedRoom] },\n\t\t\t\t\t\t});\n\t\t\tif (!roomObject) {\n\t\t\t\tvoid api.broadcast('notify.ephemeralMessage', user._id, message.rid, {\n\t\t\t\t\tmsg: i18n.t('Channel_doesnt_exist', {\n\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\tsprintf: [room],\n\t\t\t\t\t\tlng,\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (!(await Subscriptions.findOneByRoomIdAndUserId(roomObject ? roomObject._id : '', user._id, { projection: { _id: 1 } }))) {\n\t\t\t\tvoid api.broadcast('notify.ephemeralMessage', user._id, message.rid, {\n\t\t\t\t\tmsg: i18n.t('error-logged-user-not-in-room', {\n\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\tsprintf: [room],\n\t\t\t\t\t\tlng,\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\trid = roomObject?._id || message.rid;\n\t\t}\n\t\ttry {\n\t\t\tawait hideRoomMethod(userId, rid);\n\t\t} catch (error: any) {\n\t\t\tawait api.broadcast('notify.ephemeralMessage', user._id, message.rid, {\n\t\t\t\tmsg: i18n.t(error, { lng }),\n\t\t\t});\n\t\t}\n\t},\n\toptions: { description: 'Hide_room', params: '#room' },\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/slashcommands-hide/server/hide.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/slashcommands-hide/server/hide.ts","inputSourceMap":{"version":3,"file":"app/slashcommands-hide/server/hide.ts","sourceRoot":"","sources":["app/slashcommands-hide/server/hide.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IRoom, SlashCommandCallbackParams } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions, Users } from '@rocket.chat/models';\n\nimport { i18n } from '../../../server/lib/i18n';\nimport { hideRoomMethod } from '../../../server/methods/hideRoom';\nimport { settings } from '../../settings/server';\nimport { slashCommands } from '../../utils/server/slashCommand';\n\n/*\n * Hide is a named function that will replace /hide commands\n * @param {Object} message - The message object\n */\n\nslashCommands.add({\n\tcommand: 'hide',\n\tcallback: async ({ params, message, userId }: SlashCommandCallbackParams<'hide'>): Promise<void> => {\n\t\tconst room = params.trim();\n\t\tif (!userId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = await Users.findOneById(userId);\n\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lng = user.language || settings.get('Language') || 'en';\n\n\t\t// if there is not a param, hide the current room\n\t\tlet { rid } = message;\n\t\tif (room !== '') {\n\t\t\tconst [strippedRoom] = room.replace(/#|@/, '').split(' ');\n\n\t\t\tconst [type] = room;\n\n\t\t\tconst roomObject: IRoom | null =\n\t\t\t\ttype === '#'\n\t\t\t\t\t? await Rooms.findOneByName(strippedRoom)\n\t\t\t\t\t: await Rooms.findOne({\n\t\t\t\t\t\t\tt: 'd',\n\t\t\t\t\t\t\tusernames: { $all: [user.username, strippedRoom] },\n\t\t\t\t\t\t});\n\t\t\tif (!roomObject) {\n\t\t\t\tvoid api.broadcast('notify.ephemeralMessage', user._id, message.rid, {\n\t\t\t\t\tmsg: i18n.t('Channel_doesnt_exist', {\n\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\tsprintf: [room],\n\t\t\t\t\t\tlng,\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (!(await Subscriptions.findOneByRoomIdAndUserId(roomObject ? roomObject._id : '', user._id, { projection: { _id: 1 } }))) {\n\t\t\t\tvoid api.broadcast('notify.ephemeralMessage', user._id, message.rid, {\n\t\t\t\t\tmsg: i18n.t('error-logged-user-not-in-room', {\n\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\tsprintf: [room],\n\t\t\t\t\t\tlng,\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\trid = roomObject?._id || message.rid;\n\t\t}\n\t\ttry {\n\t\t\tawait hideRoomMethod(userId, rid);\n\t\t} catch (error: any) {\n\t\t\tawait api.broadcast('notify.ephemeralMessage', user._id, message.rid, {\n\t\t\t\tmsg: i18n.t(error, { lng }),\n\t\t\t});\n\t\t}\n\t},\n\toptions: { description: 'Hide_room', params: '#room' },\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let Rooms, Subscriptions, Users;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let i18n;\n    module.link(\"../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 2);\n    let hideRoomMethod;\n    module.link(\"../../../server/methods/hideRoom\", {\n      hideRoomMethod(v) {\n        hideRoomMethod = v;\n      }\n    }, 3);\n    let settings;\n    module.link(\"../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 4);\n    let slashCommands;\n    module.link(\"../../utils/server/slashCommand\", {\n      slashCommands(v) {\n        slashCommands = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    /*\n     * Hide is a named function that will replace /hide commands\n     * @param {Object} message - The message object\n     */\n    slashCommands.add({\n      command: 'hide',\n      callback: async _ref => {\n        let {\n          params,\n          message,\n          userId\n        } = _ref;\n        const room = params.trim();\n        if (!userId) {\n          return;\n        }\n        const user = await Users.findOneById(userId);\n        if (!user) {\n          return;\n        }\n        const lng = user.language || settings.get('Language') || 'en';\n        // if there is not a param, hide the current room\n        let {\n          rid\n        } = message;\n        if (room !== '') {\n          const [strippedRoom] = room.replace(/#|@/, '').split(' ');\n          const [type] = room;\n          const roomObject = type === '#' ? await Rooms.findOneByName(strippedRoom) : await Rooms.findOne({\n            t: 'd',\n            usernames: {\n              $all: [user.username, strippedRoom]\n            }\n          });\n          if (!roomObject) {\n            void api.broadcast('notify.ephemeralMessage', user._id, message.rid, {\n              msg: i18n.t('Channel_doesnt_exist', {\n                postProcess: 'sprintf',\n                sprintf: [room],\n                lng\n              })\n            });\n          }\n          if (!(await Subscriptions.findOneByRoomIdAndUserId(roomObject ? roomObject._id : '', user._id, {\n            projection: {\n              _id: 1\n            }\n          }))) {\n            void api.broadcast('notify.ephemeralMessage', user._id, message.rid, {\n              msg: i18n.t('error-logged-user-not-in-room', {\n                postProcess: 'sprintf',\n                sprintf: [room],\n                lng\n              })\n            });\n            return;\n          }\n          rid = (roomObject === null || roomObject === void 0 ? void 0 : roomObject._id) || message.rid;\n        }\n        try {\n          await hideRoomMethod(userId, rid);\n        } catch (error) {\n          await api.broadcast('notify.ephemeralMessage', user._id, message.rid, {\n            msg: i18n.t(error, {\n              lng\n            })\n          });\n        }\n      },\n      options: {\n        description: 'Hide_room',\n        params: '#room'\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["api","module","link","v","Rooms","Subscriptions","Users","i18n","hideRoomMethod","settings","slashCommands","__reifyWaitForDeps__","add","command","callback","_ref","params","message","userId","room","trim","user","findOneById","lng","language","get","rid","strippedRoom","replace","split","type","roomObject","findOneByName","findOne","t","usernames","$all","username","broadcast","_id","msg","postProcess","sprintf","findOneByRoomIdAndUserId","projection","error","options","description","__reify_async_result__","_reifyError","self","async"],"sources":["app/slashcommands-hide/server/hide.ts"],"sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IRoom, SlashCommandCallbackParams } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions, Users } from '@rocket.chat/models';\n\nimport { i18n } from '../../../server/lib/i18n';\nimport { hideRoomMethod } from '../../../server/methods/hideRoom';\nimport { settings } from '../../settings/server';\nimport { slashCommands } from '../../utils/server/slashCommand';\n\n/*\n * Hide is a named function that will replace /hide commands\n * @param {Object} message - The message object\n */\n\nslashCommands.add({\n\tcommand: 'hide',\n\tcallback: async ({ params, message, userId }: SlashCommandCallbackParams<'hide'>): Promise<void> => {\n\t\tconst room = params.trim();\n\t\tif (!userId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = await Users.findOneById(userId);\n\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lng = user.language || settings.get('Language') || 'en';\n\n\t\t// if there is not a param, hide the current room\n\t\tlet { rid } = message;\n\t\tif (room !== '') {\n\t\t\tconst [strippedRoom] = room.replace(/#|@/, '').split(' ');\n\n\t\t\tconst [type] = room;\n\n\t\t\tconst roomObject: IRoom | null =\n\t\t\t\ttype === '#'\n\t\t\t\t\t? await Rooms.findOneByName(strippedRoom)\n\t\t\t\t\t: await Rooms.findOne({\n\t\t\t\t\t\t\tt: 'd',\n\t\t\t\t\t\t\tusernames: { $all: [user.username, strippedRoom] },\n\t\t\t\t\t\t});\n\t\t\tif (!roomObject) {\n\t\t\t\tvoid api.broadcast('notify.ephemeralMessage', user._id, message.rid, {\n\t\t\t\t\tmsg: i18n.t('Channel_doesnt_exist', {\n\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\tsprintf: [room],\n\t\t\t\t\t\tlng,\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (!(await Subscriptions.findOneByRoomIdAndUserId(roomObject ? roomObject._id : '', user._id, { projection: { _id: 1 } }))) {\n\t\t\t\tvoid api.broadcast('notify.ephemeralMessage', user._id, message.rid, {\n\t\t\t\t\tmsg: i18n.t('error-logged-user-not-in-room', {\n\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\tsprintf: [room],\n\t\t\t\t\t\tlng,\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\trid = roomObject?._id || message.rid;\n\t\t}\n\t\ttry {\n\t\t\tawait hideRoomMethod(userId, rid);\n\t\t} catch (error: any) {\n\t\t\tawait api.broadcast('notify.ephemeralMessage', user._id, message.rid, {\n\t\t\t\tmsg: i18n.t(error, { lng }),\n\t\t\t});\n\t\t}\n\t},\n\toptions: { description: 'Hide_room', params: '#room' },\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c493efb4a7548d03679de47af9ecfe8c565d0528"}
