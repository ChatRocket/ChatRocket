{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file-upload/server/config/AmazonS3.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/file-upload/server/config/AmazonS3.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file-upload/server/config/AmazonS3.ts","inputSourceMap":{"version":3,"file":"app/file-upload/server/config/AmazonS3.ts","sourceRoot":"","sources":["app/file-upload/server/config/AmazonS3.ts"],"names":[],"mappings":"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","sourcesContent":["import http from 'http';\nimport https from 'https';\n\nimport _ from 'underscore';\n\nimport { forceDownload } from './helper';\nimport { settings } from '../../../settings/server';\nimport type { S3Options } from '../../ufs/AmazonS3/server';\nimport { FileUploadClass, FileUpload } from '../lib/FileUpload';\nimport '../../ufs/AmazonS3/server';\n\nconst get: FileUploadClass['get'] = async function (this: FileUploadClass, file, req, res) {\n\tconst forcedDownload = forceDownload(req);\n\n\tconst fileUrl = await this.store.getRedirectURL(file, forcedDownload);\n\tif (!fileUrl || !file.store) {\n\t\tres.end();\n\t\treturn;\n\t}\n\n\tconst storeType = file.store.split(':').pop();\n\tif (settings.get(`FileUpload_S3_Proxy_${storeType}`)) {\n\t\tconst request = /^https:/.test(fileUrl) ? https : http;\n\n\t\tFileUpload.proxyFile(file.name || '', fileUrl, forcedDownload, request, req, res);\n\t\treturn;\n\t}\n\n\tFileUpload.redirectToFile(fileUrl, req, res);\n};\n\nconst copy: FileUploadClass['copy'] = async function (this: FileUploadClass, file, out) {\n\tconst fileUrl = await this.store.getRedirectURL(file);\n\tif (!fileUrl) {\n\t\tout.end();\n\t\treturn;\n\t}\n\n\tconst request = /^https:/.test(fileUrl) ? https : http;\n\treturn new Promise((resolve) => {\n\t\trequest.get(fileUrl, (fileRes) => fileRes.pipe(out).on('finish', () => resolve()));\n\t});\n};\n\nconst AmazonS3Uploads = new FileUploadClass({\n\tname: 'AmazonS3:Uploads',\n\tget,\n\tcopy,\n\t// store setted bellow\n});\n\nconst AmazonS3Avatars = new FileUploadClass({\n\tname: 'AmazonS3:Avatars',\n\tget,\n\tcopy,\n\t// store setted bellow\n});\n\nconst AmazonS3UserDataFiles = new FileUploadClass({\n\tname: 'AmazonS3:UserDataFiles',\n\tget,\n\tcopy,\n\t// store setted bellow\n});\n\nconst configure = _.debounce(() => {\n\tconst Bucket = settings.get<string>('FileUpload_S3_Bucket');\n\tconst Acl = settings.get<string>('FileUpload_S3_Acl');\n\tconst AWSAccessKeyId = settings.get<string>('FileUpload_S3_AWSAccessKeyId');\n\tconst AWSSecretAccessKey = settings.get<string>('FileUpload_S3_AWSSecretAccessKey');\n\tconst URLExpiryTimeSpan = settings.get<number>('FileUpload_S3_URLExpiryTimeSpan');\n\tconst Region = settings.get<string>('FileUpload_S3_Region');\n\tconst SignatureVersion = settings.get<string>('FileUpload_S3_SignatureVersion');\n\tconst ForcePathStyle = settings.get<boolean>('FileUpload_S3_ForcePathStyle');\n\t// const CDN = RocketChat.settings.get('FileUpload_S3_CDN');\n\tconst BucketURL = settings.get<string>('FileUpload_S3_BucketURL');\n\n\tif (!Bucket) {\n\t\treturn;\n\t}\n\n\tconst config: Omit<S3Options, 'name' | 'getPath'> = {\n\t\tconnection: {\n\t\t\tsignatureVersion: SignatureVersion,\n\t\t\ts3ForcePathStyle: ForcePathStyle,\n\t\t\tparams: {\n\t\t\t\tBucket,\n\t\t\t\tACL: Acl,\n\t\t\t},\n\t\t\tregion: Region,\n\t\t},\n\t\tURLExpiryTimeSpan,\n\t};\n\n\tif (AWSAccessKeyId) {\n\t\tconfig.connection.accessKeyId = AWSAccessKeyId;\n\t}\n\n\tif (AWSSecretAccessKey) {\n\t\tconfig.connection.secretAccessKey = AWSSecretAccessKey;\n\t}\n\n\tif (BucketURL) {\n\t\tconfig.connection.endpoint = BucketURL;\n\t}\n\n\tAmazonS3Uploads.store = FileUpload.configureUploadsStore('AmazonS3', AmazonS3Uploads.name, config);\n\tAmazonS3Avatars.store = FileUpload.configureUploadsStore('AmazonS3', AmazonS3Avatars.name, config);\n\tAmazonS3UserDataFiles.store = FileUpload.configureUploadsStore('AmazonS3', AmazonS3UserDataFiles.name, config);\n}, 500);\n\nsettings.watchByRegex(/^FileUpload_S3_/, configure);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file-upload/server/config/AmazonS3.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/file-upload/server/config/AmazonS3.ts","inputSourceMap":{"version":3,"file":"app/file-upload/server/config/AmazonS3.ts","sourceRoot":"","sources":["app/file-upload/server/config/AmazonS3.ts"],"names":[],"mappings":"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","sourcesContent":["import http from 'http';\nimport https from 'https';\n\nimport _ from 'underscore';\n\nimport { forceDownload } from './helper';\nimport { settings } from '../../../settings/server';\nimport type { S3Options } from '../../ufs/AmazonS3/server';\nimport { FileUploadClass, FileUpload } from '../lib/FileUpload';\nimport '../../ufs/AmazonS3/server';\n\nconst get: FileUploadClass['get'] = async function (this: FileUploadClass, file, req, res) {\n\tconst forcedDownload = forceDownload(req);\n\n\tconst fileUrl = await this.store.getRedirectURL(file, forcedDownload);\n\tif (!fileUrl || !file.store) {\n\t\tres.end();\n\t\treturn;\n\t}\n\n\tconst storeType = file.store.split(':').pop();\n\tif (settings.get(`FileUpload_S3_Proxy_${storeType}`)) {\n\t\tconst request = /^https:/.test(fileUrl) ? https : http;\n\n\t\tFileUpload.proxyFile(file.name || '', fileUrl, forcedDownload, request, req, res);\n\t\treturn;\n\t}\n\n\tFileUpload.redirectToFile(fileUrl, req, res);\n};\n\nconst copy: FileUploadClass['copy'] = async function (this: FileUploadClass, file, out) {\n\tconst fileUrl = await this.store.getRedirectURL(file);\n\tif (!fileUrl) {\n\t\tout.end();\n\t\treturn;\n\t}\n\n\tconst request = /^https:/.test(fileUrl) ? https : http;\n\treturn new Promise((resolve) => {\n\t\trequest.get(fileUrl, (fileRes) => fileRes.pipe(out).on('finish', () => resolve()));\n\t});\n};\n\nconst AmazonS3Uploads = new FileUploadClass({\n\tname: 'AmazonS3:Uploads',\n\tget,\n\tcopy,\n\t// store setted bellow\n});\n\nconst AmazonS3Avatars = new FileUploadClass({\n\tname: 'AmazonS3:Avatars',\n\tget,\n\tcopy,\n\t// store setted bellow\n});\n\nconst AmazonS3UserDataFiles = new FileUploadClass({\n\tname: 'AmazonS3:UserDataFiles',\n\tget,\n\tcopy,\n\t// store setted bellow\n});\n\nconst configure = _.debounce(() => {\n\tconst Bucket = settings.get<string>('FileUpload_S3_Bucket');\n\tconst Acl = settings.get<string>('FileUpload_S3_Acl');\n\tconst AWSAccessKeyId = settings.get<string>('FileUpload_S3_AWSAccessKeyId');\n\tconst AWSSecretAccessKey = settings.get<string>('FileUpload_S3_AWSSecretAccessKey');\n\tconst URLExpiryTimeSpan = settings.get<number>('FileUpload_S3_URLExpiryTimeSpan');\n\tconst Region = settings.get<string>('FileUpload_S3_Region');\n\tconst SignatureVersion = settings.get<string>('FileUpload_S3_SignatureVersion');\n\tconst ForcePathStyle = settings.get<boolean>('FileUpload_S3_ForcePathStyle');\n\t// const CDN = RocketChat.settings.get('FileUpload_S3_CDN');\n\tconst BucketURL = settings.get<string>('FileUpload_S3_BucketURL');\n\n\tif (!Bucket) {\n\t\treturn;\n\t}\n\n\tconst config: Omit<S3Options, 'name' | 'getPath'> = {\n\t\tconnection: {\n\t\t\tsignatureVersion: SignatureVersion,\n\t\t\ts3ForcePathStyle: ForcePathStyle,\n\t\t\tparams: {\n\t\t\t\tBucket,\n\t\t\t\tACL: Acl,\n\t\t\t},\n\t\t\tregion: Region,\n\t\t},\n\t\tURLExpiryTimeSpan,\n\t};\n\n\tif (AWSAccessKeyId) {\n\t\tconfig.connection.accessKeyId = AWSAccessKeyId;\n\t}\n\n\tif (AWSSecretAccessKey) {\n\t\tconfig.connection.secretAccessKey = AWSSecretAccessKey;\n\t}\n\n\tif (BucketURL) {\n\t\tconfig.connection.endpoint = BucketURL;\n\t}\n\n\tAmazonS3Uploads.store = FileUpload.configureUploadsStore('AmazonS3', AmazonS3Uploads.name, config);\n\tAmazonS3Avatars.store = FileUpload.configureUploadsStore('AmazonS3', AmazonS3Avatars.name, config);\n\tAmazonS3UserDataFiles.store = FileUpload.configureUploadsStore('AmazonS3', AmazonS3UserDataFiles.name, config);\n}, 500);\n\nsettings.watchByRegex(/^FileUpload_S3_/, configure);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let http;\n    module.link(\"http\", {\n      default(v) {\n        http = v;\n      }\n    }, 0);\n    let https;\n    module.link(\"https\", {\n      default(v) {\n        https = v;\n      }\n    }, 1);\n    let _;\n    module.link(\"underscore\", {\n      default(v) {\n        _ = v;\n      }\n    }, 2);\n    let forceDownload;\n    module.link(\"./helper\", {\n      forceDownload(v) {\n        forceDownload = v;\n      }\n    }, 3);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 4);\n    let FileUploadClass, FileUpload;\n    module.link(\"../lib/FileUpload\", {\n      FileUploadClass(v) {\n        FileUploadClass = v;\n      },\n      FileUpload(v) {\n        FileUpload = v;\n      }\n    }, 5);\n    module.link(\"../../ufs/AmazonS3/server\");\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const get = async function (file, req, res) {\n      const forcedDownload = forceDownload(req);\n      const fileUrl = await this.store.getRedirectURL(file, forcedDownload);\n      if (!fileUrl || !file.store) {\n        res.end();\n        return;\n      }\n      const storeType = file.store.split(':').pop();\n      if (settings.get(\"FileUpload_S3_Proxy_\".concat(storeType))) {\n        const request = /^https:/.test(fileUrl) ? https : http;\n        FileUpload.proxyFile(file.name || '', fileUrl, forcedDownload, request, req, res);\n        return;\n      }\n      FileUpload.redirectToFile(fileUrl, req, res);\n    };\n    const copy = async function (file, out) {\n      const fileUrl = await this.store.getRedirectURL(file);\n      if (!fileUrl) {\n        out.end();\n        return;\n      }\n      const request = /^https:/.test(fileUrl) ? https : http;\n      return new Promise(resolve => {\n        request.get(fileUrl, fileRes => fileRes.pipe(out).on('finish', () => resolve()));\n      });\n    };\n    const AmazonS3Uploads = new FileUploadClass({\n      name: 'AmazonS3:Uploads',\n      get,\n      copy\n      // store setted bellow\n    });\n    const AmazonS3Avatars = new FileUploadClass({\n      name: 'AmazonS3:Avatars',\n      get,\n      copy\n      // store setted bellow\n    });\n    const AmazonS3UserDataFiles = new FileUploadClass({\n      name: 'AmazonS3:UserDataFiles',\n      get,\n      copy\n      // store setted bellow\n    });\n    const configure = _.debounce(() => {\n      const Bucket = settings.get('FileUpload_S3_Bucket');\n      const Acl = settings.get('FileUpload_S3_Acl');\n      const AWSAccessKeyId = settings.get('FileUpload_S3_AWSAccessKeyId');\n      const AWSSecretAccessKey = settings.get('FileUpload_S3_AWSSecretAccessKey');\n      const URLExpiryTimeSpan = settings.get('FileUpload_S3_URLExpiryTimeSpan');\n      const Region = settings.get('FileUpload_S3_Region');\n      const SignatureVersion = settings.get('FileUpload_S3_SignatureVersion');\n      const ForcePathStyle = settings.get('FileUpload_S3_ForcePathStyle');\n      // const CDN = RocketChat.settings.get('FileUpload_S3_CDN');\n      const BucketURL = settings.get('FileUpload_S3_BucketURL');\n      if (!Bucket) {\n        return;\n      }\n      const config = {\n        connection: {\n          signatureVersion: SignatureVersion,\n          s3ForcePathStyle: ForcePathStyle,\n          params: {\n            Bucket,\n            ACL: Acl\n          },\n          region: Region\n        },\n        URLExpiryTimeSpan\n      };\n      if (AWSAccessKeyId) {\n        config.connection.accessKeyId = AWSAccessKeyId;\n      }\n      if (AWSSecretAccessKey) {\n        config.connection.secretAccessKey = AWSSecretAccessKey;\n      }\n      if (BucketURL) {\n        config.connection.endpoint = BucketURL;\n      }\n      AmazonS3Uploads.store = FileUpload.configureUploadsStore('AmazonS3', AmazonS3Uploads.name, config);\n      AmazonS3Avatars.store = FileUpload.configureUploadsStore('AmazonS3', AmazonS3Avatars.name, config);\n      AmazonS3UserDataFiles.store = FileUpload.configureUploadsStore('AmazonS3', AmazonS3UserDataFiles.name, config);\n    }, 500);\n    settings.watchByRegex(/^FileUpload_S3_/, configure);\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["http","module","link","default","v","https","_","forceDownload","settings","FileUploadClass","FileUpload","__reifyWaitForDeps__","get","file","req","res","forcedDownload","fileUrl","store","getRedirectURL","end","storeType","split","pop","concat","request","test","proxyFile","name","redirectToFile","copy","out","Promise","resolve","fileRes","pipe","on","AmazonS3Uploads","AmazonS3Avatars","AmazonS3UserDataFiles","configure","debounce","Bucket","Acl","AWSAccessKeyId","AWSSecretAccessKey","URLExpiryTimeSpan","Region","SignatureVersion","ForcePathStyle","BucketURL","config","connection","signatureVersion","s3ForcePathStyle","params","ACL","region","accessKeyId","secretAccessKey","endpoint","configureUploadsStore","watchByRegex","__reify_async_result__","_reifyError","self","async"],"sources":["app/file-upload/server/config/AmazonS3.ts"],"sourcesContent":["import http from 'http';\nimport https from 'https';\n\nimport _ from 'underscore';\n\nimport { forceDownload } from './helper';\nimport { settings } from '../../../settings/server';\nimport type { S3Options } from '../../ufs/AmazonS3/server';\nimport { FileUploadClass, FileUpload } from '../lib/FileUpload';\nimport '../../ufs/AmazonS3/server';\n\nconst get: FileUploadClass['get'] = async function (this: FileUploadClass, file, req, res) {\n\tconst forcedDownload = forceDownload(req);\n\n\tconst fileUrl = await this.store.getRedirectURL(file, forcedDownload);\n\tif (!fileUrl || !file.store) {\n\t\tres.end();\n\t\treturn;\n\t}\n\n\tconst storeType = file.store.split(':').pop();\n\tif (settings.get(`FileUpload_S3_Proxy_${storeType}`)) {\n\t\tconst request = /^https:/.test(fileUrl) ? https : http;\n\n\t\tFileUpload.proxyFile(file.name || '', fileUrl, forcedDownload, request, req, res);\n\t\treturn;\n\t}\n\n\tFileUpload.redirectToFile(fileUrl, req, res);\n};\n\nconst copy: FileUploadClass['copy'] = async function (this: FileUploadClass, file, out) {\n\tconst fileUrl = await this.store.getRedirectURL(file);\n\tif (!fileUrl) {\n\t\tout.end();\n\t\treturn;\n\t}\n\n\tconst request = /^https:/.test(fileUrl) ? https : http;\n\treturn new Promise((resolve) => {\n\t\trequest.get(fileUrl, (fileRes) => fileRes.pipe(out).on('finish', () => resolve()));\n\t});\n};\n\nconst AmazonS3Uploads = new FileUploadClass({\n\tname: 'AmazonS3:Uploads',\n\tget,\n\tcopy,\n\t// store setted bellow\n});\n\nconst AmazonS3Avatars = new FileUploadClass({\n\tname: 'AmazonS3:Avatars',\n\tget,\n\tcopy,\n\t// store setted bellow\n});\n\nconst AmazonS3UserDataFiles = new FileUploadClass({\n\tname: 'AmazonS3:UserDataFiles',\n\tget,\n\tcopy,\n\t// store setted bellow\n});\n\nconst configure = _.debounce(() => {\n\tconst Bucket = settings.get<string>('FileUpload_S3_Bucket');\n\tconst Acl = settings.get<string>('FileUpload_S3_Acl');\n\tconst AWSAccessKeyId = settings.get<string>('FileUpload_S3_AWSAccessKeyId');\n\tconst AWSSecretAccessKey = settings.get<string>('FileUpload_S3_AWSSecretAccessKey');\n\tconst URLExpiryTimeSpan = settings.get<number>('FileUpload_S3_URLExpiryTimeSpan');\n\tconst Region = settings.get<string>('FileUpload_S3_Region');\n\tconst SignatureVersion = settings.get<string>('FileUpload_S3_SignatureVersion');\n\tconst ForcePathStyle = settings.get<boolean>('FileUpload_S3_ForcePathStyle');\n\t// const CDN = RocketChat.settings.get('FileUpload_S3_CDN');\n\tconst BucketURL = settings.get<string>('FileUpload_S3_BucketURL');\n\n\tif (!Bucket) {\n\t\treturn;\n\t}\n\n\tconst config: Omit<S3Options, 'name' | 'getPath'> = {\n\t\tconnection: {\n\t\t\tsignatureVersion: SignatureVersion,\n\t\t\ts3ForcePathStyle: ForcePathStyle,\n\t\t\tparams: {\n\t\t\t\tBucket,\n\t\t\t\tACL: Acl,\n\t\t\t},\n\t\t\tregion: Region,\n\t\t},\n\t\tURLExpiryTimeSpan,\n\t};\n\n\tif (AWSAccessKeyId) {\n\t\tconfig.connection.accessKeyId = AWSAccessKeyId;\n\t}\n\n\tif (AWSSecretAccessKey) {\n\t\tconfig.connection.secretAccessKey = AWSSecretAccessKey;\n\t}\n\n\tif (BucketURL) {\n\t\tconfig.connection.endpoint = BucketURL;\n\t}\n\n\tAmazonS3Uploads.store = FileUpload.configureUploadsStore('AmazonS3', AmazonS3Uploads.name, config);\n\tAmazonS3Avatars.store = FileUpload.configureUploadsStore('AmazonS3', AmazonS3Avatars.name, config);\n\tAmazonS3UserDataFiles.store = FileUpload.configureUploadsStore('AmazonS3', AmazonS3UserDataFiles.name, config);\n}, 500);\n\nsettings.watchByRegex(/^FileUpload_S3_/, configure);\n"],"mappings":";;;IAAA,IAAAA,IAAO;IAAAC,MAAI,CAAAC,IAAM,OAAO;MAAAC,QAAAC,CAAA;QAAAJ,IAAA,GAAAI,CAAA;MAAA;IAAA;IAAA,IAAAC,KAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAC,QAAAC,CAAA;QAAAC,KAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,CAAA;IAAAL,MAAA,CAAAC,IAAA;MAAAC,QAAAC,CAAA;QAAAE,CAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,aAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,cAAAH,CAAA;QAAAG,aAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,QAAA;IAAAP,MAAA,CAAAC,IAAA;MAAAM,SAAAJ,CAAA;QAAAI,QAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,eAAA,EAAAC,UAAA;IAAAT,MAAA,CAAAC,IAAA;MAAAO,gBAAAL,CAAA;QAAAK,eAAA,GAAAL,CAAA;MAAA;MAAAM,WAAAN,CAAA;QAAAM,UAAA,GAAAN,CAAA;MAAA;IAAA;IAAAH,MAAA,CAAAC,IAAA;IAAA,IAAAS,oBAAA,WAAAA,oBAAA;IAWxB,MAAMC,GAAG,GAA2B,eAAAA,CAAuCC,IAAI,EAAEC,GAAG,EAAEC,GAAG;MACxF,MAAMC,cAAc,GAAGT,aAAa,CAACO,GAAG,CAAC;MAEzC,MAAMG,OAAO,GAAG,MAAM,IAAI,CAACC,KAAK,CAACC,cAAc,CAACN,IAAI,EAAEG,cAAc,CAAC;MACrE,IAAI,CAACC,OAAO,IAAI,CAACJ,IAAI,CAACK,KAAK,EAAE;QAC5BH,GAAG,CAACK,GAAG,EAAE;QACT;MACD;MAEA,MAAMC,SAAS,GAAGR,IAAI,CAACK,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE;MAC7C,IAAIf,QAAQ,CAACI,GAAG,wBAAAY,MAAA,CAAwBH,SAAS,CAAE,CAAC,EAAE;QACrD,MAAMI,OAAO,GAAG,SAAS,CAACC,IAAI,CAACT,OAAO,CAAC,GAAGZ,KAAK,GAAGL,IAAI;QAEtDU,UAAU,CAACiB,SAAS,CAACd,IAAI,CAACe,IAAI,IAAI,EAAE,EAAEX,OAAO,EAAED,cAAc,EAAES,OAAO,EAAEX,GAAG,EAAEC,GAAG,CAAC;QACjF;MACD;MAEAL,UAAU,CAACmB,cAAc,CAACZ,OAAO,EAAEH,GAAG,EAAEC,GAAG,CAAC;IAC7C,CAAC;IAED,MAAMe,IAAI,GAA4B,eAAAA,CAAuCjB,IAAI,EAAEkB,GAAG;MACrF,MAAMd,OAAO,GAAG,MAAM,IAAI,CAACC,KAAK,CAACC,cAAc,CAACN,IAAI,CAAC;MACrD,IAAI,CAACI,OAAO,EAAE;QACbc,GAAG,CAACX,GAAG,EAAE;QACT;MACD;MAEA,MAAMK,OAAO,GAAG,SAAS,CAACC,IAAI,CAACT,OAAO,CAAC,GAAGZ,KAAK,GAAGL,IAAI;MACtD,OAAO,IAAIgC,OAAO,CAAEC,OAAO,IAAI;QAC9BR,OAAO,CAACb,GAAG,CAACK,OAAO,EAAGiB,OAAO,IAAKA,OAAO,CAACC,IAAI,CAACJ,GAAG,CAAC,CAACK,EAAE,CAAC,QAAQ,EAAE,MAAMH,OAAO,EAAE,CAAC,CAAC;MACnF,CAAC,CAAC;IACH,CAAC;IAED,MAAMI,eAAe,GAAG,IAAI5B,eAAe,CAAC;MAC3CmB,IAAI,EAAE,kBAAkB;MACxBhB,GAAG;MACHkB;MACA;KACA,CAAC;IAEF,MAAMQ,eAAe,GAAG,IAAI7B,eAAe,CAAC;MAC3CmB,IAAI,EAAE,kBAAkB;MACxBhB,GAAG;MACHkB;MACA;KACA,CAAC;IAEF,MAAMS,qBAAqB,GAAG,IAAI9B,eAAe,CAAC;MACjDmB,IAAI,EAAE,wBAAwB;MAC9BhB,GAAG;MACHkB;MACA;KACA,CAAC;IAEF,MAAMU,SAAS,GAAGlC,CAAC,CAACmC,QAAQ,CAAC,MAAK;MACjC,MAAMC,MAAM,GAAGlC,QAAQ,CAACI,GAAG,CAAS,sBAAsB,CAAC;MAC3D,MAAM+B,GAAG,GAAGnC,QAAQ,CAACI,GAAG,CAAS,mBAAmB,CAAC;MACrD,MAAMgC,cAAc,GAAGpC,QAAQ,CAACI,GAAG,CAAS,8BAA8B,CAAC;MAC3E,MAAMiC,kBAAkB,GAAGrC,QAAQ,CAACI,GAAG,CAAS,kCAAkC,CAAC;MACnF,MAAMkC,iBAAiB,GAAGtC,QAAQ,CAACI,GAAG,CAAS,iCAAiC,CAAC;MACjF,MAAMmC,MAAM,GAAGvC,QAAQ,CAACI,GAAG,CAAS,sBAAsB,CAAC;MAC3D,MAAMoC,gBAAgB,GAAGxC,QAAQ,CAACI,GAAG,CAAS,gCAAgC,CAAC;MAC/E,MAAMqC,cAAc,GAAGzC,QAAQ,CAACI,GAAG,CAAU,8BAA8B,CAAC;MAC5E;MACA,MAAMsC,SAAS,GAAG1C,QAAQ,CAACI,GAAG,CAAS,yBAAyB,CAAC;MAEjE,IAAI,CAAC8B,MAAM,EAAE;QACZ;MACD;MAEA,MAAMS,MAAM,GAAwC;QACnDC,UAAU,EAAE;UACXC,gBAAgB,EAAEL,gBAAgB;UAClCM,gBAAgB,EAAEL,cAAc;UAChCM,MAAM,EAAE;YACPb,MAAM;YACNc,GAAG,EAAEb;WACL;UACDc,MAAM,EAAEV;SACR;QACDD;OACA;MAED,IAAIF,cAAc,EAAE;QACnBO,MAAM,CAACC,UAAU,CAACM,WAAW,GAAGd,cAAc;MAC/C;MAEA,IAAIC,kBAAkB,EAAE;QACvBM,MAAM,CAACC,UAAU,CAACO,eAAe,GAAGd,kBAAkB;MACvD;MAEA,IAAIK,SAAS,EAAE;QACdC,MAAM,CAACC,UAAU,CAACQ,QAAQ,GAAGV,SAAS;MACvC;MAEAb,eAAe,CAACnB,KAAK,GAAGR,UAAU,CAACmD,qBAAqB,CAAC,UAAU,EAAExB,eAAe,CAACT,IAAI,EAAEuB,MAAM,CAAC;MAClGb,eAAe,CAACpB,KAAK,GAAGR,UAAU,CAACmD,qBAAqB,CAAC,UAAU,EAAEvB,eAAe,CAACV,IAAI,EAAEuB,MAAM,CAAC;MAClGZ,qBAAqB,CAACrB,KAAK,GAAGR,UAAU,CAACmD,qBAAqB,CAAC,UAAU,EAAEtB,qBAAqB,CAACX,IAAI,EAAEuB,MAAM,CAAC;IAC/G,CAAC,EAAE,GAAG,CAAC;IAEP3C,QAAQ,CAACsD,YAAY,CAAC,iBAAiB,EAAEtB,SAAS,CAAC;IAACuB,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"b9d2b1bc1c1cfe52a52f76d5dccc8f5c36305e87"}
