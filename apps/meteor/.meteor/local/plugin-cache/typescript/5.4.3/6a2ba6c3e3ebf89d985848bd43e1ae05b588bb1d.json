{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/getFullUserData.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/getFullUserData.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/getFullUserData.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/getFullUserData.ts","sourceRoot":"","sources":["app/lib/server/functions/getFullUserData.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\nimport { Users } from '@rocket.chat/models';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../settings/server';\n\nconst logger = new Logger('getFullUserData');\n\nconst defaultFields = {\n\tname: 1,\n\tusername: 1,\n\tnickname: 1,\n\tstatus: 1,\n\tutcOffset: 1,\n\ttype: 1,\n\tactive: 1,\n\tbio: 1,\n\treason: 1,\n\tstatusText: 1,\n\tavatarETag: 1,\n\textension: 1,\n\tfederated: 1,\n\tstatusLivechat: 1,\n} as const;\n\nconst fullFields = {\n\temails: 1,\n\tphone: 1,\n\tstatusConnection: 1,\n\tbio: 1,\n\tcreatedAt: 1,\n\tlastLogin: 1,\n\trequirePasswordChange: 1,\n\trequirePasswordChangeReason: 1,\n\troles: 1,\n\timportIds: 1,\n\tfreeSwitchExtension: 1,\n} as const;\n\nlet publicCustomFields: Record<string, 0 | 1> = {};\nlet customFields: Record<string, 0 | 1> = {};\n\nsettings.watch<string>('Accounts_CustomFields', (settingValue) => {\n\tpublicCustomFields = {};\n\tcustomFields = {};\n\n\tconst value = settingValue?.trim();\n\tif (!value) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst customFieldsOnServer = JSON.parse(value);\n\t\tObject.keys(customFieldsOnServer).forEach((key) => {\n\t\t\tconst element = customFieldsOnServer[key];\n\t\t\tif (element.public) {\n\t\t\t\tpublicCustomFields[`customFields.${key}`] = 1;\n\t\t\t}\n\t\t\tcustomFields[`customFields.${key}`] = 1;\n\t\t});\n\t} catch (e) {\n\t\tlogger.warn(`The JSON specified for \"Accounts_CustomFields\" is invalid. The following error was thrown: ${e}`);\n\t}\n});\n\nconst getCustomFields = (canViewAllInfo: boolean): Record<string, 0 | 1> => (canViewAllInfo ? customFields : publicCustomFields);\n\nconst getFields = (canViewAllInfo: boolean): Record<string, 0 | 1> => ({\n\t...defaultFields,\n\t...(canViewAllInfo && fullFields),\n\t...getCustomFields(canViewAllInfo),\n});\n\nexport async function getFullUserDataByIdOrUsernameOrImportId(\n\tuserId: string,\n\tsearchValue: string,\n\tsearchType: 'id' | 'username' | 'importId',\n): Promise<IUser | null> {\n\tconst caller = await Users.findOneById(userId, { projection: { username: 1, importIds: 1 } });\n\tif (!caller) {\n\t\treturn null;\n\t}\n\tconst myself =\n\t\t(searchType === 'id' && searchValue === userId) ||\n\t\t(searchType === 'username' && searchValue === caller.username) ||\n\t\t(searchType === 'importId' && caller.importIds?.includes(searchValue));\n\tconst canViewAllInfo = !!myself || (await hasPermissionAsync(userId, 'view-full-other-user-info'));\n\tconst canViewExtension = !!myself || (await hasPermissionAsync(userId, 'view-user-voip-extension'));\n\n\t// Only search for importId if the user has permission to view the import id\n\tif (searchType === 'importId' && !canViewAllInfo) {\n\t\treturn null;\n\t}\n\n\tconst fields = getFields(canViewAllInfo);\n\n\tconst options = {\n\t\tprojection: {\n\t\t\t...fields,\n\t\t\t...(canViewExtension && { freeSwitchExtension: 1 }),\n\t\t\t...(myself && { services: 1 }),\n\t\t},\n\t};\n\n\tconst user = await (searchType === 'importId'\n\t\t? Users.findOneByImportId(searchValue, options)\n\t\t: Users.findOneByIdOrUsername(searchValue, options));\n\tif (!user) {\n\t\treturn null;\n\t}\n\n\tuser.canViewAllInfo = canViewAllInfo;\n\n\tif (user?.services?.password) {\n\t\t(user.services.password as any) = true;\n\t}\n\n\treturn user;\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/getFullUserData.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/getFullUserData.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/getFullUserData.ts","sourceRoot":"","sources":["app/lib/server/functions/getFullUserData.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\nimport { Users } from '@rocket.chat/models';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../settings/server';\n\nconst logger = new Logger('getFullUserData');\n\nconst defaultFields = {\n\tname: 1,\n\tusername: 1,\n\tnickname: 1,\n\tstatus: 1,\n\tutcOffset: 1,\n\ttype: 1,\n\tactive: 1,\n\tbio: 1,\n\treason: 1,\n\tstatusText: 1,\n\tavatarETag: 1,\n\textension: 1,\n\tfederated: 1,\n\tstatusLivechat: 1,\n} as const;\n\nconst fullFields = {\n\temails: 1,\n\tphone: 1,\n\tstatusConnection: 1,\n\tbio: 1,\n\tcreatedAt: 1,\n\tlastLogin: 1,\n\trequirePasswordChange: 1,\n\trequirePasswordChangeReason: 1,\n\troles: 1,\n\timportIds: 1,\n\tfreeSwitchExtension: 1,\n} as const;\n\nlet publicCustomFields: Record<string, 0 | 1> = {};\nlet customFields: Record<string, 0 | 1> = {};\n\nsettings.watch<string>('Accounts_CustomFields', (settingValue) => {\n\tpublicCustomFields = {};\n\tcustomFields = {};\n\n\tconst value = settingValue?.trim();\n\tif (!value) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst customFieldsOnServer = JSON.parse(value);\n\t\tObject.keys(customFieldsOnServer).forEach((key) => {\n\t\t\tconst element = customFieldsOnServer[key];\n\t\t\tif (element.public) {\n\t\t\t\tpublicCustomFields[`customFields.${key}`] = 1;\n\t\t\t}\n\t\t\tcustomFields[`customFields.${key}`] = 1;\n\t\t});\n\t} catch (e) {\n\t\tlogger.warn(`The JSON specified for \"Accounts_CustomFields\" is invalid. The following error was thrown: ${e}`);\n\t}\n});\n\nconst getCustomFields = (canViewAllInfo: boolean): Record<string, 0 | 1> => (canViewAllInfo ? customFields : publicCustomFields);\n\nconst getFields = (canViewAllInfo: boolean): Record<string, 0 | 1> => ({\n\t...defaultFields,\n\t...(canViewAllInfo && fullFields),\n\t...getCustomFields(canViewAllInfo),\n});\n\nexport async function getFullUserDataByIdOrUsernameOrImportId(\n\tuserId: string,\n\tsearchValue: string,\n\tsearchType: 'id' | 'username' | 'importId',\n): Promise<IUser | null> {\n\tconst caller = await Users.findOneById(userId, { projection: { username: 1, importIds: 1 } });\n\tif (!caller) {\n\t\treturn null;\n\t}\n\tconst myself =\n\t\t(searchType === 'id' && searchValue === userId) ||\n\t\t(searchType === 'username' && searchValue === caller.username) ||\n\t\t(searchType === 'importId' && caller.importIds?.includes(searchValue));\n\tconst canViewAllInfo = !!myself || (await hasPermissionAsync(userId, 'view-full-other-user-info'));\n\tconst canViewExtension = !!myself || (await hasPermissionAsync(userId, 'view-user-voip-extension'));\n\n\t// Only search for importId if the user has permission to view the import id\n\tif (searchType === 'importId' && !canViewAllInfo) {\n\t\treturn null;\n\t}\n\n\tconst fields = getFields(canViewAllInfo);\n\n\tconst options = {\n\t\tprojection: {\n\t\t\t...fields,\n\t\t\t...(canViewExtension && { freeSwitchExtension: 1 }),\n\t\t\t...(myself && { services: 1 }),\n\t\t},\n\t};\n\n\tconst user = await (searchType === 'importId'\n\t\t? Users.findOneByImportId(searchValue, options)\n\t\t: Users.findOneByIdOrUsername(searchValue, options));\n\tif (!user) {\n\t\treturn null;\n\t}\n\n\tuser.canViewAllInfo = canViewAllInfo;\n\n\tif (user?.services?.password) {\n\t\t(user.services.password as any) = true;\n\t}\n\n\treturn user;\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      getFullUserDataByIdOrUsernameOrImportId: () => getFullUserDataByIdOrUsernameOrImportId\n    });\n    let Logger;\n    module.link(\"@rocket.chat/logger\", {\n      Logger(v) {\n        Logger = v;\n      }\n    }, 0);\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const logger = new Logger('getFullUserData');\n    const defaultFields = {\n      name: 1,\n      username: 1,\n      nickname: 1,\n      status: 1,\n      utcOffset: 1,\n      type: 1,\n      active: 1,\n      bio: 1,\n      reason: 1,\n      statusText: 1,\n      avatarETag: 1,\n      extension: 1,\n      federated: 1,\n      statusLivechat: 1\n    };\n    const fullFields = {\n      emails: 1,\n      phone: 1,\n      statusConnection: 1,\n      bio: 1,\n      createdAt: 1,\n      lastLogin: 1,\n      requirePasswordChange: 1,\n      requirePasswordChangeReason: 1,\n      roles: 1,\n      importIds: 1,\n      freeSwitchExtension: 1\n    };\n    let publicCustomFields = {};\n    let customFields = {};\n    settings.watch('Accounts_CustomFields', settingValue => {\n      publicCustomFields = {};\n      customFields = {};\n      const value = settingValue === null || settingValue === void 0 ? void 0 : settingValue.trim();\n      if (!value) {\n        return;\n      }\n      try {\n        const customFieldsOnServer = JSON.parse(value);\n        Object.keys(customFieldsOnServer).forEach(key => {\n          const element = customFieldsOnServer[key];\n          if (element.public) {\n            publicCustomFields[\"customFields.\".concat(key)] = 1;\n          }\n          customFields[\"customFields.\".concat(key)] = 1;\n        });\n      } catch (e) {\n        logger.warn(\"The JSON specified for \\\"Accounts_CustomFields\\\" is invalid. The following error was thrown: \".concat(e));\n      }\n    });\n    const getCustomFields = canViewAllInfo => canViewAllInfo ? customFields : publicCustomFields;\n    const getFields = canViewAllInfo => _objectSpread(_objectSpread(_objectSpread({}, defaultFields), canViewAllInfo && fullFields), getCustomFields(canViewAllInfo));\n    async function getFullUserDataByIdOrUsernameOrImportId(userId, searchValue, searchType) {\n      var _caller$importIds, _user$services;\n      const caller = await Users.findOneById(userId, {\n        projection: {\n          username: 1,\n          importIds: 1\n        }\n      });\n      if (!caller) {\n        return null;\n      }\n      const myself = searchType === 'id' && searchValue === userId || searchType === 'username' && searchValue === caller.username || searchType === 'importId' && ((_caller$importIds = caller.importIds) === null || _caller$importIds === void 0 ? void 0 : _caller$importIds.includes(searchValue));\n      const canViewAllInfo = !!myself || (await hasPermissionAsync(userId, 'view-full-other-user-info'));\n      const canViewExtension = !!myself || (await hasPermissionAsync(userId, 'view-user-voip-extension'));\n      // Only search for importId if the user has permission to view the import id\n      if (searchType === 'importId' && !canViewAllInfo) {\n        return null;\n      }\n      const fields = getFields(canViewAllInfo);\n      const options = {\n        projection: _objectSpread(_objectSpread(_objectSpread({}, fields), canViewExtension && {\n          freeSwitchExtension: 1\n        }), myself && {\n          services: 1\n        })\n      };\n      const user = await (searchType === 'importId' ? Users.findOneByImportId(searchValue, options) : Users.findOneByIdOrUsername(searchValue, options));\n      if (!user) {\n        return null;\n      }\n      user.canViewAllInfo = canViewAllInfo;\n      if (user !== null && user !== void 0 && (_user$services = user.services) !== null && _user$services !== void 0 && _user$services.password) {\n        user.services.password = true;\n      }\n      return user;\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","getFullUserDataByIdOrUsernameOrImportId","Logger","Users","hasPermissionAsync","settings","__reifyWaitForDeps__","logger","defaultFields","name","username","nickname","status","utcOffset","type","active","bio","reason","statusText","avatarETag","extension","federated","statusLivechat","fullFields","emails","phone","statusConnection","createdAt","lastLogin","requirePasswordChange","requirePasswordChangeReason","roles","importIds","freeSwitchExtension","publicCustomFields","customFields","watch","settingValue","value","trim","customFieldsOnServer","JSON","parse","Object","keys","forEach","key","element","public","concat","e","warn","getCustomFields","canViewAllInfo","getFields","userId","searchValue","searchType","_caller$importIds","_user$services","caller","findOneById","projection","myself","includes","canViewExtension","fields","options","services","user","findOneByImportId","findOneByIdOrUsername","password","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/getFullUserData.ts"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\nimport { Users } from '@rocket.chat/models';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../settings/server';\n\nconst logger = new Logger('getFullUserData');\n\nconst defaultFields = {\n\tname: 1,\n\tusername: 1,\n\tnickname: 1,\n\tstatus: 1,\n\tutcOffset: 1,\n\ttype: 1,\n\tactive: 1,\n\tbio: 1,\n\treason: 1,\n\tstatusText: 1,\n\tavatarETag: 1,\n\textension: 1,\n\tfederated: 1,\n\tstatusLivechat: 1,\n} as const;\n\nconst fullFields = {\n\temails: 1,\n\tphone: 1,\n\tstatusConnection: 1,\n\tbio: 1,\n\tcreatedAt: 1,\n\tlastLogin: 1,\n\trequirePasswordChange: 1,\n\trequirePasswordChangeReason: 1,\n\troles: 1,\n\timportIds: 1,\n\tfreeSwitchExtension: 1,\n} as const;\n\nlet publicCustomFields: Record<string, 0 | 1> = {};\nlet customFields: Record<string, 0 | 1> = {};\n\nsettings.watch<string>('Accounts_CustomFields', (settingValue) => {\n\tpublicCustomFields = {};\n\tcustomFields = {};\n\n\tconst value = settingValue?.trim();\n\tif (!value) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst customFieldsOnServer = JSON.parse(value);\n\t\tObject.keys(customFieldsOnServer).forEach((key) => {\n\t\t\tconst element = customFieldsOnServer[key];\n\t\t\tif (element.public) {\n\t\t\t\tpublicCustomFields[`customFields.${key}`] = 1;\n\t\t\t}\n\t\t\tcustomFields[`customFields.${key}`] = 1;\n\t\t});\n\t} catch (e) {\n\t\tlogger.warn(`The JSON specified for \"Accounts_CustomFields\" is invalid. The following error was thrown: ${e}`);\n\t}\n});\n\nconst getCustomFields = (canViewAllInfo: boolean): Record<string, 0 | 1> => (canViewAllInfo ? customFields : publicCustomFields);\n\nconst getFields = (canViewAllInfo: boolean): Record<string, 0 | 1> => ({\n\t...defaultFields,\n\t...(canViewAllInfo && fullFields),\n\t...getCustomFields(canViewAllInfo),\n});\n\nexport async function getFullUserDataByIdOrUsernameOrImportId(\n\tuserId: string,\n\tsearchValue: string,\n\tsearchType: 'id' | 'username' | 'importId',\n): Promise<IUser | null> {\n\tconst caller = await Users.findOneById(userId, { projection: { username: 1, importIds: 1 } });\n\tif (!caller) {\n\t\treturn null;\n\t}\n\tconst myself =\n\t\t(searchType === 'id' && searchValue === userId) ||\n\t\t(searchType === 'username' && searchValue === caller.username) ||\n\t\t(searchType === 'importId' && caller.importIds?.includes(searchValue));\n\tconst canViewAllInfo = !!myself || (await hasPermissionAsync(userId, 'view-full-other-user-info'));\n\tconst canViewExtension = !!myself || (await hasPermissionAsync(userId, 'view-user-voip-extension'));\n\n\t// Only search for importId if the user has permission to view the import id\n\tif (searchType === 'importId' && !canViewAllInfo) {\n\t\treturn null;\n\t}\n\n\tconst fields = getFields(canViewAllInfo);\n\n\tconst options = {\n\t\tprojection: {\n\t\t\t...fields,\n\t\t\t...(canViewExtension && { freeSwitchExtension: 1 }),\n\t\t\t...(myself && { services: 1 }),\n\t\t},\n\t};\n\n\tconst user = await (searchType === 'importId'\n\t\t? Users.findOneByImportId(searchValue, options)\n\t\t: Users.findOneByIdOrUsername(searchValue, options));\n\tif (!user) {\n\t\treturn null;\n\t}\n\n\tuser.canViewAllInfo = canViewAllInfo;\n\n\tif (user?.services?.password) {\n\t\t(user.services.password as any) = true;\n\t}\n\n\treturn user;\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"6a2ba6c3e3ebf89d985848bd43e1ae05b588bb1d"}
