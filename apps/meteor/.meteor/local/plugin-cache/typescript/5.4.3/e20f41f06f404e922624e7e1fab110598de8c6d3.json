{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveUser/validateUserEditing.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/saveUser/validateUserEditing.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveUser/validateUserEditing.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/saveUser/validateUserEditing.ts","sourceRoot":"","sources":["app/lib/server/functions/saveUser/validateUserEditing.ts"],"names":[],"mappings":"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","sourcesContent":["import { MeteorError } from '@rocket.chat/core-services';\nimport type { IUser, RequiredField } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\n\nimport type { SaveUserData } from './saveUser';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../../settings/server';\n\nconst isEditingUserRoles = (previousRoles: IUser['roles'], newRoles?: IUser['roles']) =>\n\tnewRoles !== undefined &&\n\t(newRoles.some((item) => !previousRoles.includes(item)) || previousRoles.some((item) => !newRoles.includes(item)));\nconst isEditingField = (previousValue?: string, newValue?: string) => typeof newValue !== 'undefined' && newValue !== previousValue;\n\n/**\n * Validate permissions to edit user fields\n *\n * @param {string} userId\n * @param {{ _id: string, roles?: string[], username?: string, name?: string, statusText?: string, email?: string, password?: string}} userData\n */\nexport async function validateUserEditing(userId: IUser['_id'], userData: RequiredField<SaveUserData, '_id'>): Promise<void> {\n\tconst editingMyself = userData._id && userId === userData._id;\n\n\tconst canEditOtherUserInfo = await hasPermissionAsync(userId, 'edit-other-user-info');\n\tconst canEditOtherUserPassword = await hasPermissionAsync(userId, 'edit-other-user-password');\n\tconst user = await Users.findOneById(userData._id);\n\n\tif (!user) {\n\t\tthrow new MeteorError('error-invalid-user', 'Invalid user');\n\t}\n\n\tif (isEditingUserRoles(user.roles, userData.roles) && !(await hasPermissionAsync(userId, 'assign-roles'))) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Assign roles is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Assign_role',\n\t\t});\n\t}\n\n\tif (!settings.get('Accounts_AllowUserProfileChange') && !canEditOtherUserInfo && !canEditOtherUserPassword) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit user profile is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tisEditingField(user.username, userData.username) &&\n\t\t!settings.get('Accounts_AllowUsernameChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit username is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tisEditingField(user.statusText, userData.statusText) &&\n\t\t!settings.get('Accounts_AllowUserStatusMessageChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit user status is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tisEditingField(user.name, userData.name) &&\n\t\t!settings.get('Accounts_AllowRealNameChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit user real name is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tuser.emails?.[0] &&\n\t\tisEditingField(user.emails[0].address, userData.email) &&\n\t\t!settings.get('Accounts_AllowEmailChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit user email is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (userData.password && !settings.get('Accounts_AllowPasswordChange') && (!canEditOtherUserPassword || editingMyself)) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit user password is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveUser/validateUserEditing.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/saveUser/validateUserEditing.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/saveUser/validateUserEditing.ts","sourceRoot":"","sources":["app/lib/server/functions/saveUser/validateUserEditing.ts"],"names":[],"mappings":"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","sourcesContent":["import { MeteorError } from '@rocket.chat/core-services';\nimport type { IUser, RequiredField } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\n\nimport type { SaveUserData } from './saveUser';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../../settings/server';\n\nconst isEditingUserRoles = (previousRoles: IUser['roles'], newRoles?: IUser['roles']) =>\n\tnewRoles !== undefined &&\n\t(newRoles.some((item) => !previousRoles.includes(item)) || previousRoles.some((item) => !newRoles.includes(item)));\nconst isEditingField = (previousValue?: string, newValue?: string) => typeof newValue !== 'undefined' && newValue !== previousValue;\n\n/**\n * Validate permissions to edit user fields\n *\n * @param {string} userId\n * @param {{ _id: string, roles?: string[], username?: string, name?: string, statusText?: string, email?: string, password?: string}} userData\n */\nexport async function validateUserEditing(userId: IUser['_id'], userData: RequiredField<SaveUserData, '_id'>): Promise<void> {\n\tconst editingMyself = userData._id && userId === userData._id;\n\n\tconst canEditOtherUserInfo = await hasPermissionAsync(userId, 'edit-other-user-info');\n\tconst canEditOtherUserPassword = await hasPermissionAsync(userId, 'edit-other-user-password');\n\tconst user = await Users.findOneById(userData._id);\n\n\tif (!user) {\n\t\tthrow new MeteorError('error-invalid-user', 'Invalid user');\n\t}\n\n\tif (isEditingUserRoles(user.roles, userData.roles) && !(await hasPermissionAsync(userId, 'assign-roles'))) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Assign roles is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Assign_role',\n\t\t});\n\t}\n\n\tif (!settings.get('Accounts_AllowUserProfileChange') && !canEditOtherUserInfo && !canEditOtherUserPassword) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit user profile is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tisEditingField(user.username, userData.username) &&\n\t\t!settings.get('Accounts_AllowUsernameChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit username is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tisEditingField(user.statusText, userData.statusText) &&\n\t\t!settings.get('Accounts_AllowUserStatusMessageChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit user status is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tisEditingField(user.name, userData.name) &&\n\t\t!settings.get('Accounts_AllowRealNameChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit user real name is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tuser.emails?.[0] &&\n\t\tisEditingField(user.emails[0].address, userData.email) &&\n\t\t!settings.get('Accounts_AllowEmailChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit user email is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (userData.password && !settings.get('Accounts_AllowPasswordChange') && (!canEditOtherUserPassword || editingMyself)) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit user password is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      validateUserEditing: () => validateUserEditing\n    });\n    let MeteorError;\n    module.link(\"@rocket.chat/core-services\", {\n      MeteorError(v) {\n        MeteorError = v;\n      }\n    }, 0);\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let hasPermissionAsync;\n    module.link(\"../../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const isEditingUserRoles = (previousRoles, newRoles) => newRoles !== undefined && (newRoles.some(item => !previousRoles.includes(item)) || previousRoles.some(item => !newRoles.includes(item)));\n    const isEditingField = (previousValue, newValue) => typeof newValue !== 'undefined' && newValue !== previousValue;\n    /**\n     * Validate permissions to edit user fields\n     *\n     * @param {string} userId\n     * @param {{ _id: string, roles?: string[], username?: string, name?: string, statusText?: string, email?: string, password?: string}} userData\n     */\n    async function validateUserEditing(userId, userData) {\n      var _user$emails;\n      const editingMyself = userData._id && userId === userData._id;\n      const canEditOtherUserInfo = await hasPermissionAsync(userId, 'edit-other-user-info');\n      const canEditOtherUserPassword = await hasPermissionAsync(userId, 'edit-other-user-password');\n      const user = await Users.findOneById(userData._id);\n      if (!user) {\n        throw new MeteorError('error-invalid-user', 'Invalid user');\n      }\n      if (isEditingUserRoles(user.roles, userData.roles) && !(await hasPermissionAsync(userId, 'assign-roles'))) {\n        throw new MeteorError('error-action-not-allowed', 'Assign roles is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Assign_role'\n        });\n      }\n      if (!settings.get('Accounts_AllowUserProfileChange') && !canEditOtherUserInfo && !canEditOtherUserPassword) {\n        throw new MeteorError('error-action-not-allowed', 'Edit user profile is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Update_user'\n        });\n      }\n      if (isEditingField(user.username, userData.username) && !settings.get('Accounts_AllowUsernameChange') && (!canEditOtherUserInfo || editingMyself)) {\n        throw new MeteorError('error-action-not-allowed', 'Edit username is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Update_user'\n        });\n      }\n      if (isEditingField(user.statusText, userData.statusText) && !settings.get('Accounts_AllowUserStatusMessageChange') && (!canEditOtherUserInfo || editingMyself)) {\n        throw new MeteorError('error-action-not-allowed', 'Edit user status is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Update_user'\n        });\n      }\n      if (isEditingField(user.name, userData.name) && !settings.get('Accounts_AllowRealNameChange') && (!canEditOtherUserInfo || editingMyself)) {\n        throw new MeteorError('error-action-not-allowed', 'Edit user real name is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Update_user'\n        });\n      }\n      if ((_user$emails = user.emails) !== null && _user$emails !== void 0 && _user$emails[0] && isEditingField(user.emails[0].address, userData.email) && !settings.get('Accounts_AllowEmailChange') && (!canEditOtherUserInfo || editingMyself)) {\n        throw new MeteorError('error-action-not-allowed', 'Edit user email is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Update_user'\n        });\n      }\n      if (userData.password && !settings.get('Accounts_AllowPasswordChange') && (!canEditOtherUserPassword || editingMyself)) {\n        throw new MeteorError('error-action-not-allowed', 'Edit user password is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Update_user'\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","validateUserEditing","MeteorError","link","v","Users","hasPermissionAsync","settings","__reifyWaitForDeps__","isEditingUserRoles","previousRoles","newRoles","undefined","some","item","includes","isEditingField","previousValue","newValue","userId","userData","_user$emails","editingMyself","_id","canEditOtherUserInfo","canEditOtherUserPassword","user","findOneById","roles","method","action","get","username","statusText","name","emails","address","email","password","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/saveUser/validateUserEditing.ts"],"sourcesContent":["import { MeteorError } from '@rocket.chat/core-services';\nimport type { IUser, RequiredField } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\n\nimport type { SaveUserData } from './saveUser';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../../settings/server';\n\nconst isEditingUserRoles = (previousRoles: IUser['roles'], newRoles?: IUser['roles']) =>\n\tnewRoles !== undefined &&\n\t(newRoles.some((item) => !previousRoles.includes(item)) || previousRoles.some((item) => !newRoles.includes(item)));\nconst isEditingField = (previousValue?: string, newValue?: string) => typeof newValue !== 'undefined' && newValue !== previousValue;\n\n/**\n * Validate permissions to edit user fields\n *\n * @param {string} userId\n * @param {{ _id: string, roles?: string[], username?: string, name?: string, statusText?: string, email?: string, password?: string}} userData\n */\nexport async function validateUserEditing(userId: IUser['_id'], userData: RequiredField<SaveUserData, '_id'>): Promise<void> {\n\tconst editingMyself = userData._id && userId === userData._id;\n\n\tconst canEditOtherUserInfo = await hasPermissionAsync(userId, 'edit-other-user-info');\n\tconst canEditOtherUserPassword = await hasPermissionAsync(userId, 'edit-other-user-password');\n\tconst user = await Users.findOneById(userData._id);\n\n\tif (!user) {\n\t\tthrow new MeteorError('error-invalid-user', 'Invalid user');\n\t}\n\n\tif (isEditingUserRoles(user.roles, userData.roles) && !(await hasPermissionAsync(userId, 'assign-roles'))) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Assign roles is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Assign_role',\n\t\t});\n\t}\n\n\tif (!settings.get('Accounts_AllowUserProfileChange') && !canEditOtherUserInfo && !canEditOtherUserPassword) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit user profile is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tisEditingField(user.username, userData.username) &&\n\t\t!settings.get('Accounts_AllowUsernameChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit username is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tisEditingField(user.statusText, userData.statusText) &&\n\t\t!settings.get('Accounts_AllowUserStatusMessageChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit user status is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tisEditingField(user.name, userData.name) &&\n\t\t!settings.get('Accounts_AllowRealNameChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit user real name is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tuser.emails?.[0] &&\n\t\tisEditingField(user.emails[0].address, userData.email) &&\n\t\t!settings.get('Accounts_AllowEmailChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit user email is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (userData.password && !settings.get('Accounts_AllowPasswordChange') && (!canEditOtherUserPassword || editingMyself)) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Edit user password is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e20f41f06f404e922624e7e1fab110598de8c6d3"}
