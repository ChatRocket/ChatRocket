{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/providers/CallProvider/CallProvider.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/providers/CallProvider/CallProvider.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/providers/CallProvider/CallProvider.tsx","inputSourceMap":{"version":3,"file":"client/providers/CallProvider/CallProvider.tsx","sourceRoot":"","sources":["client/providers/CallProvider/CallProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IVoipRoom, VoipEventDataSignature, ICallerInfo, ICallDetails, ILivechatVisitor, Serialized } from '@rocket.chat/core-typings';\nimport {\n\tVoipClientEvents,\n\tisVoipEventAgentCalled,\n\tisVoipEventAgentConnected,\n\tisVoipEventCallerJoined,\n\tisVoipEventQueueMemberAdded,\n\tisVoipEventQueueMemberRemoved,\n\tisVoipEventCallAbandoned,\n\tUserState,\n} from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { Random } from '@rocket.chat/random';\nimport type { Device } from '@rocket.chat/ui-contexts';\nimport {\n\tuseRouter,\n\tuseUser,\n\tuseSetting,\n\tuseEndpoint,\n\tuseStream,\n\tuseSetOutputMediaDevice,\n\tuseSetInputMediaDevice,\n\tuseSetModal,\n\tuseTranslation,\n} from '@rocket.chat/ui-contexts';\nimport type { ReactNode } from 'react';\nimport React, { useMemo, useRef, useCallback, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport type { OutgoingByeRequest } from 'sip.js/lib/core';\n\nimport { useVoipSounds } from './hooks/useVoipSounds';\nimport type { CallContextValue } from '../../contexts/CallContext';\nimport { CallContext, useIsVoipEnterprise } from '../../contexts/CallContext';\nimport { useDialModal } from '../../hooks/useDialModal';\nimport { isOutboundClient, useVoipClient } from '../../hooks/useVoipClient';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\nimport type { QueueAggregator } from '../../lib/voip/QueueAggregator';\nimport { parseOutboundPhoneNumber } from '../../lib/voip/parseOutboundPhoneNumber';\nimport { WrapUpCallModal } from '../../voip/components/modals/WrapUpCallModal';\n\ntype NetworkState = 'online' | 'offline';\n\ntype CallProviderProps = {\n\tchildren?: ReactNode;\n};\n\nexport const CallProvider = ({ children }: CallProviderProps) => {\n\tconst [clientState, setClientState] = useState<'registered' | 'unregistered'>('unregistered');\n\n\tconst voipEnabled = useSetting('VoIP_Enabled');\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\tconst dispatchEvent = useEndpoint('POST', '/v1/voip/events');\n\tconst visitorEndpoint = useEndpoint('POST', '/v1/livechat/visitor');\n\tconst voipEndpoint = useEndpoint('GET', '/v1/voip/room');\n\tconst voipCloseRoomEndpoint = useEndpoint('POST', '/v1/voip/room.close');\n\tconst getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n\tconst setModal = useSetModal();\n\tconst t = useTranslation();\n\n\tconst result = useVoipClient();\n\tconst user = useUser();\n\tconst router = useRouter();\n\tconst setOutputMediaDevice = useSetOutputMediaDevice();\n\tconst setInputMediaDevice = useSetInputMediaDevice();\n\n\tconst hasVoIPEnterpriseLicense = useIsVoipEnterprise();\n\n\tconst remoteAudioMediaRef = useRef<HTMLAudioElement>(null); // TODO: Create a dedicated file for the AUDIO and make the controls accessible\n\n\tconst [queueCounter, setQueueCounter] = useState(0);\n\tconst [queueName, setQueueName] = useState('');\n\tconst [roomInfo, setRoomInfo] = useState<{ v: { token?: string }; rid: string }>({ v: {}, rid: '' });\n\n\tconst { openDialModal } = useDialModal();\n\n\tconst voipSounds = useVoipSounds();\n\n\tconst closeRoom = useCallback(\n\t\tasync (data = {}): Promise<void> => {\n\t\t\troomInfo &&\n\t\t\t\t(await voipCloseRoomEndpoint({\n\t\t\t\t\trid: roomInfo.rid,\n\t\t\t\t\ttoken: roomInfo.v.token || '',\n\t\t\t\t\toptions: { comment: data?.comment, tags: data?.tags },\n\t\t\t\t}));\n\t\t\trouter.navigate('/home');\n\n\t\t\tconst queueAggregator = result.voipClient?.getAggregator();\n\t\t\tif (queueAggregator) {\n\t\t\t\tqueueAggregator.callEnded();\n\t\t\t}\n\t\t},\n\t\t[router, result?.voipClient, roomInfo, voipCloseRoomEndpoint],\n\t);\n\n\tconst openWrapUpModal = useCallback((): void => {\n\t\tsetModal(() => <WrapUpCallModal closeRoom={closeRoom} />);\n\t}, [closeRoom, setModal]);\n\n\tconst changeAudioOutputDevice = useMutableCallback((selectedAudioDevice: Device): void => {\n\t\tremoteAudioMediaRef?.current &&\n\t\t\tsetOutputMediaDevice({ outputDevice: selectedAudioDevice, HTMLAudioElement: remoteAudioMediaRef.current });\n\t});\n\n\tconst changeAudioInputDevice = useMutableCallback((selectedAudioDevice: Device): void => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\t\tconst constraints = { audio: { deviceId: { exact: selectedAudioDevice.id } } };\n\n\t\t// TODO: Migrate the classes that manage MediaStream to a more react based approach (using contexts/providers perhaps)\n\t\t// For now the MediaStream management is very coupled with the VoIP client,\n\t\t// decoupling it will make it usable by other areas of the project that needs to handle MediaStreams and avoid code duplication\n\t\tresult.voipClient.changeAudioInputDevice(constraints);\n\n\t\tsetInputMediaDevice(selectedAudioDevice);\n\t});\n\n\tconst [queueAggregator, setQueueAggregator] = useState<QueueAggregator>();\n\n\tconst [networkStatus, setNetworkStatus] = useState<NetworkState>('online');\n\n\tuseEffect(() => {\n\t\tconst { voipClient } = result || {};\n\n\t\tif (!voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetQueueAggregator(voipClient.getAggregator());\n\n\t\treturn (): void => {\n\t\t\tif (clientState === 'registered') {\n\t\t\t\treturn voipClient.unregister();\n\t\t\t}\n\t\t};\n\t}, [result, clientState]);\n\n\tconst openRoom = useCallback((rid: IVoipRoom['_id']): void => {\n\t\troomCoordinator.openRouteLink('v', { rid });\n\t}, []);\n\n\tconst findOrCreateVisitor = useCallback(\n\t\tasync (caller: ICallerInfo): Promise<Serialized<ILivechatVisitor>> => {\n\t\t\tconst phone = parseOutboundPhoneNumber(caller.callerId);\n\n\t\t\tconst { contact } = await getContactBy({ phone });\n\n\t\t\tif (contact) {\n\t\t\t\treturn contact;\n\t\t\t}\n\n\t\t\tconst { visitor } = await visitorEndpoint({\n\t\t\t\tvisitor: {\n\t\t\t\t\ttoken: Random.id(),\n\t\t\t\t\tphone,\n\t\t\t\t\tname: caller.callerName || phone,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn visitor;\n\t\t},\n\t\t[getContactBy, visitorEndpoint],\n\t);\n\n\tconst createRoom = useCallback(\n\t\tasync (caller: ICallerInfo, direction: IVoipRoom['direction'] = 'inbound'): Promise<IVoipRoom['_id']> => {\n\t\t\tif (!user) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst visitor = await findOrCreateVisitor(caller);\n\t\t\t\tconst voipRoom = await voipEndpoint({ token: visitor.token, agentId: user._id, direction });\n\t\t\t\topenRoom(voipRoom.room._id);\n\t\t\t\tvoipRoom.room && setRoomInfo({ v: { token: voipRoom.room.v.token }, rid: voipRoom.room._id });\n\t\t\t\tconst queueAggregator = result.voipClient?.getAggregator();\n\t\t\t\tif (queueAggregator) {\n\t\t\t\t\tqueueAggregator.callStarted();\n\t\t\t\t}\n\t\t\t\treturn voipRoom.room._id;\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(`Error while creating a visitor ${error}`);\n\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\t\t[openRoom, result.voipClient, user, voipEndpoint, findOrCreateVisitor],\n\t);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleEventReceived = async (event: VoipEventDataSignature): Promise<void> => {\n\t\t\tif (isVoipEventAgentCalled(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.callRinging({ queuename: data.queue, callerid: data.callerId });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventAgentConnected(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.callPickedup({ queuename: data.queue, queuedcalls: data.queuedCalls, waittimeinqueue: data.waitTimeInQueue });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventCallerJoined(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.queueJoined({ queuename: data.queue, callerid: data.callerId, queuedcalls: data.queuedCalls });\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventQueueMemberAdded(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.memberAdded({ queuename: data.queue, queuedcalls: data.queuedCalls });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventQueueMemberRemoved(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.memberRemoved({ queuename: data.queue, queuedcalls: data.queuedCalls });\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventCallAbandoned(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.queueAbandoned({ queuename: data.queue, queuedcallafterabandon: data.queuedCallAfterAbandon });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconsole.warn('Unknown event received');\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/voip.events`, handleEventReceived);\n\t}, [subscribeToNotifyUser, user, queueAggregator, voipEnabled]);\n\n\t// This was causing event duplication before, so we'll leave this here for now\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn subscribeToNotifyUser(`${user._id}/call.hangup`, (event): void => {\n\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\n\t\t\tif (hasVoIPEnterpriseLicense) {\n\t\t\t\topenWrapUpModal();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcloseRoom();\n\n\t\t\tdispatchEvent({ event: VoipClientEvents['VOIP-CALL-ENDED'], rid: event.roomId });\n\t\t});\n\t}, [openWrapUpModal, queueAggregator, subscribeToNotifyUser, user, voipEnabled, dispatchEvent, hasVoIPEnterpriseLicense, closeRoom]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst offRegistered = result.voipClient.on('registered', (): void => setClientState('registered'));\n\t\tconst offUnregistered = result.voipClient.on('unregistered', (): void => setClientState('unregistered'));\n\n\t\treturn (): void => {\n\t\t\toffRegistered();\n\t\t\toffUnregistered();\n\t\t};\n\t}, [result.voipClient]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n\t\t * This code may need a revisit when we handle callinqueue differently.\n\t\t * Check clickup tasks for more details\n\t\t * https://app.clickup.com/t/22hy1k4\n\t\t * When customer called a queue (Either using skype or using internal number), call would get established\n\t\t * customer would hear agent's voice but agent would not hear anything from customer.\n\t\t * This issue was observed on unstable. It was found to be inconsistent to reproduce.\n\t\t * On some developer env, it would happen randomly. On Safari it did not happen if\n\t\t * user refreshes before taking every call.\n\t\t *\n\t\t * The reason behind this was as soon as agent accepts a call, queueCounter would change.\n\t\t * This change will trigger re-rendering of media and creation of audio element.\n\t\t * This audio element gets used by voipClient to render the remote audio.\n\t\t * Because the re-render happened, it would hold a stale reference.\n\t\t *\n\t\t * If the dom is inspected, audio element just before body is usually created by this class.\n\t\t * this audio element.srcObject contains null value. In working case, it should display\n\t\t * valid stream object.\n\t\t *\n\t\t * Reason for inconsistencies :\n\t\t * This element is utilized in VoIPUser::setupRemoteMedia\n\t\t * This function is called when webRTC receives a remote track event. i.e when the webrtc's peer connection\n\t\t * starts receiving media. This event call back depends on several factors. How does asterisk setup streams.\n\t\t * How does it creates a bridge which patches up the agent and customer (Media is flowing thru asterisk).\n\t\t * When it works in de-environment, it was observed that the audio element in dom and the audio element hold\n\t\t * by VoIPUser is different. Nonetheless, this stale audio element holds valid media stream, which is being played.\n\t\t * Hence sometimes the audio is heard.\n\t\t *\n\t\t * Ideally call component once gets stable, should not get rerendered. Queue, Room creation are the parameters\n\t\t * which should be independent and should not control the call component.\n\t\t *\n\t\t * Solution :\n\t\t * Either make the audio elemenent rendered independent of rest of the DOM.\n\t\t * or implement useEffect. This useEffect will reset the rendering elements with the latest audio tag.\n\t\t *\n\t\t * Note : If this code gets refactor, revisit the line below to check if this call is needed.\n\t\t *\n\t\t */\n\t\tremoteAudioMediaRef.current && result.voipClient.switchMediaRenderer({ remoteMediaElement: remoteAudioMediaRef.current });\n\t}, [result.voipClient]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst onCallEstablished = async (callDetails: ICallDetails): Promise<undefined> => {\n\t\t\tif (!callDetails.callInfo) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvoipSounds.stopAll();\n\t\t\tif (callDetails.userState !== UserState.UAC) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Agent has sent Invite. So it must create a room.\n\t\t\tconst { callInfo } = callDetails;\n\t\t\t// While making the call, there is no remote media element available.\n\t\t\t// When the call is ringing we have that element created. But we still\n\t\t\t// do not want it to be attached.\n\t\t\t// When call gets established, then switch the media renderer.\n\t\t\tremoteAudioMediaRef.current && result.voipClient?.switchMediaRenderer({ remoteMediaElement: remoteAudioMediaRef.current });\n\t\t\tconst roomId = await createRoom(callInfo, 'outbound');\n\t\t\tdispatchEvent({ event: VoipClientEvents['VOIP-CALL-STARTED'], rid: roomId });\n\t\t};\n\n\t\tconst onNetworkConnected = (): void => {\n\t\t\tif (networkStatus === 'offline') {\n\t\t\t\tsetNetworkStatus('online');\n\t\t\t}\n\t\t};\n\n\t\tconst onNetworkDisconnected = (): void => {\n\t\t\t// Transitioning from online -> offline\n\t\t\t// If there is ongoing call, terminate it or if we are processing an incoming/outgoing call\n\t\t\t// reject it.\n\t\t\tif (networkStatus === 'online') {\n\t\t\t\tsetNetworkStatus('offline');\n\t\t\t\tswitch (result.voipClient?.callerInfo.state) {\n\t\t\t\t\tcase 'IN_CALL':\n\t\t\t\t\tcase 'ON_HOLD':\n\t\t\t\t\t\tresult.voipClient?.endCall();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'OFFER_RECEIVED':\n\t\t\t\t\tcase 'ANSWER_SENT':\n\t\t\t\t\t\tresult.voipClient?.rejectCall();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst onRinging = (): void => {\n\t\t\tvoipSounds.play('outbound-call-ringing');\n\t\t};\n\n\t\tconst onIncomingCallRinging = (): void => {\n\t\t\tvoipSounds.play('telephone');\n\t\t};\n\n\t\tconst onCallTerminated = (): void => {\n\t\t\tvoipSounds.play('call-ended', false);\n\t\t\tvoipSounds.stopAll();\n\t\t};\n\n\t\tconst onCallFailed = (reason: 'Not Found' | 'Address Incomplete' | 'Request Terminated' | string): void => {\n\t\t\tswitch (reason) {\n\t\t\t\tcase 'Not Found':\n\t\t\t\t\t// This happens when the call matches dialplan and goes to the world, but the trunk doesnt find the number.\n\t\t\t\t\topenDialModal({ errorMessage: t('Dialed_number_doesnt_exist') });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Address Incomplete':\n\t\t\t\t\t// This happens when the dialed number doesnt match a valid asterisk dialplan pattern or the number is invalid.\n\t\t\t\t\topenDialModal({ errorMessage: t('Dialed_number_is_incomplete') });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Request Terminated':\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\topenDialModal({ errorMessage: t('Something_went_wrong_try_again_later') });\n\t\t\t}\n\t\t};\n\n\t\tresult.voipClient.onNetworkEvent('connected', onNetworkConnected);\n\t\tresult.voipClient.onNetworkEvent('disconnected', onNetworkDisconnected);\n\t\tresult.voipClient.onNetworkEvent('connectionerror', onNetworkDisconnected);\n\t\tresult.voipClient.onNetworkEvent('localnetworkonline', onNetworkConnected);\n\t\tresult.voipClient.onNetworkEvent('localnetworkoffline', onNetworkDisconnected);\n\t\tresult.voipClient.on('callestablished', onCallEstablished);\n\t\tresult.voipClient.on('ringing', onRinging); // not called for incoming call\n\t\tresult.voipClient.on('incomingcall', onIncomingCallRinging);\n\t\tresult.voipClient.on('callterminated', onCallTerminated);\n\n\t\tif (isOutboundClient(result.voipClient)) {\n\t\t\tresult.voipClient.on('callfailed', onCallFailed);\n\t\t}\n\n\t\treturn (): void => {\n\t\t\tresult.voipClient?.offNetworkEvent('connected', onNetworkConnected);\n\t\t\tresult.voipClient?.offNetworkEvent('disconnected', onNetworkDisconnected);\n\t\t\tresult.voipClient?.offNetworkEvent('connectionerror', onNetworkDisconnected);\n\t\t\tresult.voipClient?.offNetworkEvent('localnetworkonline', onNetworkConnected);\n\t\t\tresult.voipClient?.offNetworkEvent('localnetworkoffline', onNetworkDisconnected);\n\t\t\tresult.voipClient?.off('incomingcall', onIncomingCallRinging);\n\t\t\tresult.voipClient?.off('ringing', onRinging);\n\t\t\tresult.voipClient?.off('callestablished', onCallEstablished);\n\t\t\tresult.voipClient?.off('callterminated', onCallTerminated);\n\n\t\t\tif (isOutboundClient(result.voipClient)) {\n\t\t\t\tresult.voipClient?.off('callfailed', onCallFailed);\n\t\t\t}\n\t\t};\n\t}, [createRoom, dispatchEvent, networkStatus, openDialModal, result.voipClient, voipSounds, t, user]);\n\n\tconst contextValue: CallContextValue = useMemo(() => {\n\t\tif (!voipEnabled) {\n\t\t\treturn {\n\t\t\t\tenabled: false,\n\t\t\t\tready: false,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tif (!user?.extension) {\n\t\t\treturn {\n\t\t\t\tenabled: false,\n\t\t\t\tready: false,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tif (result.error) {\n\t\t\treturn {\n\t\t\t\tenabled: true,\n\t\t\t\tready: false,\n\t\t\t\terror: result.error,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tif (!result.voipClient) {\n\t\t\treturn {\n\t\t\t\tenabled: true,\n\t\t\t\tready: false,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tconst { registrationInfo, voipClient } = result;\n\n\t\treturn {\n\t\t\toutBoundCallsAllowed: hasVoIPEnterpriseLicense, // set to true only if enterprise license is present.\n\t\t\toutBoundCallsEnabled: hasVoIPEnterpriseLicense, // set to true even if enterprise license is not present.\n\t\t\toutBoundCallsEnabledForUser:\n\t\t\t\thasVoIPEnterpriseLicense && clientState === 'registered' && !['IN_CALL', 'ON_HOLD'].includes(voipClient.callerInfo.state), // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\n\t\t\tenabled: true,\n\t\t\tready: true,\n\t\t\topenedRoomInfo: roomInfo,\n\t\t\tvoipClient,\n\t\t\tregistrationInfo,\n\t\t\tqueueCounter,\n\t\t\tqueueName,\n\t\t\tactions: {\n\t\t\t\tmute: (): Promise<void> => voipClient.muteCall(true), // voipClient.mute(),\n\t\t\t\tunmute: (): Promise<void> => voipClient.muteCall(false), // voipClient.unmute()\n\t\t\t\tpause: (): Promise<void> => voipClient.holdCall(true), // voipClient.pause()\n\t\t\t\tresume: (): Promise<void> => voipClient.holdCall(false), // voipClient.resume()\n\t\t\t\tend: (): Promise<OutgoingByeRequest | void> => voipClient.endCall(),\n\t\t\t\tpickUp: async (): Promise<void | null> =>\n\t\t\t\t\tremoteAudioMediaRef.current && voipClient.acceptCall({ remoteMediaElement: remoteAudioMediaRef.current }),\n\t\t\t\treject: (): Promise<void> => voipClient.rejectCall(),\n\t\t\t},\n\t\t\topenRoom,\n\t\t\tcreateRoom,\n\t\t\tcloseRoom,\n\t\t\tnetworkStatus,\n\t\t\topenWrapUpModal,\n\t\t\tchangeAudioOutputDevice,\n\t\t\tchangeAudioInputDevice,\n\t\t\tregister: (): void => voipClient.register(),\n\t\t\tunregister: (): void => voipClient.unregister(),\n\t\t};\n\t}, [\n\t\tvoipEnabled,\n\t\tuser?.extension,\n\t\tresult,\n\t\thasVoIPEnterpriseLicense,\n\t\tclientState,\n\t\troomInfo,\n\t\tqueueCounter,\n\t\tqueueName,\n\t\topenRoom,\n\t\tcreateRoom,\n\t\tcloseRoom,\n\t\topenWrapUpModal,\n\t\tchangeAudioOutputDevice,\n\t\tchangeAudioInputDevice,\n\t\tnetworkStatus,\n\t]);\n\n\treturn (\n\t\t<CallContext.Provider value={contextValue}>\n\t\t\t{children}\n\t\t\t{contextValue.enabled &&\n\t\t\t\tcreatePortal(\n\t\t\t\t\t<audio ref={remoteAudioMediaRef}>\n\t\t\t\t\t\t<track kind='captions' />\n\t\t\t\t\t</audio>,\n\t\t\t\t\tdocument.body,\n\t\t\t\t)}\n\t\t</CallContext.Provider>\n\t);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/providers/CallProvider/CallProvider.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/providers/CallProvider/CallProvider.tsx","inputSourceMap":{"version":3,"file":"client/providers/CallProvider/CallProvider.tsx","sourceRoot":"","sources":["client/providers/CallProvider/CallProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IVoipRoom, VoipEventDataSignature, ICallerInfo, ICallDetails, ILivechatVisitor, Serialized } from '@rocket.chat/core-typings';\nimport {\n\tVoipClientEvents,\n\tisVoipEventAgentCalled,\n\tisVoipEventAgentConnected,\n\tisVoipEventCallerJoined,\n\tisVoipEventQueueMemberAdded,\n\tisVoipEventQueueMemberRemoved,\n\tisVoipEventCallAbandoned,\n\tUserState,\n} from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { Random } from '@rocket.chat/random';\nimport type { Device } from '@rocket.chat/ui-contexts';\nimport {\n\tuseRouter,\n\tuseUser,\n\tuseSetting,\n\tuseEndpoint,\n\tuseStream,\n\tuseSetOutputMediaDevice,\n\tuseSetInputMediaDevice,\n\tuseSetModal,\n\tuseTranslation,\n} from '@rocket.chat/ui-contexts';\nimport type { ReactNode } from 'react';\nimport React, { useMemo, useRef, useCallback, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport type { OutgoingByeRequest } from 'sip.js/lib/core';\n\nimport { useVoipSounds } from './hooks/useVoipSounds';\nimport type { CallContextValue } from '../../contexts/CallContext';\nimport { CallContext, useIsVoipEnterprise } from '../../contexts/CallContext';\nimport { useDialModal } from '../../hooks/useDialModal';\nimport { isOutboundClient, useVoipClient } from '../../hooks/useVoipClient';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\nimport type { QueueAggregator } from '../../lib/voip/QueueAggregator';\nimport { parseOutboundPhoneNumber } from '../../lib/voip/parseOutboundPhoneNumber';\nimport { WrapUpCallModal } from '../../voip/components/modals/WrapUpCallModal';\n\ntype NetworkState = 'online' | 'offline';\n\ntype CallProviderProps = {\n\tchildren?: ReactNode;\n};\n\nexport const CallProvider = ({ children }: CallProviderProps) => {\n\tconst [clientState, setClientState] = useState<'registered' | 'unregistered'>('unregistered');\n\n\tconst voipEnabled = useSetting('VoIP_Enabled');\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\tconst dispatchEvent = useEndpoint('POST', '/v1/voip/events');\n\tconst visitorEndpoint = useEndpoint('POST', '/v1/livechat/visitor');\n\tconst voipEndpoint = useEndpoint('GET', '/v1/voip/room');\n\tconst voipCloseRoomEndpoint = useEndpoint('POST', '/v1/voip/room.close');\n\tconst getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n\tconst setModal = useSetModal();\n\tconst t = useTranslation();\n\n\tconst result = useVoipClient();\n\tconst user = useUser();\n\tconst router = useRouter();\n\tconst setOutputMediaDevice = useSetOutputMediaDevice();\n\tconst setInputMediaDevice = useSetInputMediaDevice();\n\n\tconst hasVoIPEnterpriseLicense = useIsVoipEnterprise();\n\n\tconst remoteAudioMediaRef = useRef<HTMLAudioElement>(null); // TODO: Create a dedicated file for the AUDIO and make the controls accessible\n\n\tconst [queueCounter, setQueueCounter] = useState(0);\n\tconst [queueName, setQueueName] = useState('');\n\tconst [roomInfo, setRoomInfo] = useState<{ v: { token?: string }; rid: string }>({ v: {}, rid: '' });\n\n\tconst { openDialModal } = useDialModal();\n\n\tconst voipSounds = useVoipSounds();\n\n\tconst closeRoom = useCallback(\n\t\tasync (data = {}): Promise<void> => {\n\t\t\troomInfo &&\n\t\t\t\t(await voipCloseRoomEndpoint({\n\t\t\t\t\trid: roomInfo.rid,\n\t\t\t\t\ttoken: roomInfo.v.token || '',\n\t\t\t\t\toptions: { comment: data?.comment, tags: data?.tags },\n\t\t\t\t}));\n\t\t\trouter.navigate('/home');\n\n\t\t\tconst queueAggregator = result.voipClient?.getAggregator();\n\t\t\tif (queueAggregator) {\n\t\t\t\tqueueAggregator.callEnded();\n\t\t\t}\n\t\t},\n\t\t[router, result?.voipClient, roomInfo, voipCloseRoomEndpoint],\n\t);\n\n\tconst openWrapUpModal = useCallback((): void => {\n\t\tsetModal(() => <WrapUpCallModal closeRoom={closeRoom} />);\n\t}, [closeRoom, setModal]);\n\n\tconst changeAudioOutputDevice = useMutableCallback((selectedAudioDevice: Device): void => {\n\t\tremoteAudioMediaRef?.current &&\n\t\t\tsetOutputMediaDevice({ outputDevice: selectedAudioDevice, HTMLAudioElement: remoteAudioMediaRef.current });\n\t});\n\n\tconst changeAudioInputDevice = useMutableCallback((selectedAudioDevice: Device): void => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\t\tconst constraints = { audio: { deviceId: { exact: selectedAudioDevice.id } } };\n\n\t\t// TODO: Migrate the classes that manage MediaStream to a more react based approach (using contexts/providers perhaps)\n\t\t// For now the MediaStream management is very coupled with the VoIP client,\n\t\t// decoupling it will make it usable by other areas of the project that needs to handle MediaStreams and avoid code duplication\n\t\tresult.voipClient.changeAudioInputDevice(constraints);\n\n\t\tsetInputMediaDevice(selectedAudioDevice);\n\t});\n\n\tconst [queueAggregator, setQueueAggregator] = useState<QueueAggregator>();\n\n\tconst [networkStatus, setNetworkStatus] = useState<NetworkState>('online');\n\n\tuseEffect(() => {\n\t\tconst { voipClient } = result || {};\n\n\t\tif (!voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetQueueAggregator(voipClient.getAggregator());\n\n\t\treturn (): void => {\n\t\t\tif (clientState === 'registered') {\n\t\t\t\treturn voipClient.unregister();\n\t\t\t}\n\t\t};\n\t}, [result, clientState]);\n\n\tconst openRoom = useCallback((rid: IVoipRoom['_id']): void => {\n\t\troomCoordinator.openRouteLink('v', { rid });\n\t}, []);\n\n\tconst findOrCreateVisitor = useCallback(\n\t\tasync (caller: ICallerInfo): Promise<Serialized<ILivechatVisitor>> => {\n\t\t\tconst phone = parseOutboundPhoneNumber(caller.callerId);\n\n\t\t\tconst { contact } = await getContactBy({ phone });\n\n\t\t\tif (contact) {\n\t\t\t\treturn contact;\n\t\t\t}\n\n\t\t\tconst { visitor } = await visitorEndpoint({\n\t\t\t\tvisitor: {\n\t\t\t\t\ttoken: Random.id(),\n\t\t\t\t\tphone,\n\t\t\t\t\tname: caller.callerName || phone,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn visitor;\n\t\t},\n\t\t[getContactBy, visitorEndpoint],\n\t);\n\n\tconst createRoom = useCallback(\n\t\tasync (caller: ICallerInfo, direction: IVoipRoom['direction'] = 'inbound'): Promise<IVoipRoom['_id']> => {\n\t\t\tif (!user) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst visitor = await findOrCreateVisitor(caller);\n\t\t\t\tconst voipRoom = await voipEndpoint({ token: visitor.token, agentId: user._id, direction });\n\t\t\t\topenRoom(voipRoom.room._id);\n\t\t\t\tvoipRoom.room && setRoomInfo({ v: { token: voipRoom.room.v.token }, rid: voipRoom.room._id });\n\t\t\t\tconst queueAggregator = result.voipClient?.getAggregator();\n\t\t\t\tif (queueAggregator) {\n\t\t\t\t\tqueueAggregator.callStarted();\n\t\t\t\t}\n\t\t\t\treturn voipRoom.room._id;\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(`Error while creating a visitor ${error}`);\n\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\t\t[openRoom, result.voipClient, user, voipEndpoint, findOrCreateVisitor],\n\t);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleEventReceived = async (event: VoipEventDataSignature): Promise<void> => {\n\t\t\tif (isVoipEventAgentCalled(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.callRinging({ queuename: data.queue, callerid: data.callerId });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventAgentConnected(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.callPickedup({ queuename: data.queue, queuedcalls: data.queuedCalls, waittimeinqueue: data.waitTimeInQueue });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventCallerJoined(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.queueJoined({ queuename: data.queue, callerid: data.callerId, queuedcalls: data.queuedCalls });\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventQueueMemberAdded(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.memberAdded({ queuename: data.queue, queuedcalls: data.queuedCalls });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventQueueMemberRemoved(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.memberRemoved({ queuename: data.queue, queuedcalls: data.queuedCalls });\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventCallAbandoned(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.queueAbandoned({ queuename: data.queue, queuedcallafterabandon: data.queuedCallAfterAbandon });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconsole.warn('Unknown event received');\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/voip.events`, handleEventReceived);\n\t}, [subscribeToNotifyUser, user, queueAggregator, voipEnabled]);\n\n\t// This was causing event duplication before, so we'll leave this here for now\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn subscribeToNotifyUser(`${user._id}/call.hangup`, (event): void => {\n\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\n\t\t\tif (hasVoIPEnterpriseLicense) {\n\t\t\t\topenWrapUpModal();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcloseRoom();\n\n\t\t\tdispatchEvent({ event: VoipClientEvents['VOIP-CALL-ENDED'], rid: event.roomId });\n\t\t});\n\t}, [openWrapUpModal, queueAggregator, subscribeToNotifyUser, user, voipEnabled, dispatchEvent, hasVoIPEnterpriseLicense, closeRoom]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst offRegistered = result.voipClient.on('registered', (): void => setClientState('registered'));\n\t\tconst offUnregistered = result.voipClient.on('unregistered', (): void => setClientState('unregistered'));\n\n\t\treturn (): void => {\n\t\t\toffRegistered();\n\t\t\toffUnregistered();\n\t\t};\n\t}, [result.voipClient]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n\t\t * This code may need a revisit when we handle callinqueue differently.\n\t\t * Check clickup tasks for more details\n\t\t * https://app.clickup.com/t/22hy1k4\n\t\t * When customer called a queue (Either using skype or using internal number), call would get established\n\t\t * customer would hear agent's voice but agent would not hear anything from customer.\n\t\t * This issue was observed on unstable. It was found to be inconsistent to reproduce.\n\t\t * On some developer env, it would happen randomly. On Safari it did not happen if\n\t\t * user refreshes before taking every call.\n\t\t *\n\t\t * The reason behind this was as soon as agent accepts a call, queueCounter would change.\n\t\t * This change will trigger re-rendering of media and creation of audio element.\n\t\t * This audio element gets used by voipClient to render the remote audio.\n\t\t * Because the re-render happened, it would hold a stale reference.\n\t\t *\n\t\t * If the dom is inspected, audio element just before body is usually created by this class.\n\t\t * this audio element.srcObject contains null value. In working case, it should display\n\t\t * valid stream object.\n\t\t *\n\t\t * Reason for inconsistencies :\n\t\t * This element is utilized in VoIPUser::setupRemoteMedia\n\t\t * This function is called when webRTC receives a remote track event. i.e when the webrtc's peer connection\n\t\t * starts receiving media. This event call back depends on several factors. How does asterisk setup streams.\n\t\t * How does it creates a bridge which patches up the agent and customer (Media is flowing thru asterisk).\n\t\t * When it works in de-environment, it was observed that the audio element in dom and the audio element hold\n\t\t * by VoIPUser is different. Nonetheless, this stale audio element holds valid media stream, which is being played.\n\t\t * Hence sometimes the audio is heard.\n\t\t *\n\t\t * Ideally call component once gets stable, should not get rerendered. Queue, Room creation are the parameters\n\t\t * which should be independent and should not control the call component.\n\t\t *\n\t\t * Solution :\n\t\t * Either make the audio elemenent rendered independent of rest of the DOM.\n\t\t * or implement useEffect. This useEffect will reset the rendering elements with the latest audio tag.\n\t\t *\n\t\t * Note : If this code gets refactor, revisit the line below to check if this call is needed.\n\t\t *\n\t\t */\n\t\tremoteAudioMediaRef.current && result.voipClient.switchMediaRenderer({ remoteMediaElement: remoteAudioMediaRef.current });\n\t}, [result.voipClient]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst onCallEstablished = async (callDetails: ICallDetails): Promise<undefined> => {\n\t\t\tif (!callDetails.callInfo) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvoipSounds.stopAll();\n\t\t\tif (callDetails.userState !== UserState.UAC) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Agent has sent Invite. So it must create a room.\n\t\t\tconst { callInfo } = callDetails;\n\t\t\t// While making the call, there is no remote media element available.\n\t\t\t// When the call is ringing we have that element created. But we still\n\t\t\t// do not want it to be attached.\n\t\t\t// When call gets established, then switch the media renderer.\n\t\t\tremoteAudioMediaRef.current && result.voipClient?.switchMediaRenderer({ remoteMediaElement: remoteAudioMediaRef.current });\n\t\t\tconst roomId = await createRoom(callInfo, 'outbound');\n\t\t\tdispatchEvent({ event: VoipClientEvents['VOIP-CALL-STARTED'], rid: roomId });\n\t\t};\n\n\t\tconst onNetworkConnected = (): void => {\n\t\t\tif (networkStatus === 'offline') {\n\t\t\t\tsetNetworkStatus('online');\n\t\t\t}\n\t\t};\n\n\t\tconst onNetworkDisconnected = (): void => {\n\t\t\t// Transitioning from online -> offline\n\t\t\t// If there is ongoing call, terminate it or if we are processing an incoming/outgoing call\n\t\t\t// reject it.\n\t\t\tif (networkStatus === 'online') {\n\t\t\t\tsetNetworkStatus('offline');\n\t\t\t\tswitch (result.voipClient?.callerInfo.state) {\n\t\t\t\t\tcase 'IN_CALL':\n\t\t\t\t\tcase 'ON_HOLD':\n\t\t\t\t\t\tresult.voipClient?.endCall();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'OFFER_RECEIVED':\n\t\t\t\t\tcase 'ANSWER_SENT':\n\t\t\t\t\t\tresult.voipClient?.rejectCall();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst onRinging = (): void => {\n\t\t\tvoipSounds.play('outbound-call-ringing');\n\t\t};\n\n\t\tconst onIncomingCallRinging = (): void => {\n\t\t\tvoipSounds.play('telephone');\n\t\t};\n\n\t\tconst onCallTerminated = (): void => {\n\t\t\tvoipSounds.play('call-ended', false);\n\t\t\tvoipSounds.stopAll();\n\t\t};\n\n\t\tconst onCallFailed = (reason: 'Not Found' | 'Address Incomplete' | 'Request Terminated' | string): void => {\n\t\t\tswitch (reason) {\n\t\t\t\tcase 'Not Found':\n\t\t\t\t\t// This happens when the call matches dialplan and goes to the world, but the trunk doesnt find the number.\n\t\t\t\t\topenDialModal({ errorMessage: t('Dialed_number_doesnt_exist') });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Address Incomplete':\n\t\t\t\t\t// This happens when the dialed number doesnt match a valid asterisk dialplan pattern or the number is invalid.\n\t\t\t\t\topenDialModal({ errorMessage: t('Dialed_number_is_incomplete') });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Request Terminated':\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\topenDialModal({ errorMessage: t('Something_went_wrong_try_again_later') });\n\t\t\t}\n\t\t};\n\n\t\tresult.voipClient.onNetworkEvent('connected', onNetworkConnected);\n\t\tresult.voipClient.onNetworkEvent('disconnected', onNetworkDisconnected);\n\t\tresult.voipClient.onNetworkEvent('connectionerror', onNetworkDisconnected);\n\t\tresult.voipClient.onNetworkEvent('localnetworkonline', onNetworkConnected);\n\t\tresult.voipClient.onNetworkEvent('localnetworkoffline', onNetworkDisconnected);\n\t\tresult.voipClient.on('callestablished', onCallEstablished);\n\t\tresult.voipClient.on('ringing', onRinging); // not called for incoming call\n\t\tresult.voipClient.on('incomingcall', onIncomingCallRinging);\n\t\tresult.voipClient.on('callterminated', onCallTerminated);\n\n\t\tif (isOutboundClient(result.voipClient)) {\n\t\t\tresult.voipClient.on('callfailed', onCallFailed);\n\t\t}\n\n\t\treturn (): void => {\n\t\t\tresult.voipClient?.offNetworkEvent('connected', onNetworkConnected);\n\t\t\tresult.voipClient?.offNetworkEvent('disconnected', onNetworkDisconnected);\n\t\t\tresult.voipClient?.offNetworkEvent('connectionerror', onNetworkDisconnected);\n\t\t\tresult.voipClient?.offNetworkEvent('localnetworkonline', onNetworkConnected);\n\t\t\tresult.voipClient?.offNetworkEvent('localnetworkoffline', onNetworkDisconnected);\n\t\t\tresult.voipClient?.off('incomingcall', onIncomingCallRinging);\n\t\t\tresult.voipClient?.off('ringing', onRinging);\n\t\t\tresult.voipClient?.off('callestablished', onCallEstablished);\n\t\t\tresult.voipClient?.off('callterminated', onCallTerminated);\n\n\t\t\tif (isOutboundClient(result.voipClient)) {\n\t\t\t\tresult.voipClient?.off('callfailed', onCallFailed);\n\t\t\t}\n\t\t};\n\t}, [createRoom, dispatchEvent, networkStatus, openDialModal, result.voipClient, voipSounds, t, user]);\n\n\tconst contextValue: CallContextValue = useMemo(() => {\n\t\tif (!voipEnabled) {\n\t\t\treturn {\n\t\t\t\tenabled: false,\n\t\t\t\tready: false,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tif (!user?.extension) {\n\t\t\treturn {\n\t\t\t\tenabled: false,\n\t\t\t\tready: false,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tif (result.error) {\n\t\t\treturn {\n\t\t\t\tenabled: true,\n\t\t\t\tready: false,\n\t\t\t\terror: result.error,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tif (!result.voipClient) {\n\t\t\treturn {\n\t\t\t\tenabled: true,\n\t\t\t\tready: false,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tconst { registrationInfo, voipClient } = result;\n\n\t\treturn {\n\t\t\toutBoundCallsAllowed: hasVoIPEnterpriseLicense, // set to true only if enterprise license is present.\n\t\t\toutBoundCallsEnabled: hasVoIPEnterpriseLicense, // set to true even if enterprise license is not present.\n\t\t\toutBoundCallsEnabledForUser:\n\t\t\t\thasVoIPEnterpriseLicense && clientState === 'registered' && !['IN_CALL', 'ON_HOLD'].includes(voipClient.callerInfo.state), // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\n\t\t\tenabled: true,\n\t\t\tready: true,\n\t\t\topenedRoomInfo: roomInfo,\n\t\t\tvoipClient,\n\t\t\tregistrationInfo,\n\t\t\tqueueCounter,\n\t\t\tqueueName,\n\t\t\tactions: {\n\t\t\t\tmute: (): Promise<void> => voipClient.muteCall(true), // voipClient.mute(),\n\t\t\t\tunmute: (): Promise<void> => voipClient.muteCall(false), // voipClient.unmute()\n\t\t\t\tpause: (): Promise<void> => voipClient.holdCall(true), // voipClient.pause()\n\t\t\t\tresume: (): Promise<void> => voipClient.holdCall(false), // voipClient.resume()\n\t\t\t\tend: (): Promise<OutgoingByeRequest | void> => voipClient.endCall(),\n\t\t\t\tpickUp: async (): Promise<void | null> =>\n\t\t\t\t\tremoteAudioMediaRef.current && voipClient.acceptCall({ remoteMediaElement: remoteAudioMediaRef.current }),\n\t\t\t\treject: (): Promise<void> => voipClient.rejectCall(),\n\t\t\t},\n\t\t\topenRoom,\n\t\t\tcreateRoom,\n\t\t\tcloseRoom,\n\t\t\tnetworkStatus,\n\t\t\topenWrapUpModal,\n\t\t\tchangeAudioOutputDevice,\n\t\t\tchangeAudioInputDevice,\n\t\t\tregister: (): void => voipClient.register(),\n\t\t\tunregister: (): void => voipClient.unregister(),\n\t\t};\n\t}, [\n\t\tvoipEnabled,\n\t\tuser?.extension,\n\t\tresult,\n\t\thasVoIPEnterpriseLicense,\n\t\tclientState,\n\t\troomInfo,\n\t\tqueueCounter,\n\t\tqueueName,\n\t\topenRoom,\n\t\tcreateRoom,\n\t\tcloseRoom,\n\t\topenWrapUpModal,\n\t\tchangeAudioOutputDevice,\n\t\tchangeAudioInputDevice,\n\t\tnetworkStatus,\n\t]);\n\n\treturn (\n\t\t<CallContext.Provider value={contextValue}>\n\t\t\t{children}\n\t\t\t{contextValue.enabled &&\n\t\t\t\tcreatePortal(\n\t\t\t\t\t<audio ref={remoteAudioMediaRef}>\n\t\t\t\t\t\t<track kind='captions' />\n\t\t\t\t\t</audio>,\n\t\t\t\t\tdocument.body,\n\t\t\t\t)}\n\t\t</CallContext.Provider>\n\t);\n};\n"]}}},"code":"module.export({\n  CallProvider: () => CallProvider\n});\nlet VoipClientEvents, isVoipEventAgentCalled, isVoipEventAgentConnected, isVoipEventCallerJoined, isVoipEventQueueMemberAdded, isVoipEventQueueMemberRemoved, isVoipEventCallAbandoned, UserState;\nmodule.link(\"@rocket.chat/core-typings\", {\n  VoipClientEvents(v) {\n    VoipClientEvents = v;\n  },\n  isVoipEventAgentCalled(v) {\n    isVoipEventAgentCalled = v;\n  },\n  isVoipEventAgentConnected(v) {\n    isVoipEventAgentConnected = v;\n  },\n  isVoipEventCallerJoined(v) {\n    isVoipEventCallerJoined = v;\n  },\n  isVoipEventQueueMemberAdded(v) {\n    isVoipEventQueueMemberAdded = v;\n  },\n  isVoipEventQueueMemberRemoved(v) {\n    isVoipEventQueueMemberRemoved = v;\n  },\n  isVoipEventCallAbandoned(v) {\n    isVoipEventCallAbandoned = v;\n  },\n  UserState(v) {\n    UserState = v;\n  }\n}, 0);\nlet useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n}, 1);\nlet Random;\nmodule.link(\"@rocket.chat/random\", {\n  Random(v) {\n    Random = v;\n  }\n}, 2);\nlet useRouter, useUser, useSetting, useEndpoint, useStream, useSetOutputMediaDevice, useSetInputMediaDevice, useSetModal, useTranslation;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useRouter(v) {\n    useRouter = v;\n  },\n  useUser(v) {\n    useUser = v;\n  },\n  useSetting(v) {\n    useSetting = v;\n  },\n  useEndpoint(v) {\n    useEndpoint = v;\n  },\n  useStream(v) {\n    useStream = v;\n  },\n  useSetOutputMediaDevice(v) {\n    useSetOutputMediaDevice = v;\n  },\n  useSetInputMediaDevice(v) {\n    useSetInputMediaDevice = v;\n  },\n  useSetModal(v) {\n    useSetModal = v;\n  },\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 3);\nlet React, useMemo, useRef, useCallback, useEffect, useState;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useMemo(v) {\n    useMemo = v;\n  },\n  useRef(v) {\n    useRef = v;\n  },\n  useCallback(v) {\n    useCallback = v;\n  },\n  useEffect(v) {\n    useEffect = v;\n  },\n  useState(v) {\n    useState = v;\n  }\n}, 4);\nlet createPortal;\nmodule.link(\"react-dom\", {\n  createPortal(v) {\n    createPortal = v;\n  }\n}, 5);\nlet useVoipSounds;\nmodule.link(\"./hooks/useVoipSounds\", {\n  useVoipSounds(v) {\n    useVoipSounds = v;\n  }\n}, 6);\nlet CallContext, useIsVoipEnterprise;\nmodule.link(\"../../contexts/CallContext\", {\n  CallContext(v) {\n    CallContext = v;\n  },\n  useIsVoipEnterprise(v) {\n    useIsVoipEnterprise = v;\n  }\n}, 7);\nlet useDialModal;\nmodule.link(\"../../hooks/useDialModal\", {\n  useDialModal(v) {\n    useDialModal = v;\n  }\n}, 8);\nlet isOutboundClient, useVoipClient;\nmodule.link(\"../../hooks/useVoipClient\", {\n  isOutboundClient(v) {\n    isOutboundClient = v;\n  },\n  useVoipClient(v) {\n    useVoipClient = v;\n  }\n}, 9);\nlet roomCoordinator;\nmodule.link(\"../../lib/rooms/roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n}, 10);\nlet parseOutboundPhoneNumber;\nmodule.link(\"../../lib/voip/parseOutboundPhoneNumber\", {\n  parseOutboundPhoneNumber(v) {\n    parseOutboundPhoneNumber = v;\n  }\n}, 11);\nlet WrapUpCallModal;\nmodule.link(\"../../voip/components/modals/WrapUpCallModal\", {\n  WrapUpCallModal(v) {\n    WrapUpCallModal = v;\n  }\n}, 12);\nconst CallProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const [clientState, setClientState] = useState('unregistered');\n  const voipEnabled = useSetting('VoIP_Enabled');\n  const subscribeToNotifyUser = useStream('notify-user');\n  const dispatchEvent = useEndpoint('POST', '/v1/voip/events');\n  const visitorEndpoint = useEndpoint('POST', '/v1/livechat/visitor');\n  const voipEndpoint = useEndpoint('GET', '/v1/voip/room');\n  const voipCloseRoomEndpoint = useEndpoint('POST', '/v1/voip/room.close');\n  const getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n  const setModal = useSetModal();\n  const t = useTranslation();\n  const result = useVoipClient();\n  const user = useUser();\n  const router = useRouter();\n  const setOutputMediaDevice = useSetOutputMediaDevice();\n  const setInputMediaDevice = useSetInputMediaDevice();\n  const hasVoIPEnterpriseLicense = useIsVoipEnterprise();\n  const remoteAudioMediaRef = useRef(null); // TODO: Create a dedicated file for the AUDIO and make the controls accessible\n  const [queueCounter, setQueueCounter] = useState(0);\n  const [queueName, setQueueName] = useState('');\n  const [roomInfo, setRoomInfo] = useState({\n    v: {},\n    rid: ''\n  });\n  const {\n    openDialModal\n  } = useDialModal();\n  const voipSounds = useVoipSounds();\n  const closeRoom = useCallback(async function () {\n    var _result$voipClient;\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    roomInfo && (await voipCloseRoomEndpoint({\n      rid: roomInfo.rid,\n      token: roomInfo.v.token || '',\n      options: {\n        comment: data === null || data === void 0 ? void 0 : data.comment,\n        tags: data === null || data === void 0 ? void 0 : data.tags\n      }\n    }));\n    router.navigate('/home');\n    const queueAggregator = (_result$voipClient = result.voipClient) === null || _result$voipClient === void 0 ? void 0 : _result$voipClient.getAggregator();\n    if (queueAggregator) {\n      queueAggregator.callEnded();\n    }\n  }, [router, result === null || result === void 0 ? void 0 : result.voipClient, roomInfo, voipCloseRoomEndpoint]);\n  const openWrapUpModal = useCallback(() => {\n    setModal(() => /*#__PURE__*/React.createElement(WrapUpCallModal, {\n      closeRoom: closeRoom\n    }));\n  }, [closeRoom, setModal]);\n  const changeAudioOutputDevice = useMutableCallback(selectedAudioDevice => {\n    (remoteAudioMediaRef === null || remoteAudioMediaRef === void 0 ? void 0 : remoteAudioMediaRef.current) && setOutputMediaDevice({\n      outputDevice: selectedAudioDevice,\n      HTMLAudioElement: remoteAudioMediaRef.current\n    });\n  });\n  const changeAudioInputDevice = useMutableCallback(selectedAudioDevice => {\n    if (!result.voipClient) {\n      return;\n    }\n    const constraints = {\n      audio: {\n        deviceId: {\n          exact: selectedAudioDevice.id\n        }\n      }\n    };\n    // TODO: Migrate the classes that manage MediaStream to a more react based approach (using contexts/providers perhaps)\n    // For now the MediaStream management is very coupled with the VoIP client,\n    // decoupling it will make it usable by other areas of the project that needs to handle MediaStreams and avoid code duplication\n    result.voipClient.changeAudioInputDevice(constraints);\n    setInputMediaDevice(selectedAudioDevice);\n  });\n  const [queueAggregator, setQueueAggregator] = useState();\n  const [networkStatus, setNetworkStatus] = useState('online');\n  useEffect(() => {\n    const {\n      voipClient\n    } = result || {};\n    if (!voipClient) {\n      return;\n    }\n    setQueueAggregator(voipClient.getAggregator());\n    return () => {\n      if (clientState === 'registered') {\n        return voipClient.unregister();\n      }\n    };\n  }, [result, clientState]);\n  const openRoom = useCallback(rid => {\n    roomCoordinator.openRouteLink('v', {\n      rid\n    });\n  }, []);\n  const findOrCreateVisitor = useCallback(async caller => {\n    const phone = parseOutboundPhoneNumber(caller.callerId);\n    const {\n      contact\n    } = await getContactBy({\n      phone\n    });\n    if (contact) {\n      return contact;\n    }\n    const {\n      visitor\n    } = await visitorEndpoint({\n      visitor: {\n        token: Random.id(),\n        phone,\n        name: caller.callerName || phone\n      }\n    });\n    return visitor;\n  }, [getContactBy, visitorEndpoint]);\n  const createRoom = useCallback(async function (caller) {\n    let direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'inbound';\n    if (!user) {\n      return '';\n    }\n    try {\n      var _result$voipClient2;\n      const visitor = await findOrCreateVisitor(caller);\n      const voipRoom = await voipEndpoint({\n        token: visitor.token,\n        agentId: user._id,\n        direction\n      });\n      openRoom(voipRoom.room._id);\n      voipRoom.room && setRoomInfo({\n        v: {\n          token: voipRoom.room.v.token\n        },\n        rid: voipRoom.room._id\n      });\n      const queueAggregator = (_result$voipClient2 = result.voipClient) === null || _result$voipClient2 === void 0 ? void 0 : _result$voipClient2.getAggregator();\n      if (queueAggregator) {\n        queueAggregator.callStarted();\n      }\n      return voipRoom.room._id;\n    } catch (error) {\n      console.error(\"Error while creating a visitor \".concat(error));\n      return '';\n    }\n  }, [openRoom, result.voipClient, user, voipEndpoint, findOrCreateVisitor]);\n  useEffect(() => {\n    if (!voipEnabled || !user || !queueAggregator) {\n      return;\n    }\n    const handleEventReceived = async event => {\n      if (isVoipEventAgentCalled(event)) {\n        const {\n          data\n        } = event;\n        queueAggregator.callRinging({\n          queuename: data.queue,\n          callerid: data.callerId\n        });\n        setQueueName(queueAggregator.getCurrentQueueName());\n        return;\n      }\n      if (isVoipEventAgentConnected(event)) {\n        const {\n          data\n        } = event;\n        queueAggregator.callPickedup({\n          queuename: data.queue,\n          queuedcalls: data.queuedCalls,\n          waittimeinqueue: data.waitTimeInQueue\n        });\n        setQueueName(queueAggregator.getCurrentQueueName());\n        setQueueCounter(queueAggregator.getCallWaitingCount());\n        return;\n      }\n      if (isVoipEventCallerJoined(event)) {\n        const {\n          data\n        } = event;\n        queueAggregator.queueJoined({\n          queuename: data.queue,\n          callerid: data.callerId,\n          queuedcalls: data.queuedCalls\n        });\n        setQueueCounter(queueAggregator.getCallWaitingCount());\n        return;\n      }\n      if (isVoipEventQueueMemberAdded(event)) {\n        const {\n          data\n        } = event;\n        queueAggregator.memberAdded({\n          queuename: data.queue,\n          queuedcalls: data.queuedCalls\n        });\n        setQueueName(queueAggregator.getCurrentQueueName());\n        setQueueCounter(queueAggregator.getCallWaitingCount());\n        return;\n      }\n      if (isVoipEventQueueMemberRemoved(event)) {\n        const {\n          data\n        } = event;\n        queueAggregator.memberRemoved({\n          queuename: data.queue,\n          queuedcalls: data.queuedCalls\n        });\n        setQueueCounter(queueAggregator.getCallWaitingCount());\n        return;\n      }\n      if (isVoipEventCallAbandoned(event)) {\n        const {\n          data\n        } = event;\n        queueAggregator.queueAbandoned({\n          queuename: data.queue,\n          queuedcallafterabandon: data.queuedCallAfterAbandon\n        });\n        setQueueName(queueAggregator.getCurrentQueueName());\n        setQueueCounter(queueAggregator.getCallWaitingCount());\n        return;\n      }\n      console.warn('Unknown event received');\n    };\n    return subscribeToNotifyUser(\"\".concat(user._id, \"/voip.events\"), handleEventReceived);\n  }, [subscribeToNotifyUser, user, queueAggregator, voipEnabled]);\n  // This was causing event duplication before, so we'll leave this here for now\n  useEffect(() => {\n    if (!voipEnabled || !user || !queueAggregator) {\n      return;\n    }\n    return subscribeToNotifyUser(\"\".concat(user._id, \"/call.hangup\"), event => {\n      setQueueName(queueAggregator.getCurrentQueueName());\n      if (hasVoIPEnterpriseLicense) {\n        openWrapUpModal();\n        return;\n      }\n      closeRoom();\n      dispatchEvent({\n        event: VoipClientEvents['VOIP-CALL-ENDED'],\n        rid: event.roomId\n      });\n    });\n  }, [openWrapUpModal, queueAggregator, subscribeToNotifyUser, user, voipEnabled, dispatchEvent, hasVoIPEnterpriseLicense, closeRoom]);\n  useEffect(() => {\n    if (!result.voipClient) {\n      return;\n    }\n    const offRegistered = result.voipClient.on('registered', () => setClientState('registered'));\n    const offUnregistered = result.voipClient.on('unregistered', () => setClientState('unregistered'));\n    return () => {\n      offRegistered();\n      offUnregistered();\n    };\n  }, [result.voipClient]);\n  useEffect(() => {\n    if (!result.voipClient) {\n      return;\n    }\n    /*\n     * This code may need a revisit when we handle callinqueue differently.\n     * Check clickup tasks for more details\n     * https://app.clickup.com/t/22hy1k4\n     * When customer called a queue (Either using skype or using internal number), call would get established\n     * customer would hear agent's voice but agent would not hear anything from customer.\n     * This issue was observed on unstable. It was found to be inconsistent to reproduce.\n     * On some developer env, it would happen randomly. On Safari it did not happen if\n     * user refreshes before taking every call.\n     *\n     * The reason behind this was as soon as agent accepts a call, queueCounter would change.\n     * This change will trigger re-rendering of media and creation of audio element.\n     * This audio element gets used by voipClient to render the remote audio.\n     * Because the re-render happened, it would hold a stale reference.\n     *\n     * If the dom is inspected, audio element just before body is usually created by this class.\n     * this audio element.srcObject contains null value. In working case, it should display\n     * valid stream object.\n     *\n     * Reason for inconsistencies :\n     * This element is utilized in VoIPUser::setupRemoteMedia\n     * This function is called when webRTC receives a remote track event. i.e when the webrtc's peer connection\n     * starts receiving media. This event call back depends on several factors. How does asterisk setup streams.\n     * How does it creates a bridge which patches up the agent and customer (Media is flowing thru asterisk).\n     * When it works in de-environment, it was observed that the audio element in dom and the audio element hold\n     * by VoIPUser is different. Nonetheless, this stale audio element holds valid media stream, which is being played.\n     * Hence sometimes the audio is heard.\n     *\n     * Ideally call component once gets stable, should not get rerendered. Queue, Room creation are the parameters\n     * which should be independent and should not control the call component.\n     *\n     * Solution :\n     * Either make the audio elemenent rendered independent of rest of the DOM.\n     * or implement useEffect. This useEffect will reset the rendering elements with the latest audio tag.\n     *\n     * Note : If this code gets refactor, revisit the line below to check if this call is needed.\n     *\n     */\n    remoteAudioMediaRef.current && result.voipClient.switchMediaRenderer({\n      remoteMediaElement: remoteAudioMediaRef.current\n    });\n  }, [result.voipClient]);\n  useEffect(() => {\n    if (!result.voipClient) {\n      return;\n    }\n    if (!user) {\n      return;\n    }\n    const onCallEstablished = async callDetails => {\n      var _result$voipClient3;\n      if (!callDetails.callInfo) {\n        return;\n      }\n      voipSounds.stopAll();\n      if (callDetails.userState !== UserState.UAC) {\n        return;\n      }\n      // Agent has sent Invite. So it must create a room.\n      const {\n        callInfo\n      } = callDetails;\n      // While making the call, there is no remote media element available.\n      // When the call is ringing we have that element created. But we still\n      // do not want it to be attached.\n      // When call gets established, then switch the media renderer.\n      remoteAudioMediaRef.current && ((_result$voipClient3 = result.voipClient) === null || _result$voipClient3 === void 0 ? void 0 : _result$voipClient3.switchMediaRenderer({\n        remoteMediaElement: remoteAudioMediaRef.current\n      }));\n      const roomId = await createRoom(callInfo, 'outbound');\n      dispatchEvent({\n        event: VoipClientEvents['VOIP-CALL-STARTED'],\n        rid: roomId\n      });\n    };\n    const onNetworkConnected = () => {\n      if (networkStatus === 'offline') {\n        setNetworkStatus('online');\n      }\n    };\n    const onNetworkDisconnected = () => {\n      var _result$voipClient5, _result$voipClient6;\n      // Transitioning from online -> offline\n      // If there is ongoing call, terminate it or if we are processing an incoming/outgoing call\n      // reject it.\n      if (networkStatus === 'online') {\n        var _result$voipClient4;\n        setNetworkStatus('offline');\n        switch ((_result$voipClient4 = result.voipClient) === null || _result$voipClient4 === void 0 ? void 0 : _result$voipClient4.callerInfo.state) {\n          case 'IN_CALL':\n          case 'ON_HOLD':\n            (_result$voipClient5 = result.voipClient) === null || _result$voipClient5 === void 0 ? void 0 : _result$voipClient5.endCall();\n            break;\n          case 'OFFER_RECEIVED':\n          case 'ANSWER_SENT':\n            (_result$voipClient6 = result.voipClient) === null || _result$voipClient6 === void 0 ? void 0 : _result$voipClient6.rejectCall();\n            break;\n        }\n      }\n    };\n    const onRinging = () => {\n      voipSounds.play('outbound-call-ringing');\n    };\n    const onIncomingCallRinging = () => {\n      voipSounds.play('telephone');\n    };\n    const onCallTerminated = () => {\n      voipSounds.play('call-ended', false);\n      voipSounds.stopAll();\n    };\n    const onCallFailed = reason => {\n      switch (reason) {\n        case 'Not Found':\n          // This happens when the call matches dialplan and goes to the world, but the trunk doesnt find the number.\n          openDialModal({\n            errorMessage: t('Dialed_number_doesnt_exist')\n          });\n          break;\n        case 'Address Incomplete':\n          // This happens when the dialed number doesnt match a valid asterisk dialplan pattern or the number is invalid.\n          openDialModal({\n            errorMessage: t('Dialed_number_is_incomplete')\n          });\n          break;\n        case 'Request Terminated':\n          break;\n        default:\n          openDialModal({\n            errorMessage: t('Something_went_wrong_try_again_later')\n          });\n      }\n    };\n    result.voipClient.onNetworkEvent('connected', onNetworkConnected);\n    result.voipClient.onNetworkEvent('disconnected', onNetworkDisconnected);\n    result.voipClient.onNetworkEvent('connectionerror', onNetworkDisconnected);\n    result.voipClient.onNetworkEvent('localnetworkonline', onNetworkConnected);\n    result.voipClient.onNetworkEvent('localnetworkoffline', onNetworkDisconnected);\n    result.voipClient.on('callestablished', onCallEstablished);\n    result.voipClient.on('ringing', onRinging); // not called for incoming call\n    result.voipClient.on('incomingcall', onIncomingCallRinging);\n    result.voipClient.on('callterminated', onCallTerminated);\n    if (isOutboundClient(result.voipClient)) {\n      result.voipClient.on('callfailed', onCallFailed);\n    }\n    return () => {\n      var _result$voipClient7, _result$voipClient8, _result$voipClient9, _result$voipClient10, _result$voipClient11, _result$voipClient12, _result$voipClient13, _result$voipClient14, _result$voipClient15;\n      (_result$voipClient7 = result.voipClient) === null || _result$voipClient7 === void 0 ? void 0 : _result$voipClient7.offNetworkEvent('connected', onNetworkConnected);\n      (_result$voipClient8 = result.voipClient) === null || _result$voipClient8 === void 0 ? void 0 : _result$voipClient8.offNetworkEvent('disconnected', onNetworkDisconnected);\n      (_result$voipClient9 = result.voipClient) === null || _result$voipClient9 === void 0 ? void 0 : _result$voipClient9.offNetworkEvent('connectionerror', onNetworkDisconnected);\n      (_result$voipClient10 = result.voipClient) === null || _result$voipClient10 === void 0 ? void 0 : _result$voipClient10.offNetworkEvent('localnetworkonline', onNetworkConnected);\n      (_result$voipClient11 = result.voipClient) === null || _result$voipClient11 === void 0 ? void 0 : _result$voipClient11.offNetworkEvent('localnetworkoffline', onNetworkDisconnected);\n      (_result$voipClient12 = result.voipClient) === null || _result$voipClient12 === void 0 ? void 0 : _result$voipClient12.off('incomingcall', onIncomingCallRinging);\n      (_result$voipClient13 = result.voipClient) === null || _result$voipClient13 === void 0 ? void 0 : _result$voipClient13.off('ringing', onRinging);\n      (_result$voipClient14 = result.voipClient) === null || _result$voipClient14 === void 0 ? void 0 : _result$voipClient14.off('callestablished', onCallEstablished);\n      (_result$voipClient15 = result.voipClient) === null || _result$voipClient15 === void 0 ? void 0 : _result$voipClient15.off('callterminated', onCallTerminated);\n      if (isOutboundClient(result.voipClient)) {\n        var _result$voipClient16;\n        (_result$voipClient16 = result.voipClient) === null || _result$voipClient16 === void 0 ? void 0 : _result$voipClient16.off('callfailed', onCallFailed);\n      }\n    };\n  }, [createRoom, dispatchEvent, networkStatus, openDialModal, result.voipClient, voipSounds, t, user]);\n  const contextValue = useMemo(() => {\n    if (!voipEnabled) {\n      return {\n        enabled: false,\n        ready: false,\n        outBoundCallsAllowed: undefined,\n        // set to true only if enterprise license is present.\n        outBoundCallsEnabled: undefined,\n        // set to true even if enterprise license is not present.\n        outBoundCallsEnabledForUser: undefined // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n      };\n    }\n    if (!(user !== null && user !== void 0 && user.extension)) {\n      return {\n        enabled: false,\n        ready: false,\n        outBoundCallsAllowed: undefined,\n        // set to true only if enterprise license is present.\n        outBoundCallsEnabled: undefined,\n        // set to true even if enterprise license is not present.\n        outBoundCallsEnabledForUser: undefined // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n      };\n    }\n    if (result.error) {\n      return {\n        enabled: true,\n        ready: false,\n        error: result.error,\n        outBoundCallsAllowed: undefined,\n        // set to true only if enterprise license is present.\n        outBoundCallsEnabled: undefined,\n        // set to true even if enterprise license is not present.\n        outBoundCallsEnabledForUser: undefined // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n      };\n    }\n    if (!result.voipClient) {\n      return {\n        enabled: true,\n        ready: false,\n        outBoundCallsAllowed: undefined,\n        // set to true only if enterprise license is present.\n        outBoundCallsEnabled: undefined,\n        // set to true even if enterprise license is not present.\n        outBoundCallsEnabledForUser: undefined // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n      };\n    }\n    const {\n      registrationInfo,\n      voipClient\n    } = result;\n    return {\n      outBoundCallsAllowed: hasVoIPEnterpriseLicense,\n      // set to true only if enterprise license is present.\n      outBoundCallsEnabled: hasVoIPEnterpriseLicense,\n      // set to true even if enterprise license is not present.\n      outBoundCallsEnabledForUser: hasVoIPEnterpriseLicense && clientState === 'registered' && !['IN_CALL', 'ON_HOLD'].includes(voipClient.callerInfo.state),\n      // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n      enabled: true,\n      ready: true,\n      openedRoomInfo: roomInfo,\n      voipClient,\n      registrationInfo,\n      queueCounter,\n      queueName,\n      actions: {\n        mute: () => voipClient.muteCall(true),\n        // voipClient.mute(),\n        unmute: () => voipClient.muteCall(false),\n        // voipClient.unmute()\n        pause: () => voipClient.holdCall(true),\n        // voipClient.pause()\n        resume: () => voipClient.holdCall(false),\n        // voipClient.resume()\n        end: () => voipClient.endCall(),\n        pickUp: async () => remoteAudioMediaRef.current && voipClient.acceptCall({\n          remoteMediaElement: remoteAudioMediaRef.current\n        }),\n        reject: () => voipClient.rejectCall()\n      },\n      openRoom,\n      createRoom,\n      closeRoom,\n      networkStatus,\n      openWrapUpModal,\n      changeAudioOutputDevice,\n      changeAudioInputDevice,\n      register: () => voipClient.register(),\n      unregister: () => voipClient.unregister()\n    };\n  }, [voipEnabled, user === null || user === void 0 ? void 0 : user.extension, result, hasVoIPEnterpriseLicense, clientState, roomInfo, queueCounter, queueName, openRoom, createRoom, closeRoom, openWrapUpModal, changeAudioOutputDevice, changeAudioInputDevice, networkStatus]);\n  return /*#__PURE__*/React.createElement(CallContext.Provider, {\n    value: contextValue\n  }, children, contextValue.enabled && /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(\"audio\", {\n    ref: remoteAudioMediaRef\n  }, /*#__PURE__*/React.createElement(\"track\", {\n    kind: \"captions\"\n  })), document.body));\n};","map":{"version":3,"names":["module","export","CallProvider","VoipClientEvents","isVoipEventAgentCalled","isVoipEventAgentConnected","isVoipEventCallerJoined","isVoipEventQueueMemberAdded","isVoipEventQueueMemberRemoved","isVoipEventCallAbandoned","UserState","link","v","useMutableCallback","Random","useRouter","useUser","useSetting","useEndpoint","useStream","useSetOutputMediaDevice","useSetInputMediaDevice","useSetModal","useTranslation","React","useMemo","useRef","useCallback","useEffect","useState","default","createPortal","useVoipSounds","CallContext","useIsVoipEnterprise","useDialModal","isOutboundClient","useVoipClient","roomCoordinator","parseOutboundPhoneNumber","WrapUpCallModal","_ref","children","clientState","setClientState","voipEnabled","subscribeToNotifyUser","dispatchEvent","visitorEndpoint","voipEndpoint","voipCloseRoomEndpoint","getContactBy","setModal","t","result","user","router","setOutputMediaDevice","setInputMediaDevice","hasVoIPEnterpriseLicense","remoteAudioMediaRef","queueCounter","setQueueCounter","queueName","setQueueName","roomInfo","setRoomInfo","rid","openDialModal","voipSounds","closeRoom","_result$voipClient","data","arguments","length","undefined","token","options","comment","tags","navigate","queueAggregator","voipClient","getAggregator","callEnded","openWrapUpModal","createElement","changeAudioOutputDevice","selectedAudioDevice","current","outputDevice","HTMLAudioElement","changeAudioInputDevice","constraints","audio","deviceId","exact","id","setQueueAggregator","networkStatus","setNetworkStatus","unregister","openRoom","openRouteLink","findOrCreateVisitor","caller","phone","callerId","contact","visitor","name","callerName","createRoom","direction","_result$voipClient2","voipRoom","agentId","_id","room","callStarted","error","console","concat","handleEventReceived","event","callRinging","queuename","queue","callerid","getCurrentQueueName","callPickedup","queuedcalls","queuedCalls","waittimeinqueue","waitTimeInQueue","getCallWaitingCount","queueJoined","memberAdded","memberRemoved","queueAbandoned","queuedcallafterabandon","queuedCallAfterAbandon","warn","roomId","offRegistered","on","offUnregistered","switchMediaRenderer","remoteMediaElement","onCallEstablished","callDetails","_result$voipClient3","callInfo","stopAll","userState","UAC","onNetworkConnected","onNetworkDisconnected","_result$voipClient5","_result$voipClient6","_result$voipClient4","callerInfo","state","endCall","rejectCall","onRinging","play","onIncomingCallRinging","onCallTerminated","onCallFailed","reason","errorMessage","onNetworkEvent","_result$voipClient7","_result$voipClient8","_result$voipClient9","_result$voipClient10","_result$voipClient11","_result$voipClient12","_result$voipClient13","_result$voipClient14","_result$voipClient15","offNetworkEvent","off","_result$voipClient16","contextValue","enabled","ready","outBoundCallsAllowed","outBoundCallsEnabled","outBoundCallsEnabledForUser","extension","registrationInfo","includes","openedRoomInfo","actions","mute","muteCall","unmute","pause","holdCall","resume","end","pickUp","acceptCall","reject","register","Provider","value","ref","kind","document","body"],"sources":["client/providers/CallProvider/CallProvider.tsx"],"sourcesContent":["import type { IVoipRoom, VoipEventDataSignature, ICallerInfo, ICallDetails, ILivechatVisitor, Serialized } from '@rocket.chat/core-typings';\nimport {\n\tVoipClientEvents,\n\tisVoipEventAgentCalled,\n\tisVoipEventAgentConnected,\n\tisVoipEventCallerJoined,\n\tisVoipEventQueueMemberAdded,\n\tisVoipEventQueueMemberRemoved,\n\tisVoipEventCallAbandoned,\n\tUserState,\n} from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { Random } from '@rocket.chat/random';\nimport type { Device } from '@rocket.chat/ui-contexts';\nimport {\n\tuseRouter,\n\tuseUser,\n\tuseSetting,\n\tuseEndpoint,\n\tuseStream,\n\tuseSetOutputMediaDevice,\n\tuseSetInputMediaDevice,\n\tuseSetModal,\n\tuseTranslation,\n} from '@rocket.chat/ui-contexts';\nimport type { ReactNode } from 'react';\nimport React, { useMemo, useRef, useCallback, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport type { OutgoingByeRequest } from 'sip.js/lib/core';\n\nimport { useVoipSounds } from './hooks/useVoipSounds';\nimport type { CallContextValue } from '../../contexts/CallContext';\nimport { CallContext, useIsVoipEnterprise } from '../../contexts/CallContext';\nimport { useDialModal } from '../../hooks/useDialModal';\nimport { isOutboundClient, useVoipClient } from '../../hooks/useVoipClient';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\nimport type { QueueAggregator } from '../../lib/voip/QueueAggregator';\nimport { parseOutboundPhoneNumber } from '../../lib/voip/parseOutboundPhoneNumber';\nimport { WrapUpCallModal } from '../../voip/components/modals/WrapUpCallModal';\n\ntype NetworkState = 'online' | 'offline';\n\ntype CallProviderProps = {\n\tchildren?: ReactNode;\n};\n\nexport const CallProvider = ({ children }: CallProviderProps) => {\n\tconst [clientState, setClientState] = useState<'registered' | 'unregistered'>('unregistered');\n\n\tconst voipEnabled = useSetting('VoIP_Enabled');\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\tconst dispatchEvent = useEndpoint('POST', '/v1/voip/events');\n\tconst visitorEndpoint = useEndpoint('POST', '/v1/livechat/visitor');\n\tconst voipEndpoint = useEndpoint('GET', '/v1/voip/room');\n\tconst voipCloseRoomEndpoint = useEndpoint('POST', '/v1/voip/room.close');\n\tconst getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n\tconst setModal = useSetModal();\n\tconst t = useTranslation();\n\n\tconst result = useVoipClient();\n\tconst user = useUser();\n\tconst router = useRouter();\n\tconst setOutputMediaDevice = useSetOutputMediaDevice();\n\tconst setInputMediaDevice = useSetInputMediaDevice();\n\n\tconst hasVoIPEnterpriseLicense = useIsVoipEnterprise();\n\n\tconst remoteAudioMediaRef = useRef<HTMLAudioElement>(null); // TODO: Create a dedicated file for the AUDIO and make the controls accessible\n\n\tconst [queueCounter, setQueueCounter] = useState(0);\n\tconst [queueName, setQueueName] = useState('');\n\tconst [roomInfo, setRoomInfo] = useState<{ v: { token?: string }; rid: string }>({ v: {}, rid: '' });\n\n\tconst { openDialModal } = useDialModal();\n\n\tconst voipSounds = useVoipSounds();\n\n\tconst closeRoom = useCallback(\n\t\tasync (data = {}): Promise<void> => {\n\t\t\troomInfo &&\n\t\t\t\t(await voipCloseRoomEndpoint({\n\t\t\t\t\trid: roomInfo.rid,\n\t\t\t\t\ttoken: roomInfo.v.token || '',\n\t\t\t\t\toptions: { comment: data?.comment, tags: data?.tags },\n\t\t\t\t}));\n\t\t\trouter.navigate('/home');\n\n\t\t\tconst queueAggregator = result.voipClient?.getAggregator();\n\t\t\tif (queueAggregator) {\n\t\t\t\tqueueAggregator.callEnded();\n\t\t\t}\n\t\t},\n\t\t[router, result?.voipClient, roomInfo, voipCloseRoomEndpoint],\n\t);\n\n\tconst openWrapUpModal = useCallback((): void => {\n\t\tsetModal(() => <WrapUpCallModal closeRoom={closeRoom} />);\n\t}, [closeRoom, setModal]);\n\n\tconst changeAudioOutputDevice = useMutableCallback((selectedAudioDevice: Device): void => {\n\t\tremoteAudioMediaRef?.current &&\n\t\t\tsetOutputMediaDevice({ outputDevice: selectedAudioDevice, HTMLAudioElement: remoteAudioMediaRef.current });\n\t});\n\n\tconst changeAudioInputDevice = useMutableCallback((selectedAudioDevice: Device): void => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\t\tconst constraints = { audio: { deviceId: { exact: selectedAudioDevice.id } } };\n\n\t\t// TODO: Migrate the classes that manage MediaStream to a more react based approach (using contexts/providers perhaps)\n\t\t// For now the MediaStream management is very coupled with the VoIP client,\n\t\t// decoupling it will make it usable by other areas of the project that needs to handle MediaStreams and avoid code duplication\n\t\tresult.voipClient.changeAudioInputDevice(constraints);\n\n\t\tsetInputMediaDevice(selectedAudioDevice);\n\t});\n\n\tconst [queueAggregator, setQueueAggregator] = useState<QueueAggregator>();\n\n\tconst [networkStatus, setNetworkStatus] = useState<NetworkState>('online');\n\n\tuseEffect(() => {\n\t\tconst { voipClient } = result || {};\n\n\t\tif (!voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetQueueAggregator(voipClient.getAggregator());\n\n\t\treturn (): void => {\n\t\t\tif (clientState === 'registered') {\n\t\t\t\treturn voipClient.unregister();\n\t\t\t}\n\t\t};\n\t}, [result, clientState]);\n\n\tconst openRoom = useCallback((rid: IVoipRoom['_id']): void => {\n\t\troomCoordinator.openRouteLink('v', { rid });\n\t}, []);\n\n\tconst findOrCreateVisitor = useCallback(\n\t\tasync (caller: ICallerInfo): Promise<Serialized<ILivechatVisitor>> => {\n\t\t\tconst phone = parseOutboundPhoneNumber(caller.callerId);\n\n\t\t\tconst { contact } = await getContactBy({ phone });\n\n\t\t\tif (contact) {\n\t\t\t\treturn contact;\n\t\t\t}\n\n\t\t\tconst { visitor } = await visitorEndpoint({\n\t\t\t\tvisitor: {\n\t\t\t\t\ttoken: Random.id(),\n\t\t\t\t\tphone,\n\t\t\t\t\tname: caller.callerName || phone,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn visitor;\n\t\t},\n\t\t[getContactBy, visitorEndpoint],\n\t);\n\n\tconst createRoom = useCallback(\n\t\tasync (caller: ICallerInfo, direction: IVoipRoom['direction'] = 'inbound'): Promise<IVoipRoom['_id']> => {\n\t\t\tif (!user) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst visitor = await findOrCreateVisitor(caller);\n\t\t\t\tconst voipRoom = await voipEndpoint({ token: visitor.token, agentId: user._id, direction });\n\t\t\t\topenRoom(voipRoom.room._id);\n\t\t\t\tvoipRoom.room && setRoomInfo({ v: { token: voipRoom.room.v.token }, rid: voipRoom.room._id });\n\t\t\t\tconst queueAggregator = result.voipClient?.getAggregator();\n\t\t\t\tif (queueAggregator) {\n\t\t\t\t\tqueueAggregator.callStarted();\n\t\t\t\t}\n\t\t\t\treturn voipRoom.room._id;\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(`Error while creating a visitor ${error}`);\n\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\t\t[openRoom, result.voipClient, user, voipEndpoint, findOrCreateVisitor],\n\t);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleEventReceived = async (event: VoipEventDataSignature): Promise<void> => {\n\t\t\tif (isVoipEventAgentCalled(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.callRinging({ queuename: data.queue, callerid: data.callerId });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventAgentConnected(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.callPickedup({ queuename: data.queue, queuedcalls: data.queuedCalls, waittimeinqueue: data.waitTimeInQueue });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventCallerJoined(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.queueJoined({ queuename: data.queue, callerid: data.callerId, queuedcalls: data.queuedCalls });\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventQueueMemberAdded(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.memberAdded({ queuename: data.queue, queuedcalls: data.queuedCalls });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventQueueMemberRemoved(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.memberRemoved({ queuename: data.queue, queuedcalls: data.queuedCalls });\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventCallAbandoned(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.queueAbandoned({ queuename: data.queue, queuedcallafterabandon: data.queuedCallAfterAbandon });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconsole.warn('Unknown event received');\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/voip.events`, handleEventReceived);\n\t}, [subscribeToNotifyUser, user, queueAggregator, voipEnabled]);\n\n\t// This was causing event duplication before, so we'll leave this here for now\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn subscribeToNotifyUser(`${user._id}/call.hangup`, (event): void => {\n\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\n\t\t\tif (hasVoIPEnterpriseLicense) {\n\t\t\t\topenWrapUpModal();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcloseRoom();\n\n\t\t\tdispatchEvent({ event: VoipClientEvents['VOIP-CALL-ENDED'], rid: event.roomId });\n\t\t});\n\t}, [openWrapUpModal, queueAggregator, subscribeToNotifyUser, user, voipEnabled, dispatchEvent, hasVoIPEnterpriseLicense, closeRoom]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst offRegistered = result.voipClient.on('registered', (): void => setClientState('registered'));\n\t\tconst offUnregistered = result.voipClient.on('unregistered', (): void => setClientState('unregistered'));\n\n\t\treturn (): void => {\n\t\t\toffRegistered();\n\t\t\toffUnregistered();\n\t\t};\n\t}, [result.voipClient]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n\t\t * This code may need a revisit when we handle callinqueue differently.\n\t\t * Check clickup tasks for more details\n\t\t * https://app.clickup.com/t/22hy1k4\n\t\t * When customer called a queue (Either using skype or using internal number), call would get established\n\t\t * customer would hear agent's voice but agent would not hear anything from customer.\n\t\t * This issue was observed on unstable. It was found to be inconsistent to reproduce.\n\t\t * On some developer env, it would happen randomly. On Safari it did not happen if\n\t\t * user refreshes before taking every call.\n\t\t *\n\t\t * The reason behind this was as soon as agent accepts a call, queueCounter would change.\n\t\t * This change will trigger re-rendering of media and creation of audio element.\n\t\t * This audio element gets used by voipClient to render the remote audio.\n\t\t * Because the re-render happened, it would hold a stale reference.\n\t\t *\n\t\t * If the dom is inspected, audio element just before body is usually created by this class.\n\t\t * this audio element.srcObject contains null value. In working case, it should display\n\t\t * valid stream object.\n\t\t *\n\t\t * Reason for inconsistencies :\n\t\t * This element is utilized in VoIPUser::setupRemoteMedia\n\t\t * This function is called when webRTC receives a remote track event. i.e when the webrtc's peer connection\n\t\t * starts receiving media. This event call back depends on several factors. How does asterisk setup streams.\n\t\t * How does it creates a bridge which patches up the agent and customer (Media is flowing thru asterisk).\n\t\t * When it works in de-environment, it was observed that the audio element in dom and the audio element hold\n\t\t * by VoIPUser is different. Nonetheless, this stale audio element holds valid media stream, which is being played.\n\t\t * Hence sometimes the audio is heard.\n\t\t *\n\t\t * Ideally call component once gets stable, should not get rerendered. Queue, Room creation are the parameters\n\t\t * which should be independent and should not control the call component.\n\t\t *\n\t\t * Solution :\n\t\t * Either make the audio elemenent rendered independent of rest of the DOM.\n\t\t * or implement useEffect. This useEffect will reset the rendering elements with the latest audio tag.\n\t\t *\n\t\t * Note : If this code gets refactor, revisit the line below to check if this call is needed.\n\t\t *\n\t\t */\n\t\tremoteAudioMediaRef.current && result.voipClient.switchMediaRenderer({ remoteMediaElement: remoteAudioMediaRef.current });\n\t}, [result.voipClient]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst onCallEstablished = async (callDetails: ICallDetails): Promise<undefined> => {\n\t\t\tif (!callDetails.callInfo) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvoipSounds.stopAll();\n\t\t\tif (callDetails.userState !== UserState.UAC) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Agent has sent Invite. So it must create a room.\n\t\t\tconst { callInfo } = callDetails;\n\t\t\t// While making the call, there is no remote media element available.\n\t\t\t// When the call is ringing we have that element created. But we still\n\t\t\t// do not want it to be attached.\n\t\t\t// When call gets established, then switch the media renderer.\n\t\t\tremoteAudioMediaRef.current && result.voipClient?.switchMediaRenderer({ remoteMediaElement: remoteAudioMediaRef.current });\n\t\t\tconst roomId = await createRoom(callInfo, 'outbound');\n\t\t\tdispatchEvent({ event: VoipClientEvents['VOIP-CALL-STARTED'], rid: roomId });\n\t\t};\n\n\t\tconst onNetworkConnected = (): void => {\n\t\t\tif (networkStatus === 'offline') {\n\t\t\t\tsetNetworkStatus('online');\n\t\t\t}\n\t\t};\n\n\t\tconst onNetworkDisconnected = (): void => {\n\t\t\t// Transitioning from online -> offline\n\t\t\t// If there is ongoing call, terminate it or if we are processing an incoming/outgoing call\n\t\t\t// reject it.\n\t\t\tif (networkStatus === 'online') {\n\t\t\t\tsetNetworkStatus('offline');\n\t\t\t\tswitch (result.voipClient?.callerInfo.state) {\n\t\t\t\t\tcase 'IN_CALL':\n\t\t\t\t\tcase 'ON_HOLD':\n\t\t\t\t\t\tresult.voipClient?.endCall();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'OFFER_RECEIVED':\n\t\t\t\t\tcase 'ANSWER_SENT':\n\t\t\t\t\t\tresult.voipClient?.rejectCall();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst onRinging = (): void => {\n\t\t\tvoipSounds.play('outbound-call-ringing');\n\t\t};\n\n\t\tconst onIncomingCallRinging = (): void => {\n\t\t\tvoipSounds.play('telephone');\n\t\t};\n\n\t\tconst onCallTerminated = (): void => {\n\t\t\tvoipSounds.play('call-ended', false);\n\t\t\tvoipSounds.stopAll();\n\t\t};\n\n\t\tconst onCallFailed = (reason: 'Not Found' | 'Address Incomplete' | 'Request Terminated' | string): void => {\n\t\t\tswitch (reason) {\n\t\t\t\tcase 'Not Found':\n\t\t\t\t\t// This happens when the call matches dialplan and goes to the world, but the trunk doesnt find the number.\n\t\t\t\t\topenDialModal({ errorMessage: t('Dialed_number_doesnt_exist') });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Address Incomplete':\n\t\t\t\t\t// This happens when the dialed number doesnt match a valid asterisk dialplan pattern or the number is invalid.\n\t\t\t\t\topenDialModal({ errorMessage: t('Dialed_number_is_incomplete') });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Request Terminated':\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\topenDialModal({ errorMessage: t('Something_went_wrong_try_again_later') });\n\t\t\t}\n\t\t};\n\n\t\tresult.voipClient.onNetworkEvent('connected', onNetworkConnected);\n\t\tresult.voipClient.onNetworkEvent('disconnected', onNetworkDisconnected);\n\t\tresult.voipClient.onNetworkEvent('connectionerror', onNetworkDisconnected);\n\t\tresult.voipClient.onNetworkEvent('localnetworkonline', onNetworkConnected);\n\t\tresult.voipClient.onNetworkEvent('localnetworkoffline', onNetworkDisconnected);\n\t\tresult.voipClient.on('callestablished', onCallEstablished);\n\t\tresult.voipClient.on('ringing', onRinging); // not called for incoming call\n\t\tresult.voipClient.on('incomingcall', onIncomingCallRinging);\n\t\tresult.voipClient.on('callterminated', onCallTerminated);\n\n\t\tif (isOutboundClient(result.voipClient)) {\n\t\t\tresult.voipClient.on('callfailed', onCallFailed);\n\t\t}\n\n\t\treturn (): void => {\n\t\t\tresult.voipClient?.offNetworkEvent('connected', onNetworkConnected);\n\t\t\tresult.voipClient?.offNetworkEvent('disconnected', onNetworkDisconnected);\n\t\t\tresult.voipClient?.offNetworkEvent('connectionerror', onNetworkDisconnected);\n\t\t\tresult.voipClient?.offNetworkEvent('localnetworkonline', onNetworkConnected);\n\t\t\tresult.voipClient?.offNetworkEvent('localnetworkoffline', onNetworkDisconnected);\n\t\t\tresult.voipClient?.off('incomingcall', onIncomingCallRinging);\n\t\t\tresult.voipClient?.off('ringing', onRinging);\n\t\t\tresult.voipClient?.off('callestablished', onCallEstablished);\n\t\t\tresult.voipClient?.off('callterminated', onCallTerminated);\n\n\t\t\tif (isOutboundClient(result.voipClient)) {\n\t\t\t\tresult.voipClient?.off('callfailed', onCallFailed);\n\t\t\t}\n\t\t};\n\t}, [createRoom, dispatchEvent, networkStatus, openDialModal, result.voipClient, voipSounds, t, user]);\n\n\tconst contextValue: CallContextValue = useMemo(() => {\n\t\tif (!voipEnabled) {\n\t\t\treturn {\n\t\t\t\tenabled: false,\n\t\t\t\tready: false,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tif (!user?.extension) {\n\t\t\treturn {\n\t\t\t\tenabled: false,\n\t\t\t\tready: false,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tif (result.error) {\n\t\t\treturn {\n\t\t\t\tenabled: true,\n\t\t\t\tready: false,\n\t\t\t\terror: result.error,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tif (!result.voipClient) {\n\t\t\treturn {\n\t\t\t\tenabled: true,\n\t\t\t\tready: false,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tconst { registrationInfo, voipClient } = result;\n\n\t\treturn {\n\t\t\toutBoundCallsAllowed: hasVoIPEnterpriseLicense, // set to true only if enterprise license is present.\n\t\t\toutBoundCallsEnabled: hasVoIPEnterpriseLicense, // set to true even if enterprise license is not present.\n\t\t\toutBoundCallsEnabledForUser:\n\t\t\t\thasVoIPEnterpriseLicense && clientState === 'registered' && !['IN_CALL', 'ON_HOLD'].includes(voipClient.callerInfo.state), // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\n\t\t\tenabled: true,\n\t\t\tready: true,\n\t\t\topenedRoomInfo: roomInfo,\n\t\t\tvoipClient,\n\t\t\tregistrationInfo,\n\t\t\tqueueCounter,\n\t\t\tqueueName,\n\t\t\tactions: {\n\t\t\t\tmute: (): Promise<void> => voipClient.muteCall(true), // voipClient.mute(),\n\t\t\t\tunmute: (): Promise<void> => voipClient.muteCall(false), // voipClient.unmute()\n\t\t\t\tpause: (): Promise<void> => voipClient.holdCall(true), // voipClient.pause()\n\t\t\t\tresume: (): Promise<void> => voipClient.holdCall(false), // voipClient.resume()\n\t\t\t\tend: (): Promise<OutgoingByeRequest | void> => voipClient.endCall(),\n\t\t\t\tpickUp: async (): Promise<void | null> =>\n\t\t\t\t\tremoteAudioMediaRef.current && voipClient.acceptCall({ remoteMediaElement: remoteAudioMediaRef.current }),\n\t\t\t\treject: (): Promise<void> => voipClient.rejectCall(),\n\t\t\t},\n\t\t\topenRoom,\n\t\t\tcreateRoom,\n\t\t\tcloseRoom,\n\t\t\tnetworkStatus,\n\t\t\topenWrapUpModal,\n\t\t\tchangeAudioOutputDevice,\n\t\t\tchangeAudioInputDevice,\n\t\t\tregister: (): void => voipClient.register(),\n\t\t\tunregister: (): void => voipClient.unregister(),\n\t\t};\n\t}, [\n\t\tvoipEnabled,\n\t\tuser?.extension,\n\t\tresult,\n\t\thasVoIPEnterpriseLicense,\n\t\tclientState,\n\t\troomInfo,\n\t\tqueueCounter,\n\t\tqueueName,\n\t\topenRoom,\n\t\tcreateRoom,\n\t\tcloseRoom,\n\t\topenWrapUpModal,\n\t\tchangeAudioOutputDevice,\n\t\tchangeAudioInputDevice,\n\t\tnetworkStatus,\n\t]);\n\n\treturn (\n\t\t<CallContext.Provider value={contextValue}>\n\t\t\t{children}\n\t\t\t{contextValue.enabled &&\n\t\t\t\tcreatePortal(\n\t\t\t\t\t<audio ref={remoteAudioMediaRef}>\n\t\t\t\t\t\t<track kind='captions' />\n\t\t\t\t\t</audio>,\n\t\t\t\t\tdocument.body,\n\t\t\t\t)}\n\t\t</CallContext.Provider>\n\t);\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"1e467dab4a0fca50009e940a42809fdb32c66882"}
