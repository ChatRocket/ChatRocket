{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/realTimeMonitoring/charts/useUpdateChartData.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/omnichannel/realTimeMonitoring/charts/useUpdateChartData.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/realTimeMonitoring/charts/useUpdateChartData.ts","inputSourceMap":{"version":3,"file":"client/views/omnichannel/realTimeMonitoring/charts/useUpdateChartData.ts","sourceRoot":"","sources":["client/views/omnichannel/realTimeMonitoring/charts/useUpdateChartData.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,6BAA6B,CAAC;AAK7D,OAAO,EAAE,WAAW,EAAE,MAAM,qDAAqD,CAAC;AASlF,MAAM,UAAU,kBAAkB,CAAuC,EACxE,OAAO,EAAE,UAAU,EACnB,MAAM,EAAE,SAAS,EACjB,IAAI,EACJ,CAAC,GACqD;IACtD,OAAO,cAAc,CAAC,KAAK,EAAE,KAAa,EAAE,IAAc,EAAE,EAAE;QAC7D,MAAM,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC;QAEjC,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,OAAO;QACR,CAAC;QAED,MAAM,OAAO,GAAG,UAAU,CAAC,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;QAEzE,MAAM,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { useEffectEvent } from '@rocket.chat/fuselage-hooks';\nimport type * as chartjs from 'chart.js';\nimport type { TFunction } from 'i18next';\nimport { type MutableRefObject } from 'react';\n\nimport { updateChart } from '../../../../../app/livechat/client/lib/chartHandler';\n\ntype UseUpdateChartDataOptions<TChart> = {\n\tcontext: MutableRefObject<TChart | undefined>;\n\tcanvas: MutableRefObject<HTMLCanvasElement | null>;\n\tinit: (canvas: HTMLCanvasElement, context: TChart | undefined, t: TFunction) => Promise<TChart>;\n\tt: TFunction;\n};\n\nexport function useUpdateChartData<TChartType extends chartjs.ChartType>({\n\tcontext: contextRef,\n\tcanvas: canvasRef,\n\tinit,\n\tt,\n}: UseUpdateChartDataOptions<chartjs.Chart<TChartType>>) {\n\treturn useEffectEvent(async (label: string, data: number[]) => {\n\t\tconst canvas = canvasRef.current;\n\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst context = contextRef.current ?? (await init(canvas, undefined, t));\n\n\t\tawait updateChart(context, label, data);\n\t});\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/realTimeMonitoring/charts/useUpdateChartData.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/omnichannel/realTimeMonitoring/charts/useUpdateChartData.ts","inputSourceMap":{"version":3,"file":"client/views/omnichannel/realTimeMonitoring/charts/useUpdateChartData.ts","sourceRoot":"","sources":["client/views/omnichannel/realTimeMonitoring/charts/useUpdateChartData.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,6BAA6B,CAAC;AAK7D,OAAO,EAAE,WAAW,EAAE,MAAM,qDAAqD,CAAC;AASlF,MAAM,UAAU,kBAAkB,CAAuC,EACxE,OAAO,EAAE,UAAU,EACnB,MAAM,EAAE,SAAS,EACjB,IAAI,EACJ,CAAC,GACqD;IACtD,OAAO,cAAc,CAAC,KAAK,EAAE,KAAa,EAAE,IAAc,EAAE,EAAE;QAC7D,MAAM,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC;QAEjC,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,OAAO;QACR,CAAC;QAED,MAAM,OAAO,GAAG,UAAU,CAAC,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;QAEzE,MAAM,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { useEffectEvent } from '@rocket.chat/fuselage-hooks';\nimport type * as chartjs from 'chart.js';\nimport type { TFunction } from 'i18next';\nimport { type MutableRefObject } from 'react';\n\nimport { updateChart } from '../../../../../app/livechat/client/lib/chartHandler';\n\ntype UseUpdateChartDataOptions<TChart> = {\n\tcontext: MutableRefObject<TChart | undefined>;\n\tcanvas: MutableRefObject<HTMLCanvasElement | null>;\n\tinit: (canvas: HTMLCanvasElement, context: TChart | undefined, t: TFunction) => Promise<TChart>;\n\tt: TFunction;\n};\n\nexport function useUpdateChartData<TChartType extends chartjs.ChartType>({\n\tcontext: contextRef,\n\tcanvas: canvasRef,\n\tinit,\n\tt,\n}: UseUpdateChartDataOptions<chartjs.Chart<TChartType>>) {\n\treturn useEffectEvent(async (label: string, data: number[]) => {\n\t\tconst canvas = canvasRef.current;\n\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst context = contextRef.current ?? (await init(canvas, undefined, t));\n\n\t\tawait updateChart(context, label, data);\n\t});\n}\n"]}}},"code":"module.export({\n  useUpdateChartData: () => useUpdateChartData\n});\nlet useEffectEvent;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useEffectEvent(v) {\n    useEffectEvent = v;\n  }\n}, 0);\nlet updateChart;\nmodule.link(\"../../../../../app/livechat/client/lib/chartHandler\", {\n  updateChart(v) {\n    updateChart = v;\n  }\n}, 1);\nfunction useUpdateChartData(_ref) {\n  let {\n    context: contextRef,\n    canvas: canvasRef,\n    init,\n    t\n  } = _ref;\n  return useEffectEvent(async (label, data) => {\n    var _contextRef$current;\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const context = (_contextRef$current = contextRef.current) !== null && _contextRef$current !== void 0 ? _contextRef$current : await init(canvas, undefined, t);\n    await updateChart(context, label, data);\n  });\n}","map":{"version":3,"names":["module","export","useUpdateChartData","useEffectEvent","link","v","updateChart","_ref","context","contextRef","canvas","canvasRef","init","t","label","data","_contextRef$current","current","undefined"],"sources":["client/views/omnichannel/realTimeMonitoring/charts/useUpdateChartData.ts"],"sourcesContent":["import { useEffectEvent } from '@rocket.chat/fuselage-hooks';\nimport type * as chartjs from 'chart.js';\nimport type { TFunction } from 'i18next';\nimport { type MutableRefObject } from 'react';\n\nimport { updateChart } from '../../../../../app/livechat/client/lib/chartHandler';\n\ntype UseUpdateChartDataOptions<TChart> = {\n\tcontext: MutableRefObject<TChart | undefined>;\n\tcanvas: MutableRefObject<HTMLCanvasElement | null>;\n\tinit: (canvas: HTMLCanvasElement, context: TChart | undefined, t: TFunction) => Promise<TChart>;\n\tt: TFunction;\n};\n\nexport function useUpdateChartData<TChartType extends chartjs.ChartType>({\n\tcontext: contextRef,\n\tcanvas: canvasRef,\n\tinit,\n\tt,\n}: UseUpdateChartDataOptions<chartjs.Chart<TChartType>>) {\n\treturn useEffectEvent(async (label: string, data: number[]) => {\n\t\tconst canvas = canvasRef.current;\n\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst context = contextRef.current ?? (await init(canvas, undefined, t));\n\n\t\tawait updateChart(context, label, data);\n\t});\n}\n"],"mappings":"AAAAA,MAAA,CAAOC,MAAE;EAAAC,kBAAsB,EAAAA,CAAA,KAAAA;AAAA;AAAA,IAA8BC,cAAA;AAAAH,MAAA,CAAAI,IAAA;EAAAD,eAAAE,CAAA;IAAAF,cAAA,GAAAE,CAAA;EAAA;AAAA;AAAA,IAAAC,WAAA;AAAAN,MAAA,CAAAI,IAAA;EAAAE,YAAAD,CAAA;IAAAC,WAAA,GAAAD,CAAA;EAAA;AAAA;AAcvD,SAAUH,kBAAkBA,CAAAK,IAAA,EAKqB;EAAA,IALkB;IACxEC,OAAO,EAAEC,UAAU;IACnBC,MAAM,EAAEC,SAAS;IACjBC,IAAI;IACJC;EAAC,CACqD,GAAAN,IAAA;EACtD,OAAOJ,cAAc,CAAC,OAAOW,KAAa,EAAEC,IAAc,KAAI;IAAA,IAAAC,mBAAA;IAC7D,MAAMN,MAAM,GAAGC,SAAS,CAACM,OAAO;IAEhC,IAAI,CAACP,MAAM,EAAE;MACZ;IACD;IAEA,MAAMF,OAAO,IAAAQ,mBAAA,GAAGP,UAAU,CAACQ,OAAO,cAAAD,mBAAA,cAAAA,mBAAA,GAAK,MAAMJ,IAAI,CAACF,MAAM,EAAEQ,SAAS,EAAEL,CAAC,CAAE;IAExE,MAAMP,WAAW,CAACE,OAAO,EAAEM,KAAK,EAAEC,IAAI,CAAC;EACxC,CAAC,CAAC;AACH","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"52c215200593c439a59b32b48bdc471acc244457"}
