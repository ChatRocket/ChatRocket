{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/emoji-custom/server/lib/insertOrUpdateEmoji.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/emoji-custom/server/lib/insertOrUpdateEmoji.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/emoji-custom/server/lib/insertOrUpdateEmoji.ts","inputSourceMap":{"version":3,"file":"app/emoji-custom/server/lib/insertOrUpdateEmoji.ts","sourceRoot":"","sources":["app/emoji-custom/server/lib/insertOrUpdateEmoji.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport { EmojiCustom } from '@rocket.chat/models';\nimport limax from 'limax';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { RocketChatFileEmojiCustomInstance } from '../startup/emoji-custom';\n\ntype EmojiData = {\n\t_id?: string;\n\tname: string;\n\taliases: string;\n\textension: string;\n\tpreviousName?: string;\n\tpreviousExtension?: string;\n\tnewFile?: boolean;\n};\n\ntype EmojiDataWithParsedAliases = Omit<EmojiData, 'aliases' | '_id'> & { _id: string; aliases: string[] };\n\nexport async function insertOrUpdateEmoji(userId: string | null, emojiData: EmojiData): Promise<EmojiDataWithParsedAliases> {\n\tif (!userId || !(await hasPermissionAsync(userId, 'manage-emoji'))) {\n\t\tthrow new Meteor.Error('not_authorized');\n\t}\n\n\tif (!trim(emojiData.name)) {\n\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t\tfield: 'Name',\n\t\t});\n\t}\n\n\temojiData.name = limax(emojiData.name, { replacement: '_' });\n\temojiData.aliases = limax(emojiData.aliases, { replacement: '_' });\n\n\t// allow all characters except colon, whitespace, comma, >, <, &, \", ', /, \\, (, )\n\t// more practical than allowing specific sets of characters; also allows foreign languages\n\tconst nameValidation = /[\\s,:><&\"'\\/\\\\\\(\\)]/;\n\tconst aliasValidation = /[:><&\\|\"'\\/\\\\\\(\\)]/;\n\n\t// silently strip colon; this allows for uploading :emojiname: as emojiname\n\temojiData.name = emojiData.name.replace(/:/g, '');\n\temojiData.aliases = emojiData.aliases.replace(/:/g, '');\n\n\tif (nameValidation.test(emojiData.name)) {\n\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${emojiData.name} is not a valid name`, {\n\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t\tinput: emojiData.name,\n\t\t\tfield: 'Name',\n\t\t});\n\t}\n\n\tlet aliases: string[] = [];\n\tif (emojiData.aliases) {\n\t\tif (aliasValidation.test(emojiData.aliases)) {\n\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${emojiData.aliases} is not a valid alias set`, {\n\t\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t\t\tinput: emojiData.aliases,\n\t\t\t\tfield: 'Alias_Set',\n\t\t\t});\n\t\t}\n\t\taliases = _.without(emojiData.aliases.split(/[\\s,]/).filter(Boolean), emojiData.name);\n\t}\n\n\temojiData.extension = emojiData.extension === 'svg+xml' ? 'png' : emojiData.extension;\n\n\tlet matchingResults = [];\n\n\tif (emojiData._id) {\n\t\tmatchingResults = await EmojiCustom.findByNameOrAliasExceptID(emojiData.name, emojiData._id).toArray();\n\t\tfor await (const alias of aliases) {\n\t\t\tmatchingResults = matchingResults.concat(await EmojiCustom.findByNameOrAliasExceptID(alias, emojiData._id).toArray());\n\t\t}\n\t} else {\n\t\tmatchingResults = await EmojiCustom.findByNameOrAlias(emojiData.name).toArray();\n\t\tfor await (const alias of aliases) {\n\t\t\tmatchingResults = matchingResults.concat(await EmojiCustom.findByNameOrAlias(alias).toArray());\n\t\t}\n\t}\n\n\tif (matchingResults.length > 0) {\n\t\tthrow new Meteor.Error('Custom_Emoji_Error_Name_Or_Alias_Already_In_Use', 'The custom emoji or one of its aliases is already in use', {\n\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t});\n\t}\n\n\tif (typeof emojiData.extension === 'undefined') {\n\t\tthrow new Meteor.Error('error-the-field-is-required', 'The custom emoji file is required', {\n\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t});\n\t}\n\n\tif (!emojiData._id) {\n\t\t// insert emoji\n\t\tconst createEmoji = {\n\t\t\tname: emojiData.name,\n\t\t\taliases,\n\t\t\textension: emojiData.extension,\n\t\t};\n\n\t\tconst _id = (await EmojiCustom.create(createEmoji)).insertedId;\n\n\t\tvoid api.broadcast('emoji.updateCustom', createEmoji);\n\n\t\treturn { ...emojiData, ...createEmoji, _id };\n\t}\n\n\t// update emoji\n\tif (emojiData.newFile) {\n\t\tawait RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.name}.${emojiData.extension}`));\n\t\tawait RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.name}.${emojiData.previousExtension}`));\n\t\tawait RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.previousName}.${emojiData.extension}`));\n\t\tawait RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.previousName}.${emojiData.previousExtension}`));\n\n\t\tawait EmojiCustom.setExtension(emojiData._id, emojiData.extension);\n\t} else if (emojiData.name !== emojiData.previousName) {\n\t\tconst rs = await RocketChatFileEmojiCustomInstance.getFileWithReadStream(\n\t\t\tencodeURIComponent(`${emojiData.previousName}.${emojiData.previousExtension}`),\n\t\t);\n\t\tif (rs !== null) {\n\t\t\tawait RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.name}.${emojiData.extension}`));\n\t\t\tconst ws = RocketChatFileEmojiCustomInstance.createWriteStream(\n\t\t\t\tencodeURIComponent(`${emojiData.name}.${emojiData.previousExtension}`),\n\t\t\t\trs.contentType,\n\t\t\t);\n\t\t\tws.on('end', () =>\n\t\t\t\tRocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.previousName}.${emojiData.previousExtension}`)),\n\t\t\t);\n\t\t\trs.readStream.pipe(ws);\n\t\t}\n\t}\n\n\tif (emojiData.name !== emojiData.previousName) {\n\t\tawait EmojiCustom.setName(emojiData._id, emojiData.name);\n\t}\n\n\tif (emojiData.aliases) {\n\t\tawait EmojiCustom.setAliases(emojiData._id, aliases);\n\t} else {\n\t\tawait EmojiCustom.setAliases(emojiData._id, []);\n\t}\n\n\tvoid api.broadcast('emoji.updateCustom', { ...emojiData, aliases });\n\n\treturn { ...emojiData, aliases } as EmojiDataWithParsedAliases;\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/emoji-custom/server/lib/insertOrUpdateEmoji.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/emoji-custom/server/lib/insertOrUpdateEmoji.ts","inputSourceMap":{"version":3,"file":"app/emoji-custom/server/lib/insertOrUpdateEmoji.ts","sourceRoot":"","sources":["app/emoji-custom/server/lib/insertOrUpdateEmoji.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport { EmojiCustom } from '@rocket.chat/models';\nimport limax from 'limax';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { RocketChatFileEmojiCustomInstance } from '../startup/emoji-custom';\n\ntype EmojiData = {\n\t_id?: string;\n\tname: string;\n\taliases: string;\n\textension: string;\n\tpreviousName?: string;\n\tpreviousExtension?: string;\n\tnewFile?: boolean;\n};\n\ntype EmojiDataWithParsedAliases = Omit<EmojiData, 'aliases' | '_id'> & { _id: string; aliases: string[] };\n\nexport async function insertOrUpdateEmoji(userId: string | null, emojiData: EmojiData): Promise<EmojiDataWithParsedAliases> {\n\tif (!userId || !(await hasPermissionAsync(userId, 'manage-emoji'))) {\n\t\tthrow new Meteor.Error('not_authorized');\n\t}\n\n\tif (!trim(emojiData.name)) {\n\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t\tfield: 'Name',\n\t\t});\n\t}\n\n\temojiData.name = limax(emojiData.name, { replacement: '_' });\n\temojiData.aliases = limax(emojiData.aliases, { replacement: '_' });\n\n\t// allow all characters except colon, whitespace, comma, >, <, &, \", ', /, \\, (, )\n\t// more practical than allowing specific sets of characters; also allows foreign languages\n\tconst nameValidation = /[\\s,:><&\"'\\/\\\\\\(\\)]/;\n\tconst aliasValidation = /[:><&\\|\"'\\/\\\\\\(\\)]/;\n\n\t// silently strip colon; this allows for uploading :emojiname: as emojiname\n\temojiData.name = emojiData.name.replace(/:/g, '');\n\temojiData.aliases = emojiData.aliases.replace(/:/g, '');\n\n\tif (nameValidation.test(emojiData.name)) {\n\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${emojiData.name} is not a valid name`, {\n\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t\tinput: emojiData.name,\n\t\t\tfield: 'Name',\n\t\t});\n\t}\n\n\tlet aliases: string[] = [];\n\tif (emojiData.aliases) {\n\t\tif (aliasValidation.test(emojiData.aliases)) {\n\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${emojiData.aliases} is not a valid alias set`, {\n\t\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t\t\tinput: emojiData.aliases,\n\t\t\t\tfield: 'Alias_Set',\n\t\t\t});\n\t\t}\n\t\taliases = _.without(emojiData.aliases.split(/[\\s,]/).filter(Boolean), emojiData.name);\n\t}\n\n\temojiData.extension = emojiData.extension === 'svg+xml' ? 'png' : emojiData.extension;\n\n\tlet matchingResults = [];\n\n\tif (emojiData._id) {\n\t\tmatchingResults = await EmojiCustom.findByNameOrAliasExceptID(emojiData.name, emojiData._id).toArray();\n\t\tfor await (const alias of aliases) {\n\t\t\tmatchingResults = matchingResults.concat(await EmojiCustom.findByNameOrAliasExceptID(alias, emojiData._id).toArray());\n\t\t}\n\t} else {\n\t\tmatchingResults = await EmojiCustom.findByNameOrAlias(emojiData.name).toArray();\n\t\tfor await (const alias of aliases) {\n\t\t\tmatchingResults = matchingResults.concat(await EmojiCustom.findByNameOrAlias(alias).toArray());\n\t\t}\n\t}\n\n\tif (matchingResults.length > 0) {\n\t\tthrow new Meteor.Error('Custom_Emoji_Error_Name_Or_Alias_Already_In_Use', 'The custom emoji or one of its aliases is already in use', {\n\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t});\n\t}\n\n\tif (typeof emojiData.extension === 'undefined') {\n\t\tthrow new Meteor.Error('error-the-field-is-required', 'The custom emoji file is required', {\n\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t});\n\t}\n\n\tif (!emojiData._id) {\n\t\t// insert emoji\n\t\tconst createEmoji = {\n\t\t\tname: emojiData.name,\n\t\t\taliases,\n\t\t\textension: emojiData.extension,\n\t\t};\n\n\t\tconst _id = (await EmojiCustom.create(createEmoji)).insertedId;\n\n\t\tvoid api.broadcast('emoji.updateCustom', createEmoji);\n\n\t\treturn { ...emojiData, ...createEmoji, _id };\n\t}\n\n\t// update emoji\n\tif (emojiData.newFile) {\n\t\tawait RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.name}.${emojiData.extension}`));\n\t\tawait RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.name}.${emojiData.previousExtension}`));\n\t\tawait RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.previousName}.${emojiData.extension}`));\n\t\tawait RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.previousName}.${emojiData.previousExtension}`));\n\n\t\tawait EmojiCustom.setExtension(emojiData._id, emojiData.extension);\n\t} else if (emojiData.name !== emojiData.previousName) {\n\t\tconst rs = await RocketChatFileEmojiCustomInstance.getFileWithReadStream(\n\t\t\tencodeURIComponent(`${emojiData.previousName}.${emojiData.previousExtension}`),\n\t\t);\n\t\tif (rs !== null) {\n\t\t\tawait RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.name}.${emojiData.extension}`));\n\t\t\tconst ws = RocketChatFileEmojiCustomInstance.createWriteStream(\n\t\t\t\tencodeURIComponent(`${emojiData.name}.${emojiData.previousExtension}`),\n\t\t\t\trs.contentType,\n\t\t\t);\n\t\t\tws.on('end', () =>\n\t\t\t\tRocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.previousName}.${emojiData.previousExtension}`)),\n\t\t\t);\n\t\t\trs.readStream.pipe(ws);\n\t\t}\n\t}\n\n\tif (emojiData.name !== emojiData.previousName) {\n\t\tawait EmojiCustom.setName(emojiData._id, emojiData.name);\n\t}\n\n\tif (emojiData.aliases) {\n\t\tawait EmojiCustom.setAliases(emojiData._id, aliases);\n\t} else {\n\t\tawait EmojiCustom.setAliases(emojiData._id, []);\n\t}\n\n\tvoid api.broadcast('emoji.updateCustom', { ...emojiData, aliases });\n\n\treturn { ...emojiData, aliases } as EmojiDataWithParsedAliases;\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      insertOrUpdateEmoji: () => insertOrUpdateEmoji\n    });\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let EmojiCustom;\n    module.link(\"@rocket.chat/models\", {\n      EmojiCustom(v) {\n        EmojiCustom = v;\n      }\n    }, 1);\n    let limax;\n    module.link(\"limax\", {\n      default(v) {\n        limax = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let _;\n    module.link(\"underscore\", {\n      default(v) {\n        _ = v;\n      }\n    }, 4);\n    let trim;\n    module.link(\"../../../../lib/utils/stringUtils\", {\n      trim(v) {\n        trim = v;\n      }\n    }, 5);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 6);\n    let RocketChatFileEmojiCustomInstance;\n    module.link(\"../startup/emoji-custom\", {\n      RocketChatFileEmojiCustomInstance(v) {\n        RocketChatFileEmojiCustomInstance = v;\n      }\n    }, 7);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function insertOrUpdateEmoji(userId, emojiData) {\n      if (!userId || !(await hasPermissionAsync(userId, 'manage-emoji'))) {\n        throw new Meteor.Error('not_authorized');\n      }\n      if (!trim(emojiData.name)) {\n        throw new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n          method: 'insertOrUpdateEmoji',\n          field: 'Name'\n        });\n      }\n      emojiData.name = limax(emojiData.name, {\n        replacement: '_'\n      });\n      emojiData.aliases = limax(emojiData.aliases, {\n        replacement: '_'\n      });\n      // allow all characters except colon, whitespace, comma, >, <, &, \", ', /, \\, (, )\n      // more practical than allowing specific sets of characters; also allows foreign languages\n      const nameValidation = /[\\s,:><&\"'\\/\\\\\\(\\)]/;\n      const aliasValidation = /[:><&\\|\"'\\/\\\\\\(\\)]/;\n      // silently strip colon; this allows for uploading :emojiname: as emojiname\n      emojiData.name = emojiData.name.replace(/:/g, '');\n      emojiData.aliases = emojiData.aliases.replace(/:/g, '');\n      if (nameValidation.test(emojiData.name)) {\n        throw new Meteor.Error('error-input-is-not-a-valid-field', \"\".concat(emojiData.name, \" is not a valid name\"), {\n          method: 'insertOrUpdateEmoji',\n          input: emojiData.name,\n          field: 'Name'\n        });\n      }\n      let aliases = [];\n      if (emojiData.aliases) {\n        if (aliasValidation.test(emojiData.aliases)) {\n          throw new Meteor.Error('error-input-is-not-a-valid-field', \"\".concat(emojiData.aliases, \" is not a valid alias set\"), {\n            method: 'insertOrUpdateEmoji',\n            input: emojiData.aliases,\n            field: 'Alias_Set'\n          });\n        }\n        aliases = _.without(emojiData.aliases.split(/[\\s,]/).filter(Boolean), emojiData.name);\n      }\n      emojiData.extension = emojiData.extension === 'svg+xml' ? 'png' : emojiData.extension;\n      let matchingResults = [];\n      if (emojiData._id) {\n        matchingResults = await EmojiCustom.findByNameOrAliasExceptID(emojiData.name, emojiData._id).toArray();\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(aliases), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const alias = _step.value;\n            {\n              matchingResults = matchingResults.concat(await EmojiCustom.findByNameOrAliasExceptID(alias, emojiData._id).toArray());\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } else {\n        matchingResults = await EmojiCustom.findByNameOrAlias(emojiData.name).toArray();\n        var _iteratorAbruptCompletion2 = false;\n        var _didIteratorError2 = false;\n        var _iteratorError2;\n        try {\n          for (var _iterator2 = _asyncIterator(aliases), _step2; _iteratorAbruptCompletion2 = !(_step2 = await _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n            const alias = _step2.value;\n            {\n              matchingResults = matchingResults.concat(await EmojiCustom.findByNameOrAlias(alias).toArray());\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n              await _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n      if (matchingResults.length > 0) {\n        throw new Meteor.Error('Custom_Emoji_Error_Name_Or_Alias_Already_In_Use', 'The custom emoji or one of its aliases is already in use', {\n          method: 'insertOrUpdateEmoji'\n        });\n      }\n      if (typeof emojiData.extension === 'undefined') {\n        throw new Meteor.Error('error-the-field-is-required', 'The custom emoji file is required', {\n          method: 'insertOrUpdateEmoji'\n        });\n      }\n      if (!emojiData._id) {\n        // insert emoji\n        const createEmoji = {\n          name: emojiData.name,\n          aliases,\n          extension: emojiData.extension\n        };\n        const _id = (await EmojiCustom.create(createEmoji)).insertedId;\n        void api.broadcast('emoji.updateCustom', createEmoji);\n        return _objectSpread(_objectSpread(_objectSpread({}, emojiData), createEmoji), {}, {\n          _id\n        });\n      }\n      // update emoji\n      if (emojiData.newFile) {\n        await RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(\"\".concat(emojiData.name, \".\").concat(emojiData.extension)));\n        await RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(\"\".concat(emojiData.name, \".\").concat(emojiData.previousExtension)));\n        await RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(\"\".concat(emojiData.previousName, \".\").concat(emojiData.extension)));\n        await RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(\"\".concat(emojiData.previousName, \".\").concat(emojiData.previousExtension)));\n        await EmojiCustom.setExtension(emojiData._id, emojiData.extension);\n      } else if (emojiData.name !== emojiData.previousName) {\n        const rs = await RocketChatFileEmojiCustomInstance.getFileWithReadStream(encodeURIComponent(\"\".concat(emojiData.previousName, \".\").concat(emojiData.previousExtension)));\n        if (rs !== null) {\n          await RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(\"\".concat(emojiData.name, \".\").concat(emojiData.extension)));\n          const ws = RocketChatFileEmojiCustomInstance.createWriteStream(encodeURIComponent(\"\".concat(emojiData.name, \".\").concat(emojiData.previousExtension)), rs.contentType);\n          ws.on('end', () => RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(\"\".concat(emojiData.previousName, \".\").concat(emojiData.previousExtension))));\n          rs.readStream.pipe(ws);\n        }\n      }\n      if (emojiData.name !== emojiData.previousName) {\n        await EmojiCustom.setName(emojiData._id, emojiData.name);\n      }\n      if (emojiData.aliases) {\n        await EmojiCustom.setAliases(emojiData._id, aliases);\n      } else {\n        await EmojiCustom.setAliases(emojiData._id, []);\n      }\n      void api.broadcast('emoji.updateCustom', _objectSpread(_objectSpread({}, emojiData), {}, {\n        aliases\n      }));\n      return _objectSpread(_objectSpread({}, emojiData), {}, {\n        aliases\n      });\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","insertOrUpdateEmoji","api","EmojiCustom","limax","Meteor","_","trim","hasPermissionAsync","RocketChatFileEmojiCustomInstance","__reifyWaitForDeps__","userId","emojiData","Error","name","method","field","replacement","aliases","nameValidation","aliasValidation","replace","test","concat","input","without","split","filter","Boolean","extension","matchingResults","_id","findByNameOrAliasExceptID","toArray","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","alias","value","err","return","findByNameOrAlias","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","length","createEmoji","create","insertedId","broadcast","newFile","deleteFile","encodeURIComponent","previousExtension","previousName","setExtension","rs","getFileWithReadStream","ws","createWriteStream","contentType","on","readStream","pipe","setName","setAliases","__reify_async_result__","_reifyError","self","async"],"sources":["app/emoji-custom/server/lib/insertOrUpdateEmoji.ts"],"sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport { EmojiCustom } from '@rocket.chat/models';\nimport limax from 'limax';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { RocketChatFileEmojiCustomInstance } from '../startup/emoji-custom';\n\ntype EmojiData = {\n\t_id?: string;\n\tname: string;\n\taliases: string;\n\textension: string;\n\tpreviousName?: string;\n\tpreviousExtension?: string;\n\tnewFile?: boolean;\n};\n\ntype EmojiDataWithParsedAliases = Omit<EmojiData, 'aliases' | '_id'> & { _id: string; aliases: string[] };\n\nexport async function insertOrUpdateEmoji(userId: string | null, emojiData: EmojiData): Promise<EmojiDataWithParsedAliases> {\n\tif (!userId || !(await hasPermissionAsync(userId, 'manage-emoji'))) {\n\t\tthrow new Meteor.Error('not_authorized');\n\t}\n\n\tif (!trim(emojiData.name)) {\n\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t\tfield: 'Name',\n\t\t});\n\t}\n\n\temojiData.name = limax(emojiData.name, { replacement: '_' });\n\temojiData.aliases = limax(emojiData.aliases, { replacement: '_' });\n\n\t// allow all characters except colon, whitespace, comma, >, <, &, \", ', /, \\, (, )\n\t// more practical than allowing specific sets of characters; also allows foreign languages\n\tconst nameValidation = /[\\s,:><&\"'\\/\\\\\\(\\)]/;\n\tconst aliasValidation = /[:><&\\|\"'\\/\\\\\\(\\)]/;\n\n\t// silently strip colon; this allows for uploading :emojiname: as emojiname\n\temojiData.name = emojiData.name.replace(/:/g, '');\n\temojiData.aliases = emojiData.aliases.replace(/:/g, '');\n\n\tif (nameValidation.test(emojiData.name)) {\n\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${emojiData.name} is not a valid name`, {\n\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t\tinput: emojiData.name,\n\t\t\tfield: 'Name',\n\t\t});\n\t}\n\n\tlet aliases: string[] = [];\n\tif (emojiData.aliases) {\n\t\tif (aliasValidation.test(emojiData.aliases)) {\n\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${emojiData.aliases} is not a valid alias set`, {\n\t\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t\t\tinput: emojiData.aliases,\n\t\t\t\tfield: 'Alias_Set',\n\t\t\t});\n\t\t}\n\t\taliases = _.without(emojiData.aliases.split(/[\\s,]/).filter(Boolean), emojiData.name);\n\t}\n\n\temojiData.extension = emojiData.extension === 'svg+xml' ? 'png' : emojiData.extension;\n\n\tlet matchingResults = [];\n\n\tif (emojiData._id) {\n\t\tmatchingResults = await EmojiCustom.findByNameOrAliasExceptID(emojiData.name, emojiData._id).toArray();\n\t\tfor await (const alias of aliases) {\n\t\t\tmatchingResults = matchingResults.concat(await EmojiCustom.findByNameOrAliasExceptID(alias, emojiData._id).toArray());\n\t\t}\n\t} else {\n\t\tmatchingResults = await EmojiCustom.findByNameOrAlias(emojiData.name).toArray();\n\t\tfor await (const alias of aliases) {\n\t\t\tmatchingResults = matchingResults.concat(await EmojiCustom.findByNameOrAlias(alias).toArray());\n\t\t}\n\t}\n\n\tif (matchingResults.length > 0) {\n\t\tthrow new Meteor.Error('Custom_Emoji_Error_Name_Or_Alias_Already_In_Use', 'The custom emoji or one of its aliases is already in use', {\n\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t});\n\t}\n\n\tif (typeof emojiData.extension === 'undefined') {\n\t\tthrow new Meteor.Error('error-the-field-is-required', 'The custom emoji file is required', {\n\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t});\n\t}\n\n\tif (!emojiData._id) {\n\t\t// insert emoji\n\t\tconst createEmoji = {\n\t\t\tname: emojiData.name,\n\t\t\taliases,\n\t\t\textension: emojiData.extension,\n\t\t};\n\n\t\tconst _id = (await EmojiCustom.create(createEmoji)).insertedId;\n\n\t\tvoid api.broadcast('emoji.updateCustom', createEmoji);\n\n\t\treturn { ...emojiData, ...createEmoji, _id };\n\t}\n\n\t// update emoji\n\tif (emojiData.newFile) {\n\t\tawait RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.name}.${emojiData.extension}`));\n\t\tawait RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.name}.${emojiData.previousExtension}`));\n\t\tawait RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.previousName}.${emojiData.extension}`));\n\t\tawait RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.previousName}.${emojiData.previousExtension}`));\n\n\t\tawait EmojiCustom.setExtension(emojiData._id, emojiData.extension);\n\t} else if (emojiData.name !== emojiData.previousName) {\n\t\tconst rs = await RocketChatFileEmojiCustomInstance.getFileWithReadStream(\n\t\t\tencodeURIComponent(`${emojiData.previousName}.${emojiData.previousExtension}`),\n\t\t);\n\t\tif (rs !== null) {\n\t\t\tawait RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.name}.${emojiData.extension}`));\n\t\t\tconst ws = RocketChatFileEmojiCustomInstance.createWriteStream(\n\t\t\t\tencodeURIComponent(`${emojiData.name}.${emojiData.previousExtension}`),\n\t\t\t\trs.contentType,\n\t\t\t);\n\t\t\tws.on('end', () =>\n\t\t\t\tRocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.previousName}.${emojiData.previousExtension}`)),\n\t\t\t);\n\t\t\trs.readStream.pipe(ws);\n\t\t}\n\t}\n\n\tif (emojiData.name !== emojiData.previousName) {\n\t\tawait EmojiCustom.setName(emojiData._id, emojiData.name);\n\t}\n\n\tif (emojiData.aliases) {\n\t\tawait EmojiCustom.setAliases(emojiData._id, aliases);\n\t} else {\n\t\tawait EmojiCustom.setAliases(emojiData._id, []);\n\t}\n\n\tvoid api.broadcast('emoji.updateCustom', { ...emojiData, aliases });\n\n\treturn { ...emojiData, aliases } as EmojiDataWithParsedAliases;\n}\n"],"mappings":";;;IAAA,IAAAA,aAAc;IAAAC,MAAM,CAAAC,IAAA,uCAA6B;MAAAC,QAAAC,CAAA;QAAAJ,aAAA,GAAAI,CAAA;MAAA;IAAA;IAAA,IAAAC,cAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAC,QAAAC,CAAA;QAAAC,cAAA,GAAAD,CAAA;MAAA;IAAA;IAAjDH,MAAA,CAAOK,MAAK,CAAE;MAAAC,mBAAM,EAAAA,CAAA,KAAAA;IAA6B;IAAA,IAAAC,GAAA;IAAAP,MAAA,CAAAC,IAAA;MAAAM,IAAAJ,CAAA;QAAAI,GAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,WAAA;IAAAR,MAAA,CAAAC,IAAA;MAAAO,YAAAL,CAAA;QAAAK,WAAA,GAAAL,CAAA;MAAA;IAAA;IAAA,IAAAM,KAAA;IAAAT,MAAA,CAAAC,IAAA;MAAAC,QAAAC,CAAA;QAAAM,KAAA,GAAAN,CAAA;MAAA;IAAA;IAAA,IAAAO,MAAA;IAAAV,MAAA,CAAAC,IAAA;MAAAS,OAAAP,CAAA;QAAAO,MAAA,GAAAP,CAAA;MAAA;IAAA;IAAA,IAAAQ,CAAA;IAAAX,MAAA,CAAAC,IAAA;MAAAC,QAAAC,CAAA;QAAAQ,CAAA,GAAAR,CAAA;MAAA;IAAA;IAAA,IAAAS,IAAA;IAAAZ,MAAA,CAAAC,IAAA;MAAAW,KAAAT,CAAA;QAAAS,IAAA,GAAAT,CAAA;MAAA;IAAA;IAAA,IAAAU,kBAAA;IAAAb,MAAA,CAAAC,IAAA;MAAAY,mBAAAV,CAAA;QAAAU,kBAAA,GAAAV,CAAA;MAAA;IAAA;IAAA,IAAAW,iCAAA;IAAAd,MAAA,CAAAC,IAAA;MAAAa,kCAAAX,CAAA;QAAAW,iCAAA,GAAAX,CAAA;MAAA;IAAA;IAAA,IAAAY,oBAAA,WAAAA,oBAAA;IAsB1C,eAAeT,mBAAmBA,CAACU,MAAqB,EAAEC,SAAoB;MACpF,IAAI,CAACD,MAAM,IAAI,EAAE,MAAMH,kBAAkB,CAACG,MAAM,EAAE,cAAc,CAAC,CAAC,EAAE;QACnE,MAAM,IAAIN,MAAM,CAACQ,KAAK,CAAC,gBAAgB,CAAC;MACzC;MAEA,IAAI,CAACN,IAAI,CAACK,SAAS,CAACE,IAAI,CAAC,EAAE;QAC1B,MAAM,IAAIT,MAAM,CAACQ,KAAK,CAAC,6BAA6B,EAAE,4BAA4B,EAAE;UACnFE,MAAM,EAAE,qBAAqB;UAC7BC,KAAK,EAAE;SACP,CAAC;MACH;MAEAJ,SAAS,CAACE,IAAI,GAAGV,KAAK,CAACQ,SAAS,CAACE,IAAI,EAAE;QAAEG,WAAW,EAAE;MAAG,CAAE,CAAC;MAC5DL,SAAS,CAACM,OAAO,GAAGd,KAAK,CAACQ,SAAS,CAACM,OAAO,EAAE;QAAED,WAAW,EAAE;MAAG,CAAE,CAAC;MAElE;MACA;MACA,MAAME,cAAc,GAAG,qBAAqB;MAC5C,MAAMC,eAAe,GAAG,oBAAoB;MAE5C;MACAR,SAAS,CAACE,IAAI,GAAGF,SAAS,CAACE,IAAI,CAACO,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;MACjDT,SAAS,CAACM,OAAO,GAAGN,SAAS,CAACM,OAAO,CAACG,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;MAEvD,IAAIF,cAAc,CAACG,IAAI,CAACV,SAAS,CAACE,IAAI,CAAC,EAAE;QACxC,MAAM,IAAIT,MAAM,CAACQ,KAAK,CAAC,kCAAkC,KAAAU,MAAA,CAAKX,SAAS,CAACE,IAAI,2BAAwB;UACnGC,MAAM,EAAE,qBAAqB;UAC7BS,KAAK,EAAEZ,SAAS,CAACE,IAAI;UACrBE,KAAK,EAAE;SACP,CAAC;MACH;MAEA,IAAIE,OAAO,GAAa,EAAE;MAC1B,IAAIN,SAAS,CAACM,OAAO,EAAE;QACtB,IAAIE,eAAe,CAACE,IAAI,CAACV,SAAS,CAACM,OAAO,CAAC,EAAE;UAC5C,MAAM,IAAIb,MAAM,CAACQ,KAAK,CAAC,kCAAkC,KAAAU,MAAA,CAAKX,SAAS,CAACM,OAAO,gCAA6B;YAC3GH,MAAM,EAAE,qBAAqB;YAC7BS,KAAK,EAAEZ,SAAS,CAACM,OAAO;YACxBF,KAAK,EAAE;WACP,CAAC;QACH;QACAE,OAAO,GAAGZ,CAAC,CAACmB,OAAO,CAACb,SAAS,CAACM,OAAO,CAACQ,KAAK,CAAC,OAAO,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,EAAEhB,SAAS,CAACE,IAAI,CAAC;MACtF;MAEAF,SAAS,CAACiB,SAAS,GAAGjB,SAAS,CAACiB,SAAS,KAAK,SAAS,GAAG,KAAK,GAAGjB,SAAS,CAACiB,SAAS;MAErF,IAAIC,eAAe,GAAG,EAAE;MAExB,IAAIlB,SAAS,CAACmB,GAAG,EAAE;QAClBD,eAAe,GAAG,MAAM3B,WAAW,CAAC6B,yBAAyB,CAACpB,SAAS,CAACE,IAAI,EAAEF,SAAS,CAACmB,GAAG,CAAC,CAACE,OAAO,EAAE;QAAC,IAAAC,yBAAA;QAAA,IAAAC,iBAAA;QAAA,IAAAC,cAAA;QAAA;UACvG,SAAAC,SAAA,GAAAtC,cAAA,CAA0BmB,OAAO,GAAAoB,KAAA,EAAAJ,yBAAA,KAAAI,KAAA,SAAAD,SAAA,CAAAE,IAAA,IAAAC,IAAA,EAAAN,yBAAA,UAAE;YAAA,MAAlBO,KAAK,GAAAH,KAAA,CAAAI,KAAA;YAAA;cACrBZ,eAAe,GAAGA,eAAe,CAACP,MAAM,CAAC,MAAMpB,WAAW,CAAC6B,yBAAyB,CAACS,KAAK,EAAE7B,SAAS,CAACmB,GAAG,CAAC,CAACE,OAAO,EAAE,CAAC;YAAC;UACvH;QAAC,SAAAU,GAAA;UAAAR,iBAAA;UAAAC,cAAA,GAAAO,GAAA;QAAA;UAAA;YAAA,IAAAT,yBAAA,IAAAG,SAAA,CAAAO,MAAA;cAAA,MAAAP,SAAA,CAAAO,MAAA;YAAA;UAAA;YAAA,IAAAT,iBAAA;cAAA,MAAAC,cAAA;YAAA;UAAA;QAAA;MACF,CAAC,MAAM;QACNN,eAAe,GAAG,MAAM3B,WAAW,CAAC0C,iBAAiB,CAACjC,SAAS,CAACE,IAAI,CAAC,CAACmB,OAAO,EAAE;QAAC,IAAAa,0BAAA;QAAA,IAAAC,kBAAA;QAAA,IAAAC,eAAA;QAAA;UAChF,SAAAC,UAAA,GAAAlD,cAAA,CAA0BmB,OAAO,GAAAgC,MAAA,EAAAJ,0BAAA,KAAAI,MAAA,SAAAD,UAAA,CAAAV,IAAA,IAAAC,IAAA,EAAAM,0BAAA,UAAE;YAAA,MAAlBL,KAAK,GAAAS,MAAA,CAAAR,KAAA;YAAA;cACrBZ,eAAe,GAAGA,eAAe,CAACP,MAAM,CAAC,MAAMpB,WAAW,CAAC0C,iBAAiB,CAACJ,KAAK,CAAC,CAACR,OAAO,EAAE,CAAC;YAAC;UAChG;QAAC,SAAAU,GAAA;UAAAI,kBAAA;UAAAC,eAAA,GAAAL,GAAA;QAAA;UAAA;YAAA,IAAAG,0BAAA,IAAAG,UAAA,CAAAL,MAAA;cAAA,MAAAK,UAAA,CAAAL,MAAA;YAAA;UAAA;YAAA,IAAAG,kBAAA;cAAA,MAAAC,eAAA;YAAA;UAAA;QAAA;MACF;MAEA,IAAIlB,eAAe,CAACqB,MAAM,GAAG,CAAC,EAAE;QAC/B,MAAM,IAAI9C,MAAM,CAACQ,KAAK,CAAC,iDAAiD,EAAE,0DAA0D,EAAE;UACrIE,MAAM,EAAE;SACR,CAAC;MACH;MAEA,IAAI,OAAOH,SAAS,CAACiB,SAAS,KAAK,WAAW,EAAE;QAC/C,MAAM,IAAIxB,MAAM,CAACQ,KAAK,CAAC,6BAA6B,EAAE,mCAAmC,EAAE;UAC1FE,MAAM,EAAE;SACR,CAAC;MACH;MAEA,IAAI,CAACH,SAAS,CAACmB,GAAG,EAAE;QACnB;QACA,MAAMqB,WAAW,GAAG;UACnBtC,IAAI,EAAEF,SAAS,CAACE,IAAI;UACpBI,OAAO;UACPW,SAAS,EAAEjB,SAAS,CAACiB;SACrB;QAED,MAAME,GAAG,GAAG,CAAC,MAAM5B,WAAW,CAACkD,MAAM,CAACD,WAAW,CAAC,EAAEE,UAAU;QAE9D,KAAKpD,GAAG,CAACqD,SAAS,CAAC,oBAAoB,EAAEH,WAAW,CAAC;QAErD,OAAA1D,aAAA,CAAAA,aAAA,CAAAA,aAAA,KAAYkB,SAAS,GAAKwC,WAAW;UAAErB;QAAG;MAC3C;MAEA;MACA,IAAInB,SAAS,CAAC4C,OAAO,EAAE;QACtB,MAAM/C,iCAAiC,CAACgD,UAAU,CAACC,kBAAkB,IAAAnC,MAAA,CAAIX,SAAS,CAACE,IAAI,OAAAS,MAAA,CAAIX,SAAS,CAACiB,SAAS,CAAE,CAAC,CAAC;QAClH,MAAMpB,iCAAiC,CAACgD,UAAU,CAACC,kBAAkB,IAAAnC,MAAA,CAAIX,SAAS,CAACE,IAAI,OAAAS,MAAA,CAAIX,SAAS,CAAC+C,iBAAiB,CAAE,CAAC,CAAC;QAC1H,MAAMlD,iCAAiC,CAACgD,UAAU,CAACC,kBAAkB,IAAAnC,MAAA,CAAIX,SAAS,CAACgD,YAAY,OAAArC,MAAA,CAAIX,SAAS,CAACiB,SAAS,CAAE,CAAC,CAAC;QAC1H,MAAMpB,iCAAiC,CAACgD,UAAU,CAACC,kBAAkB,IAAAnC,MAAA,CAAIX,SAAS,CAACgD,YAAY,OAAArC,MAAA,CAAIX,SAAS,CAAC+C,iBAAiB,CAAE,CAAC,CAAC;QAElI,MAAMxD,WAAW,CAAC0D,YAAY,CAACjD,SAAS,CAACmB,GAAG,EAAEnB,SAAS,CAACiB,SAAS,CAAC;MACnE,CAAC,MAAM,IAAIjB,SAAS,CAACE,IAAI,KAAKF,SAAS,CAACgD,YAAY,EAAE;QACrD,MAAME,EAAE,GAAG,MAAMrD,iCAAiC,CAACsD,qBAAqB,CACvEL,kBAAkB,IAAAnC,MAAA,CAAIX,SAAS,CAACgD,YAAY,OAAArC,MAAA,CAAIX,SAAS,CAAC+C,iBAAiB,CAAE,CAAC,CAC9E;QACD,IAAIG,EAAE,KAAK,IAAI,EAAE;UAChB,MAAMrD,iCAAiC,CAACgD,UAAU,CAACC,kBAAkB,IAAAnC,MAAA,CAAIX,SAAS,CAACE,IAAI,OAAAS,MAAA,CAAIX,SAAS,CAACiB,SAAS,CAAE,CAAC,CAAC;UAClH,MAAMmC,EAAE,GAAGvD,iCAAiC,CAACwD,iBAAiB,CAC7DP,kBAAkB,IAAAnC,MAAA,CAAIX,SAAS,CAACE,IAAI,OAAAS,MAAA,CAAIX,SAAS,CAAC+C,iBAAiB,CAAE,CAAC,EACtEG,EAAE,CAACI,WAAW,CACd;UACDF,EAAE,CAACG,EAAE,CAAC,KAAK,EAAE,MACZ1D,iCAAiC,CAACgD,UAAU,CAACC,kBAAkB,IAAAnC,MAAA,CAAIX,SAAS,CAACgD,YAAY,OAAArC,MAAA,CAAIX,SAAS,CAAC+C,iBAAiB,CAAE,CAAC,CAAC,CAC5H;UACDG,EAAE,CAACM,UAAU,CAACC,IAAI,CAACL,EAAE,CAAC;QACvB;MACD;MAEA,IAAIpD,SAAS,CAACE,IAAI,KAAKF,SAAS,CAACgD,YAAY,EAAE;QAC9C,MAAMzD,WAAW,CAACmE,OAAO,CAAC1D,SAAS,CAACmB,GAAG,EAAEnB,SAAS,CAACE,IAAI,CAAC;MACzD;MAEA,IAAIF,SAAS,CAACM,OAAO,EAAE;QACtB,MAAMf,WAAW,CAACoE,UAAU,CAAC3D,SAAS,CAACmB,GAAG,EAAEb,OAAO,CAAC;MACrD,CAAC,MAAM;QACN,MAAMf,WAAW,CAACoE,UAAU,CAAC3D,SAAS,CAACmB,GAAG,EAAE,EAAE,CAAC;MAChD;MAEA,KAAK7B,GAAG,CAACqD,SAAS,CAAC,oBAAoB,EAAA7D,aAAA,CAAAA,aAAA,KAAOkB,SAAS;QAAEM;MAAO,EAAE,CAAC;MAEnE,OAAAxB,aAAA,CAAAA,aAAA,KAAYkB,SAAS;QAAEM;MAAO;IAC/B;IAACsD,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"8b98ac2a9eca2f7f70a95a980480339fd723c93d"}
