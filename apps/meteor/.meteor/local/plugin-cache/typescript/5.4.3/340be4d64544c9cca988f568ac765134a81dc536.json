{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/modules/listeners/listeners.module.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/modules/listeners/listeners.module.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/modules/listeners/listeners.module.ts","inputSourceMap":{"version":3,"file":"server/modules/listeners/listeners.module.ts","sourceRoot":"","sources":["server/modules/listeners/listeners.module.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,kBAAkB,EAAE,MAAM,4BAA4B,CAAC;AAChE,OAAO,EAAE,cAAc,EAAE,mBAAmB,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AAE5F,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,KAAK,EAAE,MAAM,6BAA6B,CAAC;AAEpD,OAAO,EAAE,QAAQ,EAAE,MAAM,qCAAqC,CAAC;AAG/D,MAAM,uBAAuB,GAAG,OAAO,CAAC,GAAG,CAAC,sBAAsB,KAAK,MAAM,CAAC;AAE9E,MAAM,UAAU,GAAsC;IACrD,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;IACvB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC;IACtB,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;CACf,CAAC;AAEX,MAAM,kBAAkB,GAA2B;IAClD,QAAQ,EAAE,OAAO;IACjB,OAAO,EAAE,SAAS;IAClB,OAAO,EAAE,SAAS;CACT,CAAC;AAEX,MAAM,OAAO,eAAe;IAC3B,YAAY,OAAsB,EAAE,aAAkC;QACrE,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAE7C,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC,CAAC;QACxF,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC,CAAC;QAE3F,OAAO,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC,KAAK,EAAE,EAAE;YAC/C,aAAa,CAAC,0BAA0B,CAAC,mBAAmB,EAAE;gBAC7D,SAAS,EAAE,KAAK;aAChB,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC,KAAK,EAAE,EAAE;YAC/C,aAAa,CAAC,0BAA0B,CAAC,mBAAmB,EAAE;gBAC7D,SAAS,EAAE,KAAK;aAChB,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,GAAG,EAAE,EAAE;YAC3C,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,yBAAyB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE;YAChE,IAAI,CAAC,uBAAuB,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC;gBAC7C,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAS,+BAA+B,CAAC;oBAC1E,CAAC,CAAC,QAAQ;yBACP,GAAG,CAAS,+BAA+B,CAAC;yBAC5C,KAAK,CAAC,GAAG,CAAC;yBACV,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;oBACjC,CAAC,CAAC,EAAE,CAAC;gBAEN,OAAO,CAAC,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;oBAC/B,MAAM,EAAE,QAAQ,CAAC,GAAG,CAAC,yBAAyB,CAAC;oBAC/C,SAAS,EAAE,IAAI;oBACf,aAAa;oBACb,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI;wBACpC,KAAK,EAAE;4BACN,YAAY,EAAE,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC;4BACjD,iBAAiB,EAAE,QAAQ,CAAC,GAAG,CAAC,0BAA0B,CAAC;yBAC3D;qBACD,CAAC;iBACF,CAAC,CAAC;YACJ,CAAC;YAED,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,SAAS,EAAE;gBACtD,SAAS,EAAE,KAAK;gBAChB,CAAC,EAAE;oBACF,GAAG,EAAE,YAAY;oBACjB,QAAQ,EAAE,YAAY;iBACtB;gBACD,OAAO,EAAE,IAAI;gBACb,GAAG,EAAE,OAAO,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBACtC,GAAG;gBACH,EAAE,EAAE,IAAI,IAAI,EAAE;gBACd,UAAU,EAAE,IAAI,IAAI,EAAE;gBACtB,GAAG,OAAO;aACV,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,EAAE,EAAE;YAChE,aAAa,CAAC,0BAA0B,CAAC,qBAAqB,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE;YACvE,aAAa,CAAC,0BAA0B,CAAC,cAAc,EAAE;gBACxD,GAAG;gBACH,IAAI;aACJ,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE;YACvE,aAAa,CAAC,0BAA0B,CAAC,cAAc,EAAE;gBACxD,QAAQ;gBACR,IAAI;aACJ,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE;YACzD,aAAa,CAAC,0BAA0B,CAAC,eAAe,EAAE;gBACzD,MAAM;gBACN,GAAG,IAAI;aACP,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,yBAAyB,EAAE,CAAC,UAAU,EAAE,EAAE;YACzD,aAAa,CAAC,0BAA0B,CAAC,wBAAwB,EAAE;gBAClE,cAAc,EAAE,UAAU;aAC1B,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,IAAI,EAAE,EAAE;YAC5C,aAAa,CAAC,0BAA0B,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,MAAM,EAAE,EAAE;YAC7C,aAAa,CAAC,0BAA0B,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CACd,uBAAuB,EACvB,CAAC,EACA,MAAM,EACN,MAAM,EACN,MAAM,GASN,EAAE,EAAE;YACJ,aAAa,CAAC,wBAAwB,CAAC,MAAM,EAAE,kBAAkB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;QACxF,CAAC,CACD,CAAC;QAEF,OAAO,CAAC,OAAO,CAAC,uBAAuB,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE;YAC5D,gBAAgB;YACf,aAAa,CAAC,UAAkB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YAE/C,aAAa,CAAC,UAAU,CAAC,GAAG,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;YAC/C,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;YAChE,IAAI,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC1B,OAAO;YACR,CAAC;YAED,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,UAAU,EAAE;gBACvD,IAAI,EAAE,SAAS;gBACf,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE;oBACL,MAAM;oBACN,GAAG,CAAC,UAAU,IAAI,EAAE,UAAU,EAAE,CAAC;iBACjC;gBACD,KAAK,EAAE,EAAE;aACT,CAAC,CAAC;YAEH,aAAa,CAAC,0BAA0B,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;YAEtH,IAAI,GAAG,EAAE,CAAC;gBACT,aAAa,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE,UAAU,CAAC,CAAC;YAC3E,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,yBAAyB,EAAE,CAAC,UAAU,EAAE,EAAE;YACzD,aAAa,CAAC,0BAA0B,CAAC,wBAAwB,EAAE;gBAClE,cAAc,EAAE,UAAU;aAC1B,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YACvD,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;gBAClB,OAAO;YACR,CAAC;YAED,aAAa,CAAC,iBAAiB,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,CAClI,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,EAAE;gBACxD,SAAS;gBACT,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,OAAO,CAAC;aACxB,CAAC,CACF,CAAC;YAEF,aAAa,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,EAAQ,EAAE;YACrE,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,cAAc,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,EAAE,YAAY,EAAE,YAAY,EAAE,EAAE,EAAE;YACzE,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC;gBAC1B,OAAO;YACR,CAAC;YAED,+HAA+H;YAC/H,IAAI,YAAY,KAAK,SAAS,EAAE,CAAC;gBAChC,aAAa,CAAC,iBAAiB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;YACxF,CAAC;YAED,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;YAEhF,aAAa,CAAC,wBAAwB,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,uBAAuB,EAAE,YAAY,EAAE,YAAmB,CAAC,CAAC;QACxH,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,EAAQ,EAAE;YAC/D,aAAa,CAAC,WAAW,CAAC,oBAAoB,CAAC,OAAO,EAAE;gBACvD,IAAI,EAAE,YAAY;gBAClB,GAAI,IAAc;aAClB,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,OAAO,EAAE,IAAI,EAAE,EAAiB,EAAE;YAC3F,MAAM,IAAI,GAAG,kBAAkB,CAAC,YAAY,CAAoC,CAAC;YACjF,IAAI,YAAY,KAAK,SAAS,EAAE,CAAC;gBAChC,aAAa,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,OAAO,CAAC,GAAG,EAAE;oBACvE,GAAG,EAAE,OAAO,CAAC,GAAG;oBAChB,YAAY;iBACZ,CAAC,CAAC;gBAEH,IAAI,OAAO,CAAC,UAAU,EAAE,CAAC;oBACxB,OAAO,aAAa,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,cAAc,OAAO,CAAC,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;gBAC7H,CAAC;gBAED,OAAO,aAAa,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,QAAQ,EAAE;oBAC3E,IAAI;oBACJ,GAAG,OAAO;iBACV,CAAC,CAAC;YACJ,CAAC;YAED,mGAAmG;YACnG,IACC,YAAY,KAAK,SAAS;gBAC1B,IAAI,EAAE,cAAc,CAAC,UAAU,CAAC;gBAChC,IAAI,EAAE,cAAc,CAAC,QAAQ,CAAC;gBAC9B,IAAI,EAAE,cAAc,CAAC,YAAY,CAAC;gBAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAC7B,CAAC;gBACF,OAAO;YACR,CAAC;YAED,aAAa,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,OAAO,CAAC,GAAG,EAAE;gBACvE,GAAG,OAAO;gBACV,YAAY;aACZ,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;gBACzB,OAAO,aAAa,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,QAAQ,EAAE;oBAC3E,IAAI;oBACJ,GAAG,OAAO;iBACV,CAAC,CAAC;YACJ,CAAC;YAED,aAAa,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,cAAc,OAAO,CAAC,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;YAErH,IAAI,YAAY,KAAK,SAAS,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC;gBACrD,aAAa,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;YAC5F,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,OAAO,EAAE,EAAiB,EAAE;YACpF,wFAAwF;YACxF,IAAI,YAAY,KAAK,SAAS,IAAI,mBAAmB,CAAC,OAAO,CAAC,EAAE,CAAC;gBAChE,IAAI,CAAC;oBACJ,MAAM,MAAM,GAAG,MAAM,kBAAkB,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;oBACpE,IAAI,MAAM,KAAK,SAAS,IAAI,CAAC,CAAC,MAAM,YAAY,KAAK,CAAC,EAAE,CAAC;wBACxD,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC;oBACxB,CAAC;gBACF,CAAC;gBAAC,OAAO,GAAY,EAAE,CAAC;oBACvB,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,kFAAkF,EAAE,GAAG,EAAE,CAAC,CAAC;oBAC/G,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC;gBACtC,CAAC;YACF,CAAC;YAED,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;gBACpB,OAAO;YACR,CAAC;YAED,MAAM,KAAK,GAAG;gBACb,GAAG,EAAE,OAAO,CAAC,GAAG;gBAChB,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC;gBAC1D,UAAU,EAAE,OAAO,CAAC,UAAU;gBAC9B,UAAU,EAAE,OAAO,CAAC,UAAU;gBAC9B,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;aAC9B,CAAC;YAEd,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI,EAAE,CAAC;gBAC7B,aAAa,CAAC,uBAAuB,CAAC,yBAAyB,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;gBACtF,aAAa,CAAC,uBAAuB,CAAC,aAAa,EAAE,CAAC,yBAAyB,EAAE,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1G,CAAC;YAED,aAAa,CAAC,0BAA0B,CAAC,0BAA0B,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;QAC3F,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,EAAQ,EAAE;YAC/D,mEAAmE;YACnE,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;YAE9D,aAAa,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAwB,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,KAAK,EAAQ,EAAE;YAC9C,QAAQ,KAAK,CAAC,YAAY,EAAE,CAAC;gBAC5B,KAAK,SAAS;oBACb,aAAa,CAAC,wBAAwB,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,EAAE;wBAC5D,EAAE,EAAE,KAAK,CAAC,EAAE;wBACZ,IAAI,EAAE,KAAK,CAAC,IAAI;wBAChB,KAAK,EAAE,KAAK,CAAC,KAAK;wBAClB,IAAI,EAAE,SAAS;qBACf,CAAC,CAAC;oBACH,MAAM;gBACP,KAAK,UAAU;oBACd,aAAa,CAAC,wBAAwB,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;oBACnH,MAAM;gBACP,KAAK,SAAS;oBACb,aAAa,CAAC,wBAAwB,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;oBAChG,MAAM;YACR,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,0BAA0B,EAAE,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAQ,EAAE;YACtF,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC;gBAC7B,OAAO;YACR,CAAC;YACD,QAAQ,YAAY,EAAE,CAAC;gBACtB,KAAK,SAAS,CAAC,CAAC,CAAC;oBAChB,aAAa,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE;wBACjF,EAAE;wBACF,IAAI;wBACJ,IAAI,EAAE,YAAY;qBAClB,CAAC,CAAC;oBACH,MAAM;gBACP,CAAC;gBACD,KAAK,UAAU,CAAC,CAAC,CAAC;oBACjB,aAAa,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE;wBACjF,IAAI;wBACJ,IAAI,EAAE,YAAY;qBAClB,CAAC,CAAC;oBACH,MAAM;gBACP,CAAC;YACF,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,gCAAgC,EAAE,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,EAAQ,EAAE;YAClF,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,OAAO,EAAE,CAAC;gBACd,OAAO;YACR,CAAC;YAED,aAAa,CAAC,wBAAwB,CAAC,OAAO,EAAE,qBAAqB,EAAE;gBACtE,MAAM,EAAE,YAAY;gBACpB,GAAG,IAAI;aACP,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,MAAM,EAAE,MAAM,EAAQ,EAAE;YACvD,aAAa,CAAC,wBAAwB,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,QAAQ,EAAQ,EAAE;YAChD,aAAa,CAAC,0BAA0B,CAAC,YAAY,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,aAAa;YACnF,aAAa,CAAC,0BAA0B,CAAC,gBAAgB,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,QAAQ,EAAQ,EAAE;YACrD,aAAa,CAAC,0BAA0B,CAAC,gBAAgB,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,QAAQ,EAAQ,EAAE;YACpD,aAAa,CAAC,0BAA0B,CAAC,gBAAgB,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,MAAM,EAAE,IAAI,EAAQ,EAAE;YACrD,aAAa,CAAC,wBAAwB,CAAC,MAAM,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,MAAM,EAAE,IAAI,EAAQ,EAAE;YAC3D,aAAa,CAAC,wBAAwB,CAAC,MAAM,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,GAAG,EAAE,YAAY,EAAQ,EAAE;YAC7D,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC,GAAG,EAAE,WAAW,EAAQ,EAAE;YAClE,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,eAAe,EAAE,WAAW,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC,GAAG,EAAE,IAAI,EAAQ,EAAE;YAC3D,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,GAAG,EAAE,IAAI,EAAQ,EAAE;YACpD,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,uBAAuB,EAAE,CAAC,GAAG,EAAE,IAAI,EAAQ,EAAE;YAC5D,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC,GAAG,EAAE,IAAI,EAAQ,EAAE;YAC3D,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,0BAA0B,EAAE,CAAC,GAAG,EAAE,IAAI,EAAQ,EAAE;YAC/D,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,mBAAmB,EAAE,IAAI,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,0BAA0B,EAAE,CAAC,IAAI,EAAQ,EAAE;YAC1D,aAAa,CAAC,uBAAuB,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;YACjE,aAAa,CAAC,uBAAuB,CAAC,aAAa,EAAE,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,0BAA0B,EAAE,CAAC,IAAI,EAAQ,EAAE;YAC1D,aAAa,CAAC,uBAAuB,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;YACjE,aAAa,CAAC,uBAAuB,CAAC,aAAa,EAAE,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,GAAG,EAAE,IAAI,EAAQ,EAAE;YACtD,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,yBAAyB,EAAE,CAAC,EAAE,OAAO,EAAE,EAAQ,EAAE;YAChE,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBACvB,oEAAoE;gBACpE,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,yBAAyB,EAAE,CAAC,OAAO,EAAQ,EAAE;YAC5D,aAAa,CAAC,0BAA0B,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,MAAM,EAAE,IAAI,EAAQ,EAAE;YAC1D,aAAa,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,CAAC,kBAAkB,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,EAAE,EAAE,EAAiB,EAAE;YACvF,aAAa,CAAC,0BAA0B,CAAC,8BAA8B,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QAClH,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,KAAa,EAAE,EAAE;YAC/C,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;YAClE,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/E,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,KAAa,EAAE,EAAE;YACjD,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;YACpE,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,aAAa,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,KAAa,EAAE,EAAE;YACjD,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;YACpE,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,aAAa,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,KAAa,EAAE,MAAiB,EAAE,EAAE;YACzE,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;YACrF,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,kBAAkB,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;QAClG,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,KAAa,EAAE,OAAoB,EAAE,EAAE;YAC9E,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,oBAAoB,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YACxF,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,oBAAoB,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;QACrG,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,OAAe,EAAE,EAAE;YACpD,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;YACxE,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,OAAe,EAAE,EAAE;YACvD,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;YAC3E,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,kBAAkB,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACxF,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,OAAe,EAAE,EAAE;YACtD,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;YAC1E,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,OAAe,EAAE,EAAE;YACtD,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;YAC1E,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,GAAG,EAAE;YACvC,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;YACjE,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAmE,EAAE,EAAE;YAClI,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,EAAE,MAAM,EAAE,kBAAkB,EAAuD,EAAE,EAAE;YACvH,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;IACJ,CAAC;CACD","sourcesContent":["import type { AppStatus } from '@rocket.chat/apps-engine/definition/AppStatus';\nimport type { ISetting as AppsSetting } from '@rocket.chat/apps-engine/definition/settings';\nimport type { IServiceClass } from '@rocket.chat/core-services';\nimport { EnterpriseSettings } from '@rocket.chat/core-services';\nimport { isSettingColor, isSettingEnterprise, UserStatus } from '@rocket.chat/core-typings';\nimport type { IUser, IRoom, IRole, VideoConference, ISetting, IOmnichannelRoom, IMessage, IOTRMessage } from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\nimport { parse } from '@rocket.chat/message-parser';\n\nimport { settings } from '../../../app/settings/server/cached';\nimport type { NotificationsModule } from '../notifications/notifications.module';\n\nconst isMessageParserDisabled = process.env.DISABLE_MESSAGE_PARSER === 'true';\n\nconst STATUS_MAP: Record<UserStatus, 0 | 1 | 2 | 3> = {\n\t[UserStatus.OFFLINE]: 0,\n\t[UserStatus.ONLINE]: 1,\n\t[UserStatus.AWAY]: 2,\n\t[UserStatus.BUSY]: 3,\n\t[UserStatus.DISABLED]: 0,\n} as const;\n\nconst minimongoChangeMap: Record<string, string> = {\n\tinserted: 'added',\n\tupdated: 'changed',\n\tremoved: 'removed',\n} as const;\n\nexport class ListenersModule {\n\tconstructor(service: IServiceClass, notifications: NotificationsModule) {\n\t\tconst logger = new Logger('ListenersModule');\n\n\t\tservice.onEvent('license.sync', () => notifications.notifyAllInThisInstance('license'));\n\t\tservice.onEvent('license.actions', () => notifications.notifyAllInThisInstance('license'));\n\n\t\tservice.onEvent('emoji.deleteCustom', (emoji) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('deleteEmojiCustom', {\n\t\t\t\temojiData: emoji,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('emoji.updateCustom', (emoji) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('updateEmojiCustom', {\n\t\t\t\temojiData: emoji,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('user.forceLogout', (uid) => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'force_logout');\n\t\t});\n\n\t\tservice.onEvent('notify.ephemeralMessage', (uid, rid, message) => {\n\t\t\tif (!isMessageParserDisabled && message.msg) {\n\t\t\t\tconst customDomains = settings.get<string>('Message_CustomDomain_AutoLink')\n\t\t\t\t\t? settings\n\t\t\t\t\t\t\t.get<string>('Message_CustomDomain_AutoLink')\n\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t.map((domain) => domain.trim())\n\t\t\t\t\t: [];\n\n\t\t\t\tmessage.md = parse(message.msg, {\n\t\t\t\t\tcolors: settings.get('HexColorPreview_Enabled'),\n\t\t\t\t\temoticons: true,\n\t\t\t\t\tcustomDomains,\n\t\t\t\t\t...(settings.get('Katex_Enabled') && {\n\t\t\t\t\t\tkatex: {\n\t\t\t\t\t\t\tdollarSyntax: settings.get('Katex_Dollar_Syntax'),\n\t\t\t\t\t\t\tparenthesisSyntax: settings.get('Katex_Parenthesis_Syntax'),\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'message', {\n\t\t\t\tgroupable: false,\n\t\t\t\tu: {\n\t\t\t\t\t_id: 'rocket.cat',\n\t\t\t\t\tusername: 'rocket.cat',\n\t\t\t\t},\n\t\t\t\tprivate: true,\n\t\t\t\t_id: message._id || String(Date.now()),\n\t\t\t\trid,\n\t\t\t\tts: new Date(),\n\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t...message,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('permission.changed', ({ clientAction, data }) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('permissions-changed', clientAction, data);\n\t\t});\n\n\t\tservice.onEvent('room.avatarUpdate', ({ _id: rid, avatarETag: etag }) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('updateAvatar', {\n\t\t\t\trid,\n\t\t\t\tetag,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('user.avatarUpdate', ({ username, avatarETag: etag }) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('updateAvatar', {\n\t\t\t\tusername,\n\t\t\t\tetag,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('user.deleted', ({ _id: userId }, data) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('Users:Deleted', {\n\t\t\t\tuserId,\n\t\t\t\t...data,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('user.deleteCustomStatus', (userStatus) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('deleteCustomUserStatus', {\n\t\t\t\tuserStatusData: userStatus,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('user.nameChanged', (user) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('Users:NameChanged', user);\n\t\t});\n\n\t\tservice.onEvent('user.roleUpdate', (update) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('roles-change', update);\n\t\t});\n\n\t\tservice.onEvent(\n\t\t\t'user.video-conference',\n\t\t\t({\n\t\t\t\tuserId,\n\t\t\t\taction,\n\t\t\t\tparams,\n\t\t\t}: {\n\t\t\t\tuserId: string;\n\t\t\t\taction: string;\n\t\t\t\tparams: {\n\t\t\t\t\tcallId: VideoConference['_id'];\n\t\t\t\t\tuid: IUser['_id'];\n\t\t\t\t\trid: IRoom['_id'];\n\t\t\t\t};\n\t\t\t}) => {\n\t\t\t\tnotifications.notifyUserInThisInstance(userId, 'video-conference', { action, params });\n\t\t\t},\n\t\t);\n\n\t\tservice.onEvent('room.video-conference', ({ rid, callId }) => {\n\t\t\t/* deprecated */\n\t\t\t(notifications.notifyRoom as any)(rid, callId);\n\n\t\t\tnotifications.notifyRoom(rid, 'videoconf', callId);\n\t\t});\n\n\t\tservice.onEvent('presence.status', ({ user }) => {\n\t\t\tconst { _id, username, name, status, statusText, roles } = user;\n\t\t\tif (!status || !username) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnotifications.notifyUserInThisInstance(_id, 'userData', {\n\t\t\t\ttype: 'updated',\n\t\t\t\tid: _id,\n\t\t\t\tdiff: {\n\t\t\t\t\tstatus,\n\t\t\t\t\t...(statusText && { statusText }),\n\t\t\t\t},\n\t\t\t\tunset: {},\n\t\t\t});\n\n\t\t\tnotifications.notifyLoggedInThisInstance('user-status', [_id, username, STATUS_MAP[status], statusText, name, roles]);\n\n\t\t\tif (_id) {\n\t\t\t\tnotifications.sendPresence(_id, username, STATUS_MAP[status], statusText);\n\t\t\t}\n\t\t});\n\n\t\tservice.onEvent('user.updateCustomStatus', (userStatus) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('updateCustomUserStatus', {\n\t\t\t\tuserStatusData: userStatus,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('watch.messages', async ({ message }) => {\n\t\t\tif (!message.rid) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnotifications.streamRoomMessage._emit('__my_messages__', [message], undefined, false, (streamer, _sub, eventName, args, allowed) =>\n\t\t\t\tstreamer.changedPayload(streamer.subscriptionName, 'id', {\n\t\t\t\t\teventName,\n\t\t\t\t\targs: [...args, allowed],\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tnotifications.streamRoomMessage.emitWithoutBroadcast(message.rid, message);\n\t\t});\n\n\t\tservice.onEvent('notify.messagesRead', ({ rid, until, tmid }): void => {\n\t\t\tnotifications.notifyRoomInThisInstance(rid, 'messagesRead', { tmid, until });\n\t\t});\n\n\t\tservice.onEvent('watch.subscriptions', ({ clientAction, subscription }) => {\n\t\t\tif (!subscription.u?._id) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// emit a removed event on msg stream to remove the user's stream-room-messages subscription when the user is removed from room\n\t\t\tif (clientAction === 'removed') {\n\t\t\t\tnotifications.streamRoomMessage.__emit(subscription.u._id, clientAction, subscription);\n\t\t\t}\n\n\t\t\tnotifications.streamUser.__emit(subscription.u._id, clientAction, subscription);\n\n\t\t\tnotifications.notifyUserInThisInstance(subscription.u._id, 'subscriptions-changed', clientAction, subscription as any);\n\t\t});\n\n\t\tservice.onEvent('watch.roles', ({ clientAction, role }): void => {\n\t\t\tnotifications.streamRoles.emitWithoutBroadcast('roles', {\n\t\t\t\ttype: clientAction,\n\t\t\t\t...(role as IRole),\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('watch.inquiries', async ({ clientAction, inquiry, diff }): Promise<void> => {\n\t\t\tconst type = minimongoChangeMap[clientAction] as 'added' | 'changed' | 'removed';\n\t\t\tif (clientAction === 'removed') {\n\t\t\t\tnotifications.streamLivechatQueueData.emitWithoutBroadcast(inquiry._id, {\n\t\t\t\t\t_id: inquiry._id,\n\t\t\t\t\tclientAction,\n\t\t\t\t});\n\n\t\t\t\tif (inquiry.department) {\n\t\t\t\t\treturn notifications.streamLivechatQueueData.emitWithoutBroadcast(`department/${inquiry.department}`, { type, ...inquiry });\n\t\t\t\t}\n\n\t\t\t\treturn notifications.streamLivechatQueueData.emitWithoutBroadcast('public', {\n\t\t\t\t\ttype,\n\t\t\t\t\t...inquiry,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Don't do notifications for updating inquiries when the only thing changing is the queue metadata\n\t\t\tif (\n\t\t\t\tclientAction === 'updated' &&\n\t\t\t\tdiff?.hasOwnProperty('lockedAt') &&\n\t\t\t\tdiff?.hasOwnProperty('locked') &&\n\t\t\t\tdiff?.hasOwnProperty('_updatedAt') &&\n\t\t\t\tObject.keys(diff).length === 3\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnotifications.streamLivechatQueueData.emitWithoutBroadcast(inquiry._id, {\n\t\t\t\t...inquiry,\n\t\t\t\tclientAction,\n\t\t\t});\n\n\t\t\tif (!inquiry.department) {\n\t\t\t\treturn notifications.streamLivechatQueueData.emitWithoutBroadcast('public', {\n\t\t\t\t\ttype,\n\t\t\t\t\t...inquiry,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tnotifications.streamLivechatQueueData.emitWithoutBroadcast(`department/${inquiry.department}`, { type, ...inquiry });\n\n\t\t\tif (clientAction === 'updated' && !diff?.department) {\n\t\t\t\tnotifications.streamLivechatQueueData.emitWithoutBroadcast('public', { type, ...inquiry });\n\t\t\t}\n\t\t});\n\n\t\tservice.onEvent('watch.settings', async ({ clientAction, setting }): Promise<void> => {\n\t\t\t// if a EE setting changed make sure we broadcast the correct value according to license\n\t\t\tif (clientAction !== 'removed' && isSettingEnterprise(setting)) {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await EnterpriseSettings.changeSettingValue(setting);\n\t\t\t\t\tif (result !== undefined && !(result instanceof Error)) {\n\t\t\t\t\t\tsetting.value = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (err: unknown) {\n\t\t\t\t\tlogger.error({ msg: 'Error getting proper enterprise setting value. Returning `invalidValue` instead.', err });\n\t\t\t\t\tsetting.value = setting.invalidValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setting.hidden) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst value = {\n\t\t\t\t_id: setting._id,\n\t\t\t\tvalue: setting.value,\n\t\t\t\t...(isSettingColor(setting) && { editor: setting.editor }),\n\t\t\t\tproperties: setting.properties,\n\t\t\t\tenterprise: setting.enterprise,\n\t\t\t\trequiredOnWizard: setting.requiredOnWizard,\n\t\t\t} as ISetting;\n\n\t\t\tif (setting.public === true) {\n\t\t\t\tnotifications.notifyAllInThisInstance('public-settings-changed', clientAction, value);\n\t\t\t\tnotifications.notifyAllInThisInstance('public-info', ['public-settings-changed', [clientAction, value]]);\n\t\t\t}\n\n\t\t\tnotifications.notifyLoggedInThisInstance('private-settings-changed', clientAction, value);\n\t\t});\n\n\t\tservice.onEvent('watch.rooms', ({ clientAction, room }): void => {\n\t\t\t// this emit will cause the user to receive a 'rooms-changed' event\n\t\t\tnotifications.streamUser.__emit(room._id, clientAction, room);\n\n\t\t\tnotifications.streamRoomData.emitWithoutBroadcast(room._id, room as IOmnichannelRoom);\n\t\t});\n\n\t\tservice.onEvent('watch.users', (event): void => {\n\t\t\tswitch (event.clientAction) {\n\t\t\t\tcase 'updated':\n\t\t\t\t\tnotifications.notifyUserInThisInstance(event.id, 'userData', {\n\t\t\t\t\t\tid: event.id,\n\t\t\t\t\t\tdiff: event.diff,\n\t\t\t\t\t\tunset: event.unset,\n\t\t\t\t\t\ttype: 'updated',\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'inserted':\n\t\t\t\t\tnotifications.notifyUserInThisInstance(event.id, 'userData', { id: event.id, data: event.data, type: 'inserted' });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'removed':\n\t\t\t\t\tnotifications.notifyUserInThisInstance(event.id, 'userData', { id: event.id, type: 'removed' });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tservice.onEvent('watch.integrationHistory', ({ clientAction, data, diff, id }): void => {\n\t\t\tif (!data?.integration?._id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tswitch (clientAction) {\n\t\t\t\tcase 'updated': {\n\t\t\t\t\tnotifications.streamIntegrationHistory.emitWithoutBroadcast(data.integration._id, {\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tdiff,\n\t\t\t\t\t\ttype: clientAction,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'inserted': {\n\t\t\t\t\tnotifications.streamIntegrationHistory.emitWithoutBroadcast(data.integration._id, {\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\ttype: clientAction,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tservice.onEvent('watch.livechatDepartmentAgents', ({ clientAction, data }): void => {\n\t\t\tconst { agentId } = data;\n\t\t\tif (!agentId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnotifications.notifyUserInThisInstance(agentId, 'departmentAgentData', {\n\t\t\t\taction: clientAction,\n\t\t\t\t...data,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('banner.user', (userId, banner): void => {\n\t\t\tnotifications.notifyUserInThisInstance(userId, 'banners', banner);\n\t\t});\n\n\t\tservice.onEvent('banner.new', (bannerId): void => {\n\t\t\tnotifications.notifyLoggedInThisInstance('new-banner', { bannerId }); // deprecated\n\t\t\tnotifications.notifyLoggedInThisInstance('banner-changed', { bannerId });\n\t\t});\n\n\t\tservice.onEvent('banner.disabled', (bannerId): void => {\n\t\t\tnotifications.notifyLoggedInThisInstance('banner-changed', { bannerId });\n\t\t});\n\n\t\tservice.onEvent('banner.enabled', (bannerId): void => {\n\t\t\tnotifications.notifyLoggedInThisInstance('banner-changed', { bannerId });\n\t\t});\n\n\t\tservice.onEvent('voip.events', (userId, data): void => {\n\t\t\tnotifications.notifyUserInThisInstance(userId, 'voip.events', data);\n\t\t});\n\n\t\tservice.onEvent('call.callerhangup', (userId, data): void => {\n\t\t\tnotifications.notifyUserInThisInstance(userId, 'call.hangup', data);\n\t\t});\n\n\t\tservice.onEvent('notify.desktop', (uid, notification): void => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'notification', notification);\n\t\t});\n\n\t\tservice.onEvent('notify.uiInteraction', (uid, interaction): void => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'uiInteraction', interaction);\n\t\t});\n\n\t\tservice.onEvent('notify.updateInvites', (uid, data): void => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'updateInvites', data);\n\t\t});\n\n\t\tservice.onEvent('notify.webdav', (uid, data): void => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'webdav', data);\n\t\t});\n\n\t\tservice.onEvent('notify.e2e.keyRequest', (rid, data): void => {\n\t\t\tnotifications.notifyRoomInThisInstance(rid, 'e2e.keyRequest', data);\n\t\t});\n\n\t\tservice.onEvent('notify.deleteMessage', (rid, data): void => {\n\t\t\tnotifications.notifyRoomInThisInstance(rid, 'deleteMessage', data);\n\t\t});\n\n\t\tservice.onEvent('notify.deleteMessageBulk', (rid, data): void => {\n\t\t\tnotifications.notifyRoomInThisInstance(rid, 'deleteMessageBulk', data);\n\t\t});\n\n\t\tservice.onEvent('notify.deleteCustomSound', (data): void => {\n\t\t\tnotifications.notifyAllInThisInstance('deleteCustomSound', data);\n\t\t\tnotifications.notifyAllInThisInstance('public-info', ['deleteCustomSound', [data]]);\n\t\t});\n\n\t\tservice.onEvent('notify.updateCustomSound', (data): void => {\n\t\t\tnotifications.notifyAllInThisInstance('updateCustomSound', data);\n\t\t\tnotifications.notifyAllInThisInstance('public-info', ['updateCustomSound', [data]]);\n\t\t});\n\n\t\tservice.onEvent('notify.calendar', (uid, data): void => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'calendar', data);\n\t\t});\n\n\t\tservice.onEvent('notify.importedMessages', ({ roomIds }): void => {\n\t\t\troomIds.forEach((rid) => {\n\t\t\t\t// couldnt get TS happy by providing no data, so had to provide null\n\t\t\t\tnotifications.notifyRoomInThisInstance(rid, 'messagesImported', null);\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('connector.statuschanged', (enabled): void => {\n\t\t\tnotifications.notifyLoggedInThisInstance('voip.statuschanged', enabled);\n\t\t});\n\t\tservice.onEvent('omnichannel.room', (roomId, data): void => {\n\t\t\tnotifications.streamLivechatRoom.emitWithoutBroadcast(roomId, data);\n\t\t});\n\t\tservice.onEvent('watch.priorities', async ({ clientAction, diff, id }): Promise<void> => {\n\t\t\tnotifications.notifyLoggedInThisInstance('omnichannel.priority-changed', { id, clientAction, name: diff?.name });\n\t\t});\n\n\t\tservice.onEvent('apps.added', (appId: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('app/added', appId);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['app/added', [appId]]);\n\t\t});\n\n\t\tservice.onEvent('apps.removed', (appId: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('app/removed', appId);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['app/removed', [appId]]);\n\t\t});\n\n\t\tservice.onEvent('apps.updated', (appId: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('app/updated', appId);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['app/updated', [appId]]);\n\t\t});\n\n\t\tservice.onEvent('apps.statusUpdate', (appId: string, status: AppStatus) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('app/statusUpdate', { appId, status });\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['app/statusUpdate', [{ appId, status }]]);\n\t\t});\n\n\t\tservice.onEvent('apps.settingUpdated', (appId: string, setting: AppsSetting) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('app/settingUpdated', { appId, setting });\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['app/settingUpdated', [{ appId, setting }]]);\n\t\t});\n\n\t\tservice.onEvent('command.added', (command: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('command/added', command);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['command/added', [command]]);\n\t\t});\n\n\t\tservice.onEvent('command.disabled', (command: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('command/disabled', command);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['command/disabled', [command]]);\n\t\t});\n\n\t\tservice.onEvent('command.updated', (command: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('command/updated', command);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['command/updated', [command]]);\n\t\t});\n\n\t\tservice.onEvent('command.removed', (command: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('command/removed', command);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['command/removed', [command]]);\n\t\t});\n\n\t\tservice.onEvent('actions.changed', () => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('actions/changed');\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['actions/changed', []]);\n\t\t});\n\n\t\tservice.onEvent('otrMessage', ({ roomId, message, user, room }: { roomId: string; message: IMessage; user: IUser; room: IRoom }) => {\n\t\t\tnotifications.streamRoomMessage.emit(roomId, message, user, room);\n\t\t});\n\t\tservice.onEvent('otrAckUpdate', ({ roomId, acknowledgeMessage }: { roomId: string; acknowledgeMessage: IOTRMessage }) => {\n\t\t\tnotifications.streamRoomMessage.emit(roomId, acknowledgeMessage);\n\t\t});\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/modules/listeners/listeners.module.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/modules/listeners/listeners.module.ts","inputSourceMap":{"version":3,"file":"server/modules/listeners/listeners.module.ts","sourceRoot":"","sources":["server/modules/listeners/listeners.module.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AppStatus } from '@rocket.chat/apps-engine/definition/AppStatus';\nimport type { ISetting as AppsSetting } from '@rocket.chat/apps-engine/definition/settings';\nimport type { IServiceClass } from '@rocket.chat/core-services';\nimport { EnterpriseSettings } from '@rocket.chat/core-services';\nimport { isSettingColor, isSettingEnterprise, UserStatus } from '@rocket.chat/core-typings';\nimport type { IUser, IRoom, IRole, VideoConference, ISetting, IOmnichannelRoom, IMessage, IOTRMessage } from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\nimport { parse } from '@rocket.chat/message-parser';\n\nimport { settings } from '../../../app/settings/server/cached';\nimport type { NotificationsModule } from '../notifications/notifications.module';\n\nconst isMessageParserDisabled = process.env.DISABLE_MESSAGE_PARSER === 'true';\n\nconst STATUS_MAP: Record<UserStatus, 0 | 1 | 2 | 3> = {\n\t[UserStatus.OFFLINE]: 0,\n\t[UserStatus.ONLINE]: 1,\n\t[UserStatus.AWAY]: 2,\n\t[UserStatus.BUSY]: 3,\n\t[UserStatus.DISABLED]: 0,\n} as const;\n\nconst minimongoChangeMap: Record<string, string> = {\n\tinserted: 'added',\n\tupdated: 'changed',\n\tremoved: 'removed',\n} as const;\n\nexport class ListenersModule {\n\tconstructor(service: IServiceClass, notifications: NotificationsModule) {\n\t\tconst logger = new Logger('ListenersModule');\n\n\t\tservice.onEvent('license.sync', () => notifications.notifyAllInThisInstance('license'));\n\t\tservice.onEvent('license.actions', () => notifications.notifyAllInThisInstance('license'));\n\n\t\tservice.onEvent('emoji.deleteCustom', (emoji) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('deleteEmojiCustom', {\n\t\t\t\temojiData: emoji,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('emoji.updateCustom', (emoji) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('updateEmojiCustom', {\n\t\t\t\temojiData: emoji,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('user.forceLogout', (uid) => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'force_logout');\n\t\t});\n\n\t\tservice.onEvent('notify.ephemeralMessage', (uid, rid, message) => {\n\t\t\tif (!isMessageParserDisabled && message.msg) {\n\t\t\t\tconst customDomains = settings.get<string>('Message_CustomDomain_AutoLink')\n\t\t\t\t\t? settings\n\t\t\t\t\t\t\t.get<string>('Message_CustomDomain_AutoLink')\n\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t.map((domain) => domain.trim())\n\t\t\t\t\t: [];\n\n\t\t\t\tmessage.md = parse(message.msg, {\n\t\t\t\t\tcolors: settings.get('HexColorPreview_Enabled'),\n\t\t\t\t\temoticons: true,\n\t\t\t\t\tcustomDomains,\n\t\t\t\t\t...(settings.get('Katex_Enabled') && {\n\t\t\t\t\t\tkatex: {\n\t\t\t\t\t\t\tdollarSyntax: settings.get('Katex_Dollar_Syntax'),\n\t\t\t\t\t\t\tparenthesisSyntax: settings.get('Katex_Parenthesis_Syntax'),\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'message', {\n\t\t\t\tgroupable: false,\n\t\t\t\tu: {\n\t\t\t\t\t_id: 'rocket.cat',\n\t\t\t\t\tusername: 'rocket.cat',\n\t\t\t\t},\n\t\t\t\tprivate: true,\n\t\t\t\t_id: message._id || String(Date.now()),\n\t\t\t\trid,\n\t\t\t\tts: new Date(),\n\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t...message,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('permission.changed', ({ clientAction, data }) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('permissions-changed', clientAction, data);\n\t\t});\n\n\t\tservice.onEvent('room.avatarUpdate', ({ _id: rid, avatarETag: etag }) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('updateAvatar', {\n\t\t\t\trid,\n\t\t\t\tetag,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('user.avatarUpdate', ({ username, avatarETag: etag }) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('updateAvatar', {\n\t\t\t\tusername,\n\t\t\t\tetag,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('user.deleted', ({ _id: userId }, data) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('Users:Deleted', {\n\t\t\t\tuserId,\n\t\t\t\t...data,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('user.deleteCustomStatus', (userStatus) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('deleteCustomUserStatus', {\n\t\t\t\tuserStatusData: userStatus,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('user.nameChanged', (user) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('Users:NameChanged', user);\n\t\t});\n\n\t\tservice.onEvent('user.roleUpdate', (update) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('roles-change', update);\n\t\t});\n\n\t\tservice.onEvent(\n\t\t\t'user.video-conference',\n\t\t\t({\n\t\t\t\tuserId,\n\t\t\t\taction,\n\t\t\t\tparams,\n\t\t\t}: {\n\t\t\t\tuserId: string;\n\t\t\t\taction: string;\n\t\t\t\tparams: {\n\t\t\t\t\tcallId: VideoConference['_id'];\n\t\t\t\t\tuid: IUser['_id'];\n\t\t\t\t\trid: IRoom['_id'];\n\t\t\t\t};\n\t\t\t}) => {\n\t\t\t\tnotifications.notifyUserInThisInstance(userId, 'video-conference', { action, params });\n\t\t\t},\n\t\t);\n\n\t\tservice.onEvent('room.video-conference', ({ rid, callId }) => {\n\t\t\t/* deprecated */\n\t\t\t(notifications.notifyRoom as any)(rid, callId);\n\n\t\t\tnotifications.notifyRoom(rid, 'videoconf', callId);\n\t\t});\n\n\t\tservice.onEvent('presence.status', ({ user }) => {\n\t\t\tconst { _id, username, name, status, statusText, roles } = user;\n\t\t\tif (!status || !username) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnotifications.notifyUserInThisInstance(_id, 'userData', {\n\t\t\t\ttype: 'updated',\n\t\t\t\tid: _id,\n\t\t\t\tdiff: {\n\t\t\t\t\tstatus,\n\t\t\t\t\t...(statusText && { statusText }),\n\t\t\t\t},\n\t\t\t\tunset: {},\n\t\t\t});\n\n\t\t\tnotifications.notifyLoggedInThisInstance('user-status', [_id, username, STATUS_MAP[status], statusText, name, roles]);\n\n\t\t\tif (_id) {\n\t\t\t\tnotifications.sendPresence(_id, username, STATUS_MAP[status], statusText);\n\t\t\t}\n\t\t});\n\n\t\tservice.onEvent('user.updateCustomStatus', (userStatus) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('updateCustomUserStatus', {\n\t\t\t\tuserStatusData: userStatus,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('watch.messages', async ({ message }) => {\n\t\t\tif (!message.rid) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnotifications.streamRoomMessage._emit('__my_messages__', [message], undefined, false, (streamer, _sub, eventName, args, allowed) =>\n\t\t\t\tstreamer.changedPayload(streamer.subscriptionName, 'id', {\n\t\t\t\t\teventName,\n\t\t\t\t\targs: [...args, allowed],\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tnotifications.streamRoomMessage.emitWithoutBroadcast(message.rid, message);\n\t\t});\n\n\t\tservice.onEvent('notify.messagesRead', ({ rid, until, tmid }): void => {\n\t\t\tnotifications.notifyRoomInThisInstance(rid, 'messagesRead', { tmid, until });\n\t\t});\n\n\t\tservice.onEvent('watch.subscriptions', ({ clientAction, subscription }) => {\n\t\t\tif (!subscription.u?._id) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// emit a removed event on msg stream to remove the user's stream-room-messages subscription when the user is removed from room\n\t\t\tif (clientAction === 'removed') {\n\t\t\t\tnotifications.streamRoomMessage.__emit(subscription.u._id, clientAction, subscription);\n\t\t\t}\n\n\t\t\tnotifications.streamUser.__emit(subscription.u._id, clientAction, subscription);\n\n\t\t\tnotifications.notifyUserInThisInstance(subscription.u._id, 'subscriptions-changed', clientAction, subscription as any);\n\t\t});\n\n\t\tservice.onEvent('watch.roles', ({ clientAction, role }): void => {\n\t\t\tnotifications.streamRoles.emitWithoutBroadcast('roles', {\n\t\t\t\ttype: clientAction,\n\t\t\t\t...(role as IRole),\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('watch.inquiries', async ({ clientAction, inquiry, diff }): Promise<void> => {\n\t\t\tconst type = minimongoChangeMap[clientAction] as 'added' | 'changed' | 'removed';\n\t\t\tif (clientAction === 'removed') {\n\t\t\t\tnotifications.streamLivechatQueueData.emitWithoutBroadcast(inquiry._id, {\n\t\t\t\t\t_id: inquiry._id,\n\t\t\t\t\tclientAction,\n\t\t\t\t});\n\n\t\t\t\tif (inquiry.department) {\n\t\t\t\t\treturn notifications.streamLivechatQueueData.emitWithoutBroadcast(`department/${inquiry.department}`, { type, ...inquiry });\n\t\t\t\t}\n\n\t\t\t\treturn notifications.streamLivechatQueueData.emitWithoutBroadcast('public', {\n\t\t\t\t\ttype,\n\t\t\t\t\t...inquiry,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Don't do notifications for updating inquiries when the only thing changing is the queue metadata\n\t\t\tif (\n\t\t\t\tclientAction === 'updated' &&\n\t\t\t\tdiff?.hasOwnProperty('lockedAt') &&\n\t\t\t\tdiff?.hasOwnProperty('locked') &&\n\t\t\t\tdiff?.hasOwnProperty('_updatedAt') &&\n\t\t\t\tObject.keys(diff).length === 3\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnotifications.streamLivechatQueueData.emitWithoutBroadcast(inquiry._id, {\n\t\t\t\t...inquiry,\n\t\t\t\tclientAction,\n\t\t\t});\n\n\t\t\tif (!inquiry.department) {\n\t\t\t\treturn notifications.streamLivechatQueueData.emitWithoutBroadcast('public', {\n\t\t\t\t\ttype,\n\t\t\t\t\t...inquiry,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tnotifications.streamLivechatQueueData.emitWithoutBroadcast(`department/${inquiry.department}`, { type, ...inquiry });\n\n\t\t\tif (clientAction === 'updated' && !diff?.department) {\n\t\t\t\tnotifications.streamLivechatQueueData.emitWithoutBroadcast('public', { type, ...inquiry });\n\t\t\t}\n\t\t});\n\n\t\tservice.onEvent('watch.settings', async ({ clientAction, setting }): Promise<void> => {\n\t\t\t// if a EE setting changed make sure we broadcast the correct value according to license\n\t\t\tif (clientAction !== 'removed' && isSettingEnterprise(setting)) {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await EnterpriseSettings.changeSettingValue(setting);\n\t\t\t\t\tif (result !== undefined && !(result instanceof Error)) {\n\t\t\t\t\t\tsetting.value = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (err: unknown) {\n\t\t\t\t\tlogger.error({ msg: 'Error getting proper enterprise setting value. Returning `invalidValue` instead.', err });\n\t\t\t\t\tsetting.value = setting.invalidValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setting.hidden) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst value = {\n\t\t\t\t_id: setting._id,\n\t\t\t\tvalue: setting.value,\n\t\t\t\t...(isSettingColor(setting) && { editor: setting.editor }),\n\t\t\t\tproperties: setting.properties,\n\t\t\t\tenterprise: setting.enterprise,\n\t\t\t\trequiredOnWizard: setting.requiredOnWizard,\n\t\t\t} as ISetting;\n\n\t\t\tif (setting.public === true) {\n\t\t\t\tnotifications.notifyAllInThisInstance('public-settings-changed', clientAction, value);\n\t\t\t\tnotifications.notifyAllInThisInstance('public-info', ['public-settings-changed', [clientAction, value]]);\n\t\t\t}\n\n\t\t\tnotifications.notifyLoggedInThisInstance('private-settings-changed', clientAction, value);\n\t\t});\n\n\t\tservice.onEvent('watch.rooms', ({ clientAction, room }): void => {\n\t\t\t// this emit will cause the user to receive a 'rooms-changed' event\n\t\t\tnotifications.streamUser.__emit(room._id, clientAction, room);\n\n\t\t\tnotifications.streamRoomData.emitWithoutBroadcast(room._id, room as IOmnichannelRoom);\n\t\t});\n\n\t\tservice.onEvent('watch.users', (event): void => {\n\t\t\tswitch (event.clientAction) {\n\t\t\t\tcase 'updated':\n\t\t\t\t\tnotifications.notifyUserInThisInstance(event.id, 'userData', {\n\t\t\t\t\t\tid: event.id,\n\t\t\t\t\t\tdiff: event.diff,\n\t\t\t\t\t\tunset: event.unset,\n\t\t\t\t\t\ttype: 'updated',\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'inserted':\n\t\t\t\t\tnotifications.notifyUserInThisInstance(event.id, 'userData', { id: event.id, data: event.data, type: 'inserted' });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'removed':\n\t\t\t\t\tnotifications.notifyUserInThisInstance(event.id, 'userData', { id: event.id, type: 'removed' });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tservice.onEvent('watch.integrationHistory', ({ clientAction, data, diff, id }): void => {\n\t\t\tif (!data?.integration?._id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tswitch (clientAction) {\n\t\t\t\tcase 'updated': {\n\t\t\t\t\tnotifications.streamIntegrationHistory.emitWithoutBroadcast(data.integration._id, {\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tdiff,\n\t\t\t\t\t\ttype: clientAction,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'inserted': {\n\t\t\t\t\tnotifications.streamIntegrationHistory.emitWithoutBroadcast(data.integration._id, {\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\ttype: clientAction,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tservice.onEvent('watch.livechatDepartmentAgents', ({ clientAction, data }): void => {\n\t\t\tconst { agentId } = data;\n\t\t\tif (!agentId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnotifications.notifyUserInThisInstance(agentId, 'departmentAgentData', {\n\t\t\t\taction: clientAction,\n\t\t\t\t...data,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('banner.user', (userId, banner): void => {\n\t\t\tnotifications.notifyUserInThisInstance(userId, 'banners', banner);\n\t\t});\n\n\t\tservice.onEvent('banner.new', (bannerId): void => {\n\t\t\tnotifications.notifyLoggedInThisInstance('new-banner', { bannerId }); // deprecated\n\t\t\tnotifications.notifyLoggedInThisInstance('banner-changed', { bannerId });\n\t\t});\n\n\t\tservice.onEvent('banner.disabled', (bannerId): void => {\n\t\t\tnotifications.notifyLoggedInThisInstance('banner-changed', { bannerId });\n\t\t});\n\n\t\tservice.onEvent('banner.enabled', (bannerId): void => {\n\t\t\tnotifications.notifyLoggedInThisInstance('banner-changed', { bannerId });\n\t\t});\n\n\t\tservice.onEvent('voip.events', (userId, data): void => {\n\t\t\tnotifications.notifyUserInThisInstance(userId, 'voip.events', data);\n\t\t});\n\n\t\tservice.onEvent('call.callerhangup', (userId, data): void => {\n\t\t\tnotifications.notifyUserInThisInstance(userId, 'call.hangup', data);\n\t\t});\n\n\t\tservice.onEvent('notify.desktop', (uid, notification): void => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'notification', notification);\n\t\t});\n\n\t\tservice.onEvent('notify.uiInteraction', (uid, interaction): void => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'uiInteraction', interaction);\n\t\t});\n\n\t\tservice.onEvent('notify.updateInvites', (uid, data): void => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'updateInvites', data);\n\t\t});\n\n\t\tservice.onEvent('notify.webdav', (uid, data): void => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'webdav', data);\n\t\t});\n\n\t\tservice.onEvent('notify.e2e.keyRequest', (rid, data): void => {\n\t\t\tnotifications.notifyRoomInThisInstance(rid, 'e2e.keyRequest', data);\n\t\t});\n\n\t\tservice.onEvent('notify.deleteMessage', (rid, data): void => {\n\t\t\tnotifications.notifyRoomInThisInstance(rid, 'deleteMessage', data);\n\t\t});\n\n\t\tservice.onEvent('notify.deleteMessageBulk', (rid, data): void => {\n\t\t\tnotifications.notifyRoomInThisInstance(rid, 'deleteMessageBulk', data);\n\t\t});\n\n\t\tservice.onEvent('notify.deleteCustomSound', (data): void => {\n\t\t\tnotifications.notifyAllInThisInstance('deleteCustomSound', data);\n\t\t\tnotifications.notifyAllInThisInstance('public-info', ['deleteCustomSound', [data]]);\n\t\t});\n\n\t\tservice.onEvent('notify.updateCustomSound', (data): void => {\n\t\t\tnotifications.notifyAllInThisInstance('updateCustomSound', data);\n\t\t\tnotifications.notifyAllInThisInstance('public-info', ['updateCustomSound', [data]]);\n\t\t});\n\n\t\tservice.onEvent('notify.calendar', (uid, data): void => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'calendar', data);\n\t\t});\n\n\t\tservice.onEvent('notify.importedMessages', ({ roomIds }): void => {\n\t\t\troomIds.forEach((rid) => {\n\t\t\t\t// couldnt get TS happy by providing no data, so had to provide null\n\t\t\t\tnotifications.notifyRoomInThisInstance(rid, 'messagesImported', null);\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('connector.statuschanged', (enabled): void => {\n\t\t\tnotifications.notifyLoggedInThisInstance('voip.statuschanged', enabled);\n\t\t});\n\t\tservice.onEvent('omnichannel.room', (roomId, data): void => {\n\t\t\tnotifications.streamLivechatRoom.emitWithoutBroadcast(roomId, data);\n\t\t});\n\t\tservice.onEvent('watch.priorities', async ({ clientAction, diff, id }): Promise<void> => {\n\t\t\tnotifications.notifyLoggedInThisInstance('omnichannel.priority-changed', { id, clientAction, name: diff?.name });\n\t\t});\n\n\t\tservice.onEvent('apps.added', (appId: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('app/added', appId);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['app/added', [appId]]);\n\t\t});\n\n\t\tservice.onEvent('apps.removed', (appId: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('app/removed', appId);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['app/removed', [appId]]);\n\t\t});\n\n\t\tservice.onEvent('apps.updated', (appId: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('app/updated', appId);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['app/updated', [appId]]);\n\t\t});\n\n\t\tservice.onEvent('apps.statusUpdate', (appId: string, status: AppStatus) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('app/statusUpdate', { appId, status });\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['app/statusUpdate', [{ appId, status }]]);\n\t\t});\n\n\t\tservice.onEvent('apps.settingUpdated', (appId: string, setting: AppsSetting) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('app/settingUpdated', { appId, setting });\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['app/settingUpdated', [{ appId, setting }]]);\n\t\t});\n\n\t\tservice.onEvent('command.added', (command: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('command/added', command);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['command/added', [command]]);\n\t\t});\n\n\t\tservice.onEvent('command.disabled', (command: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('command/disabled', command);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['command/disabled', [command]]);\n\t\t});\n\n\t\tservice.onEvent('command.updated', (command: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('command/updated', command);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['command/updated', [command]]);\n\t\t});\n\n\t\tservice.onEvent('command.removed', (command: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('command/removed', command);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['command/removed', [command]]);\n\t\t});\n\n\t\tservice.onEvent('actions.changed', () => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('actions/changed');\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['actions/changed', []]);\n\t\t});\n\n\t\tservice.onEvent('otrMessage', ({ roomId, message, user, room }: { roomId: string; message: IMessage; user: IUser; room: IRoom }) => {\n\t\t\tnotifications.streamRoomMessage.emit(roomId, message, user, room);\n\t\t});\n\t\tservice.onEvent('otrAckUpdate', ({ roomId, acknowledgeMessage }: { roomId: string; acknowledgeMessage: IOTRMessage }) => {\n\t\t\tnotifications.streamRoomMessage.emit(roomId, acknowledgeMessage);\n\t\t});\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      ListenersModule: () => ListenersModule\n    });\n    let EnterpriseSettings;\n    module.link(\"@rocket.chat/core-services\", {\n      EnterpriseSettings(v) {\n        EnterpriseSettings = v;\n      }\n    }, 0);\n    let isSettingColor, isSettingEnterprise, UserStatus;\n    module.link(\"@rocket.chat/core-typings\", {\n      isSettingColor(v) {\n        isSettingColor = v;\n      },\n      isSettingEnterprise(v) {\n        isSettingEnterprise = v;\n      },\n      UserStatus(v) {\n        UserStatus = v;\n      }\n    }, 1);\n    let Logger;\n    module.link(\"@rocket.chat/logger\", {\n      Logger(v) {\n        Logger = v;\n      }\n    }, 2);\n    let parse;\n    module.link(\"@rocket.chat/message-parser\", {\n      parse(v) {\n        parse = v;\n      }\n    }, 3);\n    let settings;\n    module.link(\"../../../app/settings/server/cached\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const isMessageParserDisabled = process.env.DISABLE_MESSAGE_PARSER === 'true';\n    const STATUS_MAP = {\n      [UserStatus.OFFLINE]: 0,\n      [UserStatus.ONLINE]: 1,\n      [UserStatus.AWAY]: 2,\n      [UserStatus.BUSY]: 3,\n      [UserStatus.DISABLED]: 0\n    };\n    const minimongoChangeMap = {\n      inserted: 'added',\n      updated: 'changed',\n      removed: 'removed'\n    };\n    class ListenersModule {\n      constructor(service, notifications) {\n        const logger = new Logger('ListenersModule');\n        service.onEvent('license.sync', () => notifications.notifyAllInThisInstance('license'));\n        service.onEvent('license.actions', () => notifications.notifyAllInThisInstance('license'));\n        service.onEvent('emoji.deleteCustom', emoji => {\n          notifications.notifyLoggedInThisInstance('deleteEmojiCustom', {\n            emojiData: emoji\n          });\n        });\n        service.onEvent('emoji.updateCustom', emoji => {\n          notifications.notifyLoggedInThisInstance('updateEmojiCustom', {\n            emojiData: emoji\n          });\n        });\n        service.onEvent('user.forceLogout', uid => {\n          notifications.notifyUserInThisInstance(uid, 'force_logout');\n        });\n        service.onEvent('notify.ephemeralMessage', (uid, rid, message) => {\n          if (!isMessageParserDisabled && message.msg) {\n            const customDomains = settings.get('Message_CustomDomain_AutoLink') ? settings.get('Message_CustomDomain_AutoLink').split(',').map(domain => domain.trim()) : [];\n            message.md = parse(message.msg, _objectSpread({\n              colors: settings.get('HexColorPreview_Enabled'),\n              emoticons: true,\n              customDomains\n            }, settings.get('Katex_Enabled') && {\n              katex: {\n                dollarSyntax: settings.get('Katex_Dollar_Syntax'),\n                parenthesisSyntax: settings.get('Katex_Parenthesis_Syntax')\n              }\n            }));\n          }\n          notifications.notifyUserInThisInstance(uid, 'message', _objectSpread({\n            groupable: false,\n            u: {\n              _id: 'rocket.cat',\n              username: 'rocket.cat'\n            },\n            private: true,\n            _id: message._id || String(Date.now()),\n            rid,\n            ts: new Date(),\n            _updatedAt: new Date()\n          }, message));\n        });\n        service.onEvent('permission.changed', _ref => {\n          let {\n            clientAction,\n            data\n          } = _ref;\n          notifications.notifyLoggedInThisInstance('permissions-changed', clientAction, data);\n        });\n        service.onEvent('room.avatarUpdate', _ref2 => {\n          let {\n            _id: rid,\n            avatarETag: etag\n          } = _ref2;\n          notifications.notifyLoggedInThisInstance('updateAvatar', {\n            rid,\n            etag\n          });\n        });\n        service.onEvent('user.avatarUpdate', _ref3 => {\n          let {\n            username,\n            avatarETag: etag\n          } = _ref3;\n          notifications.notifyLoggedInThisInstance('updateAvatar', {\n            username,\n            etag\n          });\n        });\n        service.onEvent('user.deleted', (_ref4, data) => {\n          let {\n            _id: userId\n          } = _ref4;\n          notifications.notifyLoggedInThisInstance('Users:Deleted', _objectSpread({\n            userId\n          }, data));\n        });\n        service.onEvent('user.deleteCustomStatus', userStatus => {\n          notifications.notifyLoggedInThisInstance('deleteCustomUserStatus', {\n            userStatusData: userStatus\n          });\n        });\n        service.onEvent('user.nameChanged', user => {\n          notifications.notifyLoggedInThisInstance('Users:NameChanged', user);\n        });\n        service.onEvent('user.roleUpdate', update => {\n          notifications.notifyLoggedInThisInstance('roles-change', update);\n        });\n        service.onEvent('user.video-conference', _ref5 => {\n          let {\n            userId,\n            action,\n            params\n          } = _ref5;\n          notifications.notifyUserInThisInstance(userId, 'video-conference', {\n            action,\n            params\n          });\n        });\n        service.onEvent('room.video-conference', _ref6 => {\n          let {\n            rid,\n            callId\n          } = _ref6;\n          /* deprecated */\n          notifications.notifyRoom(rid, callId);\n          notifications.notifyRoom(rid, 'videoconf', callId);\n        });\n        service.onEvent('presence.status', _ref7 => {\n          let {\n            user\n          } = _ref7;\n          const {\n            _id,\n            username,\n            name,\n            status,\n            statusText,\n            roles\n          } = user;\n          if (!status || !username) {\n            return;\n          }\n          notifications.notifyUserInThisInstance(_id, 'userData', {\n            type: 'updated',\n            id: _id,\n            diff: _objectSpread({\n              status\n            }, statusText && {\n              statusText\n            }),\n            unset: {}\n          });\n          notifications.notifyLoggedInThisInstance('user-status', [_id, username, STATUS_MAP[status], statusText, name, roles]);\n          if (_id) {\n            notifications.sendPresence(_id, username, STATUS_MAP[status], statusText);\n          }\n        });\n        service.onEvent('user.updateCustomStatus', userStatus => {\n          notifications.notifyLoggedInThisInstance('updateCustomUserStatus', {\n            userStatusData: userStatus\n          });\n        });\n        service.onEvent('watch.messages', async _ref8 => {\n          let {\n            message\n          } = _ref8;\n          if (!message.rid) {\n            return;\n          }\n          notifications.streamRoomMessage._emit('__my_messages__', [message], undefined, false, (streamer, _sub, eventName, args, allowed) => streamer.changedPayload(streamer.subscriptionName, 'id', {\n            eventName,\n            args: [...args, allowed]\n          }));\n          notifications.streamRoomMessage.emitWithoutBroadcast(message.rid, message);\n        });\n        service.onEvent('notify.messagesRead', _ref9 => {\n          let {\n            rid,\n            until,\n            tmid\n          } = _ref9;\n          notifications.notifyRoomInThisInstance(rid, 'messagesRead', {\n            tmid,\n            until\n          });\n        });\n        service.onEvent('watch.subscriptions', _ref10 => {\n          var _subscription$u;\n          let {\n            clientAction,\n            subscription\n          } = _ref10;\n          if (!((_subscription$u = subscription.u) !== null && _subscription$u !== void 0 && _subscription$u._id)) {\n            return;\n          }\n          // emit a removed event on msg stream to remove the user's stream-room-messages subscription when the user is removed from room\n          if (clientAction === 'removed') {\n            notifications.streamRoomMessage.__emit(subscription.u._id, clientAction, subscription);\n          }\n          notifications.streamUser.__emit(subscription.u._id, clientAction, subscription);\n          notifications.notifyUserInThisInstance(subscription.u._id, 'subscriptions-changed', clientAction, subscription);\n        });\n        service.onEvent('watch.roles', _ref11 => {\n          let {\n            clientAction,\n            role\n          } = _ref11;\n          notifications.streamRoles.emitWithoutBroadcast('roles', _objectSpread({\n            type: clientAction\n          }, role));\n        });\n        service.onEvent('watch.inquiries', async _ref12 => {\n          let {\n            clientAction,\n            inquiry,\n            diff\n          } = _ref12;\n          const type = minimongoChangeMap[clientAction];\n          if (clientAction === 'removed') {\n            notifications.streamLivechatQueueData.emitWithoutBroadcast(inquiry._id, {\n              _id: inquiry._id,\n              clientAction\n            });\n            if (inquiry.department) {\n              return notifications.streamLivechatQueueData.emitWithoutBroadcast(\"department/\".concat(inquiry.department), _objectSpread({\n                type\n              }, inquiry));\n            }\n            return notifications.streamLivechatQueueData.emitWithoutBroadcast('public', _objectSpread({\n              type\n            }, inquiry));\n          }\n          // Don't do notifications for updating inquiries when the only thing changing is the queue metadata\n          if (clientAction === 'updated' && diff !== null && diff !== void 0 && diff.hasOwnProperty('lockedAt') && diff !== null && diff !== void 0 && diff.hasOwnProperty('locked') && diff !== null && diff !== void 0 && diff.hasOwnProperty('_updatedAt') && Object.keys(diff).length === 3) {\n            return;\n          }\n          notifications.streamLivechatQueueData.emitWithoutBroadcast(inquiry._id, _objectSpread(_objectSpread({}, inquiry), {}, {\n            clientAction\n          }));\n          if (!inquiry.department) {\n            return notifications.streamLivechatQueueData.emitWithoutBroadcast('public', _objectSpread({\n              type\n            }, inquiry));\n          }\n          notifications.streamLivechatQueueData.emitWithoutBroadcast(\"department/\".concat(inquiry.department), _objectSpread({\n            type\n          }, inquiry));\n          if (clientAction === 'updated' && !(diff !== null && diff !== void 0 && diff.department)) {\n            notifications.streamLivechatQueueData.emitWithoutBroadcast('public', _objectSpread({\n              type\n            }, inquiry));\n          }\n        });\n        service.onEvent('watch.settings', async _ref13 => {\n          let {\n            clientAction,\n            setting\n          } = _ref13;\n          // if a EE setting changed make sure we broadcast the correct value according to license\n          if (clientAction !== 'removed' && isSettingEnterprise(setting)) {\n            try {\n              const result = await EnterpriseSettings.changeSettingValue(setting);\n              if (result !== undefined && !(result instanceof Error)) {\n                setting.value = result;\n              }\n            } catch (err) {\n              logger.error({\n                msg: 'Error getting proper enterprise setting value. Returning `invalidValue` instead.',\n                err\n              });\n              setting.value = setting.invalidValue;\n            }\n          }\n          if (setting.hidden) {\n            return;\n          }\n          const value = _objectSpread(_objectSpread({\n            _id: setting._id,\n            value: setting.value\n          }, isSettingColor(setting) && {\n            editor: setting.editor\n          }), {}, {\n            properties: setting.properties,\n            enterprise: setting.enterprise,\n            requiredOnWizard: setting.requiredOnWizard\n          });\n          if (setting.public === true) {\n            notifications.notifyAllInThisInstance('public-settings-changed', clientAction, value);\n            notifications.notifyAllInThisInstance('public-info', ['public-settings-changed', [clientAction, value]]);\n          }\n          notifications.notifyLoggedInThisInstance('private-settings-changed', clientAction, value);\n        });\n        service.onEvent('watch.rooms', _ref14 => {\n          let {\n            clientAction,\n            room\n          } = _ref14;\n          // this emit will cause the user to receive a 'rooms-changed' event\n          notifications.streamUser.__emit(room._id, clientAction, room);\n          notifications.streamRoomData.emitWithoutBroadcast(room._id, room);\n        });\n        service.onEvent('watch.users', event => {\n          switch (event.clientAction) {\n            case 'updated':\n              notifications.notifyUserInThisInstance(event.id, 'userData', {\n                id: event.id,\n                diff: event.diff,\n                unset: event.unset,\n                type: 'updated'\n              });\n              break;\n            case 'inserted':\n              notifications.notifyUserInThisInstance(event.id, 'userData', {\n                id: event.id,\n                data: event.data,\n                type: 'inserted'\n              });\n              break;\n            case 'removed':\n              notifications.notifyUserInThisInstance(event.id, 'userData', {\n                id: event.id,\n                type: 'removed'\n              });\n              break;\n          }\n        });\n        service.onEvent('watch.integrationHistory', _ref15 => {\n          var _data$integration;\n          let {\n            clientAction,\n            data,\n            diff,\n            id\n          } = _ref15;\n          if (!(data !== null && data !== void 0 && (_data$integration = data.integration) !== null && _data$integration !== void 0 && _data$integration._id)) {\n            return;\n          }\n          switch (clientAction) {\n            case 'updated':\n              {\n                notifications.streamIntegrationHistory.emitWithoutBroadcast(data.integration._id, {\n                  id,\n                  diff,\n                  type: clientAction\n                });\n                break;\n              }\n            case 'inserted':\n              {\n                notifications.streamIntegrationHistory.emitWithoutBroadcast(data.integration._id, {\n                  data,\n                  type: clientAction\n                });\n                break;\n              }\n          }\n        });\n        service.onEvent('watch.livechatDepartmentAgents', _ref16 => {\n          let {\n            clientAction,\n            data\n          } = _ref16;\n          const {\n            agentId\n          } = data;\n          if (!agentId) {\n            return;\n          }\n          notifications.notifyUserInThisInstance(agentId, 'departmentAgentData', _objectSpread({\n            action: clientAction\n          }, data));\n        });\n        service.onEvent('banner.user', (userId, banner) => {\n          notifications.notifyUserInThisInstance(userId, 'banners', banner);\n        });\n        service.onEvent('banner.new', bannerId => {\n          notifications.notifyLoggedInThisInstance('new-banner', {\n            bannerId\n          }); // deprecated\n          notifications.notifyLoggedInThisInstance('banner-changed', {\n            bannerId\n          });\n        });\n        service.onEvent('banner.disabled', bannerId => {\n          notifications.notifyLoggedInThisInstance('banner-changed', {\n            bannerId\n          });\n        });\n        service.onEvent('banner.enabled', bannerId => {\n          notifications.notifyLoggedInThisInstance('banner-changed', {\n            bannerId\n          });\n        });\n        service.onEvent('voip.events', (userId, data) => {\n          notifications.notifyUserInThisInstance(userId, 'voip.events', data);\n        });\n        service.onEvent('call.callerhangup', (userId, data) => {\n          notifications.notifyUserInThisInstance(userId, 'call.hangup', data);\n        });\n        service.onEvent('notify.desktop', (uid, notification) => {\n          notifications.notifyUserInThisInstance(uid, 'notification', notification);\n        });\n        service.onEvent('notify.uiInteraction', (uid, interaction) => {\n          notifications.notifyUserInThisInstance(uid, 'uiInteraction', interaction);\n        });\n        service.onEvent('notify.updateInvites', (uid, data) => {\n          notifications.notifyUserInThisInstance(uid, 'updateInvites', data);\n        });\n        service.onEvent('notify.webdav', (uid, data) => {\n          notifications.notifyUserInThisInstance(uid, 'webdav', data);\n        });\n        service.onEvent('notify.e2e.keyRequest', (rid, data) => {\n          notifications.notifyRoomInThisInstance(rid, 'e2e.keyRequest', data);\n        });\n        service.onEvent('notify.deleteMessage', (rid, data) => {\n          notifications.notifyRoomInThisInstance(rid, 'deleteMessage', data);\n        });\n        service.onEvent('notify.deleteMessageBulk', (rid, data) => {\n          notifications.notifyRoomInThisInstance(rid, 'deleteMessageBulk', data);\n        });\n        service.onEvent('notify.deleteCustomSound', data => {\n          notifications.notifyAllInThisInstance('deleteCustomSound', data);\n          notifications.notifyAllInThisInstance('public-info', ['deleteCustomSound', [data]]);\n        });\n        service.onEvent('notify.updateCustomSound', data => {\n          notifications.notifyAllInThisInstance('updateCustomSound', data);\n          notifications.notifyAllInThisInstance('public-info', ['updateCustomSound', [data]]);\n        });\n        service.onEvent('notify.calendar', (uid, data) => {\n          notifications.notifyUserInThisInstance(uid, 'calendar', data);\n        });\n        service.onEvent('notify.importedMessages', _ref17 => {\n          let {\n            roomIds\n          } = _ref17;\n          roomIds.forEach(rid => {\n            // couldnt get TS happy by providing no data, so had to provide null\n            notifications.notifyRoomInThisInstance(rid, 'messagesImported', null);\n          });\n        });\n        service.onEvent('connector.statuschanged', enabled => {\n          notifications.notifyLoggedInThisInstance('voip.statuschanged', enabled);\n        });\n        service.onEvent('omnichannel.room', (roomId, data) => {\n          notifications.streamLivechatRoom.emitWithoutBroadcast(roomId, data);\n        });\n        service.onEvent('watch.priorities', async _ref18 => {\n          let {\n            clientAction,\n            diff,\n            id\n          } = _ref18;\n          notifications.notifyLoggedInThisInstance('omnichannel.priority-changed', {\n            id,\n            clientAction,\n            name: diff === null || diff === void 0 ? void 0 : diff.name\n          });\n        });\n        service.onEvent('apps.added', appId => {\n          notifications.streamApps.emitWithoutBroadcast('app/added', appId);\n          notifications.streamApps.emitWithoutBroadcast('apps', ['app/added', [appId]]);\n        });\n        service.onEvent('apps.removed', appId => {\n          notifications.streamApps.emitWithoutBroadcast('app/removed', appId);\n          notifications.streamApps.emitWithoutBroadcast('apps', ['app/removed', [appId]]);\n        });\n        service.onEvent('apps.updated', appId => {\n          notifications.streamApps.emitWithoutBroadcast('app/updated', appId);\n          notifications.streamApps.emitWithoutBroadcast('apps', ['app/updated', [appId]]);\n        });\n        service.onEvent('apps.statusUpdate', (appId, status) => {\n          notifications.streamApps.emitWithoutBroadcast('app/statusUpdate', {\n            appId,\n            status\n          });\n          notifications.streamApps.emitWithoutBroadcast('apps', ['app/statusUpdate', [{\n            appId,\n            status\n          }]]);\n        });\n        service.onEvent('apps.settingUpdated', (appId, setting) => {\n          notifications.streamApps.emitWithoutBroadcast('app/settingUpdated', {\n            appId,\n            setting\n          });\n          notifications.streamApps.emitWithoutBroadcast('apps', ['app/settingUpdated', [{\n            appId,\n            setting\n          }]]);\n        });\n        service.onEvent('command.added', command => {\n          notifications.streamApps.emitWithoutBroadcast('command/added', command);\n          notifications.streamApps.emitWithoutBroadcast('apps', ['command/added', [command]]);\n        });\n        service.onEvent('command.disabled', command => {\n          notifications.streamApps.emitWithoutBroadcast('command/disabled', command);\n          notifications.streamApps.emitWithoutBroadcast('apps', ['command/disabled', [command]]);\n        });\n        service.onEvent('command.updated', command => {\n          notifications.streamApps.emitWithoutBroadcast('command/updated', command);\n          notifications.streamApps.emitWithoutBroadcast('apps', ['command/updated', [command]]);\n        });\n        service.onEvent('command.removed', command => {\n          notifications.streamApps.emitWithoutBroadcast('command/removed', command);\n          notifications.streamApps.emitWithoutBroadcast('apps', ['command/removed', [command]]);\n        });\n        service.onEvent('actions.changed', () => {\n          notifications.streamApps.emitWithoutBroadcast('actions/changed');\n          notifications.streamApps.emitWithoutBroadcast('apps', ['actions/changed', []]);\n        });\n        service.onEvent('otrMessage', _ref19 => {\n          let {\n            roomId,\n            message,\n            user,\n            room\n          } = _ref19;\n          notifications.streamRoomMessage.emit(roomId, message, user, room);\n        });\n        service.onEvent('otrAckUpdate', _ref20 => {\n          let {\n            roomId,\n            acknowledgeMessage\n          } = _ref20;\n          notifications.streamRoomMessage.emit(roomId, acknowledgeMessage);\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","ListenersModule","EnterpriseSettings","isSettingColor","isSettingEnterprise","UserStatus","Logger","parse","settings","__reifyWaitForDeps__","isMessageParserDisabled","process","env","DISABLE_MESSAGE_PARSER","STATUS_MAP","OFFLINE","ONLINE","AWAY","BUSY","DISABLED","minimongoChangeMap","inserted","updated","removed","constructor","service","notifications","logger","onEvent","notifyAllInThisInstance","emoji","notifyLoggedInThisInstance","emojiData","uid","notifyUserInThisInstance","rid","message","msg","customDomains","get","split","map","domain","trim","md","colors","emoticons","katex","dollarSyntax","parenthesisSyntax","groupable","u","_id","username","private","String","Date","now","ts","_updatedAt","_ref","clientAction","data","_ref2","avatarETag","etag","_ref3","_ref4","userId","userStatus","userStatusData","user","update","_ref5","action","params","_ref6","callId","notifyRoom","_ref7","name","status","statusText","roles","type","id","diff","unset","sendPresence","_ref8","streamRoomMessage","_emit","undefined","streamer","_sub","eventName","args","allowed","changedPayload","subscriptionName","emitWithoutBroadcast","_ref9","until","tmid","notifyRoomInThisInstance","_ref10","_subscription$u","subscription","__emit","streamUser","_ref11","role","streamRoles","_ref12","inquiry","streamLivechatQueueData","department","concat","hasOwnProperty","Object","keys","length","_ref13","setting","result","changeSettingValue","Error","value","err","error","invalidValue","hidden","editor","properties","enterprise","requiredOnWizard","public","_ref14","room","streamRoomData","event","_ref15","_data$integration","integration","streamIntegrationHistory","_ref16","agentId","banner","bannerId","notification","interaction","_ref17","roomIds","forEach","enabled","roomId","streamLivechatRoom","_ref18","appId","streamApps","command","_ref19","emit","_ref20","acknowledgeMessage","__reify_async_result__","_reifyError","self","async"],"sources":["server/modules/listeners/listeners.module.ts"],"sourcesContent":["import type { AppStatus } from '@rocket.chat/apps-engine/definition/AppStatus';\nimport type { ISetting as AppsSetting } from '@rocket.chat/apps-engine/definition/settings';\nimport type { IServiceClass } from '@rocket.chat/core-services';\nimport { EnterpriseSettings } from '@rocket.chat/core-services';\nimport { isSettingColor, isSettingEnterprise, UserStatus } from '@rocket.chat/core-typings';\nimport type { IUser, IRoom, IRole, VideoConference, ISetting, IOmnichannelRoom, IMessage, IOTRMessage } from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\nimport { parse } from '@rocket.chat/message-parser';\n\nimport { settings } from '../../../app/settings/server/cached';\nimport type { NotificationsModule } from '../notifications/notifications.module';\n\nconst isMessageParserDisabled = process.env.DISABLE_MESSAGE_PARSER === 'true';\n\nconst STATUS_MAP: Record<UserStatus, 0 | 1 | 2 | 3> = {\n\t[UserStatus.OFFLINE]: 0,\n\t[UserStatus.ONLINE]: 1,\n\t[UserStatus.AWAY]: 2,\n\t[UserStatus.BUSY]: 3,\n\t[UserStatus.DISABLED]: 0,\n} as const;\n\nconst minimongoChangeMap: Record<string, string> = {\n\tinserted: 'added',\n\tupdated: 'changed',\n\tremoved: 'removed',\n} as const;\n\nexport class ListenersModule {\n\tconstructor(service: IServiceClass, notifications: NotificationsModule) {\n\t\tconst logger = new Logger('ListenersModule');\n\n\t\tservice.onEvent('license.sync', () => notifications.notifyAllInThisInstance('license'));\n\t\tservice.onEvent('license.actions', () => notifications.notifyAllInThisInstance('license'));\n\n\t\tservice.onEvent('emoji.deleteCustom', (emoji) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('deleteEmojiCustom', {\n\t\t\t\temojiData: emoji,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('emoji.updateCustom', (emoji) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('updateEmojiCustom', {\n\t\t\t\temojiData: emoji,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('user.forceLogout', (uid) => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'force_logout');\n\t\t});\n\n\t\tservice.onEvent('notify.ephemeralMessage', (uid, rid, message) => {\n\t\t\tif (!isMessageParserDisabled && message.msg) {\n\t\t\t\tconst customDomains = settings.get<string>('Message_CustomDomain_AutoLink')\n\t\t\t\t\t? settings\n\t\t\t\t\t\t\t.get<string>('Message_CustomDomain_AutoLink')\n\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t.map((domain) => domain.trim())\n\t\t\t\t\t: [];\n\n\t\t\t\tmessage.md = parse(message.msg, {\n\t\t\t\t\tcolors: settings.get('HexColorPreview_Enabled'),\n\t\t\t\t\temoticons: true,\n\t\t\t\t\tcustomDomains,\n\t\t\t\t\t...(settings.get('Katex_Enabled') && {\n\t\t\t\t\t\tkatex: {\n\t\t\t\t\t\t\tdollarSyntax: settings.get('Katex_Dollar_Syntax'),\n\t\t\t\t\t\t\tparenthesisSyntax: settings.get('Katex_Parenthesis_Syntax'),\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'message', {\n\t\t\t\tgroupable: false,\n\t\t\t\tu: {\n\t\t\t\t\t_id: 'rocket.cat',\n\t\t\t\t\tusername: 'rocket.cat',\n\t\t\t\t},\n\t\t\t\tprivate: true,\n\t\t\t\t_id: message._id || String(Date.now()),\n\t\t\t\trid,\n\t\t\t\tts: new Date(),\n\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t...message,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('permission.changed', ({ clientAction, data }) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('permissions-changed', clientAction, data);\n\t\t});\n\n\t\tservice.onEvent('room.avatarUpdate', ({ _id: rid, avatarETag: etag }) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('updateAvatar', {\n\t\t\t\trid,\n\t\t\t\tetag,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('user.avatarUpdate', ({ username, avatarETag: etag }) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('updateAvatar', {\n\t\t\t\tusername,\n\t\t\t\tetag,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('user.deleted', ({ _id: userId }, data) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('Users:Deleted', {\n\t\t\t\tuserId,\n\t\t\t\t...data,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('user.deleteCustomStatus', (userStatus) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('deleteCustomUserStatus', {\n\t\t\t\tuserStatusData: userStatus,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('user.nameChanged', (user) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('Users:NameChanged', user);\n\t\t});\n\n\t\tservice.onEvent('user.roleUpdate', (update) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('roles-change', update);\n\t\t});\n\n\t\tservice.onEvent(\n\t\t\t'user.video-conference',\n\t\t\t({\n\t\t\t\tuserId,\n\t\t\t\taction,\n\t\t\t\tparams,\n\t\t\t}: {\n\t\t\t\tuserId: string;\n\t\t\t\taction: string;\n\t\t\t\tparams: {\n\t\t\t\t\tcallId: VideoConference['_id'];\n\t\t\t\t\tuid: IUser['_id'];\n\t\t\t\t\trid: IRoom['_id'];\n\t\t\t\t};\n\t\t\t}) => {\n\t\t\t\tnotifications.notifyUserInThisInstance(userId, 'video-conference', { action, params });\n\t\t\t},\n\t\t);\n\n\t\tservice.onEvent('room.video-conference', ({ rid, callId }) => {\n\t\t\t/* deprecated */\n\t\t\t(notifications.notifyRoom as any)(rid, callId);\n\n\t\t\tnotifications.notifyRoom(rid, 'videoconf', callId);\n\t\t});\n\n\t\tservice.onEvent('presence.status', ({ user }) => {\n\t\t\tconst { _id, username, name, status, statusText, roles } = user;\n\t\t\tif (!status || !username) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnotifications.notifyUserInThisInstance(_id, 'userData', {\n\t\t\t\ttype: 'updated',\n\t\t\t\tid: _id,\n\t\t\t\tdiff: {\n\t\t\t\t\tstatus,\n\t\t\t\t\t...(statusText && { statusText }),\n\t\t\t\t},\n\t\t\t\tunset: {},\n\t\t\t});\n\n\t\t\tnotifications.notifyLoggedInThisInstance('user-status', [_id, username, STATUS_MAP[status], statusText, name, roles]);\n\n\t\t\tif (_id) {\n\t\t\t\tnotifications.sendPresence(_id, username, STATUS_MAP[status], statusText);\n\t\t\t}\n\t\t});\n\n\t\tservice.onEvent('user.updateCustomStatus', (userStatus) => {\n\t\t\tnotifications.notifyLoggedInThisInstance('updateCustomUserStatus', {\n\t\t\t\tuserStatusData: userStatus,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('watch.messages', async ({ message }) => {\n\t\t\tif (!message.rid) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnotifications.streamRoomMessage._emit('__my_messages__', [message], undefined, false, (streamer, _sub, eventName, args, allowed) =>\n\t\t\t\tstreamer.changedPayload(streamer.subscriptionName, 'id', {\n\t\t\t\t\teventName,\n\t\t\t\t\targs: [...args, allowed],\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tnotifications.streamRoomMessage.emitWithoutBroadcast(message.rid, message);\n\t\t});\n\n\t\tservice.onEvent('notify.messagesRead', ({ rid, until, tmid }): void => {\n\t\t\tnotifications.notifyRoomInThisInstance(rid, 'messagesRead', { tmid, until });\n\t\t});\n\n\t\tservice.onEvent('watch.subscriptions', ({ clientAction, subscription }) => {\n\t\t\tif (!subscription.u?._id) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// emit a removed event on msg stream to remove the user's stream-room-messages subscription when the user is removed from room\n\t\t\tif (clientAction === 'removed') {\n\t\t\t\tnotifications.streamRoomMessage.__emit(subscription.u._id, clientAction, subscription);\n\t\t\t}\n\n\t\t\tnotifications.streamUser.__emit(subscription.u._id, clientAction, subscription);\n\n\t\t\tnotifications.notifyUserInThisInstance(subscription.u._id, 'subscriptions-changed', clientAction, subscription as any);\n\t\t});\n\n\t\tservice.onEvent('watch.roles', ({ clientAction, role }): void => {\n\t\t\tnotifications.streamRoles.emitWithoutBroadcast('roles', {\n\t\t\t\ttype: clientAction,\n\t\t\t\t...(role as IRole),\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('watch.inquiries', async ({ clientAction, inquiry, diff }): Promise<void> => {\n\t\t\tconst type = minimongoChangeMap[clientAction] as 'added' | 'changed' | 'removed';\n\t\t\tif (clientAction === 'removed') {\n\t\t\t\tnotifications.streamLivechatQueueData.emitWithoutBroadcast(inquiry._id, {\n\t\t\t\t\t_id: inquiry._id,\n\t\t\t\t\tclientAction,\n\t\t\t\t});\n\n\t\t\t\tif (inquiry.department) {\n\t\t\t\t\treturn notifications.streamLivechatQueueData.emitWithoutBroadcast(`department/${inquiry.department}`, { type, ...inquiry });\n\t\t\t\t}\n\n\t\t\t\treturn notifications.streamLivechatQueueData.emitWithoutBroadcast('public', {\n\t\t\t\t\ttype,\n\t\t\t\t\t...inquiry,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Don't do notifications for updating inquiries when the only thing changing is the queue metadata\n\t\t\tif (\n\t\t\t\tclientAction === 'updated' &&\n\t\t\t\tdiff?.hasOwnProperty('lockedAt') &&\n\t\t\t\tdiff?.hasOwnProperty('locked') &&\n\t\t\t\tdiff?.hasOwnProperty('_updatedAt') &&\n\t\t\t\tObject.keys(diff).length === 3\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnotifications.streamLivechatQueueData.emitWithoutBroadcast(inquiry._id, {\n\t\t\t\t...inquiry,\n\t\t\t\tclientAction,\n\t\t\t});\n\n\t\t\tif (!inquiry.department) {\n\t\t\t\treturn notifications.streamLivechatQueueData.emitWithoutBroadcast('public', {\n\t\t\t\t\ttype,\n\t\t\t\t\t...inquiry,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tnotifications.streamLivechatQueueData.emitWithoutBroadcast(`department/${inquiry.department}`, { type, ...inquiry });\n\n\t\t\tif (clientAction === 'updated' && !diff?.department) {\n\t\t\t\tnotifications.streamLivechatQueueData.emitWithoutBroadcast('public', { type, ...inquiry });\n\t\t\t}\n\t\t});\n\n\t\tservice.onEvent('watch.settings', async ({ clientAction, setting }): Promise<void> => {\n\t\t\t// if a EE setting changed make sure we broadcast the correct value according to license\n\t\t\tif (clientAction !== 'removed' && isSettingEnterprise(setting)) {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await EnterpriseSettings.changeSettingValue(setting);\n\t\t\t\t\tif (result !== undefined && !(result instanceof Error)) {\n\t\t\t\t\t\tsetting.value = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (err: unknown) {\n\t\t\t\t\tlogger.error({ msg: 'Error getting proper enterprise setting value. Returning `invalidValue` instead.', err });\n\t\t\t\t\tsetting.value = setting.invalidValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setting.hidden) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst value = {\n\t\t\t\t_id: setting._id,\n\t\t\t\tvalue: setting.value,\n\t\t\t\t...(isSettingColor(setting) && { editor: setting.editor }),\n\t\t\t\tproperties: setting.properties,\n\t\t\t\tenterprise: setting.enterprise,\n\t\t\t\trequiredOnWizard: setting.requiredOnWizard,\n\t\t\t} as ISetting;\n\n\t\t\tif (setting.public === true) {\n\t\t\t\tnotifications.notifyAllInThisInstance('public-settings-changed', clientAction, value);\n\t\t\t\tnotifications.notifyAllInThisInstance('public-info', ['public-settings-changed', [clientAction, value]]);\n\t\t\t}\n\n\t\t\tnotifications.notifyLoggedInThisInstance('private-settings-changed', clientAction, value);\n\t\t});\n\n\t\tservice.onEvent('watch.rooms', ({ clientAction, room }): void => {\n\t\t\t// this emit will cause the user to receive a 'rooms-changed' event\n\t\t\tnotifications.streamUser.__emit(room._id, clientAction, room);\n\n\t\t\tnotifications.streamRoomData.emitWithoutBroadcast(room._id, room as IOmnichannelRoom);\n\t\t});\n\n\t\tservice.onEvent('watch.users', (event): void => {\n\t\t\tswitch (event.clientAction) {\n\t\t\t\tcase 'updated':\n\t\t\t\t\tnotifications.notifyUserInThisInstance(event.id, 'userData', {\n\t\t\t\t\t\tid: event.id,\n\t\t\t\t\t\tdiff: event.diff,\n\t\t\t\t\t\tunset: event.unset,\n\t\t\t\t\t\ttype: 'updated',\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'inserted':\n\t\t\t\t\tnotifications.notifyUserInThisInstance(event.id, 'userData', { id: event.id, data: event.data, type: 'inserted' });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'removed':\n\t\t\t\t\tnotifications.notifyUserInThisInstance(event.id, 'userData', { id: event.id, type: 'removed' });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tservice.onEvent('watch.integrationHistory', ({ clientAction, data, diff, id }): void => {\n\t\t\tif (!data?.integration?._id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tswitch (clientAction) {\n\t\t\t\tcase 'updated': {\n\t\t\t\t\tnotifications.streamIntegrationHistory.emitWithoutBroadcast(data.integration._id, {\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tdiff,\n\t\t\t\t\t\ttype: clientAction,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'inserted': {\n\t\t\t\t\tnotifications.streamIntegrationHistory.emitWithoutBroadcast(data.integration._id, {\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\ttype: clientAction,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tservice.onEvent('watch.livechatDepartmentAgents', ({ clientAction, data }): void => {\n\t\t\tconst { agentId } = data;\n\t\t\tif (!agentId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnotifications.notifyUserInThisInstance(agentId, 'departmentAgentData', {\n\t\t\t\taction: clientAction,\n\t\t\t\t...data,\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('banner.user', (userId, banner): void => {\n\t\t\tnotifications.notifyUserInThisInstance(userId, 'banners', banner);\n\t\t});\n\n\t\tservice.onEvent('banner.new', (bannerId): void => {\n\t\t\tnotifications.notifyLoggedInThisInstance('new-banner', { bannerId }); // deprecated\n\t\t\tnotifications.notifyLoggedInThisInstance('banner-changed', { bannerId });\n\t\t});\n\n\t\tservice.onEvent('banner.disabled', (bannerId): void => {\n\t\t\tnotifications.notifyLoggedInThisInstance('banner-changed', { bannerId });\n\t\t});\n\n\t\tservice.onEvent('banner.enabled', (bannerId): void => {\n\t\t\tnotifications.notifyLoggedInThisInstance('banner-changed', { bannerId });\n\t\t});\n\n\t\tservice.onEvent('voip.events', (userId, data): void => {\n\t\t\tnotifications.notifyUserInThisInstance(userId, 'voip.events', data);\n\t\t});\n\n\t\tservice.onEvent('call.callerhangup', (userId, data): void => {\n\t\t\tnotifications.notifyUserInThisInstance(userId, 'call.hangup', data);\n\t\t});\n\n\t\tservice.onEvent('notify.desktop', (uid, notification): void => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'notification', notification);\n\t\t});\n\n\t\tservice.onEvent('notify.uiInteraction', (uid, interaction): void => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'uiInteraction', interaction);\n\t\t});\n\n\t\tservice.onEvent('notify.updateInvites', (uid, data): void => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'updateInvites', data);\n\t\t});\n\n\t\tservice.onEvent('notify.webdav', (uid, data): void => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'webdav', data);\n\t\t});\n\n\t\tservice.onEvent('notify.e2e.keyRequest', (rid, data): void => {\n\t\t\tnotifications.notifyRoomInThisInstance(rid, 'e2e.keyRequest', data);\n\t\t});\n\n\t\tservice.onEvent('notify.deleteMessage', (rid, data): void => {\n\t\t\tnotifications.notifyRoomInThisInstance(rid, 'deleteMessage', data);\n\t\t});\n\n\t\tservice.onEvent('notify.deleteMessageBulk', (rid, data): void => {\n\t\t\tnotifications.notifyRoomInThisInstance(rid, 'deleteMessageBulk', data);\n\t\t});\n\n\t\tservice.onEvent('notify.deleteCustomSound', (data): void => {\n\t\t\tnotifications.notifyAllInThisInstance('deleteCustomSound', data);\n\t\t\tnotifications.notifyAllInThisInstance('public-info', ['deleteCustomSound', [data]]);\n\t\t});\n\n\t\tservice.onEvent('notify.updateCustomSound', (data): void => {\n\t\t\tnotifications.notifyAllInThisInstance('updateCustomSound', data);\n\t\t\tnotifications.notifyAllInThisInstance('public-info', ['updateCustomSound', [data]]);\n\t\t});\n\n\t\tservice.onEvent('notify.calendar', (uid, data): void => {\n\t\t\tnotifications.notifyUserInThisInstance(uid, 'calendar', data);\n\t\t});\n\n\t\tservice.onEvent('notify.importedMessages', ({ roomIds }): void => {\n\t\t\troomIds.forEach((rid) => {\n\t\t\t\t// couldnt get TS happy by providing no data, so had to provide null\n\t\t\t\tnotifications.notifyRoomInThisInstance(rid, 'messagesImported', null);\n\t\t\t});\n\t\t});\n\n\t\tservice.onEvent('connector.statuschanged', (enabled): void => {\n\t\t\tnotifications.notifyLoggedInThisInstance('voip.statuschanged', enabled);\n\t\t});\n\t\tservice.onEvent('omnichannel.room', (roomId, data): void => {\n\t\t\tnotifications.streamLivechatRoom.emitWithoutBroadcast(roomId, data);\n\t\t});\n\t\tservice.onEvent('watch.priorities', async ({ clientAction, diff, id }): Promise<void> => {\n\t\t\tnotifications.notifyLoggedInThisInstance('omnichannel.priority-changed', { id, clientAction, name: diff?.name });\n\t\t});\n\n\t\tservice.onEvent('apps.added', (appId: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('app/added', appId);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['app/added', [appId]]);\n\t\t});\n\n\t\tservice.onEvent('apps.removed', (appId: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('app/removed', appId);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['app/removed', [appId]]);\n\t\t});\n\n\t\tservice.onEvent('apps.updated', (appId: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('app/updated', appId);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['app/updated', [appId]]);\n\t\t});\n\n\t\tservice.onEvent('apps.statusUpdate', (appId: string, status: AppStatus) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('app/statusUpdate', { appId, status });\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['app/statusUpdate', [{ appId, status }]]);\n\t\t});\n\n\t\tservice.onEvent('apps.settingUpdated', (appId: string, setting: AppsSetting) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('app/settingUpdated', { appId, setting });\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['app/settingUpdated', [{ appId, setting }]]);\n\t\t});\n\n\t\tservice.onEvent('command.added', (command: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('command/added', command);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['command/added', [command]]);\n\t\t});\n\n\t\tservice.onEvent('command.disabled', (command: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('command/disabled', command);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['command/disabled', [command]]);\n\t\t});\n\n\t\tservice.onEvent('command.updated', (command: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('command/updated', command);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['command/updated', [command]]);\n\t\t});\n\n\t\tservice.onEvent('command.removed', (command: string) => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('command/removed', command);\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['command/removed', [command]]);\n\t\t});\n\n\t\tservice.onEvent('actions.changed', () => {\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('actions/changed');\n\t\t\tnotifications.streamApps.emitWithoutBroadcast('apps', ['actions/changed', []]);\n\t\t});\n\n\t\tservice.onEvent('otrMessage', ({ roomId, message, user, room }: { roomId: string; message: IMessage; user: IUser; room: IRoom }) => {\n\t\t\tnotifications.streamRoomMessage.emit(roomId, message, user, room);\n\t\t});\n\t\tservice.onEvent('otrAckUpdate', ({ roomId, acknowledgeMessage }: { roomId: string; acknowledgeMessage: IOTRMessage }) => {\n\t\t\tnotifications.streamRoomMessage.emit(roomId, acknowledgeMessage);\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"340be4d64544c9cca988f568ac765134a81dc536"}
