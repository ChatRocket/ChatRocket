{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/lists/useStreamUpdatesForMessageList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/hooks/lists/useStreamUpdatesForMessageList.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/lists/useStreamUpdatesForMessageList.ts","inputSourceMap":{"version":3,"file":"client/hooks/lists/useStreamUpdatesForMessageList.ts","sourceRoot":"","sources":["client/hooks/lists/useStreamUpdatesForMessageList.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAIlC,OAAO,EAAE,qBAAqB,EAAE,MAAM,qBAAqB,CAAC;AAY5D,MAAM,oBAAoB,GAAG,CAAC,MAA2C,EAAoC,EAAE;IAC9G,MAAM,KAAK,GAAoB,EAAE,CAAC;IAElC,IAAI,MAAM,CAAC,GAAG,EAAE,CAAC;QAChB,KAAK,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC;IACjC,CAAC;SAAM,CAAC;QACP,KAAK,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;IACtB,CAAC;IAED,IAAI,MAAM,CAAC,aAAa,EAAE,CAAC;QAC1B,KAAK,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;IAC9B,CAAC;IAED,IAAI,MAAM,CAAC,gBAAgB,EAAE,CAAC;QAC7B,KAAK,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;IACjC,CAAC;IACD,IAAI,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC;QAC1B,KAAK,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC;IAC7C,CAAC;IAED,OAAO,qBAAqB,CAAW,KAAK,CAAC,CAAC;AAC/C,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,8BAA8B,GAAG,CAAC,WAAwB,EAAE,GAAwB,EAAE,GAAwB,EAAQ,EAAE;IACpI,MAAM,uBAAuB,GAAG,SAAS,CAAC,eAAe,CAAC,CAAC;IAC3D,MAAM,qBAAqB,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;IAEvD,SAAS,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAClB,WAAW,CAAC,KAAK,EAAE,CAAC;YACpB,OAAO;QACR,CAAC;QAED,MAAM,2BAA2B,GAAG,uBAAuB,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE;YAC5E,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,MAAM,4BAA4B,GAAG,qBAAqB,CAAC,GAAG,GAAG,gBAAgB,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE;YACnG,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,MAAM,gCAAgC,GAAG,qBAAqB,CAAC,GAAG,GAAG,oBAAoB,EAAE,CAAC,MAAM,EAAE,EAAE;YACrG,MAAM,mBAAmB,GAAG,oBAAoB,CAAC,MAAM,CAAC,CAAC;YACzD,WAAW,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,OAAO,GAAS,EAAE;YACjB,2BAA2B,EAAE,CAAC;YAC9B,4BAA4B,EAAE,CAAC;YAC/B,gCAAgC,EAAE,CAAC;QACpC,CAAC,CAAC;IACH,CAAC,EAAE,CAAC,uBAAuB,EAAE,qBAAqB,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,CAAC,CAAC,CAAC;AAC7E,CAAC,CAAC","sourcesContent":["import type { IMessage, IRoom, IUser } from '@rocket.chat/core-typings';\nimport { useStream } from '@rocket.chat/ui-contexts';\nimport { useEffect } from 'react';\n\nimport type { MessageList } from '../../lib/lists/MessageList';\nimport type { FieldExpression, Query } from '../../lib/minimongo';\nimport { createFilterFromQuery } from '../../lib/minimongo';\n\ntype NotifyRoomRidDeleteMessageBulkEvent = {\n\trid: IMessage['rid'];\n\texcludePinned: boolean;\n\tignoreDiscussion: boolean;\n\tts: FieldExpression<Date>;\n\tusers: string[];\n\tids?: string[]; // message ids have priority over ts\n\tshowDeletedStatus?: boolean;\n};\n\nconst createDeleteCriteria = (params: NotifyRoomRidDeleteMessageBulkEvent): ((message: IMessage) => boolean) => {\n\tconst query: Query<IMessage> = {};\n\n\tif (params.ids) {\n\t\tquery._id = { $in: params.ids };\n\t} else {\n\t\tquery.ts = params.ts;\n\t}\n\n\tif (params.excludePinned) {\n\t\tquery.pinned = { $ne: true };\n\t}\n\n\tif (params.ignoreDiscussion) {\n\t\tquery.drid = { $exists: false };\n\t}\n\tif (params.users?.length) {\n\t\tquery['u.username'] = { $in: params.users };\n\t}\n\n\treturn createFilterFromQuery<IMessage>(query);\n};\n\nexport const useStreamUpdatesForMessageList = (messageList: MessageList, uid: IUser['_id'] | null, rid: IRoom['_id'] | null): void => {\n\tconst subscribeToRoomMessages = useStream('room-messages');\n\tconst subscribeToNotifyRoom = useStream('notify-room');\n\n\tuseEffect(() => {\n\t\tif (!uid || !rid) {\n\t\t\tmessageList.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst unsubscribeFromRoomMessages = subscribeToRoomMessages(rid, (message) => {\n\t\t\tmessageList.handle(message);\n\t\t});\n\n\t\tconst unsubscribeFromDeleteMessage = subscribeToNotifyRoom(`${rid}/deleteMessage`, ({ _id: mid }) => {\n\t\t\tmessageList.remove(mid);\n\t\t});\n\n\t\tconst unsubscribeFromDeleteMessageBulk = subscribeToNotifyRoom(`${rid}/deleteMessageBulk`, (params) => {\n\t\t\tconst matchDeleteCriteria = createDeleteCriteria(params);\n\t\t\tmessageList.prune(matchDeleteCriteria);\n\t\t});\n\n\t\treturn (): void => {\n\t\t\tunsubscribeFromRoomMessages();\n\t\t\tunsubscribeFromDeleteMessage();\n\t\t\tunsubscribeFromDeleteMessageBulk();\n\t\t};\n\t}, [subscribeToRoomMessages, subscribeToNotifyRoom, uid, rid, messageList]);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/lists/useStreamUpdatesForMessageList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/hooks/lists/useStreamUpdatesForMessageList.ts","inputSourceMap":{"version":3,"file":"client/hooks/lists/useStreamUpdatesForMessageList.ts","sourceRoot":"","sources":["client/hooks/lists/useStreamUpdatesForMessageList.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAIlC,OAAO,EAAE,qBAAqB,EAAE,MAAM,qBAAqB,CAAC;AAY5D,MAAM,oBAAoB,GAAG,CAAC,MAA2C,EAAoC,EAAE;IAC9G,MAAM,KAAK,GAAoB,EAAE,CAAC;IAElC,IAAI,MAAM,CAAC,GAAG,EAAE,CAAC;QAChB,KAAK,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC;IACjC,CAAC;SAAM,CAAC;QACP,KAAK,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;IACtB,CAAC;IAED,IAAI,MAAM,CAAC,aAAa,EAAE,CAAC;QAC1B,KAAK,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;IAC9B,CAAC;IAED,IAAI,MAAM,CAAC,gBAAgB,EAAE,CAAC;QAC7B,KAAK,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;IACjC,CAAC;IACD,IAAI,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC;QAC1B,KAAK,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC;IAC7C,CAAC;IAED,OAAO,qBAAqB,CAAW,KAAK,CAAC,CAAC;AAC/C,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,8BAA8B,GAAG,CAAC,WAAwB,EAAE,GAAwB,EAAE,GAAwB,EAAQ,EAAE;IACpI,MAAM,uBAAuB,GAAG,SAAS,CAAC,eAAe,CAAC,CAAC;IAC3D,MAAM,qBAAqB,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;IAEvD,SAAS,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAClB,WAAW,CAAC,KAAK,EAAE,CAAC;YACpB,OAAO;QACR,CAAC;QAED,MAAM,2BAA2B,GAAG,uBAAuB,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE;YAC5E,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,MAAM,4BAA4B,GAAG,qBAAqB,CAAC,GAAG,GAAG,gBAAgB,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE;YACnG,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,MAAM,gCAAgC,GAAG,qBAAqB,CAAC,GAAG,GAAG,oBAAoB,EAAE,CAAC,MAAM,EAAE,EAAE;YACrG,MAAM,mBAAmB,GAAG,oBAAoB,CAAC,MAAM,CAAC,CAAC;YACzD,WAAW,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,OAAO,GAAS,EAAE;YACjB,2BAA2B,EAAE,CAAC;YAC9B,4BAA4B,EAAE,CAAC;YAC/B,gCAAgC,EAAE,CAAC;QACpC,CAAC,CAAC;IACH,CAAC,EAAE,CAAC,uBAAuB,EAAE,qBAAqB,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,CAAC,CAAC,CAAC;AAC7E,CAAC,CAAC","sourcesContent":["import type { IMessage, IRoom, IUser } from '@rocket.chat/core-typings';\nimport { useStream } from '@rocket.chat/ui-contexts';\nimport { useEffect } from 'react';\n\nimport type { MessageList } from '../../lib/lists/MessageList';\nimport type { FieldExpression, Query } from '../../lib/minimongo';\nimport { createFilterFromQuery } from '../../lib/minimongo';\n\ntype NotifyRoomRidDeleteMessageBulkEvent = {\n\trid: IMessage['rid'];\n\texcludePinned: boolean;\n\tignoreDiscussion: boolean;\n\tts: FieldExpression<Date>;\n\tusers: string[];\n\tids?: string[]; // message ids have priority over ts\n\tshowDeletedStatus?: boolean;\n};\n\nconst createDeleteCriteria = (params: NotifyRoomRidDeleteMessageBulkEvent): ((message: IMessage) => boolean) => {\n\tconst query: Query<IMessage> = {};\n\n\tif (params.ids) {\n\t\tquery._id = { $in: params.ids };\n\t} else {\n\t\tquery.ts = params.ts;\n\t}\n\n\tif (params.excludePinned) {\n\t\tquery.pinned = { $ne: true };\n\t}\n\n\tif (params.ignoreDiscussion) {\n\t\tquery.drid = { $exists: false };\n\t}\n\tif (params.users?.length) {\n\t\tquery['u.username'] = { $in: params.users };\n\t}\n\n\treturn createFilterFromQuery<IMessage>(query);\n};\n\nexport const useStreamUpdatesForMessageList = (messageList: MessageList, uid: IUser['_id'] | null, rid: IRoom['_id'] | null): void => {\n\tconst subscribeToRoomMessages = useStream('room-messages');\n\tconst subscribeToNotifyRoom = useStream('notify-room');\n\n\tuseEffect(() => {\n\t\tif (!uid || !rid) {\n\t\t\tmessageList.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst unsubscribeFromRoomMessages = subscribeToRoomMessages(rid, (message) => {\n\t\t\tmessageList.handle(message);\n\t\t});\n\n\t\tconst unsubscribeFromDeleteMessage = subscribeToNotifyRoom(`${rid}/deleteMessage`, ({ _id: mid }) => {\n\t\t\tmessageList.remove(mid);\n\t\t});\n\n\t\tconst unsubscribeFromDeleteMessageBulk = subscribeToNotifyRoom(`${rid}/deleteMessageBulk`, (params) => {\n\t\t\tconst matchDeleteCriteria = createDeleteCriteria(params);\n\t\t\tmessageList.prune(matchDeleteCriteria);\n\t\t});\n\n\t\treturn (): void => {\n\t\t\tunsubscribeFromRoomMessages();\n\t\t\tunsubscribeFromDeleteMessage();\n\t\t\tunsubscribeFromDeleteMessageBulk();\n\t\t};\n\t}, [subscribeToRoomMessages, subscribeToNotifyRoom, uid, rid, messageList]);\n};\n"]}}},"code":"module.export({\n  useStreamUpdatesForMessageList: () => useStreamUpdatesForMessageList\n});\nlet useStream;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useStream(v) {\n    useStream = v;\n  }\n}, 0);\nlet useEffect;\nmodule.link(\"react\", {\n  useEffect(v) {\n    useEffect = v;\n  }\n}, 1);\nlet createFilterFromQuery;\nmodule.link(\"../../lib/minimongo\", {\n  createFilterFromQuery(v) {\n    createFilterFromQuery = v;\n  }\n}, 2);\nconst createDeleteCriteria = params => {\n  var _params$users;\n  const query = {};\n  if (params.ids) {\n    query._id = {\n      $in: params.ids\n    };\n  } else {\n    query.ts = params.ts;\n  }\n  if (params.excludePinned) {\n    query.pinned = {\n      $ne: true\n    };\n  }\n  if (params.ignoreDiscussion) {\n    query.drid = {\n      $exists: false\n    };\n  }\n  if ((_params$users = params.users) !== null && _params$users !== void 0 && _params$users.length) {\n    query['u.username'] = {\n      $in: params.users\n    };\n  }\n  return createFilterFromQuery(query);\n};\nconst useStreamUpdatesForMessageList = (messageList, uid, rid) => {\n  const subscribeToRoomMessages = useStream('room-messages');\n  const subscribeToNotifyRoom = useStream('notify-room');\n  useEffect(() => {\n    if (!uid || !rid) {\n      messageList.clear();\n      return;\n    }\n    const unsubscribeFromRoomMessages = subscribeToRoomMessages(rid, message => {\n      messageList.handle(message);\n    });\n    const unsubscribeFromDeleteMessage = subscribeToNotifyRoom(\"\".concat(rid, \"/deleteMessage\"), _ref => {\n      let {\n        _id: mid\n      } = _ref;\n      messageList.remove(mid);\n    });\n    const unsubscribeFromDeleteMessageBulk = subscribeToNotifyRoom(\"\".concat(rid, \"/deleteMessageBulk\"), params => {\n      const matchDeleteCriteria = createDeleteCriteria(params);\n      messageList.prune(matchDeleteCriteria);\n    });\n    return () => {\n      unsubscribeFromRoomMessages();\n      unsubscribeFromDeleteMessage();\n      unsubscribeFromDeleteMessageBulk();\n    };\n  }, [subscribeToRoomMessages, subscribeToNotifyRoom, uid, rid, messageList]);\n};","map":{"version":3,"names":["module","export","useStreamUpdatesForMessageList","useStream","link","v","useEffect","createFilterFromQuery","createDeleteCriteria","params","_params$users","query","ids","_id","$in","ts","excludePinned","pinned","$ne","ignoreDiscussion","drid","$exists","users","length","messageList","uid","rid","subscribeToRoomMessages","subscribeToNotifyRoom","clear","unsubscribeFromRoomMessages","message","handle","unsubscribeFromDeleteMessage","concat","_ref","mid","remove","unsubscribeFromDeleteMessageBulk","matchDeleteCriteria","prune"],"sources":["client/hooks/lists/useStreamUpdatesForMessageList.ts"],"sourcesContent":["import type { IMessage, IRoom, IUser } from '@rocket.chat/core-typings';\nimport { useStream } from '@rocket.chat/ui-contexts';\nimport { useEffect } from 'react';\n\nimport type { MessageList } from '../../lib/lists/MessageList';\nimport type { FieldExpression, Query } from '../../lib/minimongo';\nimport { createFilterFromQuery } from '../../lib/minimongo';\n\ntype NotifyRoomRidDeleteMessageBulkEvent = {\n\trid: IMessage['rid'];\n\texcludePinned: boolean;\n\tignoreDiscussion: boolean;\n\tts: FieldExpression<Date>;\n\tusers: string[];\n\tids?: string[]; // message ids have priority over ts\n\tshowDeletedStatus?: boolean;\n};\n\nconst createDeleteCriteria = (params: NotifyRoomRidDeleteMessageBulkEvent): ((message: IMessage) => boolean) => {\n\tconst query: Query<IMessage> = {};\n\n\tif (params.ids) {\n\t\tquery._id = { $in: params.ids };\n\t} else {\n\t\tquery.ts = params.ts;\n\t}\n\n\tif (params.excludePinned) {\n\t\tquery.pinned = { $ne: true };\n\t}\n\n\tif (params.ignoreDiscussion) {\n\t\tquery.drid = { $exists: false };\n\t}\n\tif (params.users?.length) {\n\t\tquery['u.username'] = { $in: params.users };\n\t}\n\n\treturn createFilterFromQuery<IMessage>(query);\n};\n\nexport const useStreamUpdatesForMessageList = (messageList: MessageList, uid: IUser['_id'] | null, rid: IRoom['_id'] | null): void => {\n\tconst subscribeToRoomMessages = useStream('room-messages');\n\tconst subscribeToNotifyRoom = useStream('notify-room');\n\n\tuseEffect(() => {\n\t\tif (!uid || !rid) {\n\t\t\tmessageList.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst unsubscribeFromRoomMessages = subscribeToRoomMessages(rid, (message) => {\n\t\t\tmessageList.handle(message);\n\t\t});\n\n\t\tconst unsubscribeFromDeleteMessage = subscribeToNotifyRoom(`${rid}/deleteMessage`, ({ _id: mid }) => {\n\t\t\tmessageList.remove(mid);\n\t\t});\n\n\t\tconst unsubscribeFromDeleteMessageBulk = subscribeToNotifyRoom(`${rid}/deleteMessageBulk`, (params) => {\n\t\t\tconst matchDeleteCriteria = createDeleteCriteria(params);\n\t\t\tmessageList.prune(matchDeleteCriteria);\n\t\t});\n\n\t\treturn (): void => {\n\t\t\tunsubscribeFromRoomMessages();\n\t\t\tunsubscribeFromDeleteMessage();\n\t\t\tunsubscribeFromDeleteMessageBulk();\n\t\t};\n\t}, [subscribeToRoomMessages, subscribeToNotifyRoom, uid, rid, messageList]);\n};\n"],"mappings":"AACAA,MAAA,CAAOC,MAAE;EAAAC,8BAAiB,EAAAA,CAAA,KAAAA;AAA2B;AAAA,IAAAC,SAAA;AAAAH,MAAA,CAAAI,IAAA;EAAAD,UAAAE,CAAA;IAAAF,SAAA,GAAAE,CAAA;EAAA;AAAA;AAAA,IAAAC,SAAA;AAAAN,MAAA,CAAAI,IAAA;EAAAE,UAAAD,CAAA;IAAAC,SAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,qBAAA;AAAAP,MAAA,CAAAI,IAAA;EAAAG,sBAAAF,CAAA;IAAAE,qBAAA,GAAAF,CAAA;EAAA;AAAA;AAiBrD,MAAMG,oBAAoB,GAAIC,MAA2C,IAAsC;EAAA,IAAAC,aAAA;EAC9G,MAAMC,KAAK,GAAoB,EAAE;EAEjC,IAAIF,MAAM,CAACG,GAAG,EAAE;IACfD,KAAK,CAACE,GAAG,GAAG;MAAEC,GAAG,EAAEL,MAAM,CAACG;IAAG,CAAE;EAChC,CAAC,MAAM;IACND,KAAK,CAACI,EAAE,GAAGN,MAAM,CAACM,EAAE;EACrB;EAEA,IAAIN,MAAM,CAACO,aAAa,EAAE;IACzBL,KAAK,CAACM,MAAM,GAAG;MAAEC,GAAG,EAAE;IAAI,CAAE;EAC7B;EAEA,IAAIT,MAAM,CAACU,gBAAgB,EAAE;IAC5BR,KAAK,CAACS,IAAI,GAAG;MAAEC,OAAO,EAAE;IAAK,CAAE;EAChC;EACA,KAAAX,aAAA,GAAID,MAAM,CAACa,KAAK,cAAAZ,aAAA,eAAZA,aAAA,CAAca,MAAM,EAAE;IACzBZ,KAAK,CAAC,YAAY,CAAC,GAAG;MAAEG,GAAG,EAAEL,MAAM,CAACa;IAAK,CAAE;EAC5C;EAEA,OAAOf,qBAAqB,CAAWI,KAAK,CAAC;AAC9C,CAAC;AAEM,MAAMT,8BAA8B,GAAGA,CAACsB,WAAwB,EAAEC,GAAwB,EAAEC,GAAwB,KAAU;EACpI,MAAMC,uBAAuB,GAAGxB,SAAS,CAAC,eAAe,CAAC;EAC1D,MAAMyB,qBAAqB,GAAGzB,SAAS,CAAC,aAAa,CAAC;EAEtDG,SAAS,CAAC,MAAK;IACd,IAAI,CAACmB,GAAG,IAAI,CAACC,GAAG,EAAE;MACjBF,WAAW,CAACK,KAAK,EAAE;MACnB;IACD;IAEA,MAAMC,2BAA2B,GAAGH,uBAAuB,CAACD,GAAG,EAAGK,OAAO,IAAI;MAC5EP,WAAW,CAACQ,MAAM,CAACD,OAAO,CAAC;IAC5B,CAAC,CAAC;IAEF,MAAME,4BAA4B,GAAGL,qBAAqB,IAAAM,MAAA,CAAIR,GAAG,qBAAkBS,IAAA,IAAiB;MAAA,IAAhB;QAAEtB,GAAG,EAAEuB;MAAG,CAAE,GAAAD,IAAA;MAC/FX,WAAW,CAACa,MAAM,CAACD,GAAG,CAAC;IACxB,CAAC,CAAC;IAEF,MAAME,gCAAgC,GAAGV,qBAAqB,IAAAM,MAAA,CAAIR,GAAG,yBAAuBjB,MAAM,IAAI;MACrG,MAAM8B,mBAAmB,GAAG/B,oBAAoB,CAACC,MAAM,CAAC;MACxDe,WAAW,CAACgB,KAAK,CAACD,mBAAmB,CAAC;IACvC,CAAC,CAAC;IAEF,OAAO,MAAW;MACjBT,2BAA2B,EAAE;MAC7BG,4BAA4B,EAAE;MAC9BK,gCAAgC,EAAE;IACnC,CAAC;EACF,CAAC,EAAE,CAACX,uBAAuB,EAAEC,qBAAqB,EAAEH,GAAG,EAAEC,GAAG,EAAEF,WAAW,CAAC,CAAC;AAC5E,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e79fe2c3974b41fcbd85e860e94b11b9ca875261"}
