{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/emailInbox/EmailInboxForm.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/admin/emailInbox/EmailInboxForm.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/emailInbox/EmailInboxForm.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/emailInbox/EmailInboxForm.tsx","sourceRoot":"","sources":["client/views/admin/emailInbox/EmailInboxForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IEmailInboxPayload } from '@rocket.chat/core-typings';\nimport {\n\tAccordion,\n\tButton,\n\tButtonGroup,\n\tTextInput,\n\tTextAreaInput,\n\tField,\n\tToggleSwitch,\n\tFieldGroup,\n\tBox,\n\tMargins,\n\tNumberInput,\n\tPasswordInput,\n\tFieldLabel,\n\tFieldRow,\n\tFieldError,\n\tFieldHint,\n} from '@rocket.chat/fuselage';\nimport { useMutableCallback, useUniqueId } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useRoute, useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useCallback } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport { validateEmail } from '../../../../lib/emailValidator';\nimport AutoCompleteDepartment from '../../../components/AutoCompleteDepartment';\nimport GenericModal from '../../../components/GenericModal';\nimport { PageScrollableContentWithShadow } from '../../../components/Page';\n\nconst EmailInboxForm = ({ inboxData }: { inboxData?: IEmailInboxPayload }): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst setModal = useSetModal();\n\tconst router = useRoute('admin-email-inboxes');\n\n\tconst handleBack = useCallback(() => router.push({}), [router]);\n\n\tconst saveEmailInbox = useEndpoint('POST', '/v1/email-inbox');\n\tconst deleteInboxAction = useEndpoint('DELETE', '/v1/email-inbox/:_id', { _id: inboxData?._id ?? '' });\n\tconst emailAlreadyExistsAction = useEndpoint('GET', '/v1/email-inbox.search');\n\n\tconst {\n\t\tcontrol,\n\t\thandleSubmit,\n\t\tformState: { errors, isDirty },\n\t} = useForm({\n\t\tdefaultValues: {\n\t\t\tactive: inboxData?.active ?? true,\n\t\t\tname: inboxData?.name,\n\t\t\temail: inboxData?.email,\n\t\t\tdescription: inboxData?.description,\n\t\t\tsenderInfo: inboxData?.senderInfo,\n\t\t\tdepartment: inboxData?.department || '',\n\t\t\t// SMTP\n\t\t\tsmtpServer: inboxData?.smtp.server,\n\t\t\tsmtpPort: inboxData?.smtp.port ?? 587,\n\t\t\tsmtpUsername: inboxData?.smtp.username,\n\t\t\tsmtpPassword: inboxData?.smtp.password,\n\t\t\tsmtpSecure: inboxData?.smtp.secure ?? false,\n\t\t\t// IMAP\n\t\t\timapServer: inboxData?.imap.server,\n\t\t\timapPort: inboxData?.imap.port ?? 993,\n\t\t\timapUsername: inboxData?.imap.username,\n\t\t\timapPassword: inboxData?.imap.password,\n\t\t\timapSecure: inboxData?.imap.secure ?? false,\n\t\t\timapRetries: inboxData?.imap.maxRetries ?? 10,\n\t\t},\n\t\tmode: 'all',\n\t});\n\n\tconst handleDelete = useMutableCallback(() => {\n\t\tconst deleteInbox = async (): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tawait deleteInboxAction();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_removed') });\n\t\t\t\thandleBack();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t} finally {\n\t\t\t\tsetModal(null);\n\t\t\t}\n\t\t};\n\n\t\tsetModal(\n\t\t\t<GenericModal variant='danger' onConfirm={deleteInbox} onCancel={(): void => setModal(null)} confirmText={t('Delete')}>\n\t\t\t\t{t('You_will_not_be_able_to_recover_email_inbox')}\n\t\t\t</GenericModal>,\n\t\t);\n\t});\n\n\tconst handleSave = useMutableCallback(\n\t\tasync ({\n\t\t\tactive,\n\t\t\tname,\n\t\t\temail,\n\t\t\tdescription,\n\t\t\tsenderInfo,\n\t\t\tdepartment,\n\t\t\tsmtpServer,\n\t\t\tsmtpPort,\n\t\t\tsmtpUsername,\n\t\t\tsmtpPassword,\n\t\t\tsmtpSecure,\n\t\t\timapServer,\n\t\t\timapPort,\n\t\t\timapUsername,\n\t\t\timapPassword,\n\t\t\timapSecure,\n\t\t\timapRetries,\n\t\t}) => {\n\t\t\tconst smtp = {\n\t\t\t\tserver: smtpServer,\n\t\t\t\tport: parseInt(smtpPort),\n\t\t\t\tusername: smtpUsername,\n\t\t\t\tpassword: smtpPassword,\n\t\t\t\tsecure: smtpSecure,\n\t\t\t};\n\n\t\t\tconst imap = {\n\t\t\t\tserver: imapServer,\n\t\t\t\tport: parseInt(imapPort),\n\t\t\t\tusername: imapUsername,\n\t\t\t\tpassword: imapPassword,\n\t\t\t\tsecure: imapSecure,\n\t\t\t\tmaxRetries: parseInt(imapRetries),\n\t\t\t};\n\n\t\t\tconst payload = {\n\t\t\t\t...(inboxData?._id && { _id: inboxData?._id }),\n\t\t\t\tactive,\n\t\t\t\tname,\n\t\t\t\temail,\n\t\t\t\tdescription,\n\t\t\t\tsenderInfo,\n\t\t\t\t...(department && { department: typeof department === 'string' ? department : department.value }),\n\t\t\t\tsmtp,\n\t\t\t\timap,\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tawait saveEmailInbox(payload);\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_added') });\n\t\t\t\thandleBack();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t},\n\t);\n\n\tconst checkEmailExists = useMutableCallback(async (email) => {\n\t\tif (!email) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!validateEmail(email)) {\n\t\t\treturn t('error-invalid-email-address');\n\t\t}\n\n\t\tconst { emailInbox } = await emailAlreadyExistsAction({ email });\n\n\t\tif (!emailInbox || (inboxData?._id && emailInbox._id === inboxData?._id)) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn t('Email_already_exists');\n\t});\n\n\tconst activeField = useUniqueId();\n\tconst nameField = useUniqueId();\n\tconst emailField = useUniqueId();\n\tconst descriptionField = useUniqueId();\n\tconst senderInfoField = useUniqueId();\n\tconst departmentField = useUniqueId();\n\n\tconst smtpServerField = useUniqueId();\n\tconst smtpPortField = useUniqueId();\n\tconst smtpUsernameField = useUniqueId();\n\tconst smtpPasswordField = useUniqueId();\n\tconst smtpSecureField = useUniqueId();\n\n\tconst imapServerField = useUniqueId();\n\tconst imapPortField = useUniqueId();\n\tconst imapUsernameField = useUniqueId();\n\tconst imapPasswordField = useUniqueId();\n\tconst imapRetriesField = useUniqueId();\n\tconst imapSecureField = useUniqueId();\n\n\treturn (\n\t\t<PageScrollableContentWithShadow>\n\t\t\t<Box maxWidth='x600' w='full' alignSelf='center'>\n\t\t\t\t<Accordion>\n\t\t\t\t\t<Accordion.Item defaultExpanded title={t('Inbox_Info')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={activeField}>{t('Active')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='active'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { onChange, value, ref } }): ReactElement => (\n\t\t\t\t\t\t\t\t\t\t\t<ToggleSwitch id={activeField} ref={ref} checked={value} onChange={onChange} />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={nameField} required>\n\t\t\t\t\t\t\t\t\t{t('Name')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Name') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={nameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.name?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.name)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${nameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.name && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${nameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.name?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={emailField} required>\n\t\t\t\t\t\t\t\t\t{t('Email')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\t\t\trequired: t('Required_field', { field: t('Email') }),\n\t\t\t\t\t\t\t\t\t\t\tvalidate: (value) => checkEmailExists(value),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\tid={emailField}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.email?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${emailField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.email && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${emailField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.email?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={descriptionField}>{t('Description')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => <TextAreaInput id={descriptionField} {...field} rows={4} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={senderInfoField}>{t('Sender_Info')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='senderInfo'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => <TextInput id={senderInfoField} {...field} aria-describedby={`${senderInfoField}-hint`} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t<FieldHint id={`${senderInfoField}-hint`}>{t('Will_Appear_In_From')}</FieldHint>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={departmentField}>{t('Department')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='department'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { onChange, onBlur, name, value } }) => (\n\t\t\t\t\t\t\t\t\t\t\t<AutoCompleteDepartment\n\t\t\t\t\t\t\t\t\t\t\t\tid={departmentField}\n\t\t\t\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${departmentField}-hint`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t<FieldHint id={`${departmentField}-hint`}>{t('Only_Members_Selected_Department_Can_View_Channel')}</FieldHint>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Outgoing_Mail_SMTP')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpServerField} required>\n\t\t\t\t\t\t\t\t\t{t('Server')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpServer'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Server') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpServerField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpServer?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpServerField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpServer && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpServerField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpServer?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpPortField} required>\n\t\t\t\t\t\t\t\t\t{t('Port')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpPort'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Port') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpPortField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpPort?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpPortField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpPort && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpPortField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpPort?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpUsernameField} required>\n\t\t\t\t\t\t\t\t\t{t('Username')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpUsername'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Username') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpUsernameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpUsername?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpUsernameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpUsername && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpUsernameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpUsername?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpPasswordField} required>\n\t\t\t\t\t\t\t\t\t{t('Password')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpPassword'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Password') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpPasswordField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpPassword?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpPasswordField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpPassword && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpPasswordField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpPassword?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='smtpSecure'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { value, ...field } }) => <ToggleSwitch id={smtpSecureField} {...field} checked={value} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Incoming_Mail_IMAP')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapServerField} required>\n\t\t\t\t\t\t\t\t\t{t('Server')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapServer'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Server') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapServerField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapServer?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapServerField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapServer && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapServerField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapServer?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapPortField} required>\n\t\t\t\t\t\t\t\t\t{t('Port')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapPort'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Port') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapPortField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapPort?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapPortField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapPort && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapPortField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapPort?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapUsernameField} required>\n\t\t\t\t\t\t\t\t\t{t('Username')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapUsername'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Username') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapUsernameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapUsername?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapUsernameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapUsername && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapUsernameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapUsername?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapPasswordField} required>\n\t\t\t\t\t\t\t\t\t{t('Password')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapPassword'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Password') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapPasswordField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapPassword?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapPasswordField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapPassword && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapPasswordField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapPassword?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapRetriesField} required>\n\t\t\t\t\t\t\t\t\t{t('Max_Retry')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapRetries'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Max_Retry') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapRetriesField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapRetries?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapRetriesField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapRetries && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapRetriesField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapRetries?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='imapSecure'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { value, ...field } }) => <ToggleSwitch id={imapSecureField} {...field} checked={value} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t\t\t\t<Button onClick={handleBack}>{t('Cancel')}</Button>\n\t\t\t\t\t\t\t\t<Button disabled={!isDirty} primary onClick={handleSubmit(handleSave)}>\n\t\t\t\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<Margins blockStart={16}>\n\t\t\t\t\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t\t\t\t\t{inboxData?._id && (\n\t\t\t\t\t\t\t\t\t\t<Button danger onClick={handleDelete}>\n\t\t\t\t\t\t\t\t\t\t\t{t('Delete')}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t</Margins>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t</Field>\n\t\t\t\t</Accordion>\n\t\t\t</Box>\n\t\t</PageScrollableContentWithShadow>\n\t);\n};\n\nexport default EmailInboxForm;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/emailInbox/EmailInboxForm.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/emailInbox/EmailInboxForm.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/emailInbox/EmailInboxForm.tsx","sourceRoot":"","sources":["client/views/admin/emailInbox/EmailInboxForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IEmailInboxPayload } from '@rocket.chat/core-typings';\nimport {\n\tAccordion,\n\tButton,\n\tButtonGroup,\n\tTextInput,\n\tTextAreaInput,\n\tField,\n\tToggleSwitch,\n\tFieldGroup,\n\tBox,\n\tMargins,\n\tNumberInput,\n\tPasswordInput,\n\tFieldLabel,\n\tFieldRow,\n\tFieldError,\n\tFieldHint,\n} from '@rocket.chat/fuselage';\nimport { useMutableCallback, useUniqueId } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useRoute, useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useCallback } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport { validateEmail } from '../../../../lib/emailValidator';\nimport AutoCompleteDepartment from '../../../components/AutoCompleteDepartment';\nimport GenericModal from '../../../components/GenericModal';\nimport { PageScrollableContentWithShadow } from '../../../components/Page';\n\nconst EmailInboxForm = ({ inboxData }: { inboxData?: IEmailInboxPayload }): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst setModal = useSetModal();\n\tconst router = useRoute('admin-email-inboxes');\n\n\tconst handleBack = useCallback(() => router.push({}), [router]);\n\n\tconst saveEmailInbox = useEndpoint('POST', '/v1/email-inbox');\n\tconst deleteInboxAction = useEndpoint('DELETE', '/v1/email-inbox/:_id', { _id: inboxData?._id ?? '' });\n\tconst emailAlreadyExistsAction = useEndpoint('GET', '/v1/email-inbox.search');\n\n\tconst {\n\t\tcontrol,\n\t\thandleSubmit,\n\t\tformState: { errors, isDirty },\n\t} = useForm({\n\t\tdefaultValues: {\n\t\t\tactive: inboxData?.active ?? true,\n\t\t\tname: inboxData?.name,\n\t\t\temail: inboxData?.email,\n\t\t\tdescription: inboxData?.description,\n\t\t\tsenderInfo: inboxData?.senderInfo,\n\t\t\tdepartment: inboxData?.department || '',\n\t\t\t// SMTP\n\t\t\tsmtpServer: inboxData?.smtp.server,\n\t\t\tsmtpPort: inboxData?.smtp.port ?? 587,\n\t\t\tsmtpUsername: inboxData?.smtp.username,\n\t\t\tsmtpPassword: inboxData?.smtp.password,\n\t\t\tsmtpSecure: inboxData?.smtp.secure ?? false,\n\t\t\t// IMAP\n\t\t\timapServer: inboxData?.imap.server,\n\t\t\timapPort: inboxData?.imap.port ?? 993,\n\t\t\timapUsername: inboxData?.imap.username,\n\t\t\timapPassword: inboxData?.imap.password,\n\t\t\timapSecure: inboxData?.imap.secure ?? false,\n\t\t\timapRetries: inboxData?.imap.maxRetries ?? 10,\n\t\t},\n\t\tmode: 'all',\n\t});\n\n\tconst handleDelete = useMutableCallback(() => {\n\t\tconst deleteInbox = async (): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tawait deleteInboxAction();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_removed') });\n\t\t\t\thandleBack();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t} finally {\n\t\t\t\tsetModal(null);\n\t\t\t}\n\t\t};\n\n\t\tsetModal(\n\t\t\t<GenericModal variant='danger' onConfirm={deleteInbox} onCancel={(): void => setModal(null)} confirmText={t('Delete')}>\n\t\t\t\t{t('You_will_not_be_able_to_recover_email_inbox')}\n\t\t\t</GenericModal>,\n\t\t);\n\t});\n\n\tconst handleSave = useMutableCallback(\n\t\tasync ({\n\t\t\tactive,\n\t\t\tname,\n\t\t\temail,\n\t\t\tdescription,\n\t\t\tsenderInfo,\n\t\t\tdepartment,\n\t\t\tsmtpServer,\n\t\t\tsmtpPort,\n\t\t\tsmtpUsername,\n\t\t\tsmtpPassword,\n\t\t\tsmtpSecure,\n\t\t\timapServer,\n\t\t\timapPort,\n\t\t\timapUsername,\n\t\t\timapPassword,\n\t\t\timapSecure,\n\t\t\timapRetries,\n\t\t}) => {\n\t\t\tconst smtp = {\n\t\t\t\tserver: smtpServer,\n\t\t\t\tport: parseInt(smtpPort),\n\t\t\t\tusername: smtpUsername,\n\t\t\t\tpassword: smtpPassword,\n\t\t\t\tsecure: smtpSecure,\n\t\t\t};\n\n\t\t\tconst imap = {\n\t\t\t\tserver: imapServer,\n\t\t\t\tport: parseInt(imapPort),\n\t\t\t\tusername: imapUsername,\n\t\t\t\tpassword: imapPassword,\n\t\t\t\tsecure: imapSecure,\n\t\t\t\tmaxRetries: parseInt(imapRetries),\n\t\t\t};\n\n\t\t\tconst payload = {\n\t\t\t\t...(inboxData?._id && { _id: inboxData?._id }),\n\t\t\t\tactive,\n\t\t\t\tname,\n\t\t\t\temail,\n\t\t\t\tdescription,\n\t\t\t\tsenderInfo,\n\t\t\t\t...(department && { department: typeof department === 'string' ? department : department.value }),\n\t\t\t\tsmtp,\n\t\t\t\timap,\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tawait saveEmailInbox(payload);\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_added') });\n\t\t\t\thandleBack();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t},\n\t);\n\n\tconst checkEmailExists = useMutableCallback(async (email) => {\n\t\tif (!email) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!validateEmail(email)) {\n\t\t\treturn t('error-invalid-email-address');\n\t\t}\n\n\t\tconst { emailInbox } = await emailAlreadyExistsAction({ email });\n\n\t\tif (!emailInbox || (inboxData?._id && emailInbox._id === inboxData?._id)) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn t('Email_already_exists');\n\t});\n\n\tconst activeField = useUniqueId();\n\tconst nameField = useUniqueId();\n\tconst emailField = useUniqueId();\n\tconst descriptionField = useUniqueId();\n\tconst senderInfoField = useUniqueId();\n\tconst departmentField = useUniqueId();\n\n\tconst smtpServerField = useUniqueId();\n\tconst smtpPortField = useUniqueId();\n\tconst smtpUsernameField = useUniqueId();\n\tconst smtpPasswordField = useUniqueId();\n\tconst smtpSecureField = useUniqueId();\n\n\tconst imapServerField = useUniqueId();\n\tconst imapPortField = useUniqueId();\n\tconst imapUsernameField = useUniqueId();\n\tconst imapPasswordField = useUniqueId();\n\tconst imapRetriesField = useUniqueId();\n\tconst imapSecureField = useUniqueId();\n\n\treturn (\n\t\t<PageScrollableContentWithShadow>\n\t\t\t<Box maxWidth='x600' w='full' alignSelf='center'>\n\t\t\t\t<Accordion>\n\t\t\t\t\t<Accordion.Item defaultExpanded title={t('Inbox_Info')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={activeField}>{t('Active')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='active'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { onChange, value, ref } }): ReactElement => (\n\t\t\t\t\t\t\t\t\t\t\t<ToggleSwitch id={activeField} ref={ref} checked={value} onChange={onChange} />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={nameField} required>\n\t\t\t\t\t\t\t\t\t{t('Name')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Name') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={nameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.name?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.name)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${nameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.name && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${nameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.name?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={emailField} required>\n\t\t\t\t\t\t\t\t\t{t('Email')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\t\t\trequired: t('Required_field', { field: t('Email') }),\n\t\t\t\t\t\t\t\t\t\t\tvalidate: (value) => checkEmailExists(value),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\tid={emailField}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.email?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${emailField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.email && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${emailField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.email?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={descriptionField}>{t('Description')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => <TextAreaInput id={descriptionField} {...field} rows={4} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={senderInfoField}>{t('Sender_Info')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='senderInfo'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => <TextInput id={senderInfoField} {...field} aria-describedby={`${senderInfoField}-hint`} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t<FieldHint id={`${senderInfoField}-hint`}>{t('Will_Appear_In_From')}</FieldHint>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={departmentField}>{t('Department')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='department'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { onChange, onBlur, name, value } }) => (\n\t\t\t\t\t\t\t\t\t\t\t<AutoCompleteDepartment\n\t\t\t\t\t\t\t\t\t\t\t\tid={departmentField}\n\t\t\t\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${departmentField}-hint`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t<FieldHint id={`${departmentField}-hint`}>{t('Only_Members_Selected_Department_Can_View_Channel')}</FieldHint>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Outgoing_Mail_SMTP')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpServerField} required>\n\t\t\t\t\t\t\t\t\t{t('Server')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpServer'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Server') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpServerField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpServer?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpServerField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpServer && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpServerField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpServer?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpPortField} required>\n\t\t\t\t\t\t\t\t\t{t('Port')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpPort'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Port') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpPortField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpPort?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpPortField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpPort && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpPortField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpPort?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpUsernameField} required>\n\t\t\t\t\t\t\t\t\t{t('Username')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpUsername'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Username') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpUsernameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpUsername?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpUsernameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpUsername && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpUsernameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpUsername?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpPasswordField} required>\n\t\t\t\t\t\t\t\t\t{t('Password')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpPassword'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Password') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpPasswordField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpPassword?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpPasswordField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpPassword && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpPasswordField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpPassword?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='smtpSecure'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { value, ...field } }) => <ToggleSwitch id={smtpSecureField} {...field} checked={value} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Incoming_Mail_IMAP')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapServerField} required>\n\t\t\t\t\t\t\t\t\t{t('Server')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapServer'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Server') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapServerField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapServer?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapServerField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapServer && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapServerField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapServer?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapPortField} required>\n\t\t\t\t\t\t\t\t\t{t('Port')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapPort'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Port') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapPortField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapPort?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapPortField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapPort && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapPortField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapPort?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapUsernameField} required>\n\t\t\t\t\t\t\t\t\t{t('Username')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapUsername'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Username') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapUsernameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapUsername?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapUsernameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapUsername && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapUsernameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapUsername?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapPasswordField} required>\n\t\t\t\t\t\t\t\t\t{t('Password')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapPassword'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Password') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapPasswordField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapPassword?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapPasswordField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapPassword && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapPasswordField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapPassword?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapRetriesField} required>\n\t\t\t\t\t\t\t\t\t{t('Max_Retry')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapRetries'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Max_Retry') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapRetriesField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapRetries?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapRetriesField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapRetries && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapRetriesField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapRetries?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='imapSecure'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { value, ...field } }) => <ToggleSwitch id={imapSecureField} {...field} checked={value} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t\t\t\t<Button onClick={handleBack}>{t('Cancel')}</Button>\n\t\t\t\t\t\t\t\t<Button disabled={!isDirty} primary onClick={handleSubmit(handleSave)}>\n\t\t\t\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<Margins blockStart={16}>\n\t\t\t\t\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t\t\t\t\t{inboxData?._id && (\n\t\t\t\t\t\t\t\t\t\t<Button danger onClick={handleDelete}>\n\t\t\t\t\t\t\t\t\t\t\t{t('Delete')}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t</Margins>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t</Field>\n\t\t\t\t</Accordion>\n\t\t\t</Box>\n\t\t</PageScrollableContentWithShadow>\n\t);\n};\n\nexport default EmailInboxForm;\n"]}}},"code":"var _excluded = [\"value\"],\n  _excluded2 = [\"value\"];\nvar _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 0);\nvar _extends;\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default: function (v) {\n    _extends = v;\n  }\n}, 1);\nvar _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 2);\nvar _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 3);\nvar Accordion, Button, ButtonGroup, TextInput, TextAreaInput, Field, ToggleSwitch, FieldGroup, Box, Margins, NumberInput, PasswordInput, FieldLabel, FieldRow, FieldError, FieldHint;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Accordion: function (v) {\n    Accordion = v;\n  },\n  Button: function (v) {\n    Button = v;\n  },\n  ButtonGroup: function (v) {\n    ButtonGroup = v;\n  },\n  TextInput: function (v) {\n    TextInput = v;\n  },\n  TextAreaInput: function (v) {\n    TextAreaInput = v;\n  },\n  Field: function (v) {\n    Field = v;\n  },\n  ToggleSwitch: function (v) {\n    ToggleSwitch = v;\n  },\n  FieldGroup: function (v) {\n    FieldGroup = v;\n  },\n  Box: function (v) {\n    Box = v;\n  },\n  Margins: function (v) {\n    Margins = v;\n  },\n  NumberInput: function (v) {\n    NumberInput = v;\n  },\n  PasswordInput: function (v) {\n    PasswordInput = v;\n  },\n  FieldLabel: function (v) {\n    FieldLabel = v;\n  },\n  FieldRow: function (v) {\n    FieldRow = v;\n  },\n  FieldError: function (v) {\n    FieldError = v;\n  },\n  FieldHint: function (v) {\n    FieldHint = v;\n  }\n}, 0);\nvar useMutableCallback, useUniqueId;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback: function (v) {\n    useMutableCallback = v;\n  },\n  useUniqueId: function (v) {\n    useUniqueId = v;\n  }\n}, 1);\nvar useSetModal, useToastMessageDispatch, useRoute, useEndpoint, useTranslation;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useSetModal: function (v) {\n    useSetModal = v;\n  },\n  useToastMessageDispatch: function (v) {\n    useToastMessageDispatch = v;\n  },\n  useRoute: function (v) {\n    useRoute = v;\n  },\n  useEndpoint: function (v) {\n    useEndpoint = v;\n  },\n  useTranslation: function (v) {\n    useTranslation = v;\n  }\n}, 2);\nvar React, useCallback;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  useCallback: function (v) {\n    useCallback = v;\n  }\n}, 3);\nvar useForm, Controller;\nmodule.link(\"react-hook-form\", {\n  useForm: function (v) {\n    useForm = v;\n  },\n  Controller: function (v) {\n    Controller = v;\n  }\n}, 4);\nvar validateEmail;\nmodule.link(\"../../../../lib/emailValidator\", {\n  validateEmail: function (v) {\n    validateEmail = v;\n  }\n}, 5);\nvar AutoCompleteDepartment;\nmodule.link(\"../../../components/AutoCompleteDepartment\", {\n  \"default\": function (v) {\n    AutoCompleteDepartment = v;\n  }\n}, 6);\nvar GenericModal;\nmodule.link(\"../../../components/GenericModal\", {\n  \"default\": function (v) {\n    GenericModal = v;\n  }\n}, 7);\nvar PageScrollableContentWithShadow;\nmodule.link(\"../../../components/Page\", {\n  PageScrollableContentWithShadow: function (v) {\n    PageScrollableContentWithShadow = v;\n  }\n}, 8);\nvar EmailInboxForm = function (_ref) {\n  var _inboxData$_id, _inboxData$active, _inboxData$smtp$port, _inboxData$smtp$secur, _inboxData$imap$port, _inboxData$imap$secur, _inboxData$imap$maxRe, _errors$name2, _errors$email2, _errors$smtpServer2, _errors$smtpPort2, _errors$smtpUsername2, _errors$smtpPassword2, _errors$imapServer2, _errors$imapPort2, _errors$imapUsername2, _errors$imapPassword2, _errors$imapRetries2;\n  var inboxData = _ref.inboxData;\n  var t = useTranslation();\n  var dispatchToastMessage = useToastMessageDispatch();\n  var setModal = useSetModal();\n  var router = useRoute('admin-email-inboxes');\n  var handleBack = useCallback(function () {\n    return router.push({});\n  }, [router]);\n  var saveEmailInbox = useEndpoint('POST', '/v1/email-inbox');\n  var deleteInboxAction = useEndpoint('DELETE', '/v1/email-inbox/:_id', {\n    _id: (_inboxData$_id = inboxData === null || inboxData === void 0 ? void 0 : inboxData._id) !== null && _inboxData$_id !== void 0 ? _inboxData$_id : ''\n  });\n  var emailAlreadyExistsAction = useEndpoint('GET', '/v1/email-inbox.search');\n  var _useForm = useForm({\n      defaultValues: {\n        active: (_inboxData$active = inboxData === null || inboxData === void 0 ? void 0 : inboxData.active) !== null && _inboxData$active !== void 0 ? _inboxData$active : true,\n        name: inboxData === null || inboxData === void 0 ? void 0 : inboxData.name,\n        email: inboxData === null || inboxData === void 0 ? void 0 : inboxData.email,\n        description: inboxData === null || inboxData === void 0 ? void 0 : inboxData.description,\n        senderInfo: inboxData === null || inboxData === void 0 ? void 0 : inboxData.senderInfo,\n        department: (inboxData === null || inboxData === void 0 ? void 0 : inboxData.department) || '',\n        // SMTP\n        smtpServer: inboxData === null || inboxData === void 0 ? void 0 : inboxData.smtp.server,\n        smtpPort: (_inboxData$smtp$port = inboxData === null || inboxData === void 0 ? void 0 : inboxData.smtp.port) !== null && _inboxData$smtp$port !== void 0 ? _inboxData$smtp$port : 587,\n        smtpUsername: inboxData === null || inboxData === void 0 ? void 0 : inboxData.smtp.username,\n        smtpPassword: inboxData === null || inboxData === void 0 ? void 0 : inboxData.smtp.password,\n        smtpSecure: (_inboxData$smtp$secur = inboxData === null || inboxData === void 0 ? void 0 : inboxData.smtp.secure) !== null && _inboxData$smtp$secur !== void 0 ? _inboxData$smtp$secur : false,\n        // IMAP\n        imapServer: inboxData === null || inboxData === void 0 ? void 0 : inboxData.imap.server,\n        imapPort: (_inboxData$imap$port = inboxData === null || inboxData === void 0 ? void 0 : inboxData.imap.port) !== null && _inboxData$imap$port !== void 0 ? _inboxData$imap$port : 993,\n        imapUsername: inboxData === null || inboxData === void 0 ? void 0 : inboxData.imap.username,\n        imapPassword: inboxData === null || inboxData === void 0 ? void 0 : inboxData.imap.password,\n        imapSecure: (_inboxData$imap$secur = inboxData === null || inboxData === void 0 ? void 0 : inboxData.imap.secure) !== null && _inboxData$imap$secur !== void 0 ? _inboxData$imap$secur : false,\n        imapRetries: (_inboxData$imap$maxRe = inboxData === null || inboxData === void 0 ? void 0 : inboxData.imap.maxRetries) !== null && _inboxData$imap$maxRe !== void 0 ? _inboxData$imap$maxRe : 10\n      },\n      mode: 'all'\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    _useForm$formState = _useForm.formState,\n    errors = _useForm$formState.errors,\n    isDirty = _useForm$formState.isDirty;\n  var handleDelete = useMutableCallback(function () {\n    var deleteInbox = function () {\n      function _callee() {\n        return _regeneratorRuntime.async(function () {\n          function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(deleteInboxAction());\n              case 3:\n                dispatchToastMessage({\n                  type: 'success',\n                  message: t('Email_Inbox_has_been_removed')\n                });\n                handleBack();\n                _context.next = 10;\n                break;\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                dispatchToastMessage({\n                  type: 'error',\n                  message: _context.t0\n                });\n              case 10:\n                _context.prev = 10;\n                setModal(null);\n                return _context.finish(10);\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n          return _callee$;\n        }(), null, null, [[0, 7, 10, 13]], Promise);\n      }\n      return _callee;\n    }();\n    setModal( /*#__PURE__*/React.createElement(GenericModal, {\n      variant: \"danger\",\n      onConfirm: deleteInbox,\n      onCancel: function () {\n        return setModal(null);\n      },\n      confirmText: t('Delete')\n    }, t('You_will_not_be_able_to_recover_email_inbox')));\n  });\n  var handleSave = useMutableCallback(function () {\n    function _callee2(_ref2) {\n      var active, name, email, description, senderInfo, department, smtpServer, smtpPort, smtpUsername, smtpPassword, smtpSecure, imapServer, imapPort, imapUsername, imapPassword, imapSecure, imapRetries, smtp, imap, payload;\n      return _regeneratorRuntime.async(function () {\n        function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              active = _ref2.active, name = _ref2.name, email = _ref2.email, description = _ref2.description, senderInfo = _ref2.senderInfo, department = _ref2.department, smtpServer = _ref2.smtpServer, smtpPort = _ref2.smtpPort, smtpUsername = _ref2.smtpUsername, smtpPassword = _ref2.smtpPassword, smtpSecure = _ref2.smtpSecure, imapServer = _ref2.imapServer, imapPort = _ref2.imapPort, imapUsername = _ref2.imapUsername, imapPassword = _ref2.imapPassword, imapSecure = _ref2.imapSecure, imapRetries = _ref2.imapRetries;\n              smtp = {\n                server: smtpServer,\n                port: parseInt(smtpPort),\n                username: smtpUsername,\n                password: smtpPassword,\n                secure: smtpSecure\n              };\n              imap = {\n                server: imapServer,\n                port: parseInt(imapPort),\n                username: imapUsername,\n                password: imapPassword,\n                secure: imapSecure,\n                maxRetries: parseInt(imapRetries)\n              };\n              payload = _objectSpread(_objectSpread(_objectSpread({}, (inboxData === null || inboxData === void 0 ? void 0 : inboxData._id) && {\n                _id: inboxData === null || inboxData === void 0 ? void 0 : inboxData._id\n              }), {}, {\n                active: active,\n                name: name,\n                email: email,\n                description: description,\n                senderInfo: senderInfo\n              }, department && {\n                department: typeof department === 'string' ? department : department.value\n              }), {}, {\n                smtp: smtp,\n                imap: imap\n              });\n              _context2.prev = 4;\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(saveEmailInbox(payload));\n            case 7:\n              dispatchToastMessage({\n                type: 'success',\n                message: t('Email_Inbox_has_been_added')\n              });\n              handleBack();\n              _context2.next = 14;\n              break;\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](4);\n              dispatchToastMessage({\n                type: 'error',\n                message: _context2.t0\n              });\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n        return _callee2$;\n      }(), null, null, [[4, 11]], Promise);\n    }\n    return _callee2;\n  }());\n  var checkEmailExists = useMutableCallback(function () {\n    function _callee3(email) {\n      var _await$emailAlreadyEx, emailInbox;\n      return _regeneratorRuntime.async(function () {\n        function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (email) {\n                _context3.next = 2;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 2:\n              if (validateEmail(email)) {\n                _context3.next = 4;\n                break;\n              }\n              return _context3.abrupt(\"return\", t('error-invalid-email-address'));\n            case 4:\n              _context3.next = 6;\n              return _regeneratorRuntime.awrap(emailAlreadyExistsAction({\n                email: email\n              }));\n            case 6:\n              _await$emailAlreadyEx = _context3.sent;\n              emailInbox = _await$emailAlreadyEx.emailInbox;\n              if (!(!emailInbox || inboxData !== null && inboxData !== void 0 && inboxData._id && emailInbox._id === (inboxData === null || inboxData === void 0 ? void 0 : inboxData._id))) {\n                _context3.next = 10;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 10:\n              return _context3.abrupt(\"return\", t('Email_already_exists'));\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n        return _callee3$;\n      }(), null, null, null, Promise);\n    }\n    return _callee3;\n  }());\n  var activeField = useUniqueId();\n  var nameField = useUniqueId();\n  var emailField = useUniqueId();\n  var descriptionField = useUniqueId();\n  var senderInfoField = useUniqueId();\n  var departmentField = useUniqueId();\n  var smtpServerField = useUniqueId();\n  var smtpPortField = useUniqueId();\n  var smtpUsernameField = useUniqueId();\n  var smtpPasswordField = useUniqueId();\n  var smtpSecureField = useUniqueId();\n  var imapServerField = useUniqueId();\n  var imapPortField = useUniqueId();\n  var imapUsernameField = useUniqueId();\n  var imapPasswordField = useUniqueId();\n  var imapRetriesField = useUniqueId();\n  var imapSecureField = useUniqueId();\n  return /*#__PURE__*/React.createElement(PageScrollableContentWithShadow, null, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"x600\",\n    w: \"full\",\n    alignSelf: \"center\"\n  }, /*#__PURE__*/React.createElement(Accordion, null, /*#__PURE__*/React.createElement(Accordion.Item, {\n    defaultExpanded: true,\n    title: t('Inbox_Info')\n  }, /*#__PURE__*/React.createElement(FieldGroup, null, /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: activeField\n  }, t('Active')), /*#__PURE__*/React.createElement(Controller, {\n    control: control,\n    name: \"active\",\n    render: function (_ref3) {\n      var _ref3$field = _ref3.field,\n        onChange = _ref3$field.onChange,\n        value = _ref3$field.value,\n        ref = _ref3$field.ref;\n      return /*#__PURE__*/React.createElement(ToggleSwitch, {\n        id: activeField,\n        ref: ref,\n        checked: value,\n        onChange: onChange\n      });\n    }\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: nameField,\n    required: true\n  }, t('Name')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"name\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Name')\n      })\n    },\n    render: function (_ref4) {\n      var _errors$name;\n      var field = _ref4.field;\n      return /*#__PURE__*/React.createElement(TextInput, _extends({\n        id: nameField\n      }, field, {\n        error: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message,\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.name),\n        \"aria-describedby\": nameField + \"-error\"\n      }));\n    }\n  })), errors.name && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: nameField + \"-error\"\n  }, (_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: emailField,\n    required: true\n  }, t('Email')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"email\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Email')\n      }),\n      validate: function (value) {\n        return checkEmailExists(value);\n      }\n    },\n    render: function (_ref5) {\n      var _errors$email;\n      var field = _ref5.field;\n      return /*#__PURE__*/React.createElement(TextInput, _extends({}, field, {\n        id: emailField,\n        error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email),\n        \"aria-describedby\": emailField + \"-error\"\n      }));\n    }\n  })), errors.email && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: emailField + \"-error\"\n  }, (_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: descriptionField\n  }, t('Description')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"description\",\n    control: control,\n    render: function (_ref6) {\n      var field = _ref6.field;\n      return /*#__PURE__*/React.createElement(TextAreaInput, _extends({\n        id: descriptionField\n      }, field, {\n        rows: 4\n      }));\n    }\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: senderInfoField\n  }, t('Sender_Info')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"senderInfo\",\n    control: control,\n    render: function (_ref7) {\n      var field = _ref7.field;\n      return /*#__PURE__*/React.createElement(TextInput, _extends({\n        id: senderInfoField\n      }, field, {\n        \"aria-describedby\": senderInfoField + \"-hint\"\n      }));\n    }\n  })), /*#__PURE__*/React.createElement(FieldHint, {\n    id: senderInfoField + \"-hint\"\n  }, t('Will_Appear_In_From'))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: departmentField\n  }, t('Department')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    control: control,\n    name: \"department\",\n    render: function (_ref8) {\n      var _ref8$field = _ref8.field,\n        onChange = _ref8$field.onChange,\n        onBlur = _ref8$field.onBlur,\n        name = _ref8$field.name,\n        value = _ref8$field.value;\n      return /*#__PURE__*/React.createElement(AutoCompleteDepartment, {\n        id: departmentField,\n        name: name,\n        onBlur: onBlur,\n        value: value,\n        onChange: onChange,\n        \"aria-describedby\": departmentField + \"-hint\"\n      });\n    }\n  })), /*#__PURE__*/React.createElement(FieldHint, {\n    id: departmentField + \"-hint\"\n  }, t('Only_Members_Selected_Department_Can_View_Channel'))))), /*#__PURE__*/React.createElement(Accordion.Item, {\n    defaultExpanded: !(inboxData !== null && inboxData !== void 0 && inboxData._id),\n    title: t('Configure_Outgoing_Mail_SMTP')\n  }, /*#__PURE__*/React.createElement(FieldGroup, null, /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: smtpServerField,\n    required: true\n  }, t('Server')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"smtpServer\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Server')\n      })\n    },\n    render: function (_ref9) {\n      var _errors$smtpServer;\n      var field = _ref9.field;\n      return /*#__PURE__*/React.createElement(TextInput, _extends({\n        id: smtpServerField\n      }, field, {\n        error: (_errors$smtpServer = errors.smtpServer) === null || _errors$smtpServer === void 0 ? void 0 : _errors$smtpServer.message,\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email),\n        \"aria-describedby\": smtpServerField + \"-error\"\n      }));\n    }\n  })), errors.smtpServer && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: smtpServerField + \"-error\"\n  }, (_errors$smtpServer2 = errors.smtpServer) === null || _errors$smtpServer2 === void 0 ? void 0 : _errors$smtpServer2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: smtpPortField,\n    required: true\n  }, t('Port')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"smtpPort\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Port')\n      })\n    },\n    render: function (_ref10) {\n      var _errors$smtpPort;\n      var field = _ref10.field;\n      return /*#__PURE__*/React.createElement(NumberInput, _extends({\n        id: smtpPortField\n      }, field, {\n        error: (_errors$smtpPort = errors.smtpPort) === null || _errors$smtpPort === void 0 ? void 0 : _errors$smtpPort.message,\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email),\n        \"aria-describedby\": smtpPortField + \"-error\"\n      }));\n    }\n  })), errors.smtpPort && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: smtpPortField + \"-error\"\n  }, (_errors$smtpPort2 = errors.smtpPort) === null || _errors$smtpPort2 === void 0 ? void 0 : _errors$smtpPort2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: smtpUsernameField,\n    required: true\n  }, t('Username')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"smtpUsername\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Username')\n      })\n    },\n    render: function (_ref11) {\n      var _errors$smtpUsername;\n      var field = _ref11.field;\n      return /*#__PURE__*/React.createElement(TextInput, _extends({\n        id: smtpUsernameField\n      }, field, {\n        error: (_errors$smtpUsername = errors.smtpUsername) === null || _errors$smtpUsername === void 0 ? void 0 : _errors$smtpUsername.message,\n        \"aria-describedby\": smtpUsernameField + \"-error\",\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email)\n      }));\n    }\n  })), errors.smtpUsername && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: smtpUsernameField + \"-error\"\n  }, (_errors$smtpUsername2 = errors.smtpUsername) === null || _errors$smtpUsername2 === void 0 ? void 0 : _errors$smtpUsername2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: smtpPasswordField,\n    required: true\n  }, t('Password')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"smtpPassword\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Password')\n      })\n    },\n    render: function (_ref12) {\n      var _errors$smtpPassword;\n      var field = _ref12.field;\n      return /*#__PURE__*/React.createElement(PasswordInput, _extends({\n        id: smtpPasswordField\n      }, field, {\n        error: (_errors$smtpPassword = errors.smtpPassword) === null || _errors$smtpPassword === void 0 ? void 0 : _errors$smtpPassword.message,\n        \"aria-describedby\": smtpPasswordField + \"-error\",\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email)\n      }));\n    }\n  })), errors.smtpPassword && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: smtpPasswordField + \"-error\"\n  }, (_errors$smtpPassword2 = errors.smtpPassword) === null || _errors$smtpPassword2 === void 0 ? void 0 : _errors$smtpPassword2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: smtpSecureField\n  }, t('Connect_SSL_TLS')), /*#__PURE__*/React.createElement(Controller, {\n    control: control,\n    name: \"smtpSecure\",\n    render: function (_ref13) {\n      var _ref13$field = _ref13.field,\n        value = _ref13$field.value,\n        field = _objectWithoutProperties(_ref13$field, _excluded);\n      return /*#__PURE__*/React.createElement(ToggleSwitch, _extends({\n        id: smtpSecureField\n      }, field, {\n        checked: value\n      }));\n    }\n  }))))), /*#__PURE__*/React.createElement(Accordion.Item, {\n    defaultExpanded: !(inboxData !== null && inboxData !== void 0 && inboxData._id),\n    title: t('Configure_Incoming_Mail_IMAP')\n  }, /*#__PURE__*/React.createElement(FieldGroup, null, /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: imapServerField,\n    required: true\n  }, t('Server')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"imapServer\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Server')\n      })\n    },\n    render: function (_ref14) {\n      var _errors$imapServer;\n      var field = _ref14.field;\n      return /*#__PURE__*/React.createElement(TextInput, _extends({\n        id: imapServerField\n      }, field, {\n        error: (_errors$imapServer = errors.imapServer) === null || _errors$imapServer === void 0 ? void 0 : _errors$imapServer.message,\n        \"aria-describedby\": imapServerField + \"-error\",\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email)\n      }));\n    }\n  })), errors.imapServer && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: imapServerField + \"-error\"\n  }, (_errors$imapServer2 = errors.imapServer) === null || _errors$imapServer2 === void 0 ? void 0 : _errors$imapServer2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: imapPortField,\n    required: true\n  }, t('Port')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"imapPort\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Port')\n      })\n    },\n    render: function (_ref15) {\n      var _errors$imapPort;\n      var field = _ref15.field;\n      return /*#__PURE__*/React.createElement(NumberInput, _extends({\n        id: imapPortField\n      }, field, {\n        error: (_errors$imapPort = errors.imapPort) === null || _errors$imapPort === void 0 ? void 0 : _errors$imapPort.message,\n        \"aria-describedby\": imapPortField + \"-error\",\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email)\n      }));\n    }\n  })), errors.imapPort && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: imapPortField + \"-error\"\n  }, (_errors$imapPort2 = errors.imapPort) === null || _errors$imapPort2 === void 0 ? void 0 : _errors$imapPort2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: imapUsernameField,\n    required: true\n  }, t('Username')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"imapUsername\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Username')\n      })\n    },\n    render: function (_ref16) {\n      var _errors$imapUsername;\n      var field = _ref16.field;\n      return /*#__PURE__*/React.createElement(TextInput, _extends({\n        id: imapUsernameField\n      }, field, {\n        error: (_errors$imapUsername = errors.imapUsername) === null || _errors$imapUsername === void 0 ? void 0 : _errors$imapUsername.message,\n        \"aria-describedby\": imapUsernameField + \"-error\",\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email)\n      }));\n    }\n  })), errors.imapUsername && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: imapUsernameField + \"-error\"\n  }, (_errors$imapUsername2 = errors.imapUsername) === null || _errors$imapUsername2 === void 0 ? void 0 : _errors$imapUsername2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: imapPasswordField,\n    required: true\n  }, t('Password')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"imapPassword\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Password')\n      })\n    },\n    render: function (_ref17) {\n      var _errors$imapPassword;\n      var field = _ref17.field;\n      return /*#__PURE__*/React.createElement(PasswordInput, _extends({\n        id: imapPasswordField\n      }, field, {\n        error: (_errors$imapPassword = errors.imapPassword) === null || _errors$imapPassword === void 0 ? void 0 : _errors$imapPassword.message,\n        \"aria-describedby\": imapPasswordField + \"-error\",\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email)\n      }));\n    }\n  })), errors.imapPassword && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: imapPasswordField + \"-error\"\n  }, (_errors$imapPassword2 = errors.imapPassword) === null || _errors$imapPassword2 === void 0 ? void 0 : _errors$imapPassword2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: imapRetriesField,\n    required: true\n  }, t('Max_Retry')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"imapRetries\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Max_Retry')\n      })\n    },\n    render: function (_ref18) {\n      var _errors$imapRetries;\n      var field = _ref18.field;\n      return /*#__PURE__*/React.createElement(NumberInput, _extends({\n        id: imapRetriesField\n      }, field, {\n        error: (_errors$imapRetries = errors.imapRetries) === null || _errors$imapRetries === void 0 ? void 0 : _errors$imapRetries.message,\n        \"aria-describedby\": imapRetriesField + \"-error\",\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email)\n      }));\n    }\n  })), errors.imapRetries && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: imapRetriesField + \"-error\"\n  }, (_errors$imapRetries2 = errors.imapRetries) === null || _errors$imapRetries2 === void 0 ? void 0 : _errors$imapRetries2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: imapSecureField\n  }, t('Connect_SSL_TLS')), /*#__PURE__*/React.createElement(Controller, {\n    control: control,\n    name: \"imapSecure\",\n    render: function (_ref19) {\n      var _ref19$field = _ref19.field,\n        value = _ref19$field.value,\n        field = _objectWithoutProperties(_ref19$field, _excluded2);\n      return /*#__PURE__*/React.createElement(ToggleSwitch, _extends({\n        id: imapSecureField\n      }, field, {\n        checked: value\n      }));\n    }\n  }))))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(ButtonGroup, {\n    stretch: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBack\n  }, t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    disabled: !isDirty,\n    primary: true,\n    onClick: handleSubmit(handleSave)\n  }, t('Save')))), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Margins, {\n    blockStart: 16\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    stretch: true\n  }, (inboxData === null || inboxData === void 0 ? void 0 : inboxData._id) && /*#__PURE__*/React.createElement(Button, {\n    danger: true,\n    onClick: handleDelete\n  }, t('Delete')))))))));\n};\nmodule.exportDefault(EmailInboxForm);","map":{"version":3,"names":["_objectWithoutProperties","module","link","default","v","_extends","_objectSpread","_regeneratorRuntime","Accordion","Button","ButtonGroup","TextInput","TextAreaInput","Field","ToggleSwitch","FieldGroup","Box","Margins","NumberInput","PasswordInput","FieldLabel","FieldRow","FieldError","FieldHint","useMutableCallback","useUniqueId","useSetModal","useToastMessageDispatch","useRoute","useEndpoint","useTranslation","React","useCallback","useForm","Controller","validateEmail","AutoCompleteDepartment","GenericModal","PageScrollableContentWithShadow","EmailInboxForm","_ref","_inboxData$_id","_inboxData$active","_inboxData$smtp$port","_inboxData$smtp$secur","_inboxData$imap$port","_inboxData$imap$secur","_inboxData$imap$maxRe","_errors$name2","_errors$email2","_errors$smtpServer2","_errors$smtpPort2","_errors$smtpUsername2","_errors$smtpPassword2","_errors$imapServer2","_errors$imapPort2","_errors$imapUsername2","_errors$imapPassword2","_errors$imapRetries2","inboxData","t","dispatchToastMessage","setModal","router","handleBack","push","saveEmailInbox","deleteInboxAction","_id","emailAlreadyExistsAction","_useForm","defaultValues","active","name","email","description","senderInfo","department","smtpServer","smtp","server","smtpPort","port","smtpUsername","username","smtpPassword","password","smtpSecure","secure","imapServer","imap","imapPort","imapUsername","imapPassword","imapSecure","imapRetries","maxRetries","mode","control","handleSubmit","_useForm$formState","formState","errors","isDirty","handleDelete","deleteInbox","_callee","async","_callee$","_context","prev","next","awrap","type","message","t0","finish","stop","Promise","createElement","variant","onConfirm","onCancel","confirmText","handleSave","_callee2","_ref2","payload","_callee2$","_context2","parseInt","value","checkEmailExists","_callee3","_await$emailAlreadyEx","emailInbox","_callee3$","_context3","abrupt","sent","activeField","nameField","emailField","descriptionField","senderInfoField","departmentField","smtpServerField","smtpPortField","smtpUsernameField","smtpPasswordField","smtpSecureField","imapServerField","imapPortField","imapUsernameField","imapPasswordField","imapRetriesField","imapSecureField","maxWidth","w","alignSelf","Item","defaultExpanded","title","htmlFor","render","_ref3","_ref3$field","field","onChange","ref","id","checked","required","rules","_ref4","_errors$name","error","Boolean","validate","_ref5","_errors$email","_ref6","rows","_ref7","_ref8","_ref8$field","onBlur","_ref9","_errors$smtpServer","_ref10","_errors$smtpPort","_ref11","_errors$smtpUsername","_ref12","_errors$smtpPassword","_ref13","_ref13$field","_excluded","_ref14","_errors$imapServer","_ref15","_errors$imapPort","_ref16","_errors$imapUsername","_ref17","_errors$imapPassword","_ref18","_errors$imapRetries","_ref19","_ref19$field","_excluded2","stretch","onClick","disabled","primary","blockStart","danger","exportDefault"],"sources":["client/views/admin/emailInbox/EmailInboxForm.tsx"],"sourcesContent":["import type { IEmailInboxPayload } from '@rocket.chat/core-typings';\nimport {\n\tAccordion,\n\tButton,\n\tButtonGroup,\n\tTextInput,\n\tTextAreaInput,\n\tField,\n\tToggleSwitch,\n\tFieldGroup,\n\tBox,\n\tMargins,\n\tNumberInput,\n\tPasswordInput,\n\tFieldLabel,\n\tFieldRow,\n\tFieldError,\n\tFieldHint,\n} from '@rocket.chat/fuselage';\nimport { useMutableCallback, useUniqueId } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useRoute, useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useCallback } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport { validateEmail } from '../../../../lib/emailValidator';\nimport AutoCompleteDepartment from '../../../components/AutoCompleteDepartment';\nimport GenericModal from '../../../components/GenericModal';\nimport { PageScrollableContentWithShadow } from '../../../components/Page';\n\nconst EmailInboxForm = ({ inboxData }: { inboxData?: IEmailInboxPayload }): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst setModal = useSetModal();\n\tconst router = useRoute('admin-email-inboxes');\n\n\tconst handleBack = useCallback(() => router.push({}), [router]);\n\n\tconst saveEmailInbox = useEndpoint('POST', '/v1/email-inbox');\n\tconst deleteInboxAction = useEndpoint('DELETE', '/v1/email-inbox/:_id', { _id: inboxData?._id ?? '' });\n\tconst emailAlreadyExistsAction = useEndpoint('GET', '/v1/email-inbox.search');\n\n\tconst {\n\t\tcontrol,\n\t\thandleSubmit,\n\t\tformState: { errors, isDirty },\n\t} = useForm({\n\t\tdefaultValues: {\n\t\t\tactive: inboxData?.active ?? true,\n\t\t\tname: inboxData?.name,\n\t\t\temail: inboxData?.email,\n\t\t\tdescription: inboxData?.description,\n\t\t\tsenderInfo: inboxData?.senderInfo,\n\t\t\tdepartment: inboxData?.department || '',\n\t\t\t// SMTP\n\t\t\tsmtpServer: inboxData?.smtp.server,\n\t\t\tsmtpPort: inboxData?.smtp.port ?? 587,\n\t\t\tsmtpUsername: inboxData?.smtp.username,\n\t\t\tsmtpPassword: inboxData?.smtp.password,\n\t\t\tsmtpSecure: inboxData?.smtp.secure ?? false,\n\t\t\t// IMAP\n\t\t\timapServer: inboxData?.imap.server,\n\t\t\timapPort: inboxData?.imap.port ?? 993,\n\t\t\timapUsername: inboxData?.imap.username,\n\t\t\timapPassword: inboxData?.imap.password,\n\t\t\timapSecure: inboxData?.imap.secure ?? false,\n\t\t\timapRetries: inboxData?.imap.maxRetries ?? 10,\n\t\t},\n\t\tmode: 'all',\n\t});\n\n\tconst handleDelete = useMutableCallback(() => {\n\t\tconst deleteInbox = async (): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tawait deleteInboxAction();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_removed') });\n\t\t\t\thandleBack();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t} finally {\n\t\t\t\tsetModal(null);\n\t\t\t}\n\t\t};\n\n\t\tsetModal(\n\t\t\t<GenericModal variant='danger' onConfirm={deleteInbox} onCancel={(): void => setModal(null)} confirmText={t('Delete')}>\n\t\t\t\t{t('You_will_not_be_able_to_recover_email_inbox')}\n\t\t\t</GenericModal>,\n\t\t);\n\t});\n\n\tconst handleSave = useMutableCallback(\n\t\tasync ({\n\t\t\tactive,\n\t\t\tname,\n\t\t\temail,\n\t\t\tdescription,\n\t\t\tsenderInfo,\n\t\t\tdepartment,\n\t\t\tsmtpServer,\n\t\t\tsmtpPort,\n\t\t\tsmtpUsername,\n\t\t\tsmtpPassword,\n\t\t\tsmtpSecure,\n\t\t\timapServer,\n\t\t\timapPort,\n\t\t\timapUsername,\n\t\t\timapPassword,\n\t\t\timapSecure,\n\t\t\timapRetries,\n\t\t}) => {\n\t\t\tconst smtp = {\n\t\t\t\tserver: smtpServer,\n\t\t\t\tport: parseInt(smtpPort),\n\t\t\t\tusername: smtpUsername,\n\t\t\t\tpassword: smtpPassword,\n\t\t\t\tsecure: smtpSecure,\n\t\t\t};\n\n\t\t\tconst imap = {\n\t\t\t\tserver: imapServer,\n\t\t\t\tport: parseInt(imapPort),\n\t\t\t\tusername: imapUsername,\n\t\t\t\tpassword: imapPassword,\n\t\t\t\tsecure: imapSecure,\n\t\t\t\tmaxRetries: parseInt(imapRetries),\n\t\t\t};\n\n\t\t\tconst payload = {\n\t\t\t\t...(inboxData?._id && { _id: inboxData?._id }),\n\t\t\t\tactive,\n\t\t\t\tname,\n\t\t\t\temail,\n\t\t\t\tdescription,\n\t\t\t\tsenderInfo,\n\t\t\t\t...(department && { department: typeof department === 'string' ? department : department.value }),\n\t\t\t\tsmtp,\n\t\t\t\timap,\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tawait saveEmailInbox(payload);\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_added') });\n\t\t\t\thandleBack();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t},\n\t);\n\n\tconst checkEmailExists = useMutableCallback(async (email) => {\n\t\tif (!email) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!validateEmail(email)) {\n\t\t\treturn t('error-invalid-email-address');\n\t\t}\n\n\t\tconst { emailInbox } = await emailAlreadyExistsAction({ email });\n\n\t\tif (!emailInbox || (inboxData?._id && emailInbox._id === inboxData?._id)) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn t('Email_already_exists');\n\t});\n\n\tconst activeField = useUniqueId();\n\tconst nameField = useUniqueId();\n\tconst emailField = useUniqueId();\n\tconst descriptionField = useUniqueId();\n\tconst senderInfoField = useUniqueId();\n\tconst departmentField = useUniqueId();\n\n\tconst smtpServerField = useUniqueId();\n\tconst smtpPortField = useUniqueId();\n\tconst smtpUsernameField = useUniqueId();\n\tconst smtpPasswordField = useUniqueId();\n\tconst smtpSecureField = useUniqueId();\n\n\tconst imapServerField = useUniqueId();\n\tconst imapPortField = useUniqueId();\n\tconst imapUsernameField = useUniqueId();\n\tconst imapPasswordField = useUniqueId();\n\tconst imapRetriesField = useUniqueId();\n\tconst imapSecureField = useUniqueId();\n\n\treturn (\n\t\t<PageScrollableContentWithShadow>\n\t\t\t<Box maxWidth='x600' w='full' alignSelf='center'>\n\t\t\t\t<Accordion>\n\t\t\t\t\t<Accordion.Item defaultExpanded title={t('Inbox_Info')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={activeField}>{t('Active')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='active'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { onChange, value, ref } }): ReactElement => (\n\t\t\t\t\t\t\t\t\t\t\t<ToggleSwitch id={activeField} ref={ref} checked={value} onChange={onChange} />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={nameField} required>\n\t\t\t\t\t\t\t\t\t{t('Name')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Name') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={nameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.name?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.name)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${nameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.name && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${nameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.name?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={emailField} required>\n\t\t\t\t\t\t\t\t\t{t('Email')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\t\t\trequired: t('Required_field', { field: t('Email') }),\n\t\t\t\t\t\t\t\t\t\t\tvalidate: (value) => checkEmailExists(value),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\tid={emailField}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.email?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${emailField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.email && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${emailField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.email?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={descriptionField}>{t('Description')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => <TextAreaInput id={descriptionField} {...field} rows={4} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={senderInfoField}>{t('Sender_Info')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='senderInfo'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => <TextInput id={senderInfoField} {...field} aria-describedby={`${senderInfoField}-hint`} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t<FieldHint id={`${senderInfoField}-hint`}>{t('Will_Appear_In_From')}</FieldHint>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={departmentField}>{t('Department')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='department'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { onChange, onBlur, name, value } }) => (\n\t\t\t\t\t\t\t\t\t\t\t<AutoCompleteDepartment\n\t\t\t\t\t\t\t\t\t\t\t\tid={departmentField}\n\t\t\t\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${departmentField}-hint`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t<FieldHint id={`${departmentField}-hint`}>{t('Only_Members_Selected_Department_Can_View_Channel')}</FieldHint>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Outgoing_Mail_SMTP')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpServerField} required>\n\t\t\t\t\t\t\t\t\t{t('Server')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpServer'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Server') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpServerField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpServer?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpServerField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpServer && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpServerField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpServer?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpPortField} required>\n\t\t\t\t\t\t\t\t\t{t('Port')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpPort'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Port') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpPortField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpPort?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpPortField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpPort && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpPortField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpPort?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpUsernameField} required>\n\t\t\t\t\t\t\t\t\t{t('Username')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpUsername'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Username') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpUsernameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpUsername?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpUsernameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpUsername && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpUsernameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpUsername?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpPasswordField} required>\n\t\t\t\t\t\t\t\t\t{t('Password')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpPassword'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Password') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpPasswordField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpPassword?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpPasswordField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpPassword && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpPasswordField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpPassword?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='smtpSecure'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { value, ...field } }) => <ToggleSwitch id={smtpSecureField} {...field} checked={value} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Incoming_Mail_IMAP')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapServerField} required>\n\t\t\t\t\t\t\t\t\t{t('Server')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapServer'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Server') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapServerField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapServer?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapServerField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapServer && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapServerField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapServer?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapPortField} required>\n\t\t\t\t\t\t\t\t\t{t('Port')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapPort'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Port') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapPortField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapPort?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapPortField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapPort && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapPortField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapPort?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapUsernameField} required>\n\t\t\t\t\t\t\t\t\t{t('Username')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapUsername'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Username') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapUsernameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapUsername?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapUsernameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapUsername && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapUsernameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapUsername?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapPasswordField} required>\n\t\t\t\t\t\t\t\t\t{t('Password')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapPassword'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Password') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapPasswordField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapPassword?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapPasswordField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapPassword && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapPasswordField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapPassword?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapRetriesField} required>\n\t\t\t\t\t\t\t\t\t{t('Max_Retry')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapRetries'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Max_Retry') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapRetriesField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapRetries?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapRetriesField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapRetries && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapRetriesField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapRetries?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='imapSecure'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { value, ...field } }) => <ToggleSwitch id={imapSecureField} {...field} checked={value} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t\t\t\t<Button onClick={handleBack}>{t('Cancel')}</Button>\n\t\t\t\t\t\t\t\t<Button disabled={!isDirty} primary onClick={handleSubmit(handleSave)}>\n\t\t\t\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<Margins blockStart={16}>\n\t\t\t\t\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t\t\t\t\t{inboxData?._id && (\n\t\t\t\t\t\t\t\t\t\t<Button danger onClick={handleDelete}>\n\t\t\t\t\t\t\t\t\t\t\t{t('Delete')}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t</Margins>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t</Field>\n\t\t\t\t</Accordion>\n\t\t\t</Box>\n\t\t</PageScrollableContentWithShadow>\n\t);\n};\n\nexport default EmailInboxForm;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"372e6763b0399aa8550313b0cb0fcf47b73a211b"}
