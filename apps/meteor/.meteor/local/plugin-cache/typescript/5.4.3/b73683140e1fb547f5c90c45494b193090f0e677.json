{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/authorization/canAccessRoom.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/authorization/canAccessRoom.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/authorization/canAccessRoom.ts","inputSourceMap":{"version":3,"file":"server/services/authorization/canAccessRoom.ts","sourceRoot":"","sources":["server/services/authorization/canAccessRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import { Authorization } from '@rocket.chat/core-services';\nimport type { RoomAccessValidator } from '@rocket.chat/core-services';\nimport { TEAM_TYPE } from '@rocket.chat/core-typings';\nimport type { IUser, ITeam } from '@rocket.chat/core-typings';\nimport { Subscriptions, Rooms, Settings, TeamMember, Team } from '@rocket.chat/models';\n\nimport { canAccessRoomLivechat } from './canAccessRoomLivechat';\nimport { canAccessRoomVoip } from './canAccessRoomVoip';\n\nasync function canAccessPublicRoom(user?: Partial<IUser>): Promise<boolean> {\n\tif (!user?._id) {\n\t\t// TODO: it was using cached version from /app/settings/server/raw.js\n\t\tconst anon = await Settings.getValueById('Accounts_AllowAnonymousRead');\n\t\treturn !!anon;\n\t}\n\n\treturn Authorization.hasPermission(user._id, 'view-c-room');\n}\n\nconst roomAccessValidators: RoomAccessValidator[] = [\n\tasync function _validateAccessToPublicRoomsInTeams(room, user): Promise<boolean> {\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!room._id || !room.teamId || room.t !== 'c') {\n\t\t\t// if the room doesn't belongs to a team || is not a public channel - skip\n\t\t\treturn false;\n\t\t}\n\n\t\t// if team is public, access is allowed if the user can access public rooms\n\t\tconst team = await Team.findOneById<Pick<ITeam, 'type'>>(room.teamId, {\n\t\t\tprojection: { type: 1 },\n\t\t});\n\t\tif (team?.type === TEAM_TYPE.PUBLIC) {\n\t\t\treturn canAccessPublicRoom(user);\n\t\t}\n\n\t\t// otherwise access is allowed only to members of the team\n\t\tconst membership =\n\t\t\tuser?._id &&\n\t\t\t(await TeamMember.findOneByUserIdAndTeamId(user._id, room.teamId, {\n\t\t\t\tprojection: { _id: 1 },\n\t\t\t}));\n\t\treturn !!membership;\n\t},\n\n\tasync function _validateAccessToPublicRooms(room, user): Promise<boolean> {\n\t\tif (!room?._id || room.t !== 'c' || room?.teamId) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn canAccessPublicRoom(user);\n\t},\n\n\tasync function _validateIfAlreadyJoined(room, user): Promise<boolean> {\n\t\tif (!room?._id || !user?._id) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!(await Subscriptions.countByRoomIdAndUserId(room._id, user._id))) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (await Authorization.hasPermission(user._id, 'view-joined-room')) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn Authorization.hasPermission(user._id, `view-${room.t}-room`);\n\t},\n\n\tasync function _validateAccessToDiscussionsParentRoom(room, user): Promise<boolean> {\n\t\tif (!room?.prid) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst parentRoom = await Rooms.findOneById(room.prid);\n\t\tif (!parentRoom) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Authorization.canAccessRoom(parentRoom, user);\n\t},\n\n\tcanAccessRoomLivechat,\n\tcanAccessRoomVoip,\n];\n\nexport const canAccessRoom: RoomAccessValidator = async (room, user, extraData): Promise<boolean> => {\n\t// TODO livechat can send both as null, so they we need to validate nevertheless\n\t// if (!room || !user) {\n\t// \treturn false;\n\t// }\n\n\tfor await (const roomAccessValidator of roomAccessValidators) {\n\t\tif (await roomAccessValidator(room, user, extraData)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/authorization/canAccessRoom.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/authorization/canAccessRoom.ts","inputSourceMap":{"version":3,"file":"server/services/authorization/canAccessRoom.ts","sourceRoot":"","sources":["server/services/authorization/canAccessRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import { Authorization } from '@rocket.chat/core-services';\nimport type { RoomAccessValidator } from '@rocket.chat/core-services';\nimport { TEAM_TYPE } from '@rocket.chat/core-typings';\nimport type { IUser, ITeam } from '@rocket.chat/core-typings';\nimport { Subscriptions, Rooms, Settings, TeamMember, Team } from '@rocket.chat/models';\n\nimport { canAccessRoomLivechat } from './canAccessRoomLivechat';\nimport { canAccessRoomVoip } from './canAccessRoomVoip';\n\nasync function canAccessPublicRoom(user?: Partial<IUser>): Promise<boolean> {\n\tif (!user?._id) {\n\t\t// TODO: it was using cached version from /app/settings/server/raw.js\n\t\tconst anon = await Settings.getValueById('Accounts_AllowAnonymousRead');\n\t\treturn !!anon;\n\t}\n\n\treturn Authorization.hasPermission(user._id, 'view-c-room');\n}\n\nconst roomAccessValidators: RoomAccessValidator[] = [\n\tasync function _validateAccessToPublicRoomsInTeams(room, user): Promise<boolean> {\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!room._id || !room.teamId || room.t !== 'c') {\n\t\t\t// if the room doesn't belongs to a team || is not a public channel - skip\n\t\t\treturn false;\n\t\t}\n\n\t\t// if team is public, access is allowed if the user can access public rooms\n\t\tconst team = await Team.findOneById<Pick<ITeam, 'type'>>(room.teamId, {\n\t\t\tprojection: { type: 1 },\n\t\t});\n\t\tif (team?.type === TEAM_TYPE.PUBLIC) {\n\t\t\treturn canAccessPublicRoom(user);\n\t\t}\n\n\t\t// otherwise access is allowed only to members of the team\n\t\tconst membership =\n\t\t\tuser?._id &&\n\t\t\t(await TeamMember.findOneByUserIdAndTeamId(user._id, room.teamId, {\n\t\t\t\tprojection: { _id: 1 },\n\t\t\t}));\n\t\treturn !!membership;\n\t},\n\n\tasync function _validateAccessToPublicRooms(room, user): Promise<boolean> {\n\t\tif (!room?._id || room.t !== 'c' || room?.teamId) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn canAccessPublicRoom(user);\n\t},\n\n\tasync function _validateIfAlreadyJoined(room, user): Promise<boolean> {\n\t\tif (!room?._id || !user?._id) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!(await Subscriptions.countByRoomIdAndUserId(room._id, user._id))) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (await Authorization.hasPermission(user._id, 'view-joined-room')) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn Authorization.hasPermission(user._id, `view-${room.t}-room`);\n\t},\n\n\tasync function _validateAccessToDiscussionsParentRoom(room, user): Promise<boolean> {\n\t\tif (!room?.prid) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst parentRoom = await Rooms.findOneById(room.prid);\n\t\tif (!parentRoom) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Authorization.canAccessRoom(parentRoom, user);\n\t},\n\n\tcanAccessRoomLivechat,\n\tcanAccessRoomVoip,\n];\n\nexport const canAccessRoom: RoomAccessValidator = async (room, user, extraData): Promise<boolean> => {\n\t// TODO livechat can send both as null, so they we need to validate nevertheless\n\t// if (!room || !user) {\n\t// \treturn false;\n\t// }\n\n\tfor await (const roomAccessValidator of roomAccessValidators) {\n\t\tif (await roomAccessValidator(room, user, extraData)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      canAccessRoom: () => canAccessRoom\n    });\n    let Authorization;\n    module.link(\"@rocket.chat/core-services\", {\n      Authorization(v) {\n        Authorization = v;\n      }\n    }, 0);\n    let TEAM_TYPE;\n    module.link(\"@rocket.chat/core-typings\", {\n      TEAM_TYPE(v) {\n        TEAM_TYPE = v;\n      }\n    }, 1);\n    let Subscriptions, Rooms, Settings, TeamMember, Team;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      },\n      Settings(v) {\n        Settings = v;\n      },\n      TeamMember(v) {\n        TeamMember = v;\n      },\n      Team(v) {\n        Team = v;\n      }\n    }, 2);\n    let canAccessRoomLivechat;\n    module.link(\"./canAccessRoomLivechat\", {\n      canAccessRoomLivechat(v) {\n        canAccessRoomLivechat = v;\n      }\n    }, 3);\n    let canAccessRoomVoip;\n    module.link(\"./canAccessRoomVoip\", {\n      canAccessRoomVoip(v) {\n        canAccessRoomVoip = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function canAccessPublicRoom(user) {\n      if (!(user !== null && user !== void 0 && user._id)) {\n        // TODO: it was using cached version from /app/settings/server/raw.js\n        const anon = await Settings.getValueById('Accounts_AllowAnonymousRead');\n        return !!anon;\n      }\n      return Authorization.hasPermission(user._id, 'view-c-room');\n    }\n    const roomAccessValidators = [async function _validateAccessToPublicRoomsInTeams(room, user) {\n      if (!room) {\n        return false;\n      }\n      if (!room._id || !room.teamId || room.t !== 'c') {\n        // if the room doesn't belongs to a team || is not a public channel - skip\n        return false;\n      }\n      // if team is public, access is allowed if the user can access public rooms\n      const team = await Team.findOneById(room.teamId, {\n        projection: {\n          type: 1\n        }\n      });\n      if ((team === null || team === void 0 ? void 0 : team.type) === TEAM_TYPE.PUBLIC) {\n        return canAccessPublicRoom(user);\n      }\n      // otherwise access is allowed only to members of the team\n      const membership = (user === null || user === void 0 ? void 0 : user._id) && (await TeamMember.findOneByUserIdAndTeamId(user._id, room.teamId, {\n        projection: {\n          _id: 1\n        }\n      }));\n      return !!membership;\n    }, async function _validateAccessToPublicRooms(room, user) {\n      if (!(room !== null && room !== void 0 && room._id) || room.t !== 'c' || room !== null && room !== void 0 && room.teamId) {\n        return false;\n      }\n      return canAccessPublicRoom(user);\n    }, async function _validateIfAlreadyJoined(room, user) {\n      if (!(room !== null && room !== void 0 && room._id) || !(user !== null && user !== void 0 && user._id)) {\n        return false;\n      }\n      if (!(await Subscriptions.countByRoomIdAndUserId(room._id, user._id))) {\n        return false;\n      }\n      if (await Authorization.hasPermission(user._id, 'view-joined-room')) {\n        return true;\n      }\n      return Authorization.hasPermission(user._id, \"view-\".concat(room.t, \"-room\"));\n    }, async function _validateAccessToDiscussionsParentRoom(room, user) {\n      if (!(room !== null && room !== void 0 && room.prid)) {\n        return false;\n      }\n      const parentRoom = await Rooms.findOneById(room.prid);\n      if (!parentRoom) {\n        return false;\n      }\n      return Authorization.canAccessRoom(parentRoom, user);\n    }, canAccessRoomLivechat, canAccessRoomVoip];\n    const canAccessRoom = async (room, user, extraData) => {\n      // TODO livechat can send both as null, so they we need to validate nevertheless\n      // if (!room || !user) {\n      // \treturn false;\n      // }\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(roomAccessValidators), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const roomAccessValidator = _step.value;\n          {\n            if (await roomAccessValidator(room, user, extraData)) {\n              return true;\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      return false;\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","canAccessRoom","Authorization","TEAM_TYPE","Subscriptions","Rooms","Settings","TeamMember","Team","canAccessRoomLivechat","canAccessRoomVoip","__reifyWaitForDeps__","canAccessPublicRoom","user","_id","anon","getValueById","hasPermission","roomAccessValidators","_validateAccessToPublicRoomsInTeams","room","teamId","t","team","findOneById","projection","type","PUBLIC","membership","findOneByUserIdAndTeamId","_validateAccessToPublicRooms","_validateIfAlreadyJoined","countByRoomIdAndUserId","concat","_validateAccessToDiscussionsParentRoom","prid","parentRoom","extraData","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","roomAccessValidator","value","err","return","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/authorization/canAccessRoom.ts"],"sourcesContent":["import { Authorization } from '@rocket.chat/core-services';\nimport type { RoomAccessValidator } from '@rocket.chat/core-services';\nimport { TEAM_TYPE } from '@rocket.chat/core-typings';\nimport type { IUser, ITeam } from '@rocket.chat/core-typings';\nimport { Subscriptions, Rooms, Settings, TeamMember, Team } from '@rocket.chat/models';\n\nimport { canAccessRoomLivechat } from './canAccessRoomLivechat';\nimport { canAccessRoomVoip } from './canAccessRoomVoip';\n\nasync function canAccessPublicRoom(user?: Partial<IUser>): Promise<boolean> {\n\tif (!user?._id) {\n\t\t// TODO: it was using cached version from /app/settings/server/raw.js\n\t\tconst anon = await Settings.getValueById('Accounts_AllowAnonymousRead');\n\t\treturn !!anon;\n\t}\n\n\treturn Authorization.hasPermission(user._id, 'view-c-room');\n}\n\nconst roomAccessValidators: RoomAccessValidator[] = [\n\tasync function _validateAccessToPublicRoomsInTeams(room, user): Promise<boolean> {\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!room._id || !room.teamId || room.t !== 'c') {\n\t\t\t// if the room doesn't belongs to a team || is not a public channel - skip\n\t\t\treturn false;\n\t\t}\n\n\t\t// if team is public, access is allowed if the user can access public rooms\n\t\tconst team = await Team.findOneById<Pick<ITeam, 'type'>>(room.teamId, {\n\t\t\tprojection: { type: 1 },\n\t\t});\n\t\tif (team?.type === TEAM_TYPE.PUBLIC) {\n\t\t\treturn canAccessPublicRoom(user);\n\t\t}\n\n\t\t// otherwise access is allowed only to members of the team\n\t\tconst membership =\n\t\t\tuser?._id &&\n\t\t\t(await TeamMember.findOneByUserIdAndTeamId(user._id, room.teamId, {\n\t\t\t\tprojection: { _id: 1 },\n\t\t\t}));\n\t\treturn !!membership;\n\t},\n\n\tasync function _validateAccessToPublicRooms(room, user): Promise<boolean> {\n\t\tif (!room?._id || room.t !== 'c' || room?.teamId) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn canAccessPublicRoom(user);\n\t},\n\n\tasync function _validateIfAlreadyJoined(room, user): Promise<boolean> {\n\t\tif (!room?._id || !user?._id) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!(await Subscriptions.countByRoomIdAndUserId(room._id, user._id))) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (await Authorization.hasPermission(user._id, 'view-joined-room')) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn Authorization.hasPermission(user._id, `view-${room.t}-room`);\n\t},\n\n\tasync function _validateAccessToDiscussionsParentRoom(room, user): Promise<boolean> {\n\t\tif (!room?.prid) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst parentRoom = await Rooms.findOneById(room.prid);\n\t\tif (!parentRoom) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Authorization.canAccessRoom(parentRoom, user);\n\t},\n\n\tcanAccessRoomLivechat,\n\tcanAccessRoomVoip,\n];\n\nexport const canAccessRoom: RoomAccessValidator = async (room, user, extraData): Promise<boolean> => {\n\t// TODO livechat can send both as null, so they we need to validate nevertheless\n\t// if (!room || !user) {\n\t// \treturn false;\n\t// }\n\n\tfor await (const roomAccessValidator of roomAccessValidators) {\n\t\tif (await roomAccessValidator(room, user, extraData)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"b73683140e1fb547f5c90c45494b193090f0e677"}
