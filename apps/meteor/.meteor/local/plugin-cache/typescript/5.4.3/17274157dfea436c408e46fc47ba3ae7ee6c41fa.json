{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/startup/migrations/v295.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/startup/migrations/v295.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/startup/migrations/v295.ts","inputSourceMap":{"version":3,"file":"server/startup/migrations/v295.ts","sourceRoot":"","sources":["server/startup/migrations/v295.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAE/C,OAAO,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AACvD,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AACpD,OAAO,EAAE,qBAAqB,EAAE,MAAM,0CAA0C,CAAC;AAEjF,YAAY,CAAC;IACZ,OAAO,EAAE,GAAG;IACZ,IAAI,EAAE,wIAAwI;IAC9I,KAAK,CAAC,EAAE;QACP,MAAM,cAAc,GAAG,gBAAgB,CAAC;QACxC,MAAM,eAAe,GAAG,eAAe,CAAC;QAExC,MAAM,cAAc,GAAG,gBAAgB,CAAC;QACxC,MAAM,eAAe,GAAG,eAAe,CAAC;QAExC,MAAM,gBAAgB,GAAG,MAAM,QAAQ,CAAC,WAAW,CAA0B,+BAA+B,EAAE;YAC7G,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;SACxB,CAAC,CAAC;QACH,MAAM,iBAAiB,GAAG,MAAM,QAAQ,CAAC,WAAW,CAA0B,qBAAqB,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAEnI,wBAAwB;QACxB,MAAM,qBAAqB,CAAC;YAC3B,MAAM,EAAE,eAAe;SACvB,CAAC,CAAC,QAAQ,CAAC,eAAe,EAAE,+BAA+B,EAAE,cAAc,CAAC,CAAC;QAC9E,MAAM,qBAAqB,CAAC;YAC3B,MAAM,EAAE,eAAe;SACvB,CAAC,CAAC,QAAQ,CAAC,eAAe,EAAE,qBAAqB,EAAE,eAAe,CAAC,CAAC;QAErE,4EAA4E;QAE5E,IAAI,gBAAgB,IAAI,gBAAgB,CAAC,KAAK,KAAK,cAAc,EAAE,CAAC;YACnE,YAAY,CAAC,IAAI,CAChB,yFAAyF,gBAAgB,CAAC,KAAK,SAAS,cAAc,iCAAiC,CACvK,CAAC;QACH,CAAC;QAED,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,KAAK,KAAK,eAAe,EAAE,CAAC;YACtE,YAAY,CAAC,IAAI,CAChB,0FAA0F,iBAAiB,CAAC,KAAK,SAAS,eAAe,iCAAiC,CAC1K,CAAC;QACH,CAAC;IACF,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { ISetting } from '@rocket.chat/core-typings';\nimport { Settings } from '@rocket.chat/models';\n\nimport { SystemLogger } from '../../lib/logger/system';\nimport { addMigration } from '../../lib/migrations';\nimport { updateAuditedBySystem } from '../../settings/lib/auditedSettingUpdates';\n\naddMigration({\n\tversion: 295,\n\tname: 'Change old \"LDAP_Background_Sync_Interval\" and \"CROWD_Sync_Interval\" to a pre-defined values instead of accept any input from the user',\n\tasync up() {\n\t\tconst oldLdapDefault = 'Every 24 hours';\n\t\tconst oldCrowdDefault = 'Every 60 mins';\n\n\t\tconst newLdapDefault = 'every_24_hours';\n\t\tconst newCrowdDefault = 'every_1_hours';\n\n\t\tconst ldapSyncInterval = await Settings.findOneById<Pick<ISetting, 'value'>>('LDAP_Background_Sync_Interval', {\n\t\t\tprojection: { value: 1 },\n\t\t});\n\t\tconst crowdSyncInterval = await Settings.findOneById<Pick<ISetting, 'value'>>('CROWD_Sync_Interval', { projection: { value: 1 } });\n\n\t\t// update setting values\n\t\tawait updateAuditedBySystem({\n\t\t\treason: 'Migration 295',\n\t\t})(Settings.updateValueById, 'LDAP_Background_Sync_Interval', newLdapDefault);\n\t\tawait updateAuditedBySystem({\n\t\t\treason: 'Migration 295',\n\t\t})(Settings.updateValueById, 'CROWD_Sync_Interval', newCrowdDefault);\n\n\t\t// notify user about the changes if the value was different from the default\n\n\t\tif (ldapSyncInterval && ldapSyncInterval.value !== oldLdapDefault) {\n\t\t\tSystemLogger.warn(\n\t\t\t\t`The value of the setting 'LDAP background synchronization interval' has changed from \"${ldapSyncInterval.value}\" to \"${newLdapDefault}\". Please review your settings.`,\n\t\t\t);\n\t\t}\n\n\t\tif (crowdSyncInterval && crowdSyncInterval.value !== oldCrowdDefault) {\n\t\t\tSystemLogger.warn(\n\t\t\t\t`The value of the setting 'CROWD background synchronization interval' has changed from \"${crowdSyncInterval.value}\" to \"${newCrowdDefault}\". Please review your settings.`,\n\t\t\t);\n\t\t}\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/startup/migrations/v295.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/startup/migrations/v295.ts","inputSourceMap":{"version":3,"file":"server/startup/migrations/v295.ts","sourceRoot":"","sources":["server/startup/migrations/v295.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAE/C,OAAO,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AACvD,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AACpD,OAAO,EAAE,qBAAqB,EAAE,MAAM,0CAA0C,CAAC;AAEjF,YAAY,CAAC;IACZ,OAAO,EAAE,GAAG;IACZ,IAAI,EAAE,wIAAwI;IAC9I,KAAK,CAAC,EAAE;QACP,MAAM,cAAc,GAAG,gBAAgB,CAAC;QACxC,MAAM,eAAe,GAAG,eAAe,CAAC;QAExC,MAAM,cAAc,GAAG,gBAAgB,CAAC;QACxC,MAAM,eAAe,GAAG,eAAe,CAAC;QAExC,MAAM,gBAAgB,GAAG,MAAM,QAAQ,CAAC,WAAW,CAA0B,+BAA+B,EAAE;YAC7G,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;SACxB,CAAC,CAAC;QACH,MAAM,iBAAiB,GAAG,MAAM,QAAQ,CAAC,WAAW,CAA0B,qBAAqB,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAEnI,wBAAwB;QACxB,MAAM,qBAAqB,CAAC;YAC3B,MAAM,EAAE,eAAe;SACvB,CAAC,CAAC,QAAQ,CAAC,eAAe,EAAE,+BAA+B,EAAE,cAAc,CAAC,CAAC;QAC9E,MAAM,qBAAqB,CAAC;YAC3B,MAAM,EAAE,eAAe;SACvB,CAAC,CAAC,QAAQ,CAAC,eAAe,EAAE,qBAAqB,EAAE,eAAe,CAAC,CAAC;QAErE,4EAA4E;QAE5E,IAAI,gBAAgB,IAAI,gBAAgB,CAAC,KAAK,KAAK,cAAc,EAAE,CAAC;YACnE,YAAY,CAAC,IAAI,CAChB,yFAAyF,gBAAgB,CAAC,KAAK,SAAS,cAAc,iCAAiC,CACvK,CAAC;QACH,CAAC;QAED,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,KAAK,KAAK,eAAe,EAAE,CAAC;YACtE,YAAY,CAAC,IAAI,CAChB,0FAA0F,iBAAiB,CAAC,KAAK,SAAS,eAAe,iCAAiC,CAC1K,CAAC;QACH,CAAC;IACF,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { ISetting } from '@rocket.chat/core-typings';\nimport { Settings } from '@rocket.chat/models';\n\nimport { SystemLogger } from '../../lib/logger/system';\nimport { addMigration } from '../../lib/migrations';\nimport { updateAuditedBySystem } from '../../settings/lib/auditedSettingUpdates';\n\naddMigration({\n\tversion: 295,\n\tname: 'Change old \"LDAP_Background_Sync_Interval\" and \"CROWD_Sync_Interval\" to a pre-defined values instead of accept any input from the user',\n\tasync up() {\n\t\tconst oldLdapDefault = 'Every 24 hours';\n\t\tconst oldCrowdDefault = 'Every 60 mins';\n\n\t\tconst newLdapDefault = 'every_24_hours';\n\t\tconst newCrowdDefault = 'every_1_hours';\n\n\t\tconst ldapSyncInterval = await Settings.findOneById<Pick<ISetting, 'value'>>('LDAP_Background_Sync_Interval', {\n\t\t\tprojection: { value: 1 },\n\t\t});\n\t\tconst crowdSyncInterval = await Settings.findOneById<Pick<ISetting, 'value'>>('CROWD_Sync_Interval', { projection: { value: 1 } });\n\n\t\t// update setting values\n\t\tawait updateAuditedBySystem({\n\t\t\treason: 'Migration 295',\n\t\t})(Settings.updateValueById, 'LDAP_Background_Sync_Interval', newLdapDefault);\n\t\tawait updateAuditedBySystem({\n\t\t\treason: 'Migration 295',\n\t\t})(Settings.updateValueById, 'CROWD_Sync_Interval', newCrowdDefault);\n\n\t\t// notify user about the changes if the value was different from the default\n\n\t\tif (ldapSyncInterval && ldapSyncInterval.value !== oldLdapDefault) {\n\t\t\tSystemLogger.warn(\n\t\t\t\t`The value of the setting 'LDAP background synchronization interval' has changed from \"${ldapSyncInterval.value}\" to \"${newLdapDefault}\". Please review your settings.`,\n\t\t\t);\n\t\t}\n\n\t\tif (crowdSyncInterval && crowdSyncInterval.value !== oldCrowdDefault) {\n\t\t\tSystemLogger.warn(\n\t\t\t\t`The value of the setting 'CROWD background synchronization interval' has changed from \"${crowdSyncInterval.value}\" to \"${newCrowdDefault}\". Please review your settings.`,\n\t\t\t);\n\t\t}\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Settings;\n    module.link(\"@rocket.chat/models\", {\n      Settings(v) {\n        Settings = v;\n      }\n    }, 0);\n    let SystemLogger;\n    module.link(\"../../lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 1);\n    let addMigration;\n    module.link(\"../../lib/migrations\", {\n      addMigration(v) {\n        addMigration = v;\n      }\n    }, 2);\n    let updateAuditedBySystem;\n    module.link(\"../../settings/lib/auditedSettingUpdates\", {\n      updateAuditedBySystem(v) {\n        updateAuditedBySystem = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    addMigration({\n      version: 295,\n      name: 'Change old \"LDAP_Background_Sync_Interval\" and \"CROWD_Sync_Interval\" to a pre-defined values instead of accept any input from the user',\n      async up() {\n        const oldLdapDefault = 'Every 24 hours';\n        const oldCrowdDefault = 'Every 60 mins';\n        const newLdapDefault = 'every_24_hours';\n        const newCrowdDefault = 'every_1_hours';\n        const ldapSyncInterval = await Settings.findOneById('LDAP_Background_Sync_Interval', {\n          projection: {\n            value: 1\n          }\n        });\n        const crowdSyncInterval = await Settings.findOneById('CROWD_Sync_Interval', {\n          projection: {\n            value: 1\n          }\n        });\n        // update setting values\n        await updateAuditedBySystem({\n          reason: 'Migration 295'\n        })(Settings.updateValueById, 'LDAP_Background_Sync_Interval', newLdapDefault);\n        await updateAuditedBySystem({\n          reason: 'Migration 295'\n        })(Settings.updateValueById, 'CROWD_Sync_Interval', newCrowdDefault);\n        // notify user about the changes if the value was different from the default\n        if (ldapSyncInterval && ldapSyncInterval.value !== oldLdapDefault) {\n          SystemLogger.warn(\"The value of the setting 'LDAP background synchronization interval' has changed from \\\"\".concat(ldapSyncInterval.value, \"\\\" to \\\"\").concat(newLdapDefault, \"\\\". Please review your settings.\"));\n        }\n        if (crowdSyncInterval && crowdSyncInterval.value !== oldCrowdDefault) {\n          SystemLogger.warn(\"The value of the setting 'CROWD background synchronization interval' has changed from \\\"\".concat(crowdSyncInterval.value, \"\\\" to \\\"\").concat(newCrowdDefault, \"\\\". Please review your settings.\"));\n        }\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Settings","module","link","v","SystemLogger","addMigration","updateAuditedBySystem","__reifyWaitForDeps__","version","name","up","oldLdapDefault","oldCrowdDefault","newLdapDefault","newCrowdDefault","ldapSyncInterval","findOneById","projection","value","crowdSyncInterval","reason","updateValueById","warn","concat","__reify_async_result__","_reifyError","self","async"],"sources":["server/startup/migrations/v295.ts"],"sourcesContent":["import type { ISetting } from '@rocket.chat/core-typings';\nimport { Settings } from '@rocket.chat/models';\n\nimport { SystemLogger } from '../../lib/logger/system';\nimport { addMigration } from '../../lib/migrations';\nimport { updateAuditedBySystem } from '../../settings/lib/auditedSettingUpdates';\n\naddMigration({\n\tversion: 295,\n\tname: 'Change old \"LDAP_Background_Sync_Interval\" and \"CROWD_Sync_Interval\" to a pre-defined values instead of accept any input from the user',\n\tasync up() {\n\t\tconst oldLdapDefault = 'Every 24 hours';\n\t\tconst oldCrowdDefault = 'Every 60 mins';\n\n\t\tconst newLdapDefault = 'every_24_hours';\n\t\tconst newCrowdDefault = 'every_1_hours';\n\n\t\tconst ldapSyncInterval = await Settings.findOneById<Pick<ISetting, 'value'>>('LDAP_Background_Sync_Interval', {\n\t\t\tprojection: { value: 1 },\n\t\t});\n\t\tconst crowdSyncInterval = await Settings.findOneById<Pick<ISetting, 'value'>>('CROWD_Sync_Interval', { projection: { value: 1 } });\n\n\t\t// update setting values\n\t\tawait updateAuditedBySystem({\n\t\t\treason: 'Migration 295',\n\t\t})(Settings.updateValueById, 'LDAP_Background_Sync_Interval', newLdapDefault);\n\t\tawait updateAuditedBySystem({\n\t\t\treason: 'Migration 295',\n\t\t})(Settings.updateValueById, 'CROWD_Sync_Interval', newCrowdDefault);\n\n\t\t// notify user about the changes if the value was different from the default\n\n\t\tif (ldapSyncInterval && ldapSyncInterval.value !== oldLdapDefault) {\n\t\t\tSystemLogger.warn(\n\t\t\t\t`The value of the setting 'LDAP background synchronization interval' has changed from \"${ldapSyncInterval.value}\" to \"${newLdapDefault}\". Please review your settings.`,\n\t\t\t);\n\t\t}\n\n\t\tif (crowdSyncInterval && crowdSyncInterval.value !== oldCrowdDefault) {\n\t\t\tSystemLogger.warn(\n\t\t\t\t`The value of the setting 'CROWD background synchronization interval' has changed from \"${crowdSyncInterval.value}\" to \"${newCrowdDefault}\". Please review your settings.`,\n\t\t\t);\n\t\t}\n\t},\n});\n"],"mappings":";;;IACA,IAAAA,QAAS;IAAAC,MAAU,CAAAC,IAAA,CAAM,qBAAqB,EAAC;MAAAF,SAAAG,CAAA;QAAAH,QAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,YAAA;IAAAH,MAAA,CAAAC,IAAA;MAAAE,aAAAD,CAAA;QAAAC,YAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,YAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAG,aAAAF,CAAA;QAAAE,YAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,qBAAA;IAAAL,MAAA,CAAAC,IAAA;MAAAI,sBAAAH,CAAA;QAAAG,qBAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,oBAAA,WAAAA,oBAAA;IAM/CF,YAAY,CAAC;MACZG,OAAO,EAAE,GAAG;MACZC,IAAI,EAAE,wIAAwI;MAC9I,MAAMC,EAAEA,CAAA;QACP,MAAMC,cAAc,GAAG,gBAAgB;QACvC,MAAMC,eAAe,GAAG,eAAe;QAEvC,MAAMC,cAAc,GAAG,gBAAgB;QACvC,MAAMC,eAAe,GAAG,eAAe;QAEvC,MAAMC,gBAAgB,GAAG,MAAMf,QAAQ,CAACgB,WAAW,CAA0B,+BAA+B,EAAE;UAC7GC,UAAU,EAAE;YAAEC,KAAK,EAAE;UAAC;SACtB,CAAC;QACF,MAAMC,iBAAiB,GAAG,MAAMnB,QAAQ,CAACgB,WAAW,CAA0B,qBAAqB,EAAE;UAAEC,UAAU,EAAE;YAAEC,KAAK,EAAE;UAAC;QAAE,CAAE,CAAC;QAElI;QACA,MAAMZ,qBAAqB,CAAC;UAC3Bc,MAAM,EAAE;SACR,CAAC,CAACpB,QAAQ,CAACqB,eAAe,EAAE,+BAA+B,EAAER,cAAc,CAAC;QAC7E,MAAMP,qBAAqB,CAAC;UAC3Bc,MAAM,EAAE;SACR,CAAC,CAACpB,QAAQ,CAACqB,eAAe,EAAE,qBAAqB,EAAEP,eAAe,CAAC;QAEpE;QAEA,IAAIC,gBAAgB,IAAIA,gBAAgB,CAACG,KAAK,KAAKP,cAAc,EAAE;UAClEP,YAAY,CAACkB,IAAI,2FAAAC,MAAA,CACyER,gBAAgB,CAACG,KAAK,cAAAK,MAAA,CAASV,cAAc,qCAAiC,CACvK;QACF;QAEA,IAAIM,iBAAiB,IAAIA,iBAAiB,CAACD,KAAK,KAAKN,eAAe,EAAE;UACrER,YAAY,CAACkB,IAAI,4FAAAC,MAAA,CAC0EJ,iBAAiB,CAACD,KAAK,cAAAK,MAAA,CAAST,eAAe,qCAAiC,CAC1K;QACF;MACD;KACA,CAAC;IAACU,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"17274157dfea436c408e46fc47ba3ae7ee6c41fa"}
