{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/modules/core-apps/mention.module.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/modules/core-apps/mention.module.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/modules/core-apps/mention.module.ts","inputSourceMap":{"version":3,"file":"server/modules/core-apps/mention.module.ts","sourceRoot":"","sources":["server/modules/core-apps/mention.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IUiKitCoreApp } from '@rocket.chat/core-services';\nimport type { IMessage } from '@rocket.chat/core-typings';\nimport { Subscriptions, Messages } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { processWebhookMessage } from '../../../app/lib/server/functions/processWebhookMessage';\nimport { addUsersToRoomMethod } from '../../../app/lib/server/methods/addUsersToRoom';\nimport { i18n } from '../../lib/i18n';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\n\nconst retrieveMentionsFromPayload = (stringifiedMentions: string): Exclude<IMessage['mentions'], undefined> => {\n\ttry {\n\t\tconst mentions = JSON.parse(stringifiedMentions);\n\t\tif (!Array.isArray(mentions) || !mentions.length || !('username' in mentions[0])) {\n\t\t\tthrow new Error('Invalid payload');\n\t\t}\n\t\treturn mentions;\n\t} catch (error) {\n\t\tthrow new Error('Invalid payload');\n\t}\n};\n\nexport class MentionModule implements IUiKitCoreApp {\n\tappId = 'mention-core';\n\n\tasync blockAction(payload: any): Promise<any> {\n\t\tconst {\n\t\t\tactionId,\n\t\t\tpayload: { value: stringifiedMentions, blockId: referenceMessageId },\n\t\t} = payload;\n\n\t\tconst mentions = retrieveMentionsFromPayload(stringifiedMentions);\n\n\t\tconst usernames = mentions.map(({ username }) => username);\n\n\t\tconst message = await Messages.findOneById(referenceMessageId, { projection: { _id: 1, tmid: 1 } });\n\n\t\tif (!message) {\n\t\t\tthrow new Error('Mention bot - Failed to retrieve message information');\n\t\t}\n\n\t\tconst joinedUsernames = `@${usernames.join(', @')}`;\n\n\t\tif (actionId === 'dismiss') {\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', payload.user._id, payload.room, {\n\t\t\t\tmsg: i18n.t('You_mentioned___mentions__but_theyre_not_in_this_room', {\n\t\t\t\t\tmentions: joinedUsernames,\n\t\t\t\t\tlng: payload.user.language,\n\t\t\t\t}),\n\t\t\t\t_id: payload.message,\n\t\t\t\ttmid: message.tmid,\n\t\t\t\tmentions,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (actionId === 'add-users') {\n\t\t\tvoid addUsersToRoomMethod(payload.user._id, { rid: payload.room, users: usernames as string[] }, payload.user);\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', payload.user._id, payload.room, {\n\t\t\t\tmsg: i18n.t('You_mentioned___mentions__but_theyre_not_in_this_room', {\n\t\t\t\t\tmentions: joinedUsernames,\n\t\t\t\t\tlng: payload.user.language,\n\t\t\t\t}),\n\t\t\t\ttmid: message.tmid,\n\t\t\t\t_id: payload.message,\n\t\t\t\tmentions,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (actionId === 'share-message') {\n\t\t\tconst sub = await Subscriptions.findOneByRoomIdAndUserId(payload.room, payload.user._id, { projection: { t: 1, rid: 1, name: 1 } });\n\t\t\t// this should exist since the event is fired from withing the room (e.g the user sent a message)\n\t\t\tif (!sub) {\n\t\t\t\tthrow new Error('Mention bot - Failed to retrieve room information');\n\t\t\t}\n\n\t\t\tconst roomPath = roomCoordinator.getRouteLink(sub.t, { rid: sub.rid, name: sub.name });\n\t\t\tif (!roomPath) {\n\t\t\t\tthrow new Error('Mention bot - Failed to retrieve path to room');\n\t\t\t}\n\n\t\t\tconst messageText = i18n.t('Youre_not_a_part_of__channel__and_I_mentioned_you_there', {\n\t\t\t\tchannel: `#${sub.name}`,\n\t\t\t\tlng: payload.user.language,\n\t\t\t});\n\n\t\t\tconst link = new URL(Meteor.absoluteUrl(roomPath));\n\t\t\tlink.searchParams.set('msg', message._id);\n\t\t\tconst text = `[ ](${link.toString()})\\n${messageText}`;\n\n\t\t\t// forwards message to all DMs\n\t\t\tawait processWebhookMessage(\n\t\t\t\t{\n\t\t\t\t\troomId: mentions.map(({ _id }) => _id),\n\t\t\t\t\ttext,\n\t\t\t\t},\n\t\t\t\tpayload.user,\n\t\t\t);\n\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', payload.user._id, payload.room, {\n\t\t\t\tmsg: i18n.t('You_mentioned___mentions__but_theyre_not_in_this_room_You_let_them_know_via_dm', {\n\t\t\t\t\tmentions: joinedUsernames,\n\t\t\t\t\tlng: payload.user.language,\n\t\t\t\t}),\n\t\t\t\ttmid: message.tmid,\n\t\t\t\t_id: payload.message,\n\t\t\t\tmentions,\n\t\t\t});\n\t\t}\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/modules/core-apps/mention.module.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/modules/core-apps/mention.module.ts","inputSourceMap":{"version":3,"file":"server/modules/core-apps/mention.module.ts","sourceRoot":"","sources":["server/modules/core-apps/mention.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AAGjD,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC9D,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,qBAAqB,EAAE,MAAM,yDAAyD,CAAC;AAChG,OAAO,EAAE,oBAAoB,EAAE,MAAM,gDAAgD,CAAC;AACtF,OAAO,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;AACtC,OAAO,EAAE,eAAe,EAAE,MAAM,iCAAiC,CAAC;AAElE,MAAM,2BAA2B,GAAG,CAAC,mBAA2B,EAA4C,EAAE;IAC7G,IAAI,CAAC;QACJ,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC,UAAU,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAClF,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACpC,CAAC;QACD,OAAO,QAAQ,CAAC;IACjB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QAChB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACpC,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,OAAO,aAAa;IACzB,KAAK,GAAG,cAAc,CAAC;IAEvB,KAAK,CAAC,WAAW,CAAC,OAAY;QAC7B,MAAM,EACL,QAAQ,EACR,OAAO,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,OAAO,EAAE,kBAAkB,EAAE,GACpE,GAAG,OAAO,CAAC;QAEZ,MAAM,QAAQ,GAAG,2BAA2B,CAAC,mBAAmB,CAAC,CAAC;QAElE,MAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC;QAE3D,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,kBAAkB,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAEpG,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QACzE,CAAC;QAED,MAAM,eAAe,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QAEpD,IAAI,QAAQ,KAAK,SAAS,EAAE,CAAC;YAC5B,KAAK,GAAG,CAAC,SAAS,CAAC,yBAAyB,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,EAAE;gBAC7E,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,uDAAuD,EAAE;oBACpE,QAAQ,EAAE,eAAe;oBACzB,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,QAAQ;iBAC1B,CAAC;gBACF,GAAG,EAAE,OAAO,CAAC,OAAO;gBACpB,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,QAAQ;aACR,CAAC,CAAC;YACH,OAAO;QACR,CAAC;QAED,IAAI,QAAQ,KAAK,WAAW,EAAE,CAAC;YAC9B,KAAK,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,SAAqB,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;YAC/G,KAAK,GAAG,CAAC,SAAS,CAAC,yBAAyB,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,EAAE;gBAC7E,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,uDAAuD,EAAE;oBACpE,QAAQ,EAAE,eAAe;oBACzB,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,QAAQ;iBAC1B,CAAC;gBACF,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,GAAG,EAAE,OAAO,CAAC,OAAO;gBACpB,QAAQ;aACR,CAAC,CAAC;YACH,OAAO;QACR,CAAC;QAED,IAAI,QAAQ,KAAK,eAAe,EAAE,CAAC;YAClC,MAAM,GAAG,GAAG,MAAM,aAAa,CAAC,wBAAwB,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YACpI,iGAAiG;YACjG,IAAI,CAAC,GAAG,EAAE,CAAC;gBACV,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;YACtE,CAAC;YAED,MAAM,QAAQ,GAAG,eAAe,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;YACvF,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACf,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;YAClE,CAAC;YAED,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,yDAAyD,EAAE;gBACrF,OAAO,EAAE,IAAI,GAAG,CAAC,IAAI,EAAE;gBACvB,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,QAAQ;aAC1B,CAAC,CAAC;YAEH,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;YAC1C,MAAM,IAAI,GAAG,OAAO,IAAI,CAAC,QAAQ,EAAE,MAAM,WAAW,EAAE,CAAC;YAEvD,8BAA8B;YAC9B,MAAM,qBAAqB,CAC1B;gBACC,MAAM,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC;gBACtC,IAAI;aACJ,EACD,OAAO,CAAC,IAAI,CACZ,CAAC;YAEF,KAAK,GAAG,CAAC,SAAS,CAAC,yBAAyB,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,EAAE;gBAC7E,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,gFAAgF,EAAE;oBAC7F,QAAQ,EAAE,eAAe;oBACzB,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,QAAQ;iBAC1B,CAAC;gBACF,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,GAAG,EAAE,OAAO,CAAC,OAAO;gBACpB,QAAQ;aACR,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;CACD","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IUiKitCoreApp } from '@rocket.chat/core-services';\nimport type { IMessage } from '@rocket.chat/core-typings';\nimport { Subscriptions, Messages } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { processWebhookMessage } from '../../../app/lib/server/functions/processWebhookMessage';\nimport { addUsersToRoomMethod } from '../../../app/lib/server/methods/addUsersToRoom';\nimport { i18n } from '../../lib/i18n';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\n\nconst retrieveMentionsFromPayload = (stringifiedMentions: string): Exclude<IMessage['mentions'], undefined> => {\n\ttry {\n\t\tconst mentions = JSON.parse(stringifiedMentions);\n\t\tif (!Array.isArray(mentions) || !mentions.length || !('username' in mentions[0])) {\n\t\t\tthrow new Error('Invalid payload');\n\t\t}\n\t\treturn mentions;\n\t} catch (error) {\n\t\tthrow new Error('Invalid payload');\n\t}\n};\n\nexport class MentionModule implements IUiKitCoreApp {\n\tappId = 'mention-core';\n\n\tasync blockAction(payload: any): Promise<any> {\n\t\tconst {\n\t\t\tactionId,\n\t\t\tpayload: { value: stringifiedMentions, blockId: referenceMessageId },\n\t\t} = payload;\n\n\t\tconst mentions = retrieveMentionsFromPayload(stringifiedMentions);\n\n\t\tconst usernames = mentions.map(({ username }) => username);\n\n\t\tconst message = await Messages.findOneById(referenceMessageId, { projection: { _id: 1, tmid: 1 } });\n\n\t\tif (!message) {\n\t\t\tthrow new Error('Mention bot - Failed to retrieve message information');\n\t\t}\n\n\t\tconst joinedUsernames = `@${usernames.join(', @')}`;\n\n\t\tif (actionId === 'dismiss') {\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', payload.user._id, payload.room, {\n\t\t\t\tmsg: i18n.t('You_mentioned___mentions__but_theyre_not_in_this_room', {\n\t\t\t\t\tmentions: joinedUsernames,\n\t\t\t\t\tlng: payload.user.language,\n\t\t\t\t}),\n\t\t\t\t_id: payload.message,\n\t\t\t\ttmid: message.tmid,\n\t\t\t\tmentions,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (actionId === 'add-users') {\n\t\t\tvoid addUsersToRoomMethod(payload.user._id, { rid: payload.room, users: usernames as string[] }, payload.user);\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', payload.user._id, payload.room, {\n\t\t\t\tmsg: i18n.t('You_mentioned___mentions__but_theyre_not_in_this_room', {\n\t\t\t\t\tmentions: joinedUsernames,\n\t\t\t\t\tlng: payload.user.language,\n\t\t\t\t}),\n\t\t\t\ttmid: message.tmid,\n\t\t\t\t_id: payload.message,\n\t\t\t\tmentions,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (actionId === 'share-message') {\n\t\t\tconst sub = await Subscriptions.findOneByRoomIdAndUserId(payload.room, payload.user._id, { projection: { t: 1, rid: 1, name: 1 } });\n\t\t\t// this should exist since the event is fired from withing the room (e.g the user sent a message)\n\t\t\tif (!sub) {\n\t\t\t\tthrow new Error('Mention bot - Failed to retrieve room information');\n\t\t\t}\n\n\t\t\tconst roomPath = roomCoordinator.getRouteLink(sub.t, { rid: sub.rid, name: sub.name });\n\t\t\tif (!roomPath) {\n\t\t\t\tthrow new Error('Mention bot - Failed to retrieve path to room');\n\t\t\t}\n\n\t\t\tconst messageText = i18n.t('Youre_not_a_part_of__channel__and_I_mentioned_you_there', {\n\t\t\t\tchannel: `#${sub.name}`,\n\t\t\t\tlng: payload.user.language,\n\t\t\t});\n\n\t\t\tconst link = new URL(Meteor.absoluteUrl(roomPath));\n\t\t\tlink.searchParams.set('msg', message._id);\n\t\t\tconst text = `[ ](${link.toString()})\\n${messageText}`;\n\n\t\t\t// forwards message to all DMs\n\t\t\tawait processWebhookMessage(\n\t\t\t\t{\n\t\t\t\t\troomId: mentions.map(({ _id }) => _id),\n\t\t\t\t\ttext,\n\t\t\t\t},\n\t\t\t\tpayload.user,\n\t\t\t);\n\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', payload.user._id, payload.room, {\n\t\t\t\tmsg: i18n.t('You_mentioned___mentions__but_theyre_not_in_this_room_You_let_them_know_via_dm', {\n\t\t\t\t\tmentions: joinedUsernames,\n\t\t\t\t\tlng: payload.user.language,\n\t\t\t\t}),\n\t\t\t\ttmid: message.tmid,\n\t\t\t\t_id: payload.message,\n\t\t\t\tmentions,\n\t\t\t});\n\t\t}\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      MentionModule: () => MentionModule\n    });\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let Subscriptions, Messages;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Messages(v) {\n        Messages = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let processWebhookMessage;\n    module.link(\"../../../app/lib/server/functions/processWebhookMessage\", {\n      processWebhookMessage(v) {\n        processWebhookMessage = v;\n      }\n    }, 3);\n    let addUsersToRoomMethod;\n    module.link(\"../../../app/lib/server/methods/addUsersToRoom\", {\n      addUsersToRoomMethod(v) {\n        addUsersToRoomMethod = v;\n      }\n    }, 4);\n    let i18n;\n    module.link(\"../../lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 5);\n    let roomCoordinator;\n    module.link(\"../../lib/rooms/roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const retrieveMentionsFromPayload = stringifiedMentions => {\n      try {\n        const mentions = JSON.parse(stringifiedMentions);\n        if (!Array.isArray(mentions) || !mentions.length || !('username' in mentions[0])) {\n          throw new Error('Invalid payload');\n        }\n        return mentions;\n      } catch (error) {\n        throw new Error('Invalid payload');\n      }\n    };\n    class MentionModule {\n      constructor() {\n        this.appId = 'mention-core';\n      }\n      async blockAction(payload) {\n        const {\n          actionId,\n          payload: {\n            value: stringifiedMentions,\n            blockId: referenceMessageId\n          }\n        } = payload;\n        const mentions = retrieveMentionsFromPayload(stringifiedMentions);\n        const usernames = mentions.map(_ref => {\n          let {\n            username\n          } = _ref;\n          return username;\n        });\n        const message = await Messages.findOneById(referenceMessageId, {\n          projection: {\n            _id: 1,\n            tmid: 1\n          }\n        });\n        if (!message) {\n          throw new Error('Mention bot - Failed to retrieve message information');\n        }\n        const joinedUsernames = \"@\".concat(usernames.join(', @'));\n        if (actionId === 'dismiss') {\n          void api.broadcast('notify.ephemeralMessage', payload.user._id, payload.room, {\n            msg: i18n.t('You_mentioned___mentions__but_theyre_not_in_this_room', {\n              mentions: joinedUsernames,\n              lng: payload.user.language\n            }),\n            _id: payload.message,\n            tmid: message.tmid,\n            mentions\n          });\n          return;\n        }\n        if (actionId === 'add-users') {\n          void addUsersToRoomMethod(payload.user._id, {\n            rid: payload.room,\n            users: usernames\n          }, payload.user);\n          void api.broadcast('notify.ephemeralMessage', payload.user._id, payload.room, {\n            msg: i18n.t('You_mentioned___mentions__but_theyre_not_in_this_room', {\n              mentions: joinedUsernames,\n              lng: payload.user.language\n            }),\n            tmid: message.tmid,\n            _id: payload.message,\n            mentions\n          });\n          return;\n        }\n        if (actionId === 'share-message') {\n          const sub = await Subscriptions.findOneByRoomIdAndUserId(payload.room, payload.user._id, {\n            projection: {\n              t: 1,\n              rid: 1,\n              name: 1\n            }\n          });\n          // this should exist since the event is fired from withing the room (e.g the user sent a message)\n          if (!sub) {\n            throw new Error('Mention bot - Failed to retrieve room information');\n          }\n          const roomPath = roomCoordinator.getRouteLink(sub.t, {\n            rid: sub.rid,\n            name: sub.name\n          });\n          if (!roomPath) {\n            throw new Error('Mention bot - Failed to retrieve path to room');\n          }\n          const messageText = i18n.t('Youre_not_a_part_of__channel__and_I_mentioned_you_there', {\n            channel: \"#\".concat(sub.name),\n            lng: payload.user.language\n          });\n          const link = new URL(Meteor.absoluteUrl(roomPath));\n          link.searchParams.set('msg', message._id);\n          const text = \"[ ](\".concat(link.toString(), \")\\n\").concat(messageText);\n          // forwards message to all DMs\n          await processWebhookMessage({\n            roomId: mentions.map(_ref2 => {\n              let {\n                _id\n              } = _ref2;\n              return _id;\n            }),\n            text\n          }, payload.user);\n          void api.broadcast('notify.ephemeralMessage', payload.user._id, payload.room, {\n            msg: i18n.t('You_mentioned___mentions__but_theyre_not_in_this_room_You_let_them_know_via_dm', {\n              mentions: joinedUsernames,\n              lng: payload.user.language\n            }),\n            tmid: message.tmid,\n            _id: payload.message,\n            mentions\n          });\n        }\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","MentionModule","api","link","v","Subscriptions","Messages","Meteor","processWebhookMessage","addUsersToRoomMethod","i18n","roomCoordinator","__reifyWaitForDeps__","retrieveMentionsFromPayload","stringifiedMentions","mentions","JSON","parse","Array","isArray","length","Error","error","constructor","appId","blockAction","payload","actionId","value","blockId","referenceMessageId","usernames","map","_ref","username","message","findOneById","projection","_id","tmid","joinedUsernames","concat","join","broadcast","user","room","msg","t","lng","language","rid","users","sub","findOneByRoomIdAndUserId","name","roomPath","getRouteLink","messageText","channel","URL","absoluteUrl","searchParams","set","text","toString","roomId","_ref2","__reify_async_result__","_reifyError","self","async"],"sources":["server/modules/core-apps/mention.module.ts"],"sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IUiKitCoreApp } from '@rocket.chat/core-services';\nimport type { IMessage } from '@rocket.chat/core-typings';\nimport { Subscriptions, Messages } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { processWebhookMessage } from '../../../app/lib/server/functions/processWebhookMessage';\nimport { addUsersToRoomMethod } from '../../../app/lib/server/methods/addUsersToRoom';\nimport { i18n } from '../../lib/i18n';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\n\nconst retrieveMentionsFromPayload = (stringifiedMentions: string): Exclude<IMessage['mentions'], undefined> => {\n\ttry {\n\t\tconst mentions = JSON.parse(stringifiedMentions);\n\t\tif (!Array.isArray(mentions) || !mentions.length || !('username' in mentions[0])) {\n\t\t\tthrow new Error('Invalid payload');\n\t\t}\n\t\treturn mentions;\n\t} catch (error) {\n\t\tthrow new Error('Invalid payload');\n\t}\n};\n\nexport class MentionModule implements IUiKitCoreApp {\n\tappId = 'mention-core';\n\n\tasync blockAction(payload: any): Promise<any> {\n\t\tconst {\n\t\t\tactionId,\n\t\t\tpayload: { value: stringifiedMentions, blockId: referenceMessageId },\n\t\t} = payload;\n\n\t\tconst mentions = retrieveMentionsFromPayload(stringifiedMentions);\n\n\t\tconst usernames = mentions.map(({ username }) => username);\n\n\t\tconst message = await Messages.findOneById(referenceMessageId, { projection: { _id: 1, tmid: 1 } });\n\n\t\tif (!message) {\n\t\t\tthrow new Error('Mention bot - Failed to retrieve message information');\n\t\t}\n\n\t\tconst joinedUsernames = `@${usernames.join(', @')}`;\n\n\t\tif (actionId === 'dismiss') {\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', payload.user._id, payload.room, {\n\t\t\t\tmsg: i18n.t('You_mentioned___mentions__but_theyre_not_in_this_room', {\n\t\t\t\t\tmentions: joinedUsernames,\n\t\t\t\t\tlng: payload.user.language,\n\t\t\t\t}),\n\t\t\t\t_id: payload.message,\n\t\t\t\ttmid: message.tmid,\n\t\t\t\tmentions,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (actionId === 'add-users') {\n\t\t\tvoid addUsersToRoomMethod(payload.user._id, { rid: payload.room, users: usernames as string[] }, payload.user);\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', payload.user._id, payload.room, {\n\t\t\t\tmsg: i18n.t('You_mentioned___mentions__but_theyre_not_in_this_room', {\n\t\t\t\t\tmentions: joinedUsernames,\n\t\t\t\t\tlng: payload.user.language,\n\t\t\t\t}),\n\t\t\t\ttmid: message.tmid,\n\t\t\t\t_id: payload.message,\n\t\t\t\tmentions,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (actionId === 'share-message') {\n\t\t\tconst sub = await Subscriptions.findOneByRoomIdAndUserId(payload.room, payload.user._id, { projection: { t: 1, rid: 1, name: 1 } });\n\t\t\t// this should exist since the event is fired from withing the room (e.g the user sent a message)\n\t\t\tif (!sub) {\n\t\t\t\tthrow new Error('Mention bot - Failed to retrieve room information');\n\t\t\t}\n\n\t\t\tconst roomPath = roomCoordinator.getRouteLink(sub.t, { rid: sub.rid, name: sub.name });\n\t\t\tif (!roomPath) {\n\t\t\t\tthrow new Error('Mention bot - Failed to retrieve path to room');\n\t\t\t}\n\n\t\t\tconst messageText = i18n.t('Youre_not_a_part_of__channel__and_I_mentioned_you_there', {\n\t\t\t\tchannel: `#${sub.name}`,\n\t\t\t\tlng: payload.user.language,\n\t\t\t});\n\n\t\t\tconst link = new URL(Meteor.absoluteUrl(roomPath));\n\t\t\tlink.searchParams.set('msg', message._id);\n\t\t\tconst text = `[ ](${link.toString()})\\n${messageText}`;\n\n\t\t\t// forwards message to all DMs\n\t\t\tawait processWebhookMessage(\n\t\t\t\t{\n\t\t\t\t\troomId: mentions.map(({ _id }) => _id),\n\t\t\t\t\ttext,\n\t\t\t\t},\n\t\t\t\tpayload.user,\n\t\t\t);\n\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', payload.user._id, payload.room, {\n\t\t\t\tmsg: i18n.t('You_mentioned___mentions__but_theyre_not_in_this_room_You_let_them_know_via_dm', {\n\t\t\t\t\tmentions: joinedUsernames,\n\t\t\t\t\tlng: payload.user.language,\n\t\t\t\t}),\n\t\t\t\ttmid: message.tmid,\n\t\t\t\t_id: payload.message,\n\t\t\t\tmentions,\n\t\t\t});\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f4b24326897af9f3ff46d764d0eb940440d662f4"}
