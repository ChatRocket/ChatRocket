{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/lib/VisitorInactivityMonitor.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/lib/VisitorInactivityMonitor.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/lib/VisitorInactivityMonitor.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/lib/VisitorInactivityMonitor.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/lib/VisitorInactivityMonitor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAElE,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE7C,OAAO,EAAE,gBAAgB,EAAE,aAAa,EAAE,kBAAkB,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAEjG,OAAO,EAAE,uBAAuB,EAAE,MAAM,kDAAkD,CAAC;AAC3F,OAAO,EAAE,QAAQ,EAAE,MAAM,sDAAsD,CAAC;AAChF,OAAO,EAAE,QAAQ,EAAE,MAAM,oCAAoC,CAAC;AAC9D,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,IAAI,EAAE,MAAM,gCAAgC,CAAC;AACtD,OAAO,EAAE,eAAe,EAAE,MAAM,UAAU,CAAC;AAE3C,MAAM,uBAAuB,GAAG,CAAC,MAAW,EAAmC,EAAE,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,UAAU,CAAC;AAEzH,MAAM,OAAO,wBAAwB;IACpC,QAAQ,CAAU;IAElB,KAAK,CAAS;IAEd,YAAY,CAAsB;IAElC,IAAI,CAAQ;IAEZ,MAAM,CAAa;IAEX,SAAS,GAAG,QAAQ,CAAC;IAE7B;QACC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,wCAAwC,CAAC;QACtD,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,KAAK,CAAC,KAAK;QACV,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC9B,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAClD,IAAI,GAAG,EAAE,CAAC;YACT,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QACjB,CAAC;IACF,CAAC;IAEO,KAAK,CAAC,gBAAgB;QAC7B,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;YACrC,OAAO;QACR,CAAC;QACD,MAAM,WAAW,GAAG,WAAW,CAAC;QAChC,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;QAC3F,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACrC,CAAC;IAED,KAAK,CAAC,IAAI;QACT,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC;YACvB,OAAO;QACR,CAAC;QACD,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAExC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACrC,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAED,uBAAuB;QACtB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,oCAAoC,CAAC,YAAoB;QAC9D,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC;YACzC,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC5C,CAAC;QACD,MAAM,UAAU,GAAG,MAAM,kBAAkB,CAAC,WAAW,CACtD,YAAY,EACZ,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,gCAAgC,EAAE,CAAC,EAAE,EAAE,CAC/D,CAAC;QACF,IAAI,CAAC,UAAU,EAAE,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,YAAY,YAAY,CAAC,CAAC;YAC1D,OAAO;QACR,CAAC;QACD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,gCAAgC,CAAC,CAAC;QACnF,OAAO,UAAU,CAAC,gCAAgC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,IAAsB;QACtC,IAAI,OAAO,GAAG,MAAM,IAAI,CAAC,gCAAgC,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC/E,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACvB,OAAO,GAAG,CAAC,MAAM,IAAI,CAAC,oCAAoC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,OAAO,CAAC;QAC3F,CAAC;QACD,MAAM,QAAQ,CAAC,SAAS,CAAC;YACxB,OAAO;YACP,IAAI;YACJ,IAAI,EAAE,IAAI,CAAC,IAAI;SACf,CAAC,CAAC;QACH,KAAK,uBAAuB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,IAAsB;QAC3C,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,gCAAgC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAEnF,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC;YACvC,oBAAoB,CAAC,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC;YAC9D,aAAa,CAAC,wCAAwC,CAAC,IAAI,CAAC,GAAG,CAAC;SAChE,CAAC,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC7E,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,4BAA4B,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;YAC1E,MAAM,IAAI,KAAK,CAAC,iEAAiE,CAAC,CAAC;QACpF,CAAC;QAED,KAAK,uBAAuB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACxC,CAAC;IAED,KAAK,CAAC,oBAAoB;QACzB,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAS,iCAAiC,CAAC,CAAC;QACvE,IAAI,CAAC,MAAM,IAAI,MAAM,KAAK,MAAM,EAAE,CAAC;YAClC,OAAO;QACR,CAAC;QAED,MAAM,UAAU,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,gCAAgC,EAAE,EAAE,CAAC,CAAC;QAC7E,MAAM,QAAQ,GAAoB,EAAE,CAAC;QACrC,MAAM,aAAa,CAAC,sBAAsB,CAAC,IAAI,IAAI,EAAE,EAAE,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACnF,QAAQ,MAAM,EAAE,CAAC;gBAChB,KAAK,OAAO,CAAC,CAAC,CAAC;oBACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;oBAC7C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;oBACrC,MAAM;gBACP,CAAC;gBACD,KAAK,SAAS,CAAC,CAAC,CAAC;oBAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC;oBACrD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC1C,MAAM;gBACP,CAAC;YACF,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAElD,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAE3E,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;YACnB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,sCAAsC,MAAM,CAAC,MAAM,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC5G,CAAC;QAED,IAAI,CAAC,uBAAuB,EAAE,CAAC;IAChC,CAAC;IAEO,KAAK,CAAC,gCAAgC,CAAC,iBAAsC,EAAE,SAAiB;QACvG,MAAM,OAAO,GAAG,MAAM,gBAAgB,CAAC,kBAAkB,CAA8C,SAAS,EAAE;YACjH,UAAU,EAAE;gBACX,IAAI,EAAE,CAAC;gBACP,QAAQ,EAAE,CAAC;aACX;SACD,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;gBACjB,GAAG,EAAE,mEAAmE;gBACxE,SAAS;aACT,CAAC,CAAC;YACH,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC1C,CAAC;QAED,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAS,qCAAqC,CAAC,CAAC;QAE5E,MAAM,KAAK,GAAG,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC;QAE/C,IAAI,iBAAiB,KAAK,SAAS,EAAE,CAAC;YACrC,OAAO,IAAI,CAAC,CAAC,CAAC,uCAAuC,EAAE;gBACtD,KAAK;gBACL,OAAO;aACP,CAAC,CAAC;QACJ,CAAC;QAED,OAAO,CACN,QAAQ,CAAC,GAAG,CAAS,gDAAgD,CAAC;YACtE,IAAI,CAAC,CAAC,CAAC,2CAA2C,EAAE;gBACnD,KAAK;gBACL,OAAO;aACP,CAAC,CACF,CAAC;IACH,CAAC;CACD","sourcesContent":["import { OmnichannelEEService } from '@rocket.chat/core-services';\nimport type { ILivechatVisitor, IOmnichannelRoom, IUser, ILivechatDepartment } from '@rocket.chat/core-typings';\nimport { cronJobs } from '@rocket.chat/cron';\nimport type { MainLogger } from '@rocket.chat/logger';\nimport { LivechatVisitors, LivechatRooms, LivechatDepartment, Users } from '@rocket.chat/models';\n\nimport { notifyOnRoomChangedById } from '../../../../../app/lib/server/lib/notifyListener';\nimport { Livechat } from '../../../../../app/livechat/server/lib/LivechatTyped';\nimport { settings } from '../../../../../app/settings/server';\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { i18n } from '../../../../../server/lib/i18n';\nimport { schedulerLogger } from './logger';\n\nconst isPromiseRejectedResult = (result: any): result is PromiseRejectedResult => result && result.status === 'rejected';\n\nexport class VisitorInactivityMonitor {\n\t_started: boolean;\n\n\t_name: string;\n\n\tmessageCache: Map<string, string>;\n\n\tuser: IUser;\n\n\tlogger: MainLogger;\n\n\tprivate scheduler = cronJobs;\n\n\tconstructor() {\n\t\tthis._started = false;\n\t\tthis._name = 'Omnichannel Visitor Inactivity Monitor';\n\t\tthis.messageCache = new Map();\n\t\tthis.logger = schedulerLogger.section(this._name);\n\t}\n\n\tasync start() {\n\t\tawait this._startMonitoring();\n\t\tthis._initializeMessageCache();\n\t\tconst cat = await Users.findOneById('rocket.cat');\n\t\tif (cat) {\n\t\t\tthis.user = cat;\n\t\t}\n\t}\n\n\tprivate async _startMonitoring() {\n\t\tif (this.isRunning()) {\n\t\t\tthis.logger.debug('Already running');\n\t\t\treturn;\n\t\t}\n\t\tconst everyMinute = '* * * * *';\n\t\tawait this.scheduler.add(this._name, everyMinute, async () => this.handleAbandonedRooms());\n\t\tthis._started = true;\n\t\tthis.logger.info('Service started');\n\t}\n\n\tasync stop() {\n\t\tif (!this.isRunning()) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.scheduler.remove(this._name);\n\n\t\tthis._started = false;\n\t\tthis.logger.info('Service stopped');\n\t}\n\n\tisRunning() {\n\t\treturn this._started;\n\t}\n\n\t_initializeMessageCache() {\n\t\tthis.messageCache.clear();\n\t}\n\n\tasync _getDepartmentAbandonedCustomMessage(departmentId: string) {\n\t\tif (this.messageCache.has(departmentId)) {\n\t\t\treturn this.messageCache.get(departmentId);\n\t\t}\n\t\tconst department = await LivechatDepartment.findOneById<Pick<ILivechatDepartment, '_id' | 'abandonedRoomsCloseCustomMessage'>>(\n\t\t\tdepartmentId,\n\t\t\t{ projection: { _id: 1, abandonedRoomsCloseCustomMessage: 1 } },\n\t\t);\n\t\tif (!department) {\n\t\t\tthis.logger.error(`Department ${departmentId} not found`);\n\t\t\treturn;\n\t\t}\n\t\tthis.messageCache.set(department._id, department.abandonedRoomsCloseCustomMessage);\n\t\treturn department.abandonedRoomsCloseCustomMessage;\n\t}\n\n\tasync closeRooms(room: IOmnichannelRoom) {\n\t\tlet comment = await this.getDefaultAbandonedCustomMessage('close', room.v._id);\n\t\tif (room.departmentId) {\n\t\t\tcomment = (await this._getDepartmentAbandonedCustomMessage(room.departmentId)) || comment;\n\t\t}\n\t\tawait Livechat.closeRoom({\n\t\t\tcomment,\n\t\t\troom,\n\t\t\tuser: this.user,\n\t\t});\n\t\tvoid notifyOnRoomChangedById(room._id);\n\t\tthis.logger.info(`Room ${room._id} closed`);\n\t}\n\n\tasync placeRoomOnHold(room: IOmnichannelRoom) {\n\t\tconst comment = await this.getDefaultAbandonedCustomMessage('on-hold', room.v._id);\n\n\t\tconst result = await Promise.allSettled([\n\t\t\tOmnichannelEEService.placeRoomOnHold(room, comment, this.user),\n\t\t\tLivechatRooms.unsetPredictedVisitorAbandonmentByRoomId(room._id),\n\t\t]);\n\t\tconst rejected = result.filter(isPromiseRejectedResult).map((r) => r.reason);\n\t\tif (rejected.length) {\n\t\t\tthis.logger.error({ msg: 'Error placing room on hold', error: rejected });\n\t\t\tthrow new Error('Error placing room on hold. Please check logs for more details.');\n\t\t}\n\n\t\tvoid notifyOnRoomChangedById(room._id);\n\t}\n\n\tasync handleAbandonedRooms() {\n\t\tconst action = settings.get<string>('Livechat_abandoned_rooms_action');\n\t\tif (!action || action === 'none') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n\t\tconst promises: Promise<void>[] = [];\n\t\tawait LivechatRooms.findAbandonedOpenRooms(new Date(), extraQuery).forEach((room) => {\n\t\t\tswitch (action) {\n\t\t\t\tcase 'close': {\n\t\t\t\t\tthis.logger.info(`Closing room ${room._id}`);\n\t\t\t\t\tpromises.push(this.closeRooms(room));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'on-hold': {\n\t\t\t\t\tthis.logger.info(`Placing room ${room._id} on hold`);\n\t\t\t\t\tpromises.push(this.placeRoomOnHold(room));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst result = await Promise.allSettled(promises);\n\n\t\tconst errors = result.filter(isPromiseRejectedResult).map((r) => r.reason);\n\n\t\tif (errors.length) {\n\t\t\tthis.logger.error({ msg: `Error while removing priority from ${errors.length} rooms`, reason: errors[0] });\n\t\t}\n\n\t\tthis._initializeMessageCache();\n\t}\n\n\tprivate async getDefaultAbandonedCustomMessage(abandonmentAction: 'close' | 'on-hold', visitorId: string) {\n\t\tconst visitor = await LivechatVisitors.findOneEnabledById<Pick<ILivechatVisitor, 'name' | 'username'>>(visitorId, {\n\t\t\tprojection: {\n\t\t\t\tname: 1,\n\t\t\t\tusername: 1,\n\t\t\t},\n\t\t});\n\t\tif (!visitor) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'Error getting default abandoned custom message: visitor not found',\n\t\t\t\tvisitorId,\n\t\t\t});\n\t\t\tthrow new Error('error-invalid_visitor');\n\t\t}\n\n\t\tconst timeout = settings.get<number>('Livechat_visitor_inactivity_timeout');\n\n\t\tconst guest = visitor.name || visitor.username;\n\n\t\tif (abandonmentAction === 'on-hold') {\n\t\t\treturn i18n.t('Omnichannel_On_Hold_due_to_inactivity', {\n\t\t\t\tguest,\n\t\t\t\ttimeout,\n\t\t\t});\n\t\t}\n\n\t\treturn (\n\t\t\tsettings.get<string>('Livechat_abandoned_rooms_closed_custom_message') ||\n\t\t\ti18n.t('Omnichannel_chat_closed_due_to_inactivity', {\n\t\t\t\tguest,\n\t\t\t\ttimeout,\n\t\t\t})\n\t\t);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/lib/VisitorInactivityMonitor.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/lib/VisitorInactivityMonitor.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/lib/VisitorInactivityMonitor.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/lib/VisitorInactivityMonitor.ts"],"names":[],"mappings":"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","sourcesContent":["import { OmnichannelEEService } from '@rocket.chat/core-services';\nimport type { ILivechatVisitor, IOmnichannelRoom, IUser, ILivechatDepartment } from '@rocket.chat/core-typings';\nimport { cronJobs } from '@rocket.chat/cron';\nimport type { MainLogger } from '@rocket.chat/logger';\nimport { LivechatVisitors, LivechatRooms, LivechatDepartment, Users } from '@rocket.chat/models';\n\nimport { notifyOnRoomChangedById } from '../../../../../app/lib/server/lib/notifyListener';\nimport { Livechat } from '../../../../../app/livechat/server/lib/LivechatTyped';\nimport { settings } from '../../../../../app/settings/server';\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { i18n } from '../../../../../server/lib/i18n';\nimport { schedulerLogger } from './logger';\n\nconst isPromiseRejectedResult = (result: any): result is PromiseRejectedResult => result && result.status === 'rejected';\n\nexport class VisitorInactivityMonitor {\n\t_started: boolean;\n\n\t_name: string;\n\n\tmessageCache: Map<string, string>;\n\n\tuser: IUser;\n\n\tlogger: MainLogger;\n\n\tprivate scheduler = cronJobs;\n\n\tconstructor() {\n\t\tthis._started = false;\n\t\tthis._name = 'Omnichannel Visitor Inactivity Monitor';\n\t\tthis.messageCache = new Map();\n\t\tthis.logger = schedulerLogger.section(this._name);\n\t}\n\n\tasync start() {\n\t\tawait this._startMonitoring();\n\t\tthis._initializeMessageCache();\n\t\tconst cat = await Users.findOneById('rocket.cat');\n\t\tif (cat) {\n\t\t\tthis.user = cat;\n\t\t}\n\t}\n\n\tprivate async _startMonitoring() {\n\t\tif (this.isRunning()) {\n\t\t\tthis.logger.debug('Already running');\n\t\t\treturn;\n\t\t}\n\t\tconst everyMinute = '* * * * *';\n\t\tawait this.scheduler.add(this._name, everyMinute, async () => this.handleAbandonedRooms());\n\t\tthis._started = true;\n\t\tthis.logger.info('Service started');\n\t}\n\n\tasync stop() {\n\t\tif (!this.isRunning()) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.scheduler.remove(this._name);\n\n\t\tthis._started = false;\n\t\tthis.logger.info('Service stopped');\n\t}\n\n\tisRunning() {\n\t\treturn this._started;\n\t}\n\n\t_initializeMessageCache() {\n\t\tthis.messageCache.clear();\n\t}\n\n\tasync _getDepartmentAbandonedCustomMessage(departmentId: string) {\n\t\tif (this.messageCache.has(departmentId)) {\n\t\t\treturn this.messageCache.get(departmentId);\n\t\t}\n\t\tconst department = await LivechatDepartment.findOneById<Pick<ILivechatDepartment, '_id' | 'abandonedRoomsCloseCustomMessage'>>(\n\t\t\tdepartmentId,\n\t\t\t{ projection: { _id: 1, abandonedRoomsCloseCustomMessage: 1 } },\n\t\t);\n\t\tif (!department) {\n\t\t\tthis.logger.error(`Department ${departmentId} not found`);\n\t\t\treturn;\n\t\t}\n\t\tthis.messageCache.set(department._id, department.abandonedRoomsCloseCustomMessage);\n\t\treturn department.abandonedRoomsCloseCustomMessage;\n\t}\n\n\tasync closeRooms(room: IOmnichannelRoom) {\n\t\tlet comment = await this.getDefaultAbandonedCustomMessage('close', room.v._id);\n\t\tif (room.departmentId) {\n\t\t\tcomment = (await this._getDepartmentAbandonedCustomMessage(room.departmentId)) || comment;\n\t\t}\n\t\tawait Livechat.closeRoom({\n\t\t\tcomment,\n\t\t\troom,\n\t\t\tuser: this.user,\n\t\t});\n\t\tvoid notifyOnRoomChangedById(room._id);\n\t\tthis.logger.info(`Room ${room._id} closed`);\n\t}\n\n\tasync placeRoomOnHold(room: IOmnichannelRoom) {\n\t\tconst comment = await this.getDefaultAbandonedCustomMessage('on-hold', room.v._id);\n\n\t\tconst result = await Promise.allSettled([\n\t\t\tOmnichannelEEService.placeRoomOnHold(room, comment, this.user),\n\t\t\tLivechatRooms.unsetPredictedVisitorAbandonmentByRoomId(room._id),\n\t\t]);\n\t\tconst rejected = result.filter(isPromiseRejectedResult).map((r) => r.reason);\n\t\tif (rejected.length) {\n\t\t\tthis.logger.error({ msg: 'Error placing room on hold', error: rejected });\n\t\t\tthrow new Error('Error placing room on hold. Please check logs for more details.');\n\t\t}\n\n\t\tvoid notifyOnRoomChangedById(room._id);\n\t}\n\n\tasync handleAbandonedRooms() {\n\t\tconst action = settings.get<string>('Livechat_abandoned_rooms_action');\n\t\tif (!action || action === 'none') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n\t\tconst promises: Promise<void>[] = [];\n\t\tawait LivechatRooms.findAbandonedOpenRooms(new Date(), extraQuery).forEach((room) => {\n\t\t\tswitch (action) {\n\t\t\t\tcase 'close': {\n\t\t\t\t\tthis.logger.info(`Closing room ${room._id}`);\n\t\t\t\t\tpromises.push(this.closeRooms(room));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'on-hold': {\n\t\t\t\t\tthis.logger.info(`Placing room ${room._id} on hold`);\n\t\t\t\t\tpromises.push(this.placeRoomOnHold(room));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst result = await Promise.allSettled(promises);\n\n\t\tconst errors = result.filter(isPromiseRejectedResult).map((r) => r.reason);\n\n\t\tif (errors.length) {\n\t\t\tthis.logger.error({ msg: `Error while removing priority from ${errors.length} rooms`, reason: errors[0] });\n\t\t}\n\n\t\tthis._initializeMessageCache();\n\t}\n\n\tprivate async getDefaultAbandonedCustomMessage(abandonmentAction: 'close' | 'on-hold', visitorId: string) {\n\t\tconst visitor = await LivechatVisitors.findOneEnabledById<Pick<ILivechatVisitor, 'name' | 'username'>>(visitorId, {\n\t\t\tprojection: {\n\t\t\t\tname: 1,\n\t\t\t\tusername: 1,\n\t\t\t},\n\t\t});\n\t\tif (!visitor) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'Error getting default abandoned custom message: visitor not found',\n\t\t\t\tvisitorId,\n\t\t\t});\n\t\t\tthrow new Error('error-invalid_visitor');\n\t\t}\n\n\t\tconst timeout = settings.get<number>('Livechat_visitor_inactivity_timeout');\n\n\t\tconst guest = visitor.name || visitor.username;\n\n\t\tif (abandonmentAction === 'on-hold') {\n\t\t\treturn i18n.t('Omnichannel_On_Hold_due_to_inactivity', {\n\t\t\t\tguest,\n\t\t\t\ttimeout,\n\t\t\t});\n\t\t}\n\n\t\treturn (\n\t\t\tsettings.get<string>('Livechat_abandoned_rooms_closed_custom_message') ||\n\t\t\ti18n.t('Omnichannel_chat_closed_due_to_inactivity', {\n\t\t\t\tguest,\n\t\t\t\ttimeout,\n\t\t\t})\n\t\t);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      VisitorInactivityMonitor: () => VisitorInactivityMonitor\n    });\n    let OmnichannelEEService;\n    module.link(\"@rocket.chat/core-services\", {\n      OmnichannelEEService(v) {\n        OmnichannelEEService = v;\n      }\n    }, 0);\n    let cronJobs;\n    module.link(\"@rocket.chat/cron\", {\n      cronJobs(v) {\n        cronJobs = v;\n      }\n    }, 1);\n    let LivechatVisitors, LivechatRooms, LivechatDepartment, Users;\n    module.link(\"@rocket.chat/models\", {\n      LivechatVisitors(v) {\n        LivechatVisitors = v;\n      },\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      },\n      LivechatDepartment(v) {\n        LivechatDepartment = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 2);\n    let notifyOnRoomChangedById;\n    module.link(\"../../../../../app/lib/server/lib/notifyListener\", {\n      notifyOnRoomChangedById(v) {\n        notifyOnRoomChangedById = v;\n      }\n    }, 3);\n    let Livechat;\n    module.link(\"../../../../../app/livechat/server/lib/LivechatTyped\", {\n      Livechat(v) {\n        Livechat = v;\n      }\n    }, 4);\n    let settings;\n    module.link(\"../../../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 5);\n    let callbacks;\n    module.link(\"../../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 6);\n    let i18n;\n    module.link(\"../../../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 7);\n    let schedulerLogger;\n    module.link(\"./logger\", {\n      schedulerLogger(v) {\n        schedulerLogger = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const isPromiseRejectedResult = result => result && result.status === 'rejected';\n    class VisitorInactivityMonitor {\n      constructor() {\n        this._started = void 0;\n        this._name = void 0;\n        this.messageCache = void 0;\n        this.user = void 0;\n        this.logger = void 0;\n        this.scheduler = cronJobs;\n        this._started = false;\n        this._name = 'Omnichannel Visitor Inactivity Monitor';\n        this.messageCache = new Map();\n        this.logger = schedulerLogger.section(this._name);\n      }\n      async start() {\n        await this._startMonitoring();\n        this._initializeMessageCache();\n        const cat = await Users.findOneById('rocket.cat');\n        if (cat) {\n          this.user = cat;\n        }\n      }\n      async _startMonitoring() {\n        if (this.isRunning()) {\n          this.logger.debug('Already running');\n          return;\n        }\n        const everyMinute = '* * * * *';\n        await this.scheduler.add(this._name, everyMinute, async () => this.handleAbandonedRooms());\n        this._started = true;\n        this.logger.info('Service started');\n      }\n      async stop() {\n        if (!this.isRunning()) {\n          return;\n        }\n        await this.scheduler.remove(this._name);\n        this._started = false;\n        this.logger.info('Service stopped');\n      }\n      isRunning() {\n        return this._started;\n      }\n      _initializeMessageCache() {\n        this.messageCache.clear();\n      }\n      async _getDepartmentAbandonedCustomMessage(departmentId) {\n        if (this.messageCache.has(departmentId)) {\n          return this.messageCache.get(departmentId);\n        }\n        const department = await LivechatDepartment.findOneById(departmentId, {\n          projection: {\n            _id: 1,\n            abandonedRoomsCloseCustomMessage: 1\n          }\n        });\n        if (!department) {\n          this.logger.error(\"Department \".concat(departmentId, \" not found\"));\n          return;\n        }\n        this.messageCache.set(department._id, department.abandonedRoomsCloseCustomMessage);\n        return department.abandonedRoomsCloseCustomMessage;\n      }\n      async closeRooms(room) {\n        let comment = await this.getDefaultAbandonedCustomMessage('close', room.v._id);\n        if (room.departmentId) {\n          comment = (await this._getDepartmentAbandonedCustomMessage(room.departmentId)) || comment;\n        }\n        await Livechat.closeRoom({\n          comment,\n          room,\n          user: this.user\n        });\n        void notifyOnRoomChangedById(room._id);\n        this.logger.info(\"Room \".concat(room._id, \" closed\"));\n      }\n      async placeRoomOnHold(room) {\n        const comment = await this.getDefaultAbandonedCustomMessage('on-hold', room.v._id);\n        const result = await Promise.allSettled([OmnichannelEEService.placeRoomOnHold(room, comment, this.user), LivechatRooms.unsetPredictedVisitorAbandonmentByRoomId(room._id)]);\n        const rejected = result.filter(isPromiseRejectedResult).map(r => r.reason);\n        if (rejected.length) {\n          this.logger.error({\n            msg: 'Error placing room on hold',\n            error: rejected\n          });\n          throw new Error('Error placing room on hold. Please check logs for more details.');\n        }\n        void notifyOnRoomChangedById(room._id);\n      }\n      async handleAbandonedRooms() {\n        const action = settings.get('Livechat_abandoned_rooms_action');\n        if (!action || action === 'none') {\n          return;\n        }\n        const extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n        const promises = [];\n        await LivechatRooms.findAbandonedOpenRooms(new Date(), extraQuery).forEach(room => {\n          switch (action) {\n            case 'close':\n              {\n                this.logger.info(\"Closing room \".concat(room._id));\n                promises.push(this.closeRooms(room));\n                break;\n              }\n            case 'on-hold':\n              {\n                this.logger.info(\"Placing room \".concat(room._id, \" on hold\"));\n                promises.push(this.placeRoomOnHold(room));\n                break;\n              }\n          }\n        });\n        const result = await Promise.allSettled(promises);\n        const errors = result.filter(isPromiseRejectedResult).map(r => r.reason);\n        if (errors.length) {\n          this.logger.error({\n            msg: \"Error while removing priority from \".concat(errors.length, \" rooms\"),\n            reason: errors[0]\n          });\n        }\n        this._initializeMessageCache();\n      }\n      async getDefaultAbandonedCustomMessage(abandonmentAction, visitorId) {\n        const visitor = await LivechatVisitors.findOneEnabledById(visitorId, {\n          projection: {\n            name: 1,\n            username: 1\n          }\n        });\n        if (!visitor) {\n          this.logger.error({\n            msg: 'Error getting default abandoned custom message: visitor not found',\n            visitorId\n          });\n          throw new Error('error-invalid_visitor');\n        }\n        const timeout = settings.get('Livechat_visitor_inactivity_timeout');\n        const guest = visitor.name || visitor.username;\n        if (abandonmentAction === 'on-hold') {\n          return i18n.t('Omnichannel_On_Hold_due_to_inactivity', {\n            guest,\n            timeout\n          });\n        }\n        return settings.get('Livechat_abandoned_rooms_closed_custom_message') || i18n.t('Omnichannel_chat_closed_due_to_inactivity', {\n          guest,\n          timeout\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","VisitorInactivityMonitor","OmnichannelEEService","link","v","cronJobs","LivechatVisitors","LivechatRooms","LivechatDepartment","Users","notifyOnRoomChangedById","Livechat","settings","callbacks","i18n","schedulerLogger","__reifyWaitForDeps__","isPromiseRejectedResult","result","status","constructor","_started","_name","messageCache","user","logger","scheduler","Map","section","start","_startMonitoring","_initializeMessageCache","cat","findOneById","isRunning","debug","everyMinute","add","handleAbandonedRooms","info","stop","remove","clear","_getDepartmentAbandonedCustomMessage","departmentId","has","get","department","projection","_id","abandonedRoomsCloseCustomMessage","error","concat","set","closeRooms","room","comment","getDefaultAbandonedCustomMessage","closeRoom","placeRoomOnHold","Promise","allSettled","unsetPredictedVisitorAbandonmentByRoomId","rejected","filter","map","r","reason","length","msg","Error","action","extraQuery","run","promises","findAbandonedOpenRooms","Date","forEach","push","errors","abandonmentAction","visitorId","visitor","findOneEnabledById","name","username","timeout","guest","t","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/livechat-enterprise/server/lib/VisitorInactivityMonitor.ts"],"sourcesContent":["import { OmnichannelEEService } from '@rocket.chat/core-services';\nimport type { ILivechatVisitor, IOmnichannelRoom, IUser, ILivechatDepartment } from '@rocket.chat/core-typings';\nimport { cronJobs } from '@rocket.chat/cron';\nimport type { MainLogger } from '@rocket.chat/logger';\nimport { LivechatVisitors, LivechatRooms, LivechatDepartment, Users } from '@rocket.chat/models';\n\nimport { notifyOnRoomChangedById } from '../../../../../app/lib/server/lib/notifyListener';\nimport { Livechat } from '../../../../../app/livechat/server/lib/LivechatTyped';\nimport { settings } from '../../../../../app/settings/server';\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { i18n } from '../../../../../server/lib/i18n';\nimport { schedulerLogger } from './logger';\n\nconst isPromiseRejectedResult = (result: any): result is PromiseRejectedResult => result && result.status === 'rejected';\n\nexport class VisitorInactivityMonitor {\n\t_started: boolean;\n\n\t_name: string;\n\n\tmessageCache: Map<string, string>;\n\n\tuser: IUser;\n\n\tlogger: MainLogger;\n\n\tprivate scheduler = cronJobs;\n\n\tconstructor() {\n\t\tthis._started = false;\n\t\tthis._name = 'Omnichannel Visitor Inactivity Monitor';\n\t\tthis.messageCache = new Map();\n\t\tthis.logger = schedulerLogger.section(this._name);\n\t}\n\n\tasync start() {\n\t\tawait this._startMonitoring();\n\t\tthis._initializeMessageCache();\n\t\tconst cat = await Users.findOneById('rocket.cat');\n\t\tif (cat) {\n\t\t\tthis.user = cat;\n\t\t}\n\t}\n\n\tprivate async _startMonitoring() {\n\t\tif (this.isRunning()) {\n\t\t\tthis.logger.debug('Already running');\n\t\t\treturn;\n\t\t}\n\t\tconst everyMinute = '* * * * *';\n\t\tawait this.scheduler.add(this._name, everyMinute, async () => this.handleAbandonedRooms());\n\t\tthis._started = true;\n\t\tthis.logger.info('Service started');\n\t}\n\n\tasync stop() {\n\t\tif (!this.isRunning()) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.scheduler.remove(this._name);\n\n\t\tthis._started = false;\n\t\tthis.logger.info('Service stopped');\n\t}\n\n\tisRunning() {\n\t\treturn this._started;\n\t}\n\n\t_initializeMessageCache() {\n\t\tthis.messageCache.clear();\n\t}\n\n\tasync _getDepartmentAbandonedCustomMessage(departmentId: string) {\n\t\tif (this.messageCache.has(departmentId)) {\n\t\t\treturn this.messageCache.get(departmentId);\n\t\t}\n\t\tconst department = await LivechatDepartment.findOneById<Pick<ILivechatDepartment, '_id' | 'abandonedRoomsCloseCustomMessage'>>(\n\t\t\tdepartmentId,\n\t\t\t{ projection: { _id: 1, abandonedRoomsCloseCustomMessage: 1 } },\n\t\t);\n\t\tif (!department) {\n\t\t\tthis.logger.error(`Department ${departmentId} not found`);\n\t\t\treturn;\n\t\t}\n\t\tthis.messageCache.set(department._id, department.abandonedRoomsCloseCustomMessage);\n\t\treturn department.abandonedRoomsCloseCustomMessage;\n\t}\n\n\tasync closeRooms(room: IOmnichannelRoom) {\n\t\tlet comment = await this.getDefaultAbandonedCustomMessage('close', room.v._id);\n\t\tif (room.departmentId) {\n\t\t\tcomment = (await this._getDepartmentAbandonedCustomMessage(room.departmentId)) || comment;\n\t\t}\n\t\tawait Livechat.closeRoom({\n\t\t\tcomment,\n\t\t\troom,\n\t\t\tuser: this.user,\n\t\t});\n\t\tvoid notifyOnRoomChangedById(room._id);\n\t\tthis.logger.info(`Room ${room._id} closed`);\n\t}\n\n\tasync placeRoomOnHold(room: IOmnichannelRoom) {\n\t\tconst comment = await this.getDefaultAbandonedCustomMessage('on-hold', room.v._id);\n\n\t\tconst result = await Promise.allSettled([\n\t\t\tOmnichannelEEService.placeRoomOnHold(room, comment, this.user),\n\t\t\tLivechatRooms.unsetPredictedVisitorAbandonmentByRoomId(room._id),\n\t\t]);\n\t\tconst rejected = result.filter(isPromiseRejectedResult).map((r) => r.reason);\n\t\tif (rejected.length) {\n\t\t\tthis.logger.error({ msg: 'Error placing room on hold', error: rejected });\n\t\t\tthrow new Error('Error placing room on hold. Please check logs for more details.');\n\t\t}\n\n\t\tvoid notifyOnRoomChangedById(room._id);\n\t}\n\n\tasync handleAbandonedRooms() {\n\t\tconst action = settings.get<string>('Livechat_abandoned_rooms_action');\n\t\tif (!action || action === 'none') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n\t\tconst promises: Promise<void>[] = [];\n\t\tawait LivechatRooms.findAbandonedOpenRooms(new Date(), extraQuery).forEach((room) => {\n\t\t\tswitch (action) {\n\t\t\t\tcase 'close': {\n\t\t\t\t\tthis.logger.info(`Closing room ${room._id}`);\n\t\t\t\t\tpromises.push(this.closeRooms(room));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'on-hold': {\n\t\t\t\t\tthis.logger.info(`Placing room ${room._id} on hold`);\n\t\t\t\t\tpromises.push(this.placeRoomOnHold(room));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst result = await Promise.allSettled(promises);\n\n\t\tconst errors = result.filter(isPromiseRejectedResult).map((r) => r.reason);\n\n\t\tif (errors.length) {\n\t\t\tthis.logger.error({ msg: `Error while removing priority from ${errors.length} rooms`, reason: errors[0] });\n\t\t}\n\n\t\tthis._initializeMessageCache();\n\t}\n\n\tprivate async getDefaultAbandonedCustomMessage(abandonmentAction: 'close' | 'on-hold', visitorId: string) {\n\t\tconst visitor = await LivechatVisitors.findOneEnabledById<Pick<ILivechatVisitor, 'name' | 'username'>>(visitorId, {\n\t\t\tprojection: {\n\t\t\t\tname: 1,\n\t\t\t\tusername: 1,\n\t\t\t},\n\t\t});\n\t\tif (!visitor) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'Error getting default abandoned custom message: visitor not found',\n\t\t\t\tvisitorId,\n\t\t\t});\n\t\t\tthrow new Error('error-invalid_visitor');\n\t\t}\n\n\t\tconst timeout = settings.get<number>('Livechat_visitor_inactivity_timeout');\n\n\t\tconst guest = visitor.name || visitor.username;\n\n\t\tif (abandonmentAction === 'on-hold') {\n\t\t\treturn i18n.t('Omnichannel_On_Hold_due_to_inactivity', {\n\t\t\t\tguest,\n\t\t\t\ttimeout,\n\t\t\t});\n\t\t}\n\n\t\treturn (\n\t\t\tsettings.get<string>('Livechat_abandoned_rooms_closed_custom_message') ||\n\t\t\ti18n.t('Omnichannel_chat_closed_due_to_inactivity', {\n\t\t\t\tguest,\n\t\t\t\ttimeout,\n\t\t\t})\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"167a29c78b2b2d9092c8ad417b8aea343ae207a3"}
