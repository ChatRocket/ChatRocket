{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/startup/e2e.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/startup/e2e.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/startup/e2e.ts","inputSourceMap":{"version":3,"file":"client/startup/e2e.ts","sourceRoot":"","sources":["client/startup/e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { isE2EEPinnedMessage } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { E2EEState } from '../../app/e2e/client/E2EEState';\nimport { e2e } from '../../app/e2e/client/rocketchat.e2e';\nimport { MentionsParser } from '../../app/mentions/lib/MentionsParser';\nimport { ChatRoom } from '../../app/models/client';\nimport { settings } from '../../app/settings/client';\nimport { onClientBeforeSendMessage } from '../lib/onClientBeforeSendMessage';\nimport { onClientMessageReceived } from '../lib/onClientMessageReceived';\nimport { isLayoutEmbedded } from '../lib/utils/isLayoutEmbedded';\nimport { waitUntilFind } from '../lib/utils/waitUntilFind';\nimport { router } from '../providers/RouterProvider';\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tif (!Meteor.userId()) {\n\t\t\te2e.log('Not logged in');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!window.crypto) {\n\t\t\te2e.error('No crypto support');\n\t\t\treturn;\n\t\t}\n\n\t\tconst enabled = settings.get('E2E_Enable');\n\t\t// we don't care about the reactivity of this boolean\n\t\tconst adminEmbedded = isLayoutEmbedded() && router.getLocationPathname().startsWith('/admin');\n\n\t\tif (enabled && !adminEmbedded) {\n\t\t\te2e.log('E2E enabled starting client');\n\t\t\te2e.startClient();\n\t\t} else {\n\t\t\te2e.log('E2E disabled');\n\t\t\te2e.setState(E2EEState.DISABLED);\n\t\t\te2e.closeAlert();\n\t\t}\n\t});\n\n\tlet offClientMessageReceived: undefined | (() => void);\n\tlet offClientBeforeSendMessage: undefined | (() => void);\n\tlet listenersAttached = false;\n\n\tTracker.autorun(() => {\n\t\tif (!e2e.isReady()) {\n\t\t\te2e.log('Not ready');\n\t\t\toffClientMessageReceived?.();\n\t\t\toffClientBeforeSendMessage?.();\n\t\t\tlistenersAttached = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (listenersAttached) {\n\t\t\te2e.log('Listeners already attached');\n\t\t\treturn;\n\t\t}\n\n\t\toffClientMessageReceived = onClientMessageReceived.use(async (msg: IMessage) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(msg.rid);\n\t\t\tif (!e2eRoom?.shouldConvertReceivedMessages()) {\n\t\t\t\treturn msg;\n\t\t\t}\n\n\t\t\tif (isE2EEPinnedMessage(msg)) {\n\t\t\t\treturn e2e.decryptPinnedMessage(msg);\n\t\t\t}\n\n\t\t\treturn e2e.decryptMessage(msg);\n\t\t});\n\n\t\t// Encrypt messages before sending\n\t\toffClientBeforeSendMessage = onClientBeforeSendMessage.use(async (message) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(message.rid);\n\n\t\t\tif (!e2eRoom) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\tconst subscription = await waitUntilFind(() => ChatRoom.findOne({ _id: message.rid }));\n\n\t\t\tsubscription.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t\tconst shouldConvertSentMessages = await e2eRoom.shouldConvertSentMessages(message);\n\n\t\t\tif (!shouldConvertSentMessages) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\tconst mentionsEnabled = settings.get<boolean>('E2E_Enabled_Mentions');\n\n\t\t\tif (mentionsEnabled) {\n\t\t\t\tconst me = Meteor.user()?.username || '';\n\t\t\t\tconst pattern = settings.get('UTF8_User_Names_Validation');\n\t\t\t\tconst useRealName = settings.get('UI_Use_Real_Name');\n\n\t\t\t\tconst mentions = new MentionsParser({\n\t\t\t\t\tpattern: () => pattern,\n\t\t\t\t\tuseRealName: () => useRealName,\n\t\t\t\t\tme: () => me,\n\t\t\t\t});\n\n\t\t\t\tconst e2eMentions: IMessage['e2eMentions'] = {\n\t\t\t\t\te2eUserMentions: mentions.getUserMentions(message.msg),\n\t\t\t\t\te2eChannelMentions: mentions.getChannelMentions(message.msg),\n\t\t\t\t};\n\n\t\t\t\tmessage.e2eMentions = e2eMentions;\n\t\t\t}\n\n\t\t\t// Should encrypt this message.\n\t\t\treturn e2eRoom.encryptMessage(message);\n\t\t});\n\n\t\tlistenersAttached = true;\n\t\te2e.log('Listeners attached', listenersAttached);\n\t});\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/startup/e2e.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/startup/e2e.ts","inputSourceMap":{"version":3,"file":"client/startup/e2e.ts","sourceRoot":"","sources":["client/startup/e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { isE2EEPinnedMessage } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { E2EEState } from '../../app/e2e/client/E2EEState';\nimport { e2e } from '../../app/e2e/client/rocketchat.e2e';\nimport { MentionsParser } from '../../app/mentions/lib/MentionsParser';\nimport { ChatRoom } from '../../app/models/client';\nimport { settings } from '../../app/settings/client';\nimport { onClientBeforeSendMessage } from '../lib/onClientBeforeSendMessage';\nimport { onClientMessageReceived } from '../lib/onClientMessageReceived';\nimport { isLayoutEmbedded } from '../lib/utils/isLayoutEmbedded';\nimport { waitUntilFind } from '../lib/utils/waitUntilFind';\nimport { router } from '../providers/RouterProvider';\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tif (!Meteor.userId()) {\n\t\t\te2e.log('Not logged in');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!window.crypto) {\n\t\t\te2e.error('No crypto support');\n\t\t\treturn;\n\t\t}\n\n\t\tconst enabled = settings.get('E2E_Enable');\n\t\t// we don't care about the reactivity of this boolean\n\t\tconst adminEmbedded = isLayoutEmbedded() && router.getLocationPathname().startsWith('/admin');\n\n\t\tif (enabled && !adminEmbedded) {\n\t\t\te2e.log('E2E enabled starting client');\n\t\t\te2e.startClient();\n\t\t} else {\n\t\t\te2e.log('E2E disabled');\n\t\t\te2e.setState(E2EEState.DISABLED);\n\t\t\te2e.closeAlert();\n\t\t}\n\t});\n\n\tlet offClientMessageReceived: undefined | (() => void);\n\tlet offClientBeforeSendMessage: undefined | (() => void);\n\tlet listenersAttached = false;\n\n\tTracker.autorun(() => {\n\t\tif (!e2e.isReady()) {\n\t\t\te2e.log('Not ready');\n\t\t\toffClientMessageReceived?.();\n\t\t\toffClientBeforeSendMessage?.();\n\t\t\tlistenersAttached = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (listenersAttached) {\n\t\t\te2e.log('Listeners already attached');\n\t\t\treturn;\n\t\t}\n\n\t\toffClientMessageReceived = onClientMessageReceived.use(async (msg: IMessage) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(msg.rid);\n\t\t\tif (!e2eRoom?.shouldConvertReceivedMessages()) {\n\t\t\t\treturn msg;\n\t\t\t}\n\n\t\t\tif (isE2EEPinnedMessage(msg)) {\n\t\t\t\treturn e2e.decryptPinnedMessage(msg);\n\t\t\t}\n\n\t\t\treturn e2e.decryptMessage(msg);\n\t\t});\n\n\t\t// Encrypt messages before sending\n\t\toffClientBeforeSendMessage = onClientBeforeSendMessage.use(async (message) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(message.rid);\n\n\t\t\tif (!e2eRoom) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\tconst subscription = await waitUntilFind(() => ChatRoom.findOne({ _id: message.rid }));\n\n\t\t\tsubscription.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t\tconst shouldConvertSentMessages = await e2eRoom.shouldConvertSentMessages(message);\n\n\t\t\tif (!shouldConvertSentMessages) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\tconst mentionsEnabled = settings.get<boolean>('E2E_Enabled_Mentions');\n\n\t\t\tif (mentionsEnabled) {\n\t\t\t\tconst me = Meteor.user()?.username || '';\n\t\t\t\tconst pattern = settings.get('UTF8_User_Names_Validation');\n\t\t\t\tconst useRealName = settings.get('UI_Use_Real_Name');\n\n\t\t\t\tconst mentions = new MentionsParser({\n\t\t\t\t\tpattern: () => pattern,\n\t\t\t\t\tuseRealName: () => useRealName,\n\t\t\t\t\tme: () => me,\n\t\t\t\t});\n\n\t\t\t\tconst e2eMentions: IMessage['e2eMentions'] = {\n\t\t\t\t\te2eUserMentions: mentions.getUserMentions(message.msg),\n\t\t\t\t\te2eChannelMentions: mentions.getChannelMentions(message.msg),\n\t\t\t\t};\n\n\t\t\t\tmessage.e2eMentions = e2eMentions;\n\t\t\t}\n\n\t\t\t// Should encrypt this message.\n\t\t\treturn e2eRoom.encryptMessage(message);\n\t\t});\n\n\t\tlistenersAttached = true;\n\t\te2e.log('Listeners attached', listenersAttached);\n\t});\n});\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar isE2EEPinnedMessage;\nmodule.link(\"@rocket.chat/core-typings\", {\n  isE2EEPinnedMessage: function (v) {\n    isE2EEPinnedMessage = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 2);\nvar E2EEState;\nmodule.link(\"../../app/e2e/client/E2EEState\", {\n  E2EEState: function (v) {\n    E2EEState = v;\n  }\n}, 3);\nvar e2e;\nmodule.link(\"../../app/e2e/client/rocketchat.e2e\", {\n  e2e: function (v) {\n    e2e = v;\n  }\n}, 4);\nvar MentionsParser;\nmodule.link(\"../../app/mentions/lib/MentionsParser\", {\n  MentionsParser: function (v) {\n    MentionsParser = v;\n  }\n}, 5);\nvar ChatRoom;\nmodule.link(\"../../app/models/client\", {\n  ChatRoom: function (v) {\n    ChatRoom = v;\n  }\n}, 6);\nvar settings;\nmodule.link(\"../../app/settings/client\", {\n  settings: function (v) {\n    settings = v;\n  }\n}, 7);\nvar onClientBeforeSendMessage;\nmodule.link(\"../lib/onClientBeforeSendMessage\", {\n  onClientBeforeSendMessage: function (v) {\n    onClientBeforeSendMessage = v;\n  }\n}, 8);\nvar onClientMessageReceived;\nmodule.link(\"../lib/onClientMessageReceived\", {\n  onClientMessageReceived: function (v) {\n    onClientMessageReceived = v;\n  }\n}, 9);\nvar isLayoutEmbedded;\nmodule.link(\"../lib/utils/isLayoutEmbedded\", {\n  isLayoutEmbedded: function (v) {\n    isLayoutEmbedded = v;\n  }\n}, 10);\nvar waitUntilFind;\nmodule.link(\"../lib/utils/waitUntilFind\", {\n  waitUntilFind: function (v) {\n    waitUntilFind = v;\n  }\n}, 11);\nvar router;\nmodule.link(\"../providers/RouterProvider\", {\n  router: function (v) {\n    router = v;\n  }\n}, 12);\nMeteor.startup(function () {\n  Tracker.autorun(function () {\n    if (!Meteor.userId()) {\n      e2e.log('Not logged in');\n      return;\n    }\n    if (!window.crypto) {\n      e2e.error('No crypto support');\n      return;\n    }\n    var enabled = settings.get('E2E_Enable');\n    // we don't care about the reactivity of this boolean\n    var adminEmbedded = isLayoutEmbedded() && router.getLocationPathname().startsWith('/admin');\n    if (enabled && !adminEmbedded) {\n      e2e.log('E2E enabled starting client');\n      e2e.startClient();\n    } else {\n      e2e.log('E2E disabled');\n      e2e.setState(E2EEState.DISABLED);\n      e2e.closeAlert();\n    }\n  });\n  var offClientMessageReceived;\n  var offClientBeforeSendMessage;\n  var listenersAttached = false;\n  Tracker.autorun(function () {\n    if (!e2e.isReady()) {\n      var _offClientMessageRece, _offClientBeforeSendM;\n      e2e.log('Not ready');\n      (_offClientMessageRece = offClientMessageReceived) === null || _offClientMessageRece === void 0 ? void 0 : _offClientMessageRece();\n      (_offClientBeforeSendM = offClientBeforeSendMessage) === null || _offClientBeforeSendM === void 0 ? void 0 : _offClientBeforeSendM();\n      listenersAttached = false;\n      return;\n    }\n    if (listenersAttached) {\n      e2e.log('Listeners already attached');\n      return;\n    }\n    offClientMessageReceived = onClientMessageReceived.use(function () {\n      function _callee(msg) {\n        var e2eRoom;\n        return _regeneratorRuntime.async(function () {\n          function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(e2e.getInstanceByRoomId(msg.rid));\n              case 2:\n                e2eRoom = _context.sent;\n                if (e2eRoom !== null && e2eRoom !== void 0 && e2eRoom.shouldConvertReceivedMessages()) {\n                  _context.next = 5;\n                  break;\n                }\n                return _context.abrupt(\"return\", msg);\n              case 5:\n                if (!isE2EEPinnedMessage(msg)) {\n                  _context.next = 7;\n                  break;\n                }\n                return _context.abrupt(\"return\", e2e.decryptPinnedMessage(msg));\n              case 7:\n                return _context.abrupt(\"return\", e2e.decryptMessage(msg));\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n          return _callee$;\n        }(), null, null, null, Promise);\n      }\n      return _callee;\n    }());\n    // Encrypt messages before sending\n    offClientBeforeSendMessage = onClientBeforeSendMessage.use(function () {\n      function _callee2(message) {\n        var e2eRoom, subscription, shouldConvertSentMessages, mentionsEnabled, _Meteor$user, me, pattern, useRealName, mentions, e2eMentions;\n        return _regeneratorRuntime.async(function () {\n          function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(e2e.getInstanceByRoomId(message.rid));\n              case 2:\n                e2eRoom = _context2.sent;\n                if (e2eRoom) {\n                  _context2.next = 5;\n                  break;\n                }\n                return _context2.abrupt(\"return\", message);\n              case 5:\n                _context2.next = 7;\n                return _regeneratorRuntime.awrap(waitUntilFind(function () {\n                  return ChatRoom.findOne({\n                    _id: message.rid\n                  });\n                }));\n              case 7:\n                subscription = _context2.sent;\n                subscription.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n                _context2.next = 11;\n                return _regeneratorRuntime.awrap(e2eRoom.shouldConvertSentMessages(message));\n              case 11:\n                shouldConvertSentMessages = _context2.sent;\n                if (shouldConvertSentMessages) {\n                  _context2.next = 14;\n                  break;\n                }\n                return _context2.abrupt(\"return\", message);\n              case 14:\n                mentionsEnabled = settings.get('E2E_Enabled_Mentions');\n                if (mentionsEnabled) {\n                  me = ((_Meteor$user = Meteor.user()) === null || _Meteor$user === void 0 ? void 0 : _Meteor$user.username) || '';\n                  pattern = settings.get('UTF8_User_Names_Validation');\n                  useRealName = settings.get('UI_Use_Real_Name');\n                  mentions = new MentionsParser({\n                    pattern: function () {\n                      return pattern;\n                    },\n                    useRealName: function () {\n                      return useRealName;\n                    },\n                    me: function () {\n                      return me;\n                    }\n                  });\n                  e2eMentions = {\n                    e2eUserMentions: mentions.getUserMentions(message.msg),\n                    e2eChannelMentions: mentions.getChannelMentions(message.msg)\n                  };\n                  message.e2eMentions = e2eMentions;\n                }\n                // Should encrypt this message.\n                return _context2.abrupt(\"return\", e2eRoom.encryptMessage(message));\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n          return _callee2$;\n        }(), null, null, null, Promise);\n      }\n      return _callee2;\n    }());\n    listenersAttached = true;\n    e2e.log('Listeners attached', listenersAttached);\n  });\n});","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","isE2EEPinnedMessage","Meteor","Tracker","E2EEState","e2e","MentionsParser","ChatRoom","settings","onClientBeforeSendMessage","onClientMessageReceived","isLayoutEmbedded","waitUntilFind","router","startup","autorun","userId","log","window","crypto","error","enabled","get","adminEmbedded","getLocationPathname","startsWith","startClient","setState","DISABLED","closeAlert","offClientMessageReceived","offClientBeforeSendMessage","listenersAttached","isReady","_offClientMessageRece","_offClientBeforeSendM","use","_callee","msg","e2eRoom","async","_callee$","_context","prev","next","awrap","getInstanceByRoomId","rid","sent","shouldConvertReceivedMessages","abrupt","decryptPinnedMessage","decryptMessage","stop","Promise","_callee2","message","subscription","shouldConvertSentMessages","mentionsEnabled","_Meteor$user","me","pattern","useRealName","mentions","e2eMentions","_callee2$","_context2","findOne","_id","encrypted","resume","pause","user","username","e2eUserMentions","getUserMentions","e2eChannelMentions","getChannelMentions","encryptMessage"],"sources":["client/startup/e2e.ts"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { isE2EEPinnedMessage } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { E2EEState } from '../../app/e2e/client/E2EEState';\nimport { e2e } from '../../app/e2e/client/rocketchat.e2e';\nimport { MentionsParser } from '../../app/mentions/lib/MentionsParser';\nimport { ChatRoom } from '../../app/models/client';\nimport { settings } from '../../app/settings/client';\nimport { onClientBeforeSendMessage } from '../lib/onClientBeforeSendMessage';\nimport { onClientMessageReceived } from '../lib/onClientMessageReceived';\nimport { isLayoutEmbedded } from '../lib/utils/isLayoutEmbedded';\nimport { waitUntilFind } from '../lib/utils/waitUntilFind';\nimport { router } from '../providers/RouterProvider';\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tif (!Meteor.userId()) {\n\t\t\te2e.log('Not logged in');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!window.crypto) {\n\t\t\te2e.error('No crypto support');\n\t\t\treturn;\n\t\t}\n\n\t\tconst enabled = settings.get('E2E_Enable');\n\t\t// we don't care about the reactivity of this boolean\n\t\tconst adminEmbedded = isLayoutEmbedded() && router.getLocationPathname().startsWith('/admin');\n\n\t\tif (enabled && !adminEmbedded) {\n\t\t\te2e.log('E2E enabled starting client');\n\t\t\te2e.startClient();\n\t\t} else {\n\t\t\te2e.log('E2E disabled');\n\t\t\te2e.setState(E2EEState.DISABLED);\n\t\t\te2e.closeAlert();\n\t\t}\n\t});\n\n\tlet offClientMessageReceived: undefined | (() => void);\n\tlet offClientBeforeSendMessage: undefined | (() => void);\n\tlet listenersAttached = false;\n\n\tTracker.autorun(() => {\n\t\tif (!e2e.isReady()) {\n\t\t\te2e.log('Not ready');\n\t\t\toffClientMessageReceived?.();\n\t\t\toffClientBeforeSendMessage?.();\n\t\t\tlistenersAttached = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (listenersAttached) {\n\t\t\te2e.log('Listeners already attached');\n\t\t\treturn;\n\t\t}\n\n\t\toffClientMessageReceived = onClientMessageReceived.use(async (msg: IMessage) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(msg.rid);\n\t\t\tif (!e2eRoom?.shouldConvertReceivedMessages()) {\n\t\t\t\treturn msg;\n\t\t\t}\n\n\t\t\tif (isE2EEPinnedMessage(msg)) {\n\t\t\t\treturn e2e.decryptPinnedMessage(msg);\n\t\t\t}\n\n\t\t\treturn e2e.decryptMessage(msg);\n\t\t});\n\n\t\t// Encrypt messages before sending\n\t\toffClientBeforeSendMessage = onClientBeforeSendMessage.use(async (message) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(message.rid);\n\n\t\t\tif (!e2eRoom) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\tconst subscription = await waitUntilFind(() => ChatRoom.findOne({ _id: message.rid }));\n\n\t\t\tsubscription.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t\tconst shouldConvertSentMessages = await e2eRoom.shouldConvertSentMessages(message);\n\n\t\t\tif (!shouldConvertSentMessages) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\tconst mentionsEnabled = settings.get<boolean>('E2E_Enabled_Mentions');\n\n\t\t\tif (mentionsEnabled) {\n\t\t\t\tconst me = Meteor.user()?.username || '';\n\t\t\t\tconst pattern = settings.get('UTF8_User_Names_Validation');\n\t\t\t\tconst useRealName = settings.get('UI_Use_Real_Name');\n\n\t\t\t\tconst mentions = new MentionsParser({\n\t\t\t\t\tpattern: () => pattern,\n\t\t\t\t\tuseRealName: () => useRealName,\n\t\t\t\t\tme: () => me,\n\t\t\t\t});\n\n\t\t\t\tconst e2eMentions: IMessage['e2eMentions'] = {\n\t\t\t\t\te2eUserMentions: mentions.getUserMentions(message.msg),\n\t\t\t\t\te2eChannelMentions: mentions.getChannelMentions(message.msg),\n\t\t\t\t};\n\n\t\t\t\tmessage.e2eMentions = e2eMentions;\n\t\t\t}\n\n\t\t\t// Should encrypt this message.\n\t\t\treturn e2eRoom.encryptMessage(message);\n\t\t});\n\n\t\tlistenersAttached = true;\n\t\te2e.log('Listeners attached', listenersAttached);\n\t});\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"9664aa035907a9f175525f496f11b1f0a4b426da"}
