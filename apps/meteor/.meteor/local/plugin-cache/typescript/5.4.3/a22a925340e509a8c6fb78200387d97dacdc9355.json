{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/settings/misc.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/settings/misc.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/settings/misc.ts","inputSourceMap":{"version":3,"file":"server/settings/misc.ts","sourceRoot":"","sources":["server/settings/misc.ts"],"names":[],"mappings":"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","sourcesContent":["import crypto from 'crypto';\n\nimport { Logger } from '@rocket.chat/logger';\nimport { Settings } from '@rocket.chat/models';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { settingsRegistry, settings } from '../../app/settings/server';\nimport { updateAuditedBySystem } from './lib/auditedSettingUpdates';\n\nconst logger = new Logger('FingerPrint');\n\nconst generateFingerprint = function () {\n\tconst siteUrl = settings.get('Site_Url');\n\tconst dbConnectionString = process.env.MONGO_URL;\n\n\tconst fingerprint = `${siteUrl}${dbConnectionString}`;\n\treturn crypto.createHash('sha256').update(fingerprint).digest('base64');\n};\n\nconst updateFingerprint = async function (fingerprint: string, verified: boolean) {\n\tconst auditedSettingBySystem = updateAuditedBySystem({\n\t\treason: 'updateFingerprint',\n\t});\n\t// No need to call ws listener because current function is called on startup\n\tawait Promise.all([\n\t\tauditedSettingBySystem(Settings.updateValueById, 'Deployment_FingerPrint_Hash', fingerprint),\n\t\tauditedSettingBySystem(Settings.updateValueById, 'Deployment_FingerPrint_Verified', verified),\n\t]);\n};\n\nconst verifyFingerPrint = async function () {\n\tconst DeploymentFingerPrintRecordHash = await Settings.getValueById('Deployment_FingerPrint_Hash');\n\n\tconst fingerprint = generateFingerprint();\n\n\tif (!DeploymentFingerPrintRecordHash) {\n\t\tlogger.info('Generating fingerprint for the first time', fingerprint);\n\t\tawait updateFingerprint(fingerprint, true);\n\t\treturn;\n\t}\n\n\tif (DeploymentFingerPrintRecordHash === fingerprint) {\n\t\treturn;\n\t}\n\n\tif (process.env.AUTO_ACCEPT_FINGERPRINT === 'true') {\n\t\tlogger.info('Updating fingerprint as AUTO_ACCEPT_FINGERPRINT is true', fingerprint);\n\t\tawait updateFingerprint(fingerprint, true);\n\t\treturn;\n\t}\n\n\tlogger.warn('Updating fingerprint as pending for admin verification', fingerprint);\n\tawait updateFingerprint(fingerprint, false);\n};\n\n// Insert server unique id if it doesn't exist\nexport const createMiscSettings = async () => {\n\tawait settingsRegistry.add('uniqueID', process.env.DEPLOYMENT_ID || uuidv4(), {\n\t\tpublic: true,\n\t});\n\n\tawait settingsRegistry.add('Deployment_FingerPrint_Hash', '', {\n\t\tpublic: false,\n\t\treadonly: true,\n\t});\n\n\tawait settingsRegistry.add('Deployment_FingerPrint_Verified', true, {\n\t\ttype: 'boolean',\n\t\tpublic: true,\n\t\treadonly: true,\n\t});\n\n\tsettings.watch('Site_Url', () => {\n\t\tvoid verifyFingerPrint();\n\t});\n\n\tawait settingsRegistry.add('Initial_Channel_Created', false, {\n\t\ttype: 'boolean',\n\t\thidden: true,\n\t});\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/settings/misc.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/settings/misc.ts","inputSourceMap":{"version":3,"file":"server/settings/misc.ts","sourceRoot":"","sources":["server/settings/misc.ts"],"names":[],"mappings":"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","sourcesContent":["import crypto from 'crypto';\n\nimport { Logger } from '@rocket.chat/logger';\nimport { Settings } from '@rocket.chat/models';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { settingsRegistry, settings } from '../../app/settings/server';\nimport { updateAuditedBySystem } from './lib/auditedSettingUpdates';\n\nconst logger = new Logger('FingerPrint');\n\nconst generateFingerprint = function () {\n\tconst siteUrl = settings.get('Site_Url');\n\tconst dbConnectionString = process.env.MONGO_URL;\n\n\tconst fingerprint = `${siteUrl}${dbConnectionString}`;\n\treturn crypto.createHash('sha256').update(fingerprint).digest('base64');\n};\n\nconst updateFingerprint = async function (fingerprint: string, verified: boolean) {\n\tconst auditedSettingBySystem = updateAuditedBySystem({\n\t\treason: 'updateFingerprint',\n\t});\n\t// No need to call ws listener because current function is called on startup\n\tawait Promise.all([\n\t\tauditedSettingBySystem(Settings.updateValueById, 'Deployment_FingerPrint_Hash', fingerprint),\n\t\tauditedSettingBySystem(Settings.updateValueById, 'Deployment_FingerPrint_Verified', verified),\n\t]);\n};\n\nconst verifyFingerPrint = async function () {\n\tconst DeploymentFingerPrintRecordHash = await Settings.getValueById('Deployment_FingerPrint_Hash');\n\n\tconst fingerprint = generateFingerprint();\n\n\tif (!DeploymentFingerPrintRecordHash) {\n\t\tlogger.info('Generating fingerprint for the first time', fingerprint);\n\t\tawait updateFingerprint(fingerprint, true);\n\t\treturn;\n\t}\n\n\tif (DeploymentFingerPrintRecordHash === fingerprint) {\n\t\treturn;\n\t}\n\n\tif (process.env.AUTO_ACCEPT_FINGERPRINT === 'true') {\n\t\tlogger.info('Updating fingerprint as AUTO_ACCEPT_FINGERPRINT is true', fingerprint);\n\t\tawait updateFingerprint(fingerprint, true);\n\t\treturn;\n\t}\n\n\tlogger.warn('Updating fingerprint as pending for admin verification', fingerprint);\n\tawait updateFingerprint(fingerprint, false);\n};\n\n// Insert server unique id if it doesn't exist\nexport const createMiscSettings = async () => {\n\tawait settingsRegistry.add('uniqueID', process.env.DEPLOYMENT_ID || uuidv4(), {\n\t\tpublic: true,\n\t});\n\n\tawait settingsRegistry.add('Deployment_FingerPrint_Hash', '', {\n\t\tpublic: false,\n\t\treadonly: true,\n\t});\n\n\tawait settingsRegistry.add('Deployment_FingerPrint_Verified', true, {\n\t\ttype: 'boolean',\n\t\tpublic: true,\n\t\treadonly: true,\n\t});\n\n\tsettings.watch('Site_Url', () => {\n\t\tvoid verifyFingerPrint();\n\t});\n\n\tawait settingsRegistry.add('Initial_Channel_Created', false, {\n\t\ttype: 'boolean',\n\t\thidden: true,\n\t});\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      createMiscSettings: () => createMiscSettings\n    });\n    let crypto;\n    module.link(\"crypto\", {\n      default(v) {\n        crypto = v;\n      }\n    }, 0);\n    let Logger;\n    module.link(\"@rocket.chat/logger\", {\n      Logger(v) {\n        Logger = v;\n      }\n    }, 1);\n    let Settings;\n    module.link(\"@rocket.chat/models\", {\n      Settings(v) {\n        Settings = v;\n      }\n    }, 2);\n    let uuidv4;\n    module.link(\"uuid\", {\n      v4(v) {\n        uuidv4 = v;\n      }\n    }, 3);\n    let settingsRegistry, settings;\n    module.link(\"../../app/settings/server\", {\n      settingsRegistry(v) {\n        settingsRegistry = v;\n      },\n      settings(v) {\n        settings = v;\n      }\n    }, 4);\n    let updateAuditedBySystem;\n    module.link(\"./lib/auditedSettingUpdates\", {\n      updateAuditedBySystem(v) {\n        updateAuditedBySystem = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const logger = new Logger('FingerPrint');\n    const generateFingerprint = function () {\n      const siteUrl = settings.get('Site_Url');\n      const dbConnectionString = process.env.MONGO_URL;\n      const fingerprint = \"\".concat(siteUrl).concat(dbConnectionString);\n      return crypto.createHash('sha256').update(fingerprint).digest('base64');\n    };\n    const updateFingerprint = async function (fingerprint, verified) {\n      const auditedSettingBySystem = updateAuditedBySystem({\n        reason: 'updateFingerprint'\n      });\n      // No need to call ws listener because current function is called on startup\n      await Promise.all([auditedSettingBySystem(Settings.updateValueById, 'Deployment_FingerPrint_Hash', fingerprint), auditedSettingBySystem(Settings.updateValueById, 'Deployment_FingerPrint_Verified', verified)]);\n    };\n    const verifyFingerPrint = async function () {\n      const DeploymentFingerPrintRecordHash = await Settings.getValueById('Deployment_FingerPrint_Hash');\n      const fingerprint = generateFingerprint();\n      if (!DeploymentFingerPrintRecordHash) {\n        logger.info('Generating fingerprint for the first time', fingerprint);\n        await updateFingerprint(fingerprint, true);\n        return;\n      }\n      if (DeploymentFingerPrintRecordHash === fingerprint) {\n        return;\n      }\n      if (process.env.AUTO_ACCEPT_FINGERPRINT === 'true') {\n        logger.info('Updating fingerprint as AUTO_ACCEPT_FINGERPRINT is true', fingerprint);\n        await updateFingerprint(fingerprint, true);\n        return;\n      }\n      logger.warn('Updating fingerprint as pending for admin verification', fingerprint);\n      await updateFingerprint(fingerprint, false);\n    };\n    // Insert server unique id if it doesn't exist\n    const createMiscSettings = async () => {\n      await settingsRegistry.add('uniqueID', process.env.DEPLOYMENT_ID || uuidv4(), {\n        public: true\n      });\n      await settingsRegistry.add('Deployment_FingerPrint_Hash', '', {\n        public: false,\n        readonly: true\n      });\n      await settingsRegistry.add('Deployment_FingerPrint_Verified', true, {\n        type: 'boolean',\n        public: true,\n        readonly: true\n      });\n      settings.watch('Site_Url', () => {\n        void verifyFingerPrint();\n      });\n      await settingsRegistry.add('Initial_Channel_Created', false, {\n        type: 'boolean',\n        hidden: true\n      });\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","createMiscSettings","crypto","link","default","v","Logger","Settings","uuidv4","v4","settingsRegistry","settings","updateAuditedBySystem","__reifyWaitForDeps__","logger","generateFingerprint","siteUrl","get","dbConnectionString","process","env","MONGO_URL","fingerprint","concat","createHash","update","digest","updateFingerprint","verified","auditedSettingBySystem","reason","Promise","all","updateValueById","verifyFingerPrint","DeploymentFingerPrintRecordHash","getValueById","info","AUTO_ACCEPT_FINGERPRINT","warn","add","DEPLOYMENT_ID","public","readonly","type","watch","hidden","__reify_async_result__","_reifyError","self","async"],"sources":["server/settings/misc.ts"],"sourcesContent":["import crypto from 'crypto';\n\nimport { Logger } from '@rocket.chat/logger';\nimport { Settings } from '@rocket.chat/models';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { settingsRegistry, settings } from '../../app/settings/server';\nimport { updateAuditedBySystem } from './lib/auditedSettingUpdates';\n\nconst logger = new Logger('FingerPrint');\n\nconst generateFingerprint = function () {\n\tconst siteUrl = settings.get('Site_Url');\n\tconst dbConnectionString = process.env.MONGO_URL;\n\n\tconst fingerprint = `${siteUrl}${dbConnectionString}`;\n\treturn crypto.createHash('sha256').update(fingerprint).digest('base64');\n};\n\nconst updateFingerprint = async function (fingerprint: string, verified: boolean) {\n\tconst auditedSettingBySystem = updateAuditedBySystem({\n\t\treason: 'updateFingerprint',\n\t});\n\t// No need to call ws listener because current function is called on startup\n\tawait Promise.all([\n\t\tauditedSettingBySystem(Settings.updateValueById, 'Deployment_FingerPrint_Hash', fingerprint),\n\t\tauditedSettingBySystem(Settings.updateValueById, 'Deployment_FingerPrint_Verified', verified),\n\t]);\n};\n\nconst verifyFingerPrint = async function () {\n\tconst DeploymentFingerPrintRecordHash = await Settings.getValueById('Deployment_FingerPrint_Hash');\n\n\tconst fingerprint = generateFingerprint();\n\n\tif (!DeploymentFingerPrintRecordHash) {\n\t\tlogger.info('Generating fingerprint for the first time', fingerprint);\n\t\tawait updateFingerprint(fingerprint, true);\n\t\treturn;\n\t}\n\n\tif (DeploymentFingerPrintRecordHash === fingerprint) {\n\t\treturn;\n\t}\n\n\tif (process.env.AUTO_ACCEPT_FINGERPRINT === 'true') {\n\t\tlogger.info('Updating fingerprint as AUTO_ACCEPT_FINGERPRINT is true', fingerprint);\n\t\tawait updateFingerprint(fingerprint, true);\n\t\treturn;\n\t}\n\n\tlogger.warn('Updating fingerprint as pending for admin verification', fingerprint);\n\tawait updateFingerprint(fingerprint, false);\n};\n\n// Insert server unique id if it doesn't exist\nexport const createMiscSettings = async () => {\n\tawait settingsRegistry.add('uniqueID', process.env.DEPLOYMENT_ID || uuidv4(), {\n\t\tpublic: true,\n\t});\n\n\tawait settingsRegistry.add('Deployment_FingerPrint_Hash', '', {\n\t\tpublic: false,\n\t\treadonly: true,\n\t});\n\n\tawait settingsRegistry.add('Deployment_FingerPrint_Verified', true, {\n\t\ttype: 'boolean',\n\t\tpublic: true,\n\t\treadonly: true,\n\t});\n\n\tsettings.watch('Site_Url', () => {\n\t\tvoid verifyFingerPrint();\n\t});\n\n\tawait settingsRegistry.add('Initial_Channel_Created', false, {\n\t\ttype: 'boolean',\n\t\thidden: true,\n\t});\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a22a925340e509a8c6fb78200387d97dacdc9355"}
