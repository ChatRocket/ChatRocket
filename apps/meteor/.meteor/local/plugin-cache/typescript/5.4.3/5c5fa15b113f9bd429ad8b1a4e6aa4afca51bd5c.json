{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/matrix/converters/room/to-internal-parser-formatter.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/federation/infrastructure/matrix/converters/room/to-internal-parser-formatter.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/matrix/converters/room/to-internal-parser-formatter.ts","inputSourceMap":{"version":3,"file":"server/services/federation/infrastructure/matrix/converters/room/to-internal-parser-formatter.ts","sourceRoot":"","sources":["server/services/federation/infrastructure/matrix/converters/room/to-internal-parser-formatter.ts"],"names":[],"mappings":"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","sourcesContent":["import type { MentionPill as MentionPillType } from '@rocket.chat/forked-matrix-bot-sdk';\nimport { marked } from 'marked';\n\nconst INTERNAL_MENTIONS_FOR_EXTERNAL_USERS_REGEX = /@([0-9a-zA-Z-_.]+(@([0-9a-zA-Z-_.]+))?):+([0-9a-zA-Z-_.]+)(?=[^<>]*(?:<\\w|$))/gm; // @username:server.com excluding any <a> tags\nconst INTERNAL_MENTIONS_FOR_INTERNAL_USERS_REGEX = /(?:^|(?<=\\s))@([0-9a-zA-Z-_.]+(@([0-9a-zA-Z-_.]+))?)(?=[^<>]*(?:<\\w|$))/gm; // @username, @username.name excluding any <a> tags and emails\nconst INTERNAL_GENERAL_REGEX = /(@all)|(@here)/gm;\n\nconst replaceMessageMentions = async (\n\tmessage: string,\n\tmentionRegex: RegExp,\n\tparseMatchFn: (match: string) => Promise<MentionPillType>,\n): Promise<string> => {\n\tconst promises: Promise<MentionPillType>[] = [];\n\n\tmessage.replace(mentionRegex, (match: string): any => promises.push(parseMatchFn(match)));\n\n\tconst mentions = await Promise.all(promises);\n\n\treturn message.replace(mentionRegex, () => ` ${mentions.shift()?.html}`);\n};\n\nconst replaceMentionsFromLocalExternalUsersForExternalFormat = async (message: string): Promise<string> => {\n\tconst { MentionPill } = await import('@rocket.chat/forked-matrix-bot-sdk');\n\n\treturn replaceMessageMentions(message, INTERNAL_MENTIONS_FOR_EXTERNAL_USERS_REGEX, (match: string) =>\n\t\tMentionPill.forUser(match.trimStart()),\n\t);\n};\n\nconst replaceInternalUsersMentionsForExternalFormat = async (message: string, homeServerDomain: string): Promise<string> => {\n\tconst { MentionPill } = await import('@rocket.chat/forked-matrix-bot-sdk');\n\n\treturn replaceMessageMentions(message, INTERNAL_MENTIONS_FOR_INTERNAL_USERS_REGEX, (match: string) =>\n\t\tMentionPill.forUser(`${match.trimStart()}:${homeServerDomain}`),\n\t);\n};\n\nconst replaceInternalGeneralMentionsForExternalFormat = async (message: string, externalRoomId: string): Promise<string> => {\n\tconst { MentionPill } = await import('@rocket.chat/forked-matrix-bot-sdk');\n\n\treturn replaceMessageMentions(message, INTERNAL_GENERAL_REGEX, () => MentionPill.forRoom(externalRoomId));\n};\n\nconst removeAllExtraBlankSpacesForASingleOne = (message: string): string => message.replace(/\\s+/g, ' ').trim();\n\nconst replaceInternalWithExternalMentions = async (message: string, externalRoomId: string, homeServerDomain: string): Promise<string> =>\n\treplaceInternalUsersMentionsForExternalFormat(\n\t\tawait replaceMentionsFromLocalExternalUsersForExternalFormat(\n\t\t\tawait replaceInternalGeneralMentionsForExternalFormat(message, externalRoomId),\n\t\t),\n\t\thomeServerDomain,\n\t);\n\nconst convertMarkdownToHTML = (message: string): string => marked.parse(message);\n\nexport const toExternalMessageFormat = async ({\n\texternalRoomId,\n\thomeServerDomain,\n\tmessage,\n}: {\n\tmessage: string;\n\texternalRoomId: string;\n\thomeServerDomain: string;\n}): Promise<string> =>\n\tremoveAllExtraBlankSpacesForASingleOne(\n\t\tconvertMarkdownToHTML((await replaceInternalWithExternalMentions(message, externalRoomId, homeServerDomain)).trim()),\n\t);\n\nexport const toExternalQuoteMessageFormat = async ({\n\tmessage,\n\teventToReplyTo,\n\texternalRoomId,\n\thomeServerDomain,\n\toriginalEventSender,\n}: {\n\texternalRoomId: string;\n\teventToReplyTo: string;\n\toriginalEventSender: string;\n\tmessage: string;\n\thomeServerDomain: string;\n}): Promise<{ message: string; formattedMessage: string }> => {\n\tconst { RichReply } = await import('@rocket.chat/forked-matrix-bot-sdk');\n\n\tconst formattedMessage = convertMarkdownToHTML(message);\n\tconst finalFormattedMessage = convertMarkdownToHTML(\n\t\tawait toExternalMessageFormat({\n\t\t\tmessage,\n\t\t\texternalRoomId,\n\t\t\thomeServerDomain,\n\t\t}),\n\t);\n\n\tconst { formatted_body: formattedBody } = RichReply.createFor(\n\t\texternalRoomId,\n\t\t{ event_id: eventToReplyTo, sender: originalEventSender },\n\t\tformattedMessage,\n\t\tfinalFormattedMessage,\n\t);\n\tconst { body } = RichReply.createFor(\n\t\texternalRoomId,\n\t\t{ event_id: eventToReplyTo, sender: originalEventSender },\n\t\tmessage,\n\t\tfinalFormattedMessage,\n\t);\n\n\treturn {\n\t\tmessage: body,\n\t\tformattedMessage: formattedBody,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/matrix/converters/room/to-internal-parser-formatter.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/federation/infrastructure/matrix/converters/room/to-internal-parser-formatter.ts","inputSourceMap":{"version":3,"file":"server/services/federation/infrastructure/matrix/converters/room/to-internal-parser-formatter.ts","sourceRoot":"","sources":["server/services/federation/infrastructure/matrix/converters/room/to-internal-parser-formatter.ts"],"names":[],"mappings":"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","sourcesContent":["import type { MentionPill as MentionPillType } from '@rocket.chat/forked-matrix-bot-sdk';\nimport { marked } from 'marked';\n\nconst INTERNAL_MENTIONS_FOR_EXTERNAL_USERS_REGEX = /@([0-9a-zA-Z-_.]+(@([0-9a-zA-Z-_.]+))?):+([0-9a-zA-Z-_.]+)(?=[^<>]*(?:<\\w|$))/gm; // @username:server.com excluding any <a> tags\nconst INTERNAL_MENTIONS_FOR_INTERNAL_USERS_REGEX = /(?:^|(?<=\\s))@([0-9a-zA-Z-_.]+(@([0-9a-zA-Z-_.]+))?)(?=[^<>]*(?:<\\w|$))/gm; // @username, @username.name excluding any <a> tags and emails\nconst INTERNAL_GENERAL_REGEX = /(@all)|(@here)/gm;\n\nconst replaceMessageMentions = async (\n\tmessage: string,\n\tmentionRegex: RegExp,\n\tparseMatchFn: (match: string) => Promise<MentionPillType>,\n): Promise<string> => {\n\tconst promises: Promise<MentionPillType>[] = [];\n\n\tmessage.replace(mentionRegex, (match: string): any => promises.push(parseMatchFn(match)));\n\n\tconst mentions = await Promise.all(promises);\n\n\treturn message.replace(mentionRegex, () => ` ${mentions.shift()?.html}`);\n};\n\nconst replaceMentionsFromLocalExternalUsersForExternalFormat = async (message: string): Promise<string> => {\n\tconst { MentionPill } = await import('@rocket.chat/forked-matrix-bot-sdk');\n\n\treturn replaceMessageMentions(message, INTERNAL_MENTIONS_FOR_EXTERNAL_USERS_REGEX, (match: string) =>\n\t\tMentionPill.forUser(match.trimStart()),\n\t);\n};\n\nconst replaceInternalUsersMentionsForExternalFormat = async (message: string, homeServerDomain: string): Promise<string> => {\n\tconst { MentionPill } = await import('@rocket.chat/forked-matrix-bot-sdk');\n\n\treturn replaceMessageMentions(message, INTERNAL_MENTIONS_FOR_INTERNAL_USERS_REGEX, (match: string) =>\n\t\tMentionPill.forUser(`${match.trimStart()}:${homeServerDomain}`),\n\t);\n};\n\nconst replaceInternalGeneralMentionsForExternalFormat = async (message: string, externalRoomId: string): Promise<string> => {\n\tconst { MentionPill } = await import('@rocket.chat/forked-matrix-bot-sdk');\n\n\treturn replaceMessageMentions(message, INTERNAL_GENERAL_REGEX, () => MentionPill.forRoom(externalRoomId));\n};\n\nconst removeAllExtraBlankSpacesForASingleOne = (message: string): string => message.replace(/\\s+/g, ' ').trim();\n\nconst replaceInternalWithExternalMentions = async (message: string, externalRoomId: string, homeServerDomain: string): Promise<string> =>\n\treplaceInternalUsersMentionsForExternalFormat(\n\t\tawait replaceMentionsFromLocalExternalUsersForExternalFormat(\n\t\t\tawait replaceInternalGeneralMentionsForExternalFormat(message, externalRoomId),\n\t\t),\n\t\thomeServerDomain,\n\t);\n\nconst convertMarkdownToHTML = (message: string): string => marked.parse(message);\n\nexport const toExternalMessageFormat = async ({\n\texternalRoomId,\n\thomeServerDomain,\n\tmessage,\n}: {\n\tmessage: string;\n\texternalRoomId: string;\n\thomeServerDomain: string;\n}): Promise<string> =>\n\tremoveAllExtraBlankSpacesForASingleOne(\n\t\tconvertMarkdownToHTML((await replaceInternalWithExternalMentions(message, externalRoomId, homeServerDomain)).trim()),\n\t);\n\nexport const toExternalQuoteMessageFormat = async ({\n\tmessage,\n\teventToReplyTo,\n\texternalRoomId,\n\thomeServerDomain,\n\toriginalEventSender,\n}: {\n\texternalRoomId: string;\n\teventToReplyTo: string;\n\toriginalEventSender: string;\n\tmessage: string;\n\thomeServerDomain: string;\n}): Promise<{ message: string; formattedMessage: string }> => {\n\tconst { RichReply } = await import('@rocket.chat/forked-matrix-bot-sdk');\n\n\tconst formattedMessage = convertMarkdownToHTML(message);\n\tconst finalFormattedMessage = convertMarkdownToHTML(\n\t\tawait toExternalMessageFormat({\n\t\t\tmessage,\n\t\t\texternalRoomId,\n\t\t\thomeServerDomain,\n\t\t}),\n\t);\n\n\tconst { formatted_body: formattedBody } = RichReply.createFor(\n\t\texternalRoomId,\n\t\t{ event_id: eventToReplyTo, sender: originalEventSender },\n\t\tformattedMessage,\n\t\tfinalFormattedMessage,\n\t);\n\tconst { body } = RichReply.createFor(\n\t\texternalRoomId,\n\t\t{ event_id: eventToReplyTo, sender: originalEventSender },\n\t\tmessage,\n\t\tfinalFormattedMessage,\n\t);\n\n\treturn {\n\t\tmessage: body,\n\t\tformattedMessage: formattedBody,\n\t};\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      toExternalMessageFormat: () => toExternalMessageFormat,\n      toExternalQuoteMessageFormat: () => toExternalQuoteMessageFormat\n    });\n    let marked;\n    module.link(\"marked\", {\n      marked(v) {\n        marked = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const INTERNAL_MENTIONS_FOR_EXTERNAL_USERS_REGEX = /@([0-9a-zA-Z-_.]+(@([0-9a-zA-Z-_.]+))?):+([0-9a-zA-Z-_.]+)(?=[^<>]*(?:<\\w|$))/gm; // @username:server.com excluding any <a> tags\n    const INTERNAL_MENTIONS_FOR_INTERNAL_USERS_REGEX = /(?:^|(?<=\\s))@([0-9a-zA-Z-_.]+(@([0-9a-zA-Z-_.]+))?)(?=[^<>]*(?:<\\w|$))/gm; // @username, @username.name excluding any <a> tags and emails\n    const INTERNAL_GENERAL_REGEX = /(@all)|(@here)/gm;\n    const replaceMessageMentions = async (message, mentionRegex, parseMatchFn) => {\n      const promises = [];\n      message.replace(mentionRegex, match => promises.push(parseMatchFn(match)));\n      const mentions = await Promise.all(promises);\n      return message.replace(mentionRegex, () => {\n        var _mentions$shift;\n        return \" \".concat((_mentions$shift = mentions.shift()) === null || _mentions$shift === void 0 ? void 0 : _mentions$shift.html);\n      });\n    };\n    const replaceMentionsFromLocalExternalUsersForExternalFormat = async message => {\n      const {\n        MentionPill\n      } = await module.dynamicImport('@rocket.chat/forked-matrix-bot-sdk');\n      return replaceMessageMentions(message, INTERNAL_MENTIONS_FOR_EXTERNAL_USERS_REGEX, match => MentionPill.forUser(match.trimStart()));\n    };\n    const replaceInternalUsersMentionsForExternalFormat = async (message, homeServerDomain) => {\n      const {\n        MentionPill\n      } = await module.dynamicImport('@rocket.chat/forked-matrix-bot-sdk');\n      return replaceMessageMentions(message, INTERNAL_MENTIONS_FOR_INTERNAL_USERS_REGEX, match => MentionPill.forUser(\"\".concat(match.trimStart(), \":\").concat(homeServerDomain)));\n    };\n    const replaceInternalGeneralMentionsForExternalFormat = async (message, externalRoomId) => {\n      const {\n        MentionPill\n      } = await module.dynamicImport('@rocket.chat/forked-matrix-bot-sdk');\n      return replaceMessageMentions(message, INTERNAL_GENERAL_REGEX, () => MentionPill.forRoom(externalRoomId));\n    };\n    const removeAllExtraBlankSpacesForASingleOne = message => message.replace(/\\s+/g, ' ').trim();\n    const replaceInternalWithExternalMentions = async (message, externalRoomId, homeServerDomain) => replaceInternalUsersMentionsForExternalFormat(await replaceMentionsFromLocalExternalUsersForExternalFormat(await replaceInternalGeneralMentionsForExternalFormat(message, externalRoomId)), homeServerDomain);\n    const convertMarkdownToHTML = message => marked.parse(message);\n    const toExternalMessageFormat = async _ref => {\n      let {\n        externalRoomId,\n        homeServerDomain,\n        message\n      } = _ref;\n      return removeAllExtraBlankSpacesForASingleOne(convertMarkdownToHTML((await replaceInternalWithExternalMentions(message, externalRoomId, homeServerDomain)).trim()));\n    };\n    const toExternalQuoteMessageFormat = async _ref2 => {\n      let {\n        message,\n        eventToReplyTo,\n        externalRoomId,\n        homeServerDomain,\n        originalEventSender\n      } = _ref2;\n      const {\n        RichReply\n      } = await module.dynamicImport('@rocket.chat/forked-matrix-bot-sdk');\n      const formattedMessage = convertMarkdownToHTML(message);\n      const finalFormattedMessage = convertMarkdownToHTML(await toExternalMessageFormat({\n        message,\n        externalRoomId,\n        homeServerDomain\n      }));\n      const {\n        formatted_body: formattedBody\n      } = RichReply.createFor(externalRoomId, {\n        event_id: eventToReplyTo,\n        sender: originalEventSender\n      }, formattedMessage, finalFormattedMessage);\n      const {\n        body\n      } = RichReply.createFor(externalRoomId, {\n        event_id: eventToReplyTo,\n        sender: originalEventSender\n      }, message, finalFormattedMessage);\n      return {\n        message: body,\n        formattedMessage: formattedBody\n      };\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","toExternalMessageFormat","toExternalQuoteMessageFormat","marked","link","v","__reifyWaitForDeps__","INTERNAL_MENTIONS_FOR_EXTERNAL_USERS_REGEX","INTERNAL_MENTIONS_FOR_INTERNAL_USERS_REGEX","INTERNAL_GENERAL_REGEX","replaceMessageMentions","message","mentionRegex","parseMatchFn","promises","replace","match","push","mentions","Promise","all","_mentions$shift","concat","shift","html","replaceMentionsFromLocalExternalUsersForExternalFormat","MentionPill","dynamicImport","forUser","trimStart","replaceInternalUsersMentionsForExternalFormat","homeServerDomain","replaceInternalGeneralMentionsForExternalFormat","externalRoomId","forRoom","removeAllExtraBlankSpacesForASingleOne","trim","replaceInternalWithExternalMentions","convertMarkdownToHTML","parse","_ref","_ref2","eventToReplyTo","originalEventSender","RichReply","formattedMessage","finalFormattedMessage","formatted_body","formattedBody","createFor","event_id","sender","body","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/federation/infrastructure/matrix/converters/room/to-internal-parser-formatter.ts"],"sourcesContent":["import type { MentionPill as MentionPillType } from '@rocket.chat/forked-matrix-bot-sdk';\nimport { marked } from 'marked';\n\nconst INTERNAL_MENTIONS_FOR_EXTERNAL_USERS_REGEX = /@([0-9a-zA-Z-_.]+(@([0-9a-zA-Z-_.]+))?):+([0-9a-zA-Z-_.]+)(?=[^<>]*(?:<\\w|$))/gm; // @username:server.com excluding any <a> tags\nconst INTERNAL_MENTIONS_FOR_INTERNAL_USERS_REGEX = /(?:^|(?<=\\s))@([0-9a-zA-Z-_.]+(@([0-9a-zA-Z-_.]+))?)(?=[^<>]*(?:<\\w|$))/gm; // @username, @username.name excluding any <a> tags and emails\nconst INTERNAL_GENERAL_REGEX = /(@all)|(@here)/gm;\n\nconst replaceMessageMentions = async (\n\tmessage: string,\n\tmentionRegex: RegExp,\n\tparseMatchFn: (match: string) => Promise<MentionPillType>,\n): Promise<string> => {\n\tconst promises: Promise<MentionPillType>[] = [];\n\n\tmessage.replace(mentionRegex, (match: string): any => promises.push(parseMatchFn(match)));\n\n\tconst mentions = await Promise.all(promises);\n\n\treturn message.replace(mentionRegex, () => ` ${mentions.shift()?.html}`);\n};\n\nconst replaceMentionsFromLocalExternalUsersForExternalFormat = async (message: string): Promise<string> => {\n\tconst { MentionPill } = await import('@rocket.chat/forked-matrix-bot-sdk');\n\n\treturn replaceMessageMentions(message, INTERNAL_MENTIONS_FOR_EXTERNAL_USERS_REGEX, (match: string) =>\n\t\tMentionPill.forUser(match.trimStart()),\n\t);\n};\n\nconst replaceInternalUsersMentionsForExternalFormat = async (message: string, homeServerDomain: string): Promise<string> => {\n\tconst { MentionPill } = await import('@rocket.chat/forked-matrix-bot-sdk');\n\n\treturn replaceMessageMentions(message, INTERNAL_MENTIONS_FOR_INTERNAL_USERS_REGEX, (match: string) =>\n\t\tMentionPill.forUser(`${match.trimStart()}:${homeServerDomain}`),\n\t);\n};\n\nconst replaceInternalGeneralMentionsForExternalFormat = async (message: string, externalRoomId: string): Promise<string> => {\n\tconst { MentionPill } = await import('@rocket.chat/forked-matrix-bot-sdk');\n\n\treturn replaceMessageMentions(message, INTERNAL_GENERAL_REGEX, () => MentionPill.forRoom(externalRoomId));\n};\n\nconst removeAllExtraBlankSpacesForASingleOne = (message: string): string => message.replace(/\\s+/g, ' ').trim();\n\nconst replaceInternalWithExternalMentions = async (message: string, externalRoomId: string, homeServerDomain: string): Promise<string> =>\n\treplaceInternalUsersMentionsForExternalFormat(\n\t\tawait replaceMentionsFromLocalExternalUsersForExternalFormat(\n\t\t\tawait replaceInternalGeneralMentionsForExternalFormat(message, externalRoomId),\n\t\t),\n\t\thomeServerDomain,\n\t);\n\nconst convertMarkdownToHTML = (message: string): string => marked.parse(message);\n\nexport const toExternalMessageFormat = async ({\n\texternalRoomId,\n\thomeServerDomain,\n\tmessage,\n}: {\n\tmessage: string;\n\texternalRoomId: string;\n\thomeServerDomain: string;\n}): Promise<string> =>\n\tremoveAllExtraBlankSpacesForASingleOne(\n\t\tconvertMarkdownToHTML((await replaceInternalWithExternalMentions(message, externalRoomId, homeServerDomain)).trim()),\n\t);\n\nexport const toExternalQuoteMessageFormat = async ({\n\tmessage,\n\teventToReplyTo,\n\texternalRoomId,\n\thomeServerDomain,\n\toriginalEventSender,\n}: {\n\texternalRoomId: string;\n\teventToReplyTo: string;\n\toriginalEventSender: string;\n\tmessage: string;\n\thomeServerDomain: string;\n}): Promise<{ message: string; formattedMessage: string }> => {\n\tconst { RichReply } = await import('@rocket.chat/forked-matrix-bot-sdk');\n\n\tconst formattedMessage = convertMarkdownToHTML(message);\n\tconst finalFormattedMessage = convertMarkdownToHTML(\n\t\tawait toExternalMessageFormat({\n\t\t\tmessage,\n\t\t\texternalRoomId,\n\t\t\thomeServerDomain,\n\t\t}),\n\t);\n\n\tconst { formatted_body: formattedBody } = RichReply.createFor(\n\t\texternalRoomId,\n\t\t{ event_id: eventToReplyTo, sender: originalEventSender },\n\t\tformattedMessage,\n\t\tfinalFormattedMessage,\n\t);\n\tconst { body } = RichReply.createFor(\n\t\texternalRoomId,\n\t\t{ event_id: eventToReplyTo, sender: originalEventSender },\n\t\tmessage,\n\t\tfinalFormattedMessage,\n\t);\n\n\treturn {\n\t\tmessage: body,\n\t\tformattedMessage: formattedBody,\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"5c5fa15b113f9bd429ad8b1a4e6aa4afca51bd5c"}
