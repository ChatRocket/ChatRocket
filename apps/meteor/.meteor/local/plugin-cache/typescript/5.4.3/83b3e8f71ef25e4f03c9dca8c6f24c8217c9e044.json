{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/notification-queue/server/NotificationQueue.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/notification-queue/server/NotificationQueue.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/notification-queue/server/NotificationQueue.ts","inputSourceMap":{"version":3,"file":"app/notification-queue/server/NotificationQueue.ts","sourceRoot":"","sources":["app/notification-queue/server/NotificationQueue.ts"],"names":[],"mappings":"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","sourcesContent":["import type { INotification, INotificationItemPush, INotificationItemEmail, NotificationItem, IUser } from '@rocket.chat/core-typings';\nimport { NotificationQueue, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { SystemLogger } from '../../../server/lib/logger/system';\nimport { sendEmailFromData } from '../../lib/server/functions/notifications/email';\nimport { PushNotification } from '../../push-notifications/server';\n\nconst {\n\tNOTIFICATIONS_WORKER_TIMEOUT = 2000,\n\tNOTIFICATIONS_BATCH_SIZE = 100,\n\tNOTIFICATIONS_SCHEDULE_DELAY_ONLINE = 120,\n\tNOTIFICATIONS_SCHEDULE_DELAY_AWAY = 0,\n\tNOTIFICATIONS_SCHEDULE_DELAY_OFFLINE = 0,\n} = process.env;\n\nclass NotificationClass {\n\tprivate running = false;\n\n\tprivate cyclePause = Number(NOTIFICATIONS_WORKER_TIMEOUT);\n\n\tprivate maxBatchSize = Number(NOTIFICATIONS_BATCH_SIZE);\n\n\tprivate maxScheduleDelaySeconds: { [key: string]: number } = {\n\t\tonline: Number(NOTIFICATIONS_SCHEDULE_DELAY_ONLINE),\n\t\taway: Number(NOTIFICATIONS_SCHEDULE_DELAY_AWAY),\n\t\toffline: Number(NOTIFICATIONS_SCHEDULE_DELAY_OFFLINE),\n\t};\n\n\tinitWorker(): void {\n\t\tthis.running = true;\n\t\tthis.executeWorkerLater();\n\t}\n\n\tstopWorker(): void {\n\t\tthis.running = false;\n\t}\n\n\texecuteWorkerLater(): void {\n\t\tif (!this.running) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout(async () => {\n\t\t\ttry {\n\t\t\t\tawait this.worker();\n\t\t\t} catch (err) {\n\t\t\t\tSystemLogger.error({ msg: 'Error sending notification', err });\n\t\t\t\tthis.executeWorkerLater();\n\t\t\t}\n\t\t}, this.cyclePause);\n\t}\n\n\tasync worker(counter = 0): Promise<void> {\n\t\tconst notification = await this.getNextNotification();\n\n\t\tif (!notification) {\n\t\t\treturn this.executeWorkerLater();\n\t\t}\n\n\t\t// Once we start notifying the user we anticipate all the schedules\n\t\tconst flush = await NotificationQueue.clearScheduleByUserId(notification.uid);\n\n\t\t// start worker again it queue flushed\n\t\tif (flush.modifiedCount) {\n\t\t\tawait NotificationQueue.unsetSendingById(notification._id);\n\t\t\treturn this.worker(counter);\n\t\t}\n\n\t\ttry {\n\t\t\tfor await (const item of notification.items) {\n\t\t\t\tswitch (item.type) {\n\t\t\t\t\tcase 'push':\n\t\t\t\t\t\tawait this.push(notification, item);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'email':\n\t\t\t\t\t\tawait this.email(item);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait NotificationQueue.removeById(notification._id);\n\t\t} catch (e) {\n\t\t\tSystemLogger.error(e);\n\t\t\tawait NotificationQueue.setErrorById(notification._id, e instanceof Error ? e.message : String(e));\n\t\t}\n\n\t\tif (counter >= this.maxBatchSize) {\n\t\t\treturn this.executeWorkerLater();\n\t\t}\n\t\tawait this.worker(counter++);\n\t}\n\n\tgetNextNotification(): Promise<INotification | null> {\n\t\tconst expired = new Date();\n\t\texpired.setMinutes(expired.getMinutes() - 5);\n\n\t\treturn NotificationQueue.findNextInQueueOrExpired(expired);\n\t}\n\n\tasync push({ uid, rid, mid }: INotification, item: INotificationItemPush): Promise<void> {\n\t\tawait PushNotification.send({\n\t\t\trid,\n\t\t\tuid,\n\t\t\tmid,\n\t\t\t...item.data,\n\t\t});\n\t}\n\n\tasync email(item: INotificationItemEmail): Promise<void> {\n\t\treturn sendEmailFromData(item.data);\n\t}\n\n\tasync scheduleItem({\n\t\tuid,\n\t\trid,\n\t\tmid,\n\t\titems,\n\t\tuser,\n\t}: {\n\t\tuid: string;\n\t\trid: string;\n\t\tmid: string;\n\t\titems: NotificationItem[];\n\t\tuser?: Partial<IUser>;\n\t}): Promise<void> {\n\t\tconst receiver =\n\t\t\tuser ||\n\t\t\t(await Users.findOneById<Pick<IUser, 'statusConnection'>>(uid, {\n\t\t\t\tprojection: {\n\t\t\t\t\tstatusConnection: 1,\n\t\t\t\t},\n\t\t\t}));\n\n\t\tif (!receiver) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { statusConnection = 'offline' } = receiver;\n\n\t\tlet schedule: Date | undefined;\n\n\t\tconst delay = this.maxScheduleDelaySeconds[statusConnection];\n\n\t\tif (delay < 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (delay > 0) {\n\t\t\tschedule = new Date();\n\t\t\tschedule.setSeconds(schedule.getSeconds() + delay);\n\t\t}\n\n\t\tawait NotificationQueue.insertOne({\n\t\t\tuid,\n\t\t\trid,\n\t\t\tmid,\n\t\t\tts: new Date(),\n\t\t\tschedule,\n\t\t\titems,\n\t\t});\n\t}\n}\n\nexport const Notification = new NotificationClass();\n\nMeteor.startup(() => {\n\tNotification.initWorker();\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/notification-queue/server/NotificationQueue.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/notification-queue/server/NotificationQueue.ts","inputSourceMap":{"version":3,"file":"app/notification-queue/server/NotificationQueue.ts","sourceRoot":"","sources":["app/notification-queue/server/NotificationQueue.ts"],"names":[],"mappings":"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","sourcesContent":["import type { INotification, INotificationItemPush, INotificationItemEmail, NotificationItem, IUser } from '@rocket.chat/core-typings';\nimport { NotificationQueue, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { SystemLogger } from '../../../server/lib/logger/system';\nimport { sendEmailFromData } from '../../lib/server/functions/notifications/email';\nimport { PushNotification } from '../../push-notifications/server';\n\nconst {\n\tNOTIFICATIONS_WORKER_TIMEOUT = 2000,\n\tNOTIFICATIONS_BATCH_SIZE = 100,\n\tNOTIFICATIONS_SCHEDULE_DELAY_ONLINE = 120,\n\tNOTIFICATIONS_SCHEDULE_DELAY_AWAY = 0,\n\tNOTIFICATIONS_SCHEDULE_DELAY_OFFLINE = 0,\n} = process.env;\n\nclass NotificationClass {\n\tprivate running = false;\n\n\tprivate cyclePause = Number(NOTIFICATIONS_WORKER_TIMEOUT);\n\n\tprivate maxBatchSize = Number(NOTIFICATIONS_BATCH_SIZE);\n\n\tprivate maxScheduleDelaySeconds: { [key: string]: number } = {\n\t\tonline: Number(NOTIFICATIONS_SCHEDULE_DELAY_ONLINE),\n\t\taway: Number(NOTIFICATIONS_SCHEDULE_DELAY_AWAY),\n\t\toffline: Number(NOTIFICATIONS_SCHEDULE_DELAY_OFFLINE),\n\t};\n\n\tinitWorker(): void {\n\t\tthis.running = true;\n\t\tthis.executeWorkerLater();\n\t}\n\n\tstopWorker(): void {\n\t\tthis.running = false;\n\t}\n\n\texecuteWorkerLater(): void {\n\t\tif (!this.running) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout(async () => {\n\t\t\ttry {\n\t\t\t\tawait this.worker();\n\t\t\t} catch (err) {\n\t\t\t\tSystemLogger.error({ msg: 'Error sending notification', err });\n\t\t\t\tthis.executeWorkerLater();\n\t\t\t}\n\t\t}, this.cyclePause);\n\t}\n\n\tasync worker(counter = 0): Promise<void> {\n\t\tconst notification = await this.getNextNotification();\n\n\t\tif (!notification) {\n\t\t\treturn this.executeWorkerLater();\n\t\t}\n\n\t\t// Once we start notifying the user we anticipate all the schedules\n\t\tconst flush = await NotificationQueue.clearScheduleByUserId(notification.uid);\n\n\t\t// start worker again it queue flushed\n\t\tif (flush.modifiedCount) {\n\t\t\tawait NotificationQueue.unsetSendingById(notification._id);\n\t\t\treturn this.worker(counter);\n\t\t}\n\n\t\ttry {\n\t\t\tfor await (const item of notification.items) {\n\t\t\t\tswitch (item.type) {\n\t\t\t\t\tcase 'push':\n\t\t\t\t\t\tawait this.push(notification, item);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'email':\n\t\t\t\t\t\tawait this.email(item);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait NotificationQueue.removeById(notification._id);\n\t\t} catch (e) {\n\t\t\tSystemLogger.error(e);\n\t\t\tawait NotificationQueue.setErrorById(notification._id, e instanceof Error ? e.message : String(e));\n\t\t}\n\n\t\tif (counter >= this.maxBatchSize) {\n\t\t\treturn this.executeWorkerLater();\n\t\t}\n\t\tawait this.worker(counter++);\n\t}\n\n\tgetNextNotification(): Promise<INotification | null> {\n\t\tconst expired = new Date();\n\t\texpired.setMinutes(expired.getMinutes() - 5);\n\n\t\treturn NotificationQueue.findNextInQueueOrExpired(expired);\n\t}\n\n\tasync push({ uid, rid, mid }: INotification, item: INotificationItemPush): Promise<void> {\n\t\tawait PushNotification.send({\n\t\t\trid,\n\t\t\tuid,\n\t\t\tmid,\n\t\t\t...item.data,\n\t\t});\n\t}\n\n\tasync email(item: INotificationItemEmail): Promise<void> {\n\t\treturn sendEmailFromData(item.data);\n\t}\n\n\tasync scheduleItem({\n\t\tuid,\n\t\trid,\n\t\tmid,\n\t\titems,\n\t\tuser,\n\t}: {\n\t\tuid: string;\n\t\trid: string;\n\t\tmid: string;\n\t\titems: NotificationItem[];\n\t\tuser?: Partial<IUser>;\n\t}): Promise<void> {\n\t\tconst receiver =\n\t\t\tuser ||\n\t\t\t(await Users.findOneById<Pick<IUser, 'statusConnection'>>(uid, {\n\t\t\t\tprojection: {\n\t\t\t\t\tstatusConnection: 1,\n\t\t\t\t},\n\t\t\t}));\n\n\t\tif (!receiver) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { statusConnection = 'offline' } = receiver;\n\n\t\tlet schedule: Date | undefined;\n\n\t\tconst delay = this.maxScheduleDelaySeconds[statusConnection];\n\n\t\tif (delay < 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (delay > 0) {\n\t\t\tschedule = new Date();\n\t\t\tschedule.setSeconds(schedule.getSeconds() + delay);\n\t\t}\n\n\t\tawait NotificationQueue.insertOne({\n\t\t\tuid,\n\t\t\trid,\n\t\t\tmid,\n\t\t\tts: new Date(),\n\t\t\tschedule,\n\t\t\titems,\n\t\t});\n\t}\n}\n\nexport const Notification = new NotificationClass();\n\nMeteor.startup(() => {\n\tNotification.initWorker();\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      Notification: () => Notification\n    });\n    let NotificationQueue, Users;\n    module.link(\"@rocket.chat/models\", {\n      NotificationQueue(v) {\n        NotificationQueue = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let SystemLogger;\n    module.link(\"../../../server/lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 2);\n    let sendEmailFromData;\n    module.link(\"../../lib/server/functions/notifications/email\", {\n      sendEmailFromData(v) {\n        sendEmailFromData = v;\n      }\n    }, 3);\n    let PushNotification;\n    module.link(\"../../push-notifications/server\", {\n      PushNotification(v) {\n        PushNotification = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const {\n      NOTIFICATIONS_WORKER_TIMEOUT = 2000,\n      NOTIFICATIONS_BATCH_SIZE = 100,\n      NOTIFICATIONS_SCHEDULE_DELAY_ONLINE = 120,\n      NOTIFICATIONS_SCHEDULE_DELAY_AWAY = 0,\n      NOTIFICATIONS_SCHEDULE_DELAY_OFFLINE = 0\n    } = process.env;\n    class NotificationClass {\n      constructor() {\n        this.running = false;\n        this.cyclePause = Number(NOTIFICATIONS_WORKER_TIMEOUT);\n        this.maxBatchSize = Number(NOTIFICATIONS_BATCH_SIZE);\n        this.maxScheduleDelaySeconds = {\n          online: Number(NOTIFICATIONS_SCHEDULE_DELAY_ONLINE),\n          away: Number(NOTIFICATIONS_SCHEDULE_DELAY_AWAY),\n          offline: Number(NOTIFICATIONS_SCHEDULE_DELAY_OFFLINE)\n        };\n      }\n      initWorker() {\n        this.running = true;\n        this.executeWorkerLater();\n      }\n      stopWorker() {\n        this.running = false;\n      }\n      executeWorkerLater() {\n        if (!this.running) {\n          return;\n        }\n        setTimeout(async () => {\n          try {\n            await this.worker();\n          } catch (err) {\n            SystemLogger.error({\n              msg: 'Error sending notification',\n              err\n            });\n            this.executeWorkerLater();\n          }\n        }, this.cyclePause);\n      }\n      async worker() {\n        let counter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        const notification = await this.getNextNotification();\n        if (!notification) {\n          return this.executeWorkerLater();\n        }\n        // Once we start notifying the user we anticipate all the schedules\n        const flush = await NotificationQueue.clearScheduleByUserId(notification.uid);\n        // start worker again it queue flushed\n        if (flush.modifiedCount) {\n          await NotificationQueue.unsetSendingById(notification._id);\n          return this.worker(counter);\n        }\n        try {\n          var _iteratorAbruptCompletion = false;\n          var _didIteratorError = false;\n          var _iteratorError;\n          try {\n            for (var _iterator = _asyncIterator(notification.items), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n              const item = _step.value;\n              {\n                switch (item.type) {\n                  case 'push':\n                    await this.push(notification, item);\n                    break;\n                  case 'email':\n                    await this.email(item);\n                    break;\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (_iteratorAbruptCompletion && _iterator.return != null) {\n                await _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n          await NotificationQueue.removeById(notification._id);\n        } catch (e) {\n          SystemLogger.error(e);\n          await NotificationQueue.setErrorById(notification._id, e instanceof Error ? e.message : String(e));\n        }\n        if (counter >= this.maxBatchSize) {\n          return this.executeWorkerLater();\n        }\n        await this.worker(counter++);\n      }\n      getNextNotification() {\n        const expired = new Date();\n        expired.setMinutes(expired.getMinutes() - 5);\n        return NotificationQueue.findNextInQueueOrExpired(expired);\n      }\n      async push(_ref, item) {\n        let {\n          uid,\n          rid,\n          mid\n        } = _ref;\n        await PushNotification.send(_objectSpread({\n          rid,\n          uid,\n          mid\n        }, item.data));\n      }\n      async email(item) {\n        return sendEmailFromData(item.data);\n      }\n      async scheduleItem(_ref2) {\n        let {\n          uid,\n          rid,\n          mid,\n          items,\n          user\n        } = _ref2;\n        const receiver = user || (await Users.findOneById(uid, {\n          projection: {\n            statusConnection: 1\n          }\n        }));\n        if (!receiver) {\n          return;\n        }\n        const {\n          statusConnection = 'offline'\n        } = receiver;\n        let schedule;\n        const delay = this.maxScheduleDelaySeconds[statusConnection];\n        if (delay < 0) {\n          return;\n        }\n        if (delay > 0) {\n          schedule = new Date();\n          schedule.setSeconds(schedule.getSeconds() + delay);\n        }\n        await NotificationQueue.insertOne({\n          uid,\n          rid,\n          mid,\n          ts: new Date(),\n          schedule,\n          items\n        });\n      }\n    }\n    const Notification = new NotificationClass();\n    Meteor.startup(() => {\n      Notification.initWorker();\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","Notification","NotificationQueue","Users","Meteor","SystemLogger","sendEmailFromData","PushNotification","__reifyWaitForDeps__","NOTIFICATIONS_WORKER_TIMEOUT","NOTIFICATIONS_BATCH_SIZE","NOTIFICATIONS_SCHEDULE_DELAY_ONLINE","NOTIFICATIONS_SCHEDULE_DELAY_AWAY","NOTIFICATIONS_SCHEDULE_DELAY_OFFLINE","process","env","NotificationClass","constructor","running","cyclePause","Number","maxBatchSize","maxScheduleDelaySeconds","online","away","offline","initWorker","executeWorkerLater","stopWorker","setTimeout","worker","err","error","msg","counter","arguments","length","undefined","notification","getNextNotification","flush","clearScheduleByUserId","uid","modifiedCount","unsetSendingById","_id","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","items","_step","next","done","item","value","type","push","email","return","removeById","e","setErrorById","Error","message","String","expired","Date","setMinutes","getMinutes","findNextInQueueOrExpired","_ref","rid","mid","send","data","scheduleItem","_ref2","user","receiver","findOneById","projection","statusConnection","schedule","delay","setSeconds","getSeconds","insertOne","ts","startup","__reify_async_result__","_reifyError","self","async"],"sources":["app/notification-queue/server/NotificationQueue.ts"],"sourcesContent":["import type { INotification, INotificationItemPush, INotificationItemEmail, NotificationItem, IUser } from '@rocket.chat/core-typings';\nimport { NotificationQueue, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { SystemLogger } from '../../../server/lib/logger/system';\nimport { sendEmailFromData } from '../../lib/server/functions/notifications/email';\nimport { PushNotification } from '../../push-notifications/server';\n\nconst {\n\tNOTIFICATIONS_WORKER_TIMEOUT = 2000,\n\tNOTIFICATIONS_BATCH_SIZE = 100,\n\tNOTIFICATIONS_SCHEDULE_DELAY_ONLINE = 120,\n\tNOTIFICATIONS_SCHEDULE_DELAY_AWAY = 0,\n\tNOTIFICATIONS_SCHEDULE_DELAY_OFFLINE = 0,\n} = process.env;\n\nclass NotificationClass {\n\tprivate running = false;\n\n\tprivate cyclePause = Number(NOTIFICATIONS_WORKER_TIMEOUT);\n\n\tprivate maxBatchSize = Number(NOTIFICATIONS_BATCH_SIZE);\n\n\tprivate maxScheduleDelaySeconds: { [key: string]: number } = {\n\t\tonline: Number(NOTIFICATIONS_SCHEDULE_DELAY_ONLINE),\n\t\taway: Number(NOTIFICATIONS_SCHEDULE_DELAY_AWAY),\n\t\toffline: Number(NOTIFICATIONS_SCHEDULE_DELAY_OFFLINE),\n\t};\n\n\tinitWorker(): void {\n\t\tthis.running = true;\n\t\tthis.executeWorkerLater();\n\t}\n\n\tstopWorker(): void {\n\t\tthis.running = false;\n\t}\n\n\texecuteWorkerLater(): void {\n\t\tif (!this.running) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout(async () => {\n\t\t\ttry {\n\t\t\t\tawait this.worker();\n\t\t\t} catch (err) {\n\t\t\t\tSystemLogger.error({ msg: 'Error sending notification', err });\n\t\t\t\tthis.executeWorkerLater();\n\t\t\t}\n\t\t}, this.cyclePause);\n\t}\n\n\tasync worker(counter = 0): Promise<void> {\n\t\tconst notification = await this.getNextNotification();\n\n\t\tif (!notification) {\n\t\t\treturn this.executeWorkerLater();\n\t\t}\n\n\t\t// Once we start notifying the user we anticipate all the schedules\n\t\tconst flush = await NotificationQueue.clearScheduleByUserId(notification.uid);\n\n\t\t// start worker again it queue flushed\n\t\tif (flush.modifiedCount) {\n\t\t\tawait NotificationQueue.unsetSendingById(notification._id);\n\t\t\treturn this.worker(counter);\n\t\t}\n\n\t\ttry {\n\t\t\tfor await (const item of notification.items) {\n\t\t\t\tswitch (item.type) {\n\t\t\t\t\tcase 'push':\n\t\t\t\t\t\tawait this.push(notification, item);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'email':\n\t\t\t\t\t\tawait this.email(item);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait NotificationQueue.removeById(notification._id);\n\t\t} catch (e) {\n\t\t\tSystemLogger.error(e);\n\t\t\tawait NotificationQueue.setErrorById(notification._id, e instanceof Error ? e.message : String(e));\n\t\t}\n\n\t\tif (counter >= this.maxBatchSize) {\n\t\t\treturn this.executeWorkerLater();\n\t\t}\n\t\tawait this.worker(counter++);\n\t}\n\n\tgetNextNotification(): Promise<INotification | null> {\n\t\tconst expired = new Date();\n\t\texpired.setMinutes(expired.getMinutes() - 5);\n\n\t\treturn NotificationQueue.findNextInQueueOrExpired(expired);\n\t}\n\n\tasync push({ uid, rid, mid }: INotification, item: INotificationItemPush): Promise<void> {\n\t\tawait PushNotification.send({\n\t\t\trid,\n\t\t\tuid,\n\t\t\tmid,\n\t\t\t...item.data,\n\t\t});\n\t}\n\n\tasync email(item: INotificationItemEmail): Promise<void> {\n\t\treturn sendEmailFromData(item.data);\n\t}\n\n\tasync scheduleItem({\n\t\tuid,\n\t\trid,\n\t\tmid,\n\t\titems,\n\t\tuser,\n\t}: {\n\t\tuid: string;\n\t\trid: string;\n\t\tmid: string;\n\t\titems: NotificationItem[];\n\t\tuser?: Partial<IUser>;\n\t}): Promise<void> {\n\t\tconst receiver =\n\t\t\tuser ||\n\t\t\t(await Users.findOneById<Pick<IUser, 'statusConnection'>>(uid, {\n\t\t\t\tprojection: {\n\t\t\t\t\tstatusConnection: 1,\n\t\t\t\t},\n\t\t\t}));\n\n\t\tif (!receiver) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { statusConnection = 'offline' } = receiver;\n\n\t\tlet schedule: Date | undefined;\n\n\t\tconst delay = this.maxScheduleDelaySeconds[statusConnection];\n\n\t\tif (delay < 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (delay > 0) {\n\t\t\tschedule = new Date();\n\t\t\tschedule.setSeconds(schedule.getSeconds() + delay);\n\t\t}\n\n\t\tawait NotificationQueue.insertOne({\n\t\t\tuid,\n\t\t\trid,\n\t\t\tmid,\n\t\t\tts: new Date(),\n\t\t\tschedule,\n\t\t\titems,\n\t\t});\n\t}\n}\n\nexport const Notification = new NotificationClass();\n\nMeteor.startup(() => {\n\tNotification.initWorker();\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"83b3e8f71ef25e4f03c9dca8c6f24c8217c9e044"}
