{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/startup/migrations/xrun.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/startup/migrations/xrun.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/startup/migrations/xrun.ts","inputSourceMap":{"version":3,"file":"server/startup/migrations/xrun.ts","sourceRoot":"","sources":["server/startup/migrations/xrun.ts"],"names":[],"mappings":"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","sourcesContent":["import { Settings } from '@rocket.chat/models';\nimport type { UpdateResult } from 'mongodb';\n\nimport { upsertPermissions } from '../../../app/authorization/server/functions/upsertPermissions';\nimport { settings } from '../../../app/settings/server';\nimport { migrateDatabase, onServerVersionChange } from '../../lib/migrations';\nimport { ensureCloudWorkspaceRegistered } from '../cloudRegistration';\n\nconst { MIGRATION_VERSION = 'latest' } = process.env;\n\nconst [version, ...subcommands] = MIGRATION_VERSION.split(',');\n\nconst maxAgeSettingMap = new Map([\n\t['RetentionPolicy_MaxAge_Channels', 'RetentionPolicy_TTL_Channels'],\n\t['RetentionPolicy_MaxAge_Groups', 'RetentionPolicy_TTL_Groups'],\n\t['RetentionPolicy_MaxAge_DMs', 'RetentionPolicy_TTL_DMs'],\n]);\n\nconst moveRetentionSetting = async () => {\n\tconst convertDaysToMs = (days: number) => days * 24 * 60 * 60 * 1000;\n\n\tconst promises: Array<Promise<UpdateResult>> = [];\n\tawait Settings.find(\n\t\t{ _id: { $in: Array.from(maxAgeSettingMap.keys()) }, value: { $ne: -1 } },\n\t\t{ projection: { _id: 1, value: 1 } },\n\t).forEach(({ _id, value }) => {\n\t\tconst newSettingId = maxAgeSettingMap.get(_id);\n\t\tif (!newSettingId) {\n\t\t\tthrow new Error(`moveRetentionSetting - Setting ${_id} equivalent does not exist`);\n\t\t}\n\n\t\tconst newValue = convertDaysToMs(Number(value));\n\n\t\tpromises.push(\n\t\t\tSettings.updateOne(\n\t\t\t\t{\n\t\t\t\t\t_id: maxAgeSettingMap.get(_id),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$set: {\n\t\t\t\t\t\tvalue: newValue,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tconst currentCache = settings.getSetting(newSettingId);\n\t\tif (!currentCache) {\n\t\t\treturn;\n\t\t}\n\t\tsettings.set({ ...currentCache, value: newValue });\n\t});\n\n\tawait Promise.all(promises);\n\tawait Settings.updateMany({ _id: { $in: Array.from(maxAgeSettingMap.keys()) } }, { $set: { value: -1 } });\n};\n\nexport const performMigrationProcedure = async (): Promise<void> => {\n\tawait migrateDatabase(version === 'latest' ? version : parseInt(version), subcommands);\n\t// perform operations when the server is starting with a different version\n\tawait onServerVersionChange(async () => {\n\t\tawait upsertPermissions();\n\t\tawait ensureCloudWorkspaceRegistered();\n\t\tawait moveRetentionSetting();\n\t});\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/startup/migrations/xrun.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/startup/migrations/xrun.ts","inputSourceMap":{"version":3,"file":"server/startup/migrations/xrun.ts","sourceRoot":"","sources":["server/startup/migrations/xrun.ts"],"names":[],"mappings":"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","sourcesContent":["import { Settings } from '@rocket.chat/models';\nimport type { UpdateResult } from 'mongodb';\n\nimport { upsertPermissions } from '../../../app/authorization/server/functions/upsertPermissions';\nimport { settings } from '../../../app/settings/server';\nimport { migrateDatabase, onServerVersionChange } from '../../lib/migrations';\nimport { ensureCloudWorkspaceRegistered } from '../cloudRegistration';\n\nconst { MIGRATION_VERSION = 'latest' } = process.env;\n\nconst [version, ...subcommands] = MIGRATION_VERSION.split(',');\n\nconst maxAgeSettingMap = new Map([\n\t['RetentionPolicy_MaxAge_Channels', 'RetentionPolicy_TTL_Channels'],\n\t['RetentionPolicy_MaxAge_Groups', 'RetentionPolicy_TTL_Groups'],\n\t['RetentionPolicy_MaxAge_DMs', 'RetentionPolicy_TTL_DMs'],\n]);\n\nconst moveRetentionSetting = async () => {\n\tconst convertDaysToMs = (days: number) => days * 24 * 60 * 60 * 1000;\n\n\tconst promises: Array<Promise<UpdateResult>> = [];\n\tawait Settings.find(\n\t\t{ _id: { $in: Array.from(maxAgeSettingMap.keys()) }, value: { $ne: -1 } },\n\t\t{ projection: { _id: 1, value: 1 } },\n\t).forEach(({ _id, value }) => {\n\t\tconst newSettingId = maxAgeSettingMap.get(_id);\n\t\tif (!newSettingId) {\n\t\t\tthrow new Error(`moveRetentionSetting - Setting ${_id} equivalent does not exist`);\n\t\t}\n\n\t\tconst newValue = convertDaysToMs(Number(value));\n\n\t\tpromises.push(\n\t\t\tSettings.updateOne(\n\t\t\t\t{\n\t\t\t\t\t_id: maxAgeSettingMap.get(_id),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$set: {\n\t\t\t\t\t\tvalue: newValue,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tconst currentCache = settings.getSetting(newSettingId);\n\t\tif (!currentCache) {\n\t\t\treturn;\n\t\t}\n\t\tsettings.set({ ...currentCache, value: newValue });\n\t});\n\n\tawait Promise.all(promises);\n\tawait Settings.updateMany({ _id: { $in: Array.from(maxAgeSettingMap.keys()) } }, { $set: { value: -1 } });\n};\n\nexport const performMigrationProcedure = async (): Promise<void> => {\n\tawait migrateDatabase(version === 'latest' ? version : parseInt(version), subcommands);\n\t// perform operations when the server is starting with a different version\n\tawait onServerVersionChange(async () => {\n\t\tawait upsertPermissions();\n\t\tawait ensureCloudWorkspaceRegistered();\n\t\tawait moveRetentionSetting();\n\t});\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      performMigrationProcedure: () => performMigrationProcedure\n    });\n    let Settings;\n    module.link(\"@rocket.chat/models\", {\n      Settings(v) {\n        Settings = v;\n      }\n    }, 0);\n    let upsertPermissions;\n    module.link(\"../../../app/authorization/server/functions/upsertPermissions\", {\n      upsertPermissions(v) {\n        upsertPermissions = v;\n      }\n    }, 1);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 2);\n    let migrateDatabase, onServerVersionChange;\n    module.link(\"../../lib/migrations\", {\n      migrateDatabase(v) {\n        migrateDatabase = v;\n      },\n      onServerVersionChange(v) {\n        onServerVersionChange = v;\n      }\n    }, 3);\n    let ensureCloudWorkspaceRegistered;\n    module.link(\"../cloudRegistration\", {\n      ensureCloudWorkspaceRegistered(v) {\n        ensureCloudWorkspaceRegistered = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const {\n      MIGRATION_VERSION = 'latest'\n    } = process.env;\n    const [version, ...subcommands] = MIGRATION_VERSION.split(',');\n    const maxAgeSettingMap = new Map([['RetentionPolicy_MaxAge_Channels', 'RetentionPolicy_TTL_Channels'], ['RetentionPolicy_MaxAge_Groups', 'RetentionPolicy_TTL_Groups'], ['RetentionPolicy_MaxAge_DMs', 'RetentionPolicy_TTL_DMs']]);\n    const moveRetentionSetting = async () => {\n      const convertDaysToMs = days => days * 24 * 60 * 60 * 1000;\n      const promises = [];\n      await Settings.find({\n        _id: {\n          $in: Array.from(maxAgeSettingMap.keys())\n        },\n        value: {\n          $ne: -1\n        }\n      }, {\n        projection: {\n          _id: 1,\n          value: 1\n        }\n      }).forEach(_ref => {\n        let {\n          _id,\n          value\n        } = _ref;\n        const newSettingId = maxAgeSettingMap.get(_id);\n        if (!newSettingId) {\n          throw new Error(\"moveRetentionSetting - Setting \".concat(_id, \" equivalent does not exist\"));\n        }\n        const newValue = convertDaysToMs(Number(value));\n        promises.push(Settings.updateOne({\n          _id: maxAgeSettingMap.get(_id)\n        }, {\n          $set: {\n            value: newValue\n          }\n        }));\n        const currentCache = settings.getSetting(newSettingId);\n        if (!currentCache) {\n          return;\n        }\n        settings.set(_objectSpread(_objectSpread({}, currentCache), {}, {\n          value: newValue\n        }));\n      });\n      await Promise.all(promises);\n      await Settings.updateMany({\n        _id: {\n          $in: Array.from(maxAgeSettingMap.keys())\n        }\n      }, {\n        $set: {\n          value: -1\n        }\n      });\n    };\n    const performMigrationProcedure = async () => {\n      await migrateDatabase(version === 'latest' ? version : parseInt(version), subcommands);\n      // perform operations when the server is starting with a different version\n      await onServerVersionChange(async () => {\n        await upsertPermissions();\n        await ensureCloudWorkspaceRegistered();\n        await moveRetentionSetting();\n      });\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","performMigrationProcedure","Settings","upsertPermissions","settings","migrateDatabase","onServerVersionChange","ensureCloudWorkspaceRegistered","__reifyWaitForDeps__","MIGRATION_VERSION","process","env","version","subcommands","split","maxAgeSettingMap","Map","moveRetentionSetting","convertDaysToMs","days","promises","find","_id","$in","Array","from","keys","value","$ne","projection","forEach","_ref","newSettingId","get","Error","concat","newValue","Number","push","updateOne","$set","currentCache","getSetting","set","Promise","all","updateMany","parseInt","__reify_async_result__","_reifyError","self","async"],"sources":["server/startup/migrations/xrun.ts"],"sourcesContent":["import { Settings } from '@rocket.chat/models';\nimport type { UpdateResult } from 'mongodb';\n\nimport { upsertPermissions } from '../../../app/authorization/server/functions/upsertPermissions';\nimport { settings } from '../../../app/settings/server';\nimport { migrateDatabase, onServerVersionChange } from '../../lib/migrations';\nimport { ensureCloudWorkspaceRegistered } from '../cloudRegistration';\n\nconst { MIGRATION_VERSION = 'latest' } = process.env;\n\nconst [version, ...subcommands] = MIGRATION_VERSION.split(',');\n\nconst maxAgeSettingMap = new Map([\n\t['RetentionPolicy_MaxAge_Channels', 'RetentionPolicy_TTL_Channels'],\n\t['RetentionPolicy_MaxAge_Groups', 'RetentionPolicy_TTL_Groups'],\n\t['RetentionPolicy_MaxAge_DMs', 'RetentionPolicy_TTL_DMs'],\n]);\n\nconst moveRetentionSetting = async () => {\n\tconst convertDaysToMs = (days: number) => days * 24 * 60 * 60 * 1000;\n\n\tconst promises: Array<Promise<UpdateResult>> = [];\n\tawait Settings.find(\n\t\t{ _id: { $in: Array.from(maxAgeSettingMap.keys()) }, value: { $ne: -1 } },\n\t\t{ projection: { _id: 1, value: 1 } },\n\t).forEach(({ _id, value }) => {\n\t\tconst newSettingId = maxAgeSettingMap.get(_id);\n\t\tif (!newSettingId) {\n\t\t\tthrow new Error(`moveRetentionSetting - Setting ${_id} equivalent does not exist`);\n\t\t}\n\n\t\tconst newValue = convertDaysToMs(Number(value));\n\n\t\tpromises.push(\n\t\t\tSettings.updateOne(\n\t\t\t\t{\n\t\t\t\t\t_id: maxAgeSettingMap.get(_id),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$set: {\n\t\t\t\t\t\tvalue: newValue,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tconst currentCache = settings.getSetting(newSettingId);\n\t\tif (!currentCache) {\n\t\t\treturn;\n\t\t}\n\t\tsettings.set({ ...currentCache, value: newValue });\n\t});\n\n\tawait Promise.all(promises);\n\tawait Settings.updateMany({ _id: { $in: Array.from(maxAgeSettingMap.keys()) } }, { $set: { value: -1 } });\n};\n\nexport const performMigrationProcedure = async (): Promise<void> => {\n\tawait migrateDatabase(version === 'latest' ? version : parseInt(version), subcommands);\n\t// perform operations when the server is starting with a different version\n\tawait onServerVersionChange(async () => {\n\t\tawait upsertPermissions();\n\t\tawait ensureCloudWorkspaceRegistered();\n\t\tawait moveRetentionSetting();\n\t});\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"953be7d5a7bee3c314cdc86dd34fe5bd33747eaf"}
