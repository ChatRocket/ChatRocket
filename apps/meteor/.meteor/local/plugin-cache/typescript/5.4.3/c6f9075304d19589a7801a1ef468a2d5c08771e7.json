{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/application/room/message/sender/message-sender-helper.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/federation/application/room/message/sender/message-sender-helper.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/application/room/message/sender/message-sender-helper.ts","inputSourceMap":{"version":3,"file":"server/services/federation/application/room/message/sender/message-sender-helper.ts","sourceRoot":"","sources":["server/services/federation/application/room/message/sender/message-sender-helper.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\n\nimport type { IFederationBridge } from '../../../../domain/IFederationBridge';\nimport type { RocketChatFileAdapter } from '../../../../infrastructure/rocket-chat/adapters/File';\nimport type { RocketChatMessageAdapter } from '../../../../infrastructure/rocket-chat/adapters/Message';\nimport type { RocketChatUserAdapter } from '../../../../infrastructure/rocket-chat/adapters/User';\n\ninterface IExternalMessageSender {\n\tsendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<void>;\n\tsendQuoteMessage(externalRoomId: string, externalSenderId: string, message: IMessage, messageToReplyTo: IMessage): Promise<void>;\n}\n\nclass TextExternalMessageSender implements IExternalMessageSender {\n\tconstructor(\n\t\tprivate readonly bridge: IFederationBridge,\n\t\tprivate readonly internalMessageAdapter: RocketChatMessageAdapter,\n\t\tprivate readonly internalUserAdapter: RocketChatUserAdapter,\n\t) {}\n\n\tpublic async sendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<void> {\n\t\tconst externalMessageId = await this.bridge.sendMessage(externalRoomId, externalSenderId, message);\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n\n\tpublic async sendQuoteMessage(\n\t\texternalRoomId: string,\n\t\texternalSenderId: string,\n\t\tmessage: IMessage,\n\t\tmessageToReplyTo: IMessage,\n\t): Promise<void> {\n\t\tconst originalSender = await this.internalUserAdapter.getFederatedUserByInternalId(messageToReplyTo?.u?._id);\n\t\tconst externalMessageId = await this.bridge.sendReplyToMessage(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tmessageToReplyTo.federation?.eventId as string,\n\t\t\toriginalSender?.getExternalId() as string,\n\t\t\tmessage.msg,\n\t\t);\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n}\n\nclass FileExternalMessageSender implements IExternalMessageSender {\n\tconstructor(\n\t\tprivate readonly bridge: IFederationBridge,\n\t\tprivate readonly internalFileHelper: RocketChatFileAdapter,\n\t\tprivate readonly internalMessageAdapter: RocketChatMessageAdapter,\n\t) {}\n\n\tpublic async sendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<void> {\n\t\tconst file = await this.internalFileHelper.getFileRecordById((message.files || [])[0]?._id);\n\t\tif (!file?.size || !file.type) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n\t\tconst metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n\n\t\tconst externalMessageId = await this.bridge.sendMessageFileToRoom(externalRoomId, externalSenderId, buffer, {\n\t\t\tfilename: file.name || '',\n\t\t\tfileSize: file.size,\n\t\t\tmimeType: file.type,\n\t\t\tmetadata: {\n\t\t\t\twidth: metadata?.width,\n\t\t\t\theight: metadata?.height,\n\t\t\t\tformat: metadata?.format,\n\t\t\t},\n\t\t});\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n\n\tpublic async sendQuoteMessage(\n\t\texternalRoomId: string,\n\t\texternalSenderId: string,\n\t\tmessage: IMessage,\n\t\tmessageToReplyTo: IMessage,\n\t): Promise<void> {\n\t\tconst file = await this.internalFileHelper.getFileRecordById((message.files || [])[0]?._id);\n\t\tif (!file?.size || !file.type) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n\t\tconst metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n\n\t\tconst externalMessageId = await this.bridge.sendReplyMessageFileToRoom(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tbuffer,\n\t\t\t{\n\t\t\t\tfilename: file.name || '',\n\t\t\t\tfileSize: file.size,\n\t\t\t\tmimeType: file.type,\n\t\t\t\tmetadata: {\n\t\t\t\t\twidth: metadata?.width,\n\t\t\t\t\theight: metadata?.height,\n\t\t\t\t\tformat: metadata?.format,\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessageToReplyTo.federation?.eventId as string,\n\t\t);\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n}\n\nclass ThreadTextExternalMessageSender implements IExternalMessageSender {\n\tconstructor(\n\t\tprivate readonly bridge: IFederationBridge,\n\t\tprivate readonly internalMessageAdapter: RocketChatMessageAdapter,\n\t\tprivate readonly internalUserAdapter: RocketChatUserAdapter,\n\t) {}\n\n\tpublic async sendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<void> {\n\t\tif (!message.tmid) {\n\t\t\treturn;\n\t\t}\n\t\tconst parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n\t\tif (!parentMessage?.federation?.eventId) {\n\t\t\treturn;\n\t\t}\n\t\tconst externalMessageId = await this.bridge.sendThreadMessage(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tmessage,\n\t\t\tparentMessage.federation.eventId,\n\t\t);\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n\n\tpublic async sendQuoteMessage(\n\t\texternalRoomId: string,\n\t\texternalSenderId: string,\n\t\tmessage: IMessage,\n\t\tmessageToReplyTo: IMessage,\n\t): Promise<void> {\n\t\tif (!message.tmid) {\n\t\t\treturn;\n\t\t}\n\t\tconst parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n\t\tif (!parentMessage?.federation?.eventId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst originalSender = await this.internalUserAdapter.getFederatedUserByInternalId(messageToReplyTo?.u?._id);\n\t\tconst externalMessageId = await this.bridge.sendThreadReplyToMessage(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tmessageToReplyTo.federation?.eventId as string,\n\t\t\toriginalSender?.getExternalId() as string,\n\t\t\tmessage.msg,\n\t\t\tparentMessage.federation.eventId,\n\t\t);\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n}\n\nclass ThreadFileExternalMessageSender implements IExternalMessageSender {\n\tconstructor(\n\t\tprivate readonly bridge: IFederationBridge,\n\t\tprivate readonly internalFileHelper: RocketChatFileAdapter,\n\t\tprivate readonly internalMessageAdapter: RocketChatMessageAdapter,\n\t) {}\n\n\tpublic async sendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<void> {\n\t\tconst file = await this.internalFileHelper.getFileRecordById((message.files || [])[0]?._id);\n\t\tif (!file?.size || !file.type || !file.name) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!message.tmid) {\n\t\t\treturn;\n\t\t}\n\t\tconst parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n\t\tif (!parentMessage?.federation?.eventId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n\t\tconst metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n\n\t\tconst externalMessageId = await this.bridge.sendMessageFileToThread(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tbuffer,\n\t\t\t{\n\t\t\t\tfilename: file.name,\n\t\t\t\tfileSize: file.size,\n\t\t\t\tmimeType: file.type,\n\t\t\t\tmetadata: {\n\t\t\t\t\twidth: metadata?.width,\n\t\t\t\t\theight: metadata?.height,\n\t\t\t\t\tformat: metadata?.format,\n\t\t\t\t},\n\t\t\t},\n\t\t\tparentMessage.federation.eventId,\n\t\t);\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n\n\tpublic async sendQuoteMessage(\n\t\texternalRoomId: string,\n\t\texternalSenderId: string,\n\t\tmessage: IMessage,\n\t\tmessageToReplyTo: IMessage,\n\t): Promise<void> {\n\t\tconst file = await this.internalFileHelper.getFileRecordById((message.files || [])[0]?._id);\n\t\tif (!file?.size || !file.type || !file.name) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!message.tmid) {\n\t\t\treturn;\n\t\t}\n\t\tconst parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n\t\tif (!parentMessage?.federation?.eventId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n\t\tconst metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n\n\t\tconst externalMessageId = await this.bridge.sendReplyMessageFileToThread(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tbuffer,\n\t\t\t{\n\t\t\t\tfilename: file.name,\n\t\t\t\tfileSize: file.size,\n\t\t\t\tmimeType: file.type,\n\t\t\t\tmetadata: {\n\t\t\t\t\twidth: metadata?.width,\n\t\t\t\t\theight: metadata?.height,\n\t\t\t\t\tformat: metadata?.format,\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessageToReplyTo.federation?.eventId as string,\n\t\t\tparentMessage.federation.eventId,\n\t\t);\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n}\n\nexport const getExternalMessageSender = ({\n\tmessage,\n\tbridge,\n\tinternalFileAdapter,\n\tinternalMessageAdapter,\n\tinternalUserAdapter,\n\tisThreadedMessage,\n}: {\n\tmessage: IMessage;\n\tisThreadedMessage: boolean;\n\tbridge: IFederationBridge;\n\tinternalFileAdapter: RocketChatFileAdapter;\n\tinternalMessageAdapter: RocketChatMessageAdapter;\n\tinternalUserAdapter: RocketChatUserAdapter;\n}): IExternalMessageSender => {\n\tif (isThreadedMessage) {\n\t\treturn message.files\n\t\t\t? new ThreadFileExternalMessageSender(bridge, internalFileAdapter, internalMessageAdapter)\n\t\t\t: new ThreadTextExternalMessageSender(bridge, internalMessageAdapter, internalUserAdapter);\n\t}\n\treturn message.files\n\t\t? new FileExternalMessageSender(bridge, internalFileAdapter, internalMessageAdapter)\n\t\t: new TextExternalMessageSender(bridge, internalMessageAdapter, internalUserAdapter);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/application/room/message/sender/message-sender-helper.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/federation/application/room/message/sender/message-sender-helper.ts","inputSourceMap":{"version":3,"file":"server/services/federation/application/room/message/sender/message-sender-helper.ts","sourceRoot":"","sources":["server/services/federation/application/room/message/sender/message-sender-helper.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\n\nimport type { IFederationBridge } from '../../../../domain/IFederationBridge';\nimport type { RocketChatFileAdapter } from '../../../../infrastructure/rocket-chat/adapters/File';\nimport type { RocketChatMessageAdapter } from '../../../../infrastructure/rocket-chat/adapters/Message';\nimport type { RocketChatUserAdapter } from '../../../../infrastructure/rocket-chat/adapters/User';\n\ninterface IExternalMessageSender {\n\tsendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<void>;\n\tsendQuoteMessage(externalRoomId: string, externalSenderId: string, message: IMessage, messageToReplyTo: IMessage): Promise<void>;\n}\n\nclass TextExternalMessageSender implements IExternalMessageSender {\n\tconstructor(\n\t\tprivate readonly bridge: IFederationBridge,\n\t\tprivate readonly internalMessageAdapter: RocketChatMessageAdapter,\n\t\tprivate readonly internalUserAdapter: RocketChatUserAdapter,\n\t) {}\n\n\tpublic async sendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<void> {\n\t\tconst externalMessageId = await this.bridge.sendMessage(externalRoomId, externalSenderId, message);\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n\n\tpublic async sendQuoteMessage(\n\t\texternalRoomId: string,\n\t\texternalSenderId: string,\n\t\tmessage: IMessage,\n\t\tmessageToReplyTo: IMessage,\n\t): Promise<void> {\n\t\tconst originalSender = await this.internalUserAdapter.getFederatedUserByInternalId(messageToReplyTo?.u?._id);\n\t\tconst externalMessageId = await this.bridge.sendReplyToMessage(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tmessageToReplyTo.federation?.eventId as string,\n\t\t\toriginalSender?.getExternalId() as string,\n\t\t\tmessage.msg,\n\t\t);\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n}\n\nclass FileExternalMessageSender implements IExternalMessageSender {\n\tconstructor(\n\t\tprivate readonly bridge: IFederationBridge,\n\t\tprivate readonly internalFileHelper: RocketChatFileAdapter,\n\t\tprivate readonly internalMessageAdapter: RocketChatMessageAdapter,\n\t) {}\n\n\tpublic async sendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<void> {\n\t\tconst file = await this.internalFileHelper.getFileRecordById((message.files || [])[0]?._id);\n\t\tif (!file?.size || !file.type) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n\t\tconst metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n\n\t\tconst externalMessageId = await this.bridge.sendMessageFileToRoom(externalRoomId, externalSenderId, buffer, {\n\t\t\tfilename: file.name || '',\n\t\t\tfileSize: file.size,\n\t\t\tmimeType: file.type,\n\t\t\tmetadata: {\n\t\t\t\twidth: metadata?.width,\n\t\t\t\theight: metadata?.height,\n\t\t\t\tformat: metadata?.format,\n\t\t\t},\n\t\t});\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n\n\tpublic async sendQuoteMessage(\n\t\texternalRoomId: string,\n\t\texternalSenderId: string,\n\t\tmessage: IMessage,\n\t\tmessageToReplyTo: IMessage,\n\t): Promise<void> {\n\t\tconst file = await this.internalFileHelper.getFileRecordById((message.files || [])[0]?._id);\n\t\tif (!file?.size || !file.type) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n\t\tconst metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n\n\t\tconst externalMessageId = await this.bridge.sendReplyMessageFileToRoom(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tbuffer,\n\t\t\t{\n\t\t\t\tfilename: file.name || '',\n\t\t\t\tfileSize: file.size,\n\t\t\t\tmimeType: file.type,\n\t\t\t\tmetadata: {\n\t\t\t\t\twidth: metadata?.width,\n\t\t\t\t\theight: metadata?.height,\n\t\t\t\t\tformat: metadata?.format,\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessageToReplyTo.federation?.eventId as string,\n\t\t);\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n}\n\nclass ThreadTextExternalMessageSender implements IExternalMessageSender {\n\tconstructor(\n\t\tprivate readonly bridge: IFederationBridge,\n\t\tprivate readonly internalMessageAdapter: RocketChatMessageAdapter,\n\t\tprivate readonly internalUserAdapter: RocketChatUserAdapter,\n\t) {}\n\n\tpublic async sendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<void> {\n\t\tif (!message.tmid) {\n\t\t\treturn;\n\t\t}\n\t\tconst parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n\t\tif (!parentMessage?.federation?.eventId) {\n\t\t\treturn;\n\t\t}\n\t\tconst externalMessageId = await this.bridge.sendThreadMessage(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tmessage,\n\t\t\tparentMessage.federation.eventId,\n\t\t);\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n\n\tpublic async sendQuoteMessage(\n\t\texternalRoomId: string,\n\t\texternalSenderId: string,\n\t\tmessage: IMessage,\n\t\tmessageToReplyTo: IMessage,\n\t): Promise<void> {\n\t\tif (!message.tmid) {\n\t\t\treturn;\n\t\t}\n\t\tconst parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n\t\tif (!parentMessage?.federation?.eventId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst originalSender = await this.internalUserAdapter.getFederatedUserByInternalId(messageToReplyTo?.u?._id);\n\t\tconst externalMessageId = await this.bridge.sendThreadReplyToMessage(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tmessageToReplyTo.federation?.eventId as string,\n\t\t\toriginalSender?.getExternalId() as string,\n\t\t\tmessage.msg,\n\t\t\tparentMessage.federation.eventId,\n\t\t);\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n}\n\nclass ThreadFileExternalMessageSender implements IExternalMessageSender {\n\tconstructor(\n\t\tprivate readonly bridge: IFederationBridge,\n\t\tprivate readonly internalFileHelper: RocketChatFileAdapter,\n\t\tprivate readonly internalMessageAdapter: RocketChatMessageAdapter,\n\t) {}\n\n\tpublic async sendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<void> {\n\t\tconst file = await this.internalFileHelper.getFileRecordById((message.files || [])[0]?._id);\n\t\tif (!file?.size || !file.type || !file.name) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!message.tmid) {\n\t\t\treturn;\n\t\t}\n\t\tconst parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n\t\tif (!parentMessage?.federation?.eventId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n\t\tconst metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n\n\t\tconst externalMessageId = await this.bridge.sendMessageFileToThread(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tbuffer,\n\t\t\t{\n\t\t\t\tfilename: file.name,\n\t\t\t\tfileSize: file.size,\n\t\t\t\tmimeType: file.type,\n\t\t\t\tmetadata: {\n\t\t\t\t\twidth: metadata?.width,\n\t\t\t\t\theight: metadata?.height,\n\t\t\t\t\tformat: metadata?.format,\n\t\t\t\t},\n\t\t\t},\n\t\t\tparentMessage.federation.eventId,\n\t\t);\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n\n\tpublic async sendQuoteMessage(\n\t\texternalRoomId: string,\n\t\texternalSenderId: string,\n\t\tmessage: IMessage,\n\t\tmessageToReplyTo: IMessage,\n\t): Promise<void> {\n\t\tconst file = await this.internalFileHelper.getFileRecordById((message.files || [])[0]?._id);\n\t\tif (!file?.size || !file.type || !file.name) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!message.tmid) {\n\t\t\treturn;\n\t\t}\n\t\tconst parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n\t\tif (!parentMessage?.federation?.eventId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n\t\tconst metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n\n\t\tconst externalMessageId = await this.bridge.sendReplyMessageFileToThread(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tbuffer,\n\t\t\t{\n\t\t\t\tfilename: file.name,\n\t\t\t\tfileSize: file.size,\n\t\t\t\tmimeType: file.type,\n\t\t\t\tmetadata: {\n\t\t\t\t\twidth: metadata?.width,\n\t\t\t\t\theight: metadata?.height,\n\t\t\t\t\tformat: metadata?.format,\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessageToReplyTo.federation?.eventId as string,\n\t\t\tparentMessage.federation.eventId,\n\t\t);\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n}\n\nexport const getExternalMessageSender = ({\n\tmessage,\n\tbridge,\n\tinternalFileAdapter,\n\tinternalMessageAdapter,\n\tinternalUserAdapter,\n\tisThreadedMessage,\n}: {\n\tmessage: IMessage;\n\tisThreadedMessage: boolean;\n\tbridge: IFederationBridge;\n\tinternalFileAdapter: RocketChatFileAdapter;\n\tinternalMessageAdapter: RocketChatMessageAdapter;\n\tinternalUserAdapter: RocketChatUserAdapter;\n}): IExternalMessageSender => {\n\tif (isThreadedMessage) {\n\t\treturn message.files\n\t\t\t? new ThreadFileExternalMessageSender(bridge, internalFileAdapter, internalMessageAdapter)\n\t\t\t: new ThreadTextExternalMessageSender(bridge, internalMessageAdapter, internalUserAdapter);\n\t}\n\treturn message.files\n\t\t? new FileExternalMessageSender(bridge, internalFileAdapter, internalMessageAdapter)\n\t\t: new TextExternalMessageSender(bridge, internalMessageAdapter, internalUserAdapter);\n};\n"]}}},"code":"module.export({\n  getExternalMessageSender: () => getExternalMessageSender\n});\nclass TextExternalMessageSender {\n  constructor(bridge, internalMessageAdapter, internalUserAdapter) {\n    this.bridge = void 0;\n    this.internalMessageAdapter = void 0;\n    this.internalUserAdapter = void 0;\n    this.bridge = bridge;\n    this.internalMessageAdapter = internalMessageAdapter;\n    this.internalUserAdapter = internalUserAdapter;\n  }\n  async sendMessage(externalRoomId, externalSenderId, message) {\n    const externalMessageId = await this.bridge.sendMessage(externalRoomId, externalSenderId, message);\n    await this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n  }\n  async sendQuoteMessage(externalRoomId, externalSenderId, message, messageToReplyTo) {\n    var _messageToReplyTo$u, _messageToReplyTo$fed;\n    const originalSender = await this.internalUserAdapter.getFederatedUserByInternalId(messageToReplyTo === null || messageToReplyTo === void 0 ? void 0 : (_messageToReplyTo$u = messageToReplyTo.u) === null || _messageToReplyTo$u === void 0 ? void 0 : _messageToReplyTo$u._id);\n    const externalMessageId = await this.bridge.sendReplyToMessage(externalRoomId, externalSenderId, (_messageToReplyTo$fed = messageToReplyTo.federation) === null || _messageToReplyTo$fed === void 0 ? void 0 : _messageToReplyTo$fed.eventId, originalSender === null || originalSender === void 0 ? void 0 : originalSender.getExternalId(), message.msg);\n    await this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n  }\n}\nclass FileExternalMessageSender {\n  constructor(bridge, internalFileHelper, internalMessageAdapter) {\n    this.bridge = void 0;\n    this.internalFileHelper = void 0;\n    this.internalMessageAdapter = void 0;\n    this.bridge = bridge;\n    this.internalFileHelper = internalFileHelper;\n    this.internalMessageAdapter = internalMessageAdapter;\n  }\n  async sendMessage(externalRoomId, externalSenderId, message) {\n    var _;\n    const file = await this.internalFileHelper.getFileRecordById((_ = (message.files || [])[0]) === null || _ === void 0 ? void 0 : _._id);\n    if (!(file !== null && file !== void 0 && file.size) || !file.type) {\n      return;\n    }\n    const buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n    const metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n    const externalMessageId = await this.bridge.sendMessageFileToRoom(externalRoomId, externalSenderId, buffer, {\n      filename: file.name || '',\n      fileSize: file.size,\n      mimeType: file.type,\n      metadata: {\n        width: metadata === null || metadata === void 0 ? void 0 : metadata.width,\n        height: metadata === null || metadata === void 0 ? void 0 : metadata.height,\n        format: metadata === null || metadata === void 0 ? void 0 : metadata.format\n      }\n    });\n    await this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n  }\n  async sendQuoteMessage(externalRoomId, externalSenderId, message, messageToReplyTo) {\n    var _2, _messageToReplyTo$fed2;\n    const file = await this.internalFileHelper.getFileRecordById((_2 = (message.files || [])[0]) === null || _2 === void 0 ? void 0 : _2._id);\n    if (!(file !== null && file !== void 0 && file.size) || !file.type) {\n      return;\n    }\n    const buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n    const metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n    const externalMessageId = await this.bridge.sendReplyMessageFileToRoom(externalRoomId, externalSenderId, buffer, {\n      filename: file.name || '',\n      fileSize: file.size,\n      mimeType: file.type,\n      metadata: {\n        width: metadata === null || metadata === void 0 ? void 0 : metadata.width,\n        height: metadata === null || metadata === void 0 ? void 0 : metadata.height,\n        format: metadata === null || metadata === void 0 ? void 0 : metadata.format\n      }\n    }, (_messageToReplyTo$fed2 = messageToReplyTo.federation) === null || _messageToReplyTo$fed2 === void 0 ? void 0 : _messageToReplyTo$fed2.eventId);\n    await this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n  }\n}\nclass ThreadTextExternalMessageSender {\n  constructor(bridge, internalMessageAdapter, internalUserAdapter) {\n    this.bridge = void 0;\n    this.internalMessageAdapter = void 0;\n    this.internalUserAdapter = void 0;\n    this.bridge = bridge;\n    this.internalMessageAdapter = internalMessageAdapter;\n    this.internalUserAdapter = internalUserAdapter;\n  }\n  async sendMessage(externalRoomId, externalSenderId, message) {\n    var _parentMessage$federa;\n    if (!message.tmid) {\n      return;\n    }\n    const parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n    if (!(parentMessage !== null && parentMessage !== void 0 && (_parentMessage$federa = parentMessage.federation) !== null && _parentMessage$federa !== void 0 && _parentMessage$federa.eventId)) {\n      return;\n    }\n    const externalMessageId = await this.bridge.sendThreadMessage(externalRoomId, externalSenderId, message, parentMessage.federation.eventId);\n    await this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n  }\n  async sendQuoteMessage(externalRoomId, externalSenderId, message, messageToReplyTo) {\n    var _parentMessage$federa2, _messageToReplyTo$u2, _messageToReplyTo$fed3;\n    if (!message.tmid) {\n      return;\n    }\n    const parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n    if (!(parentMessage !== null && parentMessage !== void 0 && (_parentMessage$federa2 = parentMessage.federation) !== null && _parentMessage$federa2 !== void 0 && _parentMessage$federa2.eventId)) {\n      return;\n    }\n    const originalSender = await this.internalUserAdapter.getFederatedUserByInternalId(messageToReplyTo === null || messageToReplyTo === void 0 ? void 0 : (_messageToReplyTo$u2 = messageToReplyTo.u) === null || _messageToReplyTo$u2 === void 0 ? void 0 : _messageToReplyTo$u2._id);\n    const externalMessageId = await this.bridge.sendThreadReplyToMessage(externalRoomId, externalSenderId, (_messageToReplyTo$fed3 = messageToReplyTo.federation) === null || _messageToReplyTo$fed3 === void 0 ? void 0 : _messageToReplyTo$fed3.eventId, originalSender === null || originalSender === void 0 ? void 0 : originalSender.getExternalId(), message.msg, parentMessage.federation.eventId);\n    await this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n  }\n}\nclass ThreadFileExternalMessageSender {\n  constructor(bridge, internalFileHelper, internalMessageAdapter) {\n    this.bridge = void 0;\n    this.internalFileHelper = void 0;\n    this.internalMessageAdapter = void 0;\n    this.bridge = bridge;\n    this.internalFileHelper = internalFileHelper;\n    this.internalMessageAdapter = internalMessageAdapter;\n  }\n  async sendMessage(externalRoomId, externalSenderId, message) {\n    var _3, _parentMessage$federa3;\n    const file = await this.internalFileHelper.getFileRecordById((_3 = (message.files || [])[0]) === null || _3 === void 0 ? void 0 : _3._id);\n    if (!(file !== null && file !== void 0 && file.size) || !file.type || !file.name) {\n      return;\n    }\n    if (!message.tmid) {\n      return;\n    }\n    const parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n    if (!(parentMessage !== null && parentMessage !== void 0 && (_parentMessage$federa3 = parentMessage.federation) !== null && _parentMessage$federa3 !== void 0 && _parentMessage$federa3.eventId)) {\n      return;\n    }\n    const buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n    const metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n    const externalMessageId = await this.bridge.sendMessageFileToThread(externalRoomId, externalSenderId, buffer, {\n      filename: file.name,\n      fileSize: file.size,\n      mimeType: file.type,\n      metadata: {\n        width: metadata === null || metadata === void 0 ? void 0 : metadata.width,\n        height: metadata === null || metadata === void 0 ? void 0 : metadata.height,\n        format: metadata === null || metadata === void 0 ? void 0 : metadata.format\n      }\n    }, parentMessage.federation.eventId);\n    await this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n  }\n  async sendQuoteMessage(externalRoomId, externalSenderId, message, messageToReplyTo) {\n    var _4, _parentMessage$federa4, _messageToReplyTo$fed4;\n    const file = await this.internalFileHelper.getFileRecordById((_4 = (message.files || [])[0]) === null || _4 === void 0 ? void 0 : _4._id);\n    if (!(file !== null && file !== void 0 && file.size) || !file.type || !file.name) {\n      return;\n    }\n    if (!message.tmid) {\n      return;\n    }\n    const parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n    if (!(parentMessage !== null && parentMessage !== void 0 && (_parentMessage$federa4 = parentMessage.federation) !== null && _parentMessage$federa4 !== void 0 && _parentMessage$federa4.eventId)) {\n      return;\n    }\n    const buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n    const metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n    const externalMessageId = await this.bridge.sendReplyMessageFileToThread(externalRoomId, externalSenderId, buffer, {\n      filename: file.name,\n      fileSize: file.size,\n      mimeType: file.type,\n      metadata: {\n        width: metadata === null || metadata === void 0 ? void 0 : metadata.width,\n        height: metadata === null || metadata === void 0 ? void 0 : metadata.height,\n        format: metadata === null || metadata === void 0 ? void 0 : metadata.format\n      }\n    }, (_messageToReplyTo$fed4 = messageToReplyTo.federation) === null || _messageToReplyTo$fed4 === void 0 ? void 0 : _messageToReplyTo$fed4.eventId, parentMessage.federation.eventId);\n    await this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n  }\n}\nconst getExternalMessageSender = _ref => {\n  let {\n    message,\n    bridge,\n    internalFileAdapter,\n    internalMessageAdapter,\n    internalUserAdapter,\n    isThreadedMessage\n  } = _ref;\n  if (isThreadedMessage) {\n    return message.files ? new ThreadFileExternalMessageSender(bridge, internalFileAdapter, internalMessageAdapter) : new ThreadTextExternalMessageSender(bridge, internalMessageAdapter, internalUserAdapter);\n  }\n  return message.files ? new FileExternalMessageSender(bridge, internalFileAdapter, internalMessageAdapter) : new TextExternalMessageSender(bridge, internalMessageAdapter, internalUserAdapter);\n};","map":{"version":3,"names":["module","export","getExternalMessageSender","TextExternalMessageSender","constructor","bridge","internalMessageAdapter","internalUserAdapter","sendMessage","externalRoomId","externalSenderId","message","externalMessageId","setExternalFederationEventOnMessage","_id","sendQuoteMessage","messageToReplyTo","_messageToReplyTo$u","_messageToReplyTo$fed","originalSender","getFederatedUserByInternalId","u","sendReplyToMessage","federation","eventId","getExternalId","msg","FileExternalMessageSender","internalFileHelper","_","file","getFileRecordById","files","size","type","buffer","getBufferFromFileRecord","metadata","extractMetadataFromFile","sendMessageFileToRoom","filename","name","fileSize","mimeType","width","height","format","_2","_messageToReplyTo$fed2","sendReplyMessageFileToRoom","ThreadTextExternalMessageSender","_parentMessage$federa","tmid","parentMessage","getMessageById","sendThreadMessage","_parentMessage$federa2","_messageToReplyTo$u2","_messageToReplyTo$fed3","sendThreadReplyToMessage","ThreadFileExternalMessageSender","_3","_parentMessage$federa3","sendMessageFileToThread","_4","_parentMessage$federa4","_messageToReplyTo$fed4","sendReplyMessageFileToThread","_ref","internalFileAdapter","isThreadedMessage"],"sources":["server/services/federation/application/room/message/sender/message-sender-helper.ts"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\n\nimport type { IFederationBridge } from '../../../../domain/IFederationBridge';\nimport type { RocketChatFileAdapter } from '../../../../infrastructure/rocket-chat/adapters/File';\nimport type { RocketChatMessageAdapter } from '../../../../infrastructure/rocket-chat/adapters/Message';\nimport type { RocketChatUserAdapter } from '../../../../infrastructure/rocket-chat/adapters/User';\n\ninterface IExternalMessageSender {\n\tsendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<void>;\n\tsendQuoteMessage(externalRoomId: string, externalSenderId: string, message: IMessage, messageToReplyTo: IMessage): Promise<void>;\n}\n\nclass TextExternalMessageSender implements IExternalMessageSender {\n\tconstructor(\n\t\tprivate readonly bridge: IFederationBridge,\n\t\tprivate readonly internalMessageAdapter: RocketChatMessageAdapter,\n\t\tprivate readonly internalUserAdapter: RocketChatUserAdapter,\n\t) {}\n\n\tpublic async sendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<void> {\n\t\tconst externalMessageId = await this.bridge.sendMessage(externalRoomId, externalSenderId, message);\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n\n\tpublic async sendQuoteMessage(\n\t\texternalRoomId: string,\n\t\texternalSenderId: string,\n\t\tmessage: IMessage,\n\t\tmessageToReplyTo: IMessage,\n\t): Promise<void> {\n\t\tconst originalSender = await this.internalUserAdapter.getFederatedUserByInternalId(messageToReplyTo?.u?._id);\n\t\tconst externalMessageId = await this.bridge.sendReplyToMessage(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tmessageToReplyTo.federation?.eventId as string,\n\t\t\toriginalSender?.getExternalId() as string,\n\t\t\tmessage.msg,\n\t\t);\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n}\n\nclass FileExternalMessageSender implements IExternalMessageSender {\n\tconstructor(\n\t\tprivate readonly bridge: IFederationBridge,\n\t\tprivate readonly internalFileHelper: RocketChatFileAdapter,\n\t\tprivate readonly internalMessageAdapter: RocketChatMessageAdapter,\n\t) {}\n\n\tpublic async sendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<void> {\n\t\tconst file = await this.internalFileHelper.getFileRecordById((message.files || [])[0]?._id);\n\t\tif (!file?.size || !file.type) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n\t\tconst metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n\n\t\tconst externalMessageId = await this.bridge.sendMessageFileToRoom(externalRoomId, externalSenderId, buffer, {\n\t\t\tfilename: file.name || '',\n\t\t\tfileSize: file.size,\n\t\t\tmimeType: file.type,\n\t\t\tmetadata: {\n\t\t\t\twidth: metadata?.width,\n\t\t\t\theight: metadata?.height,\n\t\t\t\tformat: metadata?.format,\n\t\t\t},\n\t\t});\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n\n\tpublic async sendQuoteMessage(\n\t\texternalRoomId: string,\n\t\texternalSenderId: string,\n\t\tmessage: IMessage,\n\t\tmessageToReplyTo: IMessage,\n\t): Promise<void> {\n\t\tconst file = await this.internalFileHelper.getFileRecordById((message.files || [])[0]?._id);\n\t\tif (!file?.size || !file.type) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n\t\tconst metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n\n\t\tconst externalMessageId = await this.bridge.sendReplyMessageFileToRoom(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tbuffer,\n\t\t\t{\n\t\t\t\tfilename: file.name || '',\n\t\t\t\tfileSize: file.size,\n\t\t\t\tmimeType: file.type,\n\t\t\t\tmetadata: {\n\t\t\t\t\twidth: metadata?.width,\n\t\t\t\t\theight: metadata?.height,\n\t\t\t\t\tformat: metadata?.format,\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessageToReplyTo.federation?.eventId as string,\n\t\t);\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n}\n\nclass ThreadTextExternalMessageSender implements IExternalMessageSender {\n\tconstructor(\n\t\tprivate readonly bridge: IFederationBridge,\n\t\tprivate readonly internalMessageAdapter: RocketChatMessageAdapter,\n\t\tprivate readonly internalUserAdapter: RocketChatUserAdapter,\n\t) {}\n\n\tpublic async sendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<void> {\n\t\tif (!message.tmid) {\n\t\t\treturn;\n\t\t}\n\t\tconst parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n\t\tif (!parentMessage?.federation?.eventId) {\n\t\t\treturn;\n\t\t}\n\t\tconst externalMessageId = await this.bridge.sendThreadMessage(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tmessage,\n\t\t\tparentMessage.federation.eventId,\n\t\t);\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n\n\tpublic async sendQuoteMessage(\n\t\texternalRoomId: string,\n\t\texternalSenderId: string,\n\t\tmessage: IMessage,\n\t\tmessageToReplyTo: IMessage,\n\t): Promise<void> {\n\t\tif (!message.tmid) {\n\t\t\treturn;\n\t\t}\n\t\tconst parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n\t\tif (!parentMessage?.federation?.eventId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst originalSender = await this.internalUserAdapter.getFederatedUserByInternalId(messageToReplyTo?.u?._id);\n\t\tconst externalMessageId = await this.bridge.sendThreadReplyToMessage(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tmessageToReplyTo.federation?.eventId as string,\n\t\t\toriginalSender?.getExternalId() as string,\n\t\t\tmessage.msg,\n\t\t\tparentMessage.federation.eventId,\n\t\t);\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n}\n\nclass ThreadFileExternalMessageSender implements IExternalMessageSender {\n\tconstructor(\n\t\tprivate readonly bridge: IFederationBridge,\n\t\tprivate readonly internalFileHelper: RocketChatFileAdapter,\n\t\tprivate readonly internalMessageAdapter: RocketChatMessageAdapter,\n\t) {}\n\n\tpublic async sendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<void> {\n\t\tconst file = await this.internalFileHelper.getFileRecordById((message.files || [])[0]?._id);\n\t\tif (!file?.size || !file.type || !file.name) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!message.tmid) {\n\t\t\treturn;\n\t\t}\n\t\tconst parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n\t\tif (!parentMessage?.federation?.eventId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n\t\tconst metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n\n\t\tconst externalMessageId = await this.bridge.sendMessageFileToThread(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tbuffer,\n\t\t\t{\n\t\t\t\tfilename: file.name,\n\t\t\t\tfileSize: file.size,\n\t\t\t\tmimeType: file.type,\n\t\t\t\tmetadata: {\n\t\t\t\t\twidth: metadata?.width,\n\t\t\t\t\theight: metadata?.height,\n\t\t\t\t\tformat: metadata?.format,\n\t\t\t\t},\n\t\t\t},\n\t\t\tparentMessage.federation.eventId,\n\t\t);\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n\n\tpublic async sendQuoteMessage(\n\t\texternalRoomId: string,\n\t\texternalSenderId: string,\n\t\tmessage: IMessage,\n\t\tmessageToReplyTo: IMessage,\n\t): Promise<void> {\n\t\tconst file = await this.internalFileHelper.getFileRecordById((message.files || [])[0]?._id);\n\t\tif (!file?.size || !file.type || !file.name) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!message.tmid) {\n\t\t\treturn;\n\t\t}\n\t\tconst parentMessage = await this.internalMessageAdapter.getMessageById(message.tmid);\n\t\tif (!parentMessage?.federation?.eventId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buffer = await this.internalFileHelper.getBufferFromFileRecord(file);\n\t\tconst metadata = await this.internalFileHelper.extractMetadataFromFile(file);\n\n\t\tconst externalMessageId = await this.bridge.sendReplyMessageFileToThread(\n\t\t\texternalRoomId,\n\t\t\texternalSenderId,\n\t\t\tbuffer,\n\t\t\t{\n\t\t\t\tfilename: file.name,\n\t\t\t\tfileSize: file.size,\n\t\t\t\tmimeType: file.type,\n\t\t\t\tmetadata: {\n\t\t\t\t\twidth: metadata?.width,\n\t\t\t\t\theight: metadata?.height,\n\t\t\t\t\tformat: metadata?.format,\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessageToReplyTo.federation?.eventId as string,\n\t\t\tparentMessage.federation.eventId,\n\t\t);\n\n\t\tawait this.internalMessageAdapter.setExternalFederationEventOnMessage(message._id, externalMessageId);\n\t}\n}\n\nexport const getExternalMessageSender = ({\n\tmessage,\n\tbridge,\n\tinternalFileAdapter,\n\tinternalMessageAdapter,\n\tinternalUserAdapter,\n\tisThreadedMessage,\n}: {\n\tmessage: IMessage;\n\tisThreadedMessage: boolean;\n\tbridge: IFederationBridge;\n\tinternalFileAdapter: RocketChatFileAdapter;\n\tinternalMessageAdapter: RocketChatMessageAdapter;\n\tinternalUserAdapter: RocketChatUserAdapter;\n}): IExternalMessageSender => {\n\tif (isThreadedMessage) {\n\t\treturn message.files\n\t\t\t? new ThreadFileExternalMessageSender(bridge, internalFileAdapter, internalMessageAdapter)\n\t\t\t: new ThreadTextExternalMessageSender(bridge, internalMessageAdapter, internalUserAdapter);\n\t}\n\treturn message.files\n\t\t? new FileExternalMessageSender(bridge, internalFileAdapter, internalMessageAdapter)\n\t\t: new TextExternalMessageSender(bridge, internalMessageAdapter, internalUserAdapter);\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c6f9075304d19589a7801a1ef468a2d5c08771e7"}
