{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/ecdh.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/ecdh.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/ecdh.ts","inputSourceMap":{"version":3,"file":"client/ecdh.ts","sourceRoot":"","sources":["client/ecdh.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport type { ClientSession } from '../app/ecdh/client/ClientSession';\nimport { sdk } from '../app/utils/client/lib/SDKClient';\n\nlet resolveSession: (value: ClientSession | void) => void;\nconst sessionPromise = new Promise<ClientSession | void>((resolve) => {\n\tresolveSession = resolve;\n});\n\nfunction init(session: ClientSession): void {\n\tMeteor.connection._stream.allowConnection();\n\n\tconst _didMessage = Meteor.connection._stream.socket._didMessage.bind(Meteor.connection._stream.socket);\n\tconst send = Meteor.connection._stream.socket.send.bind(Meteor.connection._stream.socket);\n\n\tMeteor.connection._stream.socket._didMessage = async (data): Promise<void> => {\n\t\tconst decryptedData = await session.decrypt(data);\n\t\tdecryptedData.split('\\n').forEach((d) => _didMessage(d));\n\t};\n\n\tMeteor.connection._stream.socket.send = async (data): Promise<void> => {\n\t\tsend(await session.encrypt(data));\n\t};\n}\n\nasync function initEncryptedSession(): Promise<void> {\n\tif (!window.ECDH_Enabled) {\n\t\tMeteor.connection._stream.allowConnection();\n\t\treturn resolveSession();\n\t}\n\tconst { ClientSession } = await import('../app/ecdh/client/ClientSession');\n\tconst session = new ClientSession();\n\tconst clientPublicKey = await session.init();\n\n\ttry {\n\t\tconst response = await fetch('/api/ecdh_proxy/initEncryptedSession', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({ clientPublicKey }),\n\t\t});\n\n\t\tif (response.status !== 200) {\n\t\t\tresolveSession();\n\t\t\treturn Meteor.connection._stream.allowConnection();\n\t\t}\n\n\t\tconst data = await response.json();\n\n\t\tif (data.success === false) {\n\t\t\tresolveSession();\n\t\t\treturn Meteor.connection._stream.allowConnection();\n\t\t}\n\n\t\tawait session.setServerKey(data.publicKeyString);\n\t\tresolveSession(session);\n\t\tinit(session);\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\tresolveSession();\n\t\tMeteor.connection._stream.allowConnection();\n\t}\n}\n\ninitEncryptedSession();\nsdk.rest.use(async (request, next) => {\n\tconst session = await sessionPromise;\n\n\tif (!session) {\n\t\treturn next(...request);\n\t}\n\tconst result = await (await next(...request)).text();\n\tconst decrypted = await session.decrypt(result);\n\tconst parsed = JSON.parse(decrypted);\n\treturn parsed;\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/ecdh.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/ecdh.ts","inputSourceMap":{"version":3,"file":"client/ecdh.ts","sourceRoot":"","sources":["client/ecdh.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport type { ClientSession } from '../app/ecdh/client/ClientSession';\nimport { sdk } from '../app/utils/client/lib/SDKClient';\n\nlet resolveSession: (value: ClientSession | void) => void;\nconst sessionPromise = new Promise<ClientSession | void>((resolve) => {\n\tresolveSession = resolve;\n});\n\nfunction init(session: ClientSession): void {\n\tMeteor.connection._stream.allowConnection();\n\n\tconst _didMessage = Meteor.connection._stream.socket._didMessage.bind(Meteor.connection._stream.socket);\n\tconst send = Meteor.connection._stream.socket.send.bind(Meteor.connection._stream.socket);\n\n\tMeteor.connection._stream.socket._didMessage = async (data): Promise<void> => {\n\t\tconst decryptedData = await session.decrypt(data);\n\t\tdecryptedData.split('\\n').forEach((d) => _didMessage(d));\n\t};\n\n\tMeteor.connection._stream.socket.send = async (data): Promise<void> => {\n\t\tsend(await session.encrypt(data));\n\t};\n}\n\nasync function initEncryptedSession(): Promise<void> {\n\tif (!window.ECDH_Enabled) {\n\t\tMeteor.connection._stream.allowConnection();\n\t\treturn resolveSession();\n\t}\n\tconst { ClientSession } = await import('../app/ecdh/client/ClientSession');\n\tconst session = new ClientSession();\n\tconst clientPublicKey = await session.init();\n\n\ttry {\n\t\tconst response = await fetch('/api/ecdh_proxy/initEncryptedSession', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({ clientPublicKey }),\n\t\t});\n\n\t\tif (response.status !== 200) {\n\t\t\tresolveSession();\n\t\t\treturn Meteor.connection._stream.allowConnection();\n\t\t}\n\n\t\tconst data = await response.json();\n\n\t\tif (data.success === false) {\n\t\t\tresolveSession();\n\t\t\treturn Meteor.connection._stream.allowConnection();\n\t\t}\n\n\t\tawait session.setServerKey(data.publicKeyString);\n\t\tresolveSession(session);\n\t\tinit(session);\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\tresolveSession();\n\t\tMeteor.connection._stream.allowConnection();\n\t}\n}\n\ninitEncryptedSession();\nsdk.rest.use(async (request, next) => {\n\tconst session = await sessionPromise;\n\n\tif (!session) {\n\t\treturn next(...request);\n\t}\n\tconst result = await (await next(...request)).text();\n\tconst decrypted = await session.decrypt(result);\n\tconst parsed = JSON.parse(decrypted);\n\treturn parsed;\n});\n"]}}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 0);\nlet sdk;\nmodule.link(\"../app/utils/client/lib/SDKClient\", {\n  sdk(v) {\n    sdk = v;\n  }\n}, 1);\nlet resolveSession;\nconst sessionPromise = new Promise(resolve => {\n  resolveSession = resolve;\n});\nfunction init(session) {\n  Meteor.connection._stream.allowConnection();\n  const _didMessage = Meteor.connection._stream.socket._didMessage.bind(Meteor.connection._stream.socket);\n  const send = Meteor.connection._stream.socket.send.bind(Meteor.connection._stream.socket);\n  Meteor.connection._stream.socket._didMessage = async data => {\n    const decryptedData = await session.decrypt(data);\n    decryptedData.split('\\n').forEach(d => _didMessage(d));\n  };\n  Meteor.connection._stream.socket.send = async data => {\n    send(await session.encrypt(data));\n  };\n}\nasync function initEncryptedSession() {\n  if (!window.ECDH_Enabled) {\n    Meteor.connection._stream.allowConnection();\n    return resolveSession();\n  }\n  const {\n    ClientSession\n  } = await module.dynamicImport('../app/ecdh/client/ClientSession');\n  const session = new ClientSession();\n  const clientPublicKey = await session.init();\n  try {\n    const response = await fetch('/api/ecdh_proxy/initEncryptedSession', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        clientPublicKey\n      })\n    });\n    if (response.status !== 200) {\n      resolveSession();\n      return Meteor.connection._stream.allowConnection();\n    }\n    const data = await response.json();\n    if (data.success === false) {\n      resolveSession();\n      return Meteor.connection._stream.allowConnection();\n    }\n    await session.setServerKey(data.publicKeyString);\n    resolveSession(session);\n    init(session);\n  } catch (e) {\n    console.log(e);\n    resolveSession();\n    Meteor.connection._stream.allowConnection();\n  }\n}\ninitEncryptedSession();\nsdk.rest.use(async (request, next) => {\n  const session = await sessionPromise;\n  if (!session) {\n    return next(...request);\n  }\n  const result = await (await next(...request)).text();\n  const decrypted = await session.decrypt(result);\n  const parsed = JSON.parse(decrypted);\n  return parsed;\n});","map":{"version":3,"names":["Meteor","module","link","v","sdk","resolveSession","sessionPromise","Promise","resolve","init","session","connection","_stream","allowConnection","_didMessage","socket","bind","send","data","decryptedData","decrypt","split","forEach","d","encrypt","initEncryptedSession","window","ECDH_Enabled","ClientSession","dynamicImport","clientPublicKey","response","fetch","method","headers","body","JSON","stringify","status","json","success","setServerKey","publicKeyString","e","console","log","rest","use","request","next","result","text","decrypted","parsed","parse"],"sources":["client/ecdh.ts"],"sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport type { ClientSession } from '../app/ecdh/client/ClientSession';\nimport { sdk } from '../app/utils/client/lib/SDKClient';\n\nlet resolveSession: (value: ClientSession | void) => void;\nconst sessionPromise = new Promise<ClientSession | void>((resolve) => {\n\tresolveSession = resolve;\n});\n\nfunction init(session: ClientSession): void {\n\tMeteor.connection._stream.allowConnection();\n\n\tconst _didMessage = Meteor.connection._stream.socket._didMessage.bind(Meteor.connection._stream.socket);\n\tconst send = Meteor.connection._stream.socket.send.bind(Meteor.connection._stream.socket);\n\n\tMeteor.connection._stream.socket._didMessage = async (data): Promise<void> => {\n\t\tconst decryptedData = await session.decrypt(data);\n\t\tdecryptedData.split('\\n').forEach((d) => _didMessage(d));\n\t};\n\n\tMeteor.connection._stream.socket.send = async (data): Promise<void> => {\n\t\tsend(await session.encrypt(data));\n\t};\n}\n\nasync function initEncryptedSession(): Promise<void> {\n\tif (!window.ECDH_Enabled) {\n\t\tMeteor.connection._stream.allowConnection();\n\t\treturn resolveSession();\n\t}\n\tconst { ClientSession } = await import('../app/ecdh/client/ClientSession');\n\tconst session = new ClientSession();\n\tconst clientPublicKey = await session.init();\n\n\ttry {\n\t\tconst response = await fetch('/api/ecdh_proxy/initEncryptedSession', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({ clientPublicKey }),\n\t\t});\n\n\t\tif (response.status !== 200) {\n\t\t\tresolveSession();\n\t\t\treturn Meteor.connection._stream.allowConnection();\n\t\t}\n\n\t\tconst data = await response.json();\n\n\t\tif (data.success === false) {\n\t\t\tresolveSession();\n\t\t\treturn Meteor.connection._stream.allowConnection();\n\t\t}\n\n\t\tawait session.setServerKey(data.publicKeyString);\n\t\tresolveSession(session);\n\t\tinit(session);\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\tresolveSession();\n\t\tMeteor.connection._stream.allowConnection();\n\t}\n}\n\ninitEncryptedSession();\nsdk.rest.use(async (request, next) => {\n\tconst session = await sessionPromise;\n\n\tif (!session) {\n\t\treturn next(...request);\n\t}\n\tconst result = await (await next(...request)).text();\n\tconst decrypted = await session.decrypt(result);\n\tconst parsed = JSON.parse(decrypted);\n\treturn parsed;\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"352a4958c5071a1b97bc3a7c1557ad499c5387ee"}
