{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/cloud/server/functions/supportedVersionsToken/supportedVersionsToken.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/cloud/server/functions/supportedVersionsToken/supportedVersionsToken.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/cloud/server/functions/supportedVersionsToken/supportedVersionsToken.ts","inputSourceMap":{"version":3,"file":"app/cloud/server/functions/supportedVersionsToken/supportedVersionsToken.ts","sourceRoot":"","sources":["app/cloud/server/functions/supportedVersionsToken/supportedVersionsToken.ts"],"names":[],"mappings":"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","sourcesContent":["import type { SettingValue } from '@rocket.chat/core-typings';\nimport { License } from '@rocket.chat/license';\nimport { Settings } from '@rocket.chat/models';\nimport type { SignedSupportedVersions, SupportedVersions } from '@rocket.chat/server-cloud-communication';\nimport type { Response } from '@rocket.chat/server-fetch';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\n\nimport { SystemLogger } from '../../../../../server/lib/logger/system';\nimport { notifyOnSettingChangedById } from '../../../../lib/server/lib/notifyListener';\nimport { settings } from '../../../../settings/server';\nimport { supportedVersions as supportedVersionsFromBuild } from '../../../../utils/rocketchat-supported-versions.info';\nimport { buildVersionUpdateMessage } from '../../../../version-check/server/functions/buildVersionUpdateMessage';\nimport { generateWorkspaceBearerHttpHeader } from '../getWorkspaceAccessToken';\nimport { supportedVersionsChooseLatest } from './supportedVersionsChooseLatest';\n\ndeclare module '@rocket.chat/core-typings' {\n\tinterface ILicenseV3 {\n\t\tsupportedVersions?: SignedSupportedVersions;\n\t}\n}\n\n/** HELPERS */\n\nexport const wrapPromise = <T>(\n\tpromise: Promise<T>,\n): Promise<\n\t| {\n\t\t\tsuccess: true;\n\t\t\tresult: T;\n\t  }\n\t| {\n\t\t\tsuccess: false;\n\t\t\terror: any;\n\t  }\n> =>\n\tpromise\n\t\t.then((result) => ({ success: true, result }) as const)\n\t\t.catch((error) => ({\n\t\t\tsuccess: false,\n\t\t\terror,\n\t\t}));\n\nexport const handleResponse = async <T>(promise: Promise<Response>) => {\n\treturn wrapPromise<T>(\n\t\t(async () => {\n\t\t\tconst request = await promise;\n\t\t\tif (!request.ok) {\n\t\t\t\tif (request.size > 0) {\n\t\t\t\t\tthrow new Error((await request.json()).error);\n\t\t\t\t}\n\t\t\t\tthrow new Error(request.statusText);\n\t\t\t}\n\n\t\t\treturn request.json();\n\t\t})(),\n\t);\n};\n\nconst cacheValueInSettings = <T extends SettingValue>(\n\tkey: string,\n\tfn: () => Promise<T>,\n): (() => Promise<T>) & {\n\treset: () => Promise<T>;\n} => {\n\tconst reset = async () => {\n\t\tSystemLogger.debug(`Resetting cached value ${key} in settings`);\n\t\tconst value = await fn();\n\n\t\t(await Settings.updateValueById(key, value)).modifiedCount && void notifyOnSettingChangedById(key);\n\n\t\treturn value;\n\t};\n\n\treturn Object.assign(\n\t\tasync () => {\n\t\t\tconst storedValue = settings.get<T>(key);\n\n\t\t\tif (storedValue) {\n\t\t\t\treturn storedValue;\n\t\t\t}\n\n\t\t\treturn reset();\n\t\t},\n\t\t{\n\t\t\treset,\n\t\t},\n\t);\n};\n\nconst releaseEndpoint = process.env.OVERWRITE_INTERNAL_RELEASE_URL?.trim()\n\t? process.env.OVERWRITE_INTERNAL_RELEASE_URL.trim()\n\t: 'https://releases.rocket.chat/v2/server/supportedVersions';\n\nconst getSupportedVersionsFromCloud = async () => {\n\tif (process.env.CLOUD_SUPPORTED_VERSIONS_TOKEN) {\n\t\treturn {\n\t\t\tsuccess: true,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tresult: JSON.parse(process.env.CLOUD_SUPPORTED_VERSIONS!),\n\t\t};\n\t}\n\n\tconst headers = await generateWorkspaceBearerHttpHeader();\n\n\tconst response = await handleResponse<SupportedVersions>(\n\t\tfetch(releaseEndpoint, {\n\t\t\theaders,\n\t\t\ttimeout: 5000,\n\t\t}),\n\t);\n\n\tif (!response.success) {\n\t\tSystemLogger.error({\n\t\t\tmsg: 'Failed to communicate with Rocket.Chat Cloud',\n\t\t\turl: releaseEndpoint,\n\t\t\terr: response.error,\n\t\t});\n\t}\n\n\treturn response;\n};\n\nconst getSupportedVersionsToken = async () => {\n\t/**\n\t * Gets the supported versions from the license\n\t * Gets the supported versions from the cloud\n\t * Gets the latest version\n\t * return the token\n\t */\n\n\tconst [versionsFromLicense, response] = await Promise.all([License.getLicense(), getSupportedVersionsFromCloud()]);\n\n\tconst supportedVersions = await supportedVersionsChooseLatest(\n\t\tsupportedVersionsFromBuild,\n\t\tversionsFromLicense?.supportedVersions,\n\t\t(response.success && response.result) || undefined,\n\t);\n\n\tSystemLogger.debug({\n\t\tmsg: 'Supported versions',\n\t\tsupportedVersionsFromBuild: supportedVersionsFromBuild.timestamp,\n\t\tversionsFromLicense: versionsFromLicense?.supportedVersions?.timestamp,\n\t\tresponse: response.success && response.result?.timestamp,\n\t});\n\n\tswitch (supportedVersions) {\n\t\tcase supportedVersionsFromBuild:\n\t\t\tSystemLogger.info({\n\t\t\t\tmsg: 'Using supported versions from build',\n\t\t\t});\n\t\t\tbreak;\n\t\tcase versionsFromLicense?.supportedVersions:\n\t\t\tSystemLogger.info({\n\t\t\t\tmsg: 'Using supported versions from license',\n\t\t\t});\n\t\t\tbreak;\n\t\tcase response.success && response.result:\n\t\t\tSystemLogger.info({\n\t\t\t\tmsg: 'Using supported versions from cloud',\n\t\t\t});\n\t\t\tbreak;\n\t}\n\n\tawait buildVersionUpdateMessage(supportedVersions?.versions);\n\n\treturn supportedVersions?.signed;\n};\n\nexport const getCachedSupportedVersionsToken = cacheValueInSettings('Cloud_Workspace_Supported_Versions_Token', getSupportedVersionsToken);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/cloud/server/functions/supportedVersionsToken/supportedVersionsToken.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/cloud/server/functions/supportedVersionsToken/supportedVersionsToken.ts","inputSourceMap":{"version":3,"file":"app/cloud/server/functions/supportedVersionsToken/supportedVersionsToken.ts","sourceRoot":"","sources":["app/cloud/server/functions/supportedVersionsToken/supportedVersionsToken.ts"],"names":[],"mappings":"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","sourcesContent":["import type { SettingValue } from '@rocket.chat/core-typings';\nimport { License } from '@rocket.chat/license';\nimport { Settings } from '@rocket.chat/models';\nimport type { SignedSupportedVersions, SupportedVersions } from '@rocket.chat/server-cloud-communication';\nimport type { Response } from '@rocket.chat/server-fetch';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\n\nimport { SystemLogger } from '../../../../../server/lib/logger/system';\nimport { notifyOnSettingChangedById } from '../../../../lib/server/lib/notifyListener';\nimport { settings } from '../../../../settings/server';\nimport { supportedVersions as supportedVersionsFromBuild } from '../../../../utils/rocketchat-supported-versions.info';\nimport { buildVersionUpdateMessage } from '../../../../version-check/server/functions/buildVersionUpdateMessage';\nimport { generateWorkspaceBearerHttpHeader } from '../getWorkspaceAccessToken';\nimport { supportedVersionsChooseLatest } from './supportedVersionsChooseLatest';\n\ndeclare module '@rocket.chat/core-typings' {\n\tinterface ILicenseV3 {\n\t\tsupportedVersions?: SignedSupportedVersions;\n\t}\n}\n\n/** HELPERS */\n\nexport const wrapPromise = <T>(\n\tpromise: Promise<T>,\n): Promise<\n\t| {\n\t\t\tsuccess: true;\n\t\t\tresult: T;\n\t  }\n\t| {\n\t\t\tsuccess: false;\n\t\t\terror: any;\n\t  }\n> =>\n\tpromise\n\t\t.then((result) => ({ success: true, result }) as const)\n\t\t.catch((error) => ({\n\t\t\tsuccess: false,\n\t\t\terror,\n\t\t}));\n\nexport const handleResponse = async <T>(promise: Promise<Response>) => {\n\treturn wrapPromise<T>(\n\t\t(async () => {\n\t\t\tconst request = await promise;\n\t\t\tif (!request.ok) {\n\t\t\t\tif (request.size > 0) {\n\t\t\t\t\tthrow new Error((await request.json()).error);\n\t\t\t\t}\n\t\t\t\tthrow new Error(request.statusText);\n\t\t\t}\n\n\t\t\treturn request.json();\n\t\t})(),\n\t);\n};\n\nconst cacheValueInSettings = <T extends SettingValue>(\n\tkey: string,\n\tfn: () => Promise<T>,\n): (() => Promise<T>) & {\n\treset: () => Promise<T>;\n} => {\n\tconst reset = async () => {\n\t\tSystemLogger.debug(`Resetting cached value ${key} in settings`);\n\t\tconst value = await fn();\n\n\t\t(await Settings.updateValueById(key, value)).modifiedCount && void notifyOnSettingChangedById(key);\n\n\t\treturn value;\n\t};\n\n\treturn Object.assign(\n\t\tasync () => {\n\t\t\tconst storedValue = settings.get<T>(key);\n\n\t\t\tif (storedValue) {\n\t\t\t\treturn storedValue;\n\t\t\t}\n\n\t\t\treturn reset();\n\t\t},\n\t\t{\n\t\t\treset,\n\t\t},\n\t);\n};\n\nconst releaseEndpoint = process.env.OVERWRITE_INTERNAL_RELEASE_URL?.trim()\n\t? process.env.OVERWRITE_INTERNAL_RELEASE_URL.trim()\n\t: 'https://releases.rocket.chat/v2/server/supportedVersions';\n\nconst getSupportedVersionsFromCloud = async () => {\n\tif (process.env.CLOUD_SUPPORTED_VERSIONS_TOKEN) {\n\t\treturn {\n\t\t\tsuccess: true,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tresult: JSON.parse(process.env.CLOUD_SUPPORTED_VERSIONS!),\n\t\t};\n\t}\n\n\tconst headers = await generateWorkspaceBearerHttpHeader();\n\n\tconst response = await handleResponse<SupportedVersions>(\n\t\tfetch(releaseEndpoint, {\n\t\t\theaders,\n\t\t\ttimeout: 5000,\n\t\t}),\n\t);\n\n\tif (!response.success) {\n\t\tSystemLogger.error({\n\t\t\tmsg: 'Failed to communicate with Rocket.Chat Cloud',\n\t\t\turl: releaseEndpoint,\n\t\t\terr: response.error,\n\t\t});\n\t}\n\n\treturn response;\n};\n\nconst getSupportedVersionsToken = async () => {\n\t/**\n\t * Gets the supported versions from the license\n\t * Gets the supported versions from the cloud\n\t * Gets the latest version\n\t * return the token\n\t */\n\n\tconst [versionsFromLicense, response] = await Promise.all([License.getLicense(), getSupportedVersionsFromCloud()]);\n\n\tconst supportedVersions = await supportedVersionsChooseLatest(\n\t\tsupportedVersionsFromBuild,\n\t\tversionsFromLicense?.supportedVersions,\n\t\t(response.success && response.result) || undefined,\n\t);\n\n\tSystemLogger.debug({\n\t\tmsg: 'Supported versions',\n\t\tsupportedVersionsFromBuild: supportedVersionsFromBuild.timestamp,\n\t\tversionsFromLicense: versionsFromLicense?.supportedVersions?.timestamp,\n\t\tresponse: response.success && response.result?.timestamp,\n\t});\n\n\tswitch (supportedVersions) {\n\t\tcase supportedVersionsFromBuild:\n\t\t\tSystemLogger.info({\n\t\t\t\tmsg: 'Using supported versions from build',\n\t\t\t});\n\t\t\tbreak;\n\t\tcase versionsFromLicense?.supportedVersions:\n\t\t\tSystemLogger.info({\n\t\t\t\tmsg: 'Using supported versions from license',\n\t\t\t});\n\t\t\tbreak;\n\t\tcase response.success && response.result:\n\t\t\tSystemLogger.info({\n\t\t\t\tmsg: 'Using supported versions from cloud',\n\t\t\t});\n\t\t\tbreak;\n\t}\n\n\tawait buildVersionUpdateMessage(supportedVersions?.versions);\n\n\treturn supportedVersions?.signed;\n};\n\nexport const getCachedSupportedVersionsToken = cacheValueInSettings('Cloud_Workspace_Supported_Versions_Token', getSupportedVersionsToken);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    var _process$env$OVERWRIT;\n    module.export({\n      wrapPromise: () => wrapPromise,\n      handleResponse: () => handleResponse,\n      getCachedSupportedVersionsToken: () => getCachedSupportedVersionsToken\n    });\n    let License;\n    module.link(\"@rocket.chat/license\", {\n      License(v) {\n        License = v;\n      }\n    }, 0);\n    let Settings;\n    module.link(\"@rocket.chat/models\", {\n      Settings(v) {\n        Settings = v;\n      }\n    }, 1);\n    let fetch;\n    module.link(\"@rocket.chat/server-fetch\", {\n      serverFetch(v) {\n        fetch = v;\n      }\n    }, 2);\n    let SystemLogger;\n    module.link(\"../../../../../server/lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 3);\n    let notifyOnSettingChangedById;\n    module.link(\"../../../../lib/server/lib/notifyListener\", {\n      notifyOnSettingChangedById(v) {\n        notifyOnSettingChangedById = v;\n      }\n    }, 4);\n    let settings;\n    module.link(\"../../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 5);\n    let supportedVersionsFromBuild;\n    module.link(\"../../../../utils/rocketchat-supported-versions.info\", {\n      supportedVersions(v) {\n        supportedVersionsFromBuild = v;\n      }\n    }, 6);\n    let buildVersionUpdateMessage;\n    module.link(\"../../../../version-check/server/functions/buildVersionUpdateMessage\", {\n      buildVersionUpdateMessage(v) {\n        buildVersionUpdateMessage = v;\n      }\n    }, 7);\n    let generateWorkspaceBearerHttpHeader;\n    module.link(\"../getWorkspaceAccessToken\", {\n      generateWorkspaceBearerHttpHeader(v) {\n        generateWorkspaceBearerHttpHeader = v;\n      }\n    }, 8);\n    let supportedVersionsChooseLatest;\n    module.link(\"./supportedVersionsChooseLatest\", {\n      supportedVersionsChooseLatest(v) {\n        supportedVersionsChooseLatest = v;\n      }\n    }, 9);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const wrapPromise = promise => promise.then(result => ({\n      success: true,\n      result\n    })).catch(error => ({\n      success: false,\n      error\n    }));\n    const handleResponse = async promise => {\n      return wrapPromise((async () => {\n        const request = await promise;\n        if (!request.ok) {\n          if (request.size > 0) {\n            throw new Error((await request.json()).error);\n          }\n          throw new Error(request.statusText);\n        }\n        return request.json();\n      })());\n    };\n    const cacheValueInSettings = (key, fn) => {\n      const reset = async () => {\n        SystemLogger.debug(\"Resetting cached value \".concat(key, \" in settings\"));\n        const value = await fn();\n        (await Settings.updateValueById(key, value)).modifiedCount && void notifyOnSettingChangedById(key);\n        return value;\n      };\n      return Object.assign(async () => {\n        const storedValue = settings.get(key);\n        if (storedValue) {\n          return storedValue;\n        }\n        return reset();\n      }, {\n        reset\n      });\n    };\n    const releaseEndpoint = (_process$env$OVERWRIT = process.env.OVERWRITE_INTERNAL_RELEASE_URL) !== null && _process$env$OVERWRIT !== void 0 && _process$env$OVERWRIT.trim() ? process.env.OVERWRITE_INTERNAL_RELEASE_URL.trim() : 'https://releases.rocket.chat/v2/server/supportedVersions';\n    const getSupportedVersionsFromCloud = async () => {\n      if (process.env.CLOUD_SUPPORTED_VERSIONS_TOKEN) {\n        return {\n          success: true,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          result: JSON.parse(process.env.CLOUD_SUPPORTED_VERSIONS)\n        };\n      }\n      const headers = await generateWorkspaceBearerHttpHeader();\n      const response = await handleResponse(fetch(releaseEndpoint, {\n        headers,\n        timeout: 5000\n      }));\n      if (!response.success) {\n        SystemLogger.error({\n          msg: 'Failed to communicate with Rocket.Chat Cloud',\n          url: releaseEndpoint,\n          err: response.error\n        });\n      }\n      return response;\n    };\n    const getSupportedVersionsToken = async () => {\n      var _versionsFromLicense$, _response$result;\n      /**\n       * Gets the supported versions from the license\n       * Gets the supported versions from the cloud\n       * Gets the latest version\n       * return the token\n       */\n      const [versionsFromLicense, response] = await Promise.all([License.getLicense(), getSupportedVersionsFromCloud()]);\n      const supportedVersions = await supportedVersionsChooseLatest(supportedVersionsFromBuild, versionsFromLicense === null || versionsFromLicense === void 0 ? void 0 : versionsFromLicense.supportedVersions, response.success && response.result || undefined);\n      SystemLogger.debug({\n        msg: 'Supported versions',\n        supportedVersionsFromBuild: supportedVersionsFromBuild.timestamp,\n        versionsFromLicense: versionsFromLicense === null || versionsFromLicense === void 0 ? void 0 : (_versionsFromLicense$ = versionsFromLicense.supportedVersions) === null || _versionsFromLicense$ === void 0 ? void 0 : _versionsFromLicense$.timestamp,\n        response: response.success && ((_response$result = response.result) === null || _response$result === void 0 ? void 0 : _response$result.timestamp)\n      });\n      switch (supportedVersions) {\n        case supportedVersionsFromBuild:\n          SystemLogger.info({\n            msg: 'Using supported versions from build'\n          });\n          break;\n        case versionsFromLicense === null || versionsFromLicense === void 0 ? void 0 : versionsFromLicense.supportedVersions:\n          SystemLogger.info({\n            msg: 'Using supported versions from license'\n          });\n          break;\n        case response.success && response.result:\n          SystemLogger.info({\n            msg: 'Using supported versions from cloud'\n          });\n          break;\n      }\n      await buildVersionUpdateMessage(supportedVersions === null || supportedVersions === void 0 ? void 0 : supportedVersions.versions);\n      return supportedVersions === null || supportedVersions === void 0 ? void 0 : supportedVersions.signed;\n    };\n    const getCachedSupportedVersionsToken = cacheValueInSettings('Cloud_Workspace_Supported_Versions_Token', getSupportedVersionsToken);\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","wrapPromise","handleResponse","getCachedSupportedVersionsToken","License","link","v","Settings","fetch","serverFetch","SystemLogger","notifyOnSettingChangedById","settings","supportedVersionsFromBuild","supportedVersions","buildVersionUpdateMessage","generateWorkspaceBearerHttpHeader","supportedVersionsChooseLatest","__reifyWaitForDeps__","promise","then","result","success","catch","error","request","ok","size","Error","json","statusText","cacheValueInSettings","key","fn","reset","debug","concat","value","updateValueById","modifiedCount","Object","assign","storedValue","get","releaseEndpoint","_process$env$OVERWRIT","process","env","OVERWRITE_INTERNAL_RELEASE_URL","trim","getSupportedVersionsFromCloud","CLOUD_SUPPORTED_VERSIONS_TOKEN","JSON","parse","CLOUD_SUPPORTED_VERSIONS","headers","response","timeout","msg","url","err","getSupportedVersionsToken","_versionsFromLicense$","_response$result","versionsFromLicense","Promise","all","getLicense","undefined","timestamp","info","versions","signed","__reify_async_result__","_reifyError","self","async"],"sources":["app/cloud/server/functions/supportedVersionsToken/supportedVersionsToken.ts"],"sourcesContent":["import type { SettingValue } from '@rocket.chat/core-typings';\nimport { License } from '@rocket.chat/license';\nimport { Settings } from '@rocket.chat/models';\nimport type { SignedSupportedVersions, SupportedVersions } from '@rocket.chat/server-cloud-communication';\nimport type { Response } from '@rocket.chat/server-fetch';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\n\nimport { SystemLogger } from '../../../../../server/lib/logger/system';\nimport { notifyOnSettingChangedById } from '../../../../lib/server/lib/notifyListener';\nimport { settings } from '../../../../settings/server';\nimport { supportedVersions as supportedVersionsFromBuild } from '../../../../utils/rocketchat-supported-versions.info';\nimport { buildVersionUpdateMessage } from '../../../../version-check/server/functions/buildVersionUpdateMessage';\nimport { generateWorkspaceBearerHttpHeader } from '../getWorkspaceAccessToken';\nimport { supportedVersionsChooseLatest } from './supportedVersionsChooseLatest';\n\ndeclare module '@rocket.chat/core-typings' {\n\tinterface ILicenseV3 {\n\t\tsupportedVersions?: SignedSupportedVersions;\n\t}\n}\n\n/** HELPERS */\n\nexport const wrapPromise = <T>(\n\tpromise: Promise<T>,\n): Promise<\n\t| {\n\t\t\tsuccess: true;\n\t\t\tresult: T;\n\t  }\n\t| {\n\t\t\tsuccess: false;\n\t\t\terror: any;\n\t  }\n> =>\n\tpromise\n\t\t.then((result) => ({ success: true, result }) as const)\n\t\t.catch((error) => ({\n\t\t\tsuccess: false,\n\t\t\terror,\n\t\t}));\n\nexport const handleResponse = async <T>(promise: Promise<Response>) => {\n\treturn wrapPromise<T>(\n\t\t(async () => {\n\t\t\tconst request = await promise;\n\t\t\tif (!request.ok) {\n\t\t\t\tif (request.size > 0) {\n\t\t\t\t\tthrow new Error((await request.json()).error);\n\t\t\t\t}\n\t\t\t\tthrow new Error(request.statusText);\n\t\t\t}\n\n\t\t\treturn request.json();\n\t\t})(),\n\t);\n};\n\nconst cacheValueInSettings = <T extends SettingValue>(\n\tkey: string,\n\tfn: () => Promise<T>,\n): (() => Promise<T>) & {\n\treset: () => Promise<T>;\n} => {\n\tconst reset = async () => {\n\t\tSystemLogger.debug(`Resetting cached value ${key} in settings`);\n\t\tconst value = await fn();\n\n\t\t(await Settings.updateValueById(key, value)).modifiedCount && void notifyOnSettingChangedById(key);\n\n\t\treturn value;\n\t};\n\n\treturn Object.assign(\n\t\tasync () => {\n\t\t\tconst storedValue = settings.get<T>(key);\n\n\t\t\tif (storedValue) {\n\t\t\t\treturn storedValue;\n\t\t\t}\n\n\t\t\treturn reset();\n\t\t},\n\t\t{\n\t\t\treset,\n\t\t},\n\t);\n};\n\nconst releaseEndpoint = process.env.OVERWRITE_INTERNAL_RELEASE_URL?.trim()\n\t? process.env.OVERWRITE_INTERNAL_RELEASE_URL.trim()\n\t: 'https://releases.rocket.chat/v2/server/supportedVersions';\n\nconst getSupportedVersionsFromCloud = async () => {\n\tif (process.env.CLOUD_SUPPORTED_VERSIONS_TOKEN) {\n\t\treturn {\n\t\t\tsuccess: true,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tresult: JSON.parse(process.env.CLOUD_SUPPORTED_VERSIONS!),\n\t\t};\n\t}\n\n\tconst headers = await generateWorkspaceBearerHttpHeader();\n\n\tconst response = await handleResponse<SupportedVersions>(\n\t\tfetch(releaseEndpoint, {\n\t\t\theaders,\n\t\t\ttimeout: 5000,\n\t\t}),\n\t);\n\n\tif (!response.success) {\n\t\tSystemLogger.error({\n\t\t\tmsg: 'Failed to communicate with Rocket.Chat Cloud',\n\t\t\turl: releaseEndpoint,\n\t\t\terr: response.error,\n\t\t});\n\t}\n\n\treturn response;\n};\n\nconst getSupportedVersionsToken = async () => {\n\t/**\n\t * Gets the supported versions from the license\n\t * Gets the supported versions from the cloud\n\t * Gets the latest version\n\t * return the token\n\t */\n\n\tconst [versionsFromLicense, response] = await Promise.all([License.getLicense(), getSupportedVersionsFromCloud()]);\n\n\tconst supportedVersions = await supportedVersionsChooseLatest(\n\t\tsupportedVersionsFromBuild,\n\t\tversionsFromLicense?.supportedVersions,\n\t\t(response.success && response.result) || undefined,\n\t);\n\n\tSystemLogger.debug({\n\t\tmsg: 'Supported versions',\n\t\tsupportedVersionsFromBuild: supportedVersionsFromBuild.timestamp,\n\t\tversionsFromLicense: versionsFromLicense?.supportedVersions?.timestamp,\n\t\tresponse: response.success && response.result?.timestamp,\n\t});\n\n\tswitch (supportedVersions) {\n\t\tcase supportedVersionsFromBuild:\n\t\t\tSystemLogger.info({\n\t\t\t\tmsg: 'Using supported versions from build',\n\t\t\t});\n\t\t\tbreak;\n\t\tcase versionsFromLicense?.supportedVersions:\n\t\t\tSystemLogger.info({\n\t\t\t\tmsg: 'Using supported versions from license',\n\t\t\t});\n\t\t\tbreak;\n\t\tcase response.success && response.result:\n\t\t\tSystemLogger.info({\n\t\t\t\tmsg: 'Using supported versions from cloud',\n\t\t\t});\n\t\t\tbreak;\n\t}\n\n\tawait buildVersionUpdateMessage(supportedVersions?.versions);\n\n\treturn supportedVersions?.signed;\n};\n\nexport const getCachedSupportedVersionsToken = cacheValueInSettings('Cloud_Workspace_Supported_Versions_Token', getSupportedVersionsToken);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"9fd78f352f20d9da4cfc1b89eef75c7a21b1bcac"}
