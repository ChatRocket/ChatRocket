{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/local-services/federation/infrastructure/matrix/Bridge.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/local-services/federation/infrastructure/matrix/Bridge.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/local-services/federation/infrastructure/matrix/Bridge.ts","inputSourceMap":{"version":3,"file":"ee/server/local-services/federation/infrastructure/matrix/Bridge.ts","sourceRoot":"","sources":["ee/server/local-services/federation/infrastructure/matrix/Bridge.ts"],"names":[],"mappings":"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","sourcesContent":["import { RoomType } from '@rocket.chat/apps-engine/definition/rooms';\n\nimport { MatrixBridge } from '../../../../../../server/services/federation/infrastructure/matrix/Bridge';\nimport type { AbstractMatrixEvent } from '../../../../../../server/services/federation/infrastructure/matrix/definitions/AbstractMatrixEvent';\nimport { MATRIX_POWER_LEVELS } from '../../../../../../server/services/federation/infrastructure/matrix/definitions/MatrixPowerLevels';\nimport { MatrixRoomType } from '../../../../../../server/services/federation/infrastructure/matrix/definitions/MatrixRoomType';\nimport { MatrixRoomVisibility } from '../../../../../../server/services/federation/infrastructure/matrix/definitions/MatrixRoomVisibility';\nimport type { RocketChatSettingsAdapter } from '../../../../../../server/services/federation/infrastructure/rocket-chat/adapters/Settings';\nimport type { IFederationBridgeEE, IFederationPublicRoomsResult, IFederationSearchPublicRoomsParams } from '../../domain/IFederationBridge';\n\nconst DEFAULT_TIMEOUT_IN_MS = 10000;\n\nexport class MatrixBridgeEE extends MatrixBridge implements IFederationBridgeEE {\n\tconstructor(\n\t\tprotected internalSettings: RocketChatSettingsAdapter,\n\t\tprotected eventHandler: (event: AbstractMatrixEvent) => void,\n\t) {\n\t\tsuper(internalSettings, eventHandler);\n\t}\n\n\tprivate mountPowerLevelRulesWithMinimumPowerLevelForEachAction(): Record<string, any> {\n\t\treturn {\n\t\t\tban: MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\tevents_default: MATRIX_POWER_LEVELS.USER,\n\t\t\thistorical: MATRIX_POWER_LEVELS.ADMIN,\n\t\t\tinvite: MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\tkick: MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\tredact: MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\tstate_default: MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\tusers_default: MATRIX_POWER_LEVELS.USER,\n\t\t\tevents: {\n\t\t\t\t'm.room.avatar': MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\t\t'm.room.canonical_alias': MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\t\t'm.room.encryption': MATRIX_POWER_LEVELS.ADMIN,\n\t\t\t\t'm.room.history_visibility': MATRIX_POWER_LEVELS.ADMIN,\n\t\t\t\t'm.room.name': MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\t\t'm.room.power_levels': MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\t\t'm.room.server_acl': MATRIX_POWER_LEVELS.ADMIN,\n\t\t\t\t'm.room.tombstone': MATRIX_POWER_LEVELS.ADMIN,\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic async createRoom(externalCreatorId: string, roomType: RoomType, roomName: string, roomTopic?: string): Promise<string> {\n\t\tconst intent = this.bridgeInstance.getIntent(externalCreatorId);\n\t\tconst privateRoomTypes = [RoomType.DIRECT_MESSAGE, RoomType.PRIVATE_GROUP];\n\n\t\tconst visibility = privateRoomTypes.includes(roomType) ? MatrixRoomVisibility.PRIVATE : MatrixRoomVisibility.PUBLIC;\n\t\tconst matrixRoomType = privateRoomTypes.includes(roomType) ? MatrixRoomType.PRIVATE : MatrixRoomType.PUBLIC;\n\n\t\tconst matrixRoom = await intent.createRoom({\n\t\t\tcreateAsClient: true,\n\t\t\toptions: {\n\t\t\t\tname: roomName,\n\t\t\t\ttopic: roomTopic,\n\t\t\t\troom_alias_name: `${roomName}${Date.now()}`,\n\t\t\t\tvisibility,\n\t\t\t\tpreset: matrixRoomType,\n\t\t\t\tcreation_content: {\n\t\t\t\t\twas_internally_programatically_created: true,\n\t\t\t\t},\n\t\t\t\tpower_level_content_override: this.mountPowerLevelRulesWithMinimumPowerLevelForEachAction(),\n\t\t\t\t...(roomTopic ? { topic: roomTopic } : {}),\n\t\t\t},\n\t\t});\n\t\tawait intent.setRoomDirectoryVisibility(matrixRoom.room_id, visibility);\n\n\t\treturn matrixRoom.room_id;\n\t}\n\n\tpublic async searchPublicRooms(params: IFederationSearchPublicRoomsParams): Promise<IFederationPublicRoomsResult> {\n\t\tconst { serverName, limit = 50, roomName, pageToken } = params;\n\t\ttry {\n\t\t\treturn await this.bridgeInstance.getIntent().matrixClient.doRequest(\n\t\t\t\t'POST',\n\t\t\t\t`/_matrix/client/r0/publicRooms?server=${serverName}`,\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tfilter: { generic_search_term: roomName },\n\t\t\t\t\tlimit,\n\t\t\t\t\t...(pageToken ? { since: pageToken } : {}),\n\t\t\t\t},\n\t\t\t\tDEFAULT_TIMEOUT_IN_MS,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tthrow new Error('invalid-server-name');\n\t\t}\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/local-services/federation/infrastructure/matrix/Bridge.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/local-services/federation/infrastructure/matrix/Bridge.ts","inputSourceMap":{"version":3,"file":"ee/server/local-services/federation/infrastructure/matrix/Bridge.ts","sourceRoot":"","sources":["ee/server/local-services/federation/infrastructure/matrix/Bridge.ts"],"names":[],"mappings":"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","sourcesContent":["import { RoomType } from '@rocket.chat/apps-engine/definition/rooms';\n\nimport { MatrixBridge } from '../../../../../../server/services/federation/infrastructure/matrix/Bridge';\nimport type { AbstractMatrixEvent } from '../../../../../../server/services/federation/infrastructure/matrix/definitions/AbstractMatrixEvent';\nimport { MATRIX_POWER_LEVELS } from '../../../../../../server/services/federation/infrastructure/matrix/definitions/MatrixPowerLevels';\nimport { MatrixRoomType } from '../../../../../../server/services/federation/infrastructure/matrix/definitions/MatrixRoomType';\nimport { MatrixRoomVisibility } from '../../../../../../server/services/federation/infrastructure/matrix/definitions/MatrixRoomVisibility';\nimport type { RocketChatSettingsAdapter } from '../../../../../../server/services/federation/infrastructure/rocket-chat/adapters/Settings';\nimport type { IFederationBridgeEE, IFederationPublicRoomsResult, IFederationSearchPublicRoomsParams } from '../../domain/IFederationBridge';\n\nconst DEFAULT_TIMEOUT_IN_MS = 10000;\n\nexport class MatrixBridgeEE extends MatrixBridge implements IFederationBridgeEE {\n\tconstructor(\n\t\tprotected internalSettings: RocketChatSettingsAdapter,\n\t\tprotected eventHandler: (event: AbstractMatrixEvent) => void,\n\t) {\n\t\tsuper(internalSettings, eventHandler);\n\t}\n\n\tprivate mountPowerLevelRulesWithMinimumPowerLevelForEachAction(): Record<string, any> {\n\t\treturn {\n\t\t\tban: MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\tevents_default: MATRIX_POWER_LEVELS.USER,\n\t\t\thistorical: MATRIX_POWER_LEVELS.ADMIN,\n\t\t\tinvite: MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\tkick: MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\tredact: MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\tstate_default: MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\tusers_default: MATRIX_POWER_LEVELS.USER,\n\t\t\tevents: {\n\t\t\t\t'm.room.avatar': MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\t\t'm.room.canonical_alias': MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\t\t'm.room.encryption': MATRIX_POWER_LEVELS.ADMIN,\n\t\t\t\t'm.room.history_visibility': MATRIX_POWER_LEVELS.ADMIN,\n\t\t\t\t'm.room.name': MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\t\t'm.room.power_levels': MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\t\t'm.room.server_acl': MATRIX_POWER_LEVELS.ADMIN,\n\t\t\t\t'm.room.tombstone': MATRIX_POWER_LEVELS.ADMIN,\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic async createRoom(externalCreatorId: string, roomType: RoomType, roomName: string, roomTopic?: string): Promise<string> {\n\t\tconst intent = this.bridgeInstance.getIntent(externalCreatorId);\n\t\tconst privateRoomTypes = [RoomType.DIRECT_MESSAGE, RoomType.PRIVATE_GROUP];\n\n\t\tconst visibility = privateRoomTypes.includes(roomType) ? MatrixRoomVisibility.PRIVATE : MatrixRoomVisibility.PUBLIC;\n\t\tconst matrixRoomType = privateRoomTypes.includes(roomType) ? MatrixRoomType.PRIVATE : MatrixRoomType.PUBLIC;\n\n\t\tconst matrixRoom = await intent.createRoom({\n\t\t\tcreateAsClient: true,\n\t\t\toptions: {\n\t\t\t\tname: roomName,\n\t\t\t\ttopic: roomTopic,\n\t\t\t\troom_alias_name: `${roomName}${Date.now()}`,\n\t\t\t\tvisibility,\n\t\t\t\tpreset: matrixRoomType,\n\t\t\t\tcreation_content: {\n\t\t\t\t\twas_internally_programatically_created: true,\n\t\t\t\t},\n\t\t\t\tpower_level_content_override: this.mountPowerLevelRulesWithMinimumPowerLevelForEachAction(),\n\t\t\t\t...(roomTopic ? { topic: roomTopic } : {}),\n\t\t\t},\n\t\t});\n\t\tawait intent.setRoomDirectoryVisibility(matrixRoom.room_id, visibility);\n\n\t\treturn matrixRoom.room_id;\n\t}\n\n\tpublic async searchPublicRooms(params: IFederationSearchPublicRoomsParams): Promise<IFederationPublicRoomsResult> {\n\t\tconst { serverName, limit = 50, roomName, pageToken } = params;\n\t\ttry {\n\t\t\treturn await this.bridgeInstance.getIntent().matrixClient.doRequest(\n\t\t\t\t'POST',\n\t\t\t\t`/_matrix/client/r0/publicRooms?server=${serverName}`,\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tfilter: { generic_search_term: roomName },\n\t\t\t\t\tlimit,\n\t\t\t\t\t...(pageToken ? { since: pageToken } : {}),\n\t\t\t\t},\n\t\t\t\tDEFAULT_TIMEOUT_IN_MS,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tthrow new Error('invalid-server-name');\n\t\t}\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      MatrixBridgeEE: () => MatrixBridgeEE\n    });\n    let RoomType;\n    module.link(\"@rocket.chat/apps-engine/definition/rooms\", {\n      RoomType(v) {\n        RoomType = v;\n      }\n    }, 0);\n    let MatrixBridge;\n    module.link(\"../../../../../../server/services/federation/infrastructure/matrix/Bridge\", {\n      MatrixBridge(v) {\n        MatrixBridge = v;\n      }\n    }, 1);\n    let MATRIX_POWER_LEVELS;\n    module.link(\"../../../../../../server/services/federation/infrastructure/matrix/definitions/MatrixPowerLevels\", {\n      MATRIX_POWER_LEVELS(v) {\n        MATRIX_POWER_LEVELS = v;\n      }\n    }, 2);\n    let MatrixRoomType;\n    module.link(\"../../../../../../server/services/federation/infrastructure/matrix/definitions/MatrixRoomType\", {\n      MatrixRoomType(v) {\n        MatrixRoomType = v;\n      }\n    }, 3);\n    let MatrixRoomVisibility;\n    module.link(\"../../../../../../server/services/federation/infrastructure/matrix/definitions/MatrixRoomVisibility\", {\n      MatrixRoomVisibility(v) {\n        MatrixRoomVisibility = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const DEFAULT_TIMEOUT_IN_MS = 10000;\n    class MatrixBridgeEE extends MatrixBridge {\n      constructor(internalSettings, eventHandler) {\n        super(internalSettings, eventHandler);\n        this.internalSettings = void 0;\n        this.eventHandler = void 0;\n        this.internalSettings = internalSettings;\n        this.eventHandler = eventHandler;\n      }\n      mountPowerLevelRulesWithMinimumPowerLevelForEachAction() {\n        return {\n          ban: MATRIX_POWER_LEVELS.MODERATOR,\n          events_default: MATRIX_POWER_LEVELS.USER,\n          historical: MATRIX_POWER_LEVELS.ADMIN,\n          invite: MATRIX_POWER_LEVELS.MODERATOR,\n          kick: MATRIX_POWER_LEVELS.MODERATOR,\n          redact: MATRIX_POWER_LEVELS.MODERATOR,\n          state_default: MATRIX_POWER_LEVELS.MODERATOR,\n          users_default: MATRIX_POWER_LEVELS.USER,\n          events: {\n            'm.room.avatar': MATRIX_POWER_LEVELS.MODERATOR,\n            'm.room.canonical_alias': MATRIX_POWER_LEVELS.MODERATOR,\n            'm.room.encryption': MATRIX_POWER_LEVELS.ADMIN,\n            'm.room.history_visibility': MATRIX_POWER_LEVELS.ADMIN,\n            'm.room.name': MATRIX_POWER_LEVELS.MODERATOR,\n            'm.room.power_levels': MATRIX_POWER_LEVELS.MODERATOR,\n            'm.room.server_acl': MATRIX_POWER_LEVELS.ADMIN,\n            'm.room.tombstone': MATRIX_POWER_LEVELS.ADMIN\n          }\n        };\n      }\n      async createRoom(externalCreatorId, roomType, roomName, roomTopic) {\n        const intent = this.bridgeInstance.getIntent(externalCreatorId);\n        const privateRoomTypes = [RoomType.DIRECT_MESSAGE, RoomType.PRIVATE_GROUP];\n        const visibility = privateRoomTypes.includes(roomType) ? MatrixRoomVisibility.PRIVATE : MatrixRoomVisibility.PUBLIC;\n        const matrixRoomType = privateRoomTypes.includes(roomType) ? MatrixRoomType.PRIVATE : MatrixRoomType.PUBLIC;\n        const matrixRoom = await intent.createRoom({\n          createAsClient: true,\n          options: _objectSpread({\n            name: roomName,\n            topic: roomTopic,\n            room_alias_name: \"\".concat(roomName).concat(Date.now()),\n            visibility,\n            preset: matrixRoomType,\n            creation_content: {\n              was_internally_programatically_created: true\n            },\n            power_level_content_override: this.mountPowerLevelRulesWithMinimumPowerLevelForEachAction()\n          }, roomTopic ? {\n            topic: roomTopic\n          } : {})\n        });\n        await intent.setRoomDirectoryVisibility(matrixRoom.room_id, visibility);\n        return matrixRoom.room_id;\n      }\n      async searchPublicRooms(params) {\n        const {\n          serverName,\n          limit = 50,\n          roomName,\n          pageToken\n        } = params;\n        try {\n          return await this.bridgeInstance.getIntent().matrixClient.doRequest('POST', \"/_matrix/client/r0/publicRooms?server=\".concat(serverName), {}, _objectSpread({\n            filter: {\n              generic_search_term: roomName\n            },\n            limit\n          }, pageToken ? {\n            since: pageToken\n          } : {}), DEFAULT_TIMEOUT_IN_MS);\n        } catch (error) {\n          throw new Error('invalid-server-name');\n        }\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","MatrixBridgeEE","RoomType","MatrixBridge","MATRIX_POWER_LEVELS","MatrixRoomType","MatrixRoomVisibility","__reifyWaitForDeps__","DEFAULT_TIMEOUT_IN_MS","constructor","internalSettings","eventHandler","mountPowerLevelRulesWithMinimumPowerLevelForEachAction","ban","MODERATOR","events_default","USER","historical","ADMIN","invite","kick","redact","state_default","users_default","events","createRoom","externalCreatorId","roomType","roomName","roomTopic","intent","bridgeInstance","getIntent","privateRoomTypes","DIRECT_MESSAGE","PRIVATE_GROUP","visibility","includes","PRIVATE","PUBLIC","matrixRoomType","matrixRoom","createAsClient","options","name","topic","room_alias_name","concat","Date","now","preset","creation_content","was_internally_programatically_created","power_level_content_override","setRoomDirectoryVisibility","room_id","searchPublicRooms","params","serverName","limit","pageToken","matrixClient","doRequest","filter","generic_search_term","since","error","Error","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/local-services/federation/infrastructure/matrix/Bridge.ts"],"sourcesContent":["import { RoomType } from '@rocket.chat/apps-engine/definition/rooms';\n\nimport { MatrixBridge } from '../../../../../../server/services/federation/infrastructure/matrix/Bridge';\nimport type { AbstractMatrixEvent } from '../../../../../../server/services/federation/infrastructure/matrix/definitions/AbstractMatrixEvent';\nimport { MATRIX_POWER_LEVELS } from '../../../../../../server/services/federation/infrastructure/matrix/definitions/MatrixPowerLevels';\nimport { MatrixRoomType } from '../../../../../../server/services/federation/infrastructure/matrix/definitions/MatrixRoomType';\nimport { MatrixRoomVisibility } from '../../../../../../server/services/federation/infrastructure/matrix/definitions/MatrixRoomVisibility';\nimport type { RocketChatSettingsAdapter } from '../../../../../../server/services/federation/infrastructure/rocket-chat/adapters/Settings';\nimport type { IFederationBridgeEE, IFederationPublicRoomsResult, IFederationSearchPublicRoomsParams } from '../../domain/IFederationBridge';\n\nconst DEFAULT_TIMEOUT_IN_MS = 10000;\n\nexport class MatrixBridgeEE extends MatrixBridge implements IFederationBridgeEE {\n\tconstructor(\n\t\tprotected internalSettings: RocketChatSettingsAdapter,\n\t\tprotected eventHandler: (event: AbstractMatrixEvent) => void,\n\t) {\n\t\tsuper(internalSettings, eventHandler);\n\t}\n\n\tprivate mountPowerLevelRulesWithMinimumPowerLevelForEachAction(): Record<string, any> {\n\t\treturn {\n\t\t\tban: MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\tevents_default: MATRIX_POWER_LEVELS.USER,\n\t\t\thistorical: MATRIX_POWER_LEVELS.ADMIN,\n\t\t\tinvite: MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\tkick: MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\tredact: MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\tstate_default: MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\tusers_default: MATRIX_POWER_LEVELS.USER,\n\t\t\tevents: {\n\t\t\t\t'm.room.avatar': MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\t\t'm.room.canonical_alias': MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\t\t'm.room.encryption': MATRIX_POWER_LEVELS.ADMIN,\n\t\t\t\t'm.room.history_visibility': MATRIX_POWER_LEVELS.ADMIN,\n\t\t\t\t'm.room.name': MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\t\t'm.room.power_levels': MATRIX_POWER_LEVELS.MODERATOR,\n\t\t\t\t'm.room.server_acl': MATRIX_POWER_LEVELS.ADMIN,\n\t\t\t\t'm.room.tombstone': MATRIX_POWER_LEVELS.ADMIN,\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic async createRoom(externalCreatorId: string, roomType: RoomType, roomName: string, roomTopic?: string): Promise<string> {\n\t\tconst intent = this.bridgeInstance.getIntent(externalCreatorId);\n\t\tconst privateRoomTypes = [RoomType.DIRECT_MESSAGE, RoomType.PRIVATE_GROUP];\n\n\t\tconst visibility = privateRoomTypes.includes(roomType) ? MatrixRoomVisibility.PRIVATE : MatrixRoomVisibility.PUBLIC;\n\t\tconst matrixRoomType = privateRoomTypes.includes(roomType) ? MatrixRoomType.PRIVATE : MatrixRoomType.PUBLIC;\n\n\t\tconst matrixRoom = await intent.createRoom({\n\t\t\tcreateAsClient: true,\n\t\t\toptions: {\n\t\t\t\tname: roomName,\n\t\t\t\ttopic: roomTopic,\n\t\t\t\troom_alias_name: `${roomName}${Date.now()}`,\n\t\t\t\tvisibility,\n\t\t\t\tpreset: matrixRoomType,\n\t\t\t\tcreation_content: {\n\t\t\t\t\twas_internally_programatically_created: true,\n\t\t\t\t},\n\t\t\t\tpower_level_content_override: this.mountPowerLevelRulesWithMinimumPowerLevelForEachAction(),\n\t\t\t\t...(roomTopic ? { topic: roomTopic } : {}),\n\t\t\t},\n\t\t});\n\t\tawait intent.setRoomDirectoryVisibility(matrixRoom.room_id, visibility);\n\n\t\treturn matrixRoom.room_id;\n\t}\n\n\tpublic async searchPublicRooms(params: IFederationSearchPublicRoomsParams): Promise<IFederationPublicRoomsResult> {\n\t\tconst { serverName, limit = 50, roomName, pageToken } = params;\n\t\ttry {\n\t\t\treturn await this.bridgeInstance.getIntent().matrixClient.doRequest(\n\t\t\t\t'POST',\n\t\t\t\t`/_matrix/client/r0/publicRooms?server=${serverName}`,\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tfilter: { generic_search_term: roomName },\n\t\t\t\t\tlimit,\n\t\t\t\t\t...(pageToken ? { since: pageToken } : {}),\n\t\t\t\t},\n\t\t\t\tDEFAULT_TIMEOUT_IN_MS,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tthrow new Error('invalid-server-name');\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"30de2fcb36c084c212682719ed5eed15117e1ce1"}
