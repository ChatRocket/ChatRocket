{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/agents/AgentEditWithData.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/omnichannel/agents/AgentEditWithData.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/agents/AgentEditWithData.tsx","inputSourceMap":{"version":3,"file":"client/views/omnichannel/agents/AgentEditWithData.tsx","sourceRoot":"","sources":["client/views/omnichannel/agents/AgentEditWithData.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,GAAG,EAAE,MAAM,uBAAuB,CAAC;AAC5C,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AACvE,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEjD,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AAC5D,OAAO,SAAS,MAAM,aAAa,CAAC;AAEpC,MAAM,iBAAiB,GAAG,CAAC,EAAE,GAAG,EAAkC,EAAgB,EAAE;IACnF,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAE3B,MAAM,uBAAuB,GAAG,WAAW,CAAC,KAAK,EAAE,yBAAyB,CAAC,CAAC;IAC9E,MAAM,YAAY,GAAG,WAAW,CAAC,KAAK,EAAE,+BAA+B,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACvF,MAAM,mBAAmB,GAAG,WAAW,CAAC,KAAK,EAAE,0CAA0C,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;IAE7G,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC,CAAC,uBAAuB,EAAE,GAAG,CAAC,EAAE,KAAK,IAAI,EAAE,CAAC,YAAY,EAAE,EAAE,EAAE,oBAAoB,EAAE,KAAK,EAAE,CAAC,CAAC;IAEzI,MAAM,EACL,IAAI,EAAE,gBAAgB,EACtB,SAAS,EAAE,uBAAuB,EAClC,KAAK,EAAE,sBAAsB,GAC7B,GAAG,QAAQ,CAAC,CAAC,8BAA8B,EAAE,GAAG,CAAC,EAAE,KAAK,IAAI,EAAE,CAAC,mBAAmB,EAAE,EAAE,EAAE,oBAAoB,EAAE,KAAK,EAAE,CAAC,CAAC;IAExH,MAAM,EACL,IAAI,EAAE,oBAAoB,EAC1B,SAAS,EAAE,2BAA2B,EACtC,KAAK,EAAE,yBAAyB,GAChC,GAAG,QAAQ,CAAC,CAAC,kCAAkC,CAAC,EAAE,KAAK,IAAI,EAAE,CAAC,uBAAuB,CAAC,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IAElH,IAAI,SAAS,IAAI,2BAA2B,IAAI,uBAAuB,IAAI,CAAC,gBAAgB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACvH,OAAO,CAAC,YAAY,CAAC,AAAD,EAAG,CAAC;IACzB,CAAC;IAED,IAAI,KAAK,IAAI,sBAAsB,IAAI,yBAAyB,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;QACjF,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAChD,CAAC;IAED,OAAO,CACN,CAAC,SAAS,CACT,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CACrB,eAAe,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAC9C,oBAAoB,CAAC,CAAC,oBAAoB,CAAC,WAAW,CAAC,EACtD,CACF,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import type { ILivechatAgent } from '@rocket.chat/core-typings';\nimport { Box } from '@rocket.chat/fuselage';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { FormSkeleton } from '../../../components/Skeleton';\nimport AgentEdit from './AgentEdit';\n\nconst AgentEditWithData = ({ uid }: { uid: ILivechatAgent['_id'] }): ReactElement => {\n\tconst t = useTranslation();\n\n\tconst getAvailableDepartments = useEndpoint('GET', '/v1/livechat/department');\n\tconst getAgentById = useEndpoint('GET', '/v1/livechat/users/agent/:_id', { _id: uid });\n\tconst getAgentDepartments = useEndpoint('GET', '/v1/livechat/agents/:agentId/departments', { agentId: uid });\n\n\tconst { data, isLoading, error } = useQuery(['livechat-getAgentById', uid], async () => getAgentById(), { refetchOnWindowFocus: false });\n\n\tconst {\n\t\tdata: agentDepartments,\n\t\tisLoading: agentDepartmentsLoading,\n\t\terror: agentsDepartmentsError,\n\t} = useQuery(['livechat-getAgentDepartments', uid], async () => getAgentDepartments(), { refetchOnWindowFocus: false });\n\n\tconst {\n\t\tdata: availableDepartments,\n\t\tisLoading: availableDepartmentsLoading,\n\t\terror: availableDepartmentsError,\n\t} = useQuery(['livechat-getAvailableDepartments'], async () => getAvailableDepartments({ showArchived: 'true' }));\n\n\tif (isLoading || availableDepartmentsLoading || agentDepartmentsLoading || !agentDepartments || !availableDepartments) {\n\t\treturn <FormSkeleton />;\n\t}\n\n\tif (error || agentsDepartmentsError || availableDepartmentsError || !data?.user) {\n\t\treturn <Box p={16}>{t('User_not_found')}</Box>;\n\t}\n\n\treturn (\n\t\t<AgentEdit\n\t\t\tagentData={data.user}\n\t\t\tuserDepartments={agentDepartments.departments}\n\t\t\tavailableDepartments={availableDepartments.departments}\n\t\t/>\n\t);\n};\n\nexport default AgentEditWithData;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/agents/AgentEditWithData.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/omnichannel/agents/AgentEditWithData.tsx","inputSourceMap":{"version":3,"file":"client/views/omnichannel/agents/AgentEditWithData.tsx","sourceRoot":"","sources":["client/views/omnichannel/agents/AgentEditWithData.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,GAAG,EAAE,MAAM,uBAAuB,CAAC;AAC5C,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AACvE,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEjD,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AAC5D,OAAO,SAAS,MAAM,aAAa,CAAC;AAEpC,MAAM,iBAAiB,GAAG,CAAC,EAAE,GAAG,EAAkC,EAAgB,EAAE;IACnF,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAE3B,MAAM,uBAAuB,GAAG,WAAW,CAAC,KAAK,EAAE,yBAAyB,CAAC,CAAC;IAC9E,MAAM,YAAY,GAAG,WAAW,CAAC,KAAK,EAAE,+BAA+B,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACvF,MAAM,mBAAmB,GAAG,WAAW,CAAC,KAAK,EAAE,0CAA0C,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;IAE7G,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC,CAAC,uBAAuB,EAAE,GAAG,CAAC,EAAE,KAAK,IAAI,EAAE,CAAC,YAAY,EAAE,EAAE,EAAE,oBAAoB,EAAE,KAAK,EAAE,CAAC,CAAC;IAEzI,MAAM,EACL,IAAI,EAAE,gBAAgB,EACtB,SAAS,EAAE,uBAAuB,EAClC,KAAK,EAAE,sBAAsB,GAC7B,GAAG,QAAQ,CAAC,CAAC,8BAA8B,EAAE,GAAG,CAAC,EAAE,KAAK,IAAI,EAAE,CAAC,mBAAmB,EAAE,EAAE,EAAE,oBAAoB,EAAE,KAAK,EAAE,CAAC,CAAC;IAExH,MAAM,EACL,IAAI,EAAE,oBAAoB,EAC1B,SAAS,EAAE,2BAA2B,EACtC,KAAK,EAAE,yBAAyB,GAChC,GAAG,QAAQ,CAAC,CAAC,kCAAkC,CAAC,EAAE,KAAK,IAAI,EAAE,CAAC,uBAAuB,CAAC,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IAElH,IAAI,SAAS,IAAI,2BAA2B,IAAI,uBAAuB,IAAI,CAAC,gBAAgB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACvH,OAAO,CAAC,YAAY,CAAC,AAAD,EAAG,CAAC;IACzB,CAAC;IAED,IAAI,KAAK,IAAI,sBAAsB,IAAI,yBAAyB,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;QACjF,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAChD,CAAC;IAED,OAAO,CACN,CAAC,SAAS,CACT,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CACrB,eAAe,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAC9C,oBAAoB,CAAC,CAAC,oBAAoB,CAAC,WAAW,CAAC,EACtD,CACF,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import type { ILivechatAgent } from '@rocket.chat/core-typings';\nimport { Box } from '@rocket.chat/fuselage';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { FormSkeleton } from '../../../components/Skeleton';\nimport AgentEdit from './AgentEdit';\n\nconst AgentEditWithData = ({ uid }: { uid: ILivechatAgent['_id'] }): ReactElement => {\n\tconst t = useTranslation();\n\n\tconst getAvailableDepartments = useEndpoint('GET', '/v1/livechat/department');\n\tconst getAgentById = useEndpoint('GET', '/v1/livechat/users/agent/:_id', { _id: uid });\n\tconst getAgentDepartments = useEndpoint('GET', '/v1/livechat/agents/:agentId/departments', { agentId: uid });\n\n\tconst { data, isLoading, error } = useQuery(['livechat-getAgentById', uid], async () => getAgentById(), { refetchOnWindowFocus: false });\n\n\tconst {\n\t\tdata: agentDepartments,\n\t\tisLoading: agentDepartmentsLoading,\n\t\terror: agentsDepartmentsError,\n\t} = useQuery(['livechat-getAgentDepartments', uid], async () => getAgentDepartments(), { refetchOnWindowFocus: false });\n\n\tconst {\n\t\tdata: availableDepartments,\n\t\tisLoading: availableDepartmentsLoading,\n\t\terror: availableDepartmentsError,\n\t} = useQuery(['livechat-getAvailableDepartments'], async () => getAvailableDepartments({ showArchived: 'true' }));\n\n\tif (isLoading || availableDepartmentsLoading || agentDepartmentsLoading || !agentDepartments || !availableDepartments) {\n\t\treturn <FormSkeleton />;\n\t}\n\n\tif (error || agentsDepartmentsError || availableDepartmentsError || !data?.user) {\n\t\treturn <Box p={16}>{t('User_not_found')}</Box>;\n\t}\n\n\treturn (\n\t\t<AgentEdit\n\t\t\tagentData={data.user}\n\t\t\tuserDepartments={agentDepartments.departments}\n\t\t\tavailableDepartments={availableDepartments.departments}\n\t\t/>\n\t);\n};\n\nexport default AgentEditWithData;\n"]}}},"code":"let Box;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Box(v) {\n    Box = v;\n  }\n}, 0);\nlet useEndpoint, useTranslation;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  },\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 1);\nlet useQuery;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery(v) {\n    useQuery = v;\n  }\n}, 2);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n}, 3);\nlet FormSkeleton;\nmodule.link(\"../../../components/Skeleton\", {\n  FormSkeleton(v) {\n    FormSkeleton = v;\n  }\n}, 4);\nlet AgentEdit;\nmodule.link(\"./AgentEdit\", {\n  default(v) {\n    AgentEdit = v;\n  }\n}, 5);\nconst AgentEditWithData = _ref => {\n  let {\n    uid\n  } = _ref;\n  const t = useTranslation();\n  const getAvailableDepartments = useEndpoint('GET', '/v1/livechat/department');\n  const getAgentById = useEndpoint('GET', '/v1/livechat/users/agent/:_id', {\n    _id: uid\n  });\n  const getAgentDepartments = useEndpoint('GET', '/v1/livechat/agents/:agentId/departments', {\n    agentId: uid\n  });\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery(['livechat-getAgentById', uid], async () => getAgentById(), {\n    refetchOnWindowFocus: false\n  });\n  const {\n    data: agentDepartments,\n    isLoading: agentDepartmentsLoading,\n    error: agentsDepartmentsError\n  } = useQuery(['livechat-getAgentDepartments', uid], async () => getAgentDepartments(), {\n    refetchOnWindowFocus: false\n  });\n  const {\n    data: availableDepartments,\n    isLoading: availableDepartmentsLoading,\n    error: availableDepartmentsError\n  } = useQuery(['livechat-getAvailableDepartments'], async () => getAvailableDepartments({\n    showArchived: 'true'\n  }));\n  if (isLoading || availableDepartmentsLoading || agentDepartmentsLoading || !agentDepartments || !availableDepartments) {\n    return /*#__PURE__*/React.createElement(FormSkeleton, null);\n  }\n  if (error || agentsDepartmentsError || availableDepartmentsError || !(data !== null && data !== void 0 && data.user)) {\n    return /*#__PURE__*/React.createElement(Box, {\n      p: 16\n    }, t('User_not_found'));\n  }\n  return /*#__PURE__*/React.createElement(AgentEdit, {\n    agentData: data.user,\n    userDepartments: agentDepartments.departments,\n    availableDepartments: availableDepartments.departments\n  });\n};\nmodule.exportDefault(AgentEditWithData);","map":{"version":3,"names":["Box","module","link","v","useEndpoint","useTranslation","useQuery","React","default","FormSkeleton","AgentEdit","AgentEditWithData","_ref","uid","t","getAvailableDepartments","getAgentById","_id","getAgentDepartments","agentId","data","isLoading","error","refetchOnWindowFocus","agentDepartments","agentDepartmentsLoading","agentsDepartmentsError","availableDepartments","availableDepartmentsLoading","availableDepartmentsError","showArchived","createElement","user","p","agentData","userDepartments","departments","exportDefault"],"sources":["client/views/omnichannel/agents/AgentEditWithData.tsx"],"sourcesContent":["import type { ILivechatAgent } from '@rocket.chat/core-typings';\nimport { Box } from '@rocket.chat/fuselage';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { FormSkeleton } from '../../../components/Skeleton';\nimport AgentEdit from './AgentEdit';\n\nconst AgentEditWithData = ({ uid }: { uid: ILivechatAgent['_id'] }): ReactElement => {\n\tconst t = useTranslation();\n\n\tconst getAvailableDepartments = useEndpoint('GET', '/v1/livechat/department');\n\tconst getAgentById = useEndpoint('GET', '/v1/livechat/users/agent/:_id', { _id: uid });\n\tconst getAgentDepartments = useEndpoint('GET', '/v1/livechat/agents/:agentId/departments', { agentId: uid });\n\n\tconst { data, isLoading, error } = useQuery(['livechat-getAgentById', uid], async () => getAgentById(), { refetchOnWindowFocus: false });\n\n\tconst {\n\t\tdata: agentDepartments,\n\t\tisLoading: agentDepartmentsLoading,\n\t\terror: agentsDepartmentsError,\n\t} = useQuery(['livechat-getAgentDepartments', uid], async () => getAgentDepartments(), { refetchOnWindowFocus: false });\n\n\tconst {\n\t\tdata: availableDepartments,\n\t\tisLoading: availableDepartmentsLoading,\n\t\terror: availableDepartmentsError,\n\t} = useQuery(['livechat-getAvailableDepartments'], async () => getAvailableDepartments({ showArchived: 'true' }));\n\n\tif (isLoading || availableDepartmentsLoading || agentDepartmentsLoading || !agentDepartments || !availableDepartments) {\n\t\treturn <FormSkeleton />;\n\t}\n\n\tif (error || agentsDepartmentsError || availableDepartmentsError || !data?.user) {\n\t\treturn <Box p={16}>{t('User_not_found')}</Box>;\n\t}\n\n\treturn (\n\t\t<AgentEdit\n\t\t\tagentData={data.user}\n\t\t\tuserDepartments={agentDepartments.departments}\n\t\t\tavailableDepartments={availableDepartments.departments}\n\t\t/>\n\t);\n};\n\nexport default AgentEditWithData;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"1dae788100fc27acf156610f30db7cd0bd8f86ff"}
