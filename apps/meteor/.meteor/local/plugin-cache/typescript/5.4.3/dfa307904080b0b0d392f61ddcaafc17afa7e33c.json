{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/2fa/overrideLoginMethod.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/2fa/overrideLoginMethod.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/2fa/overrideLoginMethod.ts","inputSourceMap":{"version":3,"file":"client/lib/2fa/overrideLoginMethod.ts","sourceRoot":"","sources":["client/lib/2fa/overrideLoginMethod.ts"],"names":[],"mappings":"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","sourcesContent":["import { isTotpInvalidError, isTotpMaxAttemptsError, isTotpRequiredError } from './utils';\n\ntype LoginError = globalThis.Error | Meteor.Error | Meteor.TypedError;\n\nexport type LoginCallback = (error: LoginError | undefined, result?: unknown) => void;\n\nexport const overrideLoginMethod = <TArgs extends any[]>(\n\tloginMethod: (...args: [...args: TArgs, cb: LoginCallback]) => void,\n\tloginArgs: TArgs,\n\tcallback: LoginCallback | undefined,\n\tloginMethodTOTP: (...args: [...args: TArgs, code: string, cb: LoginCallback]) => void,\n) => {\n\tloginMethod(...loginArgs, async (error: LoginError | undefined, result?: unknown) => {\n\t\tif (!isTotpRequiredError(error)) {\n\t\t\tcallback?.(error);\n\t\t\treturn;\n\t\t}\n\n\t\tconst { process2faReturn } = await import('./process2faReturn');\n\n\t\tawait process2faReturn({\n\t\t\terror,\n\t\t\tresult,\n\t\t\temailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n\t\t\toriginalCallback: callback,\n\t\t\tonCode: (code: string) => {\n\t\t\t\tloginMethodTOTP(...loginArgs, code, (error: LoginError | undefined, result?: unknown) => {\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\tcallback?.(undefined, result);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isTotpInvalidError(error)) {\n\t\t\t\t\t\tcallback?.(error);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tPromise.all([import('../../../app/utils/lib/i18n'), import('../toast')]).then(([{ t }, { dispatchToastMessage }]) => {\n\t\t\t\t\t\tif (isTotpMaxAttemptsError(error)) {\n\t\t\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\tmessage: t('totp-max-attempts'),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t});\n};\n\nexport const handleLogin = <TLoginFunction extends (...args: any[]) => Promise<any>>(\n\tlogin: TLoginFunction,\n\tloginWithTOTP: (...args: [...args: Parameters<TLoginFunction>, code: string]) => ReturnType<TLoginFunction>,\n) => {\n\treturn (...args: [...loginArgs: Parameters<TLoginFunction>, callback?: LoginCallback]) => {\n\t\tconst loginArgs = args.slice(0, -1) as Parameters<TLoginFunction>;\n\t\tconst callback = args.slice(-1)[0] as LoginCallback | undefined;\n\n\t\treturn login(...loginArgs)\n\t\t\t.catch(async (error: LoginError | undefined) => {\n\t\t\t\tif (!isTotpRequiredError(error)) {\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t}\n\n\t\t\t\tconst { process2faAsyncReturn } = await import('./process2faReturn');\n\t\t\t\treturn process2faAsyncReturn({\n\t\t\t\t\temailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n\t\t\t\t\terror,\n\t\t\t\t\tonCode: (code: string) => loginWithTOTP(...loginArgs, code),\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then((result: unknown) => callback?.(undefined, result))\n\t\t\t.catch((error: LoginError | undefined) => {\n\t\t\t\tif (!isTotpInvalidError(error)) {\n\t\t\t\t\tcallback?.(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tPromise.all([import('../../../app/utils/lib/i18n'), import('../toast')]).then(([{ t }, { dispatchToastMessage }]) => {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t});\n\t\t\t});\n\t};\n};\n\nexport const callLoginMethod = (options: Omit<Accounts.LoginMethodOptions, 'userCallback'>) =>\n\tnew Promise<void>((resolve, reject) => {\n\t\tAccounts.callLoginMethod({\n\t\t\t...options,\n\t\t\tuserCallback: (error) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/2fa/overrideLoginMethod.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/2fa/overrideLoginMethod.ts","inputSourceMap":{"version":3,"file":"client/lib/2fa/overrideLoginMethod.ts","sourceRoot":"","sources":["client/lib/2fa/overrideLoginMethod.ts"],"names":[],"mappings":"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","sourcesContent":["import { isTotpInvalidError, isTotpMaxAttemptsError, isTotpRequiredError } from './utils';\n\ntype LoginError = globalThis.Error | Meteor.Error | Meteor.TypedError;\n\nexport type LoginCallback = (error: LoginError | undefined, result?: unknown) => void;\n\nexport const overrideLoginMethod = <TArgs extends any[]>(\n\tloginMethod: (...args: [...args: TArgs, cb: LoginCallback]) => void,\n\tloginArgs: TArgs,\n\tcallback: LoginCallback | undefined,\n\tloginMethodTOTP: (...args: [...args: TArgs, code: string, cb: LoginCallback]) => void,\n) => {\n\tloginMethod(...loginArgs, async (error: LoginError | undefined, result?: unknown) => {\n\t\tif (!isTotpRequiredError(error)) {\n\t\t\tcallback?.(error);\n\t\t\treturn;\n\t\t}\n\n\t\tconst { process2faReturn } = await import('./process2faReturn');\n\n\t\tawait process2faReturn({\n\t\t\terror,\n\t\t\tresult,\n\t\t\temailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n\t\t\toriginalCallback: callback,\n\t\t\tonCode: (code: string) => {\n\t\t\t\tloginMethodTOTP(...loginArgs, code, (error: LoginError | undefined, result?: unknown) => {\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\tcallback?.(undefined, result);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isTotpInvalidError(error)) {\n\t\t\t\t\t\tcallback?.(error);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tPromise.all([import('../../../app/utils/lib/i18n'), import('../toast')]).then(([{ t }, { dispatchToastMessage }]) => {\n\t\t\t\t\t\tif (isTotpMaxAttemptsError(error)) {\n\t\t\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\tmessage: t('totp-max-attempts'),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t});\n};\n\nexport const handleLogin = <TLoginFunction extends (...args: any[]) => Promise<any>>(\n\tlogin: TLoginFunction,\n\tloginWithTOTP: (...args: [...args: Parameters<TLoginFunction>, code: string]) => ReturnType<TLoginFunction>,\n) => {\n\treturn (...args: [...loginArgs: Parameters<TLoginFunction>, callback?: LoginCallback]) => {\n\t\tconst loginArgs = args.slice(0, -1) as Parameters<TLoginFunction>;\n\t\tconst callback = args.slice(-1)[0] as LoginCallback | undefined;\n\n\t\treturn login(...loginArgs)\n\t\t\t.catch(async (error: LoginError | undefined) => {\n\t\t\t\tif (!isTotpRequiredError(error)) {\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t}\n\n\t\t\t\tconst { process2faAsyncReturn } = await import('./process2faReturn');\n\t\t\t\treturn process2faAsyncReturn({\n\t\t\t\t\temailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n\t\t\t\t\terror,\n\t\t\t\t\tonCode: (code: string) => loginWithTOTP(...loginArgs, code),\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then((result: unknown) => callback?.(undefined, result))\n\t\t\t.catch((error: LoginError | undefined) => {\n\t\t\t\tif (!isTotpInvalidError(error)) {\n\t\t\t\t\tcallback?.(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tPromise.all([import('../../../app/utils/lib/i18n'), import('../toast')]).then(([{ t }, { dispatchToastMessage }]) => {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t});\n\t\t\t});\n\t};\n};\n\nexport const callLoginMethod = (options: Omit<Accounts.LoginMethodOptions, 'userCallback'>) =>\n\tnew Promise<void>((resolve, reject) => {\n\t\tAccounts.callLoginMethod({\n\t\t\t...options,\n\t\t\tuserCallback: (error) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t});\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 1);\nvar _slicedToArray;\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 2);\nvar _toConsumableArray;\nmodule.link(\"@babel/runtime/helpers/toConsumableArray\", {\n  default: function (v) {\n    _toConsumableArray = v;\n  }\n}, 3);\nmodule.export({\n  overrideLoginMethod: function () {\n    return overrideLoginMethod;\n  },\n  handleLogin: function () {\n    return handleLogin;\n  },\n  callLoginMethod: function () {\n    return callLoginMethod;\n  }\n});\nvar isTotpInvalidError, isTotpMaxAttemptsError, isTotpRequiredError;\nmodule.link(\"./utils\", {\n  isTotpInvalidError: function (v) {\n    isTotpInvalidError = v;\n  },\n  isTotpMaxAttemptsError: function (v) {\n    isTotpMaxAttemptsError = v;\n  },\n  isTotpRequiredError: function (v) {\n    isTotpRequiredError = v;\n  }\n}, 0);\nvar overrideLoginMethod = function (loginMethod, loginArgs, callback, loginMethodTOTP) {\n  loginMethod.apply(void 0, _toConsumableArray(loginArgs).concat([function () {\n    function _callee(error, result) {\n      var _await$module$dynamic, process2faReturn;\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (isTotpRequiredError(error)) {\n                _context.next = 3;\n                break;\n              }\n              callback === null || callback === void 0 ? void 0 : callback(error);\n              return _context.abrupt(\"return\");\n            case 3:\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(module.dynamicImport('./process2faReturn'));\n            case 5:\n              _await$module$dynamic = _context.sent;\n              process2faReturn = _await$module$dynamic.process2faReturn;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(process2faReturn({\n                error: error,\n                result: result,\n                emailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n                originalCallback: callback,\n                onCode: function (code) {\n                  loginMethodTOTP.apply(void 0, _toConsumableArray(loginArgs).concat([code, function (error, result) {\n                    if (!error) {\n                      callback === null || callback === void 0 ? void 0 : callback(undefined, result);\n                      return;\n                    }\n                    if (isTotpInvalidError(error)) {\n                      callback === null || callback === void 0 ? void 0 : callback(error);\n                      return;\n                    }\n                    Promise.all([module.dynamicImport('../../../app/utils/lib/i18n'), module.dynamicImport('../toast')]).then(function (_ref) {\n                      var _ref2 = _slicedToArray(_ref, 2),\n                        t = _ref2[0].t,\n                        dispatchToastMessage = _ref2[1].dispatchToastMessage;\n                      if (isTotpMaxAttemptsError(error)) {\n                        dispatchToastMessage({\n                          type: 'error',\n                          message: t('totp-max-attempts')\n                        });\n                        callback === null || callback === void 0 ? void 0 : callback(undefined);\n                        return;\n                      }\n                      dispatchToastMessage({\n                        type: 'error',\n                        message: t('Invalid_two_factor_code')\n                      });\n                      callback === null || callback === void 0 ? void 0 : callback(undefined);\n                    });\n                  }]));\n                }\n              }));\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n        return _callee$;\n      }(), null, null, null, Promise);\n    }\n    return _callee;\n  }()]));\n};\nvar handleLogin = function (login, loginWithTOTP) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var loginArgs = args.slice(0, -1);\n    var callback = args.slice(-1)[0];\n    return login.apply(void 0, _toConsumableArray(loginArgs)).catch(function () {\n      function _callee2(error) {\n        var _await$module$dynamic2, process2faAsyncReturn;\n        return _regeneratorRuntime.async(function () {\n          function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                if (isTotpRequiredError(error)) {\n                  _context2.next = 2;\n                  break;\n                }\n                return _context2.abrupt(\"return\", Promise.reject(error));\n              case 2:\n                _context2.next = 4;\n                return _regeneratorRuntime.awrap(module.dynamicImport('./process2faReturn'));\n              case 4:\n                _await$module$dynamic2 = _context2.sent;\n                process2faAsyncReturn = _await$module$dynamic2.process2faAsyncReturn;\n                return _context2.abrupt(\"return\", process2faAsyncReturn({\n                  emailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n                  error: error,\n                  onCode: function (code) {\n                    return loginWithTOTP.apply(void 0, _toConsumableArray(loginArgs).concat([code]));\n                  }\n                }));\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n          return _callee2$;\n        }(), null, null, null, Promise);\n      }\n      return _callee2;\n    }()).then(function (result) {\n      return callback === null || callback === void 0 ? void 0 : callback(undefined, result);\n    }).catch(function (error) {\n      if (!isTotpInvalidError(error)) {\n        callback === null || callback === void 0 ? void 0 : callback(error);\n        return;\n      }\n      Promise.all([module.dynamicImport('../../../app/utils/lib/i18n'), module.dynamicImport('../toast')]).then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          t = _ref4[0].t,\n          dispatchToastMessage = _ref4[1].dispatchToastMessage;\n        dispatchToastMessage({\n          type: 'error',\n          message: t('Invalid_two_factor_code')\n        });\n        callback === null || callback === void 0 ? void 0 : callback(undefined);\n      });\n    });\n  };\n};\nvar callLoginMethod = function (options) {\n  return new Promise(function (resolve, reject) {\n    Accounts.callLoginMethod(_objectSpread(_objectSpread({}, options), {}, {\n      userCallback: function (error) {\n        if (error) {\n          reject(error);\n        } else {\n          resolve();\n        }\n      }\n    }));\n  });\n};","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","_objectSpread","_slicedToArray","_toConsumableArray","export","overrideLoginMethod","handleLogin","callLoginMethod","isTotpInvalidError","isTotpMaxAttemptsError","isTotpRequiredError","loginMethod","loginArgs","callback","loginMethodTOTP","apply","concat","_callee","error","result","_await$module$dynamic","process2faReturn","async","_callee$","_context","prev","next","abrupt","awrap","dynamicImport","sent","emailOrUsername","undefined","originalCallback","onCode","code","Promise","all","then","_ref","_ref2","t","dispatchToastMessage","type","message","stop","login","loginWithTOTP","_len","arguments","length","args","Array","_key","slice","catch","_callee2","_await$module$dynamic2","process2faAsyncReturn","_callee2$","_context2","reject","_ref3","_ref4","options","resolve","Accounts","userCallback"],"sources":["client/lib/2fa/overrideLoginMethod.ts"],"sourcesContent":["import { isTotpInvalidError, isTotpMaxAttemptsError, isTotpRequiredError } from './utils';\n\ntype LoginError = globalThis.Error | Meteor.Error | Meteor.TypedError;\n\nexport type LoginCallback = (error: LoginError | undefined, result?: unknown) => void;\n\nexport const overrideLoginMethod = <TArgs extends any[]>(\n\tloginMethod: (...args: [...args: TArgs, cb: LoginCallback]) => void,\n\tloginArgs: TArgs,\n\tcallback: LoginCallback | undefined,\n\tloginMethodTOTP: (...args: [...args: TArgs, code: string, cb: LoginCallback]) => void,\n) => {\n\tloginMethod(...loginArgs, async (error: LoginError | undefined, result?: unknown) => {\n\t\tif (!isTotpRequiredError(error)) {\n\t\t\tcallback?.(error);\n\t\t\treturn;\n\t\t}\n\n\t\tconst { process2faReturn } = await import('./process2faReturn');\n\n\t\tawait process2faReturn({\n\t\t\terror,\n\t\t\tresult,\n\t\t\temailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n\t\t\toriginalCallback: callback,\n\t\t\tonCode: (code: string) => {\n\t\t\t\tloginMethodTOTP(...loginArgs, code, (error: LoginError | undefined, result?: unknown) => {\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\tcallback?.(undefined, result);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isTotpInvalidError(error)) {\n\t\t\t\t\t\tcallback?.(error);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tPromise.all([import('../../../app/utils/lib/i18n'), import('../toast')]).then(([{ t }, { dispatchToastMessage }]) => {\n\t\t\t\t\t\tif (isTotpMaxAttemptsError(error)) {\n\t\t\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\tmessage: t('totp-max-attempts'),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t});\n};\n\nexport const handleLogin = <TLoginFunction extends (...args: any[]) => Promise<any>>(\n\tlogin: TLoginFunction,\n\tloginWithTOTP: (...args: [...args: Parameters<TLoginFunction>, code: string]) => ReturnType<TLoginFunction>,\n) => {\n\treturn (...args: [...loginArgs: Parameters<TLoginFunction>, callback?: LoginCallback]) => {\n\t\tconst loginArgs = args.slice(0, -1) as Parameters<TLoginFunction>;\n\t\tconst callback = args.slice(-1)[0] as LoginCallback | undefined;\n\n\t\treturn login(...loginArgs)\n\t\t\t.catch(async (error: LoginError | undefined) => {\n\t\t\t\tif (!isTotpRequiredError(error)) {\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t}\n\n\t\t\t\tconst { process2faAsyncReturn } = await import('./process2faReturn');\n\t\t\t\treturn process2faAsyncReturn({\n\t\t\t\t\temailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n\t\t\t\t\terror,\n\t\t\t\t\tonCode: (code: string) => loginWithTOTP(...loginArgs, code),\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then((result: unknown) => callback?.(undefined, result))\n\t\t\t.catch((error: LoginError | undefined) => {\n\t\t\t\tif (!isTotpInvalidError(error)) {\n\t\t\t\t\tcallback?.(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tPromise.all([import('../../../app/utils/lib/i18n'), import('../toast')]).then(([{ t }, { dispatchToastMessage }]) => {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t});\n\t\t\t});\n\t};\n};\n\nexport const callLoginMethod = (options: Omit<Accounts.LoginMethodOptions, 'userCallback'>) =>\n\tnew Promise<void>((resolve, reject) => {\n\t\tAccounts.callLoginMethod({\n\t\t\t...options,\n\t\t\tuserCallback: (error) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"dfa307904080b0b0d392f61ddcaafc17afa7e33c"}
