{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/email-inbox.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/email-inbox.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/email-inbox.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/email-inbox.ts","sourceRoot":"","sources":["app/api/server/v1/email-inbox.ts"],"names":[],"mappings":"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","sourcesContent":["import { EmailInbox, Users } from '@rocket.chat/models';\nimport { check, Match } from 'meteor/check';\n\nimport { sendTestEmailToInbox } from '../../../../server/features/EmailInbox/EmailInbox_Outgoing';\nimport { API } from '../api';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\nimport { insertOneEmailInbox, findEmailInboxes, updateEmailInbox, removeEmailInbox } from '../lib/emailInbox';\n\nAPI.v1.addRoute(\n\t'email-inbox.list',\n\t{ authRequired: true, permissionsRequired: ['manage-email-inbox'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, query } = await this.parseJsonQuery();\n\t\t\tconst emailInboxes = await findEmailInboxes({ query, pagination: { offset, count, sort } });\n\n\t\t\treturn API.v1.success(emailInboxes);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox',\n\t{ authRequired: true, permissionsRequired: ['manage-email-inbox'] },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\t_id: Match.Maybe(String),\n\t\t\t\tactive: Boolean,\n\t\t\t\tname: String,\n\t\t\t\temail: String,\n\t\t\t\tdescription: Match.Maybe(String),\n\t\t\t\tsenderInfo: Match.Maybe(String),\n\t\t\t\tdepartment: Match.Maybe(String),\n\t\t\t\tsmtp: Match.ObjectIncluding({\n\t\t\t\t\tserver: String,\n\t\t\t\t\tport: Number,\n\t\t\t\t\tusername: String,\n\t\t\t\t\tpassword: String,\n\t\t\t\t\tsecure: Boolean,\n\t\t\t\t}),\n\t\t\t\timap: Match.ObjectIncluding({\n\t\t\t\t\tserver: String,\n\t\t\t\t\tport: Number,\n\t\t\t\t\tusername: String,\n\t\t\t\t\tpassword: String,\n\t\t\t\t\tsecure: Boolean,\n\t\t\t\t\tmaxRetries: Number,\n\t\t\t\t}),\n\t\t\t});\n\n\t\t\tconst emailInboxParams = this.bodyParams;\n\n\t\t\tlet _id: string;\n\n\t\t\tif (!emailInboxParams?._id) {\n\t\t\t\tconst { insertedId } = await insertOneEmailInbox(this.userId, emailInboxParams);\n\n\t\t\t\tif (!insertedId) {\n\t\t\t\t\treturn API.v1.failure('Failed to create email inbox');\n\t\t\t\t}\n\n\t\t\t\t_id = insertedId;\n\t\t\t} else {\n\t\t\t\tconst emailInbox = await updateEmailInbox({ ...emailInboxParams, _id: emailInboxParams._id });\n\n\t\t\t\tif (!emailInbox?._id) {\n\t\t\t\t\treturn API.v1.failure('Failed to update email inbox');\n\t\t\t\t}\n\n\t\t\t\t_id = emailInbox._id;\n\t\t\t}\n\n\t\t\treturn API.v1.success({ _id });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox/:_id',\n\t{ authRequired: true, permissionsRequired: ['manage-email-inbox'] },\n\t{\n\t\tasync get() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { _id } = this.urlParams;\n\t\t\tif (!_id) {\n\t\t\t\tthrow new Error('error-invalid-param');\n\t\t\t}\n\t\t\tconst emailInbox = await EmailInbox.findOneById(_id);\n\n\t\t\tif (!emailInbox) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\treturn API.v1.success(emailInbox);\n\t\t},\n\t\tasync delete() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { _id } = this.urlParams;\n\t\t\tif (!_id) {\n\t\t\t\tthrow new Error('error-invalid-param');\n\t\t\t}\n\n\t\t\tconst { deletedCount } = await removeEmailInbox(_id);\n\n\t\t\tif (!deletedCount) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\treturn API.v1.success({ _id });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox.search',\n\t{ authRequired: true, permissionsRequired: ['manage-email-inbox'] },\n\t{\n\t\tasync get() {\n\t\t\tcheck(this.queryParams, {\n\t\t\t\temail: String,\n\t\t\t});\n\n\t\t\tconst { email } = this.queryParams;\n\n\t\t\t// TODO: Chapter day backend - check if user has permission to view this email inbox instead of null values\n\t\t\t// TODO: Chapter day: Remove this endpoint and move search to GET /email-inbox\n\t\t\tconst emailInbox = await EmailInbox.findByEmail(email);\n\n\t\t\treturn API.v1.success({ emailInbox });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox.send-test/:_id',\n\t{ authRequired: true, permissionsRequired: ['manage-email-inbox'] },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { _id } = this.urlParams;\n\t\t\tif (!_id) {\n\t\t\t\tthrow new Error('error-invalid-param');\n\t\t\t}\n\t\t\tconst emailInbox = await EmailInbox.findOneById(_id);\n\n\t\t\tif (!emailInbox) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst user = await Users.findOneById(this.userId);\n\t\t\tif (!user) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tawait sendTestEmailToInbox(emailInbox, user);\n\n\t\t\treturn API.v1.success({ _id });\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/email-inbox.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/email-inbox.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/email-inbox.ts","sourceRoot":"","sources":["app/api/server/v1/email-inbox.ts"],"names":[],"mappings":"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","sourcesContent":["import { EmailInbox, Users } from '@rocket.chat/models';\nimport { check, Match } from 'meteor/check';\n\nimport { sendTestEmailToInbox } from '../../../../server/features/EmailInbox/EmailInbox_Outgoing';\nimport { API } from '../api';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\nimport { insertOneEmailInbox, findEmailInboxes, updateEmailInbox, removeEmailInbox } from '../lib/emailInbox';\n\nAPI.v1.addRoute(\n\t'email-inbox.list',\n\t{ authRequired: true, permissionsRequired: ['manage-email-inbox'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, query } = await this.parseJsonQuery();\n\t\t\tconst emailInboxes = await findEmailInboxes({ query, pagination: { offset, count, sort } });\n\n\t\t\treturn API.v1.success(emailInboxes);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox',\n\t{ authRequired: true, permissionsRequired: ['manage-email-inbox'] },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\t_id: Match.Maybe(String),\n\t\t\t\tactive: Boolean,\n\t\t\t\tname: String,\n\t\t\t\temail: String,\n\t\t\t\tdescription: Match.Maybe(String),\n\t\t\t\tsenderInfo: Match.Maybe(String),\n\t\t\t\tdepartment: Match.Maybe(String),\n\t\t\t\tsmtp: Match.ObjectIncluding({\n\t\t\t\t\tserver: String,\n\t\t\t\t\tport: Number,\n\t\t\t\t\tusername: String,\n\t\t\t\t\tpassword: String,\n\t\t\t\t\tsecure: Boolean,\n\t\t\t\t}),\n\t\t\t\timap: Match.ObjectIncluding({\n\t\t\t\t\tserver: String,\n\t\t\t\t\tport: Number,\n\t\t\t\t\tusername: String,\n\t\t\t\t\tpassword: String,\n\t\t\t\t\tsecure: Boolean,\n\t\t\t\t\tmaxRetries: Number,\n\t\t\t\t}),\n\t\t\t});\n\n\t\t\tconst emailInboxParams = this.bodyParams;\n\n\t\t\tlet _id: string;\n\n\t\t\tif (!emailInboxParams?._id) {\n\t\t\t\tconst { insertedId } = await insertOneEmailInbox(this.userId, emailInboxParams);\n\n\t\t\t\tif (!insertedId) {\n\t\t\t\t\treturn API.v1.failure('Failed to create email inbox');\n\t\t\t\t}\n\n\t\t\t\t_id = insertedId;\n\t\t\t} else {\n\t\t\t\tconst emailInbox = await updateEmailInbox({ ...emailInboxParams, _id: emailInboxParams._id });\n\n\t\t\t\tif (!emailInbox?._id) {\n\t\t\t\t\treturn API.v1.failure('Failed to update email inbox');\n\t\t\t\t}\n\n\t\t\t\t_id = emailInbox._id;\n\t\t\t}\n\n\t\t\treturn API.v1.success({ _id });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox/:_id',\n\t{ authRequired: true, permissionsRequired: ['manage-email-inbox'] },\n\t{\n\t\tasync get() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { _id } = this.urlParams;\n\t\t\tif (!_id) {\n\t\t\t\tthrow new Error('error-invalid-param');\n\t\t\t}\n\t\t\tconst emailInbox = await EmailInbox.findOneById(_id);\n\n\t\t\tif (!emailInbox) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\treturn API.v1.success(emailInbox);\n\t\t},\n\t\tasync delete() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { _id } = this.urlParams;\n\t\t\tif (!_id) {\n\t\t\t\tthrow new Error('error-invalid-param');\n\t\t\t}\n\n\t\t\tconst { deletedCount } = await removeEmailInbox(_id);\n\n\t\t\tif (!deletedCount) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\treturn API.v1.success({ _id });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox.search',\n\t{ authRequired: true, permissionsRequired: ['manage-email-inbox'] },\n\t{\n\t\tasync get() {\n\t\t\tcheck(this.queryParams, {\n\t\t\t\temail: String,\n\t\t\t});\n\n\t\t\tconst { email } = this.queryParams;\n\n\t\t\t// TODO: Chapter day backend - check if user has permission to view this email inbox instead of null values\n\t\t\t// TODO: Chapter day: Remove this endpoint and move search to GET /email-inbox\n\t\t\tconst emailInbox = await EmailInbox.findByEmail(email);\n\n\t\t\treturn API.v1.success({ emailInbox });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox.send-test/:_id',\n\t{ authRequired: true, permissionsRequired: ['manage-email-inbox'] },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { _id } = this.urlParams;\n\t\t\tif (!_id) {\n\t\t\t\tthrow new Error('error-invalid-param');\n\t\t\t}\n\t\t\tconst emailInbox = await EmailInbox.findOneById(_id);\n\n\t\t\tif (!emailInbox) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst user = await Users.findOneById(this.userId);\n\t\t\tif (!user) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tawait sendTestEmailToInbox(emailInbox, user);\n\n\t\t\treturn API.v1.success({ _id });\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let EmailInbox, Users;\n    module.link(\"@rocket.chat/models\", {\n      EmailInbox(v) {\n        EmailInbox = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let check, Match;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      },\n      Match(v) {\n        Match = v;\n      }\n    }, 1);\n    let sendTestEmailToInbox;\n    module.link(\"../../../../server/features/EmailInbox/EmailInbox_Outgoing\", {\n      sendTestEmailToInbox(v) {\n        sendTestEmailToInbox = v;\n      }\n    }, 2);\n    let API;\n    module.link(\"../api\", {\n      API(v) {\n        API = v;\n      }\n    }, 3);\n    let getPaginationItems;\n    module.link(\"../helpers/getPaginationItems\", {\n      getPaginationItems(v) {\n        getPaginationItems = v;\n      }\n    }, 4);\n    let insertOneEmailInbox, findEmailInboxes, updateEmailInbox, removeEmailInbox;\n    module.link(\"../lib/emailInbox\", {\n      insertOneEmailInbox(v) {\n        insertOneEmailInbox = v;\n      },\n      findEmailInboxes(v) {\n        findEmailInboxes = v;\n      },\n      updateEmailInbox(v) {\n        updateEmailInbox = v;\n      },\n      removeEmailInbox(v) {\n        removeEmailInbox = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('email-inbox.list', {\n      authRequired: true,\n      permissionsRequired: ['manage-email-inbox']\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort,\n          query\n        } = await this.parseJsonQuery();\n        const emailInboxes = await findEmailInboxes({\n          query,\n          pagination: {\n            offset,\n            count,\n            sort\n          }\n        });\n        return API.v1.success(emailInboxes);\n      }\n    });\n    API.v1.addRoute('email-inbox', {\n      authRequired: true,\n      permissionsRequired: ['manage-email-inbox']\n    }, {\n      async post() {\n        check(this.bodyParams, {\n          _id: Match.Maybe(String),\n          active: Boolean,\n          name: String,\n          email: String,\n          description: Match.Maybe(String),\n          senderInfo: Match.Maybe(String),\n          department: Match.Maybe(String),\n          smtp: Match.ObjectIncluding({\n            server: String,\n            port: Number,\n            username: String,\n            password: String,\n            secure: Boolean\n          }),\n          imap: Match.ObjectIncluding({\n            server: String,\n            port: Number,\n            username: String,\n            password: String,\n            secure: Boolean,\n            maxRetries: Number\n          })\n        });\n        const emailInboxParams = this.bodyParams;\n        let _id;\n        if (!(emailInboxParams !== null && emailInboxParams !== void 0 && emailInboxParams._id)) {\n          const {\n            insertedId\n          } = await insertOneEmailInbox(this.userId, emailInboxParams);\n          if (!insertedId) {\n            return API.v1.failure('Failed to create email inbox');\n          }\n          _id = insertedId;\n        } else {\n          const emailInbox = await updateEmailInbox(_objectSpread(_objectSpread({}, emailInboxParams), {}, {\n            _id: emailInboxParams._id\n          }));\n          if (!(emailInbox !== null && emailInbox !== void 0 && emailInbox._id)) {\n            return API.v1.failure('Failed to update email inbox');\n          }\n          _id = emailInbox._id;\n        }\n        return API.v1.success({\n          _id\n        });\n      }\n    });\n    API.v1.addRoute('email-inbox/:_id', {\n      authRequired: true,\n      permissionsRequired: ['manage-email-inbox']\n    }, {\n      async get() {\n        check(this.urlParams, {\n          _id: String\n        });\n        const {\n          _id\n        } = this.urlParams;\n        if (!_id) {\n          throw new Error('error-invalid-param');\n        }\n        const emailInbox = await EmailInbox.findOneById(_id);\n        if (!emailInbox) {\n          return API.v1.notFound();\n        }\n        return API.v1.success(emailInbox);\n      },\n      async delete() {\n        check(this.urlParams, {\n          _id: String\n        });\n        const {\n          _id\n        } = this.urlParams;\n        if (!_id) {\n          throw new Error('error-invalid-param');\n        }\n        const {\n          deletedCount\n        } = await removeEmailInbox(_id);\n        if (!deletedCount) {\n          return API.v1.notFound();\n        }\n        return API.v1.success({\n          _id\n        });\n      }\n    });\n    API.v1.addRoute('email-inbox.search', {\n      authRequired: true,\n      permissionsRequired: ['manage-email-inbox']\n    }, {\n      async get() {\n        check(this.queryParams, {\n          email: String\n        });\n        const {\n          email\n        } = this.queryParams;\n        // TODO: Chapter day backend - check if user has permission to view this email inbox instead of null values\n        // TODO: Chapter day: Remove this endpoint and move search to GET /email-inbox\n        const emailInbox = await EmailInbox.findByEmail(email);\n        return API.v1.success({\n          emailInbox\n        });\n      }\n    });\n    API.v1.addRoute('email-inbox.send-test/:_id', {\n      authRequired: true,\n      permissionsRequired: ['manage-email-inbox']\n    }, {\n      async post() {\n        check(this.urlParams, {\n          _id: String\n        });\n        const {\n          _id\n        } = this.urlParams;\n        if (!_id) {\n          throw new Error('error-invalid-param');\n        }\n        const emailInbox = await EmailInbox.findOneById(_id);\n        if (!emailInbox) {\n          return API.v1.notFound();\n        }\n        const user = await Users.findOneById(this.userId);\n        if (!user) {\n          return API.v1.notFound();\n        }\n        await sendTestEmailToInbox(emailInbox, user);\n        return API.v1.success({\n          _id\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","EmailInbox","Users","check","Match","sendTestEmailToInbox","API","getPaginationItems","insertOneEmailInbox","findEmailInboxes","updateEmailInbox","removeEmailInbox","__reifyWaitForDeps__","v1","addRoute","authRequired","permissionsRequired","get","offset","count","queryParams","sort","query","parseJsonQuery","emailInboxes","pagination","success","post","bodyParams","_id","Maybe","String","active","Boolean","name","email","description","senderInfo","department","smtp","ObjectIncluding","server","port","Number","username","password","secure","imap","maxRetries","emailInboxParams","insertedId","userId","failure","emailInbox","urlParams","Error","findOneById","notFound","delete","deletedCount","findByEmail","user","__reify_async_result__","_reifyError","self","async"],"sources":["app/api/server/v1/email-inbox.ts"],"sourcesContent":["import { EmailInbox, Users } from '@rocket.chat/models';\nimport { check, Match } from 'meteor/check';\n\nimport { sendTestEmailToInbox } from '../../../../server/features/EmailInbox/EmailInbox_Outgoing';\nimport { API } from '../api';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\nimport { insertOneEmailInbox, findEmailInboxes, updateEmailInbox, removeEmailInbox } from '../lib/emailInbox';\n\nAPI.v1.addRoute(\n\t'email-inbox.list',\n\t{ authRequired: true, permissionsRequired: ['manage-email-inbox'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, query } = await this.parseJsonQuery();\n\t\t\tconst emailInboxes = await findEmailInboxes({ query, pagination: { offset, count, sort } });\n\n\t\t\treturn API.v1.success(emailInboxes);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox',\n\t{ authRequired: true, permissionsRequired: ['manage-email-inbox'] },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\t_id: Match.Maybe(String),\n\t\t\t\tactive: Boolean,\n\t\t\t\tname: String,\n\t\t\t\temail: String,\n\t\t\t\tdescription: Match.Maybe(String),\n\t\t\t\tsenderInfo: Match.Maybe(String),\n\t\t\t\tdepartment: Match.Maybe(String),\n\t\t\t\tsmtp: Match.ObjectIncluding({\n\t\t\t\t\tserver: String,\n\t\t\t\t\tport: Number,\n\t\t\t\t\tusername: String,\n\t\t\t\t\tpassword: String,\n\t\t\t\t\tsecure: Boolean,\n\t\t\t\t}),\n\t\t\t\timap: Match.ObjectIncluding({\n\t\t\t\t\tserver: String,\n\t\t\t\t\tport: Number,\n\t\t\t\t\tusername: String,\n\t\t\t\t\tpassword: String,\n\t\t\t\t\tsecure: Boolean,\n\t\t\t\t\tmaxRetries: Number,\n\t\t\t\t}),\n\t\t\t});\n\n\t\t\tconst emailInboxParams = this.bodyParams;\n\n\t\t\tlet _id: string;\n\n\t\t\tif (!emailInboxParams?._id) {\n\t\t\t\tconst { insertedId } = await insertOneEmailInbox(this.userId, emailInboxParams);\n\n\t\t\t\tif (!insertedId) {\n\t\t\t\t\treturn API.v1.failure('Failed to create email inbox');\n\t\t\t\t}\n\n\t\t\t\t_id = insertedId;\n\t\t\t} else {\n\t\t\t\tconst emailInbox = await updateEmailInbox({ ...emailInboxParams, _id: emailInboxParams._id });\n\n\t\t\t\tif (!emailInbox?._id) {\n\t\t\t\t\treturn API.v1.failure('Failed to update email inbox');\n\t\t\t\t}\n\n\t\t\t\t_id = emailInbox._id;\n\t\t\t}\n\n\t\t\treturn API.v1.success({ _id });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox/:_id',\n\t{ authRequired: true, permissionsRequired: ['manage-email-inbox'] },\n\t{\n\t\tasync get() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { _id } = this.urlParams;\n\t\t\tif (!_id) {\n\t\t\t\tthrow new Error('error-invalid-param');\n\t\t\t}\n\t\t\tconst emailInbox = await EmailInbox.findOneById(_id);\n\n\t\t\tif (!emailInbox) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\treturn API.v1.success(emailInbox);\n\t\t},\n\t\tasync delete() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { _id } = this.urlParams;\n\t\t\tif (!_id) {\n\t\t\t\tthrow new Error('error-invalid-param');\n\t\t\t}\n\n\t\t\tconst { deletedCount } = await removeEmailInbox(_id);\n\n\t\t\tif (!deletedCount) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\treturn API.v1.success({ _id });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox.search',\n\t{ authRequired: true, permissionsRequired: ['manage-email-inbox'] },\n\t{\n\t\tasync get() {\n\t\t\tcheck(this.queryParams, {\n\t\t\t\temail: String,\n\t\t\t});\n\n\t\t\tconst { email } = this.queryParams;\n\n\t\t\t// TODO: Chapter day backend - check if user has permission to view this email inbox instead of null values\n\t\t\t// TODO: Chapter day: Remove this endpoint and move search to GET /email-inbox\n\t\t\tconst emailInbox = await EmailInbox.findByEmail(email);\n\n\t\t\treturn API.v1.success({ emailInbox });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox.send-test/:_id',\n\t{ authRequired: true, permissionsRequired: ['manage-email-inbox'] },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { _id } = this.urlParams;\n\t\t\tif (!_id) {\n\t\t\t\tthrow new Error('error-invalid-param');\n\t\t\t}\n\t\t\tconst emailInbox = await EmailInbox.findOneById(_id);\n\n\t\t\tif (!emailInbox) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst user = await Users.findOneById(this.userId);\n\t\t\tif (!user) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tawait sendTestEmailToInbox(emailInbox, user);\n\n\t\t\treturn API.v1.success({ _id });\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"7c479f5c82f59f25a6a3fc6a20d105a86768a3a4"}
