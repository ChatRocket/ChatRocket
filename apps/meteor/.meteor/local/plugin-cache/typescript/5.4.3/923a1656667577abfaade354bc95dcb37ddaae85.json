{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/notifications/desktop.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/notifications/desktop.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/notifications/desktop.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/notifications/desktop.ts","sourceRoot":"","sources":["app/lib/server/functions/notifications/desktop.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IMessage, IRoom, IUser, AtLeast } from '@rocket.chat/core-typings';\n\nimport { roomCoordinator } from '../../../../../server/lib/rooms/roomCoordinator';\nimport { metrics } from '../../../../metrics/server';\nimport { settings } from '../../../../settings/server';\n\n/**\n * Send notification to user\n *\n * @param {string} userId The user to notify\n * @param {object} user The sender\n * @param {object} room The room send from\n * @param {object} message The message object\n * @param {number} duration Duration of notification\n * @param {string} notificationMessage The message text to send on notification body\n */\nexport async function notifyDesktopUser({\n\tuserId,\n\tuser,\n\tmessage,\n\troom,\n\tduration,\n\tnotificationMessage,\n}: {\n\tuserId: string;\n\tuser: AtLeast<IUser, '_id' | 'name' | 'username'>;\n\tmessage: IMessage | Pick<IMessage, 'u'>;\n\troom: IRoom;\n\tduration?: number;\n\tnotificationMessage: string;\n}): Promise<void> {\n\tconst { title, text, name } = await roomCoordinator\n\t\t.getRoomDirectives(room.t)\n\t\t.getNotificationDetails(room, user, notificationMessage, userId);\n\n\tconst payload = {\n\t\ttitle: title || '',\n\t\ttext,\n\t\tduration,\n\t\tpayload: {\n\t\t\t_id: '',\n\t\t\trid: '',\n\t\t\ttmid: '',\n\t\t\t...('_id' in message && {\n\t\t\t\t// TODO: omnichannel is not sending _id, rid, tmid\n\t\t\t\t_id: message._id,\n\t\t\t\trid: message.rid,\n\t\t\t\ttmid: message.tmid,\n\t\t\t}),\n\t\t\tsender: message.u,\n\t\t\ttype: room.t,\n\t\t\tmessage: {\n\t\t\t\tmsg: 'msg' in message ? message.msg : '',\n\t\t\t\t...('t' in message && {\n\t\t\t\t\tt: message.t,\n\t\t\t\t}),\n\t\t\t},\n\t\t\tname,\n\t\t},\n\t};\n\n\tmetrics.notificationsSent.inc({ notification_type: 'desktop' });\n\n\tvoid api.broadcast('notify.desktop', userId, payload);\n}\n\nexport function shouldNotifyDesktop({\n\tdisableAllMessageNotifications,\n\tstatus,\n\tstatusConnection,\n\tdesktopNotifications,\n\thasMentionToAll,\n\thasMentionToHere,\n\tisHighlighted,\n\thasMentionToUser,\n\thasReplyToThread,\n\troomType,\n\tisThread,\n}: {\n\tdisableAllMessageNotifications: boolean;\n\tstatus: string;\n\tstatusConnection: string;\n\tdesktopNotifications: string | undefined;\n\thasMentionToAll: boolean;\n\thasMentionToHere: boolean;\n\tisHighlighted: boolean;\n\thasMentionToUser: boolean;\n\thasReplyToThread: boolean;\n\troomType: string;\n\tisThread: boolean;\n}): boolean {\n\tif (disableAllMessageNotifications && !desktopNotifications && !isHighlighted && !hasMentionToUser && !hasReplyToThread) {\n\t\treturn false;\n\t}\n\n\tif (statusConnection === 'offline' || status === 'busy' || desktopNotifications === 'nothing') {\n\t\treturn false;\n\t}\n\n\tif (!desktopNotifications) {\n\t\tif (settings.get('Accounts_Default_User_Preferences_desktopNotifications') === 'all' && (!isThread || hasReplyToThread)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (settings.get('Accounts_Default_User_Preferences_desktopNotifications') === 'nothing') {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn (\n\t\t(roomType === 'd' ||\n\t\t\t(!disableAllMessageNotifications && (hasMentionToAll || hasMentionToHere)) ||\n\t\t\tisHighlighted ||\n\t\t\tdesktopNotifications === 'all' ||\n\t\t\thasMentionToUser) &&\n\t\t(isHighlighted || !isThread || hasReplyToThread)\n\t);\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/notifications/desktop.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/notifications/desktop.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/notifications/desktop.ts","sourceRoot":"","sources":["app/lib/server/functions/notifications/desktop.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IMessage, IRoom, IUser, AtLeast } from '@rocket.chat/core-typings';\n\nimport { roomCoordinator } from '../../../../../server/lib/rooms/roomCoordinator';\nimport { metrics } from '../../../../metrics/server';\nimport { settings } from '../../../../settings/server';\n\n/**\n * Send notification to user\n *\n * @param {string} userId The user to notify\n * @param {object} user The sender\n * @param {object} room The room send from\n * @param {object} message The message object\n * @param {number} duration Duration of notification\n * @param {string} notificationMessage The message text to send on notification body\n */\nexport async function notifyDesktopUser({\n\tuserId,\n\tuser,\n\tmessage,\n\troom,\n\tduration,\n\tnotificationMessage,\n}: {\n\tuserId: string;\n\tuser: AtLeast<IUser, '_id' | 'name' | 'username'>;\n\tmessage: IMessage | Pick<IMessage, 'u'>;\n\troom: IRoom;\n\tduration?: number;\n\tnotificationMessage: string;\n}): Promise<void> {\n\tconst { title, text, name } = await roomCoordinator\n\t\t.getRoomDirectives(room.t)\n\t\t.getNotificationDetails(room, user, notificationMessage, userId);\n\n\tconst payload = {\n\t\ttitle: title || '',\n\t\ttext,\n\t\tduration,\n\t\tpayload: {\n\t\t\t_id: '',\n\t\t\trid: '',\n\t\t\ttmid: '',\n\t\t\t...('_id' in message && {\n\t\t\t\t// TODO: omnichannel is not sending _id, rid, tmid\n\t\t\t\t_id: message._id,\n\t\t\t\trid: message.rid,\n\t\t\t\ttmid: message.tmid,\n\t\t\t}),\n\t\t\tsender: message.u,\n\t\t\ttype: room.t,\n\t\t\tmessage: {\n\t\t\t\tmsg: 'msg' in message ? message.msg : '',\n\t\t\t\t...('t' in message && {\n\t\t\t\t\tt: message.t,\n\t\t\t\t}),\n\t\t\t},\n\t\t\tname,\n\t\t},\n\t};\n\n\tmetrics.notificationsSent.inc({ notification_type: 'desktop' });\n\n\tvoid api.broadcast('notify.desktop', userId, payload);\n}\n\nexport function shouldNotifyDesktop({\n\tdisableAllMessageNotifications,\n\tstatus,\n\tstatusConnection,\n\tdesktopNotifications,\n\thasMentionToAll,\n\thasMentionToHere,\n\tisHighlighted,\n\thasMentionToUser,\n\thasReplyToThread,\n\troomType,\n\tisThread,\n}: {\n\tdisableAllMessageNotifications: boolean;\n\tstatus: string;\n\tstatusConnection: string;\n\tdesktopNotifications: string | undefined;\n\thasMentionToAll: boolean;\n\thasMentionToHere: boolean;\n\tisHighlighted: boolean;\n\thasMentionToUser: boolean;\n\thasReplyToThread: boolean;\n\troomType: string;\n\tisThread: boolean;\n}): boolean {\n\tif (disableAllMessageNotifications && !desktopNotifications && !isHighlighted && !hasMentionToUser && !hasReplyToThread) {\n\t\treturn false;\n\t}\n\n\tif (statusConnection === 'offline' || status === 'busy' || desktopNotifications === 'nothing') {\n\t\treturn false;\n\t}\n\n\tif (!desktopNotifications) {\n\t\tif (settings.get('Accounts_Default_User_Preferences_desktopNotifications') === 'all' && (!isThread || hasReplyToThread)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (settings.get('Accounts_Default_User_Preferences_desktopNotifications') === 'nothing') {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn (\n\t\t(roomType === 'd' ||\n\t\t\t(!disableAllMessageNotifications && (hasMentionToAll || hasMentionToHere)) ||\n\t\t\tisHighlighted ||\n\t\t\tdesktopNotifications === 'all' ||\n\t\t\thasMentionToUser) &&\n\t\t(isHighlighted || !isThread || hasReplyToThread)\n\t);\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      notifyDesktopUser: () => notifyDesktopUser,\n      shouldNotifyDesktop: () => shouldNotifyDesktop\n    });\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let roomCoordinator;\n    module.link(\"../../../../../server/lib/rooms/roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 1);\n    let metrics;\n    module.link(\"../../../../metrics/server\", {\n      metrics(v) {\n        metrics = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function notifyDesktopUser(_ref) {\n      let {\n        userId,\n        user,\n        message,\n        room,\n        duration,\n        notificationMessage\n      } = _ref;\n      const {\n        title,\n        text,\n        name\n      } = await roomCoordinator.getRoomDirectives(room.t).getNotificationDetails(room, user, notificationMessage, userId);\n      const payload = {\n        title: title || '',\n        text,\n        duration,\n        payload: _objectSpread(_objectSpread({\n          _id: '',\n          rid: '',\n          tmid: ''\n        }, '_id' in message && {\n          // TODO: omnichannel is not sending _id, rid, tmid\n          _id: message._id,\n          rid: message.rid,\n          tmid: message.tmid\n        }), {}, {\n          sender: message.u,\n          type: room.t,\n          message: _objectSpread({\n            msg: 'msg' in message ? message.msg : ''\n          }, 't' in message && {\n            t: message.t\n          }),\n          name\n        })\n      };\n      metrics.notificationsSent.inc({\n        notification_type: 'desktop'\n      });\n      void api.broadcast('notify.desktop', userId, payload);\n    }\n    function shouldNotifyDesktop(_ref2) {\n      let {\n        disableAllMessageNotifications,\n        status,\n        statusConnection,\n        desktopNotifications,\n        hasMentionToAll,\n        hasMentionToHere,\n        isHighlighted,\n        hasMentionToUser,\n        hasReplyToThread,\n        roomType,\n        isThread\n      } = _ref2;\n      if (disableAllMessageNotifications && !desktopNotifications && !isHighlighted && !hasMentionToUser && !hasReplyToThread) {\n        return false;\n      }\n      if (statusConnection === 'offline' || status === 'busy' || desktopNotifications === 'nothing') {\n        return false;\n      }\n      if (!desktopNotifications) {\n        if (settings.get('Accounts_Default_User_Preferences_desktopNotifications') === 'all' && (!isThread || hasReplyToThread)) {\n          return true;\n        }\n        if (settings.get('Accounts_Default_User_Preferences_desktopNotifications') === 'nothing') {\n          return false;\n        }\n      }\n      return (roomType === 'd' || !disableAllMessageNotifications && (hasMentionToAll || hasMentionToHere) || isHighlighted || desktopNotifications === 'all' || hasMentionToUser) && (isHighlighted || !isThread || hasReplyToThread);\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","notifyDesktopUser","shouldNotifyDesktop","api","roomCoordinator","metrics","settings","__reifyWaitForDeps__","_ref","userId","user","message","room","duration","notificationMessage","title","text","name","getRoomDirectives","t","getNotificationDetails","payload","_id","rid","tmid","sender","u","type","msg","notificationsSent","inc","notification_type","broadcast","_ref2","disableAllMessageNotifications","status","statusConnection","desktopNotifications","hasMentionToAll","hasMentionToHere","isHighlighted","hasMentionToUser","hasReplyToThread","roomType","isThread","get","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/notifications/desktop.ts"],"sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IMessage, IRoom, IUser, AtLeast } from '@rocket.chat/core-typings';\n\nimport { roomCoordinator } from '../../../../../server/lib/rooms/roomCoordinator';\nimport { metrics } from '../../../../metrics/server';\nimport { settings } from '../../../../settings/server';\n\n/**\n * Send notification to user\n *\n * @param {string} userId The user to notify\n * @param {object} user The sender\n * @param {object} room The room send from\n * @param {object} message The message object\n * @param {number} duration Duration of notification\n * @param {string} notificationMessage The message text to send on notification body\n */\nexport async function notifyDesktopUser({\n\tuserId,\n\tuser,\n\tmessage,\n\troom,\n\tduration,\n\tnotificationMessage,\n}: {\n\tuserId: string;\n\tuser: AtLeast<IUser, '_id' | 'name' | 'username'>;\n\tmessage: IMessage | Pick<IMessage, 'u'>;\n\troom: IRoom;\n\tduration?: number;\n\tnotificationMessage: string;\n}): Promise<void> {\n\tconst { title, text, name } = await roomCoordinator\n\t\t.getRoomDirectives(room.t)\n\t\t.getNotificationDetails(room, user, notificationMessage, userId);\n\n\tconst payload = {\n\t\ttitle: title || '',\n\t\ttext,\n\t\tduration,\n\t\tpayload: {\n\t\t\t_id: '',\n\t\t\trid: '',\n\t\t\ttmid: '',\n\t\t\t...('_id' in message && {\n\t\t\t\t// TODO: omnichannel is not sending _id, rid, tmid\n\t\t\t\t_id: message._id,\n\t\t\t\trid: message.rid,\n\t\t\t\ttmid: message.tmid,\n\t\t\t}),\n\t\t\tsender: message.u,\n\t\t\ttype: room.t,\n\t\t\tmessage: {\n\t\t\t\tmsg: 'msg' in message ? message.msg : '',\n\t\t\t\t...('t' in message && {\n\t\t\t\t\tt: message.t,\n\t\t\t\t}),\n\t\t\t},\n\t\t\tname,\n\t\t},\n\t};\n\n\tmetrics.notificationsSent.inc({ notification_type: 'desktop' });\n\n\tvoid api.broadcast('notify.desktop', userId, payload);\n}\n\nexport function shouldNotifyDesktop({\n\tdisableAllMessageNotifications,\n\tstatus,\n\tstatusConnection,\n\tdesktopNotifications,\n\thasMentionToAll,\n\thasMentionToHere,\n\tisHighlighted,\n\thasMentionToUser,\n\thasReplyToThread,\n\troomType,\n\tisThread,\n}: {\n\tdisableAllMessageNotifications: boolean;\n\tstatus: string;\n\tstatusConnection: string;\n\tdesktopNotifications: string | undefined;\n\thasMentionToAll: boolean;\n\thasMentionToHere: boolean;\n\tisHighlighted: boolean;\n\thasMentionToUser: boolean;\n\thasReplyToThread: boolean;\n\troomType: string;\n\tisThread: boolean;\n}): boolean {\n\tif (disableAllMessageNotifications && !desktopNotifications && !isHighlighted && !hasMentionToUser && !hasReplyToThread) {\n\t\treturn false;\n\t}\n\n\tif (statusConnection === 'offline' || status === 'busy' || desktopNotifications === 'nothing') {\n\t\treturn false;\n\t}\n\n\tif (!desktopNotifications) {\n\t\tif (settings.get('Accounts_Default_User_Preferences_desktopNotifications') === 'all' && (!isThread || hasReplyToThread)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (settings.get('Accounts_Default_User_Preferences_desktopNotifications') === 'nothing') {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn (\n\t\t(roomType === 'd' ||\n\t\t\t(!disableAllMessageNotifications && (hasMentionToAll || hasMentionToHere)) ||\n\t\t\tisHighlighted ||\n\t\t\tdesktopNotifications === 'all' ||\n\t\t\thasMentionToUser) &&\n\t\t(isHighlighted || !isThread || hasReplyToThread)\n\t);\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"923a1656667577abfaade354bc95dcb37ddaae85"}
