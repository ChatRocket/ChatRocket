{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/units.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/api/units.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/units.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/units.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/units.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatUnitMonitor, IOmnichannelBusinessUnit } from '@rocket.chat/core-typings';\nimport type { PaginatedResult } from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../../app/api/server';\nimport { getPaginationItems } from '../../../../../app/api/server/helpers/getPaginationItems';\nimport { findAllDepartmentsAvailable, findAllDepartmentsByUnit } from '../lib/Department';\nimport { LivechatEnterprise } from '../lib/LivechatEnterprise';\nimport { findUnits, findUnitById, findUnitMonitors } from './lib/units';\n\ndeclare module '@rocket.chat/rest-typings' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface Endpoints {\n\t\t'/v1/livechat/units/:unitId/monitors': {\n\t\t\tGET: (params: { unitId: string }) => { monitors: ILivechatUnitMonitor[] };\n\t\t};\n\t\t'/v1/livechat/units': {\n\t\t\tGET: (params: { text: string }) => PaginatedResult & { units: IOmnichannelBusinessUnit[] };\n\t\t\tPOST: (params: { unitData: string; unitMonitors: string; unitDepartments: string }) => Omit<IOmnichannelBusinessUnit, '_updatedAt'>;\n\t\t};\n\t\t'/v1/livechat/units/:id': {\n\t\t\tGET: () => IOmnichannelBusinessUnit;\n\t\t\tPOST: (params: { unitData: string; unitMonitors: string; unitDepartments: string }) => Omit<IOmnichannelBusinessUnit, '_updatedAt'>;\n\t\t\tDELETE: () => number;\n\t\t};\n\t}\n}\n\nAPI.v1.addRoute(\n\t'livechat/units/:unitId/monitors',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-monitors'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { unitId } = this.urlParams;\n\n\t\t\tif (!unitId) {\n\t\t\t\treturn API.v1.failure('The \"unitId\" parameter is required');\n\t\t\t}\n\t\t\treturn API.v1.success({\n\t\t\t\tmonitors: await findUnitMonitors({\n\t\t\t\t\tunitId,\n\t\t\t\t}),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst params = this.queryParams;\n\t\t\tconst { offset, count } = await getPaginationItems(params);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst { text } = this.queryParams;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findUnits({\n\t\t\t\t\ttext,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t\tasync post() {\n\t\t\tconst { unitData, unitMonitors, unitDepartments } = this.bodyParams;\n\t\t\treturn API.v1.success(await LivechatEnterprise.saveUnit(null, unitData, unitMonitors, unitDepartments));\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units/:id',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { id } = this.urlParams;\n\t\t\tconst unit = await findUnitById({\n\t\t\t\tunitId: id,\n\t\t\t});\n\n\t\t\treturn API.v1.success(unit);\n\t\t},\n\t\tasync post() {\n\t\t\tconst { unitData, unitMonitors, unitDepartments } = this.bodyParams;\n\t\t\tconst { id } = this.urlParams;\n\n\t\t\treturn API.v1.success(await LivechatEnterprise.saveUnit(id, unitData, unitMonitors, unitDepartments));\n\t\t},\n\t\tasync delete() {\n\t\t\tconst { id } = this.urlParams;\n\n\t\t\treturn API.v1.success((await LivechatEnterprise.removeUnit(id)).deletedCount);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units/:unitId/departments',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { unitId } = this.urlParams;\n\n\t\t\tconst { departments, total } = await findAllDepartmentsByUnit(unitId, offset, count);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units/:unitId/departments/available',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { unitId } = this.urlParams;\n\t\t\tconst { text, onlyMyDepartments } = this.queryParams;\n\n\t\t\tconst { departments, total } = await findAllDepartmentsAvailable(\n\t\t\t\tthis.userId,\n\t\t\t\tunitId,\n\t\t\t\toffset,\n\t\t\t\tcount,\n\t\t\t\ttext,\n\t\t\t\tonlyMyDepartments === 'true',\n\t\t\t);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/units.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/api/units.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/units.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/units.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatUnitMonitor, IOmnichannelBusinessUnit } from '@rocket.chat/core-typings';\nimport type { PaginatedResult } from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../../app/api/server';\nimport { getPaginationItems } from '../../../../../app/api/server/helpers/getPaginationItems';\nimport { findAllDepartmentsAvailable, findAllDepartmentsByUnit } from '../lib/Department';\nimport { LivechatEnterprise } from '../lib/LivechatEnterprise';\nimport { findUnits, findUnitById, findUnitMonitors } from './lib/units';\n\ndeclare module '@rocket.chat/rest-typings' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface Endpoints {\n\t\t'/v1/livechat/units/:unitId/monitors': {\n\t\t\tGET: (params: { unitId: string }) => { monitors: ILivechatUnitMonitor[] };\n\t\t};\n\t\t'/v1/livechat/units': {\n\t\t\tGET: (params: { text: string }) => PaginatedResult & { units: IOmnichannelBusinessUnit[] };\n\t\t\tPOST: (params: { unitData: string; unitMonitors: string; unitDepartments: string }) => Omit<IOmnichannelBusinessUnit, '_updatedAt'>;\n\t\t};\n\t\t'/v1/livechat/units/:id': {\n\t\t\tGET: () => IOmnichannelBusinessUnit;\n\t\t\tPOST: (params: { unitData: string; unitMonitors: string; unitDepartments: string }) => Omit<IOmnichannelBusinessUnit, '_updatedAt'>;\n\t\t\tDELETE: () => number;\n\t\t};\n\t}\n}\n\nAPI.v1.addRoute(\n\t'livechat/units/:unitId/monitors',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-monitors'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { unitId } = this.urlParams;\n\n\t\t\tif (!unitId) {\n\t\t\t\treturn API.v1.failure('The \"unitId\" parameter is required');\n\t\t\t}\n\t\t\treturn API.v1.success({\n\t\t\t\tmonitors: await findUnitMonitors({\n\t\t\t\t\tunitId,\n\t\t\t\t}),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst params = this.queryParams;\n\t\t\tconst { offset, count } = await getPaginationItems(params);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst { text } = this.queryParams;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findUnits({\n\t\t\t\t\ttext,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t\tasync post() {\n\t\t\tconst { unitData, unitMonitors, unitDepartments } = this.bodyParams;\n\t\t\treturn API.v1.success(await LivechatEnterprise.saveUnit(null, unitData, unitMonitors, unitDepartments));\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units/:id',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { id } = this.urlParams;\n\t\t\tconst unit = await findUnitById({\n\t\t\t\tunitId: id,\n\t\t\t});\n\n\t\t\treturn API.v1.success(unit);\n\t\t},\n\t\tasync post() {\n\t\t\tconst { unitData, unitMonitors, unitDepartments } = this.bodyParams;\n\t\t\tconst { id } = this.urlParams;\n\n\t\t\treturn API.v1.success(await LivechatEnterprise.saveUnit(id, unitData, unitMonitors, unitDepartments));\n\t\t},\n\t\tasync delete() {\n\t\t\tconst { id } = this.urlParams;\n\n\t\t\treturn API.v1.success((await LivechatEnterprise.removeUnit(id)).deletedCount);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units/:unitId/departments',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { unitId } = this.urlParams;\n\n\t\t\tconst { departments, total } = await findAllDepartmentsByUnit(unitId, offset, count);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units/:unitId/departments/available',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { unitId } = this.urlParams;\n\t\t\tconst { text, onlyMyDepartments } = this.queryParams;\n\n\t\t\tconst { departments, total } = await findAllDepartmentsAvailable(\n\t\t\t\tthis.userId,\n\t\t\t\tunitId,\n\t\t\t\toffset,\n\t\t\t\tcount,\n\t\t\t\ttext,\n\t\t\t\tonlyMyDepartments === 'true',\n\t\t\t);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let API;\n    module.link(\"../../../../../app/api/server\", {\n      API(v) {\n        API = v;\n      }\n    }, 0);\n    let getPaginationItems;\n    module.link(\"../../../../../app/api/server/helpers/getPaginationItems\", {\n      getPaginationItems(v) {\n        getPaginationItems = v;\n      }\n    }, 1);\n    let findAllDepartmentsAvailable, findAllDepartmentsByUnit;\n    module.link(\"../lib/Department\", {\n      findAllDepartmentsAvailable(v) {\n        findAllDepartmentsAvailable = v;\n      },\n      findAllDepartmentsByUnit(v) {\n        findAllDepartmentsByUnit = v;\n      }\n    }, 2);\n    let LivechatEnterprise;\n    module.link(\"../lib/LivechatEnterprise\", {\n      LivechatEnterprise(v) {\n        LivechatEnterprise = v;\n      }\n    }, 3);\n    let findUnits, findUnitById, findUnitMonitors;\n    module.link(\"./lib/units\", {\n      findUnits(v) {\n        findUnits = v;\n      },\n      findUnitById(v) {\n        findUnitById = v;\n      },\n      findUnitMonitors(v) {\n        findUnitMonitors = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('livechat/units/:unitId/monitors', {\n      authRequired: true,\n      permissionsRequired: ['manage-livechat-monitors']\n    }, {\n      async get() {\n        const {\n          unitId\n        } = this.urlParams;\n        if (!unitId) {\n          return API.v1.failure('The \"unitId\" parameter is required');\n        }\n        return API.v1.success({\n          monitors: await findUnitMonitors({\n            unitId\n          })\n        });\n      }\n    });\n    API.v1.addRoute('livechat/units', {\n      authRequired: true,\n      permissionsRequired: ['manage-livechat-units']\n    }, {\n      async get() {\n        const params = this.queryParams;\n        const {\n          offset,\n          count\n        } = await getPaginationItems(params);\n        const {\n          sort\n        } = await this.parseJsonQuery();\n        const {\n          text\n        } = this.queryParams;\n        return API.v1.success(await findUnits({\n          text,\n          pagination: {\n            offset,\n            count,\n            sort\n          }\n        }));\n      },\n      async post() {\n        const {\n          unitData,\n          unitMonitors,\n          unitDepartments\n        } = this.bodyParams;\n        return API.v1.success(await LivechatEnterprise.saveUnit(null, unitData, unitMonitors, unitDepartments));\n      }\n    });\n    API.v1.addRoute('livechat/units/:id', {\n      authRequired: true,\n      permissionsRequired: ['manage-livechat-units']\n    }, {\n      async get() {\n        const {\n          id\n        } = this.urlParams;\n        const unit = await findUnitById({\n          unitId: id\n        });\n        return API.v1.success(unit);\n      },\n      async post() {\n        const {\n          unitData,\n          unitMonitors,\n          unitDepartments\n        } = this.bodyParams;\n        const {\n          id\n        } = this.urlParams;\n        return API.v1.success(await LivechatEnterprise.saveUnit(id, unitData, unitMonitors, unitDepartments));\n      },\n      async delete() {\n        const {\n          id\n        } = this.urlParams;\n        return API.v1.success((await LivechatEnterprise.removeUnit(id)).deletedCount);\n      }\n    });\n    API.v1.addRoute('livechat/units/:unitId/departments', {\n      authRequired: true,\n      permissionsRequired: ['manage-livechat-units']\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          unitId\n        } = this.urlParams;\n        const {\n          departments,\n          total\n        } = await findAllDepartmentsByUnit(unitId, offset, count);\n        return API.v1.success({\n          departments,\n          count: departments.length,\n          offset,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('livechat/units/:unitId/departments/available', {\n      authRequired: true,\n      permissionsRequired: ['manage-livechat-units']\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          unitId\n        } = this.urlParams;\n        const {\n          text,\n          onlyMyDepartments\n        } = this.queryParams;\n        const {\n          departments,\n          total\n        } = await findAllDepartmentsAvailable(this.userId, unitId, offset, count, text, onlyMyDepartments === 'true');\n        return API.v1.success({\n          departments,\n          count: departments.length,\n          offset,\n          total\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["API","module","link","v","getPaginationItems","findAllDepartmentsAvailable","findAllDepartmentsByUnit","LivechatEnterprise","findUnits","findUnitById","findUnitMonitors","__reifyWaitForDeps__","v1","addRoute","authRequired","permissionsRequired","get","unitId","urlParams","failure","success","monitors","params","queryParams","offset","count","sort","parseJsonQuery","text","pagination","post","unitData","unitMonitors","unitDepartments","bodyParams","saveUnit","id","unit","delete","removeUnit","deletedCount","departments","total","length","onlyMyDepartments","userId","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/livechat-enterprise/server/api/units.ts"],"sourcesContent":["import type { ILivechatUnitMonitor, IOmnichannelBusinessUnit } from '@rocket.chat/core-typings';\nimport type { PaginatedResult } from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../../app/api/server';\nimport { getPaginationItems } from '../../../../../app/api/server/helpers/getPaginationItems';\nimport { findAllDepartmentsAvailable, findAllDepartmentsByUnit } from '../lib/Department';\nimport { LivechatEnterprise } from '../lib/LivechatEnterprise';\nimport { findUnits, findUnitById, findUnitMonitors } from './lib/units';\n\ndeclare module '@rocket.chat/rest-typings' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface Endpoints {\n\t\t'/v1/livechat/units/:unitId/monitors': {\n\t\t\tGET: (params: { unitId: string }) => { monitors: ILivechatUnitMonitor[] };\n\t\t};\n\t\t'/v1/livechat/units': {\n\t\t\tGET: (params: { text: string }) => PaginatedResult & { units: IOmnichannelBusinessUnit[] };\n\t\t\tPOST: (params: { unitData: string; unitMonitors: string; unitDepartments: string }) => Omit<IOmnichannelBusinessUnit, '_updatedAt'>;\n\t\t};\n\t\t'/v1/livechat/units/:id': {\n\t\t\tGET: () => IOmnichannelBusinessUnit;\n\t\t\tPOST: (params: { unitData: string; unitMonitors: string; unitDepartments: string }) => Omit<IOmnichannelBusinessUnit, '_updatedAt'>;\n\t\t\tDELETE: () => number;\n\t\t};\n\t}\n}\n\nAPI.v1.addRoute(\n\t'livechat/units/:unitId/monitors',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-monitors'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { unitId } = this.urlParams;\n\n\t\t\tif (!unitId) {\n\t\t\t\treturn API.v1.failure('The \"unitId\" parameter is required');\n\t\t\t}\n\t\t\treturn API.v1.success({\n\t\t\t\tmonitors: await findUnitMonitors({\n\t\t\t\t\tunitId,\n\t\t\t\t}),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst params = this.queryParams;\n\t\t\tconst { offset, count } = await getPaginationItems(params);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst { text } = this.queryParams;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findUnits({\n\t\t\t\t\ttext,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t\tasync post() {\n\t\t\tconst { unitData, unitMonitors, unitDepartments } = this.bodyParams;\n\t\t\treturn API.v1.success(await LivechatEnterprise.saveUnit(null, unitData, unitMonitors, unitDepartments));\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units/:id',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { id } = this.urlParams;\n\t\t\tconst unit = await findUnitById({\n\t\t\t\tunitId: id,\n\t\t\t});\n\n\t\t\treturn API.v1.success(unit);\n\t\t},\n\t\tasync post() {\n\t\t\tconst { unitData, unitMonitors, unitDepartments } = this.bodyParams;\n\t\t\tconst { id } = this.urlParams;\n\n\t\t\treturn API.v1.success(await LivechatEnterprise.saveUnit(id, unitData, unitMonitors, unitDepartments));\n\t\t},\n\t\tasync delete() {\n\t\t\tconst { id } = this.urlParams;\n\n\t\t\treturn API.v1.success((await LivechatEnterprise.removeUnit(id)).deletedCount);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units/:unitId/departments',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { unitId } = this.urlParams;\n\n\t\t\tconst { departments, total } = await findAllDepartmentsByUnit(unitId, offset, count);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units/:unitId/departments/available',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { unitId } = this.urlParams;\n\t\t\tconst { text, onlyMyDepartments } = this.queryParams;\n\n\t\t\tconst { departments, total } = await findAllDepartmentsAvailable(\n\t\t\t\tthis.userId,\n\t\t\t\tunitId,\n\t\t\t\toffset,\n\t\t\t\tcount,\n\t\t\t\ttext,\n\t\t\t\tonlyMyDepartments === 'true',\n\t\t\t);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n"],"mappings":";;;IAGA,IAAAA,GAAO;IAAAC,MAAO,CAAAC,IAAA,CAAM,+BAA+B,EAAC;MAAAF,IAAAG,CAAA;QAAAH,GAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,kBAAA;IAAAH,MAAA,CAAAC,IAAA;MAAAE,mBAAAD,CAAA;QAAAC,kBAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,2BAAA,EAAAC,wBAAA;IAAAL,MAAA,CAAAC,IAAA;MAAAG,4BAAAF,CAAA;QAAAE,2BAAA,GAAAF,CAAA;MAAA;MAAAG,yBAAAH,CAAA;QAAAG,wBAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,kBAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,mBAAAJ,CAAA;QAAAI,kBAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,SAAA,EAAAC,YAAA,EAAAC,gBAAA;IAAAT,MAAA,CAAAC,IAAA;MAAAM,UAAAL,CAAA;QAAAK,SAAA,GAAAL,CAAA;MAAA;MAAAM,aAAAN,CAAA;QAAAM,YAAA,GAAAN,CAAA;MAAA;MAAAO,iBAAAP,CAAA;QAAAO,gBAAA,GAAAP,CAAA;MAAA;IAAA;IAAA,IAAAQ,oBAAA,WAAAA,oBAAA;IAwBpDX,GAAG,CAACY,EAAE,CAACC,QAAQ,CACd,iCAAiC,EACjC;MAAEC,YAAY,EAAE,IAAI;MAAEC,mBAAmB,EAAE,CAAC,0BAA0B;IAAC,CAAE,EACzE;MACC,MAAMC,GAAGA,CAAA;QACR,MAAM;UAAEC;QAAM,CAAE,GAAG,IAAI,CAACC,SAAS;QAEjC,IAAI,CAACD,MAAM,EAAE;UACZ,OAAOjB,GAAG,CAACY,EAAE,CAACO,OAAO,CAAC,oCAAoC,CAAC;QAC5D;QACA,OAAOnB,GAAG,CAACY,EAAE,CAACQ,OAAO,CAAC;UACrBC,QAAQ,EAAE,MAAMX,gBAAgB,CAAC;YAChCO;WACA;SACD,CAAC;MACH;KACA,CACD;IAEDjB,GAAG,CAACY,EAAE,CAACC,QAAQ,CACd,gBAAgB,EAChB;MAAEC,YAAY,EAAE,IAAI;MAAEC,mBAAmB,EAAE,CAAC,uBAAuB;IAAC,CAAE,EACtE;MACC,MAAMC,GAAGA,CAAA;QACR,MAAMM,MAAM,GAAG,IAAI,CAACC,WAAW;QAC/B,MAAM;UAAEC,MAAM;UAAEC;QAAK,CAAE,GAAG,MAAMrB,kBAAkB,CAACkB,MAAM,CAAC;QAC1D,MAAM;UAAEI;QAAI,CAAE,GAAG,MAAM,IAAI,CAACC,cAAc,EAAE;QAC5C,MAAM;UAAEC;QAAI,CAAE,GAAG,IAAI,CAACL,WAAW;QAEjC,OAAOvB,GAAG,CAACY,EAAE,CAACQ,OAAO,CACpB,MAAMZ,SAAS,CAAC;UACfoB,IAAI;UACJC,UAAU,EAAE;YACXL,MAAM;YACNC,KAAK;YACLC;;SAED,CAAC,CACF;MACF,CAAC;MACD,MAAMI,IAAIA,CAAA;QACT,MAAM;UAAEC,QAAQ;UAAEC,YAAY;UAAEC;QAAe,CAAE,GAAG,IAAI,CAACC,UAAU;QACnE,OAAOlC,GAAG,CAACY,EAAE,CAACQ,OAAO,CAAC,MAAMb,kBAAkB,CAAC4B,QAAQ,CAAC,IAAI,EAAEJ,QAAQ,EAAEC,YAAY,EAAEC,eAAe,CAAC,CAAC;MACxG;KACA,CACD;IAEDjC,GAAG,CAACY,EAAE,CAACC,QAAQ,CACd,oBAAoB,EACpB;MAAEC,YAAY,EAAE,IAAI;MAAEC,mBAAmB,EAAE,CAAC,uBAAuB;IAAC,CAAE,EACtE;MACC,MAAMC,GAAGA,CAAA;QACR,MAAM;UAAEoB;QAAE,CAAE,GAAG,IAAI,CAAClB,SAAS;QAC7B,MAAMmB,IAAI,GAAG,MAAM5B,YAAY,CAAC;UAC/BQ,MAAM,EAAEmB;SACR,CAAC;QAEF,OAAOpC,GAAG,CAACY,EAAE,CAACQ,OAAO,CAACiB,IAAI,CAAC;MAC5B,CAAC;MACD,MAAMP,IAAIA,CAAA;QACT,MAAM;UAAEC,QAAQ;UAAEC,YAAY;UAAEC;QAAe,CAAE,GAAG,IAAI,CAACC,UAAU;QACnE,MAAM;UAAEE;QAAE,CAAE,GAAG,IAAI,CAAClB,SAAS;QAE7B,OAAOlB,GAAG,CAACY,EAAE,CAACQ,OAAO,CAAC,MAAMb,kBAAkB,CAAC4B,QAAQ,CAACC,EAAE,EAAEL,QAAQ,EAAEC,YAAY,EAAEC,eAAe,CAAC,CAAC;MACtG,CAAC;MACD,MAAMK,MAAMA,CAAA;QACX,MAAM;UAAEF;QAAE,CAAE,GAAG,IAAI,CAAClB,SAAS;QAE7B,OAAOlB,GAAG,CAACY,EAAE,CAACQ,OAAO,CAAC,CAAC,MAAMb,kBAAkB,CAACgC,UAAU,CAACH,EAAE,CAAC,EAAEI,YAAY,CAAC;MAC9E;KACA,CACD;IAEDxC,GAAG,CAACY,EAAE,CAACC,QAAQ,CACd,oCAAoC,EACpC;MAAEC,YAAY,EAAE,IAAI;MAAEC,mBAAmB,EAAE,CAAC,uBAAuB;IAAC,CAAE,EACtE;MACC,MAAMC,GAAGA,CAAA;QACR,MAAM;UAAEQ,MAAM;UAAEC;QAAK,CAAE,GAAG,MAAMrB,kBAAkB,CAAC,IAAI,CAACmB,WAAW,CAAC;QACpE,MAAM;UAAEN;QAAM,CAAE,GAAG,IAAI,CAACC,SAAS;QAEjC,MAAM;UAAEuB,WAAW;UAAEC;QAAK,CAAE,GAAG,MAAMpC,wBAAwB,CAACW,MAAM,EAAEO,MAAM,EAAEC,KAAK,CAAC;QAEpF,OAAOzB,GAAG,CAACY,EAAE,CAACQ,OAAO,CAAC;UACrBqB,WAAW;UACXhB,KAAK,EAAEgB,WAAW,CAACE,MAAM;UACzBnB,MAAM;UACNkB;SACA,CAAC;MACH;KACA,CACD;IAED1C,GAAG,CAACY,EAAE,CAACC,QAAQ,CACd,8CAA8C,EAC9C;MAAEC,YAAY,EAAE,IAAI;MAAEC,mBAAmB,EAAE,CAAC,uBAAuB;IAAC,CAAE,EACtE;MACC,MAAMC,GAAGA,CAAA;QACR,MAAM;UAAEQ,MAAM;UAAEC;QAAK,CAAE,GAAG,MAAMrB,kBAAkB,CAAC,IAAI,CAACmB,WAAW,CAAC;QACpE,MAAM;UAAEN;QAAM,CAAE,GAAG,IAAI,CAACC,SAAS;QACjC,MAAM;UAAEU,IAAI;UAAEgB;QAAiB,CAAE,GAAG,IAAI,CAACrB,WAAW;QAEpD,MAAM;UAAEkB,WAAW;UAAEC;QAAK,CAAE,GAAG,MAAMrC,2BAA2B,CAC/D,IAAI,CAACwC,MAAM,EACX5B,MAAM,EACNO,MAAM,EACNC,KAAK,EACLG,IAAI,EACJgB,iBAAiB,KAAK,MAAM,CAC5B;QAED,OAAO5C,GAAG,CAACY,EAAE,CAACQ,OAAO,CAAC;UACrBqB,WAAW;UACXhB,KAAK,EAAEgB,WAAW,CAACE,MAAM;UACzBnB,MAAM;UACNkB;SACA,CAAC;MACH;KACA,CACD;IAACI,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"190961120be0ced4b40d47b3825262bc34292c92"}
