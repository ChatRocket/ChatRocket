{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/omnichannel/reports/hooks/useStatusSection.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/omnichannel/reports/hooks/useStatusSection.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/omnichannel/reports/hooks/useStatusSection.tsx","inputSourceMap":{"version":3,"file":"client/omnichannel/reports/hooks/useStatusSection.tsx","sourceRoot":"","sources":["client/omnichannel/reports/hooks/useStatusSection.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { TranslationContextValue, TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useMemo } from 'react';\n\nimport { getPeriodRange } from '../../../components/dashboards/periods';\nimport { usePeriodSelectorStorage } from '../../../components/dashboards/usePeriodSelectorStorage';\nimport { COLORS, PERIOD_OPTIONS } from '../components/constants';\nimport { formatPeriodDescription } from '../utils/formatPeriodDescription';\nimport { round } from '../utils/round';\nimport { useDefaultDownload } from './useDefaultDownload';\n\nconst STATUSES: Record<string, { label: TranslationKey; color: string }> = {\n\tOpen: { label: 'Omnichannel_Reports_Status_Open', color: COLORS.success },\n\tQueued: { label: 'Queued', color: COLORS.warning2 },\n\tOn_Hold: { label: 'On_Hold', color: COLORS.warning },\n\tClosed: { label: 'Omnichannel_Reports_Status_Closed', color: COLORS.danger },\n};\n\nconst formatChartData = (data: { label: string; value: number }[] | undefined = [], total = 0, t: TranslationContextValue['translate']) => {\n\treturn data.map((item) => {\n\t\tconst status = STATUSES[item.label];\n\t\tconst percentage = total > 0 ? round((item.value / total) * 100) : 0;\n\t\tconst label = t(status.label);\n\t\treturn {\n\t\t\t...item,\n\t\t\tid: item.label,\n\t\t\tlabel: `${label} ${item.value} (${percentage}%)`,\n\t\t\trawLabel: label,\n\t\t\tcolor: status.color,\n\t\t};\n\t});\n};\n\nexport const useStatusSection = () => {\n\tconst t = useTranslation();\n\tconst [period, periodSelectorProps] = usePeriodSelectorStorage('reports-status-period', PERIOD_OPTIONS);\n\tconst getConversationsByStatus = useEndpoint('GET', '/v1/livechat/analytics/dashboards/conversations-by-status');\n\tconst { start, end } = getPeriodRange(period);\n\n\tconst {\n\t\tdata: { data, total } = { data: [], total: 0 },\n\t\tisLoading,\n\t\tisError,\n\t\tisSuccess,\n\t\trefetch,\n\t} = useQuery(\n\t\t['omnichannel-reports', 'conversations-by-status', period, t],\n\t\tasync () => {\n\t\t\tconst response = await getConversationsByStatus({ start: start.toISOString(), end: end.toISOString() });\n\n\t\t\treturn { ...response, data: formatChartData(response.data, response.total, t) };\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 5 * 60 * 1000,\n\t\t},\n\t);\n\n\tconst title = t('Conversations_by_status');\n\tconst subtitle = t('__count__conversations__period__', {\n\t\tcount: total ?? 0,\n\t\tperiod: formatPeriodDescription(period, t),\n\t});\n\tconst emptyStateSubtitle = t('Omnichannel_Reports_Status_Empty_Subtitle');\n\n\tconst downloadProps = useDefaultDownload({ columnName: t('Status'), title, data, period });\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: 'conversations-by-status',\n\t\t\ttitle,\n\t\t\tsubtitle,\n\t\t\temptyStateSubtitle,\n\t\t\tdata,\n\t\t\ttotal,\n\t\t\tperiod,\n\t\t\tperiodSelectorProps,\n\t\t\tdownloadProps,\n\t\t\tisLoading,\n\t\t\tisError,\n\t\t\tisDataFound: isSuccess && data.length > 0,\n\t\t\tonRetry: refetch,\n\t\t}),\n\t\t[title, subtitle, emptyStateSubtitle, data, total, period, periodSelectorProps, downloadProps, isLoading, isError, isSuccess, refetch],\n\t);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/omnichannel/reports/hooks/useStatusSection.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/omnichannel/reports/hooks/useStatusSection.tsx","inputSourceMap":{"version":3,"file":"client/omnichannel/reports/hooks/useStatusSection.tsx","sourceRoot":"","sources":["client/omnichannel/reports/hooks/useStatusSection.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { TranslationContextValue, TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useMemo } from 'react';\n\nimport { getPeriodRange } from '../../../components/dashboards/periods';\nimport { usePeriodSelectorStorage } from '../../../components/dashboards/usePeriodSelectorStorage';\nimport { COLORS, PERIOD_OPTIONS } from '../components/constants';\nimport { formatPeriodDescription } from '../utils/formatPeriodDescription';\nimport { round } from '../utils/round';\nimport { useDefaultDownload } from './useDefaultDownload';\n\nconst STATUSES: Record<string, { label: TranslationKey; color: string }> = {\n\tOpen: { label: 'Omnichannel_Reports_Status_Open', color: COLORS.success },\n\tQueued: { label: 'Queued', color: COLORS.warning2 },\n\tOn_Hold: { label: 'On_Hold', color: COLORS.warning },\n\tClosed: { label: 'Omnichannel_Reports_Status_Closed', color: COLORS.danger },\n};\n\nconst formatChartData = (data: { label: string; value: number }[] | undefined = [], total = 0, t: TranslationContextValue['translate']) => {\n\treturn data.map((item) => {\n\t\tconst status = STATUSES[item.label];\n\t\tconst percentage = total > 0 ? round((item.value / total) * 100) : 0;\n\t\tconst label = t(status.label);\n\t\treturn {\n\t\t\t...item,\n\t\t\tid: item.label,\n\t\t\tlabel: `${label} ${item.value} (${percentage}%)`,\n\t\t\trawLabel: label,\n\t\t\tcolor: status.color,\n\t\t};\n\t});\n};\n\nexport const useStatusSection = () => {\n\tconst t = useTranslation();\n\tconst [period, periodSelectorProps] = usePeriodSelectorStorage('reports-status-period', PERIOD_OPTIONS);\n\tconst getConversationsByStatus = useEndpoint('GET', '/v1/livechat/analytics/dashboards/conversations-by-status');\n\tconst { start, end } = getPeriodRange(period);\n\n\tconst {\n\t\tdata: { data, total } = { data: [], total: 0 },\n\t\tisLoading,\n\t\tisError,\n\t\tisSuccess,\n\t\trefetch,\n\t} = useQuery(\n\t\t['omnichannel-reports', 'conversations-by-status', period, t],\n\t\tasync () => {\n\t\t\tconst response = await getConversationsByStatus({ start: start.toISOString(), end: end.toISOString() });\n\n\t\t\treturn { ...response, data: formatChartData(response.data, response.total, t) };\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 5 * 60 * 1000,\n\t\t},\n\t);\n\n\tconst title = t('Conversations_by_status');\n\tconst subtitle = t('__count__conversations__period__', {\n\t\tcount: total ?? 0,\n\t\tperiod: formatPeriodDescription(period, t),\n\t});\n\tconst emptyStateSubtitle = t('Omnichannel_Reports_Status_Empty_Subtitle');\n\n\tconst downloadProps = useDefaultDownload({ columnName: t('Status'), title, data, period });\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: 'conversations-by-status',\n\t\t\ttitle,\n\t\t\tsubtitle,\n\t\t\temptyStateSubtitle,\n\t\t\tdata,\n\t\t\ttotal,\n\t\t\tperiod,\n\t\t\tperiodSelectorProps,\n\t\t\tdownloadProps,\n\t\t\tisLoading,\n\t\t\tisError,\n\t\t\tisDataFound: isSuccess && data.length > 0,\n\t\t\tonRetry: refetch,\n\t\t}),\n\t\t[title, subtitle, emptyStateSubtitle, data, total, period, periodSelectorProps, downloadProps, isLoading, isError, isSuccess, refetch],\n\t);\n};\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  useStatusSection: () => useStatusSection\n});\nlet useEndpoint, useTranslation;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  },\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 0);\nlet useQuery;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery(v) {\n    useQuery = v;\n  }\n}, 1);\nlet useMemo;\nmodule.link(\"react\", {\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 2);\nlet getPeriodRange;\nmodule.link(\"../../../components/dashboards/periods\", {\n  getPeriodRange(v) {\n    getPeriodRange = v;\n  }\n}, 3);\nlet usePeriodSelectorStorage;\nmodule.link(\"../../../components/dashboards/usePeriodSelectorStorage\", {\n  usePeriodSelectorStorage(v) {\n    usePeriodSelectorStorage = v;\n  }\n}, 4);\nlet COLORS, PERIOD_OPTIONS;\nmodule.link(\"../components/constants\", {\n  COLORS(v) {\n    COLORS = v;\n  },\n  PERIOD_OPTIONS(v) {\n    PERIOD_OPTIONS = v;\n  }\n}, 5);\nlet formatPeriodDescription;\nmodule.link(\"../utils/formatPeriodDescription\", {\n  formatPeriodDescription(v) {\n    formatPeriodDescription = v;\n  }\n}, 6);\nlet round;\nmodule.link(\"../utils/round\", {\n  round(v) {\n    round = v;\n  }\n}, 7);\nlet useDefaultDownload;\nmodule.link(\"./useDefaultDownload\", {\n  useDefaultDownload(v) {\n    useDefaultDownload = v;\n  }\n}, 8);\nconst STATUSES = {\n  Open: {\n    label: 'Omnichannel_Reports_Status_Open',\n    color: COLORS.success\n  },\n  Queued: {\n    label: 'Queued',\n    color: COLORS.warning2\n  },\n  On_Hold: {\n    label: 'On_Hold',\n    color: COLORS.warning\n  },\n  Closed: {\n    label: 'Omnichannel_Reports_Status_Closed',\n    color: COLORS.danger\n  }\n};\nconst formatChartData = function () {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let total = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let t = arguments.length > 2 ? arguments[2] : undefined;\n  return data.map(item => {\n    const status = STATUSES[item.label];\n    const percentage = total > 0 ? round(item.value / total * 100) : 0;\n    const label = t(status.label);\n    return _objectSpread(_objectSpread({}, item), {}, {\n      id: item.label,\n      label: \"\".concat(label, \" \").concat(item.value, \" (\").concat(percentage, \"%)\"),\n      rawLabel: label,\n      color: status.color\n    });\n  });\n};\nconst useStatusSection = () => {\n  const t = useTranslation();\n  const [period, periodSelectorProps] = usePeriodSelectorStorage('reports-status-period', PERIOD_OPTIONS);\n  const getConversationsByStatus = useEndpoint('GET', '/v1/livechat/analytics/dashboards/conversations-by-status');\n  const {\n    start,\n    end\n  } = getPeriodRange(period);\n  const {\n    data: {\n      data,\n      total\n    } = {\n      data: [],\n      total: 0\n    },\n    isLoading,\n    isError,\n    isSuccess,\n    refetch\n  } = useQuery(['omnichannel-reports', 'conversations-by-status', period, t], async () => {\n    const response = await getConversationsByStatus({\n      start: start.toISOString(),\n      end: end.toISOString()\n    });\n    return _objectSpread(_objectSpread({}, response), {}, {\n      data: formatChartData(response.data, response.total, t)\n    });\n  }, {\n    refetchInterval: 5 * 60 * 1000\n  });\n  const title = t('Conversations_by_status');\n  const subtitle = t('__count__conversations__period__', {\n    count: total !== null && total !== void 0 ? total : 0,\n    period: formatPeriodDescription(period, t)\n  });\n  const emptyStateSubtitle = t('Omnichannel_Reports_Status_Empty_Subtitle');\n  const downloadProps = useDefaultDownload({\n    columnName: t('Status'),\n    title,\n    data,\n    period\n  });\n  return useMemo(() => ({\n    id: 'conversations-by-status',\n    title,\n    subtitle,\n    emptyStateSubtitle,\n    data,\n    total,\n    period,\n    periodSelectorProps,\n    downloadProps,\n    isLoading,\n    isError,\n    isDataFound: isSuccess && data.length > 0,\n    onRetry: refetch\n  }), [title, subtitle, emptyStateSubtitle, data, total, period, periodSelectorProps, downloadProps, isLoading, isError, isSuccess, refetch]);\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","useStatusSection","useEndpoint","useTranslation","useQuery","useMemo","getPeriodRange","usePeriodSelectorStorage","COLORS","PERIOD_OPTIONS","formatPeriodDescription","round","useDefaultDownload","STATUSES","Open","label","color","success","Queued","warning2","On_Hold","warning","Closed","danger","formatChartData","data","arguments","length","undefined","total","t","map","item","status","percentage","value","id","concat","rawLabel","period","periodSelectorProps","getConversationsByStatus","start","end","isLoading","isError","isSuccess","refetch","response","toISOString","refetchInterval","title","subtitle","count","emptyStateSubtitle","downloadProps","columnName","isDataFound","onRetry"],"sources":["client/omnichannel/reports/hooks/useStatusSection.tsx"],"sourcesContent":["import type { TranslationContextValue, TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useMemo } from 'react';\n\nimport { getPeriodRange } from '../../../components/dashboards/periods';\nimport { usePeriodSelectorStorage } from '../../../components/dashboards/usePeriodSelectorStorage';\nimport { COLORS, PERIOD_OPTIONS } from '../components/constants';\nimport { formatPeriodDescription } from '../utils/formatPeriodDescription';\nimport { round } from '../utils/round';\nimport { useDefaultDownload } from './useDefaultDownload';\n\nconst STATUSES: Record<string, { label: TranslationKey; color: string }> = {\n\tOpen: { label: 'Omnichannel_Reports_Status_Open', color: COLORS.success },\n\tQueued: { label: 'Queued', color: COLORS.warning2 },\n\tOn_Hold: { label: 'On_Hold', color: COLORS.warning },\n\tClosed: { label: 'Omnichannel_Reports_Status_Closed', color: COLORS.danger },\n};\n\nconst formatChartData = (data: { label: string; value: number }[] | undefined = [], total = 0, t: TranslationContextValue['translate']) => {\n\treturn data.map((item) => {\n\t\tconst status = STATUSES[item.label];\n\t\tconst percentage = total > 0 ? round((item.value / total) * 100) : 0;\n\t\tconst label = t(status.label);\n\t\treturn {\n\t\t\t...item,\n\t\t\tid: item.label,\n\t\t\tlabel: `${label} ${item.value} (${percentage}%)`,\n\t\t\trawLabel: label,\n\t\t\tcolor: status.color,\n\t\t};\n\t});\n};\n\nexport const useStatusSection = () => {\n\tconst t = useTranslation();\n\tconst [period, periodSelectorProps] = usePeriodSelectorStorage('reports-status-period', PERIOD_OPTIONS);\n\tconst getConversationsByStatus = useEndpoint('GET', '/v1/livechat/analytics/dashboards/conversations-by-status');\n\tconst { start, end } = getPeriodRange(period);\n\n\tconst {\n\t\tdata: { data, total } = { data: [], total: 0 },\n\t\tisLoading,\n\t\tisError,\n\t\tisSuccess,\n\t\trefetch,\n\t} = useQuery(\n\t\t['omnichannel-reports', 'conversations-by-status', period, t],\n\t\tasync () => {\n\t\t\tconst response = await getConversationsByStatus({ start: start.toISOString(), end: end.toISOString() });\n\n\t\t\treturn { ...response, data: formatChartData(response.data, response.total, t) };\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 5 * 60 * 1000,\n\t\t},\n\t);\n\n\tconst title = t('Conversations_by_status');\n\tconst subtitle = t('__count__conversations__period__', {\n\t\tcount: total ?? 0,\n\t\tperiod: formatPeriodDescription(period, t),\n\t});\n\tconst emptyStateSubtitle = t('Omnichannel_Reports_Status_Empty_Subtitle');\n\n\tconst downloadProps = useDefaultDownload({ columnName: t('Status'), title, data, period });\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: 'conversations-by-status',\n\t\t\ttitle,\n\t\t\tsubtitle,\n\t\t\temptyStateSubtitle,\n\t\t\tdata,\n\t\t\ttotal,\n\t\t\tperiod,\n\t\t\tperiodSelectorProps,\n\t\t\tdownloadProps,\n\t\t\tisLoading,\n\t\t\tisError,\n\t\t\tisDataFound: isSuccess && data.length > 0,\n\t\t\tonRetry: refetch,\n\t\t}),\n\t\t[title, subtitle, emptyStateSubtitle, data, total, period, periodSelectorProps, downloadProps, isLoading, isError, isSuccess, refetch],\n\t);\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a626df5ef08a61d0241402e14981e82f077e6f61"}
