{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/cloud/CloudAnnouncementsRegion.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/cloud/CloudAnnouncementsRegion.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/cloud/CloudAnnouncementsRegion.tsx","inputSourceMap":{"version":3,"file":"client/views/cloud/CloudAnnouncementsRegion.tsx","sourceRoot":"","sources":["client/views/cloud/CloudAnnouncementsRegion.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAC3D,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AAC7E,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACjE,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAEzC,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAElE,MAAM,wBAAwB,GAAG,GAAG,EAAE;IACrC,MAAM,GAAG,GAAG,SAAS,EAAE,CAAC;IAExB,MAAM,gBAAgB,GAAG,WAAW,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;IAE3D,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,QAAQ,CAAC;QACnD,QAAQ,EAAE,CAAC,OAAO,EAAE,eAAe,CAAC;QACpC,OAAO,EAAE,GAAG,EAAE,CAAC,gBAAgB,CAAC,EAAE,QAAQ,EAAE,cAAc,CAAC,GAAG,EAAE,CAAC;QACjE,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO;QAC9B,OAAO,EAAE,CAAC,CAAC,GAAG;QACd,SAAS,EAAE,CAAC;QACZ,eAAe,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;KACpC,CAAC,CAAC;IAEH,MAAM,yBAAyB,GAAG,SAAS,CAAC,eAAe,CAAC,CAAC;IAC7D,MAAM,qBAAqB,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;IACvD,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;IAErC,SAAS,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,GAAG,EAAE,CAAC;YACV,OAAO;QACR,CAAC;QAED,MAAM,4BAA4B,GAAG,yBAAyB,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;YAC3F,WAAW,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,MAAM,kBAAkB,GAAG,qBAAqB,CAAC,GAAG,GAAG,UAAU,EAAE,KAAK,IAAI,EAAE;YAC7E,WAAW,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,OAAO,GAAG,EAAE;YACX,4BAA4B,EAAE,CAAC;YAC/B,kBAAkB,EAAE,CAAC;QACtB,CAAC,CAAC;IACH,CAAC,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE,qBAAqB,EAAE,WAAW,CAAC,CAAC,CAAC;IAEzE,IAAI,CAAC,SAAS,EAAE,CAAC;QAChB,OAAO,IAAI,CAAC;IACb,CAAC;IAED,OAAO,CACN,EACC;GAAA,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,CACpC,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,YAAY,CAAC,EAAG,CACrE,CAAC,CACH;EAAA,GAAG,CACH,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,wBAAwB,CAAC","sourcesContent":["import { BannerPlatform } from '@rocket.chat/core-typings';\nimport { useEndpoint, useStream, useUserId } from '@rocket.chat/ui-contexts';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport React, { useEffect } from 'react';\n\nimport CloudAnnouncementHandler from './CloudAnnouncementHandler';\n\nconst CloudAnnouncementsRegion = () => {\n\tconst uid = useUserId();\n\n\tconst getAnnouncements = useEndpoint('GET', '/v1/banners');\n\n\tconst { isSuccess, data: announcements } = useQuery({\n\t\tqueryKey: ['cloud', 'announcements'],\n\t\tqueryFn: () => getAnnouncements({ platform: BannerPlatform.Web }),\n\t\tselect: (data) => data.banners,\n\t\tenabled: !!uid,\n\t\tstaleTime: 0,\n\t\trefetchInterval: 1000 * 60 * 60 * 24,\n\t});\n\n\tconst subscribeToNotifyLoggedIn = useStream('notify-logged');\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\tconst queryClient = useQueryClient();\n\n\tuseEffect(() => {\n\t\tif (!uid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst unsubscribeFromBannerChanged = subscribeToNotifyLoggedIn('banner-changed', async () => {\n\t\t\tqueryClient.invalidateQueries(['cloud', 'announcements']);\n\t\t});\n\n\t\tconst unsubscribeBanners = subscribeToNotifyUser(`${uid}/banners`, async () => {\n\t\t\tqueryClient.invalidateQueries(['cloud', 'announcements']);\n\t\t});\n\n\t\treturn () => {\n\t\t\tunsubscribeFromBannerChanged();\n\t\t\tunsubscribeBanners();\n\t\t};\n\t}, [subscribeToNotifyLoggedIn, uid, subscribeToNotifyUser, queryClient]);\n\n\tif (!isSuccess) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{announcements.map((announcement) => (\n\t\t\t\t<CloudAnnouncementHandler key={announcement._id} {...announcement} />\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default CloudAnnouncementsRegion;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/cloud/CloudAnnouncementsRegion.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/cloud/CloudAnnouncementsRegion.tsx","inputSourceMap":{"version":3,"file":"client/views/cloud/CloudAnnouncementsRegion.tsx","sourceRoot":"","sources":["client/views/cloud/CloudAnnouncementsRegion.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAC3D,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AAC7E,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACjE,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAEzC,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAElE,MAAM,wBAAwB,GAAG,GAAG,EAAE;IACrC,MAAM,GAAG,GAAG,SAAS,EAAE,CAAC;IAExB,MAAM,gBAAgB,GAAG,WAAW,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;IAE3D,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,QAAQ,CAAC;QACnD,QAAQ,EAAE,CAAC,OAAO,EAAE,eAAe,CAAC;QACpC,OAAO,EAAE,GAAG,EAAE,CAAC,gBAAgB,CAAC,EAAE,QAAQ,EAAE,cAAc,CAAC,GAAG,EAAE,CAAC;QACjE,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO;QAC9B,OAAO,EAAE,CAAC,CAAC,GAAG;QACd,SAAS,EAAE,CAAC;QACZ,eAAe,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;KACpC,CAAC,CAAC;IAEH,MAAM,yBAAyB,GAAG,SAAS,CAAC,eAAe,CAAC,CAAC;IAC7D,MAAM,qBAAqB,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;IACvD,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;IAErC,SAAS,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,GAAG,EAAE,CAAC;YACV,OAAO;QACR,CAAC;QAED,MAAM,4BAA4B,GAAG,yBAAyB,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;YAC3F,WAAW,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,MAAM,kBAAkB,GAAG,qBAAqB,CAAC,GAAG,GAAG,UAAU,EAAE,KAAK,IAAI,EAAE;YAC7E,WAAW,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,OAAO,GAAG,EAAE;YACX,4BAA4B,EAAE,CAAC;YAC/B,kBAAkB,EAAE,CAAC;QACtB,CAAC,CAAC;IACH,CAAC,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE,qBAAqB,EAAE,WAAW,CAAC,CAAC,CAAC;IAEzE,IAAI,CAAC,SAAS,EAAE,CAAC;QAChB,OAAO,IAAI,CAAC;IACb,CAAC;IAED,OAAO,CACN,EACC;GAAA,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,CACpC,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,YAAY,CAAC,EAAG,CACrE,CAAC,CACH;EAAA,GAAG,CACH,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,wBAAwB,CAAC","sourcesContent":["import { BannerPlatform } from '@rocket.chat/core-typings';\nimport { useEndpoint, useStream, useUserId } from '@rocket.chat/ui-contexts';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport React, { useEffect } from 'react';\n\nimport CloudAnnouncementHandler from './CloudAnnouncementHandler';\n\nconst CloudAnnouncementsRegion = () => {\n\tconst uid = useUserId();\n\n\tconst getAnnouncements = useEndpoint('GET', '/v1/banners');\n\n\tconst { isSuccess, data: announcements } = useQuery({\n\t\tqueryKey: ['cloud', 'announcements'],\n\t\tqueryFn: () => getAnnouncements({ platform: BannerPlatform.Web }),\n\t\tselect: (data) => data.banners,\n\t\tenabled: !!uid,\n\t\tstaleTime: 0,\n\t\trefetchInterval: 1000 * 60 * 60 * 24,\n\t});\n\n\tconst subscribeToNotifyLoggedIn = useStream('notify-logged');\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\tconst queryClient = useQueryClient();\n\n\tuseEffect(() => {\n\t\tif (!uid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst unsubscribeFromBannerChanged = subscribeToNotifyLoggedIn('banner-changed', async () => {\n\t\t\tqueryClient.invalidateQueries(['cloud', 'announcements']);\n\t\t});\n\n\t\tconst unsubscribeBanners = subscribeToNotifyUser(`${uid}/banners`, async () => {\n\t\t\tqueryClient.invalidateQueries(['cloud', 'announcements']);\n\t\t});\n\n\t\treturn () => {\n\t\t\tunsubscribeFromBannerChanged();\n\t\t\tunsubscribeBanners();\n\t\t};\n\t}, [subscribeToNotifyLoggedIn, uid, subscribeToNotifyUser, queryClient]);\n\n\tif (!isSuccess) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{announcements.map((announcement) => (\n\t\t\t\t<CloudAnnouncementHandler key={announcement._id} {...announcement} />\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default CloudAnnouncementsRegion;\n"]}}},"code":"let _extends;\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n}, 0);\nlet BannerPlatform;\nmodule.link(\"@rocket.chat/core-typings\", {\n  BannerPlatform(v) {\n    BannerPlatform = v;\n  }\n}, 0);\nlet useEndpoint, useStream, useUserId;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  },\n  useStream(v) {\n    useStream = v;\n  },\n  useUserId(v) {\n    useUserId = v;\n  }\n}, 1);\nlet useQuery, useQueryClient;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery(v) {\n    useQuery = v;\n  },\n  useQueryClient(v) {\n    useQueryClient = v;\n  }\n}, 2);\nlet React, useEffect;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useEffect(v) {\n    useEffect = v;\n  }\n}, 3);\nlet CloudAnnouncementHandler;\nmodule.link(\"./CloudAnnouncementHandler\", {\n  default(v) {\n    CloudAnnouncementHandler = v;\n  }\n}, 4);\nconst CloudAnnouncementsRegion = () => {\n  const uid = useUserId();\n  const getAnnouncements = useEndpoint('GET', '/v1/banners');\n  const {\n    isSuccess,\n    data: announcements\n  } = useQuery({\n    queryKey: ['cloud', 'announcements'],\n    queryFn: () => getAnnouncements({\n      platform: BannerPlatform.Web\n    }),\n    select: data => data.banners,\n    enabled: !!uid,\n    staleTime: 0,\n    refetchInterval: 1000 * 60 * 60 * 24\n  });\n  const subscribeToNotifyLoggedIn = useStream('notify-logged');\n  const subscribeToNotifyUser = useStream('notify-user');\n  const queryClient = useQueryClient();\n  useEffect(() => {\n    if (!uid) {\n      return;\n    }\n    const unsubscribeFromBannerChanged = subscribeToNotifyLoggedIn('banner-changed', async () => {\n      queryClient.invalidateQueries(['cloud', 'announcements']);\n    });\n    const unsubscribeBanners = subscribeToNotifyUser(\"\".concat(uid, \"/banners\"), async () => {\n      queryClient.invalidateQueries(['cloud', 'announcements']);\n    });\n    return () => {\n      unsubscribeFromBannerChanged();\n      unsubscribeBanners();\n    };\n  }, [subscribeToNotifyLoggedIn, uid, subscribeToNotifyUser, queryClient]);\n  if (!isSuccess) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, announcements.map(announcement => /*#__PURE__*/React.createElement(CloudAnnouncementHandler, _extends({\n    key: announcement._id\n  }, announcement))));\n};\nmodule.exportDefault(CloudAnnouncementsRegion);","map":{"version":3,"names":["_extends","module","link","default","v","BannerPlatform","useEndpoint","useStream","useUserId","useQuery","useQueryClient","React","useEffect","CloudAnnouncementHandler","CloudAnnouncementsRegion","uid","getAnnouncements","isSuccess","data","announcements","queryKey","queryFn","platform","Web","select","banners","enabled","staleTime","refetchInterval","subscribeToNotifyLoggedIn","subscribeToNotifyUser","queryClient","unsubscribeFromBannerChanged","invalidateQueries","unsubscribeBanners","concat","createElement","Fragment","map","announcement","key","_id","exportDefault"],"sources":["client/views/cloud/CloudAnnouncementsRegion.tsx"],"sourcesContent":["import { BannerPlatform } from '@rocket.chat/core-typings';\nimport { useEndpoint, useStream, useUserId } from '@rocket.chat/ui-contexts';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport React, { useEffect } from 'react';\n\nimport CloudAnnouncementHandler from './CloudAnnouncementHandler';\n\nconst CloudAnnouncementsRegion = () => {\n\tconst uid = useUserId();\n\n\tconst getAnnouncements = useEndpoint('GET', '/v1/banners');\n\n\tconst { isSuccess, data: announcements } = useQuery({\n\t\tqueryKey: ['cloud', 'announcements'],\n\t\tqueryFn: () => getAnnouncements({ platform: BannerPlatform.Web }),\n\t\tselect: (data) => data.banners,\n\t\tenabled: !!uid,\n\t\tstaleTime: 0,\n\t\trefetchInterval: 1000 * 60 * 60 * 24,\n\t});\n\n\tconst subscribeToNotifyLoggedIn = useStream('notify-logged');\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\tconst queryClient = useQueryClient();\n\n\tuseEffect(() => {\n\t\tif (!uid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst unsubscribeFromBannerChanged = subscribeToNotifyLoggedIn('banner-changed', async () => {\n\t\t\tqueryClient.invalidateQueries(['cloud', 'announcements']);\n\t\t});\n\n\t\tconst unsubscribeBanners = subscribeToNotifyUser(`${uid}/banners`, async () => {\n\t\t\tqueryClient.invalidateQueries(['cloud', 'announcements']);\n\t\t});\n\n\t\treturn () => {\n\t\t\tunsubscribeFromBannerChanged();\n\t\t\tunsubscribeBanners();\n\t\t};\n\t}, [subscribeToNotifyLoggedIn, uid, subscribeToNotifyUser, queryClient]);\n\n\tif (!isSuccess) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{announcements.map((announcement) => (\n\t\t\t\t<CloudAnnouncementHandler key={announcement._id} {...announcement} />\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default CloudAnnouncementsRegion;\n"],"mappings":"AAAA,IAAAA,QAAS;AAAAC,MAAA,CAAAC,IAAc,CAAE,gCAAM,EAA2B;EAACC,QAAAC,CAAA;IAAAJ,QAAA,GAAAI,CAAA;EAAA;AAAA;AAA3D,IAAAC,cAAS;AAAAJ,MAAgB,CAAAC,IAAA,CAAM,2BAA2B,EAAC;EAAAG,eAAAD,CAAA;IAAAC,cAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,WAAA,EAAAC,SAAA,EAAAC,SAAA;AAAAP,MAAA,CAAAC,IAAA;EAAAI,YAAAF,CAAA;IAAAE,WAAA,GAAAF,CAAA;EAAA;EAAAG,UAAAH,CAAA;IAAAG,SAAA,GAAAH,CAAA;EAAA;EAAAI,UAAAJ,CAAA;IAAAI,SAAA,GAAAJ,CAAA;EAAA;AAAA;AAAA,IAAAK,QAAA,EAAAC,cAAA;AAAAT,MAAA,CAAAC,IAAA;EAAAO,SAAAL,CAAA;IAAAK,QAAA,GAAAL,CAAA;EAAA;EAAAM,eAAAN,CAAA;IAAAM,cAAA,GAAAN,CAAA;EAAA;AAAA;AAAA,IAAAO,KAAA,EAAAC,SAAA;AAAAX,MAAA,CAAAC,IAAA;EAAAC,QAAAC,CAAA;IAAAO,KAAA,GAAAP,CAAA;EAAA;EAAAQ,UAAAR,CAAA;IAAAQ,SAAA,GAAAR,CAAA;EAAA;AAAA;AAAA,IAAAS,wBAAA;AAAAZ,MAAA,CAAAC,IAAA;EAAAC,QAAAC,CAAA;IAAAS,wBAAA,GAAAT,CAAA;EAAA;AAAA;AAO3D,MAAMU,wBAAwB,GAAGA,CAAA,KAAK;EACrC,MAAMC,GAAG,GAAGP,SAAS,EAAE;EAEvB,MAAMQ,gBAAgB,GAAGV,WAAW,CAAC,KAAK,EAAE,aAAa,CAAC;EAE1D,MAAM;IAAEW,SAAS;IAAEC,IAAI,EAAEC;EAAa,CAAE,GAAGV,QAAQ,CAAC;IACnDW,QAAQ,EAAE,CAAC,OAAO,EAAE,eAAe,CAAC;IACpCC,OAAO,EAAEA,CAAA,KAAML,gBAAgB,CAAC;MAAEM,QAAQ,EAAEjB,cAAc,CAACkB;IAAG,CAAE,CAAC;IACjEC,MAAM,EAAGN,IAAI,IAAKA,IAAI,CAACO,OAAO;IAC9BC,OAAO,EAAE,CAAC,CAACX,GAAG;IACdY,SAAS,EAAE,CAAC;IACZC,eAAe,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG;GAClC,CAAC;EAEF,MAAMC,yBAAyB,GAAGtB,SAAS,CAAC,eAAe,CAAC;EAC5D,MAAMuB,qBAAqB,GAAGvB,SAAS,CAAC,aAAa,CAAC;EACtD,MAAMwB,WAAW,GAAGrB,cAAc,EAAE;EAEpCE,SAAS,CAAC,MAAK;IACd,IAAI,CAACG,GAAG,EAAE;MACT;IACD;IAEA,MAAMiB,4BAA4B,GAAGH,yBAAyB,CAAC,gBAAgB,EAAE,YAAW;MAC3FE,WAAW,CAACE,iBAAiB,CAAC,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;IAC1D,CAAC,CAAC;IAEF,MAAMC,kBAAkB,GAAGJ,qBAAqB,IAAAK,MAAA,CAAIpB,GAAG,eAAY,YAAW;MAC7EgB,WAAW,CAACE,iBAAiB,CAAC,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;IAC1D,CAAC,CAAC;IAEF,OAAO,MAAK;MACXD,4BAA4B,EAAE;MAC9BE,kBAAkB,EAAE;IACrB,CAAC;EACF,CAAC,EAAE,CAACL,yBAAyB,EAAEd,GAAG,EAAEe,qBAAqB,EAAEC,WAAW,CAAC,CAAC;EAExE,IAAI,CAACd,SAAS,EAAE;IACf,OAAO,IAAI;EACZ;EAEA,oBACCN,KAAA,CAAAyB,aAAA,CAAAzB,KAAA,CAAA0B,QAAA,QACElB,aAAa,CAACmB,GAAG,CAAEC,YAAY,iBAC/B5B,KAAA,CAAAyB,aAAA,CAACvB,wBAAwB,EAAAb,QAAA;IAACwC,GAAG,EAAED,YAAY,CAACE;EAAI,GAAKF,YAAY,CAAC,CAClE,CACF,CAAG;AAEL,CAAC;AAvDDtC,MAAA,CAAOyC,aAAE,CAyDM5B,wBAzDQ,CAAE","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"1d3cad56e92f8cda716736abe93e523c3d4e40d5"}
