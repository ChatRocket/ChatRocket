{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/VideoConference.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/VideoConference.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/VideoConference.ts","inputSourceMap":{"version":3,"file":"server/models/raw/VideoConference.ts","sourceRoot":"","sources":["server/models/raw/VideoConference.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n\tVideoConference,\n\tIGroupVideoConference,\n\tILivechatVideoConference,\n\tIUser,\n\tIRoom,\n\tRocketChatRecordDeleted,\n} from '@rocket.chat/core-typings';\nimport { VideoConferenceStatus } from '@rocket.chat/core-typings';\nimport type { FindPaginated, InsertionModel, IVideoConferenceModel } from '@rocket.chat/model-typings';\nimport type { FindCursor, UpdateOptions, UpdateFilter, UpdateResult, IndexDescription, Collection, Db, FindOptions } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class VideoConferenceRaw extends BaseRaw<VideoConference> implements IVideoConferenceModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<VideoConference>>) {\n\t\tsuper(db, 'video_conference', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{ key: { rid: 1, createdAt: 1 }, unique: false },\n\t\t\t{ key: { type: 1, status: 1 }, unique: false },\n\t\t\t{ key: { discussionRid: 1 }, unique: false },\n\t\t];\n\t}\n\n\tpublic findPaginatedByRoomId(\n\t\trid: IRoom['_id'],\n\t\t{ offset, count }: { offset?: number; count?: number } = {},\n\t): FindPaginated<FindCursor<VideoConference>> {\n\t\treturn this.findPaginated(\n\t\t\t{ rid },\n\t\t\t{\n\t\t\t\tsort: { createdAt: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t\tprojection: {\n\t\t\t\t\tproviderData: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async findAllLongRunning(minDate: Date): Promise<FindCursor<Pick<VideoConference, '_id'>>> {\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\tcreatedAt: {\n\t\t\t\t\t$lte: minDate,\n\t\t\t\t},\n\t\t\t\tendedAt: {\n\t\t\t\t\t$exists: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tprojection: {\n\t\t\t\t\t_id: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async countByTypeAndStatus(\n\t\ttype: VideoConference['type'],\n\t\tstatus: VideoConferenceStatus,\n\t\toptions: FindOptions<VideoConference>,\n\t): Promise<number> {\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\ttype,\n\t\t\t\tstatus,\n\t\t\t},\n\t\t\toptions,\n\t\t).count();\n\t}\n\n\tpublic async createDirect({\n\t\tproviderName,\n\t\t...callDetails\n\t}: Pick<VideoConference, 'rid' | 'createdBy' | 'providerName'>): Promise<string> {\n\t\tconst call: InsertionModel<VideoConference> = {\n\t\t\ttype: 'direct',\n\t\t\tusers: [],\n\t\t\tmessages: {},\n\t\t\tstatus: VideoConferenceStatus.CALLING,\n\t\t\tcreatedAt: new Date(),\n\t\t\tproviderName: providerName.toLowerCase(),\n\t\t\tringing: true,\n\t\t\t...callDetails,\n\t\t};\n\n\t\treturn (await this.insertOne(call)).insertedId;\n\t}\n\n\tpublic async createGroup({\n\t\tproviderName,\n\t\t...callDetails\n\t}: Required<Pick<IGroupVideoConference, 'rid' | 'title' | 'createdBy' | 'providerName' | 'ringing'>>): Promise<string> {\n\t\tconst call: InsertionModel<IGroupVideoConference> = {\n\t\t\ttype: 'videoconference',\n\t\t\tusers: [],\n\t\t\tmessages: {},\n\t\t\tstatus: VideoConferenceStatus.STARTED,\n\t\t\tanonymousUsers: 0,\n\t\t\tcreatedAt: new Date(),\n\t\t\tproviderName: providerName.toLowerCase(),\n\t\t\t...callDetails,\n\t\t};\n\n\t\treturn (await this.insertOne(call)).insertedId;\n\t}\n\n\tpublic async createLivechat({\n\t\tproviderName,\n\t\t...callDetails\n\t}: Required<Pick<ILivechatVideoConference, 'rid' | 'createdBy' | 'providerName'>>): Promise<string> {\n\t\tconst call: InsertionModel<ILivechatVideoConference> = {\n\t\t\ttype: 'livechat',\n\t\t\tusers: [],\n\t\t\tmessages: {},\n\t\t\tstatus: VideoConferenceStatus.STARTED,\n\t\t\tcreatedAt: new Date(),\n\t\t\tproviderName: providerName.toLowerCase(),\n\t\t\t...callDetails,\n\t\t};\n\n\t\treturn (await this.insertOne(call)).insertedId;\n\t}\n\n\tpublic updateOneById(\n\t\t_id: string,\n\t\tupdate: UpdateFilter<VideoConference> | Partial<VideoConference>,\n\t\toptions?: UpdateOptions,\n\t): Promise<UpdateResult> {\n\t\treturn this.updateOne({ _id }, update, options);\n\t}\n\n\tpublic async setEndedById(callId: string, endedBy?: { _id: string; name: string; username: string }, endedAt?: Date): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: {\n\t\t\t\tendedBy,\n\t\t\t\tendedAt: endedAt || new Date(),\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async setDataById(callId: string, data: Partial<Omit<VideoConference, '_id'>>): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: data,\n\t\t});\n\t}\n\n\tpublic async setRingingById(callId: string, ringing: boolean): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: {\n\t\t\t\tringing,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async setStatusById(callId: string, status: VideoConference['status']): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: {\n\t\t\t\tstatus,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async setUrlById(callId: string, url: string): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: {\n\t\t\t\turl,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async setProviderDataById(callId: string, providerData: Record<string, any> | undefined): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t...(providerData\n\t\t\t\t? {\n\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\tproviderData,\n\t\t\t\t\t\t},\n\t\t\t\t  }\n\t\t\t\t: {\n\t\t\t\t\t\t$unset: {\n\t\t\t\t\t\t\tproviderData: 1 as const,\n\t\t\t\t\t\t},\n\t\t\t\t  }),\n\t\t});\n\t}\n\n\tpublic async addUserById(\n\t\tcallId: string,\n\t\tuser: Required<Pick<IUser, '_id' | 'name' | 'username' | 'avatarETag'>> & { ts?: Date },\n\t): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$addToSet: {\n\t\t\t\tusers: {\n\t\t\t\t\t_id: user._id,\n\t\t\t\t\tusername: user.username,\n\t\t\t\t\tname: user.name,\n\t\t\t\t\tavatarETag: user.avatarETag,\n\t\t\t\t\tts: user.ts || new Date(),\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async setMessageById(callId: string, messageType: keyof VideoConference['messages'], messageId: string): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: {\n\t\t\t\t[`messages.${messageType}`]: messageId,\n\t\t\t},\n\t\t} as UpdateFilter<VideoConference>); // TODO: Remove this cast when TypeScript is updated\n\t\t// TypeScript is not smart enough to infer that `messages.${'start' | 'end'}` matches two keys of `VideoConference`\n\t}\n\n\tpublic async updateUserReferences(userId: IUser['_id'], username: IUser['username'], name: IUser['name']): Promise<void> {\n\t\tawait this.updateMany(\n\t\t\t{\n\t\t\t\t'users._id': userId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'users.$.name': name,\n\t\t\t\t\t'users.$.username': username,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tawait this.updateMany(\n\t\t\t{\n\t\t\t\t'createdBy._id': userId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'createdBy.name': name,\n\t\t\t\t\t'createdBy.username': username,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tawait this.updateMany(\n\t\t\t{\n\t\t\t\t'endedBy._id': userId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'endedBy.name': name,\n\t\t\t\t\t'endedBy.username': username,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async increaseAnonymousCount(callId: IGroupVideoConference['_id']): Promise<void> {\n\t\tawait this.updateOne(\n\t\t\t{ _id: callId },\n\t\t\t{\n\t\t\t\t$inc: {\n\t\t\t\t\tanonymousUsers: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async setDiscussionRidById(callId: string, discussionRid: IRoom['_id']): Promise<void> {\n\t\tawait this.updateOne({ _id: callId }, { $set: { discussionRid } });\n\t}\n\n\tpublic async unsetDiscussionRidById(callId: string): Promise<void> {\n\t\tawait this.updateOne({ _id: callId }, { $unset: { discussionRid: true } });\n\t}\n\n\tpublic async unsetDiscussionRid(discussionRid: IRoom['_id']): Promise<void> {\n\t\tawait this.updateMany(\n\t\t\t{\n\t\t\t\tdiscussionRid,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$unset: {\n\t\t\t\t\tdiscussionRid: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/VideoConference.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/VideoConference.ts","inputSourceMap":{"version":3,"file":"server/models/raw/VideoConference.ts","sourceRoot":"","sources":["server/models/raw/VideoConference.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n\tVideoConference,\n\tIGroupVideoConference,\n\tILivechatVideoConference,\n\tIUser,\n\tIRoom,\n\tRocketChatRecordDeleted,\n} from '@rocket.chat/core-typings';\nimport { VideoConferenceStatus } from '@rocket.chat/core-typings';\nimport type { FindPaginated, InsertionModel, IVideoConferenceModel } from '@rocket.chat/model-typings';\nimport type { FindCursor, UpdateOptions, UpdateFilter, UpdateResult, IndexDescription, Collection, Db, FindOptions } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class VideoConferenceRaw extends BaseRaw<VideoConference> implements IVideoConferenceModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<VideoConference>>) {\n\t\tsuper(db, 'video_conference', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{ key: { rid: 1, createdAt: 1 }, unique: false },\n\t\t\t{ key: { type: 1, status: 1 }, unique: false },\n\t\t\t{ key: { discussionRid: 1 }, unique: false },\n\t\t];\n\t}\n\n\tpublic findPaginatedByRoomId(\n\t\trid: IRoom['_id'],\n\t\t{ offset, count }: { offset?: number; count?: number } = {},\n\t): FindPaginated<FindCursor<VideoConference>> {\n\t\treturn this.findPaginated(\n\t\t\t{ rid },\n\t\t\t{\n\t\t\t\tsort: { createdAt: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t\tprojection: {\n\t\t\t\t\tproviderData: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async findAllLongRunning(minDate: Date): Promise<FindCursor<Pick<VideoConference, '_id'>>> {\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\tcreatedAt: {\n\t\t\t\t\t$lte: minDate,\n\t\t\t\t},\n\t\t\t\tendedAt: {\n\t\t\t\t\t$exists: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tprojection: {\n\t\t\t\t\t_id: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async countByTypeAndStatus(\n\t\ttype: VideoConference['type'],\n\t\tstatus: VideoConferenceStatus,\n\t\toptions: FindOptions<VideoConference>,\n\t): Promise<number> {\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\ttype,\n\t\t\t\tstatus,\n\t\t\t},\n\t\t\toptions,\n\t\t).count();\n\t}\n\n\tpublic async createDirect({\n\t\tproviderName,\n\t\t...callDetails\n\t}: Pick<VideoConference, 'rid' | 'createdBy' | 'providerName'>): Promise<string> {\n\t\tconst call: InsertionModel<VideoConference> = {\n\t\t\ttype: 'direct',\n\t\t\tusers: [],\n\t\t\tmessages: {},\n\t\t\tstatus: VideoConferenceStatus.CALLING,\n\t\t\tcreatedAt: new Date(),\n\t\t\tproviderName: providerName.toLowerCase(),\n\t\t\tringing: true,\n\t\t\t...callDetails,\n\t\t};\n\n\t\treturn (await this.insertOne(call)).insertedId;\n\t}\n\n\tpublic async createGroup({\n\t\tproviderName,\n\t\t...callDetails\n\t}: Required<Pick<IGroupVideoConference, 'rid' | 'title' | 'createdBy' | 'providerName' | 'ringing'>>): Promise<string> {\n\t\tconst call: InsertionModel<IGroupVideoConference> = {\n\t\t\ttype: 'videoconference',\n\t\t\tusers: [],\n\t\t\tmessages: {},\n\t\t\tstatus: VideoConferenceStatus.STARTED,\n\t\t\tanonymousUsers: 0,\n\t\t\tcreatedAt: new Date(),\n\t\t\tproviderName: providerName.toLowerCase(),\n\t\t\t...callDetails,\n\t\t};\n\n\t\treturn (await this.insertOne(call)).insertedId;\n\t}\n\n\tpublic async createLivechat({\n\t\tproviderName,\n\t\t...callDetails\n\t}: Required<Pick<ILivechatVideoConference, 'rid' | 'createdBy' | 'providerName'>>): Promise<string> {\n\t\tconst call: InsertionModel<ILivechatVideoConference> = {\n\t\t\ttype: 'livechat',\n\t\t\tusers: [],\n\t\t\tmessages: {},\n\t\t\tstatus: VideoConferenceStatus.STARTED,\n\t\t\tcreatedAt: new Date(),\n\t\t\tproviderName: providerName.toLowerCase(),\n\t\t\t...callDetails,\n\t\t};\n\n\t\treturn (await this.insertOne(call)).insertedId;\n\t}\n\n\tpublic updateOneById(\n\t\t_id: string,\n\t\tupdate: UpdateFilter<VideoConference> | Partial<VideoConference>,\n\t\toptions?: UpdateOptions,\n\t): Promise<UpdateResult> {\n\t\treturn this.updateOne({ _id }, update, options);\n\t}\n\n\tpublic async setEndedById(callId: string, endedBy?: { _id: string; name: string; username: string }, endedAt?: Date): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: {\n\t\t\t\tendedBy,\n\t\t\t\tendedAt: endedAt || new Date(),\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async setDataById(callId: string, data: Partial<Omit<VideoConference, '_id'>>): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: data,\n\t\t});\n\t}\n\n\tpublic async setRingingById(callId: string, ringing: boolean): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: {\n\t\t\t\tringing,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async setStatusById(callId: string, status: VideoConference['status']): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: {\n\t\t\t\tstatus,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async setUrlById(callId: string, url: string): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: {\n\t\t\t\turl,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async setProviderDataById(callId: string, providerData: Record<string, any> | undefined): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t...(providerData\n\t\t\t\t? {\n\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\tproviderData,\n\t\t\t\t\t\t},\n\t\t\t\t  }\n\t\t\t\t: {\n\t\t\t\t\t\t$unset: {\n\t\t\t\t\t\t\tproviderData: 1 as const,\n\t\t\t\t\t\t},\n\t\t\t\t  }),\n\t\t});\n\t}\n\n\tpublic async addUserById(\n\t\tcallId: string,\n\t\tuser: Required<Pick<IUser, '_id' | 'name' | 'username' | 'avatarETag'>> & { ts?: Date },\n\t): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$addToSet: {\n\t\t\t\tusers: {\n\t\t\t\t\t_id: user._id,\n\t\t\t\t\tusername: user.username,\n\t\t\t\t\tname: user.name,\n\t\t\t\t\tavatarETag: user.avatarETag,\n\t\t\t\t\tts: user.ts || new Date(),\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async setMessageById(callId: string, messageType: keyof VideoConference['messages'], messageId: string): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: {\n\t\t\t\t[`messages.${messageType}`]: messageId,\n\t\t\t},\n\t\t} as UpdateFilter<VideoConference>); // TODO: Remove this cast when TypeScript is updated\n\t\t// TypeScript is not smart enough to infer that `messages.${'start' | 'end'}` matches two keys of `VideoConference`\n\t}\n\n\tpublic async updateUserReferences(userId: IUser['_id'], username: IUser['username'], name: IUser['name']): Promise<void> {\n\t\tawait this.updateMany(\n\t\t\t{\n\t\t\t\t'users._id': userId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'users.$.name': name,\n\t\t\t\t\t'users.$.username': username,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tawait this.updateMany(\n\t\t\t{\n\t\t\t\t'createdBy._id': userId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'createdBy.name': name,\n\t\t\t\t\t'createdBy.username': username,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tawait this.updateMany(\n\t\t\t{\n\t\t\t\t'endedBy._id': userId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'endedBy.name': name,\n\t\t\t\t\t'endedBy.username': username,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async increaseAnonymousCount(callId: IGroupVideoConference['_id']): Promise<void> {\n\t\tawait this.updateOne(\n\t\t\t{ _id: callId },\n\t\t\t{\n\t\t\t\t$inc: {\n\t\t\t\t\tanonymousUsers: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async setDiscussionRidById(callId: string, discussionRid: IRoom['_id']): Promise<void> {\n\t\tawait this.updateOne({ _id: callId }, { $set: { discussionRid } });\n\t}\n\n\tpublic async unsetDiscussionRidById(callId: string): Promise<void> {\n\t\tawait this.updateOne({ _id: callId }, { $unset: { discussionRid: true } });\n\t}\n\n\tpublic async unsetDiscussionRid(discussionRid: IRoom['_id']): Promise<void> {\n\t\tawait this.updateMany(\n\t\t\t{\n\t\t\t\tdiscussionRid,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$unset: {\n\t\t\t\t\tdiscussionRid: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _objectWithoutProperties;\n    module.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n      default(v) {\n        _objectWithoutProperties = v;\n      }\n    }, 1);\n    const _excluded = [\"providerName\"],\n      _excluded2 = [\"providerName\"],\n      _excluded3 = [\"providerName\"];\n    module.export({\n      VideoConferenceRaw: () => VideoConferenceRaw\n    });\n    let VideoConferenceStatus;\n    module.link(\"@rocket.chat/core-typings\", {\n      VideoConferenceStatus(v) {\n        VideoConferenceStatus = v;\n      }\n    }, 0);\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class VideoConferenceRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'video_conference', trash);\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            rid: 1,\n            createdAt: 1\n          },\n          unique: false\n        }, {\n          key: {\n            type: 1,\n            status: 1\n          },\n          unique: false\n        }, {\n          key: {\n            discussionRid: 1\n          },\n          unique: false\n        }];\n      }\n      findPaginatedByRoomId(rid) {\n        let {\n          offset,\n          count\n        } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        return this.findPaginated({\n          rid\n        }, {\n          sort: {\n            createdAt: -1\n          },\n          skip: offset,\n          limit: count,\n          projection: {\n            providerData: 0\n          }\n        });\n      }\n      async findAllLongRunning(minDate) {\n        return this.find({\n          createdAt: {\n            $lte: minDate\n          },\n          endedAt: {\n            $exists: false\n          }\n        }, {\n          projection: {\n            _id: 1\n          }\n        });\n      }\n      async countByTypeAndStatus(type, status, options) {\n        return this.find({\n          type,\n          status\n        }, options).count();\n      }\n      async createDirect(_ref) {\n        let {\n            providerName\n          } = _ref,\n          callDetails = _objectWithoutProperties(_ref, _excluded);\n        const call = _objectSpread({\n          type: 'direct',\n          users: [],\n          messages: {},\n          status: VideoConferenceStatus.CALLING,\n          createdAt: new Date(),\n          providerName: providerName.toLowerCase(),\n          ringing: true\n        }, callDetails);\n        return (await this.insertOne(call)).insertedId;\n      }\n      async createGroup(_ref2) {\n        let {\n            providerName\n          } = _ref2,\n          callDetails = _objectWithoutProperties(_ref2, _excluded2);\n        const call = _objectSpread({\n          type: 'videoconference',\n          users: [],\n          messages: {},\n          status: VideoConferenceStatus.STARTED,\n          anonymousUsers: 0,\n          createdAt: new Date(),\n          providerName: providerName.toLowerCase()\n        }, callDetails);\n        return (await this.insertOne(call)).insertedId;\n      }\n      async createLivechat(_ref3) {\n        let {\n            providerName\n          } = _ref3,\n          callDetails = _objectWithoutProperties(_ref3, _excluded3);\n        const call = _objectSpread({\n          type: 'livechat',\n          users: [],\n          messages: {},\n          status: VideoConferenceStatus.STARTED,\n          createdAt: new Date(),\n          providerName: providerName.toLowerCase()\n        }, callDetails);\n        return (await this.insertOne(call)).insertedId;\n      }\n      updateOneById(_id, update, options) {\n        return this.updateOne({\n          _id\n        }, update, options);\n      }\n      async setEndedById(callId, endedBy, endedAt) {\n        await this.updateOneById(callId, {\n          $set: {\n            endedBy,\n            endedAt: endedAt || new Date()\n          }\n        });\n      }\n      async setDataById(callId, data) {\n        await this.updateOneById(callId, {\n          $set: data\n        });\n      }\n      async setRingingById(callId, ringing) {\n        await this.updateOneById(callId, {\n          $set: {\n            ringing\n          }\n        });\n      }\n      async setStatusById(callId, status) {\n        await this.updateOneById(callId, {\n          $set: {\n            status\n          }\n        });\n      }\n      async setUrlById(callId, url) {\n        await this.updateOneById(callId, {\n          $set: {\n            url\n          }\n        });\n      }\n      async setProviderDataById(callId, providerData) {\n        await this.updateOneById(callId, _objectSpread({}, providerData ? {\n          $set: {\n            providerData\n          }\n        } : {\n          $unset: {\n            providerData: 1\n          }\n        }));\n      }\n      async addUserById(callId, user) {\n        await this.updateOneById(callId, {\n          $addToSet: {\n            users: {\n              _id: user._id,\n              username: user.username,\n              name: user.name,\n              avatarETag: user.avatarETag,\n              ts: user.ts || new Date()\n            }\n          }\n        });\n      }\n      async setMessageById(callId, messageType, messageId) {\n        await this.updateOneById(callId, {\n          $set: {\n            [\"messages.\".concat(messageType)]: messageId\n          }\n        }); // TODO: Remove this cast when TypeScript is updated\n        // TypeScript is not smart enough to infer that `messages.${'start' | 'end'}` matches two keys of `VideoConference`\n      }\n      async updateUserReferences(userId, username, name) {\n        await this.updateMany({\n          'users._id': userId\n        }, {\n          $set: {\n            'users.$.name': name,\n            'users.$.username': username\n          }\n        });\n        await this.updateMany({\n          'createdBy._id': userId\n        }, {\n          $set: {\n            'createdBy.name': name,\n            'createdBy.username': username\n          }\n        });\n        await this.updateMany({\n          'endedBy._id': userId\n        }, {\n          $set: {\n            'endedBy.name': name,\n            'endedBy.username': username\n          }\n        });\n      }\n      async increaseAnonymousCount(callId) {\n        await this.updateOne({\n          _id: callId\n        }, {\n          $inc: {\n            anonymousUsers: 1\n          }\n        });\n      }\n      async setDiscussionRidById(callId, discussionRid) {\n        await this.updateOne({\n          _id: callId\n        }, {\n          $set: {\n            discussionRid\n          }\n        });\n      }\n      async unsetDiscussionRidById(callId) {\n        await this.updateOne({\n          _id: callId\n        }, {\n          $unset: {\n            discussionRid: true\n          }\n        });\n      }\n      async unsetDiscussionRid(discussionRid) {\n        await this.updateMany({\n          discussionRid\n        }, {\n          $unset: {\n            discussionRid: 1\n          }\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_objectWithoutProperties","_excluded","_excluded2","_excluded3","export","VideoConferenceRaw","VideoConferenceStatus","BaseRaw","__reifyWaitForDeps__","constructor","db","trash","modelIndexes","key","rid","createdAt","unique","type","status","discussionRid","findPaginatedByRoomId","offset","count","arguments","length","undefined","findPaginated","sort","skip","limit","projection","providerData","findAllLongRunning","minDate","find","$lte","endedAt","$exists","_id","countByTypeAndStatus","options","createDirect","_ref","providerName","callDetails","call","users","messages","CALLING","Date","toLowerCase","ringing","insertOne","insertedId","createGroup","_ref2","STARTED","anonymousUsers","createLivechat","_ref3","updateOneById","update","updateOne","setEndedById","callId","endedBy","$set","setDataById","data","setRingingById","setStatusById","setUrlById","url","setProviderDataById","$unset","addUserById","user","$addToSet","username","name","avatarETag","ts","setMessageById","messageType","messageId","concat","updateUserReferences","userId","updateMany","increaseAnonymousCount","$inc","setDiscussionRidById","unsetDiscussionRidById","unsetDiscussionRid","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/VideoConference.ts"],"sourcesContent":["import type {\n\tVideoConference,\n\tIGroupVideoConference,\n\tILivechatVideoConference,\n\tIUser,\n\tIRoom,\n\tRocketChatRecordDeleted,\n} from '@rocket.chat/core-typings';\nimport { VideoConferenceStatus } from '@rocket.chat/core-typings';\nimport type { FindPaginated, InsertionModel, IVideoConferenceModel } from '@rocket.chat/model-typings';\nimport type { FindCursor, UpdateOptions, UpdateFilter, UpdateResult, IndexDescription, Collection, Db, FindOptions } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class VideoConferenceRaw extends BaseRaw<VideoConference> implements IVideoConferenceModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<VideoConference>>) {\n\t\tsuper(db, 'video_conference', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{ key: { rid: 1, createdAt: 1 }, unique: false },\n\t\t\t{ key: { type: 1, status: 1 }, unique: false },\n\t\t\t{ key: { discussionRid: 1 }, unique: false },\n\t\t];\n\t}\n\n\tpublic findPaginatedByRoomId(\n\t\trid: IRoom['_id'],\n\t\t{ offset, count }: { offset?: number; count?: number } = {},\n\t): FindPaginated<FindCursor<VideoConference>> {\n\t\treturn this.findPaginated(\n\t\t\t{ rid },\n\t\t\t{\n\t\t\t\tsort: { createdAt: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t\tprojection: {\n\t\t\t\t\tproviderData: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async findAllLongRunning(minDate: Date): Promise<FindCursor<Pick<VideoConference, '_id'>>> {\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\tcreatedAt: {\n\t\t\t\t\t$lte: minDate,\n\t\t\t\t},\n\t\t\t\tendedAt: {\n\t\t\t\t\t$exists: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tprojection: {\n\t\t\t\t\t_id: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async countByTypeAndStatus(\n\t\ttype: VideoConference['type'],\n\t\tstatus: VideoConferenceStatus,\n\t\toptions: FindOptions<VideoConference>,\n\t): Promise<number> {\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\ttype,\n\t\t\t\tstatus,\n\t\t\t},\n\t\t\toptions,\n\t\t).count();\n\t}\n\n\tpublic async createDirect({\n\t\tproviderName,\n\t\t...callDetails\n\t}: Pick<VideoConference, 'rid' | 'createdBy' | 'providerName'>): Promise<string> {\n\t\tconst call: InsertionModel<VideoConference> = {\n\t\t\ttype: 'direct',\n\t\t\tusers: [],\n\t\t\tmessages: {},\n\t\t\tstatus: VideoConferenceStatus.CALLING,\n\t\t\tcreatedAt: new Date(),\n\t\t\tproviderName: providerName.toLowerCase(),\n\t\t\tringing: true,\n\t\t\t...callDetails,\n\t\t};\n\n\t\treturn (await this.insertOne(call)).insertedId;\n\t}\n\n\tpublic async createGroup({\n\t\tproviderName,\n\t\t...callDetails\n\t}: Required<Pick<IGroupVideoConference, 'rid' | 'title' | 'createdBy' | 'providerName' | 'ringing'>>): Promise<string> {\n\t\tconst call: InsertionModel<IGroupVideoConference> = {\n\t\t\ttype: 'videoconference',\n\t\t\tusers: [],\n\t\t\tmessages: {},\n\t\t\tstatus: VideoConferenceStatus.STARTED,\n\t\t\tanonymousUsers: 0,\n\t\t\tcreatedAt: new Date(),\n\t\t\tproviderName: providerName.toLowerCase(),\n\t\t\t...callDetails,\n\t\t};\n\n\t\treturn (await this.insertOne(call)).insertedId;\n\t}\n\n\tpublic async createLivechat({\n\t\tproviderName,\n\t\t...callDetails\n\t}: Required<Pick<ILivechatVideoConference, 'rid' | 'createdBy' | 'providerName'>>): Promise<string> {\n\t\tconst call: InsertionModel<ILivechatVideoConference> = {\n\t\t\ttype: 'livechat',\n\t\t\tusers: [],\n\t\t\tmessages: {},\n\t\t\tstatus: VideoConferenceStatus.STARTED,\n\t\t\tcreatedAt: new Date(),\n\t\t\tproviderName: providerName.toLowerCase(),\n\t\t\t...callDetails,\n\t\t};\n\n\t\treturn (await this.insertOne(call)).insertedId;\n\t}\n\n\tpublic updateOneById(\n\t\t_id: string,\n\t\tupdate: UpdateFilter<VideoConference> | Partial<VideoConference>,\n\t\toptions?: UpdateOptions,\n\t): Promise<UpdateResult> {\n\t\treturn this.updateOne({ _id }, update, options);\n\t}\n\n\tpublic async setEndedById(callId: string, endedBy?: { _id: string; name: string; username: string }, endedAt?: Date): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: {\n\t\t\t\tendedBy,\n\t\t\t\tendedAt: endedAt || new Date(),\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async setDataById(callId: string, data: Partial<Omit<VideoConference, '_id'>>): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: data,\n\t\t});\n\t}\n\n\tpublic async setRingingById(callId: string, ringing: boolean): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: {\n\t\t\t\tringing,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async setStatusById(callId: string, status: VideoConference['status']): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: {\n\t\t\t\tstatus,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async setUrlById(callId: string, url: string): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: {\n\t\t\t\turl,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async setProviderDataById(callId: string, providerData: Record<string, any> | undefined): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t...(providerData\n\t\t\t\t? {\n\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\tproviderData,\n\t\t\t\t\t\t},\n\t\t\t\t  }\n\t\t\t\t: {\n\t\t\t\t\t\t$unset: {\n\t\t\t\t\t\t\tproviderData: 1 as const,\n\t\t\t\t\t\t},\n\t\t\t\t  }),\n\t\t});\n\t}\n\n\tpublic async addUserById(\n\t\tcallId: string,\n\t\tuser: Required<Pick<IUser, '_id' | 'name' | 'username' | 'avatarETag'>> & { ts?: Date },\n\t): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$addToSet: {\n\t\t\t\tusers: {\n\t\t\t\t\t_id: user._id,\n\t\t\t\t\tusername: user.username,\n\t\t\t\t\tname: user.name,\n\t\t\t\t\tavatarETag: user.avatarETag,\n\t\t\t\t\tts: user.ts || new Date(),\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async setMessageById(callId: string, messageType: keyof VideoConference['messages'], messageId: string): Promise<void> {\n\t\tawait this.updateOneById(callId, {\n\t\t\t$set: {\n\t\t\t\t[`messages.${messageType}`]: messageId,\n\t\t\t},\n\t\t} as UpdateFilter<VideoConference>); // TODO: Remove this cast when TypeScript is updated\n\t\t// TypeScript is not smart enough to infer that `messages.${'start' | 'end'}` matches two keys of `VideoConference`\n\t}\n\n\tpublic async updateUserReferences(userId: IUser['_id'], username: IUser['username'], name: IUser['name']): Promise<void> {\n\t\tawait this.updateMany(\n\t\t\t{\n\t\t\t\t'users._id': userId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'users.$.name': name,\n\t\t\t\t\t'users.$.username': username,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tawait this.updateMany(\n\t\t\t{\n\t\t\t\t'createdBy._id': userId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'createdBy.name': name,\n\t\t\t\t\t'createdBy.username': username,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tawait this.updateMany(\n\t\t\t{\n\t\t\t\t'endedBy._id': userId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'endedBy.name': name,\n\t\t\t\t\t'endedBy.username': username,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async increaseAnonymousCount(callId: IGroupVideoConference['_id']): Promise<void> {\n\t\tawait this.updateOne(\n\t\t\t{ _id: callId },\n\t\t\t{\n\t\t\t\t$inc: {\n\t\t\t\t\tanonymousUsers: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async setDiscussionRidById(callId: string, discussionRid: IRoom['_id']): Promise<void> {\n\t\tawait this.updateOne({ _id: callId }, { $set: { discussionRid } });\n\t}\n\n\tpublic async unsetDiscussionRidById(callId: string): Promise<void> {\n\t\tawait this.updateOne({ _id: callId }, { $unset: { discussionRid: true } });\n\t}\n\n\tpublic async unsetDiscussionRid(discussionRid: IRoom['_id']): Promise<void> {\n\t\tawait this.updateMany(\n\t\t\t{\n\t\t\t\tdiscussionRid,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$unset: {\n\t\t\t\t\tdiscussionRid: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c2c1a30de5912f9380340e4e3f6f7bdf8de66929"}
