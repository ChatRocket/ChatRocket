{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/api/engagementDashboard/messages.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/api/engagementDashboard/messages.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/api/engagementDashboard/messages.ts","inputSourceMap":{"version":3,"file":"ee/server/api/engagementDashboard/messages.ts","sourceRoot":"","sources":["ee/server/api/engagementDashboard/messages.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAE5C,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AACjD,OAAO,EAAE,eAAe,EAAE,oBAAoB,EAAE,MAAM,oCAAoC,CAAC;AAC3F,OAAO,EACN,0BAA0B,EAC1B,sBAAsB,EACtB,+CAA+C,GAC/C,MAAM,wCAAwC,CAAC;AAuChD,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,6CAA6C,EAC7C;IACC,YAAY,EAAE,IAAI;IAClB,mBAAmB,EAAE,CAAC,2BAA2B,CAAC;CAClD,EACD;IACC,KAAK,CAAC,GAAG;QACR,KAAK,CACJ,IAAI,CAAC,WAAW,EAChB,KAAK,CAAC,eAAe,CAAC;YACrB,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC;YACnC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC;SACjC,CAAC,CACF,CAAC;QAEF,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAExC,MAAM,IAAI,GAAG,MAAM,0BAA0B,CAAC,oBAAoB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;QAChF,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,sCAAsC,EACtC;IACC,YAAY,EAAE,IAAI;IAClB,mBAAmB,EAAE,CAAC,2BAA2B,CAAC;CAClD,EACD;IACC,KAAK,CAAC,GAAG;QACR,KAAK,CACJ,IAAI,CAAC,WAAW,EAChB,KAAK,CAAC,eAAe,CAAC;YACrB,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC;YACnC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC;SACjC,CAAC,CACF,CAAC;QAEF,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAExC,MAAM,IAAI,GAAG,MAAM,sBAAsB,CAAC,oBAAoB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;QAC5E,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,yDAAyD,EACzD;IACC,YAAY,EAAE,IAAI;IAClB,mBAAmB,EAAE,CAAC,2BAA2B,CAAC;CAClD,EACD;IACC,KAAK,CAAC,GAAG;QACR,KAAK,CACJ,IAAI,CAAC,WAAW,EAChB,KAAK,CAAC,eAAe,CAAC;YACrB,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC;YACnC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC;SACjC,CAAC,CACF,CAAC;QAEF,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAExC,MAAM,IAAI,GAAG,MAAM,+CAA+C,CAAC,oBAAoB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;QACrG,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;CACD,CACD,CAAC","sourcesContent":["import type { IDirectMessageRoom, IRoom } from '@rocket.chat/core-typings';\nimport { check, Match } from 'meteor/check';\n\nimport { API } from '../../../../app/api/server';\nimport { isDateISOString, transformDatesForAPI } from '../../lib/engagementDashboard/date';\nimport {\n\tfindWeeklyMessagesSentData,\n\tfindMessagesSentOrigin,\n\tfindTopFivePopularChannelsByMessageSentQuantity,\n} from '../../lib/engagementDashboard/messages';\n\ndeclare module '@rocket.chat/rest-typings' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface Endpoints {\n\t\t'/v1/engagement-dashboard/messages/origin': {\n\t\t\tGET: (params: { start: string; end: string }) => {\n\t\t\t\torigins: {\n\t\t\t\t\tt: IRoom['t'];\n\t\t\t\t\tmessages: number;\n\t\t\t\t}[];\n\t\t\t};\n\t\t};\n\t\t'/v1/engagement-dashboard/messages/top-five-popular-channels': {\n\t\t\tGET: (params: { start: string; end: string }) => {\n\t\t\t\tchannels: {\n\t\t\t\t\tt: IRoom['t'];\n\t\t\t\t\tmessages: number;\n\t\t\t\t\tname: IRoom['name'] | IRoom['fname'];\n\t\t\t\t\tusernames?: IDirectMessageRoom['usernames'];\n\t\t\t\t}[];\n\t\t\t};\n\t\t};\n\t\t'/v1/engagement-dashboard/messages/messages-sent': {\n\t\t\tGET: (params: { start: string; end: string }) => {\n\t\t\t\tdays: { day: Date; messages: number }[];\n\t\t\t\tperiod: {\n\t\t\t\t\tcount: number;\n\t\t\t\t\tvariation: number;\n\t\t\t\t};\n\t\t\t\tyesterday: {\n\t\t\t\t\tcount: number;\n\t\t\t\t\tvariation: number;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t}\n}\n\nAPI.v1.addRoute(\n\t'engagement-dashboard/messages/messages-sent',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-engagement-dashboard'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tstart: Match.Where(isDateISOString),\n\t\t\t\t\tend: Match.Where(isDateISOString),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { start, end } = this.queryParams;\n\n\t\t\tconst data = await findWeeklyMessagesSentData(transformDatesForAPI(start, end));\n\t\t\treturn API.v1.success(data);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'engagement-dashboard/messages/origin',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-engagement-dashboard'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tstart: Match.Where(isDateISOString),\n\t\t\t\t\tend: Match.Where(isDateISOString),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { start, end } = this.queryParams;\n\n\t\t\tconst data = await findMessagesSentOrigin(transformDatesForAPI(start, end));\n\t\t\treturn API.v1.success(data);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'engagement-dashboard/messages/top-five-popular-channels',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-engagement-dashboard'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tstart: Match.Where(isDateISOString),\n\t\t\t\t\tend: Match.Where(isDateISOString),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { start, end } = this.queryParams;\n\n\t\t\tconst data = await findTopFivePopularChannelsByMessageSentQuantity(transformDatesForAPI(start, end));\n\t\t\treturn API.v1.success(data);\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/api/engagementDashboard/messages.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/api/engagementDashboard/messages.ts","inputSourceMap":{"version":3,"file":"ee/server/api/engagementDashboard/messages.ts","sourceRoot":"","sources":["ee/server/api/engagementDashboard/messages.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAE5C,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AACjD,OAAO,EAAE,eAAe,EAAE,oBAAoB,EAAE,MAAM,oCAAoC,CAAC;AAC3F,OAAO,EACN,0BAA0B,EAC1B,sBAAsB,EACtB,+CAA+C,GAC/C,MAAM,wCAAwC,CAAC;AAuChD,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,6CAA6C,EAC7C;IACC,YAAY,EAAE,IAAI;IAClB,mBAAmB,EAAE,CAAC,2BAA2B,CAAC;CAClD,EACD;IACC,KAAK,CAAC,GAAG;QACR,KAAK,CACJ,IAAI,CAAC,WAAW,EAChB,KAAK,CAAC,eAAe,CAAC;YACrB,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC;YACnC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC;SACjC,CAAC,CACF,CAAC;QAEF,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAExC,MAAM,IAAI,GAAG,MAAM,0BAA0B,CAAC,oBAAoB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;QAChF,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,sCAAsC,EACtC;IACC,YAAY,EAAE,IAAI;IAClB,mBAAmB,EAAE,CAAC,2BAA2B,CAAC;CAClD,EACD;IACC,KAAK,CAAC,GAAG;QACR,KAAK,CACJ,IAAI,CAAC,WAAW,EAChB,KAAK,CAAC,eAAe,CAAC;YACrB,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC;YACnC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC;SACjC,CAAC,CACF,CAAC;QAEF,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAExC,MAAM,IAAI,GAAG,MAAM,sBAAsB,CAAC,oBAAoB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;QAC5E,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,yDAAyD,EACzD;IACC,YAAY,EAAE,IAAI;IAClB,mBAAmB,EAAE,CAAC,2BAA2B,CAAC;CAClD,EACD;IACC,KAAK,CAAC,GAAG;QACR,KAAK,CACJ,IAAI,CAAC,WAAW,EAChB,KAAK,CAAC,eAAe,CAAC;YACrB,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC;YACnC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC;SACjC,CAAC,CACF,CAAC;QAEF,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAExC,MAAM,IAAI,GAAG,MAAM,+CAA+C,CAAC,oBAAoB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;QACrG,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;CACD,CACD,CAAC","sourcesContent":["import type { IDirectMessageRoom, IRoom } from '@rocket.chat/core-typings';\nimport { check, Match } from 'meteor/check';\n\nimport { API } from '../../../../app/api/server';\nimport { isDateISOString, transformDatesForAPI } from '../../lib/engagementDashboard/date';\nimport {\n\tfindWeeklyMessagesSentData,\n\tfindMessagesSentOrigin,\n\tfindTopFivePopularChannelsByMessageSentQuantity,\n} from '../../lib/engagementDashboard/messages';\n\ndeclare module '@rocket.chat/rest-typings' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface Endpoints {\n\t\t'/v1/engagement-dashboard/messages/origin': {\n\t\t\tGET: (params: { start: string; end: string }) => {\n\t\t\t\torigins: {\n\t\t\t\t\tt: IRoom['t'];\n\t\t\t\t\tmessages: number;\n\t\t\t\t}[];\n\t\t\t};\n\t\t};\n\t\t'/v1/engagement-dashboard/messages/top-five-popular-channels': {\n\t\t\tGET: (params: { start: string; end: string }) => {\n\t\t\t\tchannels: {\n\t\t\t\t\tt: IRoom['t'];\n\t\t\t\t\tmessages: number;\n\t\t\t\t\tname: IRoom['name'] | IRoom['fname'];\n\t\t\t\t\tusernames?: IDirectMessageRoom['usernames'];\n\t\t\t\t}[];\n\t\t\t};\n\t\t};\n\t\t'/v1/engagement-dashboard/messages/messages-sent': {\n\t\t\tGET: (params: { start: string; end: string }) => {\n\t\t\t\tdays: { day: Date; messages: number }[];\n\t\t\t\tperiod: {\n\t\t\t\t\tcount: number;\n\t\t\t\t\tvariation: number;\n\t\t\t\t};\n\t\t\t\tyesterday: {\n\t\t\t\t\tcount: number;\n\t\t\t\t\tvariation: number;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t}\n}\n\nAPI.v1.addRoute(\n\t'engagement-dashboard/messages/messages-sent',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-engagement-dashboard'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tstart: Match.Where(isDateISOString),\n\t\t\t\t\tend: Match.Where(isDateISOString),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { start, end } = this.queryParams;\n\n\t\t\tconst data = await findWeeklyMessagesSentData(transformDatesForAPI(start, end));\n\t\t\treturn API.v1.success(data);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'engagement-dashboard/messages/origin',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-engagement-dashboard'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tstart: Match.Where(isDateISOString),\n\t\t\t\t\tend: Match.Where(isDateISOString),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { start, end } = this.queryParams;\n\n\t\t\tconst data = await findMessagesSentOrigin(transformDatesForAPI(start, end));\n\t\t\treturn API.v1.success(data);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'engagement-dashboard/messages/top-five-popular-channels',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-engagement-dashboard'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tstart: Match.Where(isDateISOString),\n\t\t\t\t\tend: Match.Where(isDateISOString),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { start, end } = this.queryParams;\n\n\t\t\tconst data = await findTopFivePopularChannelsByMessageSentQuantity(transformDatesForAPI(start, end));\n\t\t\treturn API.v1.success(data);\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let check, Match;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      },\n      Match(v) {\n        Match = v;\n      }\n    }, 0);\n    let API;\n    module.link(\"../../../../app/api/server\", {\n      API(v) {\n        API = v;\n      }\n    }, 1);\n    let isDateISOString, transformDatesForAPI;\n    module.link(\"../../lib/engagementDashboard/date\", {\n      isDateISOString(v) {\n        isDateISOString = v;\n      },\n      transformDatesForAPI(v) {\n        transformDatesForAPI = v;\n      }\n    }, 2);\n    let findWeeklyMessagesSentData, findMessagesSentOrigin, findTopFivePopularChannelsByMessageSentQuantity;\n    module.link(\"../../lib/engagementDashboard/messages\", {\n      findWeeklyMessagesSentData(v) {\n        findWeeklyMessagesSentData = v;\n      },\n      findMessagesSentOrigin(v) {\n        findMessagesSentOrigin = v;\n      },\n      findTopFivePopularChannelsByMessageSentQuantity(v) {\n        findTopFivePopularChannelsByMessageSentQuantity = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('engagement-dashboard/messages/messages-sent', {\n      authRequired: true,\n      permissionsRequired: ['view-engagement-dashboard']\n    }, {\n      async get() {\n        check(this.queryParams, Match.ObjectIncluding({\n          start: Match.Where(isDateISOString),\n          end: Match.Where(isDateISOString)\n        }));\n        const {\n          start,\n          end\n        } = this.queryParams;\n        const data = await findWeeklyMessagesSentData(transformDatesForAPI(start, end));\n        return API.v1.success(data);\n      }\n    });\n    API.v1.addRoute('engagement-dashboard/messages/origin', {\n      authRequired: true,\n      permissionsRequired: ['view-engagement-dashboard']\n    }, {\n      async get() {\n        check(this.queryParams, Match.ObjectIncluding({\n          start: Match.Where(isDateISOString),\n          end: Match.Where(isDateISOString)\n        }));\n        const {\n          start,\n          end\n        } = this.queryParams;\n        const data = await findMessagesSentOrigin(transformDatesForAPI(start, end));\n        return API.v1.success(data);\n      }\n    });\n    API.v1.addRoute('engagement-dashboard/messages/top-five-popular-channels', {\n      authRequired: true,\n      permissionsRequired: ['view-engagement-dashboard']\n    }, {\n      async get() {\n        check(this.queryParams, Match.ObjectIncluding({\n          start: Match.Where(isDateISOString),\n          end: Match.Where(isDateISOString)\n        }));\n        const {\n          start,\n          end\n        } = this.queryParams;\n        const data = await findTopFivePopularChannelsByMessageSentQuantity(transformDatesForAPI(start, end));\n        return API.v1.success(data);\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["check","Match","module","link","v","API","isDateISOString","transformDatesForAPI","findWeeklyMessagesSentData","findMessagesSentOrigin","findTopFivePopularChannelsByMessageSentQuantity","__reifyWaitForDeps__","v1","addRoute","authRequired","permissionsRequired","get","queryParams","ObjectIncluding","start","Where","end","data","success","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/api/engagementDashboard/messages.ts"],"sourcesContent":["import type { IDirectMessageRoom, IRoom } from '@rocket.chat/core-typings';\nimport { check, Match } from 'meteor/check';\n\nimport { API } from '../../../../app/api/server';\nimport { isDateISOString, transformDatesForAPI } from '../../lib/engagementDashboard/date';\nimport {\n\tfindWeeklyMessagesSentData,\n\tfindMessagesSentOrigin,\n\tfindTopFivePopularChannelsByMessageSentQuantity,\n} from '../../lib/engagementDashboard/messages';\n\ndeclare module '@rocket.chat/rest-typings' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface Endpoints {\n\t\t'/v1/engagement-dashboard/messages/origin': {\n\t\t\tGET: (params: { start: string; end: string }) => {\n\t\t\t\torigins: {\n\t\t\t\t\tt: IRoom['t'];\n\t\t\t\t\tmessages: number;\n\t\t\t\t}[];\n\t\t\t};\n\t\t};\n\t\t'/v1/engagement-dashboard/messages/top-five-popular-channels': {\n\t\t\tGET: (params: { start: string; end: string }) => {\n\t\t\t\tchannels: {\n\t\t\t\t\tt: IRoom['t'];\n\t\t\t\t\tmessages: number;\n\t\t\t\t\tname: IRoom['name'] | IRoom['fname'];\n\t\t\t\t\tusernames?: IDirectMessageRoom['usernames'];\n\t\t\t\t}[];\n\t\t\t};\n\t\t};\n\t\t'/v1/engagement-dashboard/messages/messages-sent': {\n\t\t\tGET: (params: { start: string; end: string }) => {\n\t\t\t\tdays: { day: Date; messages: number }[];\n\t\t\t\tperiod: {\n\t\t\t\t\tcount: number;\n\t\t\t\t\tvariation: number;\n\t\t\t\t};\n\t\t\t\tyesterday: {\n\t\t\t\t\tcount: number;\n\t\t\t\t\tvariation: number;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t}\n}\n\nAPI.v1.addRoute(\n\t'engagement-dashboard/messages/messages-sent',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-engagement-dashboard'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tstart: Match.Where(isDateISOString),\n\t\t\t\t\tend: Match.Where(isDateISOString),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { start, end } = this.queryParams;\n\n\t\t\tconst data = await findWeeklyMessagesSentData(transformDatesForAPI(start, end));\n\t\t\treturn API.v1.success(data);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'engagement-dashboard/messages/origin',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-engagement-dashboard'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tstart: Match.Where(isDateISOString),\n\t\t\t\t\tend: Match.Where(isDateISOString),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { start, end } = this.queryParams;\n\n\t\t\tconst data = await findMessagesSentOrigin(transformDatesForAPI(start, end));\n\t\t\treturn API.v1.success(data);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'engagement-dashboard/messages/top-five-popular-channels',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-engagement-dashboard'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tstart: Match.Where(isDateISOString),\n\t\t\t\t\tend: Match.Where(isDateISOString),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { start, end } = this.queryParams;\n\n\t\t\tconst data = await findTopFivePopularChannelsByMessageSentQuantity(transformDatesForAPI(start, end));\n\t\t\treturn API.v1.success(data);\n\t\t},\n\t},\n);\n"],"mappings":";;;IACA,IAAAA,KAAS,EAAAC,KAAK;IAAEC,MAAK,CAAEC,IAAA,eAAM,EAAc;MAACH,MAAAI,CAAA;QAAAJ,KAAA,GAAAI,CAAA;MAAA;MAAAH,MAAAG,CAAA;QAAAH,KAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,GAAA;IAAAH,MAAA,CAAAC,IAAA;MAAAE,IAAAD,CAAA;QAAAC,GAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,eAAA,EAAAC,oBAAA;IAAAL,MAAA,CAAAC,IAAA;MAAAG,gBAAAF,CAAA;QAAAE,eAAA,GAAAF,CAAA;MAAA;MAAAG,qBAAAH,CAAA;QAAAG,oBAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,0BAAA,EAAAC,sBAAA,EAAAC,+CAAA;IAAAR,MAAA,CAAAC,IAAA;MAAAK,2BAAAJ,CAAA;QAAAI,0BAAA,GAAAJ,CAAA;MAAA;MAAAK,uBAAAL,CAAA;QAAAK,sBAAA,GAAAL,CAAA;MAAA;MAAAM,gDAAAN,CAAA;QAAAM,+CAAA,GAAAN,CAAA;MAAA;IAAA;IAAA,IAAAO,oBAAA,WAAAA,oBAAA;IA+C5CN,GAAG,CAACO,EAAE,CAACC,QAAQ,CACd,6CAA6C,EAC7C;MACCC,YAAY,EAAE,IAAI;MAClBC,mBAAmB,EAAE,CAAC,2BAA2B;KACjD,EACD;MACC,MAAMC,GAAGA,CAAA;QACRhB,KAAK,CACJ,IAAI,CAACiB,WAAW,EAChBhB,KAAK,CAACiB,eAAe,CAAC;UACrBC,KAAK,EAAElB,KAAK,CAACmB,KAAK,CAACd,eAAe,CAAC;UACnCe,GAAG,EAAEpB,KAAK,CAACmB,KAAK,CAACd,eAAe;SAChC,CAAC,CACF;QAED,MAAM;UAAEa,KAAK;UAAEE;QAAG,CAAE,GAAG,IAAI,CAACJ,WAAW;QAEvC,MAAMK,IAAI,GAAG,MAAMd,0BAA0B,CAACD,oBAAoB,CAACY,KAAK,EAAEE,GAAG,CAAC,CAAC;QAC/E,OAAOhB,GAAG,CAACO,EAAE,CAACW,OAAO,CAACD,IAAI,CAAC;MAC5B;KACA,CACD;IAEDjB,GAAG,CAACO,EAAE,CAACC,QAAQ,CACd,sCAAsC,EACtC;MACCC,YAAY,EAAE,IAAI;MAClBC,mBAAmB,EAAE,CAAC,2BAA2B;KACjD,EACD;MACC,MAAMC,GAAGA,CAAA;QACRhB,KAAK,CACJ,IAAI,CAACiB,WAAW,EAChBhB,KAAK,CAACiB,eAAe,CAAC;UACrBC,KAAK,EAAElB,KAAK,CAACmB,KAAK,CAACd,eAAe,CAAC;UACnCe,GAAG,EAAEpB,KAAK,CAACmB,KAAK,CAACd,eAAe;SAChC,CAAC,CACF;QAED,MAAM;UAAEa,KAAK;UAAEE;QAAG,CAAE,GAAG,IAAI,CAACJ,WAAW;QAEvC,MAAMK,IAAI,GAAG,MAAMb,sBAAsB,CAACF,oBAAoB,CAACY,KAAK,EAAEE,GAAG,CAAC,CAAC;QAC3E,OAAOhB,GAAG,CAACO,EAAE,CAACW,OAAO,CAACD,IAAI,CAAC;MAC5B;KACA,CACD;IAEDjB,GAAG,CAACO,EAAE,CAACC,QAAQ,CACd,yDAAyD,EACzD;MACCC,YAAY,EAAE,IAAI;MAClBC,mBAAmB,EAAE,CAAC,2BAA2B;KACjD,EACD;MACC,MAAMC,GAAGA,CAAA;QACRhB,KAAK,CACJ,IAAI,CAACiB,WAAW,EAChBhB,KAAK,CAACiB,eAAe,CAAC;UACrBC,KAAK,EAAElB,KAAK,CAACmB,KAAK,CAACd,eAAe,CAAC;UACnCe,GAAG,EAAEpB,KAAK,CAACmB,KAAK,CAACd,eAAe;SAChC,CAAC,CACF;QAED,MAAM;UAAEa,KAAK;UAAEE;QAAG,CAAE,GAAG,IAAI,CAACJ,WAAW;QAEvC,MAAMK,IAAI,GAAG,MAAMZ,+CAA+C,CAACH,oBAAoB,CAACY,KAAK,EAAEE,GAAG,CAAC,CAAC;QACpG,OAAOhB,GAAG,CAACO,EAAE,CAACW,OAAO,CAACD,IAAI,CAAC;MAC5B;KACA,CACD;IAACE,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"14de22fb2d7f1bbdee13a486d4015e751b01b1fa"}
