{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/realTimeMonitoring/charts/ChatsChart.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/omnichannel/realTimeMonitoring/charts/ChatsChart.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/realTimeMonitoring/charts/ChatsChart.tsx","inputSourceMap":{"version":3,"file":"client/views/omnichannel/realTimeMonitoring/charts/ChatsChart.tsx","sourceRoot":"","sources":["client/views/omnichannel/realTimeMonitoring/charts/ChatsChart.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { Box } from '@rocket.chat/fuselage';\nimport type { OperationParams } from '@rocket.chat/rest-typings';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport type * as chartjs from 'chart.js';\nimport type { TFunction } from 'i18next';\nimport type { ComponentPropsWithoutRef, MutableRefObject } from 'react';\nimport React, { useRef, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { drawDoughnutChart } from '../../../../../app/livechat/client/lib/chartHandler';\nimport { AsyncStatePhase } from '../../../../hooks/useAsyncState';\nimport { useEndpointData } from '../../../../hooks/useEndpointData';\nimport Chart from './Chart';\nimport { useUpdateChartData } from './useUpdateChartData';\n\nconst labels = ['Open', 'Queued', 'On_Hold_Chats', 'Closed'];\n\nconst initialData = {\n\topen: 0,\n\tqueued: 0,\n\tonhold: 0,\n\tclosed: 0,\n};\n\nconst init = (canvas: HTMLCanvasElement, context: chartjs.Chart<'doughnut'> | undefined, t: TFunction) =>\n\tdrawDoughnutChart(\n\t\tcanvas,\n\t\tt('Chats'),\n\t\tcontext,\n\t\tlabels.map((l) => t(l as TranslationKey)),\n\t\tObject.values(initialData),\n\t);\n\ntype ChatsChartProps = {\n\tparams: OperationParams<'GET', '/v1/livechat/analytics/dashboards/charts/chats'>;\n\treloadRef: MutableRefObject<{ [x: string]: () => void }>;\n} & Omit<ComponentPropsWithoutRef<typeof Box>, 'data'>;\n\nconst ChatsChart = ({ params, reloadRef, ...props }: ChatsChartProps) => {\n\tconst { t } = useTranslation();\n\n\tconst canvas: MutableRefObject<HTMLCanvasElement | null> = useRef(null);\n\tconst context: MutableRefObject<chartjs.Chart<'doughnut'> | undefined> = useRef();\n\n\tconst updateChartData = useUpdateChartData({\n\t\tcontext,\n\t\tcanvas,\n\t\tt,\n\t\tinit,\n\t});\n\n\tconst { value: data, phase: state, reload } = useEndpointData('/v1/livechat/analytics/dashboards/charts/chats', { params });\n\n\treloadRef.current.chatsChart = reload;\n\n\tconst { open, queued, closed, onhold } = data ?? initialData;\n\n\tuseEffect(() => {\n\t\tconst initChart = async () => {\n\t\t\tif (!canvas.current) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontext.current = await init(canvas.current, context.current, t);\n\t\t};\n\t\tinitChart();\n\t}, [t]);\n\n\tuseEffect(() => {\n\t\tif (state === AsyncStatePhase.RESOLVED) {\n\t\t\tupdateChartData(t('Open'), [open]);\n\t\t\tupdateChartData(t('Closed'), [closed]);\n\t\t\tupdateChartData(t('On_Hold_Chats'), [onhold]);\n\t\t\tupdateChartData(t('Queued'), [queued]);\n\t\t}\n\t}, [closed, open, queued, onhold, state, t, updateChartData]);\n\n\treturn <Chart canvasRef={canvas} {...props} />;\n};\n\nexport default ChatsChart;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/realTimeMonitoring/charts/ChatsChart.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/omnichannel/realTimeMonitoring/charts/ChatsChart.tsx","inputSourceMap":{"version":3,"file":"client/views/omnichannel/realTimeMonitoring/charts/ChatsChart.tsx","sourceRoot":"","sources":["client/views/omnichannel/realTimeMonitoring/charts/ChatsChart.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { Box } from '@rocket.chat/fuselage';\nimport type { OperationParams } from '@rocket.chat/rest-typings';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport type * as chartjs from 'chart.js';\nimport type { TFunction } from 'i18next';\nimport type { ComponentPropsWithoutRef, MutableRefObject } from 'react';\nimport React, { useRef, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { drawDoughnutChart } from '../../../../../app/livechat/client/lib/chartHandler';\nimport { AsyncStatePhase } from '../../../../hooks/useAsyncState';\nimport { useEndpointData } from '../../../../hooks/useEndpointData';\nimport Chart from './Chart';\nimport { useUpdateChartData } from './useUpdateChartData';\n\nconst labels = ['Open', 'Queued', 'On_Hold_Chats', 'Closed'];\n\nconst initialData = {\n\topen: 0,\n\tqueued: 0,\n\tonhold: 0,\n\tclosed: 0,\n};\n\nconst init = (canvas: HTMLCanvasElement, context: chartjs.Chart<'doughnut'> | undefined, t: TFunction) =>\n\tdrawDoughnutChart(\n\t\tcanvas,\n\t\tt('Chats'),\n\t\tcontext,\n\t\tlabels.map((l) => t(l as TranslationKey)),\n\t\tObject.values(initialData),\n\t);\n\ntype ChatsChartProps = {\n\tparams: OperationParams<'GET', '/v1/livechat/analytics/dashboards/charts/chats'>;\n\treloadRef: MutableRefObject<{ [x: string]: () => void }>;\n} & Omit<ComponentPropsWithoutRef<typeof Box>, 'data'>;\n\nconst ChatsChart = ({ params, reloadRef, ...props }: ChatsChartProps) => {\n\tconst { t } = useTranslation();\n\n\tconst canvas: MutableRefObject<HTMLCanvasElement | null> = useRef(null);\n\tconst context: MutableRefObject<chartjs.Chart<'doughnut'> | undefined> = useRef();\n\n\tconst updateChartData = useUpdateChartData({\n\t\tcontext,\n\t\tcanvas,\n\t\tt,\n\t\tinit,\n\t});\n\n\tconst { value: data, phase: state, reload } = useEndpointData('/v1/livechat/analytics/dashboards/charts/chats', { params });\n\n\treloadRef.current.chatsChart = reload;\n\n\tconst { open, queued, closed, onhold } = data ?? initialData;\n\n\tuseEffect(() => {\n\t\tconst initChart = async () => {\n\t\t\tif (!canvas.current) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontext.current = await init(canvas.current, context.current, t);\n\t\t};\n\t\tinitChart();\n\t}, [t]);\n\n\tuseEffect(() => {\n\t\tif (state === AsyncStatePhase.RESOLVED) {\n\t\t\tupdateChartData(t('Open'), [open]);\n\t\t\tupdateChartData(t('Closed'), [closed]);\n\t\t\tupdateChartData(t('On_Hold_Chats'), [onhold]);\n\t\t\tupdateChartData(t('Queued'), [queued]);\n\t\t}\n\t}, [closed, open, queued, onhold, state, t, updateChartData]);\n\n\treturn <Chart canvasRef={canvas} {...props} />;\n};\n\nexport default ChatsChart;\n"]}}},"code":"const _excluded = [\"params\", \"reloadRef\"];\nlet _extends;\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n}, 0);\nlet _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n}, 1);\nlet React, useRef, useEffect;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useRef(v) {\n    useRef = v;\n  },\n  useEffect(v) {\n    useEffect = v;\n  }\n}, 0);\nlet useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 1);\nlet drawDoughnutChart;\nmodule.link(\"../../../../../app/livechat/client/lib/chartHandler\", {\n  drawDoughnutChart(v) {\n    drawDoughnutChart = v;\n  }\n}, 2);\nlet AsyncStatePhase;\nmodule.link(\"../../../../hooks/useAsyncState\", {\n  AsyncStatePhase(v) {\n    AsyncStatePhase = v;\n  }\n}, 3);\nlet useEndpointData;\nmodule.link(\"../../../../hooks/useEndpointData\", {\n  useEndpointData(v) {\n    useEndpointData = v;\n  }\n}, 4);\nlet Chart;\nmodule.link(\"./Chart\", {\n  default(v) {\n    Chart = v;\n  }\n}, 5);\nlet useUpdateChartData;\nmodule.link(\"./useUpdateChartData\", {\n  useUpdateChartData(v) {\n    useUpdateChartData = v;\n  }\n}, 6);\nconst labels = ['Open', 'Queued', 'On_Hold_Chats', 'Closed'];\nconst initialData = {\n  open: 0,\n  queued: 0,\n  onhold: 0,\n  closed: 0\n};\nconst init = (canvas, context, t) => drawDoughnutChart(canvas, t('Chats'), context, labels.map(l => t(l)), Object.values(initialData));\nconst ChatsChart = _ref => {\n  let {\n      params,\n      reloadRef\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const {\n    t\n  } = useTranslation();\n  const canvas = useRef(null);\n  const context = useRef();\n  const updateChartData = useUpdateChartData({\n    context,\n    canvas,\n    t,\n    init\n  });\n  const {\n    value: data,\n    phase: state,\n    reload\n  } = useEndpointData('/v1/livechat/analytics/dashboards/charts/chats', {\n    params\n  });\n  reloadRef.current.chatsChart = reload;\n  const {\n    open,\n    queued,\n    closed,\n    onhold\n  } = data !== null && data !== void 0 ? data : initialData;\n  useEffect(() => {\n    const initChart = async () => {\n      if (!canvas.current) {\n        return;\n      }\n      context.current = await init(canvas.current, context.current, t);\n    };\n    initChart();\n  }, [t]);\n  useEffect(() => {\n    if (state === AsyncStatePhase.RESOLVED) {\n      updateChartData(t('Open'), [open]);\n      updateChartData(t('Closed'), [closed]);\n      updateChartData(t('On_Hold_Chats'), [onhold]);\n      updateChartData(t('Queued'), [queued]);\n    }\n  }, [closed, open, queued, onhold, state, t, updateChartData]);\n  return /*#__PURE__*/React.createElement(Chart, _extends({\n    canvasRef: canvas\n  }, props));\n};\nmodule.exportDefault(ChatsChart);","map":{"version":3,"names":["_extends","module","link","default","v","_objectWithoutProperties","React","useRef","useEffect","useTranslation","drawDoughnutChart","AsyncStatePhase","useEndpointData","Chart","useUpdateChartData","labels","initialData","open","queued","onhold","closed","init","canvas","context","t","map","l","Object","values","ChatsChart","_ref","params","reloadRef","props","_excluded","updateChartData","value","data","phase","state","reload","current","chatsChart","initChart","RESOLVED","createElement","canvasRef","exportDefault"],"sources":["client/views/omnichannel/realTimeMonitoring/charts/ChatsChart.tsx"],"sourcesContent":["import type { Box } from '@rocket.chat/fuselage';\nimport type { OperationParams } from '@rocket.chat/rest-typings';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport type * as chartjs from 'chart.js';\nimport type { TFunction } from 'i18next';\nimport type { ComponentPropsWithoutRef, MutableRefObject } from 'react';\nimport React, { useRef, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { drawDoughnutChart } from '../../../../../app/livechat/client/lib/chartHandler';\nimport { AsyncStatePhase } from '../../../../hooks/useAsyncState';\nimport { useEndpointData } from '../../../../hooks/useEndpointData';\nimport Chart from './Chart';\nimport { useUpdateChartData } from './useUpdateChartData';\n\nconst labels = ['Open', 'Queued', 'On_Hold_Chats', 'Closed'];\n\nconst initialData = {\n\topen: 0,\n\tqueued: 0,\n\tonhold: 0,\n\tclosed: 0,\n};\n\nconst init = (canvas: HTMLCanvasElement, context: chartjs.Chart<'doughnut'> | undefined, t: TFunction) =>\n\tdrawDoughnutChart(\n\t\tcanvas,\n\t\tt('Chats'),\n\t\tcontext,\n\t\tlabels.map((l) => t(l as TranslationKey)),\n\t\tObject.values(initialData),\n\t);\n\ntype ChatsChartProps = {\n\tparams: OperationParams<'GET', '/v1/livechat/analytics/dashboards/charts/chats'>;\n\treloadRef: MutableRefObject<{ [x: string]: () => void }>;\n} & Omit<ComponentPropsWithoutRef<typeof Box>, 'data'>;\n\nconst ChatsChart = ({ params, reloadRef, ...props }: ChatsChartProps) => {\n\tconst { t } = useTranslation();\n\n\tconst canvas: MutableRefObject<HTMLCanvasElement | null> = useRef(null);\n\tconst context: MutableRefObject<chartjs.Chart<'doughnut'> | undefined> = useRef();\n\n\tconst updateChartData = useUpdateChartData({\n\t\tcontext,\n\t\tcanvas,\n\t\tt,\n\t\tinit,\n\t});\n\n\tconst { value: data, phase: state, reload } = useEndpointData('/v1/livechat/analytics/dashboards/charts/chats', { params });\n\n\treloadRef.current.chatsChart = reload;\n\n\tconst { open, queued, closed, onhold } = data ?? initialData;\n\n\tuseEffect(() => {\n\t\tconst initChart = async () => {\n\t\t\tif (!canvas.current) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontext.current = await init(canvas.current, context.current, t);\n\t\t};\n\t\tinitChart();\n\t}, [t]);\n\n\tuseEffect(() => {\n\t\tif (state === AsyncStatePhase.RESOLVED) {\n\t\t\tupdateChartData(t('Open'), [open]);\n\t\t\tupdateChartData(t('Closed'), [closed]);\n\t\t\tupdateChartData(t('On_Hold_Chats'), [onhold]);\n\t\t\tupdateChartData(t('Queued'), [queued]);\n\t\t}\n\t}, [closed, open, queued, onhold, state, t, updateChartData]);\n\n\treturn <Chart canvasRef={canvas} {...props} />;\n};\n\nexport default ChatsChart;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"77222ffc4012b293f8fd9a36404aa75d7202aae8"}
