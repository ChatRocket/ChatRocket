{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/markdown/lib/parser/original/token.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/markdown/lib/parser/original/token.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/markdown/lib/parser/original/token.ts","inputSourceMap":{"version":3,"file":"app/markdown/lib/parser/original/token.ts","sourceRoot":"","sources":["app/markdown/lib/parser/original/token.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAE7C,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,OAAiB,EAAE,IAAY,EAAE,IAAe,EAAE,KAAkB,EAAU,EAAE;IAC1G,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QACrB,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IACD,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC;IACrC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;QACnB,KAAK;QACL,IAAI;QACJ,IAAI,EAAE,IAAI;QACV,GAAG,CAAC,KAAK,IAAI,EAAE,GAAG,KAAK,EAAE,CAAC;KAC1B,CAAC,CAAC;IAEH,OAAO,KAAK,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,GAAW,EAAW,EAAE,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAE3F,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,OAAiB,EAAE,EAAU,EAAE,aAA0B,EAAW,EAAE;IAC3G,MAAM,MAAM,GAAa,EAAE,CAAC,KAAK,CAAC,wBAAwB,CAAC,IAAI,EAAE,CAAC;IAClE,MAAM,WAAW,GAAG,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;IACxF,OAAO,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AACnH,CAAC,CAAC","sourcesContent":["/*\n * Markdown is a named function that will parse markdown syntax\n * @param {String} msg - The message html\n */\nimport type { IMessage, TokenType, TokenExtra } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\n\nexport const addAsToken = (message: IMessage, html: string, type: TokenType, extra?: TokenExtra): string => {\n\tif (!message.tokens) {\n\t\tmessage.tokens = [];\n\t}\n\tconst token = `=!=${Random.id()}=!=`;\n\tmessage.tokens.push({\n\t\ttoken,\n\t\ttype,\n\t\ttext: html,\n\t\t...(extra && { ...extra }),\n\t});\n\n\treturn token;\n};\n\nexport const isToken = (msg: string): boolean => /=!=[.a-z0-9]{17}=!=/gim.test(msg.trim());\n\nexport const validateAllowedTokens = (message: IMessage, id: string, desiredTokens: TokenType[]): boolean => {\n\tconst tokens: string[] = id.match(/=!=[.a-z0-9]{17}=!=/gim) || [];\n\tconst tokensFound = message.tokens?.filter(({ token }) => tokens.includes(token)) || [];\n\treturn tokensFound.length === 0 || tokensFound.every((token) => token.type && desiredTokens.includes(token.type));\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/markdown/lib/parser/original/token.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/markdown/lib/parser/original/token.ts","inputSourceMap":{"version":3,"file":"app/markdown/lib/parser/original/token.ts","sourceRoot":"","sources":["app/markdown/lib/parser/original/token.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAE7C,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,OAAiB,EAAE,IAAY,EAAE,IAAe,EAAE,KAAkB,EAAU,EAAE;IAC1G,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QACrB,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IACD,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC;IACrC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;QACnB,KAAK;QACL,IAAI;QACJ,IAAI,EAAE,IAAI;QACV,GAAG,CAAC,KAAK,IAAI,EAAE,GAAG,KAAK,EAAE,CAAC;KAC1B,CAAC,CAAC;IAEH,OAAO,KAAK,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,GAAW,EAAW,EAAE,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAE3F,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,OAAiB,EAAE,EAAU,EAAE,aAA0B,EAAW,EAAE;IAC3G,MAAM,MAAM,GAAa,EAAE,CAAC,KAAK,CAAC,wBAAwB,CAAC,IAAI,EAAE,CAAC;IAClE,MAAM,WAAW,GAAG,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;IACxF,OAAO,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AACnH,CAAC,CAAC","sourcesContent":["/*\n * Markdown is a named function that will parse markdown syntax\n * @param {String} msg - The message html\n */\nimport type { IMessage, TokenType, TokenExtra } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\n\nexport const addAsToken = (message: IMessage, html: string, type: TokenType, extra?: TokenExtra): string => {\n\tif (!message.tokens) {\n\t\tmessage.tokens = [];\n\t}\n\tconst token = `=!=${Random.id()}=!=`;\n\tmessage.tokens.push({\n\t\ttoken,\n\t\ttype,\n\t\ttext: html,\n\t\t...(extra && { ...extra }),\n\t});\n\n\treturn token;\n};\n\nexport const isToken = (msg: string): boolean => /=!=[.a-z0-9]{17}=!=/gim.test(msg.trim());\n\nexport const validateAllowedTokens = (message: IMessage, id: string, desiredTokens: TokenType[]): boolean => {\n\tconst tokens: string[] = id.match(/=!=[.a-z0-9]{17}=!=/gim) || [];\n\tconst tokensFound = message.tokens?.filter(({ token }) => tokens.includes(token)) || [];\n\treturn tokensFound.length === 0 || tokensFound.every((token) => token.type && desiredTokens.includes(token.type));\n};\n"]}}},"code":"var _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  addAsToken: function () {\n    return addAsToken;\n  },\n  isToken: function () {\n    return isToken;\n  },\n  validateAllowedTokens: function () {\n    return validateAllowedTokens;\n  }\n});\nvar Random;\nmodule.link(\"@rocket.chat/random\", {\n  Random: function (v) {\n    Random = v;\n  }\n}, 0);\nvar addAsToken = function (message, html, type, extra) {\n  if (!message.tokens) {\n    message.tokens = [];\n  }\n  var token = \"=!=\" + Random.id() + \"=!=\";\n  message.tokens.push(_objectSpread({\n    token: token,\n    type: type,\n    text: html\n  }, extra && _objectSpread({}, extra)));\n  return token;\n};\nvar isToken = function (msg) {\n  return /=!=[.a-z0-9]{17}=!=/gim.test(msg.trim());\n};\nvar validateAllowedTokens = function (message, id, desiredTokens) {\n  var _message$tokens;\n  var tokens = id.match(/=!=[.a-z0-9]{17}=!=/gim) || [];\n  var tokensFound = ((_message$tokens = message.tokens) === null || _message$tokens === void 0 ? void 0 : _message$tokens.filter(function (_ref) {\n    var token = _ref.token;\n    return tokens.includes(token);\n  })) || [];\n  return tokensFound.length === 0 || tokensFound.every(function (token) {\n    return token.type && desiredTokens.includes(token.type);\n  });\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","addAsToken","isToken","validateAllowedTokens","Random","message","html","type","extra","tokens","token","id","push","text","msg","test","trim","desiredTokens","_message$tokens","match","tokensFound","filter","_ref","includes","length","every"],"sources":["app/markdown/lib/parser/original/token.ts"],"sourcesContent":["/*\n * Markdown is a named function that will parse markdown syntax\n * @param {String} msg - The message html\n */\nimport type { IMessage, TokenType, TokenExtra } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\n\nexport const addAsToken = (message: IMessage, html: string, type: TokenType, extra?: TokenExtra): string => {\n\tif (!message.tokens) {\n\t\tmessage.tokens = [];\n\t}\n\tconst token = `=!=${Random.id()}=!=`;\n\tmessage.tokens.push({\n\t\ttoken,\n\t\ttype,\n\t\ttext: html,\n\t\t...(extra && { ...extra }),\n\t});\n\n\treturn token;\n};\n\nexport const isToken = (msg: string): boolean => /=!=[.a-z0-9]{17}=!=/gim.test(msg.trim());\n\nexport const validateAllowedTokens = (message: IMessage, id: string, desiredTokens: TokenType[]): boolean => {\n\tconst tokens: string[] = id.match(/=!=[.a-z0-9]{17}=!=/gim) || [];\n\tconst tokensFound = message.tokens?.filter(({ token }) => tokens.includes(token)) || [];\n\treturn tokensFound.length === 0 || tokensFound.every((token) => token.type && desiredTokens.includes(token.type));\n};\n"],"mappings":"AAKA,IAAAA,aAAiB;AAAAC,MAAM,CAAAC,IAAA,uCAAsB;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAJ,aAAA,GAAAI,CAAA;EAAA;AAAA;AAA7CH,MAAA,CAAOI,MAAE;EAAMC,UAAQ,WAAAA,CAAA;IAAA,OAAqBA,UAAC;EAAA;EAAAC,OAAA,WAAAA,CAAA;IAAA,OAAAA,OAAA;EAAA;EAAAC,qBAAA,WAAAA,CAAA;IAAA,OAAAA,qBAAA;EAAA;AAAA;AAAA,IAAAC,MAAA;AAAAR,MAAA,CAAAC,IAAA;EAAAO,MAAA,WAAAA,CAAAL,CAAA;IAAAK,MAAA,GAAAL,CAAA;EAAA;AAAA;AAEtC,IAAME,UAAU,GAAG,SAAAA,CAACI,OAAiB,EAAEC,IAAY,EAAEC,IAAe,EAAEC,KAAkB,EAAY;EAC1G,IAAI,CAACH,OAAO,CAACI,MAAM,EAAE;IACpBJ,OAAO,CAACI,MAAM,GAAG,EAAE;EACpB;EACA,IAAMC,KAAK,WAASN,MAAM,CAACO,EAAE,EAAE,QAAK;EACpCN,OAAO,CAACI,MAAM,CAACG,IAAI,CAAAjB,aAAA;IAClBe,KAAK,EAALA,KAAK;IACLH,IAAI,EAAJA,IAAI;IACJM,IAAI,EAAEP;EAAI,GACNE,KAAK,IAAAb,aAAA,KAASa,KAAK,CAAE,CACzB,CAAC;EAEF,OAAOE,KAAK;AACb,CAAC;AAEM,IAAMR,OAAO,GAAG,SAAAA,CAACY,GAAW;EAAA,OAAc,wBAAwB,CAACC,IAAI,CAACD,GAAG,CAACE,IAAI,EAAE,CAAC;AAAA;AAEnF,IAAMb,qBAAqB,GAAG,SAAAA,CAACE,OAAiB,EAAEM,EAAU,EAAEM,aAA0B,EAAa;EAAA,IAAAC,eAAA;EAC3G,IAAMT,MAAM,GAAaE,EAAE,CAACQ,KAAK,CAAC,wBAAwB,CAAC,IAAI,EAAE;EACjE,IAAMC,WAAW,GAAG,EAAAF,eAAA,GAAAb,OAAO,CAACI,MAAM,cAAAS,eAAA,uBAAdA,eAAA,CAAgBG,MAAM,CAAC,UAAAC,IAAA;IAAA,IAAGZ,KAAK,GAAAY,IAAA,CAALZ,KAAK;IAAA,OAAOD,MAAM,CAACc,QAAQ,CAACb,KAAK,CAAC;EAAA,EAAC,KAAI,EAAE;EACvF,OAAOU,WAAW,CAACI,MAAM,KAAK,CAAC,IAAIJ,WAAW,CAACK,KAAK,CAAC,UAACf,KAAK;IAAA,OAAKA,KAAK,CAACH,IAAI,IAAIU,aAAa,CAACM,QAAQ,CAACb,KAAK,CAACH,IAAI,CAAC;EAAA,EAAC;AAClH,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c4a87fe67c7a70a7a27d38bdcd48ed2356961cda"}
