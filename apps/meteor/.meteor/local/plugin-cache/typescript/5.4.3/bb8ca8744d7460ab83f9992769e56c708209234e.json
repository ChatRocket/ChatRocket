{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/dataExport/sendFile.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/dataExport/sendFile.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/dataExport/sendFile.ts","inputSourceMap":{"version":3,"file":"server/lib/dataExport/sendFile.ts","sourceRoot":"","sources":["server/lib/dataExport/sendFile.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAC7C,OAAO,EAAE,MAAM,EAAE,MAAM,IAAI,CAAC;AAC5B,OAAO,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,MAAM,CAAC;AAIlC,OAAO,EAAE,MAAM,EAAE,MAAM,kCAAkC,CAAC;AAC1D,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC;AAC/B,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACtE,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAC5C,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAC5C,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAShD,MAAM,CAAC,MAAM,QAAQ,GAAG,KAAK,EAAE,IAAgB,EAAE,IAAW,EAAiB,EAAE;IAC9E,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;IAE/B,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC;IAE7D,MAAM,UAAU,GAAG,OAAO,CAAC;IAC3B,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAEhD,MAAM,KAAK,CAAC,UAAU,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAC7C,MAAM,KAAK,CAAC,UAAU,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAE7C,MAAM,QAAQ,GAAG,MAAM,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAE7C,QAAQ,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,KAAK,MAAM,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;IAE3G,MAAM,YAAY,GAAU,EAAE,CAAC;IAE/B,MAAM,aAAa,GAAG,CAAC,QAAQ,CAAC,CAAC;IAEjC,MAAM,MAAM,GACX,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM;QAC7B,CAAC,CAAC,EAAE;QACJ,CAAC,CAAC;YACA,EAAE,EAAE;gBACH,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC7C,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;aACzC;SACA,CAAC;IAEN,MAAM,cAAc,GAAG,KAAK,IAAmB,EAAE;QAChD,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,wBAAwB,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAEhI,YAAY,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;QAE/B,MAAM,CAAC,QAAQ,CAAC,GAAG,aAAa,CAAC;QAEjC,IAAI,QAAQ,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;YACrC,MAAM,cAAc,EAAE,CAAC;QACxB,CAAC;IACF,CAAC,CAAC;IAEF,MAAM,cAAc,EAAE,CAAC;IAEvB,MAAM,QAAQ,GAAoB,EAAE,CAAC;IACrC,IAAI,KAAK,EAAE,MAAM,cAAc,IAAI,YAAY,EAAE,CAAC;QACjD,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC,CAAC;IAC3D,CAAC;IACD,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAE5B,MAAM,UAAU,GAAG,GAAG,OAAO,aAAa,CAAC;IAC3C,MAAM,WAAW,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IAE1C,MAAM,IAAI,GAAG,MAAM,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IAEnE,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;IAEzC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,4BAA4B,EAAE;QACjD,aAAa,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;KACpE,CAAC,CAAC;IAEH,MAAM,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AACtC,CAAC,CAAC","sourcesContent":["import { mkdir, mkdtemp } from 'fs/promises';\nimport { tmpdir } from 'os';\nimport path, { join } from 'path';\n\nimport type { IUser } from '@rocket.chat/core-typings';\n\nimport { getURL } from '../../../app/utils/server/getURL';\nimport { i18n } from '../i18n';\nimport { copyFileUpload } from './copyFileUpload';\nimport { exportRoomMessagesToFile } from './exportRoomMessagesToFile';\nimport { getPath } from './getPath';\nimport { getRoomData } from './getRoomData';\nimport { makeZipFile } from './makeZipFile';\nimport { sendEmail } from './sendEmail';\nimport { uploadZipFile } from './uploadZipFile';\n\ntype ExportFile = {\n\trid: string;\n\tdateFrom: Date;\n\tdateTo: Date;\n\tformat: 'html' | 'json';\n};\n\nexport const sendFile = async (data: ExportFile, user: IUser): Promise<void> => {\n\tconst exportType = data.format;\n\n\tconst baseDir = await mkdtemp(join(tmpdir(), 'exportFile-'));\n\n\tconst exportPath = baseDir;\n\tconst assetsPath = path.join(baseDir, 'assets');\n\n\tawait mkdir(exportPath, { recursive: true });\n\tawait mkdir(assetsPath, { recursive: true });\n\n\tconst roomData = await getRoomData(data.rid);\n\n\troomData.targetFile = `${(data.format === 'json' && roomData.roomName) || roomData.roomId}.${data.format}`;\n\n\tconst fullFileList: any[] = [];\n\n\tconst roomsToExport = [roomData];\n\n\tconst filter =\n\t\t!data.dateFrom && !data.dateTo\n\t\t\t? {}\n\t\t\t: {\n\t\t\t\t\tts: {\n\t\t\t\t\t\t...(data.dateFrom && { $gte: data.dateFrom }),\n\t\t\t\t\t\t...(data.dateTo && { $lte: data.dateTo }),\n\t\t\t\t\t},\n\t\t\t  };\n\n\tconst exportMessages = async (): Promise<void> => {\n\t\tconst { fileList } = await exportRoomMessagesToFile(exportPath, assetsPath, exportType, roomsToExport, user, filter, {}, false);\n\n\t\tfullFileList.push(...fileList);\n\n\t\tconst [roomData] = roomsToExport;\n\n\t\tif (roomData.status !== 'completed') {\n\t\t\tawait exportMessages();\n\t\t}\n\t};\n\n\tawait exportMessages();\n\n\tconst promises: Promise<void>[] = [];\n\tfor await (const attachmentData of fullFileList) {\n\t\tpromises.push(copyFileUpload(attachmentData, assetsPath));\n\t}\n\tawait Promise.all(promises);\n\n\tconst exportFile = `${baseDir}-export.zip`;\n\tawait makeZipFile(exportPath, exportFile);\n\n\tconst file = await uploadZipFile(exportFile, user._id, exportType);\n\n\tconst subject = i18n.t('Channel_Export');\n\n\tconst body = i18n.t('UserDataDownload_EmailBody', {\n\t\tdownload_link: getURL(getPath(file._id), { cdn: false, full: true }),\n\t});\n\n\tawait sendEmail(user, subject, body);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/dataExport/sendFile.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/dataExport/sendFile.ts","inputSourceMap":{"version":3,"file":"server/lib/dataExport/sendFile.ts","sourceRoot":"","sources":["server/lib/dataExport/sendFile.ts"],"names":[],"mappings":"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","sourcesContent":["import { mkdir, mkdtemp } from 'fs/promises';\nimport { tmpdir } from 'os';\nimport path, { join } from 'path';\n\nimport type { IUser } from '@rocket.chat/core-typings';\n\nimport { getURL } from '../../../app/utils/server/getURL';\nimport { i18n } from '../i18n';\nimport { copyFileUpload } from './copyFileUpload';\nimport { exportRoomMessagesToFile } from './exportRoomMessagesToFile';\nimport { getPath } from './getPath';\nimport { getRoomData } from './getRoomData';\nimport { makeZipFile } from './makeZipFile';\nimport { sendEmail } from './sendEmail';\nimport { uploadZipFile } from './uploadZipFile';\n\ntype ExportFile = {\n\trid: string;\n\tdateFrom: Date;\n\tdateTo: Date;\n\tformat: 'html' | 'json';\n};\n\nexport const sendFile = async (data: ExportFile, user: IUser): Promise<void> => {\n\tconst exportType = data.format;\n\n\tconst baseDir = await mkdtemp(join(tmpdir(), 'exportFile-'));\n\n\tconst exportPath = baseDir;\n\tconst assetsPath = path.join(baseDir, 'assets');\n\n\tawait mkdir(exportPath, { recursive: true });\n\tawait mkdir(assetsPath, { recursive: true });\n\n\tconst roomData = await getRoomData(data.rid);\n\n\troomData.targetFile = `${(data.format === 'json' && roomData.roomName) || roomData.roomId}.${data.format}`;\n\n\tconst fullFileList: any[] = [];\n\n\tconst roomsToExport = [roomData];\n\n\tconst filter =\n\t\t!data.dateFrom && !data.dateTo\n\t\t\t? {}\n\t\t\t: {\n\t\t\t\t\tts: {\n\t\t\t\t\t\t...(data.dateFrom && { $gte: data.dateFrom }),\n\t\t\t\t\t\t...(data.dateTo && { $lte: data.dateTo }),\n\t\t\t\t\t},\n\t\t\t  };\n\n\tconst exportMessages = async (): Promise<void> => {\n\t\tconst { fileList } = await exportRoomMessagesToFile(exportPath, assetsPath, exportType, roomsToExport, user, filter, {}, false);\n\n\t\tfullFileList.push(...fileList);\n\n\t\tconst [roomData] = roomsToExport;\n\n\t\tif (roomData.status !== 'completed') {\n\t\t\tawait exportMessages();\n\t\t}\n\t};\n\n\tawait exportMessages();\n\n\tconst promises: Promise<void>[] = [];\n\tfor await (const attachmentData of fullFileList) {\n\t\tpromises.push(copyFileUpload(attachmentData, assetsPath));\n\t}\n\tawait Promise.all(promises);\n\n\tconst exportFile = `${baseDir}-export.zip`;\n\tawait makeZipFile(exportPath, exportFile);\n\n\tconst file = await uploadZipFile(exportFile, user._id, exportType);\n\n\tconst subject = i18n.t('Channel_Export');\n\n\tconst body = i18n.t('UserDataDownload_EmailBody', {\n\t\tdownload_link: getURL(getPath(file._id), { cdn: false, full: true }),\n\t});\n\n\tawait sendEmail(user, subject, body);\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      sendFile: () => sendFile\n    });\n    let mkdir, mkdtemp;\n    module.link(\"fs/promises\", {\n      mkdir(v) {\n        mkdir = v;\n      },\n      mkdtemp(v) {\n        mkdtemp = v;\n      }\n    }, 0);\n    let tmpdir;\n    module.link(\"os\", {\n      tmpdir(v) {\n        tmpdir = v;\n      }\n    }, 1);\n    let path, join;\n    module.link(\"path\", {\n      default(v) {\n        path = v;\n      },\n      join(v) {\n        join = v;\n      }\n    }, 2);\n    let getURL;\n    module.link(\"../../../app/utils/server/getURL\", {\n      getURL(v) {\n        getURL = v;\n      }\n    }, 3);\n    let i18n;\n    module.link(\"../i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 4);\n    let copyFileUpload;\n    module.link(\"./copyFileUpload\", {\n      copyFileUpload(v) {\n        copyFileUpload = v;\n      }\n    }, 5);\n    let exportRoomMessagesToFile;\n    module.link(\"./exportRoomMessagesToFile\", {\n      exportRoomMessagesToFile(v) {\n        exportRoomMessagesToFile = v;\n      }\n    }, 6);\n    let getPath;\n    module.link(\"./getPath\", {\n      getPath(v) {\n        getPath = v;\n      }\n    }, 7);\n    let getRoomData;\n    module.link(\"./getRoomData\", {\n      getRoomData(v) {\n        getRoomData = v;\n      }\n    }, 8);\n    let makeZipFile;\n    module.link(\"./makeZipFile\", {\n      makeZipFile(v) {\n        makeZipFile = v;\n      }\n    }, 9);\n    let sendEmail;\n    module.link(\"./sendEmail\", {\n      sendEmail(v) {\n        sendEmail = v;\n      }\n    }, 10);\n    let uploadZipFile;\n    module.link(\"./uploadZipFile\", {\n      uploadZipFile(v) {\n        uploadZipFile = v;\n      }\n    }, 11);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const sendFile = async (data, user) => {\n      const exportType = data.format;\n      const baseDir = await mkdtemp(join(tmpdir(), 'exportFile-'));\n      const exportPath = baseDir;\n      const assetsPath = path.join(baseDir, 'assets');\n      await mkdir(exportPath, {\n        recursive: true\n      });\n      await mkdir(assetsPath, {\n        recursive: true\n      });\n      const roomData = await getRoomData(data.rid);\n      roomData.targetFile = \"\".concat(data.format === 'json' && roomData.roomName || roomData.roomId, \".\").concat(data.format);\n      const fullFileList = [];\n      const roomsToExport = [roomData];\n      const filter = !data.dateFrom && !data.dateTo ? {} : {\n        ts: _objectSpread(_objectSpread({}, data.dateFrom && {\n          $gte: data.dateFrom\n        }), data.dateTo && {\n          $lte: data.dateTo\n        })\n      };\n      const exportMessages = async () => {\n        const {\n          fileList\n        } = await exportRoomMessagesToFile(exportPath, assetsPath, exportType, roomsToExport, user, filter, {}, false);\n        fullFileList.push(...fileList);\n        const [roomData] = roomsToExport;\n        if (roomData.status !== 'completed') {\n          await exportMessages();\n        }\n      };\n      await exportMessages();\n      const promises = [];\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(fullFileList), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const attachmentData = _step.value;\n          {\n            promises.push(copyFileUpload(attachmentData, assetsPath));\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      await Promise.all(promises);\n      const exportFile = \"\".concat(baseDir, \"-export.zip\");\n      await makeZipFile(exportPath, exportFile);\n      const file = await uploadZipFile(exportFile, user._id, exportType);\n      const subject = i18n.t('Channel_Export');\n      const body = i18n.t('UserDataDownload_EmailBody', {\n        download_link: getURL(getPath(file._id), {\n          cdn: false,\n          full: true\n        })\n      });\n      await sendEmail(user, subject, body);\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","sendFile","mkdir","mkdtemp","tmpdir","path","join","getURL","i18n","copyFileUpload","exportRoomMessagesToFile","getPath","getRoomData","makeZipFile","sendEmail","uploadZipFile","__reifyWaitForDeps__","data","user","exportType","format","baseDir","exportPath","assetsPath","recursive","roomData","rid","targetFile","concat","roomName","roomId","fullFileList","roomsToExport","filter","dateFrom","dateTo","ts","$gte","$lte","exportMessages","fileList","push","status","promises","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","attachmentData","value","err","return","Promise","all","exportFile","file","_id","subject","t","body","download_link","cdn","full","__reify_async_result__","_reifyError","self","async"],"sources":["server/lib/dataExport/sendFile.ts"],"sourcesContent":["import { mkdir, mkdtemp } from 'fs/promises';\nimport { tmpdir } from 'os';\nimport path, { join } from 'path';\n\nimport type { IUser } from '@rocket.chat/core-typings';\n\nimport { getURL } from '../../../app/utils/server/getURL';\nimport { i18n } from '../i18n';\nimport { copyFileUpload } from './copyFileUpload';\nimport { exportRoomMessagesToFile } from './exportRoomMessagesToFile';\nimport { getPath } from './getPath';\nimport { getRoomData } from './getRoomData';\nimport { makeZipFile } from './makeZipFile';\nimport { sendEmail } from './sendEmail';\nimport { uploadZipFile } from './uploadZipFile';\n\ntype ExportFile = {\n\trid: string;\n\tdateFrom: Date;\n\tdateTo: Date;\n\tformat: 'html' | 'json';\n};\n\nexport const sendFile = async (data: ExportFile, user: IUser): Promise<void> => {\n\tconst exportType = data.format;\n\n\tconst baseDir = await mkdtemp(join(tmpdir(), 'exportFile-'));\n\n\tconst exportPath = baseDir;\n\tconst assetsPath = path.join(baseDir, 'assets');\n\n\tawait mkdir(exportPath, { recursive: true });\n\tawait mkdir(assetsPath, { recursive: true });\n\n\tconst roomData = await getRoomData(data.rid);\n\n\troomData.targetFile = `${(data.format === 'json' && roomData.roomName) || roomData.roomId}.${data.format}`;\n\n\tconst fullFileList: any[] = [];\n\n\tconst roomsToExport = [roomData];\n\n\tconst filter =\n\t\t!data.dateFrom && !data.dateTo\n\t\t\t? {}\n\t\t\t: {\n\t\t\t\t\tts: {\n\t\t\t\t\t\t...(data.dateFrom && { $gte: data.dateFrom }),\n\t\t\t\t\t\t...(data.dateTo && { $lte: data.dateTo }),\n\t\t\t\t\t},\n\t\t\t  };\n\n\tconst exportMessages = async (): Promise<void> => {\n\t\tconst { fileList } = await exportRoomMessagesToFile(exportPath, assetsPath, exportType, roomsToExport, user, filter, {}, false);\n\n\t\tfullFileList.push(...fileList);\n\n\t\tconst [roomData] = roomsToExport;\n\n\t\tif (roomData.status !== 'completed') {\n\t\t\tawait exportMessages();\n\t\t}\n\t};\n\n\tawait exportMessages();\n\n\tconst promises: Promise<void>[] = [];\n\tfor await (const attachmentData of fullFileList) {\n\t\tpromises.push(copyFileUpload(attachmentData, assetsPath));\n\t}\n\tawait Promise.all(promises);\n\n\tconst exportFile = `${baseDir}-export.zip`;\n\tawait makeZipFile(exportPath, exportFile);\n\n\tconst file = await uploadZipFile(exportFile, user._id, exportType);\n\n\tconst subject = i18n.t('Channel_Export');\n\n\tconst body = i18n.t('UserDataDownload_EmailBody', {\n\t\tdownload_link: getURL(getPath(file._id), { cdn: false, full: true }),\n\t});\n\n\tawait sendEmail(user, subject, body);\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"bb8ca8744d7460ab83f9992769e56c708209234e"}
