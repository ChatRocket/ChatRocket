{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/domain/IFederationBridge.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/federation/domain/IFederationBridge.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/domain/IFederationBridge.ts","inputSourceMap":{"version":3,"file":"server/services/federation/domain/IFederationBridge.ts","sourceRoot":"","sources":["server/services/federation/domain/IFederationBridge.ts"],"names":[],"mappings":"AAOA,MAAM,CAAN,IAAY,YAGX;AAHD,WAAY,YAAY;IACvB,+BAAe,CAAA;IACf,iCAAiB,CAAA;AAClB,CAAC,EAHW,YAAY,KAAZ,YAAY,QAGvB","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\n\nexport interface IExternalUserProfileInformation {\n\tdisplayName: string;\n\tavatarUrl?: string;\n}\n\nexport enum EVENT_ORIGIN {\n\tLOCAL = 'LOCAL',\n\tREMOTE = 'REMOTE',\n}\n\ninterface IRegistrationFileNamespaceRule {\n\texclusive: boolean;\n\tregex: string;\n}\n\ninterface IRegistrationFileNamespaces {\n\tusers: IRegistrationFileNamespaceRule[];\n\trooms: IRegistrationFileNamespaceRule[];\n\taliases: IRegistrationFileNamespaceRule[];\n}\n\nexport interface IFederationBridgeRegistrationFile {\n\tid: string;\n\thomeserverToken: string;\n\tapplicationServiceToken: string;\n\tbridgeUrl: string;\n\tbotName: string;\n\tlistenTo: IRegistrationFileNamespaces;\n\tenableEphemeralEvents: boolean;\n}\n\nexport interface IFederationBridge {\n\tstart(): Promise<void>;\n\tstop(): Promise<void>;\n\tgetUserProfileInformation(externalUserId: string): Promise<IExternalUserProfileInformation | undefined>;\n\tjoinRoom(externalRoomId: string, externalUserId: string, viaServers?: string[]): Promise<void>;\n\tcreateDirectMessageRoom(externalCreatorId: string, inviteesExternalIds: string[], extraData?: Record<string, any>): Promise<string>;\n\tinviteToRoom(externalRoomId: string, externalInviterId: string, externalInviteeId: string): Promise<void>;\n\tsendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<string>;\n\tsendThreadMessage(externalRoomId: string, externalSenderId: string, message: IMessage, relatesToEventId: string): Promise<string>;\n\tsendMessageFileToThread(\n\t\texternalRoomId: string,\n\t\texternaSenderId: string,\n\t\tcontent: Buffer,\n\t\tfileDetails: { filename: string; fileSize: number; mimeType: string; metadata?: { width?: number; height?: number; format?: string } },\n\t\trelatesToEventId: string,\n\t): Promise<string>;\n\tsendThreadReplyToMessage(\n\t\texternalRoomId: string,\n\t\texternalUserId: string,\n\t\teventToReplyTo: string,\n\t\teventOriginalSender: string,\n\t\tmessage: string,\n\t\trelatesToEventId: string,\n\t): Promise<string>;\n\tsendReplyMessageFileToThread(\n\t\texternalRoomId: string,\n\t\texternaSenderId: string,\n\t\tcontent: Buffer,\n\t\tfileDetails: { filename: string; fileSize: number; mimeType: string; metadata?: { width?: number; height?: number; format?: string } },\n\t\teventToReplyTo: string,\n\t\trelatesToEventId: string,\n\t): Promise<string>;\n\tcreateUser(username: string, name: string, domain: string, avatarUrl?: string): Promise<string>;\n\tisUserIdFromTheSameHomeserver(externalUserId: string, domain: string): boolean;\n\textractHomeserverOrigin(externalUserId: string): string;\n\tisRoomFromTheSameHomeserver(externalRoomId: string, domain: string): boolean;\n\tleaveRoom(externalRoomId: string, externalUserId: string): Promise<void>;\n\tkickUserFromRoom(externalRoomId: string, externalUserId: string, externalOwnerId: string): Promise<void>;\n\tlogFederationStartupInfo(info?: string): void;\n\tsetUserAvatar(externalUserId: string, avatarUrl: string): Promise<void>;\n\tgetReadStreamForFileFromUrl(externaUserId: string, fileUrl: string): Promise<ReadableStream>;\n\tredactEvent(externalRoomId: string, externalUserId: string, externalEventId: string): Promise<void>;\n\tupdateMessage(externalRoomId: string, externalUserId: string, externalEventId: string, newMessageText: string): Promise<void>;\n\tsendMessageReaction(externalRoomId: string, externalUserId: string, externalEventId: string, reaction: string): Promise<string>;\n\tsendMessageFileToRoom(\n\t\texternalRoomId: string,\n\t\texternaSenderId: string,\n\t\tcontent: Buffer,\n\t\tfileDetails: { filename: string; fileSize: number; mimeType: string; metadata?: { width?: number; height?: number; format?: string } },\n\t): Promise<string>;\n\tuploadContent(externalSenderId: string, content: Buffer, options?: { name?: string; type?: string }): Promise<string | undefined>;\n\tconvertMatrixUrlToHttp(externalUserId: string, matrixUrl: string): Promise<string>;\n\tsendReplyToMessage(\n\t\texternalRoomId: string,\n\t\texternalUserId: string,\n\t\teventToReplyTo: string,\n\t\teventOriginalSender: string,\n\t\tmessage: string,\n\t): Promise<string>;\n\tsendReplyMessageFileToRoom(\n\t\texternalRoomId: string,\n\t\texternaSenderId: string,\n\t\tcontent: Buffer,\n\t\tfileDetails: { filename: string; fileSize: number; mimeType: string; metadata?: { width?: number; height?: number; format?: string } },\n\t\teventToReplyTo: string,\n\t): Promise<string>;\n\tnotifyUserTyping(externalRoomId: string, externalUserId: string, isTyping: boolean): Promise<void>;\n\tsetUserDisplayName(externalUserId: string, displayName: string): Promise<void>;\n\tsetRoomPowerLevels(externalRoomId: string, externalOwnerId: string, externalUserId: string, powerLevels: number): Promise<void>;\n\tgetRoomHistoricalJoinEvents(externalRoomId: string, externalUserId: string, excludingUserIds?: string[]): Promise<any[]>;\n\tgetRoomName(externalRoomId: string, externalUserId: string): Promise<string | undefined>;\n\tgetRoomTopic(externalRoomId: string, externalUserId: string): Promise<string | undefined>;\n\tsetRoomName(externalRoomId: string, externalUserId: string, roomName: string): Promise<void>;\n\tsetRoomTopic(externalRoomId: string, externalUserId: string, roomTopic: string): Promise<void>;\n\tverifyInviteeIds(matrixIds: string[]): Promise<Map<string, string>>;\n\tgetRoomData(\n\t\texternalUserId: string,\n\t\texternalRoomId: string,\n\t): Promise<{ creator: { id: string; username: string }; name: string; joinedMembers: string[] } | undefined>;\n\tping(): Promise<{ durationMs: number }>;\n\tdeactivateUser(externalUserId: string): Promise<void>;\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/domain/IFederationBridge.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/federation/domain/IFederationBridge.ts","inputSourceMap":{"version":3,"file":"server/services/federation/domain/IFederationBridge.ts","sourceRoot":"","sources":["server/services/federation/domain/IFederationBridge.ts"],"names":[],"mappings":"AAOA,MAAM,CAAN,IAAY,YAGX;AAHD,WAAY,YAAY;IACvB,+BAAe,CAAA;IACf,iCAAiB,CAAA;AAClB,CAAC,EAHW,YAAY,KAAZ,YAAY,QAGvB","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\n\nexport interface IExternalUserProfileInformation {\n\tdisplayName: string;\n\tavatarUrl?: string;\n}\n\nexport enum EVENT_ORIGIN {\n\tLOCAL = 'LOCAL',\n\tREMOTE = 'REMOTE',\n}\n\ninterface IRegistrationFileNamespaceRule {\n\texclusive: boolean;\n\tregex: string;\n}\n\ninterface IRegistrationFileNamespaces {\n\tusers: IRegistrationFileNamespaceRule[];\n\trooms: IRegistrationFileNamespaceRule[];\n\taliases: IRegistrationFileNamespaceRule[];\n}\n\nexport interface IFederationBridgeRegistrationFile {\n\tid: string;\n\thomeserverToken: string;\n\tapplicationServiceToken: string;\n\tbridgeUrl: string;\n\tbotName: string;\n\tlistenTo: IRegistrationFileNamespaces;\n\tenableEphemeralEvents: boolean;\n}\n\nexport interface IFederationBridge {\n\tstart(): Promise<void>;\n\tstop(): Promise<void>;\n\tgetUserProfileInformation(externalUserId: string): Promise<IExternalUserProfileInformation | undefined>;\n\tjoinRoom(externalRoomId: string, externalUserId: string, viaServers?: string[]): Promise<void>;\n\tcreateDirectMessageRoom(externalCreatorId: string, inviteesExternalIds: string[], extraData?: Record<string, any>): Promise<string>;\n\tinviteToRoom(externalRoomId: string, externalInviterId: string, externalInviteeId: string): Promise<void>;\n\tsendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<string>;\n\tsendThreadMessage(externalRoomId: string, externalSenderId: string, message: IMessage, relatesToEventId: string): Promise<string>;\n\tsendMessageFileToThread(\n\t\texternalRoomId: string,\n\t\texternaSenderId: string,\n\t\tcontent: Buffer,\n\t\tfileDetails: { filename: string; fileSize: number; mimeType: string; metadata?: { width?: number; height?: number; format?: string } },\n\t\trelatesToEventId: string,\n\t): Promise<string>;\n\tsendThreadReplyToMessage(\n\t\texternalRoomId: string,\n\t\texternalUserId: string,\n\t\teventToReplyTo: string,\n\t\teventOriginalSender: string,\n\t\tmessage: string,\n\t\trelatesToEventId: string,\n\t): Promise<string>;\n\tsendReplyMessageFileToThread(\n\t\texternalRoomId: string,\n\t\texternaSenderId: string,\n\t\tcontent: Buffer,\n\t\tfileDetails: { filename: string; fileSize: number; mimeType: string; metadata?: { width?: number; height?: number; format?: string } },\n\t\teventToReplyTo: string,\n\t\trelatesToEventId: string,\n\t): Promise<string>;\n\tcreateUser(username: string, name: string, domain: string, avatarUrl?: string): Promise<string>;\n\tisUserIdFromTheSameHomeserver(externalUserId: string, domain: string): boolean;\n\textractHomeserverOrigin(externalUserId: string): string;\n\tisRoomFromTheSameHomeserver(externalRoomId: string, domain: string): boolean;\n\tleaveRoom(externalRoomId: string, externalUserId: string): Promise<void>;\n\tkickUserFromRoom(externalRoomId: string, externalUserId: string, externalOwnerId: string): Promise<void>;\n\tlogFederationStartupInfo(info?: string): void;\n\tsetUserAvatar(externalUserId: string, avatarUrl: string): Promise<void>;\n\tgetReadStreamForFileFromUrl(externaUserId: string, fileUrl: string): Promise<ReadableStream>;\n\tredactEvent(externalRoomId: string, externalUserId: string, externalEventId: string): Promise<void>;\n\tupdateMessage(externalRoomId: string, externalUserId: string, externalEventId: string, newMessageText: string): Promise<void>;\n\tsendMessageReaction(externalRoomId: string, externalUserId: string, externalEventId: string, reaction: string): Promise<string>;\n\tsendMessageFileToRoom(\n\t\texternalRoomId: string,\n\t\texternaSenderId: string,\n\t\tcontent: Buffer,\n\t\tfileDetails: { filename: string; fileSize: number; mimeType: string; metadata?: { width?: number; height?: number; format?: string } },\n\t): Promise<string>;\n\tuploadContent(externalSenderId: string, content: Buffer, options?: { name?: string; type?: string }): Promise<string | undefined>;\n\tconvertMatrixUrlToHttp(externalUserId: string, matrixUrl: string): Promise<string>;\n\tsendReplyToMessage(\n\t\texternalRoomId: string,\n\t\texternalUserId: string,\n\t\teventToReplyTo: string,\n\t\teventOriginalSender: string,\n\t\tmessage: string,\n\t): Promise<string>;\n\tsendReplyMessageFileToRoom(\n\t\texternalRoomId: string,\n\t\texternaSenderId: string,\n\t\tcontent: Buffer,\n\t\tfileDetails: { filename: string; fileSize: number; mimeType: string; metadata?: { width?: number; height?: number; format?: string } },\n\t\teventToReplyTo: string,\n\t): Promise<string>;\n\tnotifyUserTyping(externalRoomId: string, externalUserId: string, isTyping: boolean): Promise<void>;\n\tsetUserDisplayName(externalUserId: string, displayName: string): Promise<void>;\n\tsetRoomPowerLevels(externalRoomId: string, externalOwnerId: string, externalUserId: string, powerLevels: number): Promise<void>;\n\tgetRoomHistoricalJoinEvents(externalRoomId: string, externalUserId: string, excludingUserIds?: string[]): Promise<any[]>;\n\tgetRoomName(externalRoomId: string, externalUserId: string): Promise<string | undefined>;\n\tgetRoomTopic(externalRoomId: string, externalUserId: string): Promise<string | undefined>;\n\tsetRoomName(externalRoomId: string, externalUserId: string, roomName: string): Promise<void>;\n\tsetRoomTopic(externalRoomId: string, externalUserId: string, roomTopic: string): Promise<void>;\n\tverifyInviteeIds(matrixIds: string[]): Promise<Map<string, string>>;\n\tgetRoomData(\n\t\texternalUserId: string,\n\t\texternalRoomId: string,\n\t): Promise<{ creator: { id: string; username: string }; name: string; joinedMembers: string[] } | undefined>;\n\tping(): Promise<{ durationMs: number }>;\n\tdeactivateUser(externalUserId: string): Promise<void>;\n}\n"]}}},"code":"module.export({\n  EVENT_ORIGIN: () => EVENT_ORIGIN\n});\nvar EVENT_ORIGIN;\n(function (EVENT_ORIGIN) {\n  EVENT_ORIGIN[\"LOCAL\"] = \"LOCAL\";\n  EVENT_ORIGIN[\"REMOTE\"] = \"REMOTE\";\n})(EVENT_ORIGIN || module.runSetters(EVENT_ORIGIN = {}, [\"EVENT_ORIGIN\"]));","map":{"version":3,"names":["module","export","EVENT_ORIGIN","runSetters"],"sources":["server/services/federation/domain/IFederationBridge.ts"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\n\nexport interface IExternalUserProfileInformation {\n\tdisplayName: string;\n\tavatarUrl?: string;\n}\n\nexport enum EVENT_ORIGIN {\n\tLOCAL = 'LOCAL',\n\tREMOTE = 'REMOTE',\n}\n\ninterface IRegistrationFileNamespaceRule {\n\texclusive: boolean;\n\tregex: string;\n}\n\ninterface IRegistrationFileNamespaces {\n\tusers: IRegistrationFileNamespaceRule[];\n\trooms: IRegistrationFileNamespaceRule[];\n\taliases: IRegistrationFileNamespaceRule[];\n}\n\nexport interface IFederationBridgeRegistrationFile {\n\tid: string;\n\thomeserverToken: string;\n\tapplicationServiceToken: string;\n\tbridgeUrl: string;\n\tbotName: string;\n\tlistenTo: IRegistrationFileNamespaces;\n\tenableEphemeralEvents: boolean;\n}\n\nexport interface IFederationBridge {\n\tstart(): Promise<void>;\n\tstop(): Promise<void>;\n\tgetUserProfileInformation(externalUserId: string): Promise<IExternalUserProfileInformation | undefined>;\n\tjoinRoom(externalRoomId: string, externalUserId: string, viaServers?: string[]): Promise<void>;\n\tcreateDirectMessageRoom(externalCreatorId: string, inviteesExternalIds: string[], extraData?: Record<string, any>): Promise<string>;\n\tinviteToRoom(externalRoomId: string, externalInviterId: string, externalInviteeId: string): Promise<void>;\n\tsendMessage(externalRoomId: string, externalSenderId: string, message: IMessage): Promise<string>;\n\tsendThreadMessage(externalRoomId: string, externalSenderId: string, message: IMessage, relatesToEventId: string): Promise<string>;\n\tsendMessageFileToThread(\n\t\texternalRoomId: string,\n\t\texternaSenderId: string,\n\t\tcontent: Buffer,\n\t\tfileDetails: { filename: string; fileSize: number; mimeType: string; metadata?: { width?: number; height?: number; format?: string } },\n\t\trelatesToEventId: string,\n\t): Promise<string>;\n\tsendThreadReplyToMessage(\n\t\texternalRoomId: string,\n\t\texternalUserId: string,\n\t\teventToReplyTo: string,\n\t\teventOriginalSender: string,\n\t\tmessage: string,\n\t\trelatesToEventId: string,\n\t): Promise<string>;\n\tsendReplyMessageFileToThread(\n\t\texternalRoomId: string,\n\t\texternaSenderId: string,\n\t\tcontent: Buffer,\n\t\tfileDetails: { filename: string; fileSize: number; mimeType: string; metadata?: { width?: number; height?: number; format?: string } },\n\t\teventToReplyTo: string,\n\t\trelatesToEventId: string,\n\t): Promise<string>;\n\tcreateUser(username: string, name: string, domain: string, avatarUrl?: string): Promise<string>;\n\tisUserIdFromTheSameHomeserver(externalUserId: string, domain: string): boolean;\n\textractHomeserverOrigin(externalUserId: string): string;\n\tisRoomFromTheSameHomeserver(externalRoomId: string, domain: string): boolean;\n\tleaveRoom(externalRoomId: string, externalUserId: string): Promise<void>;\n\tkickUserFromRoom(externalRoomId: string, externalUserId: string, externalOwnerId: string): Promise<void>;\n\tlogFederationStartupInfo(info?: string): void;\n\tsetUserAvatar(externalUserId: string, avatarUrl: string): Promise<void>;\n\tgetReadStreamForFileFromUrl(externaUserId: string, fileUrl: string): Promise<ReadableStream>;\n\tredactEvent(externalRoomId: string, externalUserId: string, externalEventId: string): Promise<void>;\n\tupdateMessage(externalRoomId: string, externalUserId: string, externalEventId: string, newMessageText: string): Promise<void>;\n\tsendMessageReaction(externalRoomId: string, externalUserId: string, externalEventId: string, reaction: string): Promise<string>;\n\tsendMessageFileToRoom(\n\t\texternalRoomId: string,\n\t\texternaSenderId: string,\n\t\tcontent: Buffer,\n\t\tfileDetails: { filename: string; fileSize: number; mimeType: string; metadata?: { width?: number; height?: number; format?: string } },\n\t): Promise<string>;\n\tuploadContent(externalSenderId: string, content: Buffer, options?: { name?: string; type?: string }): Promise<string | undefined>;\n\tconvertMatrixUrlToHttp(externalUserId: string, matrixUrl: string): Promise<string>;\n\tsendReplyToMessage(\n\t\texternalRoomId: string,\n\t\texternalUserId: string,\n\t\teventToReplyTo: string,\n\t\teventOriginalSender: string,\n\t\tmessage: string,\n\t): Promise<string>;\n\tsendReplyMessageFileToRoom(\n\t\texternalRoomId: string,\n\t\texternaSenderId: string,\n\t\tcontent: Buffer,\n\t\tfileDetails: { filename: string; fileSize: number; mimeType: string; metadata?: { width?: number; height?: number; format?: string } },\n\t\teventToReplyTo: string,\n\t): Promise<string>;\n\tnotifyUserTyping(externalRoomId: string, externalUserId: string, isTyping: boolean): Promise<void>;\n\tsetUserDisplayName(externalUserId: string, displayName: string): Promise<void>;\n\tsetRoomPowerLevels(externalRoomId: string, externalOwnerId: string, externalUserId: string, powerLevels: number): Promise<void>;\n\tgetRoomHistoricalJoinEvents(externalRoomId: string, externalUserId: string, excludingUserIds?: string[]): Promise<any[]>;\n\tgetRoomName(externalRoomId: string, externalUserId: string): Promise<string | undefined>;\n\tgetRoomTopic(externalRoomId: string, externalUserId: string): Promise<string | undefined>;\n\tsetRoomName(externalRoomId: string, externalUserId: string, roomName: string): Promise<void>;\n\tsetRoomTopic(externalRoomId: string, externalUserId: string, roomTopic: string): Promise<void>;\n\tverifyInviteeIds(matrixIds: string[]): Promise<Map<string, string>>;\n\tgetRoomData(\n\t\texternalUserId: string,\n\t\texternalRoomId: string,\n\t): Promise<{ creator: { id: string; username: string }; name: string; joinedMembers: string[] } | undefined>;\n\tping(): Promise<{ durationMs: number }>;\n\tdeactivateUser(externalUserId: string): Promise<void>;\n}\n"],"mappings":"AAOAA,MAAM,CAANC,MAAY;EAAAC,YAGX,EAAAA,CAAA,KAAAA;AAAA;AAHD,IAAYA,YAGX;AAHD,WAAYA,YAAY;EACvBA,YAAA,mBAAe;EACfA,YAAA,qBAAiB;AAClB,CAAC,EAHWA,YAAY,IAAAF,MAAA,CAAAG,UAAA,CAAZD,YAAY","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e42ceed31d6fbcdd0cb83905bcdb85113f92eed6"}
