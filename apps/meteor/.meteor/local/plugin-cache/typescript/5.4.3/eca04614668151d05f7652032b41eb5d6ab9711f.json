{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/LivechatCustomField.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/LivechatCustomField.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/LivechatCustomField.ts","inputSourceMap":{"version":3,"file":"server/models/raw/LivechatCustomField.ts","sourceRoot":"","sources":["server/models/raw/LivechatCustomField.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,sBAAuB,SAAQ,OAA6B;IACxE,YAAY,EAAM,EAAE,KAAiE;QACpF,KAAK,CAAC,EAAE,EAAE,uBAAuB,EAAE,KAAK,CAAC,CAAC;IAC3C,CAAC;IAES,YAAY;QACrB,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAChC,CAAC;IAED,WAAW,CACV,KAAoC,EACpC,OAA2C,EAC3C,aAAa,GAAG,IAAI;QAEpB,OAAO,IAAI,CAAC,IAAI,CAAI,EAAE,KAAK,EAAE,GAAG,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IAC/G,CAAC;IAED,wBAAwB,CACvB,KAAoC,EACpC,UAAU,GAAG,IAAI,EACjB,OAA2C;QAE3C,MAAM,KAAK,GAAG;YACb,KAAK;YACL,UAAU;SACV,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,6BAA6B,CAC5B,GAAkC,EAClC,KAAoC,EACpC,UAAU,GAAG,IAAI,EACjB,OAA2C;QAE3C,MAAM,KAAK,GAAG;YACb,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;YACjB,KAAK;YACL,UAAU;SACV,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,KAAK,CAAC,yBAAyB,CAC9B,GAAW,EACX,KAAa,EACb,KAAoC,EACpC,KAAoC,EACpC,UAA8C,EAC9C,SAAc;QAEd,MAAM,MAAM,GAAG;YACd,KAAK;YACL,KAAK;YACL,UAAU;YACV,GAAG,SAAS;SACZ,CAAC;QAEF,IAAI,GAAG,EAAE,CAAC;YACT,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;QACjD,CAAC;aAAM,CAAC;YACP,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC;YACnB,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC;QAED,OAAO,MAAM,CAAC;IACf,CAAC;IAED,iBAAiB,CAChB,GAAkC,EAClC,KAAoC,EACpC,OAA2C;QAE3C,OAAO,IAAI,CAAC,IAAI,CAAI,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;CACD","sourcesContent":["import type { ILivechatCustomField, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { ILivechatCustomFieldModel } from '@rocket.chat/model-typings';\nimport type { Db, Collection, IndexDescription, FindOptions, FindCursor, Document } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class LivechatCustomFieldRaw extends BaseRaw<ILivechatCustomField> implements ILivechatCustomFieldModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ILivechatCustomField>>) {\n\t\tsuper(db, 'livechat_custom_field', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { scope: 1 } }];\n\t}\n\n\tfindByScope<T extends ILivechatCustomField>(\n\t\tscope: ILivechatCustomField['scope'],\n\t\toptions?: FindOptions<ILivechatCustomField>,\n\t\tincludeHidden = true,\n\t): FindCursor<T> {\n\t\treturn this.find<T>({ scope, ...(includeHidden === true ? {} : { visibility: { $ne: 'hidden' } }) }, options);\n\t}\n\n\tfindMatchingCustomFields(\n\t\tscope: ILivechatCustomField['scope'],\n\t\tsearchable = true,\n\t\toptions?: FindOptions<ILivechatCustomField>,\n\t): FindCursor<ILivechatCustomField> {\n\t\tconst query = {\n\t\t\tscope,\n\t\t\tsearchable,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindMatchingCustomFieldsByIds(\n\t\tids: ILivechatCustomField['_id'][],\n\t\tscope: ILivechatCustomField['scope'],\n\t\tsearchable = true,\n\t\toptions?: FindOptions<ILivechatCustomField>,\n\t): FindCursor<ILivechatCustomField> {\n\t\tconst query = {\n\t\t\t_id: { $in: ids },\n\t\t\tscope,\n\t\t\tsearchable,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tasync createOrUpdateCustomField(\n\t\t_id: string,\n\t\tfield: string,\n\t\tlabel: ILivechatCustomField['label'],\n\t\tscope: ILivechatCustomField['scope'],\n\t\tvisibility: ILivechatCustomField['visibility'],\n\t\textraData: any,\n\t) {\n\t\tconst record = {\n\t\t\tlabel,\n\t\t\tscope,\n\t\t\tvisibility,\n\t\t\t...extraData,\n\t\t};\n\n\t\tif (_id) {\n\t\t\tawait this.updateOne({ _id }, { $set: record });\n\t\t} else {\n\t\t\trecord._id = field;\n\t\t\tawait this.insertOne(record);\n\t\t}\n\n\t\treturn record;\n\t}\n\n\tfindByIdsAndScope<T extends Document = ILivechatCustomField>(\n\t\tids: ILivechatCustomField['_id'][],\n\t\tscope: ILivechatCustomField['scope'],\n\t\toptions?: FindOptions<ILivechatCustomField>,\n\t): FindCursor<T> {\n\t\treturn this.find<T>({ _id: { $in: ids }, scope }, options);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/LivechatCustomField.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/LivechatCustomField.ts","inputSourceMap":{"version":3,"file":"server/models/raw/LivechatCustomField.ts","sourceRoot":"","sources":["server/models/raw/LivechatCustomField.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,sBAAuB,SAAQ,OAA6B;IACxE,YAAY,EAAM,EAAE,KAAiE;QACpF,KAAK,CAAC,EAAE,EAAE,uBAAuB,EAAE,KAAK,CAAC,CAAC;IAC3C,CAAC;IAES,YAAY;QACrB,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAChC,CAAC;IAED,WAAW,CACV,KAAoC,EACpC,OAA2C,EAC3C,aAAa,GAAG,IAAI;QAEpB,OAAO,IAAI,CAAC,IAAI,CAAI,EAAE,KAAK,EAAE,GAAG,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IAC/G,CAAC;IAED,wBAAwB,CACvB,KAAoC,EACpC,UAAU,GAAG,IAAI,EACjB,OAA2C;QAE3C,MAAM,KAAK,GAAG;YACb,KAAK;YACL,UAAU;SACV,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,6BAA6B,CAC5B,GAAkC,EAClC,KAAoC,EACpC,UAAU,GAAG,IAAI,EACjB,OAA2C;QAE3C,MAAM,KAAK,GAAG;YACb,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;YACjB,KAAK;YACL,UAAU;SACV,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,KAAK,CAAC,yBAAyB,CAC9B,GAAW,EACX,KAAa,EACb,KAAoC,EACpC,KAAoC,EACpC,UAA8C,EAC9C,SAAc;QAEd,MAAM,MAAM,GAAG;YACd,KAAK;YACL,KAAK;YACL,UAAU;YACV,GAAG,SAAS;SACZ,CAAC;QAEF,IAAI,GAAG,EAAE,CAAC;YACT,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;QACjD,CAAC;aAAM,CAAC;YACP,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC;YACnB,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC;QAED,OAAO,MAAM,CAAC;IACf,CAAC;IAED,iBAAiB,CAChB,GAAkC,EAClC,KAAoC,EACpC,OAA2C;QAE3C,OAAO,IAAI,CAAC,IAAI,CAAI,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;CACD","sourcesContent":["import type { ILivechatCustomField, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { ILivechatCustomFieldModel } from '@rocket.chat/model-typings';\nimport type { Db, Collection, IndexDescription, FindOptions, FindCursor, Document } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class LivechatCustomFieldRaw extends BaseRaw<ILivechatCustomField> implements ILivechatCustomFieldModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ILivechatCustomField>>) {\n\t\tsuper(db, 'livechat_custom_field', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { scope: 1 } }];\n\t}\n\n\tfindByScope<T extends ILivechatCustomField>(\n\t\tscope: ILivechatCustomField['scope'],\n\t\toptions?: FindOptions<ILivechatCustomField>,\n\t\tincludeHidden = true,\n\t): FindCursor<T> {\n\t\treturn this.find<T>({ scope, ...(includeHidden === true ? {} : { visibility: { $ne: 'hidden' } }) }, options);\n\t}\n\n\tfindMatchingCustomFields(\n\t\tscope: ILivechatCustomField['scope'],\n\t\tsearchable = true,\n\t\toptions?: FindOptions<ILivechatCustomField>,\n\t): FindCursor<ILivechatCustomField> {\n\t\tconst query = {\n\t\t\tscope,\n\t\t\tsearchable,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindMatchingCustomFieldsByIds(\n\t\tids: ILivechatCustomField['_id'][],\n\t\tscope: ILivechatCustomField['scope'],\n\t\tsearchable = true,\n\t\toptions?: FindOptions<ILivechatCustomField>,\n\t): FindCursor<ILivechatCustomField> {\n\t\tconst query = {\n\t\t\t_id: { $in: ids },\n\t\t\tscope,\n\t\t\tsearchable,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tasync createOrUpdateCustomField(\n\t\t_id: string,\n\t\tfield: string,\n\t\tlabel: ILivechatCustomField['label'],\n\t\tscope: ILivechatCustomField['scope'],\n\t\tvisibility: ILivechatCustomField['visibility'],\n\t\textraData: any,\n\t) {\n\t\tconst record = {\n\t\t\tlabel,\n\t\t\tscope,\n\t\t\tvisibility,\n\t\t\t...extraData,\n\t\t};\n\n\t\tif (_id) {\n\t\t\tawait this.updateOne({ _id }, { $set: record });\n\t\t} else {\n\t\t\trecord._id = field;\n\t\t\tawait this.insertOne(record);\n\t\t}\n\n\t\treturn record;\n\t}\n\n\tfindByIdsAndScope<T extends Document = ILivechatCustomField>(\n\t\tids: ILivechatCustomField['_id'][],\n\t\tscope: ILivechatCustomField['scope'],\n\t\toptions?: FindOptions<ILivechatCustomField>,\n\t): FindCursor<T> {\n\t\treturn this.find<T>({ _id: { $in: ids }, scope }, options);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      LivechatCustomFieldRaw: () => LivechatCustomFieldRaw\n    });\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class LivechatCustomFieldRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'livechat_custom_field', trash);\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            scope: 1\n          }\n        }];\n      }\n      findByScope(scope, options) {\n        let includeHidden = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        return this.find(_objectSpread({\n          scope\n        }, includeHidden === true ? {} : {\n          visibility: {\n            $ne: 'hidden'\n          }\n        }), options);\n      }\n      findMatchingCustomFields(scope) {\n        let searchable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        let options = arguments.length > 2 ? arguments[2] : undefined;\n        const query = {\n          scope,\n          searchable\n        };\n        return this.find(query, options);\n      }\n      findMatchingCustomFieldsByIds(ids, scope) {\n        let searchable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        let options = arguments.length > 3 ? arguments[3] : undefined;\n        const query = {\n          _id: {\n            $in: ids\n          },\n          scope,\n          searchable\n        };\n        return this.find(query, options);\n      }\n      async createOrUpdateCustomField(_id, field, label, scope, visibility, extraData) {\n        const record = _objectSpread({\n          label,\n          scope,\n          visibility\n        }, extraData);\n        if (_id) {\n          await this.updateOne({\n            _id\n          }, {\n            $set: record\n          });\n        } else {\n          record._id = field;\n          await this.insertOne(record);\n        }\n        return record;\n      }\n      findByIdsAndScope(ids, scope, options) {\n        return this.find({\n          _id: {\n            $in: ids\n          },\n          scope\n        }, options);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","LivechatCustomFieldRaw","BaseRaw","__reifyWaitForDeps__","constructor","db","trash","modelIndexes","key","scope","findByScope","options","includeHidden","arguments","length","undefined","find","visibility","$ne","findMatchingCustomFields","searchable","query","findMatchingCustomFieldsByIds","ids","_id","$in","createOrUpdateCustomField","field","label","extraData","record","updateOne","$set","insertOne","findByIdsAndScope","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/LivechatCustomField.ts"],"sourcesContent":["import type { ILivechatCustomField, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { ILivechatCustomFieldModel } from '@rocket.chat/model-typings';\nimport type { Db, Collection, IndexDescription, FindOptions, FindCursor, Document } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class LivechatCustomFieldRaw extends BaseRaw<ILivechatCustomField> implements ILivechatCustomFieldModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ILivechatCustomField>>) {\n\t\tsuper(db, 'livechat_custom_field', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { scope: 1 } }];\n\t}\n\n\tfindByScope<T extends ILivechatCustomField>(\n\t\tscope: ILivechatCustomField['scope'],\n\t\toptions?: FindOptions<ILivechatCustomField>,\n\t\tincludeHidden = true,\n\t): FindCursor<T> {\n\t\treturn this.find<T>({ scope, ...(includeHidden === true ? {} : { visibility: { $ne: 'hidden' } }) }, options);\n\t}\n\n\tfindMatchingCustomFields(\n\t\tscope: ILivechatCustomField['scope'],\n\t\tsearchable = true,\n\t\toptions?: FindOptions<ILivechatCustomField>,\n\t): FindCursor<ILivechatCustomField> {\n\t\tconst query = {\n\t\t\tscope,\n\t\t\tsearchable,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindMatchingCustomFieldsByIds(\n\t\tids: ILivechatCustomField['_id'][],\n\t\tscope: ILivechatCustomField['scope'],\n\t\tsearchable = true,\n\t\toptions?: FindOptions<ILivechatCustomField>,\n\t): FindCursor<ILivechatCustomField> {\n\t\tconst query = {\n\t\t\t_id: { $in: ids },\n\t\t\tscope,\n\t\t\tsearchable,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tasync createOrUpdateCustomField(\n\t\t_id: string,\n\t\tfield: string,\n\t\tlabel: ILivechatCustomField['label'],\n\t\tscope: ILivechatCustomField['scope'],\n\t\tvisibility: ILivechatCustomField['visibility'],\n\t\textraData: any,\n\t) {\n\t\tconst record = {\n\t\t\tlabel,\n\t\t\tscope,\n\t\t\tvisibility,\n\t\t\t...extraData,\n\t\t};\n\n\t\tif (_id) {\n\t\t\tawait this.updateOne({ _id }, { $set: record });\n\t\t} else {\n\t\t\trecord._id = field;\n\t\t\tawait this.insertOne(record);\n\t\t}\n\n\t\treturn record;\n\t}\n\n\tfindByIdsAndScope<T extends Document = ILivechatCustomField>(\n\t\tids: ILivechatCustomField['_id'][],\n\t\tscope: ILivechatCustomField['scope'],\n\t\toptions?: FindOptions<ILivechatCustomField>,\n\t): FindCursor<T> {\n\t\treturn this.find<T>({ _id: { $in: ids }, scope }, options);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"eca04614668151d05f7652032b41eb5d6ab9711f"}
