{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/teams/contextualBar/channels/hooks/useToggleAutoJoin.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/teams/contextualBar/channels/hooks/useToggleAutoJoin.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/teams/contextualBar/channels/hooks/useToggleAutoJoin.tsx","inputSourceMap":{"version":3,"file":"client/views/teams/contextualBar/channels/hooks/useToggleAutoJoin.tsx","sourceRoot":"","sources":["client/views/teams/contextualBar/channels/hooks/useToggleAutoJoin.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,uBAAuB,EAAE,MAAM,0BAA0B,CAAC;AAC3G,OAAO,EAAE,CAAC,EAAE,MAAM,SAAS,CAAC;AAE5B,OAAO,EAAE,eAAe,EAAE,MAAM,0CAA0C,CAAC;AAE3E,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,IAAW,EAAE,EAAE,MAAM,EAAE,QAAQ,EAA4C,EAAE,EAAE;IAChH,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IACvD,MAAM,kBAAkB,GAAG,WAAW,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;IACvE,MAAM,kBAAkB,GAAG,aAAa,CAAC,mBAAmB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACxE,MAAM,0BAA0B,GAAG,UAAU,CAAS,gBAAgB,CAAC,CAAC;IAExE,MAAM,oBAAoB,GAAG,KAAK,IAAI,EAAE;QACvC,uFAAuF;QACvF,IAAI,CAAC,0BAA0B,EAAE,CAAC;YACjC,OAAO;QACR,CAAC;QAED,IAAI,CAAC;YACJ,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,MAAM,kBAAkB,CAAC;gBACtD,MAAM,EAAE,IAAI,CAAC,GAAG;gBAChB,SAAS,EAAE,CAAC,IAAI,CAAC,WAAW;aAC5B,CAAC,CAAC;YACH,IAAI,WAAW,CAAC,WAAW,EAAE,CAAC;gBAC7B,sGAAsG;gBACtG,oEAAoE;gBACpE,MAAM,WAAW,GAAG,QAAQ,CAAC,UAAU,GAAG,0BAA0B,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC1F,MAAM,OAAO,GAAG,QAAQ,CAAC,UAAU,GAAG,0BAA0B,CAAC,CAAC,CAAC,oCAAoC,CAAC,CAAC,CAAC,wBAAwB,CAAC;gBAEnI,oBAAoB,CAAC;oBACpB,IAAI,EAAE,WAAW;oBACjB,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE;wBACnB,WAAW,EAAE,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;wBACtD,eAAe,EAAE,WAAW,CAAC,UAAU;wBACvC,KAAK,EAAE,0BAA0B;qBACjC,CAAC;iBACF,CAAC,CAAC;YACJ,CAAC;YACD,MAAM,EAAE,EAAE,CAAC;QACZ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACzD,CAAC;IACF,CAAC,CAAC;IAEF,OAAO,EAAE,oBAAoB,EAAE,kBAAkB,EAAE,CAAC;AACrD,CAAC,CAAC","sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { useEndpoint, usePermission, useSetting, useToastMessageDispatch } from '@rocket.chat/ui-contexts';\nimport { t } from 'i18next';\n\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\n\nexport const useToggleAutoJoin = (room: IRoom, { reload, mainRoom }: { reload?: () => void; mainRoom: IRoom }) => {\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst updateRoomEndpoint = useEndpoint('POST', '/v1/teams.updateRoom');\n\tconst canEditTeamChannel = usePermission('edit-team-channel', room._id);\n\tconst maxNumberOfAutoJoinMembers = useSetting<number>('API_User_Limit');\n\n\tconst handleToggleAutoJoin = async () => {\n\t\t// Sanity check, the setting has a default value, therefore it should always be defined\n\t\tif (!maxNumberOfAutoJoinMembers) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst { room: updatedRoom } = await updateRoomEndpoint({\n\t\t\t\troomId: room._id,\n\t\t\t\tisDefault: !room.teamDefault,\n\t\t\t});\n\t\t\tif (updatedRoom.teamDefault) {\n\t\t\t\t// If the number of members in the mainRoom (the team) is greater than the limit, show an info message\n\t\t\t\t// informing that not all members will be auto-joined to the channel\n\t\t\t\tconst messageType = mainRoom.usersCount > maxNumberOfAutoJoinMembers ? 'info' : 'success';\n\t\t\t\tconst message = mainRoom.usersCount > maxNumberOfAutoJoinMembers ? 'Team_Auto-join_exceeded_user_limit' : 'Team_Auto-join_updated';\n\n\t\t\t\tdispatchToastMessage({\n\t\t\t\t\ttype: messageType,\n\t\t\t\t\tmessage: t(message, {\n\t\t\t\t\t\tchannelName: roomCoordinator.getRoomName(room.t, room),\n\t\t\t\t\t\tnumberOfMembers: updatedRoom.usersCount,\n\t\t\t\t\t\tlimit: maxNumberOfAutoJoinMembers,\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t}\n\t\t\treload?.();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\treturn { handleToggleAutoJoin, canEditTeamChannel };\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/teams/contextualBar/channels/hooks/useToggleAutoJoin.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/teams/contextualBar/channels/hooks/useToggleAutoJoin.tsx","inputSourceMap":{"version":3,"file":"client/views/teams/contextualBar/channels/hooks/useToggleAutoJoin.tsx","sourceRoot":"","sources":["client/views/teams/contextualBar/channels/hooks/useToggleAutoJoin.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,uBAAuB,EAAE,MAAM,0BAA0B,CAAC;AAC3G,OAAO,EAAE,CAAC,EAAE,MAAM,SAAS,CAAC;AAE5B,OAAO,EAAE,eAAe,EAAE,MAAM,0CAA0C,CAAC;AAE3E,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,IAAW,EAAE,EAAE,MAAM,EAAE,QAAQ,EAA4C,EAAE,EAAE;IAChH,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IACvD,MAAM,kBAAkB,GAAG,WAAW,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;IACvE,MAAM,kBAAkB,GAAG,aAAa,CAAC,mBAAmB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACxE,MAAM,0BAA0B,GAAG,UAAU,CAAS,gBAAgB,CAAC,CAAC;IAExE,MAAM,oBAAoB,GAAG,KAAK,IAAI,EAAE;QACvC,uFAAuF;QACvF,IAAI,CAAC,0BAA0B,EAAE,CAAC;YACjC,OAAO;QACR,CAAC;QAED,IAAI,CAAC;YACJ,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,MAAM,kBAAkB,CAAC;gBACtD,MAAM,EAAE,IAAI,CAAC,GAAG;gBAChB,SAAS,EAAE,CAAC,IAAI,CAAC,WAAW;aAC5B,CAAC,CAAC;YACH,IAAI,WAAW,CAAC,WAAW,EAAE,CAAC;gBAC7B,sGAAsG;gBACtG,oEAAoE;gBACpE,MAAM,WAAW,GAAG,QAAQ,CAAC,UAAU,GAAG,0BAA0B,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC1F,MAAM,OAAO,GAAG,QAAQ,CAAC,UAAU,GAAG,0BAA0B,CAAC,CAAC,CAAC,oCAAoC,CAAC,CAAC,CAAC,wBAAwB,CAAC;gBAEnI,oBAAoB,CAAC;oBACpB,IAAI,EAAE,WAAW;oBACjB,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE;wBACnB,WAAW,EAAE,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;wBACtD,eAAe,EAAE,WAAW,CAAC,UAAU;wBACvC,KAAK,EAAE,0BAA0B;qBACjC,CAAC;iBACF,CAAC,CAAC;YACJ,CAAC;YACD,MAAM,EAAE,EAAE,CAAC;QACZ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACzD,CAAC;IACF,CAAC,CAAC;IAEF,OAAO,EAAE,oBAAoB,EAAE,kBAAkB,EAAE,CAAC;AACrD,CAAC,CAAC","sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { useEndpoint, usePermission, useSetting, useToastMessageDispatch } from '@rocket.chat/ui-contexts';\nimport { t } from 'i18next';\n\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\n\nexport const useToggleAutoJoin = (room: IRoom, { reload, mainRoom }: { reload?: () => void; mainRoom: IRoom }) => {\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst updateRoomEndpoint = useEndpoint('POST', '/v1/teams.updateRoom');\n\tconst canEditTeamChannel = usePermission('edit-team-channel', room._id);\n\tconst maxNumberOfAutoJoinMembers = useSetting<number>('API_User_Limit');\n\n\tconst handleToggleAutoJoin = async () => {\n\t\t// Sanity check, the setting has a default value, therefore it should always be defined\n\t\tif (!maxNumberOfAutoJoinMembers) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst { room: updatedRoom } = await updateRoomEndpoint({\n\t\t\t\troomId: room._id,\n\t\t\t\tisDefault: !room.teamDefault,\n\t\t\t});\n\t\t\tif (updatedRoom.teamDefault) {\n\t\t\t\t// If the number of members in the mainRoom (the team) is greater than the limit, show an info message\n\t\t\t\t// informing that not all members will be auto-joined to the channel\n\t\t\t\tconst messageType = mainRoom.usersCount > maxNumberOfAutoJoinMembers ? 'info' : 'success';\n\t\t\t\tconst message = mainRoom.usersCount > maxNumberOfAutoJoinMembers ? 'Team_Auto-join_exceeded_user_limit' : 'Team_Auto-join_updated';\n\n\t\t\t\tdispatchToastMessage({\n\t\t\t\t\ttype: messageType,\n\t\t\t\t\tmessage: t(message, {\n\t\t\t\t\t\tchannelName: roomCoordinator.getRoomName(room.t, room),\n\t\t\t\t\t\tnumberOfMembers: updatedRoom.usersCount,\n\t\t\t\t\t\tlimit: maxNumberOfAutoJoinMembers,\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t}\n\t\t\treload?.();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\treturn { handleToggleAutoJoin, canEditTeamChannel };\n};\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nmodule.export({\n  useToggleAutoJoin: function () {\n    return useToggleAutoJoin;\n  }\n});\nvar useEndpoint, usePermission, useSetting, useToastMessageDispatch;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint: function (v) {\n    useEndpoint = v;\n  },\n  usePermission: function (v) {\n    usePermission = v;\n  },\n  useSetting: function (v) {\n    useSetting = v;\n  },\n  useToastMessageDispatch: function (v) {\n    useToastMessageDispatch = v;\n  }\n}, 0);\nvar t;\nmodule.link(\"i18next\", {\n  t: function (v) {\n    t = v;\n  }\n}, 1);\nvar roomCoordinator;\nmodule.link(\"../../../../../lib/rooms/roomCoordinator\", {\n  roomCoordinator: function (v) {\n    roomCoordinator = v;\n  }\n}, 2);\nvar useToggleAutoJoin = function (room, _ref) {\n  var reload = _ref.reload,\n    mainRoom = _ref.mainRoom;\n  var dispatchToastMessage = useToastMessageDispatch();\n  var updateRoomEndpoint = useEndpoint('POST', '/v1/teams.updateRoom');\n  var canEditTeamChannel = usePermission('edit-team-channel', room._id);\n  var maxNumberOfAutoJoinMembers = useSetting('API_User_Limit');\n  var handleToggleAutoJoin = function () {\n    function _callee() {\n      var _await$updateRoomEndp, updatedRoom, messageType, message;\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (maxNumberOfAutoJoinMembers) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(updateRoomEndpoint({\n                roomId: room._id,\n                isDefault: !room.teamDefault\n              }));\n            case 5:\n              _await$updateRoomEndp = _context.sent;\n              updatedRoom = _await$updateRoomEndp.room;\n              if (updatedRoom.teamDefault) {\n                // If the number of members in the mainRoom (the team) is greater than the limit, show an info message\n                // informing that not all members will be auto-joined to the channel\n                messageType = mainRoom.usersCount > maxNumberOfAutoJoinMembers ? 'info' : 'success';\n                message = mainRoom.usersCount > maxNumberOfAutoJoinMembers ? 'Team_Auto-join_exceeded_user_limit' : 'Team_Auto-join_updated';\n                dispatchToastMessage({\n                  type: messageType,\n                  message: t(message, {\n                    channelName: roomCoordinator.getRoomName(room.t, room),\n                    numberOfMembers: updatedRoom.usersCount,\n                    limit: maxNumberOfAutoJoinMembers\n                  })\n                });\n              }\n              reload === null || reload === void 0 ? void 0 : reload();\n              _context.next = 14;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              dispatchToastMessage({\n                type: 'error',\n                message: _context.t0\n              });\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n        return _callee$;\n      }(), null, null, [[2, 11]], Promise);\n    }\n    return _callee;\n  }();\n  return {\n    handleToggleAutoJoin: handleToggleAutoJoin,\n    canEditTeamChannel: canEditTeamChannel\n  };\n};","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","export","useToggleAutoJoin","useEndpoint","usePermission","useSetting","useToastMessageDispatch","t","roomCoordinator","room","_ref","reload","mainRoom","dispatchToastMessage","updateRoomEndpoint","canEditTeamChannel","_id","maxNumberOfAutoJoinMembers","handleToggleAutoJoin","_callee","_await$updateRoomEndp","updatedRoom","messageType","message","async","_callee$","_context","prev","next","abrupt","awrap","roomId","isDefault","teamDefault","sent","usersCount","type","channelName","getRoomName","numberOfMembers","limit","t0","stop","Promise"],"sources":["client/views/teams/contextualBar/channels/hooks/useToggleAutoJoin.tsx"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { useEndpoint, usePermission, useSetting, useToastMessageDispatch } from '@rocket.chat/ui-contexts';\nimport { t } from 'i18next';\n\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\n\nexport const useToggleAutoJoin = (room: IRoom, { reload, mainRoom }: { reload?: () => void; mainRoom: IRoom }) => {\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst updateRoomEndpoint = useEndpoint('POST', '/v1/teams.updateRoom');\n\tconst canEditTeamChannel = usePermission('edit-team-channel', room._id);\n\tconst maxNumberOfAutoJoinMembers = useSetting<number>('API_User_Limit');\n\n\tconst handleToggleAutoJoin = async () => {\n\t\t// Sanity check, the setting has a default value, therefore it should always be defined\n\t\tif (!maxNumberOfAutoJoinMembers) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst { room: updatedRoom } = await updateRoomEndpoint({\n\t\t\t\troomId: room._id,\n\t\t\t\tisDefault: !room.teamDefault,\n\t\t\t});\n\t\t\tif (updatedRoom.teamDefault) {\n\t\t\t\t// If the number of members in the mainRoom (the team) is greater than the limit, show an info message\n\t\t\t\t// informing that not all members will be auto-joined to the channel\n\t\t\t\tconst messageType = mainRoom.usersCount > maxNumberOfAutoJoinMembers ? 'info' : 'success';\n\t\t\t\tconst message = mainRoom.usersCount > maxNumberOfAutoJoinMembers ? 'Team_Auto-join_exceeded_user_limit' : 'Team_Auto-join_updated';\n\n\t\t\t\tdispatchToastMessage({\n\t\t\t\t\ttype: messageType,\n\t\t\t\t\tmessage: t(message, {\n\t\t\t\t\t\tchannelName: roomCoordinator.getRoomName(room.t, room),\n\t\t\t\t\t\tnumberOfMembers: updatedRoom.usersCount,\n\t\t\t\t\t\tlimit: maxNumberOfAutoJoinMembers,\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t}\n\t\t\treload?.();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\treturn { handleToggleAutoJoin, canEditTeamChannel };\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"756a0a6d5cefcfd9dfc04630df8b4cf034d1d8b7"}
