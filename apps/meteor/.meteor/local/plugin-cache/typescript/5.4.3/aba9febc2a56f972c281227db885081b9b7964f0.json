{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/utils/server/lib/normalizeMessagesForUser.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/utils/server/lib/normalizeMessagesForUser.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/utils/server/lib/normalizeMessagesForUser.ts","inputSourceMap":{"version":3,"file":"app/utils/server/lib/normalizeMessagesForUser.ts","sourceRoot":"","sources":["app/utils/server/lib/normalizeMessagesForUser.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\n\nimport { settings } from '../../../settings/server';\n\nconst filterStarred = (message: IMessage, uid?: string): IMessage => {\n\t// if Allow_anonymous_read is enabled, uid will be undefined\n\tif (!uid) return message;\n\n\t// only return starred field if user has it starred\n\tif (message.starred && Array.isArray(message.starred)) {\n\t\tmessage.starred = message.starred.filter((star) => star._id === uid);\n\t}\n\treturn message;\n};\n\n// TODO: we should let clients get user names on demand instead of doing this\n\nfunction getNameOfUsername(users: Map<string, string>, username: string): string {\n\treturn users.get(username) || username;\n}\n\nexport const normalizeMessagesForUser = async (messages: IMessage[], uid?: string): Promise<IMessage[]> => {\n\t// if not using real names, there is nothing else to do\n\tif (!settings.get('UI_Use_Real_Name')) {\n\t\treturn messages.map((message) => filterStarred(message, uid));\n\t}\n\n\tconst usernames: Set<string> = new Set();\n\n\tmessages.forEach((message) => {\n\t\tmessage = filterStarred(message, uid);\n\n\t\tif (!message.u?.username) {\n\t\t\treturn;\n\t\t}\n\t\tusernames.add(message.u.username);\n\n\t\t(message.mentions || []).forEach(({ username }) => {\n\t\t\tif (username) {\n\t\t\t\tusernames.add(username);\n\t\t\t}\n\t\t});\n\n\t\tObject.values(message.reactions || {}).forEach((reaction) => reaction.usernames.forEach((username) => usernames.add(username)));\n\t});\n\n\tconst names = new Map();\n\n\t(\n\t\tawait Users.findUsersByUsernames([...usernames.values()], {\n\t\t\tprojection: {\n\t\t\t\tusername: 1,\n\t\t\t\tname: 1,\n\t\t\t},\n\t\t}).toArray()\n\t).forEach((user) => {\n\t\tnames.set(user.username, user.name);\n\t});\n\n\tmessages.forEach((message: IMessage) => {\n\t\tif (!message.u) {\n\t\t\treturn;\n\t\t}\n\t\tmessage.u.name = getNameOfUsername(names, message.u.username);\n\n\t\t(message.mentions || []).forEach((mention) => {\n\t\t\tif (mention.username) {\n\t\t\t\tmention.name = getNameOfUsername(names, mention.username);\n\t\t\t}\n\t\t});\n\n\t\tif (!message.reactions) {\n\t\t\treturn messages;\n\t\t}\n\n\t\tmessage.reactions = Object.fromEntries(\n\t\t\tObject.entries(message.reactions).map(([keys, reaction]) => {\n\t\t\t\treaction.names = reaction.usernames.map((username) => getNameOfUsername(names, username));\n\t\t\t\treturn [keys, reaction];\n\t\t\t}),\n\t\t);\n\t});\n\n\treturn messages;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/utils/server/lib/normalizeMessagesForUser.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/utils/server/lib/normalizeMessagesForUser.ts","inputSourceMap":{"version":3,"file":"app/utils/server/lib/normalizeMessagesForUser.ts","sourceRoot":"","sources":["app/utils/server/lib/normalizeMessagesForUser.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\n\nimport { settings } from '../../../settings/server';\n\nconst filterStarred = (message: IMessage, uid?: string): IMessage => {\n\t// if Allow_anonymous_read is enabled, uid will be undefined\n\tif (!uid) return message;\n\n\t// only return starred field if user has it starred\n\tif (message.starred && Array.isArray(message.starred)) {\n\t\tmessage.starred = message.starred.filter((star) => star._id === uid);\n\t}\n\treturn message;\n};\n\n// TODO: we should let clients get user names on demand instead of doing this\n\nfunction getNameOfUsername(users: Map<string, string>, username: string): string {\n\treturn users.get(username) || username;\n}\n\nexport const normalizeMessagesForUser = async (messages: IMessage[], uid?: string): Promise<IMessage[]> => {\n\t// if not using real names, there is nothing else to do\n\tif (!settings.get('UI_Use_Real_Name')) {\n\t\treturn messages.map((message) => filterStarred(message, uid));\n\t}\n\n\tconst usernames: Set<string> = new Set();\n\n\tmessages.forEach((message) => {\n\t\tmessage = filterStarred(message, uid);\n\n\t\tif (!message.u?.username) {\n\t\t\treturn;\n\t\t}\n\t\tusernames.add(message.u.username);\n\n\t\t(message.mentions || []).forEach(({ username }) => {\n\t\t\tif (username) {\n\t\t\t\tusernames.add(username);\n\t\t\t}\n\t\t});\n\n\t\tObject.values(message.reactions || {}).forEach((reaction) => reaction.usernames.forEach((username) => usernames.add(username)));\n\t});\n\n\tconst names = new Map();\n\n\t(\n\t\tawait Users.findUsersByUsernames([...usernames.values()], {\n\t\t\tprojection: {\n\t\t\t\tusername: 1,\n\t\t\t\tname: 1,\n\t\t\t},\n\t\t}).toArray()\n\t).forEach((user) => {\n\t\tnames.set(user.username, user.name);\n\t});\n\n\tmessages.forEach((message: IMessage) => {\n\t\tif (!message.u) {\n\t\t\treturn;\n\t\t}\n\t\tmessage.u.name = getNameOfUsername(names, message.u.username);\n\n\t\t(message.mentions || []).forEach((mention) => {\n\t\t\tif (mention.username) {\n\t\t\t\tmention.name = getNameOfUsername(names, mention.username);\n\t\t\t}\n\t\t});\n\n\t\tif (!message.reactions) {\n\t\t\treturn messages;\n\t\t}\n\n\t\tmessage.reactions = Object.fromEntries(\n\t\t\tObject.entries(message.reactions).map(([keys, reaction]) => {\n\t\t\t\treaction.names = reaction.usernames.map((username) => getNameOfUsername(names, username));\n\t\t\t\treturn [keys, reaction];\n\t\t\t}),\n\t\t);\n\t});\n\n\treturn messages;\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      normalizeMessagesForUser: () => normalizeMessagesForUser\n    });\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const filterStarred = (message, uid) => {\n      // if Allow_anonymous_read is enabled, uid will be undefined\n      if (!uid) return message;\n      // only return starred field if user has it starred\n      if (message.starred && Array.isArray(message.starred)) {\n        message.starred = message.starred.filter(star => star._id === uid);\n      }\n      return message;\n    };\n    // TODO: we should let clients get user names on demand instead of doing this\n    function getNameOfUsername(users, username) {\n      return users.get(username) || username;\n    }\n    const normalizeMessagesForUser = async (messages, uid) => {\n      // if not using real names, there is nothing else to do\n      if (!settings.get('UI_Use_Real_Name')) {\n        return messages.map(message => filterStarred(message, uid));\n      }\n      const usernames = new Set();\n      messages.forEach(message => {\n        var _message$u;\n        message = filterStarred(message, uid);\n        if (!((_message$u = message.u) !== null && _message$u !== void 0 && _message$u.username)) {\n          return;\n        }\n        usernames.add(message.u.username);\n        (message.mentions || []).forEach(_ref => {\n          let {\n            username\n          } = _ref;\n          if (username) {\n            usernames.add(username);\n          }\n        });\n        Object.values(message.reactions || {}).forEach(reaction => reaction.usernames.forEach(username => usernames.add(username)));\n      });\n      const names = new Map();\n      (await Users.findUsersByUsernames([...usernames.values()], {\n        projection: {\n          username: 1,\n          name: 1\n        }\n      }).toArray()).forEach(user => {\n        names.set(user.username, user.name);\n      });\n      messages.forEach(message => {\n        if (!message.u) {\n          return;\n        }\n        message.u.name = getNameOfUsername(names, message.u.username);\n        (message.mentions || []).forEach(mention => {\n          if (mention.username) {\n            mention.name = getNameOfUsername(names, mention.username);\n          }\n        });\n        if (!message.reactions) {\n          return messages;\n        }\n        message.reactions = Object.fromEntries(Object.entries(message.reactions).map(_ref2 => {\n          let [keys, reaction] = _ref2;\n          reaction.names = reaction.usernames.map(username => getNameOfUsername(names, username));\n          return [keys, reaction];\n        }));\n      });\n      return messages;\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","normalizeMessagesForUser","Users","link","v","settings","__reifyWaitForDeps__","filterStarred","message","uid","starred","Array","isArray","filter","star","_id","getNameOfUsername","users","username","get","messages","map","usernames","Set","forEach","_message$u","u","add","mentions","_ref","Object","values","reactions","reaction","names","Map","findUsersByUsernames","projection","name","toArray","user","set","mention","fromEntries","entries","_ref2","keys","__reify_async_result__","_reifyError","self","async"],"sources":["app/utils/server/lib/normalizeMessagesForUser.ts"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\n\nimport { settings } from '../../../settings/server';\n\nconst filterStarred = (message: IMessage, uid?: string): IMessage => {\n\t// if Allow_anonymous_read is enabled, uid will be undefined\n\tif (!uid) return message;\n\n\t// only return starred field if user has it starred\n\tif (message.starred && Array.isArray(message.starred)) {\n\t\tmessage.starred = message.starred.filter((star) => star._id === uid);\n\t}\n\treturn message;\n};\n\n// TODO: we should let clients get user names on demand instead of doing this\n\nfunction getNameOfUsername(users: Map<string, string>, username: string): string {\n\treturn users.get(username) || username;\n}\n\nexport const normalizeMessagesForUser = async (messages: IMessage[], uid?: string): Promise<IMessage[]> => {\n\t// if not using real names, there is nothing else to do\n\tif (!settings.get('UI_Use_Real_Name')) {\n\t\treturn messages.map((message) => filterStarred(message, uid));\n\t}\n\n\tconst usernames: Set<string> = new Set();\n\n\tmessages.forEach((message) => {\n\t\tmessage = filterStarred(message, uid);\n\n\t\tif (!message.u?.username) {\n\t\t\treturn;\n\t\t}\n\t\tusernames.add(message.u.username);\n\n\t\t(message.mentions || []).forEach(({ username }) => {\n\t\t\tif (username) {\n\t\t\t\tusernames.add(username);\n\t\t\t}\n\t\t});\n\n\t\tObject.values(message.reactions || {}).forEach((reaction) => reaction.usernames.forEach((username) => usernames.add(username)));\n\t});\n\n\tconst names = new Map();\n\n\t(\n\t\tawait Users.findUsersByUsernames([...usernames.values()], {\n\t\t\tprojection: {\n\t\t\t\tusername: 1,\n\t\t\t\tname: 1,\n\t\t\t},\n\t\t}).toArray()\n\t).forEach((user) => {\n\t\tnames.set(user.username, user.name);\n\t});\n\n\tmessages.forEach((message: IMessage) => {\n\t\tif (!message.u) {\n\t\t\treturn;\n\t\t}\n\t\tmessage.u.name = getNameOfUsername(names, message.u.username);\n\n\t\t(message.mentions || []).forEach((mention) => {\n\t\t\tif (mention.username) {\n\t\t\t\tmention.name = getNameOfUsername(names, mention.username);\n\t\t\t}\n\t\t});\n\n\t\tif (!message.reactions) {\n\t\t\treturn messages;\n\t\t}\n\n\t\tmessage.reactions = Object.fromEntries(\n\t\t\tObject.entries(message.reactions).map(([keys, reaction]) => {\n\t\t\t\treaction.names = reaction.usernames.map((username) => getNameOfUsername(names, username));\n\t\t\t\treturn [keys, reaction];\n\t\t\t}),\n\t\t);\n\t});\n\n\treturn messages;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"aba9febc2a56f972c281227db885081b9b7964f0"}
