{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/custom-user-status.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/custom-user-status.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/custom-user-status.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/custom-user-status.ts","sourceRoot":"","sources":["app/api/server/v1/custom-user-status.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACvD,OAAO,EAAE,2BAA2B,EAAE,MAAM,2BAA2B,CAAC;AACxE,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAC3D,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAC7B,OAAO,EAAE,kBAAkB,EAAE,MAAM,+BAA+B,CAAC;AAEnE,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,yBAAyB,EACzB,EAAE,YAAY,EAAE,IAAI,EAAE,cAAc,EAAE,2BAA2B,EAAE,EACnE;IACC,KAAK,CAAC,GAAG;QACR,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,kBAAkB,CAAC,IAAI,CAAC,WAAiE,CAAC,CAAC;QAC3H,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAEpD,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAEvC,MAAM,MAAM,GAAG;YACd,GAAG,KAAK;YACR,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,YAAY,CAAC,IAAc,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YAClF,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;SACvB,CAAC;QAEF,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,gBAAgB,CAAC,aAAa,CAAC,MAAM,EAAE;YACrE,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE;YACzB,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,KAAK;SACZ,CAAC,CAAC;QAEH,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;QAE5E,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,QAAQ;YACR,KAAK,EAAE,QAAQ,CAAC,MAAM;YACtB,MAAM;YACN,KAAK;SACL,CAAC,CAAC;IACJ,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,2BAA2B,EAC3B,EAAE,YAAY,EAAE,IAAI,EAAE,EACtB;IACC,KAAK,CAAC,IAAI;QACT,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE;YACtB,IAAI,EAAE,MAAM;YACZ,UAAU,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;SAC/B,CAAC,CAAC;QAEH,MAAM,cAAc,GAAG;YACtB,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;YAC1B,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU;SACtC,CAAC;QAEF,MAAM,MAAM,CAAC,SAAS,CAAC,0BAA0B,EAAE,cAAc,CAAC,CAAC;QAEnE,MAAM,gBAAgB,GAAG,MAAM,gBAAgB,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QACnF,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACvB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,mCAAmC,EAAE,mCAAmC,CAAC,CAAC;QAClG,CAAC;QAED,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,gBAAgB;SAChB,CAAC,CAAC;IACJ,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,2BAA2B,EAC3B,EAAE,YAAY,EAAE,IAAI,EAAE,EACtB;IACC,KAAK,CAAC,IAAI;QACT,MAAM,EAAE,kBAAkB,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QAC/C,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACzB,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,8CAA8C,CAAC,CAAC;QACvE,CAAC;QAED,MAAM,MAAM,CAAC,SAAS,CAAC,wBAAwB,EAAE,kBAAkB,CAAC,CAAC;QAErE,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,2BAA2B,EAC3B,EAAE,YAAY,EAAE,IAAI,EAAE,EACtB;IACC,KAAK,CAAC,IAAI;QACT,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE;YACtB,GAAG,EAAE,MAAM;YACX,IAAI,EAAE,MAAM;YACZ,UAAU,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;SAC/B,CAAC,CAAC;QAEH,MAAM,cAAc,GAAG;YACtB,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG;YACxB,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;YAC1B,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU;SACtC,CAAC;QAEF,MAAM,wBAAwB,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QAExF,4BAA4B;QAC5B,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAC/B,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,+CAA+C,cAAc,CAAC,GAAG,IAAI,CAAC,CAAC;QAC9F,CAAC;QAED,MAAM,MAAM,CAAC,SAAS,CAAC,0BAA0B,EAAE,cAAc,CAAC,CAAC;QAEnE,MAAM,gBAAgB,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QAEhF,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACvB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,mCAAmC,EAAE,mCAAmC,CAAC,CAAC;QAClG,CAAC;QAED,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,gBAAgB;SAChB,CAAC,CAAC;IACJ,CAAC;CACD,CACD,CAAC","sourcesContent":["import { CustomUserStatus } from '@rocket.chat/models';\nimport { isCustomUserStatusListProps } from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { API } from '../api';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\n\nAPI.v1.addRoute(\n\t'custom-user-status.list',\n\t{ authRequired: true, validateParams: isCustomUserStatusListProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams as Record<string, string | number | null | undefined>);\n\t\t\tconst { sort, query } = await this.parseJsonQuery();\n\n\t\t\tconst { name, _id } = this.queryParams;\n\n\t\t\tconst filter = {\n\t\t\t\t...query,\n\t\t\t\t...(name ? { name: { $regex: escapeRegExp(name as string), $options: 'i' } } : {}),\n\t\t\t\t...(_id ? { _id } : {}),\n\t\t\t};\n\n\t\t\tconst { cursor, totalCount } = CustomUserStatus.findPaginated(filter, {\n\t\t\t\tsort: sort || { name: 1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t});\n\n\t\t\tconst [statuses, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tstatuses,\n\t\t\t\tcount: statuses.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'custom-user-status.create',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tname: String,\n\t\t\t\tstatusType: Match.Maybe(String),\n\t\t\t});\n\n\t\t\tconst userStatusData = {\n\t\t\t\tname: this.bodyParams.name,\n\t\t\t\tstatusType: this.bodyParams.statusType,\n\t\t\t};\n\n\t\t\tawait Meteor.callAsync('insertOrUpdateUserStatus', userStatusData);\n\n\t\t\tconst customUserStatus = await CustomUserStatus.findOneByName(userStatusData.name);\n\t\t\tif (!customUserStatus) {\n\t\t\t\tthrow new Meteor.Error('error-creating-custom-user-status', 'Error creating custom user status');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcustomUserStatus,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'custom-user-status.delete',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tconst { customUserStatusId } = this.bodyParams;\n\t\t\tif (!customUserStatusId) {\n\t\t\t\treturn API.v1.failure('The \"customUserStatusId\" params is required!');\n\t\t\t}\n\n\t\t\tawait Meteor.callAsync('deleteCustomUserStatus', customUserStatusId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'custom-user-status.update',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\t_id: String,\n\t\t\t\tname: String,\n\t\t\t\tstatusType: Match.Maybe(String),\n\t\t\t});\n\n\t\t\tconst userStatusData = {\n\t\t\t\t_id: this.bodyParams._id,\n\t\t\t\tname: this.bodyParams.name,\n\t\t\t\tstatusType: this.bodyParams.statusType,\n\t\t\t};\n\n\t\t\tconst customUserStatusToUpdate = await CustomUserStatus.findOneById(userStatusData._id);\n\n\t\t\t// Ensure the message exists\n\t\t\tif (!customUserStatusToUpdate) {\n\t\t\t\treturn API.v1.failure(`No custom user status found with the id of \"${userStatusData._id}\".`);\n\t\t\t}\n\n\t\t\tawait Meteor.callAsync('insertOrUpdateUserStatus', userStatusData);\n\n\t\t\tconst customUserStatus = await CustomUserStatus.findOneById(userStatusData._id);\n\n\t\t\tif (!customUserStatus) {\n\t\t\t\tthrow new Meteor.Error('error-updating-custom-user-status', 'Error updating custom user status');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcustomUserStatus,\n\t\t\t});\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/custom-user-status.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/custom-user-status.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/custom-user-status.ts","sourceRoot":"","sources":["app/api/server/v1/custom-user-status.ts"],"names":[],"mappings":"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","sourcesContent":["import { CustomUserStatus } from '@rocket.chat/models';\nimport { isCustomUserStatusListProps } from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { API } from '../api';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\n\nAPI.v1.addRoute(\n\t'custom-user-status.list',\n\t{ authRequired: true, validateParams: isCustomUserStatusListProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams as Record<string, string | number | null | undefined>);\n\t\t\tconst { sort, query } = await this.parseJsonQuery();\n\n\t\t\tconst { name, _id } = this.queryParams;\n\n\t\t\tconst filter = {\n\t\t\t\t...query,\n\t\t\t\t...(name ? { name: { $regex: escapeRegExp(name as string), $options: 'i' } } : {}),\n\t\t\t\t...(_id ? { _id } : {}),\n\t\t\t};\n\n\t\t\tconst { cursor, totalCount } = CustomUserStatus.findPaginated(filter, {\n\t\t\t\tsort: sort || { name: 1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t});\n\n\t\t\tconst [statuses, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tstatuses,\n\t\t\t\tcount: statuses.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'custom-user-status.create',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tname: String,\n\t\t\t\tstatusType: Match.Maybe(String),\n\t\t\t});\n\n\t\t\tconst userStatusData = {\n\t\t\t\tname: this.bodyParams.name,\n\t\t\t\tstatusType: this.bodyParams.statusType,\n\t\t\t};\n\n\t\t\tawait Meteor.callAsync('insertOrUpdateUserStatus', userStatusData);\n\n\t\t\tconst customUserStatus = await CustomUserStatus.findOneByName(userStatusData.name);\n\t\t\tif (!customUserStatus) {\n\t\t\t\tthrow new Meteor.Error('error-creating-custom-user-status', 'Error creating custom user status');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcustomUserStatus,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'custom-user-status.delete',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tconst { customUserStatusId } = this.bodyParams;\n\t\t\tif (!customUserStatusId) {\n\t\t\t\treturn API.v1.failure('The \"customUserStatusId\" params is required!');\n\t\t\t}\n\n\t\t\tawait Meteor.callAsync('deleteCustomUserStatus', customUserStatusId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'custom-user-status.update',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\t_id: String,\n\t\t\t\tname: String,\n\t\t\t\tstatusType: Match.Maybe(String),\n\t\t\t});\n\n\t\t\tconst userStatusData = {\n\t\t\t\t_id: this.bodyParams._id,\n\t\t\t\tname: this.bodyParams.name,\n\t\t\t\tstatusType: this.bodyParams.statusType,\n\t\t\t};\n\n\t\t\tconst customUserStatusToUpdate = await CustomUserStatus.findOneById(userStatusData._id);\n\n\t\t\t// Ensure the message exists\n\t\t\tif (!customUserStatusToUpdate) {\n\t\t\t\treturn API.v1.failure(`No custom user status found with the id of \"${userStatusData._id}\".`);\n\t\t\t}\n\n\t\t\tawait Meteor.callAsync('insertOrUpdateUserStatus', userStatusData);\n\n\t\t\tconst customUserStatus = await CustomUserStatus.findOneById(userStatusData._id);\n\n\t\t\tif (!customUserStatus) {\n\t\t\t\tthrow new Meteor.Error('error-updating-custom-user-status', 'Error updating custom user status');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcustomUserStatus,\n\t\t\t});\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let CustomUserStatus;\n    module.link(\"@rocket.chat/models\", {\n      CustomUserStatus(v) {\n        CustomUserStatus = v;\n      }\n    }, 0);\n    let isCustomUserStatusListProps;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isCustomUserStatusListProps(v) {\n        isCustomUserStatusListProps = v;\n      }\n    }, 1);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 2);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 3);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 4);\n    let API;\n    module.link(\"../api\", {\n      API(v) {\n        API = v;\n      }\n    }, 5);\n    let getPaginationItems;\n    module.link(\"../helpers/getPaginationItems\", {\n      getPaginationItems(v) {\n        getPaginationItems = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('custom-user-status.list', {\n      authRequired: true,\n      validateParams: isCustomUserStatusListProps\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort,\n          query\n        } = await this.parseJsonQuery();\n        const {\n          name,\n          _id\n        } = this.queryParams;\n        const filter = _objectSpread(_objectSpread(_objectSpread({}, query), name ? {\n          name: {\n            $regex: escapeRegExp(name),\n            $options: 'i'\n          }\n        } : {}), _id ? {\n          _id\n        } : {});\n        const {\n          cursor,\n          totalCount\n        } = CustomUserStatus.findPaginated(filter, {\n          sort: sort || {\n            name: 1\n          },\n          skip: offset,\n          limit: count\n        });\n        const [statuses, total] = await Promise.all([cursor.toArray(), totalCount]);\n        return API.v1.success({\n          statuses,\n          count: statuses.length,\n          offset,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('custom-user-status.create', {\n      authRequired: true\n    }, {\n      async post() {\n        check(this.bodyParams, {\n          name: String,\n          statusType: Match.Maybe(String)\n        });\n        const userStatusData = {\n          name: this.bodyParams.name,\n          statusType: this.bodyParams.statusType\n        };\n        await Meteor.callAsync('insertOrUpdateUserStatus', userStatusData);\n        const customUserStatus = await CustomUserStatus.findOneByName(userStatusData.name);\n        if (!customUserStatus) {\n          throw new Meteor.Error('error-creating-custom-user-status', 'Error creating custom user status');\n        }\n        return API.v1.success({\n          customUserStatus\n        });\n      }\n    });\n    API.v1.addRoute('custom-user-status.delete', {\n      authRequired: true\n    }, {\n      async post() {\n        const {\n          customUserStatusId\n        } = this.bodyParams;\n        if (!customUserStatusId) {\n          return API.v1.failure('The \"customUserStatusId\" params is required!');\n        }\n        await Meteor.callAsync('deleteCustomUserStatus', customUserStatusId);\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('custom-user-status.update', {\n      authRequired: true\n    }, {\n      async post() {\n        check(this.bodyParams, {\n          _id: String,\n          name: String,\n          statusType: Match.Maybe(String)\n        });\n        const userStatusData = {\n          _id: this.bodyParams._id,\n          name: this.bodyParams.name,\n          statusType: this.bodyParams.statusType\n        };\n        const customUserStatusToUpdate = await CustomUserStatus.findOneById(userStatusData._id);\n        // Ensure the message exists\n        if (!customUserStatusToUpdate) {\n          return API.v1.failure(\"No custom user status found with the id of \\\"\".concat(userStatusData._id, \"\\\".\"));\n        }\n        await Meteor.callAsync('insertOrUpdateUserStatus', userStatusData);\n        const customUserStatus = await CustomUserStatus.findOneById(userStatusData._id);\n        if (!customUserStatus) {\n          throw new Meteor.Error('error-updating-custom-user-status', 'Error updating custom user status');\n        }\n        return API.v1.success({\n          customUserStatus\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","CustomUserStatus","isCustomUserStatusListProps","escapeRegExp","Match","check","Meteor","API","getPaginationItems","__reifyWaitForDeps__","v1","addRoute","authRequired","validateParams","get","offset","count","queryParams","sort","query","parseJsonQuery","name","_id","filter","$regex","$options","cursor","totalCount","findPaginated","skip","limit","statuses","total","Promise","all","toArray","success","length","post","bodyParams","String","statusType","Maybe","userStatusData","callAsync","customUserStatus","findOneByName","Error","customUserStatusId","failure","customUserStatusToUpdate","findOneById","concat","__reify_async_result__","_reifyError","self","async"],"sources":["app/api/server/v1/custom-user-status.ts"],"sourcesContent":["import { CustomUserStatus } from '@rocket.chat/models';\nimport { isCustomUserStatusListProps } from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { API } from '../api';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\n\nAPI.v1.addRoute(\n\t'custom-user-status.list',\n\t{ authRequired: true, validateParams: isCustomUserStatusListProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams as Record<string, string | number | null | undefined>);\n\t\t\tconst { sort, query } = await this.parseJsonQuery();\n\n\t\t\tconst { name, _id } = this.queryParams;\n\n\t\t\tconst filter = {\n\t\t\t\t...query,\n\t\t\t\t...(name ? { name: { $regex: escapeRegExp(name as string), $options: 'i' } } : {}),\n\t\t\t\t...(_id ? { _id } : {}),\n\t\t\t};\n\n\t\t\tconst { cursor, totalCount } = CustomUserStatus.findPaginated(filter, {\n\t\t\t\tsort: sort || { name: 1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t});\n\n\t\t\tconst [statuses, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tstatuses,\n\t\t\t\tcount: statuses.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'custom-user-status.create',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tname: String,\n\t\t\t\tstatusType: Match.Maybe(String),\n\t\t\t});\n\n\t\t\tconst userStatusData = {\n\t\t\t\tname: this.bodyParams.name,\n\t\t\t\tstatusType: this.bodyParams.statusType,\n\t\t\t};\n\n\t\t\tawait Meteor.callAsync('insertOrUpdateUserStatus', userStatusData);\n\n\t\t\tconst customUserStatus = await CustomUserStatus.findOneByName(userStatusData.name);\n\t\t\tif (!customUserStatus) {\n\t\t\t\tthrow new Meteor.Error('error-creating-custom-user-status', 'Error creating custom user status');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcustomUserStatus,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'custom-user-status.delete',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tconst { customUserStatusId } = this.bodyParams;\n\t\t\tif (!customUserStatusId) {\n\t\t\t\treturn API.v1.failure('The \"customUserStatusId\" params is required!');\n\t\t\t}\n\n\t\t\tawait Meteor.callAsync('deleteCustomUserStatus', customUserStatusId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'custom-user-status.update',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\t_id: String,\n\t\t\t\tname: String,\n\t\t\t\tstatusType: Match.Maybe(String),\n\t\t\t});\n\n\t\t\tconst userStatusData = {\n\t\t\t\t_id: this.bodyParams._id,\n\t\t\t\tname: this.bodyParams.name,\n\t\t\t\tstatusType: this.bodyParams.statusType,\n\t\t\t};\n\n\t\t\tconst customUserStatusToUpdate = await CustomUserStatus.findOneById(userStatusData._id);\n\n\t\t\t// Ensure the message exists\n\t\t\tif (!customUserStatusToUpdate) {\n\t\t\t\treturn API.v1.failure(`No custom user status found with the id of \"${userStatusData._id}\".`);\n\t\t\t}\n\n\t\t\tawait Meteor.callAsync('insertOrUpdateUserStatus', userStatusData);\n\n\t\t\tconst customUserStatus = await CustomUserStatus.findOneById(userStatusData._id);\n\n\t\t\tif (!customUserStatus) {\n\t\t\t\tthrow new Meteor.Error('error-updating-custom-user-status', 'Error updating custom user status');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcustomUserStatus,\n\t\t\t});\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f2d1234bce818da11de543992267f99c9a7d9c19"}
