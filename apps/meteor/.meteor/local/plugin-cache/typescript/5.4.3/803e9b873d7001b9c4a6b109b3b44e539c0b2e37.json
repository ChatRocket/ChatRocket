{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/settings/client/lib/settings.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/settings/client/lib/settings.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/settings/client/lib/settings.ts","inputSourceMap":{"version":3,"file":"app/settings/client/lib/settings.ts","sourceRoot":"","sources":["app/settings/client/lib/settings.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAEpD,OAAO,EAAE,8BAA8B,EAAE,MAAM,gEAAgE,CAAC;AAChH,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAElD,MAAM,QAAS,SAAQ,YAAY;IAClC,gBAAgB,GAAG,8BAA8B,CAAC;IAElD,UAAU,GAAG,8BAA8B,CAAC,UAAU,CAAC;IAEvD,IAAI,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC;IAEpC,GAAG,CAAe,GAAoB,EAAE,GAAG,IAAQ;QAClD,IAAI,GAAG,YAAY,MAAM,EAAE,CAAC;YAC3B,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;QAChD,CAAC;QACD,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QACzE,CAAC;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAW,CAAC;IACrC,CAAC;IAEO,kBAAkB,CAAC,MAA4C,EAAE,WAAoB;QAC5F,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IAClD,CAAC;IAED,IAAI;QACH,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;YAC9B,KAAK,EAAE,CAAC,MAA4C,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,WAAW,CAAC;YACrG,OAAO,EAAE,CAAC,MAA4C,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,WAAW,CAAC;YACvG,OAAO,EAAE,CAAC,MAAuB,EAAE,EAAE;gBACpC,OAAO,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACnC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBAChC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;YAC/C,CAAC;SACD,CAAC,CAAC;QACH,WAAW,GAAG,KAAK,CAAC;IACrB,CAAC;CACD;AAED,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAEvC,QAAQ,CAAC,IAAI,EAAE,CAAC","sourcesContent":["import type { SettingValue } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveDict } from 'meteor/reactive-dict';\n\nimport { PublicSettingsCachedCollection } from '../../../../client/lib/settings/PublicSettingsCachedCollection';\nimport { SettingsBase } from '../../lib/settings';\n\nclass Settings extends SettingsBase {\n\tcachedCollection = PublicSettingsCachedCollection;\n\n\tcollection = PublicSettingsCachedCollection.collection;\n\n\tdict = new ReactiveDict('settings');\n\n\tget<TValue = any>(_id: string | RegExp, ...args: []): TValue {\n\t\tif (_id instanceof RegExp) {\n\t\t\tthrow new Error('RegExp Settings.get(RegExp)');\n\t\t}\n\t\tif (args.length > 0) {\n\t\t\tthrow new Error('settings.get(String, callback) only works on backend');\n\t\t}\n\t\treturn this.dict.get(_id) as TValue;\n\t}\n\n\tprivate _storeSettingValue(record: { _id: string; value: SettingValue }, initialLoad: boolean): void {\n\t\tMeteor.settings[record._id] = record.value;\n\t\tthis.dict.set(record._id, record.value);\n\t\tthis.load(record._id, record.value, initialLoad);\n\t}\n\n\tinit(): void {\n\t\tlet initialLoad = true;\n\t\tthis.collection.find().observe({\n\t\t\tadded: (record: { _id: string; value: SettingValue }) => this._storeSettingValue(record, initialLoad),\n\t\t\tchanged: (record: { _id: string; value: SettingValue }) => this._storeSettingValue(record, initialLoad),\n\t\t\tremoved: (record: { _id: string }) => {\n\t\t\t\tdelete Meteor.settings[record._id];\n\t\t\t\tthis.dict.set(record._id, null);\n\t\t\t\tthis.load(record._id, undefined, initialLoad);\n\t\t\t},\n\t\t});\n\t\tinitialLoad = false;\n\t}\n}\n\nexport const settings = new Settings();\n\nsettings.init();\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/settings/client/lib/settings.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/settings/client/lib/settings.ts","inputSourceMap":{"version":3,"file":"app/settings/client/lib/settings.ts","sourceRoot":"","sources":["app/settings/client/lib/settings.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAEpD,OAAO,EAAE,8BAA8B,EAAE,MAAM,gEAAgE,CAAC;AAChH,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAElD,MAAM,QAAS,SAAQ,YAAY;IAClC,gBAAgB,GAAG,8BAA8B,CAAC;IAElD,UAAU,GAAG,8BAA8B,CAAC,UAAU,CAAC;IAEvD,IAAI,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC;IAEpC,GAAG,CAAe,GAAoB,EAAE,GAAG,IAAQ;QAClD,IAAI,GAAG,YAAY,MAAM,EAAE,CAAC;YAC3B,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;QAChD,CAAC;QACD,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QACzE,CAAC;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAW,CAAC;IACrC,CAAC;IAEO,kBAAkB,CAAC,MAA4C,EAAE,WAAoB;QAC5F,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IAClD,CAAC;IAED,IAAI;QACH,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;YAC9B,KAAK,EAAE,CAAC,MAA4C,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,WAAW,CAAC;YACrG,OAAO,EAAE,CAAC,MAA4C,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,WAAW,CAAC;YACvG,OAAO,EAAE,CAAC,MAAuB,EAAE,EAAE;gBACpC,OAAO,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACnC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBAChC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;YAC/C,CAAC;SACD,CAAC,CAAC;QACH,WAAW,GAAG,KAAK,CAAC;IACrB,CAAC;CACD;AAED,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAEvC,QAAQ,CAAC,IAAI,EAAE,CAAC","sourcesContent":["import type { SettingValue } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveDict } from 'meteor/reactive-dict';\n\nimport { PublicSettingsCachedCollection } from '../../../../client/lib/settings/PublicSettingsCachedCollection';\nimport { SettingsBase } from '../../lib/settings';\n\nclass Settings extends SettingsBase {\n\tcachedCollection = PublicSettingsCachedCollection;\n\n\tcollection = PublicSettingsCachedCollection.collection;\n\n\tdict = new ReactiveDict('settings');\n\n\tget<TValue = any>(_id: string | RegExp, ...args: []): TValue {\n\t\tif (_id instanceof RegExp) {\n\t\t\tthrow new Error('RegExp Settings.get(RegExp)');\n\t\t}\n\t\tif (args.length > 0) {\n\t\t\tthrow new Error('settings.get(String, callback) only works on backend');\n\t\t}\n\t\treturn this.dict.get(_id) as TValue;\n\t}\n\n\tprivate _storeSettingValue(record: { _id: string; value: SettingValue }, initialLoad: boolean): void {\n\t\tMeteor.settings[record._id] = record.value;\n\t\tthis.dict.set(record._id, record.value);\n\t\tthis.load(record._id, record.value, initialLoad);\n\t}\n\n\tinit(): void {\n\t\tlet initialLoad = true;\n\t\tthis.collection.find().observe({\n\t\t\tadded: (record: { _id: string; value: SettingValue }) => this._storeSettingValue(record, initialLoad),\n\t\t\tchanged: (record: { _id: string; value: SettingValue }) => this._storeSettingValue(record, initialLoad),\n\t\t\tremoved: (record: { _id: string }) => {\n\t\t\t\tdelete Meteor.settings[record._id];\n\t\t\t\tthis.dict.set(record._id, null);\n\t\t\t\tthis.load(record._id, undefined, initialLoad);\n\t\t\t},\n\t\t});\n\t\tinitialLoad = false;\n\t}\n}\n\nexport const settings = new Settings();\n\nsettings.init();\n"]}}},"code":"module.export({\n  settings: () => settings\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 0);\nlet ReactiveDict;\nmodule.link(\"meteor/reactive-dict\", {\n  ReactiveDict(v) {\n    ReactiveDict = v;\n  }\n}, 1);\nlet PublicSettingsCachedCollection;\nmodule.link(\"../../../../client/lib/settings/PublicSettingsCachedCollection\", {\n  PublicSettingsCachedCollection(v) {\n    PublicSettingsCachedCollection = v;\n  }\n}, 2);\nlet SettingsBase;\nmodule.link(\"../../lib/settings\", {\n  SettingsBase(v) {\n    SettingsBase = v;\n  }\n}, 3);\nclass Settings extends SettingsBase {\n  constructor() {\n    super(...arguments);\n    this.cachedCollection = PublicSettingsCachedCollection;\n    this.collection = PublicSettingsCachedCollection.collection;\n    this.dict = new ReactiveDict('settings');\n  }\n  get(_id) {\n    if (_id instanceof RegExp) {\n      throw new Error('RegExp Settings.get(RegExp)');\n    }\n    if ((arguments.length <= 1 ? 0 : arguments.length - 1) > 0) {\n      throw new Error('settings.get(String, callback) only works on backend');\n    }\n    return this.dict.get(_id);\n  }\n  _storeSettingValue(record, initialLoad) {\n    Meteor.settings[record._id] = record.value;\n    this.dict.set(record._id, record.value);\n    this.load(record._id, record.value, initialLoad);\n  }\n  init() {\n    let initialLoad = true;\n    this.collection.find().observe({\n      added: record => this._storeSettingValue(record, initialLoad),\n      changed: record => this._storeSettingValue(record, initialLoad),\n      removed: record => {\n        delete Meteor.settings[record._id];\n        this.dict.set(record._id, null);\n        this.load(record._id, undefined, initialLoad);\n      }\n    });\n    initialLoad = false;\n  }\n}\nconst settings = new Settings();\nsettings.init();","map":{"version":3,"names":["module","export","settings","Meteor","link","v","ReactiveDict","PublicSettingsCachedCollection","SettingsBase","Settings","constructor","arguments","cachedCollection","collection","dict","get","_id","RegExp","Error","length","_storeSettingValue","record","initialLoad","value","set","load","init","find","observe","added","changed","removed","undefined"],"sources":["app/settings/client/lib/settings.ts"],"sourcesContent":["import type { SettingValue } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveDict } from 'meteor/reactive-dict';\n\nimport { PublicSettingsCachedCollection } from '../../../../client/lib/settings/PublicSettingsCachedCollection';\nimport { SettingsBase } from '../../lib/settings';\n\nclass Settings extends SettingsBase {\n\tcachedCollection = PublicSettingsCachedCollection;\n\n\tcollection = PublicSettingsCachedCollection.collection;\n\n\tdict = new ReactiveDict('settings');\n\n\tget<TValue = any>(_id: string | RegExp, ...args: []): TValue {\n\t\tif (_id instanceof RegExp) {\n\t\t\tthrow new Error('RegExp Settings.get(RegExp)');\n\t\t}\n\t\tif (args.length > 0) {\n\t\t\tthrow new Error('settings.get(String, callback) only works on backend');\n\t\t}\n\t\treturn this.dict.get(_id) as TValue;\n\t}\n\n\tprivate _storeSettingValue(record: { _id: string; value: SettingValue }, initialLoad: boolean): void {\n\t\tMeteor.settings[record._id] = record.value;\n\t\tthis.dict.set(record._id, record.value);\n\t\tthis.load(record._id, record.value, initialLoad);\n\t}\n\n\tinit(): void {\n\t\tlet initialLoad = true;\n\t\tthis.collection.find().observe({\n\t\t\tadded: (record: { _id: string; value: SettingValue }) => this._storeSettingValue(record, initialLoad),\n\t\t\tchanged: (record: { _id: string; value: SettingValue }) => this._storeSettingValue(record, initialLoad),\n\t\t\tremoved: (record: { _id: string }) => {\n\t\t\t\tdelete Meteor.settings[record._id];\n\t\t\t\tthis.dict.set(record._id, null);\n\t\t\t\tthis.load(record._id, undefined, initialLoad);\n\t\t\t},\n\t\t});\n\t\tinitialLoad = false;\n\t}\n}\n\nexport const settings = new Settings();\n\nsettings.init();\n"],"mappings":"AACAA,MAAA,CAAOC,MAAE;EAAMC,QAAQ,EAAAA,CAAA,KAAAA;AAAA,EAAe;AAAC,IAAAC,MAAA;AAAAH,MAAA,CAAAI,IAAA;EAAAD,OAAAE,CAAA;IAAAF,MAAA,GAAAE,CAAA;EAAA;AAAA;AAAA,IAAAC,YAAA;AAAAN,MAAA,CAAAI,IAAA;EAAAE,aAAAD,CAAA;IAAAC,YAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,8BAAA;AAAAP,MAAA,CAAAI,IAAA;EAAAG,+BAAAF,CAAA;IAAAE,8BAAA,GAAAF,CAAA;EAAA;AAAA;AAAA,IAAAG,YAAA;AAAAR,MAAA,CAAAI,IAAA;EAAAI,aAAAH,CAAA;IAAAG,YAAA,GAAAH,CAAA;EAAA;AAAA;AAMvC,MAAMI,QAAS,SAAQD,YAAY;EAAAE,YAAA;IAAA,SAAAC,SAAA;IAAA,KAClCC,gBAAgB,GAAGL,8BAA8B;IAAA,KAEjDM,UAAU,GAAGN,8BAA8B,CAACM,UAAU;IAAA,KAEtDC,IAAI,GAAG,IAAIR,YAAY,CAAC,UAAU,CAAC;EAAA;EAEnCS,GAAGA,CAAeC,GAAoB,EAAa;IAClD,IAAIA,GAAG,YAAYC,MAAM,EAAE;MAC1B,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAC/C;IACA,IAAI,CAAAP,SAAA,CAAAQ,MAAA,YAAAR,SAAA,CAAAQ,MAAA,QAAc,CAAC,EAAE;MACpB,MAAM,IAAID,KAAK,CAAC,sDAAsD,CAAC;IACxE;IACA,OAAO,IAAI,CAACJ,IAAI,CAACC,GAAG,CAACC,GAAG,CAAW;EACpC;EAEQI,kBAAkBA,CAACC,MAA4C,EAAEC,WAAoB;IAC5FnB,MAAM,CAACD,QAAQ,CAACmB,MAAM,CAACL,GAAG,CAAC,GAAGK,MAAM,CAACE,KAAK;IAC1C,IAAI,CAACT,IAAI,CAACU,GAAG,CAACH,MAAM,CAACL,GAAG,EAAEK,MAAM,CAACE,KAAK,CAAC;IACvC,IAAI,CAACE,IAAI,CAACJ,MAAM,CAACL,GAAG,EAAEK,MAAM,CAACE,KAAK,EAAED,WAAW,CAAC;EACjD;EAEAI,IAAIA,CAAA;IACH,IAAIJ,WAAW,GAAG,IAAI;IACtB,IAAI,CAACT,UAAU,CAACc,IAAI,EAAE,CAACC,OAAO,CAAC;MAC9BC,KAAK,EAAGR,MAA4C,IAAK,IAAI,CAACD,kBAAkB,CAACC,MAAM,EAAEC,WAAW,CAAC;MACrGQ,OAAO,EAAGT,MAA4C,IAAK,IAAI,CAACD,kBAAkB,CAACC,MAAM,EAAEC,WAAW,CAAC;MACvGS,OAAO,EAAGV,MAAuB,IAAI;QACpC,OAAOlB,MAAM,CAACD,QAAQ,CAACmB,MAAM,CAACL,GAAG,CAAC;QAClC,IAAI,CAACF,IAAI,CAACU,GAAG,CAACH,MAAM,CAACL,GAAG,EAAE,IAAI,CAAC;QAC/B,IAAI,CAACS,IAAI,CAACJ,MAAM,CAACL,GAAG,EAAEgB,SAAS,EAAEV,WAAW,CAAC;MAC9C;KACA,CAAC;IACFA,WAAW,GAAG,KAAK;EACpB;;AAGM,MAAMpB,QAAQ,GAAG,IAAIO,QAAQ,EAAE;AAEtCP,QAAQ,CAACwB,IAAI,EAAE","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"803e9b873d7001b9c4a6b109b3b44e539c0b2e37"}
