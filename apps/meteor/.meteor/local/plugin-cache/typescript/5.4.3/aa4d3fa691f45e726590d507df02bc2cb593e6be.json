{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/federation/server/functions/helpers.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/functions/helpers.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/federation/server/functions/helpers.ts","inputSourceMap":{"version":3,"file":"app/federation/server/functions/helpers.ts","sourceRoot":"","sources":["app/federation/server/functions/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import { isDirectMessageRoom } from '@rocket.chat/core-typings';\nimport type { ISubscription, IUser, IRoom } from '@rocket.chat/core-typings';\nimport { Settings, Users, Subscriptions } from '@rocket.chat/models';\n\nimport { notifyOnSettingChangedById } from '../../../lib/server/lib/notifyListener';\nimport { STATUS_ENABLED, STATUS_REGISTERING } from '../constants';\n\nexport const getNameAndDomain = (fullyQualifiedName: string): string[] => fullyQualifiedName.split('@');\n\nexport const isFullyQualified = (name: string): boolean => name.indexOf('@') !== -1;\n\nexport async function isRegisteringOrEnabled(): Promise<boolean> {\n\tconst value = await Settings.getValueById('FEDERATION_Status');\n\treturn typeof value === 'string' && [STATUS_ENABLED, STATUS_REGISTERING].includes(value);\n}\n\nexport async function updateStatus(status: string): Promise<void> {\n\t// No need to call ws listener because current function is called on startup\n\tawait Settings.updateValueById('FEDERATION_Status', status);\n}\n\nexport async function updateEnabled(enabled: boolean): Promise<void> {\n\t(await Settings.updateValueById('FEDERATION_Enabled', enabled)).modifiedCount && void notifyOnSettingChangedById('FEDERATION_Enabled');\n}\n\nexport const checkRoomType = (room: IRoom): boolean => room.t === 'p' || room.t === 'd';\nexport const checkRoomDomainsLength = (domains: unknown[]): boolean => domains.length <= Number(process.env.FEDERATED_DOMAINS_LENGTH ?? 10);\n\nexport const hasExternalDomain = ({ federation }: { federation: { origin: string; domains: string[] } }): boolean => {\n\t// same test as isFederated(room)\n\tif (!federation) {\n\t\treturn false;\n\t}\n\n\treturn federation.domains.some((domain) => domain !== federation.origin);\n};\n\nexport const isLocalUser = ({ federation }: { federation: { origin: string } }, localDomain: string): boolean =>\n\t!federation || federation.origin === localDomain;\n\nexport const getFederatedRoomData = async (\n\troom: IRoom,\n): Promise<{\n\thasFederatedUser: boolean;\n\tusers: IUser[];\n\tsubscriptions: { [k: string]: ISubscription } | undefined;\n}> => {\n\tif (isDirectMessageRoom(room)) {\n\t\t// Check if there is a federated user on this room\n\n\t\treturn {\n\t\t\tusers: [],\n\t\t\thasFederatedUser: room.usernames.some(isFullyQualified),\n\t\t\tsubscriptions: undefined,\n\t\t};\n\t}\n\n\t// Find all subscriptions of this room\n\tconst s = await Subscriptions.findByRoomIdWhenUsernameExists(room._id).toArray();\n\tconst subscriptions = s.reduce(\n\t\t(acc, s) => {\n\t\t\tacc[s.u._id] = s;\n\t\t\treturn acc;\n\t\t},\n\t\t{} as { [k: string]: ISubscription },\n\t);\n\n\t// Get all user ids\n\tconst userIds = Object.keys(subscriptions);\n\n\t// Load all the users\n\tconst users = await Users.findUsersWithUsernameByIds(userIds).toArray();\n\n\t// Check if there is a federated user on this room\n\tconst hasFederatedUser = users.some((u) => u.username && isFullyQualified(u.username));\n\n\treturn {\n\t\thasFederatedUser,\n\t\tusers,\n\t\tsubscriptions,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/federation/server/functions/helpers.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/functions/helpers.ts","inputSourceMap":{"version":3,"file":"app/federation/server/functions/helpers.ts","sourceRoot":"","sources":["app/federation/server/functions/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import { isDirectMessageRoom } from '@rocket.chat/core-typings';\nimport type { ISubscription, IUser, IRoom } from '@rocket.chat/core-typings';\nimport { Settings, Users, Subscriptions } from '@rocket.chat/models';\n\nimport { notifyOnSettingChangedById } from '../../../lib/server/lib/notifyListener';\nimport { STATUS_ENABLED, STATUS_REGISTERING } from '../constants';\n\nexport const getNameAndDomain = (fullyQualifiedName: string): string[] => fullyQualifiedName.split('@');\n\nexport const isFullyQualified = (name: string): boolean => name.indexOf('@') !== -1;\n\nexport async function isRegisteringOrEnabled(): Promise<boolean> {\n\tconst value = await Settings.getValueById('FEDERATION_Status');\n\treturn typeof value === 'string' && [STATUS_ENABLED, STATUS_REGISTERING].includes(value);\n}\n\nexport async function updateStatus(status: string): Promise<void> {\n\t// No need to call ws listener because current function is called on startup\n\tawait Settings.updateValueById('FEDERATION_Status', status);\n}\n\nexport async function updateEnabled(enabled: boolean): Promise<void> {\n\t(await Settings.updateValueById('FEDERATION_Enabled', enabled)).modifiedCount && void notifyOnSettingChangedById('FEDERATION_Enabled');\n}\n\nexport const checkRoomType = (room: IRoom): boolean => room.t === 'p' || room.t === 'd';\nexport const checkRoomDomainsLength = (domains: unknown[]): boolean => domains.length <= Number(process.env.FEDERATED_DOMAINS_LENGTH ?? 10);\n\nexport const hasExternalDomain = ({ federation }: { federation: { origin: string; domains: string[] } }): boolean => {\n\t// same test as isFederated(room)\n\tif (!federation) {\n\t\treturn false;\n\t}\n\n\treturn federation.domains.some((domain) => domain !== federation.origin);\n};\n\nexport const isLocalUser = ({ federation }: { federation: { origin: string } }, localDomain: string): boolean =>\n\t!federation || federation.origin === localDomain;\n\nexport const getFederatedRoomData = async (\n\troom: IRoom,\n): Promise<{\n\thasFederatedUser: boolean;\n\tusers: IUser[];\n\tsubscriptions: { [k: string]: ISubscription } | undefined;\n}> => {\n\tif (isDirectMessageRoom(room)) {\n\t\t// Check if there is a federated user on this room\n\n\t\treturn {\n\t\t\tusers: [],\n\t\t\thasFederatedUser: room.usernames.some(isFullyQualified),\n\t\t\tsubscriptions: undefined,\n\t\t};\n\t}\n\n\t// Find all subscriptions of this room\n\tconst s = await Subscriptions.findByRoomIdWhenUsernameExists(room._id).toArray();\n\tconst subscriptions = s.reduce(\n\t\t(acc, s) => {\n\t\t\tacc[s.u._id] = s;\n\t\t\treturn acc;\n\t\t},\n\t\t{} as { [k: string]: ISubscription },\n\t);\n\n\t// Get all user ids\n\tconst userIds = Object.keys(subscriptions);\n\n\t// Load all the users\n\tconst users = await Users.findUsersWithUsernameByIds(userIds).toArray();\n\n\t// Check if there is a federated user on this room\n\tconst hasFederatedUser = users.some((u) => u.username && isFullyQualified(u.username));\n\n\treturn {\n\t\thasFederatedUser,\n\t\tusers,\n\t\tsubscriptions,\n\t};\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      getNameAndDomain: () => getNameAndDomain,\n      isFullyQualified: () => isFullyQualified,\n      isRegisteringOrEnabled: () => isRegisteringOrEnabled,\n      updateStatus: () => updateStatus,\n      updateEnabled: () => updateEnabled,\n      checkRoomType: () => checkRoomType,\n      checkRoomDomainsLength: () => checkRoomDomainsLength,\n      hasExternalDomain: () => hasExternalDomain,\n      isLocalUser: () => isLocalUser,\n      getFederatedRoomData: () => getFederatedRoomData\n    });\n    let isDirectMessageRoom;\n    module.link(\"@rocket.chat/core-typings\", {\n      isDirectMessageRoom(v) {\n        isDirectMessageRoom = v;\n      }\n    }, 0);\n    let Settings, Users, Subscriptions;\n    module.link(\"@rocket.chat/models\", {\n      Settings(v) {\n        Settings = v;\n      },\n      Users(v) {\n        Users = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      }\n    }, 1);\n    let notifyOnSettingChangedById;\n    module.link(\"../../../lib/server/lib/notifyListener\", {\n      notifyOnSettingChangedById(v) {\n        notifyOnSettingChangedById = v;\n      }\n    }, 2);\n    let STATUS_ENABLED, STATUS_REGISTERING;\n    module.link(\"../constants\", {\n      STATUS_ENABLED(v) {\n        STATUS_ENABLED = v;\n      },\n      STATUS_REGISTERING(v) {\n        STATUS_REGISTERING = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const getNameAndDomain = fullyQualifiedName => fullyQualifiedName.split('@');\n    const isFullyQualified = name => name.indexOf('@') !== -1;\n    async function isRegisteringOrEnabled() {\n      const value = await Settings.getValueById('FEDERATION_Status');\n      return typeof value === 'string' && [STATUS_ENABLED, STATUS_REGISTERING].includes(value);\n    }\n    async function updateStatus(status) {\n      // No need to call ws listener because current function is called on startup\n      await Settings.updateValueById('FEDERATION_Status', status);\n    }\n    async function updateEnabled(enabled) {\n      (await Settings.updateValueById('FEDERATION_Enabled', enabled)).modifiedCount && void notifyOnSettingChangedById('FEDERATION_Enabled');\n    }\n    const checkRoomType = room => room.t === 'p' || room.t === 'd';\n    const checkRoomDomainsLength = domains => {\n      var _process$env$FEDERATE;\n      return domains.length <= Number((_process$env$FEDERATE = process.env.FEDERATED_DOMAINS_LENGTH) !== null && _process$env$FEDERATE !== void 0 ? _process$env$FEDERATE : 10);\n    };\n    const hasExternalDomain = _ref => {\n      let {\n        federation\n      } = _ref;\n      // same test as isFederated(room)\n      if (!federation) {\n        return false;\n      }\n      return federation.domains.some(domain => domain !== federation.origin);\n    };\n    const isLocalUser = (_ref2, localDomain) => {\n      let {\n        federation\n      } = _ref2;\n      return !federation || federation.origin === localDomain;\n    };\n    const getFederatedRoomData = async room => {\n      if (isDirectMessageRoom(room)) {\n        // Check if there is a federated user on this room\n        return {\n          users: [],\n          hasFederatedUser: room.usernames.some(isFullyQualified),\n          subscriptions: undefined\n        };\n      }\n      // Find all subscriptions of this room\n      const s = await Subscriptions.findByRoomIdWhenUsernameExists(room._id).toArray();\n      const subscriptions = s.reduce((acc, s) => {\n        acc[s.u._id] = s;\n        return acc;\n      }, {});\n      // Get all user ids\n      const userIds = Object.keys(subscriptions);\n      // Load all the users\n      const users = await Users.findUsersWithUsernameByIds(userIds).toArray();\n      // Check if there is a federated user on this room\n      const hasFederatedUser = users.some(u => u.username && isFullyQualified(u.username));\n      return {\n        hasFederatedUser,\n        users,\n        subscriptions\n      };\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","getNameAndDomain","isFullyQualified","isRegisteringOrEnabled","updateStatus","updateEnabled","checkRoomType","checkRoomDomainsLength","hasExternalDomain","isLocalUser","getFederatedRoomData","isDirectMessageRoom","link","v","Settings","Users","Subscriptions","notifyOnSettingChangedById","STATUS_ENABLED","STATUS_REGISTERING","__reifyWaitForDeps__","fullyQualifiedName","split","name","indexOf","value","getValueById","includes","status","updateValueById","enabled","modifiedCount","room","t","domains","_process$env$FEDERATE","length","Number","process","env","FEDERATED_DOMAINS_LENGTH","_ref","federation","some","domain","origin","_ref2","localDomain","users","hasFederatedUser","usernames","subscriptions","undefined","s","findByRoomIdWhenUsernameExists","_id","toArray","reduce","acc","u","userIds","Object","keys","findUsersWithUsernameByIds","username","__reify_async_result__","_reifyError","self","async"],"sources":["app/federation/server/functions/helpers.ts"],"sourcesContent":["import { isDirectMessageRoom } from '@rocket.chat/core-typings';\nimport type { ISubscription, IUser, IRoom } from '@rocket.chat/core-typings';\nimport { Settings, Users, Subscriptions } from '@rocket.chat/models';\n\nimport { notifyOnSettingChangedById } from '../../../lib/server/lib/notifyListener';\nimport { STATUS_ENABLED, STATUS_REGISTERING } from '../constants';\n\nexport const getNameAndDomain = (fullyQualifiedName: string): string[] => fullyQualifiedName.split('@');\n\nexport const isFullyQualified = (name: string): boolean => name.indexOf('@') !== -1;\n\nexport async function isRegisteringOrEnabled(): Promise<boolean> {\n\tconst value = await Settings.getValueById('FEDERATION_Status');\n\treturn typeof value === 'string' && [STATUS_ENABLED, STATUS_REGISTERING].includes(value);\n}\n\nexport async function updateStatus(status: string): Promise<void> {\n\t// No need to call ws listener because current function is called on startup\n\tawait Settings.updateValueById('FEDERATION_Status', status);\n}\n\nexport async function updateEnabled(enabled: boolean): Promise<void> {\n\t(await Settings.updateValueById('FEDERATION_Enabled', enabled)).modifiedCount && void notifyOnSettingChangedById('FEDERATION_Enabled');\n}\n\nexport const checkRoomType = (room: IRoom): boolean => room.t === 'p' || room.t === 'd';\nexport const checkRoomDomainsLength = (domains: unknown[]): boolean => domains.length <= Number(process.env.FEDERATED_DOMAINS_LENGTH ?? 10);\n\nexport const hasExternalDomain = ({ federation }: { federation: { origin: string; domains: string[] } }): boolean => {\n\t// same test as isFederated(room)\n\tif (!federation) {\n\t\treturn false;\n\t}\n\n\treturn federation.domains.some((domain) => domain !== federation.origin);\n};\n\nexport const isLocalUser = ({ federation }: { federation: { origin: string } }, localDomain: string): boolean =>\n\t!federation || federation.origin === localDomain;\n\nexport const getFederatedRoomData = async (\n\troom: IRoom,\n): Promise<{\n\thasFederatedUser: boolean;\n\tusers: IUser[];\n\tsubscriptions: { [k: string]: ISubscription } | undefined;\n}> => {\n\tif (isDirectMessageRoom(room)) {\n\t\t// Check if there is a federated user on this room\n\n\t\treturn {\n\t\t\tusers: [],\n\t\t\thasFederatedUser: room.usernames.some(isFullyQualified),\n\t\t\tsubscriptions: undefined,\n\t\t};\n\t}\n\n\t// Find all subscriptions of this room\n\tconst s = await Subscriptions.findByRoomIdWhenUsernameExists(room._id).toArray();\n\tconst subscriptions = s.reduce(\n\t\t(acc, s) => {\n\t\t\tacc[s.u._id] = s;\n\t\t\treturn acc;\n\t\t},\n\t\t{} as { [k: string]: ISubscription },\n\t);\n\n\t// Get all user ids\n\tconst userIds = Object.keys(subscriptions);\n\n\t// Load all the users\n\tconst users = await Users.findUsersWithUsernameByIds(userIds).toArray();\n\n\t// Check if there is a federated user on this room\n\tconst hasFederatedUser = users.some((u) => u.username && isFullyQualified(u.username));\n\n\treturn {\n\t\thasFederatedUser,\n\t\tusers,\n\t\tsubscriptions,\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"aa4d3fa691f45e726590d507df02bc2cb593e6be"}
