{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/channel-settings/server/methods/saveRoomSettings.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/channel-settings/server/methods/saveRoomSettings.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/channel-settings/server/methods/saveRoomSettings.ts","inputSourceMap":{"version":3,"file":"app/channel-settings/server/methods/saveRoomSettings.ts","sourceRoot":"","sources":["app/channel-settings/server/methods/saveRoomSettings.ts"],"names":[],"mappings":"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","sourcesContent":["import { Team } from '@rocket.chat/core-services';\nimport type { IRoom, IRoomWithRetentionPolicy, IUser, MessageTypesValues } from '@rocket.chat/core-typings';\nimport { TEAM_TYPE, isValidSidepanel } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Users } from '@rocket.chat/models';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { RoomSettingsEnum } from '../../../../definition/IRoomTypeConfig';\nimport { roomCoordinator } from '../../../../server/lib/rooms/roomCoordinator';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { setRoomAvatar } from '../../../lib/server/functions/setRoomAvatar';\nimport { notifyOnRoomChangedById } from '../../../lib/server/lib/notifyListener';\nimport { saveReactWhenReadOnly } from '../functions/saveReactWhenReadOnly';\nimport { saveRoomAnnouncement } from '../functions/saveRoomAnnouncement';\nimport { saveRoomCustomFields } from '../functions/saveRoomCustomFields';\nimport { saveRoomDescription } from '../functions/saveRoomDescription';\nimport { saveRoomEncrypted } from '../functions/saveRoomEncrypted';\nimport { saveRoomName } from '../functions/saveRoomName';\nimport { saveRoomReadOnly } from '../functions/saveRoomReadOnly';\nimport { saveRoomSystemMessages } from '../functions/saveRoomSystemMessages';\nimport { saveRoomTopic } from '../functions/saveRoomTopic';\nimport { saveRoomType } from '../functions/saveRoomType';\n\ntype RoomSettings = {\n\troomAvatar: string;\n\tfeatured: boolean;\n\troomName: string | undefined;\n\troomTopic: string;\n\troomAnnouncement: string;\n\troomCustomFields: Record<string, any>;\n\troomDescription: string;\n\troomType: IRoom['t'];\n\treadOnly: boolean;\n\treactWhenReadOnly: boolean;\n\tsystemMessages: MessageTypesValues[];\n\tdefault: boolean;\n\tjoinCode: string;\n\tretentionEnabled: boolean;\n\tretentionMaxAge: number;\n\tretentionExcludePinned: boolean;\n\tretentionFilesOnly: boolean;\n\tretentionIgnoreThreads: boolean;\n\tretentionOverrideGlobal: boolean;\n\tencrypted: boolean;\n\tfavorite: {\n\t\tfavorite: boolean;\n\t\tdefaultValue: boolean;\n\t};\n\tsidepanel?: IRoom['sidepanel'];\n};\n\ntype RoomSettingsValidators = {\n\t[TRoomSetting in keyof RoomSettings]?: (params: {\n\t\tuserId: IUser['_id'];\n\t\tvalue: RoomSettings[TRoomSetting];\n\t\troom: IRoom;\n\t\trid: IRoom['_id'];\n\t}) => Promise<void> | void;\n};\n\nconst hasRetentionPolicy = (room: IRoom & { retention?: any }): room is IRoomWithRetentionPolicy =>\n\t'retention' in room && room.retention !== undefined;\n\nconst validators: RoomSettingsValidators = {\n\tasync default({ userId }) {\n\t\tif (!(await hasPermissionAsync(userId, 'view-room-administration'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Viewing room administration is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Viewing_room_administration',\n\t\t\t});\n\t\t}\n\t},\n\tasync featured({ userId }) {\n\t\tif (!(await hasPermissionAsync(userId, 'view-room-administration'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Viewing room administration is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Viewing_room_administration',\n\t\t\t});\n\t\t}\n\t},\n\tasync sidepanel({ room, userId, value }) {\n\t\tif (!room.teamMain) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Invalid room', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t});\n\t\t}\n\n\t\tif (!(await hasPermissionAsync(userId, 'edit-team', room._id))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'You do not have permission to change sidepanel items', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t});\n\t\t}\n\n\t\tif (!isValidSidepanel(value)) {\n\t\t\tthrow new Meteor.Error('error-invalid-sidepanel');\n\t\t}\n\t},\n\n\tasync roomType({ userId, room, value }) {\n\t\tif (value === room.t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (value === 'c' && !room.teamId && !(await hasPermissionAsync(userId, 'create-c'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Changing a private group to a public channel is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Change_Room_Type',\n\t\t\t});\n\t\t}\n\n\t\tif (value === 'p' && !room.teamId && !(await hasPermissionAsync(userId, 'create-p'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Changing a public channel to a private room is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Change_Room_Type',\n\t\t\t});\n\t\t}\n\n\t\tif (!room.teamId) {\n\t\t\treturn;\n\t\t}\n\t\tconst team = await Team.getInfoById(room.teamId);\n\n\t\tif (value === 'c' && !(await hasPermissionAsync(userId, 'create-team-channel', team?.roomId))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', `Changing a team's private group to a public channel is not allowed`, {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Change_Room_Type',\n\t\t\t});\n\t\t}\n\n\t\tif (value === 'p' && !(await hasPermissionAsync(userId, 'create-team-group', team?.roomId))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', `Changing a team's public channel to a private room is not allowed`, {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Change_Room_Type',\n\t\t\t});\n\t\t}\n\t},\n\tasync encrypted({ userId, value, room, rid }) {\n\t\tif (value !== room.encrypted) {\n\t\t\tif (!(await roomCoordinator.getRoomDirectives(room.t).allowRoomSettingChange(room, RoomSettingsEnum.E2E))) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Only groups or direct channels can enable encryption', {\n\t\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\t\taction: 'Change_Room_Encrypted',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (room.t !== 'd' && !(await hasPermissionAsync(userId, 'toggle-room-e2e-encryption', rid))) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'You do not have permission to toggle E2E encryption', {\n\t\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\t\taction: 'Change_Room_Encrypted',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\tasync retentionEnabled({ userId, value, room, rid }) {\n\t\tif (\n\t\t\t!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) &&\n\t\t\t(!hasRetentionPolicy(room) || value !== room.retention.enabled)\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n\tasync retentionMaxAge({ userId, value, room, rid }) {\n\t\tif (\n\t\t\t!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) &&\n\t\t\t(!hasRetentionPolicy(room) || value !== room.retention.maxAge)\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n\tasync retentionExcludePinned({ userId, value, room, rid }) {\n\t\tif (\n\t\t\t!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) &&\n\t\t\t(!hasRetentionPolicy(room) || value !== room.retention.excludePinned)\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n\tasync retentionFilesOnly({ userId, value, room, rid }) {\n\t\tif (\n\t\t\t!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) &&\n\t\t\t(!hasRetentionPolicy(room) || value !== room.retention.filesOnly)\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n\tasync retentionIgnoreThreads({ userId, value, room, rid }) {\n\t\tif (\n\t\t\t!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) &&\n\t\t\t(!hasRetentionPolicy(room) || value !== room.retention.ignoreThreads)\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n\tasync roomAvatar({ userId, rid }) {\n\t\tif (!(await hasPermissionAsync(userId, 'edit-room-avatar', rid))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing a room avatar is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n};\n\ntype RoomSettingsSavers = {\n\t[TRoomSetting in keyof RoomSettings]?: (params: {\n\t\tuserId: IUser['_id'];\n\t\tuser: IUser & Required<Pick<IUser, 'username' | 'name'>>;\n\t\tvalue: RoomSettings[TRoomSetting];\n\t\troom: IRoom;\n\t\trid: IRoom['_id'];\n\t}) => void | Promise<void>;\n};\n\nconst settingSavers: RoomSettingsSavers = {\n\tasync roomName({ value, rid, user, room }) {\n\t\tif (!(await saveRoomName(rid, value, user))) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (room.teamId && room.teamMain) {\n\t\t\tvoid Team.update(user._id, room.teamId, {\n\t\t\t\ttype: room.t === 'c' ? TEAM_TYPE.PUBLIC : TEAM_TYPE.PRIVATE,\n\t\t\t\tname: value,\n\t\t\t\tupdateRoom: false,\n\t\t\t});\n\t\t}\n\t},\n\tasync roomTopic({ value, room, rid, user }) {\n\t\tif (!value && !room.topic) {\n\t\t\treturn;\n\t\t}\n\t\tif (value !== room.topic) {\n\t\t\tawait saveRoomTopic(rid, value, user);\n\t\t}\n\t},\n\tasync sidepanel({ value, rid, room }) {\n\t\tif (JSON.stringify(value) !== JSON.stringify(room.sidepanel)) {\n\t\t\tawait Rooms.setSidepanelById(rid, value);\n\t\t}\n\t},\n\tasync roomAnnouncement({ value, room, rid, user }) {\n\t\tif (!value && !room.announcement) {\n\t\t\treturn;\n\t\t}\n\t\tif (value !== room.announcement) {\n\t\t\tawait saveRoomAnnouncement(rid, value, user);\n\t\t}\n\t},\n\tasync roomCustomFields({ value, room, rid }) {\n\t\tif (value !== room.customFields) {\n\t\t\tawait saveRoomCustomFields(rid, value);\n\t\t}\n\t},\n\tasync roomDescription({ value, room, rid, user }) {\n\t\tif (!value && !room.description) {\n\t\t\treturn;\n\t\t}\n\t\tif (value !== room.description) {\n\t\t\tawait saveRoomDescription(rid, value, user);\n\t\t}\n\t},\n\tasync roomType({ value, room, rid, user }) {\n\t\tif (value === room.t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(await saveRoomType(rid, value, user))) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (room.teamId && room.teamMain) {\n\t\t\tconst type = value === 'c' ? TEAM_TYPE.PUBLIC : TEAM_TYPE.PRIVATE;\n\t\t\tvoid Team.update(user._id, room.teamId, { type, updateRoom: false });\n\t\t}\n\t},\n\tasync readOnly({ value, room, rid, user }) {\n\t\tif (value !== room.ro) {\n\t\t\tawait saveRoomReadOnly(rid, value, user);\n\t\t}\n\t},\n\tasync reactWhenReadOnly({ value, room, rid, user }) {\n\t\tif (value !== room.reactWhenReadOnly) {\n\t\t\tawait saveReactWhenReadOnly(rid, value, user);\n\t\t}\n\t},\n\tasync systemMessages({ value, room, rid }) {\n\t\tif (JSON.stringify(value) !== JSON.stringify(room.sysMes)) {\n\t\t\tawait saveRoomSystemMessages(rid, value);\n\t\t}\n\t},\n\tasync joinCode({ value, rid }) {\n\t\tawait Rooms.setJoinCodeById(rid, String(value));\n\t},\n\tasync default({ value, rid }) {\n\t\tawait Rooms.saveDefaultById(rid, value);\n\t},\n\tasync featured({ value, rid }) {\n\t\tawait Rooms.saveFeaturedById(rid, value);\n\t},\n\tasync retentionEnabled({ value, rid }) {\n\t\tawait Rooms.saveRetentionEnabledById(rid, value);\n\t},\n\tasync retentionMaxAge({ value, rid }) {\n\t\tawait Rooms.saveRetentionMaxAgeById(rid, value);\n\t},\n\tasync retentionExcludePinned({ value, rid }) {\n\t\tawait Rooms.saveRetentionExcludePinnedById(rid, value);\n\t},\n\tasync retentionFilesOnly({ value, rid }) {\n\t\tawait Rooms.saveRetentionFilesOnlyById(rid, value);\n\t},\n\tasync retentionIgnoreThreads({ value, rid }) {\n\t\tawait Rooms.saveRetentionIgnoreThreadsById(rid, value);\n\t},\n\tasync retentionOverrideGlobal({ value, rid }) {\n\t\tawait Rooms.saveRetentionOverrideGlobalById(rid, value);\n\t},\n\tasync encrypted({ value, room, rid, user }) {\n\t\tawait saveRoomEncrypted(rid, value, user, Boolean(room.encrypted) !== Boolean(value));\n\t},\n\tasync favorite({ value, rid }) {\n\t\tawait Rooms.saveFavoriteById(rid, value.favorite, value.defaultValue);\n\t},\n\tasync roomAvatar({ value, rid, user }) {\n\t\tawait setRoomAvatar(rid, value, user);\n\t},\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsaveRoomSettings(rid: IRoom['_id'], settings: Partial<RoomSettings>): Promise<{ result: true; rid: IRoom['_id'] }>;\n\t\tsaveRoomSettings<RoomSettingName extends keyof RoomSettings>(\n\t\t\trid: IRoom['_id'],\n\t\t\tsetting: RoomSettingName,\n\t\t\tvalue: RoomSettings[RoomSettingName],\n\t\t): Promise<{ result: true; rid: IRoom['_id'] }>;\n\t}\n}\n\nconst fields: (keyof RoomSettings)[] = [\n\t'roomAvatar',\n\t'featured',\n\t'roomName',\n\t'roomTopic',\n\t'roomAnnouncement',\n\t'roomCustomFields',\n\t'roomDescription',\n\t'roomType',\n\t'readOnly',\n\t'reactWhenReadOnly',\n\t'systemMessages',\n\t'default',\n\t'joinCode',\n\t'retentionEnabled',\n\t'retentionMaxAge',\n\t'retentionExcludePinned',\n\t'retentionFilesOnly',\n\t'retentionIgnoreThreads',\n\t'retentionOverrideGlobal',\n\t'encrypted',\n\t'favorite',\n\t'sidepanel',\n];\n\nconst validate = <TRoomSetting extends keyof RoomSettings>(\n\tsetting: TRoomSetting,\n\tparams: {\n\t\tuserId: IUser['_id'];\n\t\tvalue: RoomSettings[TRoomSetting];\n\t\troom: IRoom;\n\t\trid: IRoom['_id'];\n\t},\n) => {\n\tconst validator = validators[setting];\n\treturn validator?.(params);\n};\n\nasync function save<TRoomSetting extends keyof RoomSettings>(\n\tsetting: TRoomSetting,\n\tparams: {\n\t\tuserId: IUser['_id'];\n\t\tuser: IUser & Required<Pick<IUser, 'username' | 'name'>>;\n\t\tvalue: RoomSettings[TRoomSetting];\n\t\troom: IRoom;\n\t\trid: IRoom['_id'];\n\t},\n) {\n\tconst saver = settingSavers[setting];\n\tawait saver?.(params);\n}\n\nexport async function saveRoomSettings(\n\tuserId: IUser['_id'],\n\trid: IRoom['_id'],\n\tsettings: Partial<RoomSettings>,\n): Promise<{ result: true; rid: IRoom['_id'] }>;\nexport async function saveRoomSettings<RoomSettingName extends keyof RoomSettings>(\n\tuserId: IUser['_id'],\n\trid: IRoom['_id'],\n\tsetting: RoomSettingName,\n\tvalue: RoomSettings[RoomSettingName],\n): Promise<{ result: true; rid: IRoom['_id'] }>;\nexport async function saveRoomSettings(\n\tuserId: IUser['_id'],\n\trid: IRoom['_id'],\n\tsettings: Partial<RoomSettings> | keyof RoomSettings,\n\tvalue?: RoomSettings[keyof RoomSettings],\n): Promise<{ result: true; rid: IRoom['_id'] }> {\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tfunction: 'RocketChat.saveRoomName',\n\t\t});\n\t}\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\tmethod: 'saveRoomSettings',\n\t\t});\n\t}\n\n\tif (typeof settings !== 'object') {\n\t\tsettings = {\n\t\t\t[settings]: value,\n\t\t};\n\t}\n\n\tif (!Object.keys(settings).every((key) => fields.includes(key as keyof typeof settings))) {\n\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings provided', {\n\t\t\tmethod: 'saveRoomSettings',\n\t\t});\n\t}\n\n\tconst room = await Rooms.findOneById(rid);\n\n\tif (!room) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\tmethod: 'saveRoomSettings',\n\t\t});\n\t}\n\n\tif (!(await hasPermissionAsync(userId, 'edit-room', rid))) {\n\t\tif (!(Object.keys(settings).includes('encrypted') && room.t === 'd')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t\tsettings = { encrypted: settings.encrypted };\n\t}\n\n\tif (room.broadcast && (settings.readOnly || settings.reactWhenReadOnly)) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing readOnly/reactWhenReadOnly are not allowed for broadcast rooms', {\n\t\t\tmethod: 'saveRoomSettings',\n\t\t\taction: 'Editing_room',\n\t\t});\n\t}\n\n\tconst user = await Users.findOneById(userId, { projection: { username: 1, name: 1 } });\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'saveRoomSettings',\n\t\t});\n\t}\n\n\t// validations\n\tfor await (const setting of Object.keys(settings) as (keyof RoomSettings)[]) {\n\t\tawait validate(setting, {\n\t\t\tuserId,\n\t\t\tvalue: settings[setting],\n\t\t\troom,\n\t\t\trid,\n\t\t});\n\n\t\tif (setting === 'retentionOverrideGlobal' && settings.retentionOverrideGlobal === false) {\n\t\t\tdelete settings.retentionMaxAge;\n\t\t\tdelete settings.retentionExcludePinned;\n\t\t\tdelete settings.retentionFilesOnly;\n\t\t\tdelete settings.retentionIgnoreThreads;\n\t\t}\n\t}\n\n\t// saving data\n\tfor await (const setting of Object.keys(settings) as (keyof RoomSettings)[]) {\n\t\tawait save(setting, {\n\t\t\tuserId,\n\t\t\tuser: user as IUser & Required<Pick<IUser, 'username' | 'name'>>,\n\t\t\tvalue: settings[setting],\n\t\t\troom,\n\t\t\trid,\n\t\t});\n\t}\n\n\tvoid notifyOnRoomChangedById(rid);\n\n\treturn {\n\t\tresult: true,\n\t\trid: room._id,\n\t};\n}\n\nMeteor.methods<ServerMethods>({\n\tsaveRoomSettings: (...args) => {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tfunction: 'RocketChat.saveRoomName',\n\t\t\t});\n\t\t}\n\n\t\treturn saveRoomSettings(userId, ...args);\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/channel-settings/server/methods/saveRoomSettings.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/channel-settings/server/methods/saveRoomSettings.ts","inputSourceMap":{"version":3,"file":"app/channel-settings/server/methods/saveRoomSettings.ts","sourceRoot":"","sources":["app/channel-settings/server/methods/saveRoomSettings.ts"],"names":[],"mappings":"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","sourcesContent":["import { Team } from '@rocket.chat/core-services';\nimport type { IRoom, IRoomWithRetentionPolicy, IUser, MessageTypesValues } from '@rocket.chat/core-typings';\nimport { TEAM_TYPE, isValidSidepanel } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Users } from '@rocket.chat/models';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { RoomSettingsEnum } from '../../../../definition/IRoomTypeConfig';\nimport { roomCoordinator } from '../../../../server/lib/rooms/roomCoordinator';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { setRoomAvatar } from '../../../lib/server/functions/setRoomAvatar';\nimport { notifyOnRoomChangedById } from '../../../lib/server/lib/notifyListener';\nimport { saveReactWhenReadOnly } from '../functions/saveReactWhenReadOnly';\nimport { saveRoomAnnouncement } from '../functions/saveRoomAnnouncement';\nimport { saveRoomCustomFields } from '../functions/saveRoomCustomFields';\nimport { saveRoomDescription } from '../functions/saveRoomDescription';\nimport { saveRoomEncrypted } from '../functions/saveRoomEncrypted';\nimport { saveRoomName } from '../functions/saveRoomName';\nimport { saveRoomReadOnly } from '../functions/saveRoomReadOnly';\nimport { saveRoomSystemMessages } from '../functions/saveRoomSystemMessages';\nimport { saveRoomTopic } from '../functions/saveRoomTopic';\nimport { saveRoomType } from '../functions/saveRoomType';\n\ntype RoomSettings = {\n\troomAvatar: string;\n\tfeatured: boolean;\n\troomName: string | undefined;\n\troomTopic: string;\n\troomAnnouncement: string;\n\troomCustomFields: Record<string, any>;\n\troomDescription: string;\n\troomType: IRoom['t'];\n\treadOnly: boolean;\n\treactWhenReadOnly: boolean;\n\tsystemMessages: MessageTypesValues[];\n\tdefault: boolean;\n\tjoinCode: string;\n\tretentionEnabled: boolean;\n\tretentionMaxAge: number;\n\tretentionExcludePinned: boolean;\n\tretentionFilesOnly: boolean;\n\tretentionIgnoreThreads: boolean;\n\tretentionOverrideGlobal: boolean;\n\tencrypted: boolean;\n\tfavorite: {\n\t\tfavorite: boolean;\n\t\tdefaultValue: boolean;\n\t};\n\tsidepanel?: IRoom['sidepanel'];\n};\n\ntype RoomSettingsValidators = {\n\t[TRoomSetting in keyof RoomSettings]?: (params: {\n\t\tuserId: IUser['_id'];\n\t\tvalue: RoomSettings[TRoomSetting];\n\t\troom: IRoom;\n\t\trid: IRoom['_id'];\n\t}) => Promise<void> | void;\n};\n\nconst hasRetentionPolicy = (room: IRoom & { retention?: any }): room is IRoomWithRetentionPolicy =>\n\t'retention' in room && room.retention !== undefined;\n\nconst validators: RoomSettingsValidators = {\n\tasync default({ userId }) {\n\t\tif (!(await hasPermissionAsync(userId, 'view-room-administration'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Viewing room administration is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Viewing_room_administration',\n\t\t\t});\n\t\t}\n\t},\n\tasync featured({ userId }) {\n\t\tif (!(await hasPermissionAsync(userId, 'view-room-administration'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Viewing room administration is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Viewing_room_administration',\n\t\t\t});\n\t\t}\n\t},\n\tasync sidepanel({ room, userId, value }) {\n\t\tif (!room.teamMain) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Invalid room', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t});\n\t\t}\n\n\t\tif (!(await hasPermissionAsync(userId, 'edit-team', room._id))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'You do not have permission to change sidepanel items', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t});\n\t\t}\n\n\t\tif (!isValidSidepanel(value)) {\n\t\t\tthrow new Meteor.Error('error-invalid-sidepanel');\n\t\t}\n\t},\n\n\tasync roomType({ userId, room, value }) {\n\t\tif (value === room.t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (value === 'c' && !room.teamId && !(await hasPermissionAsync(userId, 'create-c'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Changing a private group to a public channel is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Change_Room_Type',\n\t\t\t});\n\t\t}\n\n\t\tif (value === 'p' && !room.teamId && !(await hasPermissionAsync(userId, 'create-p'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Changing a public channel to a private room is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Change_Room_Type',\n\t\t\t});\n\t\t}\n\n\t\tif (!room.teamId) {\n\t\t\treturn;\n\t\t}\n\t\tconst team = await Team.getInfoById(room.teamId);\n\n\t\tif (value === 'c' && !(await hasPermissionAsync(userId, 'create-team-channel', team?.roomId))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', `Changing a team's private group to a public channel is not allowed`, {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Change_Room_Type',\n\t\t\t});\n\t\t}\n\n\t\tif (value === 'p' && !(await hasPermissionAsync(userId, 'create-team-group', team?.roomId))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', `Changing a team's public channel to a private room is not allowed`, {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Change_Room_Type',\n\t\t\t});\n\t\t}\n\t},\n\tasync encrypted({ userId, value, room, rid }) {\n\t\tif (value !== room.encrypted) {\n\t\t\tif (!(await roomCoordinator.getRoomDirectives(room.t).allowRoomSettingChange(room, RoomSettingsEnum.E2E))) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Only groups or direct channels can enable encryption', {\n\t\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\t\taction: 'Change_Room_Encrypted',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (room.t !== 'd' && !(await hasPermissionAsync(userId, 'toggle-room-e2e-encryption', rid))) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'You do not have permission to toggle E2E encryption', {\n\t\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\t\taction: 'Change_Room_Encrypted',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\tasync retentionEnabled({ userId, value, room, rid }) {\n\t\tif (\n\t\t\t!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) &&\n\t\t\t(!hasRetentionPolicy(room) || value !== room.retention.enabled)\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n\tasync retentionMaxAge({ userId, value, room, rid }) {\n\t\tif (\n\t\t\t!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) &&\n\t\t\t(!hasRetentionPolicy(room) || value !== room.retention.maxAge)\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n\tasync retentionExcludePinned({ userId, value, room, rid }) {\n\t\tif (\n\t\t\t!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) &&\n\t\t\t(!hasRetentionPolicy(room) || value !== room.retention.excludePinned)\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n\tasync retentionFilesOnly({ userId, value, room, rid }) {\n\t\tif (\n\t\t\t!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) &&\n\t\t\t(!hasRetentionPolicy(room) || value !== room.retention.filesOnly)\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n\tasync retentionIgnoreThreads({ userId, value, room, rid }) {\n\t\tif (\n\t\t\t!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) &&\n\t\t\t(!hasRetentionPolicy(room) || value !== room.retention.ignoreThreads)\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n\tasync roomAvatar({ userId, rid }) {\n\t\tif (!(await hasPermissionAsync(userId, 'edit-room-avatar', rid))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing a room avatar is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n};\n\ntype RoomSettingsSavers = {\n\t[TRoomSetting in keyof RoomSettings]?: (params: {\n\t\tuserId: IUser['_id'];\n\t\tuser: IUser & Required<Pick<IUser, 'username' | 'name'>>;\n\t\tvalue: RoomSettings[TRoomSetting];\n\t\troom: IRoom;\n\t\trid: IRoom['_id'];\n\t}) => void | Promise<void>;\n};\n\nconst settingSavers: RoomSettingsSavers = {\n\tasync roomName({ value, rid, user, room }) {\n\t\tif (!(await saveRoomName(rid, value, user))) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (room.teamId && room.teamMain) {\n\t\t\tvoid Team.update(user._id, room.teamId, {\n\t\t\t\ttype: room.t === 'c' ? TEAM_TYPE.PUBLIC : TEAM_TYPE.PRIVATE,\n\t\t\t\tname: value,\n\t\t\t\tupdateRoom: false,\n\t\t\t});\n\t\t}\n\t},\n\tasync roomTopic({ value, room, rid, user }) {\n\t\tif (!value && !room.topic) {\n\t\t\treturn;\n\t\t}\n\t\tif (value !== room.topic) {\n\t\t\tawait saveRoomTopic(rid, value, user);\n\t\t}\n\t},\n\tasync sidepanel({ value, rid, room }) {\n\t\tif (JSON.stringify(value) !== JSON.stringify(room.sidepanel)) {\n\t\t\tawait Rooms.setSidepanelById(rid, value);\n\t\t}\n\t},\n\tasync roomAnnouncement({ value, room, rid, user }) {\n\t\tif (!value && !room.announcement) {\n\t\t\treturn;\n\t\t}\n\t\tif (value !== room.announcement) {\n\t\t\tawait saveRoomAnnouncement(rid, value, user);\n\t\t}\n\t},\n\tasync roomCustomFields({ value, room, rid }) {\n\t\tif (value !== room.customFields) {\n\t\t\tawait saveRoomCustomFields(rid, value);\n\t\t}\n\t},\n\tasync roomDescription({ value, room, rid, user }) {\n\t\tif (!value && !room.description) {\n\t\t\treturn;\n\t\t}\n\t\tif (value !== room.description) {\n\t\t\tawait saveRoomDescription(rid, value, user);\n\t\t}\n\t},\n\tasync roomType({ value, room, rid, user }) {\n\t\tif (value === room.t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(await saveRoomType(rid, value, user))) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (room.teamId && room.teamMain) {\n\t\t\tconst type = value === 'c' ? TEAM_TYPE.PUBLIC : TEAM_TYPE.PRIVATE;\n\t\t\tvoid Team.update(user._id, room.teamId, { type, updateRoom: false });\n\t\t}\n\t},\n\tasync readOnly({ value, room, rid, user }) {\n\t\tif (value !== room.ro) {\n\t\t\tawait saveRoomReadOnly(rid, value, user);\n\t\t}\n\t},\n\tasync reactWhenReadOnly({ value, room, rid, user }) {\n\t\tif (value !== room.reactWhenReadOnly) {\n\t\t\tawait saveReactWhenReadOnly(rid, value, user);\n\t\t}\n\t},\n\tasync systemMessages({ value, room, rid }) {\n\t\tif (JSON.stringify(value) !== JSON.stringify(room.sysMes)) {\n\t\t\tawait saveRoomSystemMessages(rid, value);\n\t\t}\n\t},\n\tasync joinCode({ value, rid }) {\n\t\tawait Rooms.setJoinCodeById(rid, String(value));\n\t},\n\tasync default({ value, rid }) {\n\t\tawait Rooms.saveDefaultById(rid, value);\n\t},\n\tasync featured({ value, rid }) {\n\t\tawait Rooms.saveFeaturedById(rid, value);\n\t},\n\tasync retentionEnabled({ value, rid }) {\n\t\tawait Rooms.saveRetentionEnabledById(rid, value);\n\t},\n\tasync retentionMaxAge({ value, rid }) {\n\t\tawait Rooms.saveRetentionMaxAgeById(rid, value);\n\t},\n\tasync retentionExcludePinned({ value, rid }) {\n\t\tawait Rooms.saveRetentionExcludePinnedById(rid, value);\n\t},\n\tasync retentionFilesOnly({ value, rid }) {\n\t\tawait Rooms.saveRetentionFilesOnlyById(rid, value);\n\t},\n\tasync retentionIgnoreThreads({ value, rid }) {\n\t\tawait Rooms.saveRetentionIgnoreThreadsById(rid, value);\n\t},\n\tasync retentionOverrideGlobal({ value, rid }) {\n\t\tawait Rooms.saveRetentionOverrideGlobalById(rid, value);\n\t},\n\tasync encrypted({ value, room, rid, user }) {\n\t\tawait saveRoomEncrypted(rid, value, user, Boolean(room.encrypted) !== Boolean(value));\n\t},\n\tasync favorite({ value, rid }) {\n\t\tawait Rooms.saveFavoriteById(rid, value.favorite, value.defaultValue);\n\t},\n\tasync roomAvatar({ value, rid, user }) {\n\t\tawait setRoomAvatar(rid, value, user);\n\t},\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsaveRoomSettings(rid: IRoom['_id'], settings: Partial<RoomSettings>): Promise<{ result: true; rid: IRoom['_id'] }>;\n\t\tsaveRoomSettings<RoomSettingName extends keyof RoomSettings>(\n\t\t\trid: IRoom['_id'],\n\t\t\tsetting: RoomSettingName,\n\t\t\tvalue: RoomSettings[RoomSettingName],\n\t\t): Promise<{ result: true; rid: IRoom['_id'] }>;\n\t}\n}\n\nconst fields: (keyof RoomSettings)[] = [\n\t'roomAvatar',\n\t'featured',\n\t'roomName',\n\t'roomTopic',\n\t'roomAnnouncement',\n\t'roomCustomFields',\n\t'roomDescription',\n\t'roomType',\n\t'readOnly',\n\t'reactWhenReadOnly',\n\t'systemMessages',\n\t'default',\n\t'joinCode',\n\t'retentionEnabled',\n\t'retentionMaxAge',\n\t'retentionExcludePinned',\n\t'retentionFilesOnly',\n\t'retentionIgnoreThreads',\n\t'retentionOverrideGlobal',\n\t'encrypted',\n\t'favorite',\n\t'sidepanel',\n];\n\nconst validate = <TRoomSetting extends keyof RoomSettings>(\n\tsetting: TRoomSetting,\n\tparams: {\n\t\tuserId: IUser['_id'];\n\t\tvalue: RoomSettings[TRoomSetting];\n\t\troom: IRoom;\n\t\trid: IRoom['_id'];\n\t},\n) => {\n\tconst validator = validators[setting];\n\treturn validator?.(params);\n};\n\nasync function save<TRoomSetting extends keyof RoomSettings>(\n\tsetting: TRoomSetting,\n\tparams: {\n\t\tuserId: IUser['_id'];\n\t\tuser: IUser & Required<Pick<IUser, 'username' | 'name'>>;\n\t\tvalue: RoomSettings[TRoomSetting];\n\t\troom: IRoom;\n\t\trid: IRoom['_id'];\n\t},\n) {\n\tconst saver = settingSavers[setting];\n\tawait saver?.(params);\n}\n\nexport async function saveRoomSettings(\n\tuserId: IUser['_id'],\n\trid: IRoom['_id'],\n\tsettings: Partial<RoomSettings>,\n): Promise<{ result: true; rid: IRoom['_id'] }>;\nexport async function saveRoomSettings<RoomSettingName extends keyof RoomSettings>(\n\tuserId: IUser['_id'],\n\trid: IRoom['_id'],\n\tsetting: RoomSettingName,\n\tvalue: RoomSettings[RoomSettingName],\n): Promise<{ result: true; rid: IRoom['_id'] }>;\nexport async function saveRoomSettings(\n\tuserId: IUser['_id'],\n\trid: IRoom['_id'],\n\tsettings: Partial<RoomSettings> | keyof RoomSettings,\n\tvalue?: RoomSettings[keyof RoomSettings],\n): Promise<{ result: true; rid: IRoom['_id'] }> {\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tfunction: 'RocketChat.saveRoomName',\n\t\t});\n\t}\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\tmethod: 'saveRoomSettings',\n\t\t});\n\t}\n\n\tif (typeof settings !== 'object') {\n\t\tsettings = {\n\t\t\t[settings]: value,\n\t\t};\n\t}\n\n\tif (!Object.keys(settings).every((key) => fields.includes(key as keyof typeof settings))) {\n\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings provided', {\n\t\t\tmethod: 'saveRoomSettings',\n\t\t});\n\t}\n\n\tconst room = await Rooms.findOneById(rid);\n\n\tif (!room) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\tmethod: 'saveRoomSettings',\n\t\t});\n\t}\n\n\tif (!(await hasPermissionAsync(userId, 'edit-room', rid))) {\n\t\tif (!(Object.keys(settings).includes('encrypted') && room.t === 'd')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t\tsettings = { encrypted: settings.encrypted };\n\t}\n\n\tif (room.broadcast && (settings.readOnly || settings.reactWhenReadOnly)) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing readOnly/reactWhenReadOnly are not allowed for broadcast rooms', {\n\t\t\tmethod: 'saveRoomSettings',\n\t\t\taction: 'Editing_room',\n\t\t});\n\t}\n\n\tconst user = await Users.findOneById(userId, { projection: { username: 1, name: 1 } });\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'saveRoomSettings',\n\t\t});\n\t}\n\n\t// validations\n\tfor await (const setting of Object.keys(settings) as (keyof RoomSettings)[]) {\n\t\tawait validate(setting, {\n\t\t\tuserId,\n\t\t\tvalue: settings[setting],\n\t\t\troom,\n\t\t\trid,\n\t\t});\n\n\t\tif (setting === 'retentionOverrideGlobal' && settings.retentionOverrideGlobal === false) {\n\t\t\tdelete settings.retentionMaxAge;\n\t\t\tdelete settings.retentionExcludePinned;\n\t\t\tdelete settings.retentionFilesOnly;\n\t\t\tdelete settings.retentionIgnoreThreads;\n\t\t}\n\t}\n\n\t// saving data\n\tfor await (const setting of Object.keys(settings) as (keyof RoomSettings)[]) {\n\t\tawait save(setting, {\n\t\t\tuserId,\n\t\t\tuser: user as IUser & Required<Pick<IUser, 'username' | 'name'>>,\n\t\t\tvalue: settings[setting],\n\t\t\troom,\n\t\t\trid,\n\t\t});\n\t}\n\n\tvoid notifyOnRoomChangedById(rid);\n\n\treturn {\n\t\tresult: true,\n\t\trid: room._id,\n\t};\n}\n\nMeteor.methods<ServerMethods>({\n\tsaveRoomSettings: (...args) => {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tfunction: 'RocketChat.saveRoomName',\n\t\t\t});\n\t\t}\n\n\t\treturn saveRoomSettings(userId, ...args);\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      saveRoomSettings: () => saveRoomSettings\n    });\n    let Team;\n    module.link(\"@rocket.chat/core-services\", {\n      Team(v) {\n        Team = v;\n      }\n    }, 0);\n    let TEAM_TYPE, isValidSidepanel;\n    module.link(\"@rocket.chat/core-typings\", {\n      TEAM_TYPE(v) {\n        TEAM_TYPE = v;\n      },\n      isValidSidepanel(v) {\n        isValidSidepanel = v;\n      }\n    }, 1);\n    let Rooms, Users;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 2);\n    let Match;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      }\n    }, 3);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 4);\n    let RoomSettingsEnum;\n    module.link(\"../../../../definition/IRoomTypeConfig\", {\n      RoomSettingsEnum(v) {\n        RoomSettingsEnum = v;\n      }\n    }, 5);\n    let roomCoordinator;\n    module.link(\"../../../../server/lib/rooms/roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 6);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 7);\n    let setRoomAvatar;\n    module.link(\"../../../lib/server/functions/setRoomAvatar\", {\n      setRoomAvatar(v) {\n        setRoomAvatar = v;\n      }\n    }, 8);\n    let notifyOnRoomChangedById;\n    module.link(\"../../../lib/server/lib/notifyListener\", {\n      notifyOnRoomChangedById(v) {\n        notifyOnRoomChangedById = v;\n      }\n    }, 9);\n    let saveReactWhenReadOnly;\n    module.link(\"../functions/saveReactWhenReadOnly\", {\n      saveReactWhenReadOnly(v) {\n        saveReactWhenReadOnly = v;\n      }\n    }, 10);\n    let saveRoomAnnouncement;\n    module.link(\"../functions/saveRoomAnnouncement\", {\n      saveRoomAnnouncement(v) {\n        saveRoomAnnouncement = v;\n      }\n    }, 11);\n    let saveRoomCustomFields;\n    module.link(\"../functions/saveRoomCustomFields\", {\n      saveRoomCustomFields(v) {\n        saveRoomCustomFields = v;\n      }\n    }, 12);\n    let saveRoomDescription;\n    module.link(\"../functions/saveRoomDescription\", {\n      saveRoomDescription(v) {\n        saveRoomDescription = v;\n      }\n    }, 13);\n    let saveRoomEncrypted;\n    module.link(\"../functions/saveRoomEncrypted\", {\n      saveRoomEncrypted(v) {\n        saveRoomEncrypted = v;\n      }\n    }, 14);\n    let saveRoomName;\n    module.link(\"../functions/saveRoomName\", {\n      saveRoomName(v) {\n        saveRoomName = v;\n      }\n    }, 15);\n    let saveRoomReadOnly;\n    module.link(\"../functions/saveRoomReadOnly\", {\n      saveRoomReadOnly(v) {\n        saveRoomReadOnly = v;\n      }\n    }, 16);\n    let saveRoomSystemMessages;\n    module.link(\"../functions/saveRoomSystemMessages\", {\n      saveRoomSystemMessages(v) {\n        saveRoomSystemMessages = v;\n      }\n    }, 17);\n    let saveRoomTopic;\n    module.link(\"../functions/saveRoomTopic\", {\n      saveRoomTopic(v) {\n        saveRoomTopic = v;\n      }\n    }, 18);\n    let saveRoomType;\n    module.link(\"../functions/saveRoomType\", {\n      saveRoomType(v) {\n        saveRoomType = v;\n      }\n    }, 19);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const hasRetentionPolicy = room => 'retention' in room && room.retention !== undefined;\n    const validators = {\n      async default(_ref) {\n        let {\n          userId\n        } = _ref;\n        if (!(await hasPermissionAsync(userId, 'view-room-administration'))) {\n          throw new Meteor.Error('error-action-not-allowed', 'Viewing room administration is not allowed', {\n            method: 'saveRoomSettings',\n            action: 'Viewing_room_administration'\n          });\n        }\n      },\n      async featured(_ref2) {\n        let {\n          userId\n        } = _ref2;\n        if (!(await hasPermissionAsync(userId, 'view-room-administration'))) {\n          throw new Meteor.Error('error-action-not-allowed', 'Viewing room administration is not allowed', {\n            method: 'saveRoomSettings',\n            action: 'Viewing_room_administration'\n          });\n        }\n      },\n      async sidepanel(_ref3) {\n        let {\n          room,\n          userId,\n          value\n        } = _ref3;\n        if (!room.teamMain) {\n          throw new Meteor.Error('error-action-not-allowed', 'Invalid room', {\n            method: 'saveRoomSettings'\n          });\n        }\n        if (!(await hasPermissionAsync(userId, 'edit-team', room._id))) {\n          throw new Meteor.Error('error-action-not-allowed', 'You do not have permission to change sidepanel items', {\n            method: 'saveRoomSettings'\n          });\n        }\n        if (!isValidSidepanel(value)) {\n          throw new Meteor.Error('error-invalid-sidepanel');\n        }\n      },\n      async roomType(_ref4) {\n        let {\n          userId,\n          room,\n          value\n        } = _ref4;\n        if (value === room.t) {\n          return;\n        }\n        if (value === 'c' && !room.teamId && !(await hasPermissionAsync(userId, 'create-c'))) {\n          throw new Meteor.Error('error-action-not-allowed', 'Changing a private group to a public channel is not allowed', {\n            method: 'saveRoomSettings',\n            action: 'Change_Room_Type'\n          });\n        }\n        if (value === 'p' && !room.teamId && !(await hasPermissionAsync(userId, 'create-p'))) {\n          throw new Meteor.Error('error-action-not-allowed', 'Changing a public channel to a private room is not allowed', {\n            method: 'saveRoomSettings',\n            action: 'Change_Room_Type'\n          });\n        }\n        if (!room.teamId) {\n          return;\n        }\n        const team = await Team.getInfoById(room.teamId);\n        if (value === 'c' && !(await hasPermissionAsync(userId, 'create-team-channel', team === null || team === void 0 ? void 0 : team.roomId))) {\n          throw new Meteor.Error('error-action-not-allowed', \"Changing a team's private group to a public channel is not allowed\", {\n            method: 'saveRoomSettings',\n            action: 'Change_Room_Type'\n          });\n        }\n        if (value === 'p' && !(await hasPermissionAsync(userId, 'create-team-group', team === null || team === void 0 ? void 0 : team.roomId))) {\n          throw new Meteor.Error('error-action-not-allowed', \"Changing a team's public channel to a private room is not allowed\", {\n            method: 'saveRoomSettings',\n            action: 'Change_Room_Type'\n          });\n        }\n      },\n      async encrypted(_ref5) {\n        let {\n          userId,\n          value,\n          room,\n          rid\n        } = _ref5;\n        if (value !== room.encrypted) {\n          if (!(await roomCoordinator.getRoomDirectives(room.t).allowRoomSettingChange(room, RoomSettingsEnum.E2E))) {\n            throw new Meteor.Error('error-action-not-allowed', 'Only groups or direct channels can enable encryption', {\n              method: 'saveRoomSettings',\n              action: 'Change_Room_Encrypted'\n            });\n          }\n          if (room.t !== 'd' && !(await hasPermissionAsync(userId, 'toggle-room-e2e-encryption', rid))) {\n            throw new Meteor.Error('error-action-not-allowed', 'You do not have permission to toggle E2E encryption', {\n              method: 'saveRoomSettings',\n              action: 'Change_Room_Encrypted'\n            });\n          }\n        }\n      },\n      async retentionEnabled(_ref6) {\n        let {\n          userId,\n          value,\n          room,\n          rid\n        } = _ref6;\n        if (!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) && (!hasRetentionPolicy(room) || value !== room.retention.enabled)) {\n          throw new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n            method: 'saveRoomSettings',\n            action: 'Editing_room'\n          });\n        }\n      },\n      async retentionMaxAge(_ref7) {\n        let {\n          userId,\n          value,\n          room,\n          rid\n        } = _ref7;\n        if (!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) && (!hasRetentionPolicy(room) || value !== room.retention.maxAge)) {\n          throw new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n            method: 'saveRoomSettings',\n            action: 'Editing_room'\n          });\n        }\n      },\n      async retentionExcludePinned(_ref8) {\n        let {\n          userId,\n          value,\n          room,\n          rid\n        } = _ref8;\n        if (!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) && (!hasRetentionPolicy(room) || value !== room.retention.excludePinned)) {\n          throw new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n            method: 'saveRoomSettings',\n            action: 'Editing_room'\n          });\n        }\n      },\n      async retentionFilesOnly(_ref9) {\n        let {\n          userId,\n          value,\n          room,\n          rid\n        } = _ref9;\n        if (!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) && (!hasRetentionPolicy(room) || value !== room.retention.filesOnly)) {\n          throw new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n            method: 'saveRoomSettings',\n            action: 'Editing_room'\n          });\n        }\n      },\n      async retentionIgnoreThreads(_ref10) {\n        let {\n          userId,\n          value,\n          room,\n          rid\n        } = _ref10;\n        if (!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) && (!hasRetentionPolicy(room) || value !== room.retention.ignoreThreads)) {\n          throw new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n            method: 'saveRoomSettings',\n            action: 'Editing_room'\n          });\n        }\n      },\n      async roomAvatar(_ref11) {\n        let {\n          userId,\n          rid\n        } = _ref11;\n        if (!(await hasPermissionAsync(userId, 'edit-room-avatar', rid))) {\n          throw new Meteor.Error('error-action-not-allowed', 'Editing a room avatar is not allowed', {\n            method: 'saveRoomSettings',\n            action: 'Editing_room'\n          });\n        }\n      }\n    };\n    const settingSavers = {\n      async roomName(_ref12) {\n        let {\n          value,\n          rid,\n          user,\n          room\n        } = _ref12;\n        if (!(await saveRoomName(rid, value, user))) {\n          return;\n        }\n        if (room.teamId && room.teamMain) {\n          void Team.update(user._id, room.teamId, {\n            type: room.t === 'c' ? TEAM_TYPE.PUBLIC : TEAM_TYPE.PRIVATE,\n            name: value,\n            updateRoom: false\n          });\n        }\n      },\n      async roomTopic(_ref13) {\n        let {\n          value,\n          room,\n          rid,\n          user\n        } = _ref13;\n        if (!value && !room.topic) {\n          return;\n        }\n        if (value !== room.topic) {\n          await saveRoomTopic(rid, value, user);\n        }\n      },\n      async sidepanel(_ref14) {\n        let {\n          value,\n          rid,\n          room\n        } = _ref14;\n        if (JSON.stringify(value) !== JSON.stringify(room.sidepanel)) {\n          await Rooms.setSidepanelById(rid, value);\n        }\n      },\n      async roomAnnouncement(_ref15) {\n        let {\n          value,\n          room,\n          rid,\n          user\n        } = _ref15;\n        if (!value && !room.announcement) {\n          return;\n        }\n        if (value !== room.announcement) {\n          await saveRoomAnnouncement(rid, value, user);\n        }\n      },\n      async roomCustomFields(_ref16) {\n        let {\n          value,\n          room,\n          rid\n        } = _ref16;\n        if (value !== room.customFields) {\n          await saveRoomCustomFields(rid, value);\n        }\n      },\n      async roomDescription(_ref17) {\n        let {\n          value,\n          room,\n          rid,\n          user\n        } = _ref17;\n        if (!value && !room.description) {\n          return;\n        }\n        if (value !== room.description) {\n          await saveRoomDescription(rid, value, user);\n        }\n      },\n      async roomType(_ref18) {\n        let {\n          value,\n          room,\n          rid,\n          user\n        } = _ref18;\n        if (value === room.t) {\n          return;\n        }\n        if (!(await saveRoomType(rid, value, user))) {\n          return;\n        }\n        if (room.teamId && room.teamMain) {\n          const type = value === 'c' ? TEAM_TYPE.PUBLIC : TEAM_TYPE.PRIVATE;\n          void Team.update(user._id, room.teamId, {\n            type,\n            updateRoom: false\n          });\n        }\n      },\n      async readOnly(_ref19) {\n        let {\n          value,\n          room,\n          rid,\n          user\n        } = _ref19;\n        if (value !== room.ro) {\n          await saveRoomReadOnly(rid, value, user);\n        }\n      },\n      async reactWhenReadOnly(_ref20) {\n        let {\n          value,\n          room,\n          rid,\n          user\n        } = _ref20;\n        if (value !== room.reactWhenReadOnly) {\n          await saveReactWhenReadOnly(rid, value, user);\n        }\n      },\n      async systemMessages(_ref21) {\n        let {\n          value,\n          room,\n          rid\n        } = _ref21;\n        if (JSON.stringify(value) !== JSON.stringify(room.sysMes)) {\n          await saveRoomSystemMessages(rid, value);\n        }\n      },\n      async joinCode(_ref22) {\n        let {\n          value,\n          rid\n        } = _ref22;\n        await Rooms.setJoinCodeById(rid, String(value));\n      },\n      async default(_ref23) {\n        let {\n          value,\n          rid\n        } = _ref23;\n        await Rooms.saveDefaultById(rid, value);\n      },\n      async featured(_ref24) {\n        let {\n          value,\n          rid\n        } = _ref24;\n        await Rooms.saveFeaturedById(rid, value);\n      },\n      async retentionEnabled(_ref25) {\n        let {\n          value,\n          rid\n        } = _ref25;\n        await Rooms.saveRetentionEnabledById(rid, value);\n      },\n      async retentionMaxAge(_ref26) {\n        let {\n          value,\n          rid\n        } = _ref26;\n        await Rooms.saveRetentionMaxAgeById(rid, value);\n      },\n      async retentionExcludePinned(_ref27) {\n        let {\n          value,\n          rid\n        } = _ref27;\n        await Rooms.saveRetentionExcludePinnedById(rid, value);\n      },\n      async retentionFilesOnly(_ref28) {\n        let {\n          value,\n          rid\n        } = _ref28;\n        await Rooms.saveRetentionFilesOnlyById(rid, value);\n      },\n      async retentionIgnoreThreads(_ref29) {\n        let {\n          value,\n          rid\n        } = _ref29;\n        await Rooms.saveRetentionIgnoreThreadsById(rid, value);\n      },\n      async retentionOverrideGlobal(_ref30) {\n        let {\n          value,\n          rid\n        } = _ref30;\n        await Rooms.saveRetentionOverrideGlobalById(rid, value);\n      },\n      async encrypted(_ref31) {\n        let {\n          value,\n          room,\n          rid,\n          user\n        } = _ref31;\n        await saveRoomEncrypted(rid, value, user, Boolean(room.encrypted) !== Boolean(value));\n      },\n      async favorite(_ref32) {\n        let {\n          value,\n          rid\n        } = _ref32;\n        await Rooms.saveFavoriteById(rid, value.favorite, value.defaultValue);\n      },\n      async roomAvatar(_ref33) {\n        let {\n          value,\n          rid,\n          user\n        } = _ref33;\n        await setRoomAvatar(rid, value, user);\n      }\n    };\n    const fields = ['roomAvatar', 'featured', 'roomName', 'roomTopic', 'roomAnnouncement', 'roomCustomFields', 'roomDescription', 'roomType', 'readOnly', 'reactWhenReadOnly', 'systemMessages', 'default', 'joinCode', 'retentionEnabled', 'retentionMaxAge', 'retentionExcludePinned', 'retentionFilesOnly', 'retentionIgnoreThreads', 'retentionOverrideGlobal', 'encrypted', 'favorite', 'sidepanel'];\n    const validate = (setting, params) => {\n      const validator = validators[setting];\n      return validator === null || validator === void 0 ? void 0 : validator(params);\n    };\n    async function save(setting, params) {\n      const saver = settingSavers[setting];\n      await (saver === null || saver === void 0 ? void 0 : saver(params));\n    }\n    async function saveRoomSettings(userId, rid, settings, value) {\n      if (!userId) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          function: 'RocketChat.saveRoomName'\n        });\n      }\n      if (!Match.test(rid, String)) {\n        throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n          method: 'saveRoomSettings'\n        });\n      }\n      if (typeof settings !== 'object') {\n        settings = {\n          [settings]: value\n        };\n      }\n      if (!Object.keys(settings).every(key => fields.includes(key))) {\n        throw new Meteor.Error('error-invalid-settings', 'Invalid settings provided', {\n          method: 'saveRoomSettings'\n        });\n      }\n      const room = await Rooms.findOneById(rid);\n      if (!room) {\n        throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n          method: 'saveRoomSettings'\n        });\n      }\n      if (!(await hasPermissionAsync(userId, 'edit-room', rid))) {\n        if (!(Object.keys(settings).includes('encrypted') && room.t === 'd')) {\n          throw new Meteor.Error('error-action-not-allowed', 'Editing room is not allowed', {\n            method: 'saveRoomSettings',\n            action: 'Editing_room'\n          });\n        }\n        settings = {\n          encrypted: settings.encrypted\n        };\n      }\n      if (room.broadcast && (settings.readOnly || settings.reactWhenReadOnly)) {\n        throw new Meteor.Error('error-action-not-allowed', 'Editing readOnly/reactWhenReadOnly are not allowed for broadcast rooms', {\n          method: 'saveRoomSettings',\n          action: 'Editing_room'\n        });\n      }\n      const user = await Users.findOneById(userId, {\n        projection: {\n          username: 1,\n          name: 1\n        }\n      });\n      if (!user) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'saveRoomSettings'\n        });\n      }\n      // validations\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(Object.keys(settings)), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const setting = _step.value;\n          {\n            await validate(setting, {\n              userId,\n              value: settings[setting],\n              room,\n              rid\n            });\n            if (setting === 'retentionOverrideGlobal' && settings.retentionOverrideGlobal === false) {\n              delete settings.retentionMaxAge;\n              delete settings.retentionExcludePinned;\n              delete settings.retentionFilesOnly;\n              delete settings.retentionIgnoreThreads;\n            }\n          }\n        }\n        // saving data\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      var _iteratorAbruptCompletion2 = false;\n      var _didIteratorError2 = false;\n      var _iteratorError2;\n      try {\n        for (var _iterator2 = _asyncIterator(Object.keys(settings)), _step2; _iteratorAbruptCompletion2 = !(_step2 = await _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n          const setting = _step2.value;\n          {\n            await save(setting, {\n              userId,\n              user: user,\n              value: settings[setting],\n              room,\n              rid\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n            await _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n      void notifyOnRoomChangedById(rid);\n      return {\n        result: true,\n        rid: room._id\n      };\n    }\n    Meteor.methods({\n      saveRoomSettings: function () {\n        const userId = Meteor.userId();\n        if (!userId) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            function: 'RocketChat.saveRoomName'\n          });\n        }\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return saveRoomSettings(userId, ...args);\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","saveRoomSettings","Team","TEAM_TYPE","isValidSidepanel","Rooms","Users","Match","Meteor","RoomSettingsEnum","roomCoordinator","hasPermissionAsync","setRoomAvatar","notifyOnRoomChangedById","saveReactWhenReadOnly","saveRoomAnnouncement","saveRoomCustomFields","saveRoomDescription","saveRoomEncrypted","saveRoomName","saveRoomReadOnly","saveRoomSystemMessages","saveRoomTopic","saveRoomType","__reifyWaitForDeps__","hasRetentionPolicy","room","retention","undefined","validators","_ref","userId","Error","method","action","featured","_ref2","sidepanel","_ref3","value","teamMain","_id","roomType","_ref4","t","teamId","team","getInfoById","roomId","encrypted","_ref5","rid","getRoomDirectives","allowRoomSettingChange","E2E","retentionEnabled","_ref6","enabled","retentionMaxAge","_ref7","maxAge","retentionExcludePinned","_ref8","excludePinned","retentionFilesOnly","_ref9","filesOnly","retentionIgnoreThreads","_ref10","ignoreThreads","roomAvatar","_ref11","settingSavers","roomName","_ref12","user","update","type","PUBLIC","PRIVATE","name","updateRoom","roomTopic","_ref13","topic","_ref14","JSON","stringify","setSidepanelById","roomAnnouncement","_ref15","announcement","roomCustomFields","_ref16","customFields","roomDescription","_ref17","description","_ref18","readOnly","_ref19","ro","reactWhenReadOnly","_ref20","systemMessages","_ref21","sysMes","joinCode","_ref22","setJoinCodeById","String","_ref23","saveDefaultById","_ref24","saveFeaturedById","_ref25","saveRetentionEnabledById","_ref26","saveRetentionMaxAgeById","_ref27","saveRetentionExcludePinnedById","_ref28","saveRetentionFilesOnlyById","_ref29","saveRetentionIgnoreThreadsById","retentionOverrideGlobal","_ref30","saveRetentionOverrideGlobalById","_ref31","Boolean","favorite","_ref32","saveFavoriteById","defaultValue","_ref33","fields","validate","setting","params","validator","save","saver","settings","function","test","Object","keys","every","key","includes","findOneById","broadcast","projection","username","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","err","return","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","result","methods","_len","arguments","length","args","Array","_key","__reify_async_result__","_reifyError","self","async"],"sources":["app/channel-settings/server/methods/saveRoomSettings.ts"],"sourcesContent":["import { Team } from '@rocket.chat/core-services';\nimport type { IRoom, IRoomWithRetentionPolicy, IUser, MessageTypesValues } from '@rocket.chat/core-typings';\nimport { TEAM_TYPE, isValidSidepanel } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Users } from '@rocket.chat/models';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { RoomSettingsEnum } from '../../../../definition/IRoomTypeConfig';\nimport { roomCoordinator } from '../../../../server/lib/rooms/roomCoordinator';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { setRoomAvatar } from '../../../lib/server/functions/setRoomAvatar';\nimport { notifyOnRoomChangedById } from '../../../lib/server/lib/notifyListener';\nimport { saveReactWhenReadOnly } from '../functions/saveReactWhenReadOnly';\nimport { saveRoomAnnouncement } from '../functions/saveRoomAnnouncement';\nimport { saveRoomCustomFields } from '../functions/saveRoomCustomFields';\nimport { saveRoomDescription } from '../functions/saveRoomDescription';\nimport { saveRoomEncrypted } from '../functions/saveRoomEncrypted';\nimport { saveRoomName } from '../functions/saveRoomName';\nimport { saveRoomReadOnly } from '../functions/saveRoomReadOnly';\nimport { saveRoomSystemMessages } from '../functions/saveRoomSystemMessages';\nimport { saveRoomTopic } from '../functions/saveRoomTopic';\nimport { saveRoomType } from '../functions/saveRoomType';\n\ntype RoomSettings = {\n\troomAvatar: string;\n\tfeatured: boolean;\n\troomName: string | undefined;\n\troomTopic: string;\n\troomAnnouncement: string;\n\troomCustomFields: Record<string, any>;\n\troomDescription: string;\n\troomType: IRoom['t'];\n\treadOnly: boolean;\n\treactWhenReadOnly: boolean;\n\tsystemMessages: MessageTypesValues[];\n\tdefault: boolean;\n\tjoinCode: string;\n\tretentionEnabled: boolean;\n\tretentionMaxAge: number;\n\tretentionExcludePinned: boolean;\n\tretentionFilesOnly: boolean;\n\tretentionIgnoreThreads: boolean;\n\tretentionOverrideGlobal: boolean;\n\tencrypted: boolean;\n\tfavorite: {\n\t\tfavorite: boolean;\n\t\tdefaultValue: boolean;\n\t};\n\tsidepanel?: IRoom['sidepanel'];\n};\n\ntype RoomSettingsValidators = {\n\t[TRoomSetting in keyof RoomSettings]?: (params: {\n\t\tuserId: IUser['_id'];\n\t\tvalue: RoomSettings[TRoomSetting];\n\t\troom: IRoom;\n\t\trid: IRoom['_id'];\n\t}) => Promise<void> | void;\n};\n\nconst hasRetentionPolicy = (room: IRoom & { retention?: any }): room is IRoomWithRetentionPolicy =>\n\t'retention' in room && room.retention !== undefined;\n\nconst validators: RoomSettingsValidators = {\n\tasync default({ userId }) {\n\t\tif (!(await hasPermissionAsync(userId, 'view-room-administration'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Viewing room administration is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Viewing_room_administration',\n\t\t\t});\n\t\t}\n\t},\n\tasync featured({ userId }) {\n\t\tif (!(await hasPermissionAsync(userId, 'view-room-administration'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Viewing room administration is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Viewing_room_administration',\n\t\t\t});\n\t\t}\n\t},\n\tasync sidepanel({ room, userId, value }) {\n\t\tif (!room.teamMain) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Invalid room', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t});\n\t\t}\n\n\t\tif (!(await hasPermissionAsync(userId, 'edit-team', room._id))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'You do not have permission to change sidepanel items', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t});\n\t\t}\n\n\t\tif (!isValidSidepanel(value)) {\n\t\t\tthrow new Meteor.Error('error-invalid-sidepanel');\n\t\t}\n\t},\n\n\tasync roomType({ userId, room, value }) {\n\t\tif (value === room.t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (value === 'c' && !room.teamId && !(await hasPermissionAsync(userId, 'create-c'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Changing a private group to a public channel is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Change_Room_Type',\n\t\t\t});\n\t\t}\n\n\t\tif (value === 'p' && !room.teamId && !(await hasPermissionAsync(userId, 'create-p'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Changing a public channel to a private room is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Change_Room_Type',\n\t\t\t});\n\t\t}\n\n\t\tif (!room.teamId) {\n\t\t\treturn;\n\t\t}\n\t\tconst team = await Team.getInfoById(room.teamId);\n\n\t\tif (value === 'c' && !(await hasPermissionAsync(userId, 'create-team-channel', team?.roomId))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', `Changing a team's private group to a public channel is not allowed`, {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Change_Room_Type',\n\t\t\t});\n\t\t}\n\n\t\tif (value === 'p' && !(await hasPermissionAsync(userId, 'create-team-group', team?.roomId))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', `Changing a team's public channel to a private room is not allowed`, {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Change_Room_Type',\n\t\t\t});\n\t\t}\n\t},\n\tasync encrypted({ userId, value, room, rid }) {\n\t\tif (value !== room.encrypted) {\n\t\t\tif (!(await roomCoordinator.getRoomDirectives(room.t).allowRoomSettingChange(room, RoomSettingsEnum.E2E))) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Only groups or direct channels can enable encryption', {\n\t\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\t\taction: 'Change_Room_Encrypted',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (room.t !== 'd' && !(await hasPermissionAsync(userId, 'toggle-room-e2e-encryption', rid))) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'You do not have permission to toggle E2E encryption', {\n\t\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\t\taction: 'Change_Room_Encrypted',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\tasync retentionEnabled({ userId, value, room, rid }) {\n\t\tif (\n\t\t\t!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) &&\n\t\t\t(!hasRetentionPolicy(room) || value !== room.retention.enabled)\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n\tasync retentionMaxAge({ userId, value, room, rid }) {\n\t\tif (\n\t\t\t!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) &&\n\t\t\t(!hasRetentionPolicy(room) || value !== room.retention.maxAge)\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n\tasync retentionExcludePinned({ userId, value, room, rid }) {\n\t\tif (\n\t\t\t!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) &&\n\t\t\t(!hasRetentionPolicy(room) || value !== room.retention.excludePinned)\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n\tasync retentionFilesOnly({ userId, value, room, rid }) {\n\t\tif (\n\t\t\t!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) &&\n\t\t\t(!hasRetentionPolicy(room) || value !== room.retention.filesOnly)\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n\tasync retentionIgnoreThreads({ userId, value, room, rid }) {\n\t\tif (\n\t\t\t!(await hasPermissionAsync(userId, 'edit-room-retention-policy', rid)) &&\n\t\t\t(!hasRetentionPolicy(room) || value !== room.retention.ignoreThreads)\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room retention policy is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n\tasync roomAvatar({ userId, rid }) {\n\t\tif (!(await hasPermissionAsync(userId, 'edit-room-avatar', rid))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing a room avatar is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t},\n};\n\ntype RoomSettingsSavers = {\n\t[TRoomSetting in keyof RoomSettings]?: (params: {\n\t\tuserId: IUser['_id'];\n\t\tuser: IUser & Required<Pick<IUser, 'username' | 'name'>>;\n\t\tvalue: RoomSettings[TRoomSetting];\n\t\troom: IRoom;\n\t\trid: IRoom['_id'];\n\t}) => void | Promise<void>;\n};\n\nconst settingSavers: RoomSettingsSavers = {\n\tasync roomName({ value, rid, user, room }) {\n\t\tif (!(await saveRoomName(rid, value, user))) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (room.teamId && room.teamMain) {\n\t\t\tvoid Team.update(user._id, room.teamId, {\n\t\t\t\ttype: room.t === 'c' ? TEAM_TYPE.PUBLIC : TEAM_TYPE.PRIVATE,\n\t\t\t\tname: value,\n\t\t\t\tupdateRoom: false,\n\t\t\t});\n\t\t}\n\t},\n\tasync roomTopic({ value, room, rid, user }) {\n\t\tif (!value && !room.topic) {\n\t\t\treturn;\n\t\t}\n\t\tif (value !== room.topic) {\n\t\t\tawait saveRoomTopic(rid, value, user);\n\t\t}\n\t},\n\tasync sidepanel({ value, rid, room }) {\n\t\tif (JSON.stringify(value) !== JSON.stringify(room.sidepanel)) {\n\t\t\tawait Rooms.setSidepanelById(rid, value);\n\t\t}\n\t},\n\tasync roomAnnouncement({ value, room, rid, user }) {\n\t\tif (!value && !room.announcement) {\n\t\t\treturn;\n\t\t}\n\t\tif (value !== room.announcement) {\n\t\t\tawait saveRoomAnnouncement(rid, value, user);\n\t\t}\n\t},\n\tasync roomCustomFields({ value, room, rid }) {\n\t\tif (value !== room.customFields) {\n\t\t\tawait saveRoomCustomFields(rid, value);\n\t\t}\n\t},\n\tasync roomDescription({ value, room, rid, user }) {\n\t\tif (!value && !room.description) {\n\t\t\treturn;\n\t\t}\n\t\tif (value !== room.description) {\n\t\t\tawait saveRoomDescription(rid, value, user);\n\t\t}\n\t},\n\tasync roomType({ value, room, rid, user }) {\n\t\tif (value === room.t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(await saveRoomType(rid, value, user))) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (room.teamId && room.teamMain) {\n\t\t\tconst type = value === 'c' ? TEAM_TYPE.PUBLIC : TEAM_TYPE.PRIVATE;\n\t\t\tvoid Team.update(user._id, room.teamId, { type, updateRoom: false });\n\t\t}\n\t},\n\tasync readOnly({ value, room, rid, user }) {\n\t\tif (value !== room.ro) {\n\t\t\tawait saveRoomReadOnly(rid, value, user);\n\t\t}\n\t},\n\tasync reactWhenReadOnly({ value, room, rid, user }) {\n\t\tif (value !== room.reactWhenReadOnly) {\n\t\t\tawait saveReactWhenReadOnly(rid, value, user);\n\t\t}\n\t},\n\tasync systemMessages({ value, room, rid }) {\n\t\tif (JSON.stringify(value) !== JSON.stringify(room.sysMes)) {\n\t\t\tawait saveRoomSystemMessages(rid, value);\n\t\t}\n\t},\n\tasync joinCode({ value, rid }) {\n\t\tawait Rooms.setJoinCodeById(rid, String(value));\n\t},\n\tasync default({ value, rid }) {\n\t\tawait Rooms.saveDefaultById(rid, value);\n\t},\n\tasync featured({ value, rid }) {\n\t\tawait Rooms.saveFeaturedById(rid, value);\n\t},\n\tasync retentionEnabled({ value, rid }) {\n\t\tawait Rooms.saveRetentionEnabledById(rid, value);\n\t},\n\tasync retentionMaxAge({ value, rid }) {\n\t\tawait Rooms.saveRetentionMaxAgeById(rid, value);\n\t},\n\tasync retentionExcludePinned({ value, rid }) {\n\t\tawait Rooms.saveRetentionExcludePinnedById(rid, value);\n\t},\n\tasync retentionFilesOnly({ value, rid }) {\n\t\tawait Rooms.saveRetentionFilesOnlyById(rid, value);\n\t},\n\tasync retentionIgnoreThreads({ value, rid }) {\n\t\tawait Rooms.saveRetentionIgnoreThreadsById(rid, value);\n\t},\n\tasync retentionOverrideGlobal({ value, rid }) {\n\t\tawait Rooms.saveRetentionOverrideGlobalById(rid, value);\n\t},\n\tasync encrypted({ value, room, rid, user }) {\n\t\tawait saveRoomEncrypted(rid, value, user, Boolean(room.encrypted) !== Boolean(value));\n\t},\n\tasync favorite({ value, rid }) {\n\t\tawait Rooms.saveFavoriteById(rid, value.favorite, value.defaultValue);\n\t},\n\tasync roomAvatar({ value, rid, user }) {\n\t\tawait setRoomAvatar(rid, value, user);\n\t},\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsaveRoomSettings(rid: IRoom['_id'], settings: Partial<RoomSettings>): Promise<{ result: true; rid: IRoom['_id'] }>;\n\t\tsaveRoomSettings<RoomSettingName extends keyof RoomSettings>(\n\t\t\trid: IRoom['_id'],\n\t\t\tsetting: RoomSettingName,\n\t\t\tvalue: RoomSettings[RoomSettingName],\n\t\t): Promise<{ result: true; rid: IRoom['_id'] }>;\n\t}\n}\n\nconst fields: (keyof RoomSettings)[] = [\n\t'roomAvatar',\n\t'featured',\n\t'roomName',\n\t'roomTopic',\n\t'roomAnnouncement',\n\t'roomCustomFields',\n\t'roomDescription',\n\t'roomType',\n\t'readOnly',\n\t'reactWhenReadOnly',\n\t'systemMessages',\n\t'default',\n\t'joinCode',\n\t'retentionEnabled',\n\t'retentionMaxAge',\n\t'retentionExcludePinned',\n\t'retentionFilesOnly',\n\t'retentionIgnoreThreads',\n\t'retentionOverrideGlobal',\n\t'encrypted',\n\t'favorite',\n\t'sidepanel',\n];\n\nconst validate = <TRoomSetting extends keyof RoomSettings>(\n\tsetting: TRoomSetting,\n\tparams: {\n\t\tuserId: IUser['_id'];\n\t\tvalue: RoomSettings[TRoomSetting];\n\t\troom: IRoom;\n\t\trid: IRoom['_id'];\n\t},\n) => {\n\tconst validator = validators[setting];\n\treturn validator?.(params);\n};\n\nasync function save<TRoomSetting extends keyof RoomSettings>(\n\tsetting: TRoomSetting,\n\tparams: {\n\t\tuserId: IUser['_id'];\n\t\tuser: IUser & Required<Pick<IUser, 'username' | 'name'>>;\n\t\tvalue: RoomSettings[TRoomSetting];\n\t\troom: IRoom;\n\t\trid: IRoom['_id'];\n\t},\n) {\n\tconst saver = settingSavers[setting];\n\tawait saver?.(params);\n}\n\nexport async function saveRoomSettings(\n\tuserId: IUser['_id'],\n\trid: IRoom['_id'],\n\tsettings: Partial<RoomSettings>,\n): Promise<{ result: true; rid: IRoom['_id'] }>;\nexport async function saveRoomSettings<RoomSettingName extends keyof RoomSettings>(\n\tuserId: IUser['_id'],\n\trid: IRoom['_id'],\n\tsetting: RoomSettingName,\n\tvalue: RoomSettings[RoomSettingName],\n): Promise<{ result: true; rid: IRoom['_id'] }>;\nexport async function saveRoomSettings(\n\tuserId: IUser['_id'],\n\trid: IRoom['_id'],\n\tsettings: Partial<RoomSettings> | keyof RoomSettings,\n\tvalue?: RoomSettings[keyof RoomSettings],\n): Promise<{ result: true; rid: IRoom['_id'] }> {\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tfunction: 'RocketChat.saveRoomName',\n\t\t});\n\t}\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\tmethod: 'saveRoomSettings',\n\t\t});\n\t}\n\n\tif (typeof settings !== 'object') {\n\t\tsettings = {\n\t\t\t[settings]: value,\n\t\t};\n\t}\n\n\tif (!Object.keys(settings).every((key) => fields.includes(key as keyof typeof settings))) {\n\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings provided', {\n\t\t\tmethod: 'saveRoomSettings',\n\t\t});\n\t}\n\n\tconst room = await Rooms.findOneById(rid);\n\n\tif (!room) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\tmethod: 'saveRoomSettings',\n\t\t});\n\t}\n\n\tif (!(await hasPermissionAsync(userId, 'edit-room', rid))) {\n\t\tif (!(Object.keys(settings).includes('encrypted') && room.t === 'd')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room',\n\t\t\t});\n\t\t}\n\t\tsettings = { encrypted: settings.encrypted };\n\t}\n\n\tif (room.broadcast && (settings.readOnly || settings.reactWhenReadOnly)) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing readOnly/reactWhenReadOnly are not allowed for broadcast rooms', {\n\t\t\tmethod: 'saveRoomSettings',\n\t\t\taction: 'Editing_room',\n\t\t});\n\t}\n\n\tconst user = await Users.findOneById(userId, { projection: { username: 1, name: 1 } });\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'saveRoomSettings',\n\t\t});\n\t}\n\n\t// validations\n\tfor await (const setting of Object.keys(settings) as (keyof RoomSettings)[]) {\n\t\tawait validate(setting, {\n\t\t\tuserId,\n\t\t\tvalue: settings[setting],\n\t\t\troom,\n\t\t\trid,\n\t\t});\n\n\t\tif (setting === 'retentionOverrideGlobal' && settings.retentionOverrideGlobal === false) {\n\t\t\tdelete settings.retentionMaxAge;\n\t\t\tdelete settings.retentionExcludePinned;\n\t\t\tdelete settings.retentionFilesOnly;\n\t\t\tdelete settings.retentionIgnoreThreads;\n\t\t}\n\t}\n\n\t// saving data\n\tfor await (const setting of Object.keys(settings) as (keyof RoomSettings)[]) {\n\t\tawait save(setting, {\n\t\t\tuserId,\n\t\t\tuser: user as IUser & Required<Pick<IUser, 'username' | 'name'>>,\n\t\t\tvalue: settings[setting],\n\t\t\troom,\n\t\t\trid,\n\t\t});\n\t}\n\n\tvoid notifyOnRoomChangedById(rid);\n\n\treturn {\n\t\tresult: true,\n\t\trid: room._id,\n\t};\n}\n\nMeteor.methods<ServerMethods>({\n\tsaveRoomSettings: (...args) => {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tfunction: 'RocketChat.saveRoomName',\n\t\t\t});\n\t\t}\n\n\t\treturn saveRoomSettings(userId, ...args);\n\t},\n});\n"],"mappings":";;;IAAA,IAAAA,cAAe;IAAAC,MAAM,CAAAC,IAAA,uCAA6B;MAAAC,QAAAC,CAAA;QAAAJ,cAAA,GAAAI,CAAA;MAAA;IAAA;IAAlDH,MAAA,CAAOI,MAAM;MAAEC,gBAAM,EAAAA,CAAA,KAAAA;IAA6B;IAAA,IAAAC,IAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,KAAAH,CAAA;QAAAG,IAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,SAAA,EAAAC,gBAAA;IAAAR,MAAA,CAAAC,IAAA;MAAAM,UAAAJ,CAAA;QAAAI,SAAA,GAAAJ,CAAA;MAAA;MAAAK,iBAAAL,CAAA;QAAAK,gBAAA,GAAAL,CAAA;MAAA;IAAA;IAAA,IAAAM,KAAA,EAAAC,KAAA;IAAAV,MAAA,CAAAC,IAAA;MAAAQ,MAAAN,CAAA;QAAAM,KAAA,GAAAN,CAAA;MAAA;MAAAO,MAAAP,CAAA;QAAAO,KAAA,GAAAP,CAAA;MAAA;IAAA;IAAA,IAAAQ,KAAA;IAAAX,MAAA,CAAAC,IAAA;MAAAU,MAAAR,CAAA;QAAAQ,KAAA,GAAAR,CAAA;MAAA;IAAA;IAAA,IAAAS,MAAA;IAAAZ,MAAA,CAAAC,IAAA;MAAAW,OAAAT,CAAA;QAAAS,MAAA,GAAAT,CAAA;MAAA;IAAA;IAAA,IAAAU,gBAAA;IAAAb,MAAA,CAAAC,IAAA;MAAAY,iBAAAV,CAAA;QAAAU,gBAAA,GAAAV,CAAA;MAAA;IAAA;IAAA,IAAAW,eAAA;IAAAd,MAAA,CAAAC,IAAA;MAAAa,gBAAAX,CAAA;QAAAW,eAAA,GAAAX,CAAA;MAAA;IAAA;IAAA,IAAAY,kBAAA;IAAAf,MAAA,CAAAC,IAAA;MAAAc,mBAAAZ,CAAA;QAAAY,kBAAA,GAAAZ,CAAA;MAAA;IAAA;IAAA,IAAAa,aAAA;IAAAhB,MAAA,CAAAC,IAAA;MAAAe,cAAAb,CAAA;QAAAa,aAAA,GAAAb,CAAA;MAAA;IAAA;IAAA,IAAAc,uBAAA;IAAAjB,MAAA,CAAAC,IAAA;MAAAgB,wBAAAd,CAAA;QAAAc,uBAAA,GAAAd,CAAA;MAAA;IAAA;IAAA,IAAAe,qBAAA;IAAAlB,MAAA,CAAAC,IAAA;MAAAiB,sBAAAf,CAAA;QAAAe,qBAAA,GAAAf,CAAA;MAAA;IAAA;IAAA,IAAAgB,oBAAA;IAAAnB,MAAA,CAAAC,IAAA;MAAAkB,qBAAAhB,CAAA;QAAAgB,oBAAA,GAAAhB,CAAA;MAAA;IAAA;IAAA,IAAAiB,oBAAA;IAAApB,MAAA,CAAAC,IAAA;MAAAmB,qBAAAjB,CAAA;QAAAiB,oBAAA,GAAAjB,CAAA;MAAA;IAAA;IAAA,IAAAkB,mBAAA;IAAArB,MAAA,CAAAC,IAAA;MAAAoB,oBAAAlB,CAAA;QAAAkB,mBAAA,GAAAlB,CAAA;MAAA;IAAA;IAAA,IAAAmB,iBAAA;IAAAtB,MAAA,CAAAC,IAAA;MAAAqB,kBAAAnB,CAAA;QAAAmB,iBAAA,GAAAnB,CAAA;MAAA;IAAA;IAAA,IAAAoB,YAAA;IAAAvB,MAAA,CAAAC,IAAA;MAAAsB,aAAApB,CAAA;QAAAoB,YAAA,GAAApB,CAAA;MAAA;IAAA;IAAA,IAAAqB,gBAAA;IAAAxB,MAAA,CAAAC,IAAA;MAAAuB,iBAAArB,CAAA;QAAAqB,gBAAA,GAAArB,CAAA;MAAA;IAAA;IAAA,IAAAsB,sBAAA;IAAAzB,MAAA,CAAAC,IAAA;MAAAwB,uBAAAtB,CAAA;QAAAsB,sBAAA,GAAAtB,CAAA;MAAA;IAAA;IAAA,IAAAuB,aAAA;IAAA1B,MAAA,CAAAC,IAAA;MAAAyB,cAAAvB,CAAA;QAAAuB,aAAA,GAAAvB,CAAA;MAAA;IAAA;IAAA,IAAAwB,YAAA;IAAA3B,MAAA,CAAAC,IAAA;MAAA0B,aAAAxB,CAAA;QAAAwB,YAAA,GAAAxB,CAAA;MAAA;IAAA;IAAA,IAAAyB,oBAAA,WAAAA,oBAAA;IA6DlD,MAAMC,kBAAkB,GAAIC,IAAiC,IAC5D,WAAW,IAAIA,IAAI,IAAIA,IAAI,CAACC,SAAS,KAAKC,SAAS;IAEpD,MAAMC,UAAU,GAA2B;MAC1C,MAAM/B,OAAOA,CAAAgC,IAAA,EAAW;QAAA,IAAV;UAAEC;QAAM,CAAE,GAAAD,IAAA;QACvB,IAAI,EAAE,MAAMnB,kBAAkB,CAACoB,MAAM,EAAE,0BAA0B,CAAC,CAAC,EAAE;UACpE,MAAM,IAAIvB,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,4CAA4C,EAAE;YAChGC,MAAM,EAAE,kBAAkB;YAC1BC,MAAM,EAAE;WACR,CAAC;QACH;MACD,CAAC;MACD,MAAMC,QAAQA,CAAAC,KAAA,EAAW;QAAA,IAAV;UAAEL;QAAM,CAAE,GAAAK,KAAA;QACxB,IAAI,EAAE,MAAMzB,kBAAkB,CAACoB,MAAM,EAAE,0BAA0B,CAAC,CAAC,EAAE;UACpE,MAAM,IAAIvB,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,4CAA4C,EAAE;YAChGC,MAAM,EAAE,kBAAkB;YAC1BC,MAAM,EAAE;WACR,CAAC;QACH;MACD,CAAC;MACD,MAAMG,SAASA,CAAAC,KAAA,EAAwB;QAAA,IAAvB;UAAEZ,IAAI;UAAEK,MAAM;UAAEQ;QAAK,CAAE,GAAAD,KAAA;QACtC,IAAI,CAACZ,IAAI,CAACc,QAAQ,EAAE;UACnB,MAAM,IAAIhC,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,cAAc,EAAE;YAClEC,MAAM,EAAE;WACR,CAAC;QACH;QAEA,IAAI,EAAE,MAAMtB,kBAAkB,CAACoB,MAAM,EAAE,WAAW,EAAEL,IAAI,CAACe,GAAG,CAAC,CAAC,EAAE;UAC/D,MAAM,IAAIjC,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,sDAAsD,EAAE;YAC1GC,MAAM,EAAE;WACR,CAAC;QACH;QAEA,IAAI,CAAC7B,gBAAgB,CAACmC,KAAK,CAAC,EAAE;UAC7B,MAAM,IAAI/B,MAAM,CAACwB,KAAK,CAAC,yBAAyB,CAAC;QAClD;MACD,CAAC;MAED,MAAMU,QAAQA,CAAAC,KAAA,EAAwB;QAAA,IAAvB;UAAEZ,MAAM;UAAEL,IAAI;UAAEa;QAAK,CAAE,GAAAI,KAAA;QACrC,IAAIJ,KAAK,KAAKb,IAAI,CAACkB,CAAC,EAAE;UACrB;QACD;QAEA,IAAIL,KAAK,KAAK,GAAG,IAAI,CAACb,IAAI,CAACmB,MAAM,IAAI,EAAE,MAAMlC,kBAAkB,CAACoB,MAAM,EAAE,UAAU,CAAC,CAAC,EAAE;UACrF,MAAM,IAAIvB,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,6DAA6D,EAAE;YACjHC,MAAM,EAAE,kBAAkB;YAC1BC,MAAM,EAAE;WACR,CAAC;QACH;QAEA,IAAIK,KAAK,KAAK,GAAG,IAAI,CAACb,IAAI,CAACmB,MAAM,IAAI,EAAE,MAAMlC,kBAAkB,CAACoB,MAAM,EAAE,UAAU,CAAC,CAAC,EAAE;UACrF,MAAM,IAAIvB,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,4DAA4D,EAAE;YAChHC,MAAM,EAAE,kBAAkB;YAC1BC,MAAM,EAAE;WACR,CAAC;QACH;QAEA,IAAI,CAACR,IAAI,CAACmB,MAAM,EAAE;UACjB;QACD;QACA,MAAMC,IAAI,GAAG,MAAM5C,IAAI,CAAC6C,WAAW,CAACrB,IAAI,CAACmB,MAAM,CAAC;QAEhD,IAAIN,KAAK,KAAK,GAAG,IAAI,EAAE,MAAM5B,kBAAkB,CAACoB,MAAM,EAAE,qBAAqB,EAAEe,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,MAAM,CAAC,CAAC,EAAE;UAC9F,MAAM,IAAIxC,MAAM,CAACwB,KAAK,CAAC,0BAA0B,wEAAwE;YACxHC,MAAM,EAAE,kBAAkB;YAC1BC,MAAM,EAAE;WACR,CAAC;QACH;QAEA,IAAIK,KAAK,KAAK,GAAG,IAAI,EAAE,MAAM5B,kBAAkB,CAACoB,MAAM,EAAE,mBAAmB,EAAEe,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,MAAM,CAAC,CAAC,EAAE;UAC5F,MAAM,IAAIxC,MAAM,CAACwB,KAAK,CAAC,0BAA0B,uEAAuE;YACvHC,MAAM,EAAE,kBAAkB;YAC1BC,MAAM,EAAE;WACR,CAAC;QACH;MACD,CAAC;MACD,MAAMe,SAASA,CAAAC,KAAA,EAA6B;QAAA,IAA5B;UAAEnB,MAAM;UAAEQ,KAAK;UAAEb,IAAI;UAAEyB;QAAG,CAAE,GAAAD,KAAA;QAC3C,IAAIX,KAAK,KAAKb,IAAI,CAACuB,SAAS,EAAE;UAC7B,IAAI,EAAE,MAAMvC,eAAe,CAAC0C,iBAAiB,CAAC1B,IAAI,CAACkB,CAAC,CAAC,CAACS,sBAAsB,CAAC3B,IAAI,EAAEjB,gBAAgB,CAAC6C,GAAG,CAAC,CAAC,EAAE;YAC1G,MAAM,IAAI9C,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,sDAAsD,EAAE;cAC1GC,MAAM,EAAE,kBAAkB;cAC1BC,MAAM,EAAE;aACR,CAAC;UACH;UAEA,IAAIR,IAAI,CAACkB,CAAC,KAAK,GAAG,IAAI,EAAE,MAAMjC,kBAAkB,CAACoB,MAAM,EAAE,4BAA4B,EAAEoB,GAAG,CAAC,CAAC,EAAE;YAC7F,MAAM,IAAI3C,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,qDAAqD,EAAE;cACzGC,MAAM,EAAE,kBAAkB;cAC1BC,MAAM,EAAE;aACR,CAAC;UACH;QACD;MACD,CAAC;MACD,MAAMqB,gBAAgBA,CAAAC,KAAA,EAA6B;QAAA,IAA5B;UAAEzB,MAAM;UAAEQ,KAAK;UAAEb,IAAI;UAAEyB;QAAG,CAAE,GAAAK,KAAA;QAClD,IACC,EAAE,MAAM7C,kBAAkB,CAACoB,MAAM,EAAE,4BAA4B,EAAEoB,GAAG,CAAC,CAAC,KACrE,CAAC1B,kBAAkB,CAACC,IAAI,CAAC,IAAIa,KAAK,KAAKb,IAAI,CAACC,SAAS,CAAC8B,OAAO,CAAC,EAC9D;UACD,MAAM,IAAIjD,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,8CAA8C,EAAE;YAClGC,MAAM,EAAE,kBAAkB;YAC1BC,MAAM,EAAE;WACR,CAAC;QACH;MACD,CAAC;MACD,MAAMwB,eAAeA,CAAAC,KAAA,EAA6B;QAAA,IAA5B;UAAE5B,MAAM;UAAEQ,KAAK;UAAEb,IAAI;UAAEyB;QAAG,CAAE,GAAAQ,KAAA;QACjD,IACC,EAAE,MAAMhD,kBAAkB,CAACoB,MAAM,EAAE,4BAA4B,EAAEoB,GAAG,CAAC,CAAC,KACrE,CAAC1B,kBAAkB,CAACC,IAAI,CAAC,IAAIa,KAAK,KAAKb,IAAI,CAACC,SAAS,CAACiC,MAAM,CAAC,EAC7D;UACD,MAAM,IAAIpD,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,8CAA8C,EAAE;YAClGC,MAAM,EAAE,kBAAkB;YAC1BC,MAAM,EAAE;WACR,CAAC;QACH;MACD,CAAC;MACD,MAAM2B,sBAAsBA,CAAAC,KAAA,EAA6B;QAAA,IAA5B;UAAE/B,MAAM;UAAEQ,KAAK;UAAEb,IAAI;UAAEyB;QAAG,CAAE,GAAAW,KAAA;QACxD,IACC,EAAE,MAAMnD,kBAAkB,CAACoB,MAAM,EAAE,4BAA4B,EAAEoB,GAAG,CAAC,CAAC,KACrE,CAAC1B,kBAAkB,CAACC,IAAI,CAAC,IAAIa,KAAK,KAAKb,IAAI,CAACC,SAAS,CAACoC,aAAa,CAAC,EACpE;UACD,MAAM,IAAIvD,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,8CAA8C,EAAE;YAClGC,MAAM,EAAE,kBAAkB;YAC1BC,MAAM,EAAE;WACR,CAAC;QACH;MACD,CAAC;MACD,MAAM8B,kBAAkBA,CAAAC,KAAA,EAA6B;QAAA,IAA5B;UAAElC,MAAM;UAAEQ,KAAK;UAAEb,IAAI;UAAEyB;QAAG,CAAE,GAAAc,KAAA;QACpD,IACC,EAAE,MAAMtD,kBAAkB,CAACoB,MAAM,EAAE,4BAA4B,EAAEoB,GAAG,CAAC,CAAC,KACrE,CAAC1B,kBAAkB,CAACC,IAAI,CAAC,IAAIa,KAAK,KAAKb,IAAI,CAACC,SAAS,CAACuC,SAAS,CAAC,EAChE;UACD,MAAM,IAAI1D,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,8CAA8C,EAAE;YAClGC,MAAM,EAAE,kBAAkB;YAC1BC,MAAM,EAAE;WACR,CAAC;QACH;MACD,CAAC;MACD,MAAMiC,sBAAsBA,CAAAC,MAAA,EAA6B;QAAA,IAA5B;UAAErC,MAAM;UAAEQ,KAAK;UAAEb,IAAI;UAAEyB;QAAG,CAAE,GAAAiB,MAAA;QACxD,IACC,EAAE,MAAMzD,kBAAkB,CAACoB,MAAM,EAAE,4BAA4B,EAAEoB,GAAG,CAAC,CAAC,KACrE,CAAC1B,kBAAkB,CAACC,IAAI,CAAC,IAAIa,KAAK,KAAKb,IAAI,CAACC,SAAS,CAAC0C,aAAa,CAAC,EACpE;UACD,MAAM,IAAI7D,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,8CAA8C,EAAE;YAClGC,MAAM,EAAE,kBAAkB;YAC1BC,MAAM,EAAE;WACR,CAAC;QACH;MACD,CAAC;MACD,MAAMoC,UAAUA,CAAAC,MAAA,EAAgB;QAAA,IAAf;UAAExC,MAAM;UAAEoB;QAAG,CAAE,GAAAoB,MAAA;QAC/B,IAAI,EAAE,MAAM5D,kBAAkB,CAACoB,MAAM,EAAE,kBAAkB,EAAEoB,GAAG,CAAC,CAAC,EAAE;UACjE,MAAM,IAAI3C,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,sCAAsC,EAAE;YAC1FC,MAAM,EAAE,kBAAkB;YAC1BC,MAAM,EAAE;WACR,CAAC;QACH;MACD;KACA;IAYD,MAAMsC,aAAa,GAAuB;MACzC,MAAMC,QAAQA,CAAAC,MAAA,EAA2B;QAAA,IAA1B;UAAEnC,KAAK;UAAEY,GAAG;UAAEwB,IAAI;UAAEjD;QAAI,CAAE,GAAAgD,MAAA;QACxC,IAAI,EAAE,MAAMvD,YAAY,CAACgC,GAAG,EAAEZ,KAAK,EAAEoC,IAAI,CAAC,CAAC,EAAE;UAC5C;QACD;QAEA,IAAIjD,IAAI,CAACmB,MAAM,IAAInB,IAAI,CAACc,QAAQ,EAAE;UACjC,KAAKtC,IAAI,CAAC0E,MAAM,CAACD,IAAI,CAAClC,GAAG,EAAEf,IAAI,CAACmB,MAAM,EAAE;YACvCgC,IAAI,EAAEnD,IAAI,CAACkB,CAAC,KAAK,GAAG,GAAGzC,SAAS,CAAC2E,MAAM,GAAG3E,SAAS,CAAC4E,OAAO;YAC3DC,IAAI,EAAEzC,KAAK;YACX0C,UAAU,EAAE;WACZ,CAAC;QACH;MACD,CAAC;MACD,MAAMC,SAASA,CAAAC,MAAA,EAA2B;QAAA,IAA1B;UAAE5C,KAAK;UAAEb,IAAI;UAAEyB,GAAG;UAAEwB;QAAI,CAAE,GAAAQ,MAAA;QACzC,IAAI,CAAC5C,KAAK,IAAI,CAACb,IAAI,CAAC0D,KAAK,EAAE;UAC1B;QACD;QACA,IAAI7C,KAAK,KAAKb,IAAI,CAAC0D,KAAK,EAAE;UACzB,MAAM9D,aAAa,CAAC6B,GAAG,EAAEZ,KAAK,EAAEoC,IAAI,CAAC;QACtC;MACD,CAAC;MACD,MAAMtC,SAASA,CAAAgD,MAAA,EAAqB;QAAA,IAApB;UAAE9C,KAAK;UAAEY,GAAG;UAAEzB;QAAI,CAAE,GAAA2D,MAAA;QACnC,IAAIC,IAAI,CAACC,SAAS,CAAChD,KAAK,CAAC,KAAK+C,IAAI,CAACC,SAAS,CAAC7D,IAAI,CAACW,SAAS,CAAC,EAAE;UAC7D,MAAMhC,KAAK,CAACmF,gBAAgB,CAACrC,GAAG,EAAEZ,KAAK,CAAC;QACzC;MACD,CAAC;MACD,MAAMkD,gBAAgBA,CAAAC,MAAA,EAA2B;QAAA,IAA1B;UAAEnD,KAAK;UAAEb,IAAI;UAAEyB,GAAG;UAAEwB;QAAI,CAAE,GAAAe,MAAA;QAChD,IAAI,CAACnD,KAAK,IAAI,CAACb,IAAI,CAACiE,YAAY,EAAE;UACjC;QACD;QACA,IAAIpD,KAAK,KAAKb,IAAI,CAACiE,YAAY,EAAE;UAChC,MAAM5E,oBAAoB,CAACoC,GAAG,EAAEZ,KAAK,EAAEoC,IAAI,CAAC;QAC7C;MACD,CAAC;MACD,MAAMiB,gBAAgBA,CAAAC,MAAA,EAAqB;QAAA,IAApB;UAAEtD,KAAK;UAAEb,IAAI;UAAEyB;QAAG,CAAE,GAAA0C,MAAA;QAC1C,IAAItD,KAAK,KAAKb,IAAI,CAACoE,YAAY,EAAE;UAChC,MAAM9E,oBAAoB,CAACmC,GAAG,EAAEZ,KAAK,CAAC;QACvC;MACD,CAAC;MACD,MAAMwD,eAAeA,CAAAC,MAAA,EAA2B;QAAA,IAA1B;UAAEzD,KAAK;UAAEb,IAAI;UAAEyB,GAAG;UAAEwB;QAAI,CAAE,GAAAqB,MAAA;QAC/C,IAAI,CAACzD,KAAK,IAAI,CAACb,IAAI,CAACuE,WAAW,EAAE;UAChC;QACD;QACA,IAAI1D,KAAK,KAAKb,IAAI,CAACuE,WAAW,EAAE;UAC/B,MAAMhF,mBAAmB,CAACkC,GAAG,EAAEZ,KAAK,EAAEoC,IAAI,CAAC;QAC5C;MACD,CAAC;MACD,MAAMjC,QAAQA,CAAAwD,MAAA,EAA2B;QAAA,IAA1B;UAAE3D,KAAK;UAAEb,IAAI;UAAEyB,GAAG;UAAEwB;QAAI,CAAE,GAAAuB,MAAA;QACxC,IAAI3D,KAAK,KAAKb,IAAI,CAACkB,CAAC,EAAE;UACrB;QACD;QAEA,IAAI,EAAE,MAAMrB,YAAY,CAAC4B,GAAG,EAAEZ,KAAK,EAAEoC,IAAI,CAAC,CAAC,EAAE;UAC5C;QACD;QAEA,IAAIjD,IAAI,CAACmB,MAAM,IAAInB,IAAI,CAACc,QAAQ,EAAE;UACjC,MAAMqC,IAAI,GAAGtC,KAAK,KAAK,GAAG,GAAGpC,SAAS,CAAC2E,MAAM,GAAG3E,SAAS,CAAC4E,OAAO;UACjE,KAAK7E,IAAI,CAAC0E,MAAM,CAACD,IAAI,CAAClC,GAAG,EAAEf,IAAI,CAACmB,MAAM,EAAE;YAAEgC,IAAI;YAAEI,UAAU,EAAE;UAAK,CAAE,CAAC;QACrE;MACD,CAAC;MACD,MAAMkB,QAAQA,CAAAC,MAAA,EAA2B;QAAA,IAA1B;UAAE7D,KAAK;UAAEb,IAAI;UAAEyB,GAAG;UAAEwB;QAAI,CAAE,GAAAyB,MAAA;QACxC,IAAI7D,KAAK,KAAKb,IAAI,CAAC2E,EAAE,EAAE;UACtB,MAAMjF,gBAAgB,CAAC+B,GAAG,EAAEZ,KAAK,EAAEoC,IAAI,CAAC;QACzC;MACD,CAAC;MACD,MAAM2B,iBAAiBA,CAAAC,MAAA,EAA2B;QAAA,IAA1B;UAAEhE,KAAK;UAAEb,IAAI;UAAEyB,GAAG;UAAEwB;QAAI,CAAE,GAAA4B,MAAA;QACjD,IAAIhE,KAAK,KAAKb,IAAI,CAAC4E,iBAAiB,EAAE;UACrC,MAAMxF,qBAAqB,CAACqC,GAAG,EAAEZ,KAAK,EAAEoC,IAAI,CAAC;QAC9C;MACD,CAAC;MACD,MAAM6B,cAAcA,CAAAC,MAAA,EAAqB;QAAA,IAApB;UAAElE,KAAK;UAAEb,IAAI;UAAEyB;QAAG,CAAE,GAAAsD,MAAA;QACxC,IAAInB,IAAI,CAACC,SAAS,CAAChD,KAAK,CAAC,KAAK+C,IAAI,CAACC,SAAS,CAAC7D,IAAI,CAACgF,MAAM,CAAC,EAAE;UAC1D,MAAMrF,sBAAsB,CAAC8B,GAAG,EAAEZ,KAAK,CAAC;QACzC;MACD,CAAC;MACD,MAAMoE,QAAQA,CAAAC,MAAA,EAAe;QAAA,IAAd;UAAErE,KAAK;UAAEY;QAAG,CAAE,GAAAyD,MAAA;QAC5B,MAAMvG,KAAK,CAACwG,eAAe,CAAC1D,GAAG,EAAE2D,MAAM,CAACvE,KAAK,CAAC,CAAC;MAChD,CAAC;MACD,MAAMzC,OAAOA,CAAAiH,MAAA,EAAe;QAAA,IAAd;UAAExE,KAAK;UAAEY;QAAG,CAAE,GAAA4D,MAAA;QAC3B,MAAM1G,KAAK,CAAC2G,eAAe,CAAC7D,GAAG,EAAEZ,KAAK,CAAC;MACxC,CAAC;MACD,MAAMJ,QAAQA,CAAA8E,MAAA,EAAe;QAAA,IAAd;UAAE1E,KAAK;UAAEY;QAAG,CAAE,GAAA8D,MAAA;QAC5B,MAAM5G,KAAK,CAAC6G,gBAAgB,CAAC/D,GAAG,EAAEZ,KAAK,CAAC;MACzC,CAAC;MACD,MAAMgB,gBAAgBA,CAAA4D,MAAA,EAAe;QAAA,IAAd;UAAE5E,KAAK;UAAEY;QAAG,CAAE,GAAAgE,MAAA;QACpC,MAAM9G,KAAK,CAAC+G,wBAAwB,CAACjE,GAAG,EAAEZ,KAAK,CAAC;MACjD,CAAC;MACD,MAAMmB,eAAeA,CAAA2D,MAAA,EAAe;QAAA,IAAd;UAAE9E,KAAK;UAAEY;QAAG,CAAE,GAAAkE,MAAA;QACnC,MAAMhH,KAAK,CAACiH,uBAAuB,CAACnE,GAAG,EAAEZ,KAAK,CAAC;MAChD,CAAC;MACD,MAAMsB,sBAAsBA,CAAA0D,MAAA,EAAe;QAAA,IAAd;UAAEhF,KAAK;UAAEY;QAAG,CAAE,GAAAoE,MAAA;QAC1C,MAAMlH,KAAK,CAACmH,8BAA8B,CAACrE,GAAG,EAAEZ,KAAK,CAAC;MACvD,CAAC;MACD,MAAMyB,kBAAkBA,CAAAyD,MAAA,EAAe;QAAA,IAAd;UAAElF,KAAK;UAAEY;QAAG,CAAE,GAAAsE,MAAA;QACtC,MAAMpH,KAAK,CAACqH,0BAA0B,CAACvE,GAAG,EAAEZ,KAAK,CAAC;MACnD,CAAC;MACD,MAAM4B,sBAAsBA,CAAAwD,MAAA,EAAe;QAAA,IAAd;UAAEpF,KAAK;UAAEY;QAAG,CAAE,GAAAwE,MAAA;QAC1C,MAAMtH,KAAK,CAACuH,8BAA8B,CAACzE,GAAG,EAAEZ,KAAK,CAAC;MACvD,CAAC;MACD,MAAMsF,uBAAuBA,CAAAC,MAAA,EAAe;QAAA,IAAd;UAAEvF,KAAK;UAAEY;QAAG,CAAE,GAAA2E,MAAA;QAC3C,MAAMzH,KAAK,CAAC0H,+BAA+B,CAAC5E,GAAG,EAAEZ,KAAK,CAAC;MACxD,CAAC;MACD,MAAMU,SAASA,CAAA+E,MAAA,EAA2B;QAAA,IAA1B;UAAEzF,KAAK;UAAEb,IAAI;UAAEyB,GAAG;UAAEwB;QAAI,CAAE,GAAAqD,MAAA;QACzC,MAAM9G,iBAAiB,CAACiC,GAAG,EAAEZ,KAAK,EAAEoC,IAAI,EAAEsD,OAAO,CAACvG,IAAI,CAACuB,SAAS,CAAC,KAAKgF,OAAO,CAAC1F,KAAK,CAAC,CAAC;MACtF,CAAC;MACD,MAAM2F,QAAQA,CAAAC,MAAA,EAAe;QAAA,IAAd;UAAE5F,KAAK;UAAEY;QAAG,CAAE,GAAAgF,MAAA;QAC5B,MAAM9H,KAAK,CAAC+H,gBAAgB,CAACjF,GAAG,EAAEZ,KAAK,CAAC2F,QAAQ,EAAE3F,KAAK,CAAC8F,YAAY,CAAC;MACtE,CAAC;MACD,MAAM/D,UAAUA,CAAAgE,MAAA,EAAqB;QAAA,IAApB;UAAE/F,KAAK;UAAEY,GAAG;UAAEwB;QAAI,CAAE,GAAA2D,MAAA;QACpC,MAAM1H,aAAa,CAACuC,GAAG,EAAEZ,KAAK,EAAEoC,IAAI,CAAC;MACtC;KACA;IAcD,MAAM4D,MAAM,GAA2B,CACtC,YAAY,EACZ,UAAU,EACV,UAAU,EACV,WAAW,EACX,kBAAkB,EAClB,kBAAkB,EAClB,iBAAiB,EACjB,UAAU,EACV,UAAU,EACV,mBAAmB,EACnB,gBAAgB,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,EAClB,iBAAiB,EACjB,wBAAwB,EACxB,oBAAoB,EACpB,wBAAwB,EACxB,yBAAyB,EACzB,WAAW,EACX,UAAU,EACV,WAAW,CACX;IAED,MAAMC,QAAQ,GAAGA,CAChBC,OAAqB,EACrBC,MAKC,KACE;MACH,MAAMC,SAAS,GAAG9G,UAAU,CAAC4G,OAAO,CAAC;MACrC,OAAOE,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAGD,MAAM,CAAC;IAC3B,CAAC;IAED,eAAeE,IAAIA,CAClBH,OAAqB,EACrBC,MAMC;MAED,MAAMG,KAAK,GAAGrE,aAAa,CAACiE,OAAO,CAAC;MACpC,OAAMI,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAGH,MAAM,CAAC;IACtB;IAaO,eAAezI,gBAAgBA,CACrC8B,MAAoB,EACpBoB,GAAiB,EACjB2F,QAAoD,EACpDvG,KAAwC;MAExC,IAAI,CAACR,MAAM,EAAE;QACZ,MAAM,IAAIvB,MAAM,CAACwB,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;UAC5D+G,QAAQ,EAAE;SACV,CAAC;MACH;MACA,IAAI,CAACxI,KAAK,CAACyI,IAAI,CAAC7F,GAAG,EAAE2D,MAAM,CAAC,EAAE;QAC7B,MAAM,IAAItG,MAAM,CAACwB,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;UAC5DC,MAAM,EAAE;SACR,CAAC;MACH;MAEA,IAAI,OAAO6G,QAAQ,KAAK,QAAQ,EAAE;QACjCA,QAAQ,GAAG;UACV,CAACA,QAAQ,GAAGvG;SACZ;MACF;MAEA,IAAI,CAAC0G,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAACK,KAAK,CAAEC,GAAG,IAAKb,MAAM,CAACc,QAAQ,CAACD,GAA4B,CAAC,CAAC,EAAE;QACzF,MAAM,IAAI5I,MAAM,CAACwB,KAAK,CAAC,wBAAwB,EAAE,2BAA2B,EAAE;UAC7EC,MAAM,EAAE;SACR,CAAC;MACH;MAEA,MAAMP,IAAI,GAAG,MAAMrB,KAAK,CAACiJ,WAAW,CAACnG,GAAG,CAAC;MAEzC,IAAI,CAACzB,IAAI,EAAE;QACV,MAAM,IAAIlB,MAAM,CAACwB,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;UAC5DC,MAAM,EAAE;SACR,CAAC;MACH;MAEA,IAAI,EAAE,MAAMtB,kBAAkB,CAACoB,MAAM,EAAE,WAAW,EAAEoB,GAAG,CAAC,CAAC,EAAE;QAC1D,IAAI,EAAE8F,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAACO,QAAQ,CAAC,WAAW,CAAC,IAAI3H,IAAI,CAACkB,CAAC,KAAK,GAAG,CAAC,EAAE;UACrE,MAAM,IAAIpC,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,6BAA6B,EAAE;YACjFC,MAAM,EAAE,kBAAkB;YAC1BC,MAAM,EAAE;WACR,CAAC;QACH;QACA4G,QAAQ,GAAG;UAAE7F,SAAS,EAAE6F,QAAQ,CAAC7F;QAAS,CAAE;MAC7C;MAEA,IAAIvB,IAAI,CAAC6H,SAAS,KAAKT,QAAQ,CAAC3C,QAAQ,IAAI2C,QAAQ,CAACxC,iBAAiB,CAAC,EAAE;QACxE,MAAM,IAAI9F,MAAM,CAACwB,KAAK,CAAC,0BAA0B,EAAE,wEAAwE,EAAE;UAC5HC,MAAM,EAAE,kBAAkB;UAC1BC,MAAM,EAAE;SACR,CAAC;MACH;MAEA,MAAMyC,IAAI,GAAG,MAAMrE,KAAK,CAACgJ,WAAW,CAACvH,MAAM,EAAE;QAAEyH,UAAU,EAAE;UAAEC,QAAQ,EAAE,CAAC;UAAEzE,IAAI,EAAE;QAAC;MAAE,CAAE,CAAC;MACtF,IAAI,CAACL,IAAI,EAAE;QACV,MAAM,IAAInE,MAAM,CAACwB,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;UAC5DC,MAAM,EAAE;SACR,CAAC;MACH;MAEA;MAAA,IAAAyH,yBAAA;MAAA,IAAAC,iBAAA;MAAA,IAAAC,cAAA;MAAA;QACA,SAAAC,SAAA,GAAAlK,cAAA,CAA4BsJ,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAA2B,GAAAgB,KAAA,EAAAJ,yBAAA,KAAAI,KAAA,SAAAD,SAAA,CAAAE,IAAA,IAAAC,IAAA,EAAAN,yBAAA,UAAE;UAAA,MAA5DjB,OAAO,GAAAqB,KAAA,CAAAvH,KAAA;UAAA;YACvB,MAAMiG,QAAQ,CAACC,OAAO,EAAE;cACvB1G,MAAM;cACNQ,KAAK,EAAEuG,QAAQ,CAACL,OAAO,CAAC;cACxB/G,IAAI;cACJyB;aACA,CAAC;YAEF,IAAIsF,OAAO,KAAK,yBAAyB,IAAIK,QAAQ,CAACjB,uBAAuB,KAAK,KAAK,EAAE;cACxF,OAAOiB,QAAQ,CAACpF,eAAe;cAC/B,OAAOoF,QAAQ,CAACjF,sBAAsB;cACtC,OAAOiF,QAAQ,CAAC9E,kBAAkB;cAClC,OAAO8E,QAAQ,CAAC3E,sBAAsB;YACvC;UAAC;QACF;QAEA;MAAA,SAAA8F,GAAA;QAAAN,iBAAA;QAAAC,cAAA,GAAAK,GAAA;MAAA;QAAA;UAAA,IAAAP,yBAAA,IAAAG,SAAA,CAAAK,MAAA;YAAA,MAAAL,SAAA,CAAAK,MAAA;UAAA;QAAA;UAAA,IAAAP,iBAAA;YAAA,MAAAC,cAAA;UAAA;QAAA;MAAA;MAAA,IAAAO,0BAAA;MAAA,IAAAC,kBAAA;MAAA,IAAAC,eAAA;MAAA;QACA,SAAAC,UAAA,GAAA3K,cAAA,CAA4BsJ,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAA2B,GAAAyB,MAAA,EAAAJ,0BAAA,KAAAI,MAAA,SAAAD,UAAA,CAAAP,IAAA,IAAAC,IAAA,EAAAG,0BAAA,UAAE;UAAA,MAA5D1B,OAAO,GAAA8B,MAAA,CAAAhI,KAAA;UAAA;YACvB,MAAMqG,IAAI,CAACH,OAAO,EAAE;cACnB1G,MAAM;cACN4C,IAAI,EAAEA,IAA0D;cAChEpC,KAAK,EAAEuG,QAAQ,CAACL,OAAO,CAAC;cACxB/G,IAAI;cACJyB;aACA,CAAC;UAAC;QACJ;MAAC,SAAA8G,GAAA;QAAAG,kBAAA;QAAAC,eAAA,GAAAJ,GAAA;MAAA;QAAA;UAAA,IAAAE,0BAAA,IAAAG,UAAA,CAAAJ,MAAA;YAAA,MAAAI,UAAA,CAAAJ,MAAA;UAAA;QAAA;UAAA,IAAAE,kBAAA;YAAA,MAAAC,eAAA;UAAA;QAAA;MAAA;MAED,KAAKxJ,uBAAuB,CAACsC,GAAG,CAAC;MAEjC,OAAO;QACNqH,MAAM,EAAE,IAAI;QACZrH,GAAG,EAAEzB,IAAI,CAACe;OACV;IACF;IAEAjC,MAAM,CAACiK,OAAO,CAAgB;MAC7BxK,gBAAgB,EAAE,SAAAA,CAAA,EAAY;QAC7B,MAAM8B,MAAM,GAAGvB,MAAM,CAACuB,MAAM,EAAE;QAC9B,IAAI,CAACA,MAAM,EAAE;UACZ,MAAM,IAAIvB,MAAM,CAACwB,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;YAC5D+G,QAAQ,EAAE;WACV,CAAC;QACH;QAAC,SAAA2B,IAAA,GAAAC,SAAA,CAAAC,MAAA,EANoBC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;UAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;QAAA;QAQzB,OAAO9K,gBAAgB,CAAC8B,MAAM,EAAE,GAAG8I,IAAI,CAAC;MACzC;KACA,CAAC;IAACG,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"2399a34a5eb2a342468ac0f201503f2748260073"}
