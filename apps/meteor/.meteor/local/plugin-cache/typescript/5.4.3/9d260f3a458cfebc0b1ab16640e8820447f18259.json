{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/authorization/canAccessRoomLivechat.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/authorization/canAccessRoomLivechat.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/authorization/canAccessRoomLivechat.ts","inputSourceMap":{"version":3,"file":"server/services/authorization/canAccessRoomLivechat.ts","sourceRoot":"","sources":["server/services/authorization/canAccessRoomLivechat.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE5C,MAAM,qBAAqB,GAAG,OAAO,CAAyB,wBAAwB,CAAC,CAAC;AAExF,MAAM,CAAC,MAAM,qBAAqB,GAAwB,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAoB,EAAE;IAC3G,iFAAiF;IACjF,IAAI,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1C,OAAO,KAAK,CAAC;IACd,CAAC;IAED,4EAA4E;IAC5E,yFAAyF;IACzF,MAAM,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,SAAS,EAAE,GAAG,CAAC;IACxC,MAAM,YAAY,GAAG,GAAG,IAAI,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;IAE3D,gDAAgD;IAChD,IAAI,CAAC,YAAY,EAAE,CAAC;QACnB,OAAO,KAAK,CAAC;IACd,CAAC;IAED,mEAAmE;IACnE,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1C,OAAO,KAAK,CAAC;IACd,CAAC;IAED,6BAA6B;IAC7B,OAAO,qBAAqB,CAAC,aAAa,CAAC,YAAgC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AAC/F,CAAC,CAAC","sourcesContent":["import type { IAuthorizationLivechat, RoomAccessValidator } from '@rocket.chat/core-services';\nimport { proxify } from '@rocket.chat/core-services';\nimport type { IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { Rooms } from '@rocket.chat/models';\n\nconst AuthorizationLivechat = proxify<IAuthorizationLivechat>('authorization-livechat');\n\nexport const canAccessRoomLivechat: RoomAccessValidator = async (room, user, extraData): Promise<boolean> => {\n\t// If we received a partial room and its type is not `l` or `v`, skip all checks.\n\tif (room && !['v', 'l'].includes(room.t)) {\n\t\treturn false;\n\t}\n\n\t// if we received a partial room, load the full IOmnichannelRoom data for it\n\t// Otherwise, try to load the data from the extraData (this is the case for file uploads)\n\tconst rid = room?._id || extraData?.rid;\n\tconst livechatRoom = rid && (await Rooms.findOneById(rid));\n\n\t// if the roomId is invalid skip checks and fail\n\tif (!livechatRoom) {\n\t\treturn false;\n\t}\n\n\t// Check the type again in case the room parameter was not received\n\tif (!['v', 'l'].includes(livechatRoom.t)) {\n\t\treturn false;\n\t}\n\n\t// Call back core temporarily\n\treturn AuthorizationLivechat.canAccessRoom(livechatRoom as IOmnichannelRoom, user, extraData);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"production","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/authorization/canAccessRoomLivechat.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/authorization/canAccessRoomLivechat.ts","inputSourceMap":{"version":3,"file":"server/services/authorization/canAccessRoomLivechat.ts","sourceRoot":"","sources":["server/services/authorization/canAccessRoomLivechat.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE5C,MAAM,qBAAqB,GAAG,OAAO,CAAyB,wBAAwB,CAAC,CAAC;AAExF,MAAM,CAAC,MAAM,qBAAqB,GAAwB,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAoB,EAAE;IAC3G,iFAAiF;IACjF,IAAI,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1C,OAAO,KAAK,CAAC;IACd,CAAC;IAED,4EAA4E;IAC5E,yFAAyF;IACzF,MAAM,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,SAAS,EAAE,GAAG,CAAC;IACxC,MAAM,YAAY,GAAG,GAAG,IAAI,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;IAE3D,gDAAgD;IAChD,IAAI,CAAC,YAAY,EAAE,CAAC;QACnB,OAAO,KAAK,CAAC;IACd,CAAC;IAED,mEAAmE;IACnE,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1C,OAAO,KAAK,CAAC;IACd,CAAC;IAED,6BAA6B;IAC7B,OAAO,qBAAqB,CAAC,aAAa,CAAC,YAAgC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AAC/F,CAAC,CAAC","sourcesContent":["import type { IAuthorizationLivechat, RoomAccessValidator } from '@rocket.chat/core-services';\nimport { proxify } from '@rocket.chat/core-services';\nimport type { IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { Rooms } from '@rocket.chat/models';\n\nconst AuthorizationLivechat = proxify<IAuthorizationLivechat>('authorization-livechat');\n\nexport const canAccessRoomLivechat: RoomAccessValidator = async (room, user, extraData): Promise<boolean> => {\n\t// If we received a partial room and its type is not `l` or `v`, skip all checks.\n\tif (room && !['v', 'l'].includes(room.t)) {\n\t\treturn false;\n\t}\n\n\t// if we received a partial room, load the full IOmnichannelRoom data for it\n\t// Otherwise, try to load the data from the extraData (this is the case for file uploads)\n\tconst rid = room?._id || extraData?.rid;\n\tconst livechatRoom = rid && (await Rooms.findOneById(rid));\n\n\t// if the roomId is invalid skip checks and fail\n\tif (!livechatRoom) {\n\t\treturn false;\n\t}\n\n\t// Check the type again in case the room parameter was not received\n\tif (!['v', 'l'].includes(livechatRoom.t)) {\n\t\treturn false;\n\t}\n\n\t// Call back core temporarily\n\treturn AuthorizationLivechat.canAccessRoom(livechatRoom as IOmnichannelRoom, user, extraData);\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      canAccessRoomLivechat: () => canAccessRoomLivechat\n    });\n    let proxify;\n    module.link(\"@rocket.chat/core-services\", {\n      proxify(v) {\n        proxify = v;\n      }\n    }, 0);\n    let Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const AuthorizationLivechat = proxify('authorization-livechat');\n    const canAccessRoomLivechat = async (room, user, extraData) => {\n      // If we received a partial room and its type is not `l` or `v`, skip all checks.\n      if (room && !['v', 'l'].includes(room.t)) {\n        return false;\n      }\n      // if we received a partial room, load the full IOmnichannelRoom data for it\n      // Otherwise, try to load the data from the extraData (this is the case for file uploads)\n      const rid = (room === null || room === void 0 ? void 0 : room._id) || (extraData === null || extraData === void 0 ? void 0 : extraData.rid);\n      const livechatRoom = rid && (await Rooms.findOneById(rid));\n      // if the roomId is invalid skip checks and fail\n      if (!livechatRoom) {\n        return false;\n      }\n      // Check the type again in case the room parameter was not received\n      if (!['v', 'l'].includes(livechatRoom.t)) {\n        return false;\n      }\n      // Call back core temporarily\n      return AuthorizationLivechat.canAccessRoom(livechatRoom, user, extraData);\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","canAccessRoomLivechat","proxify","link","v","Rooms","__reifyWaitForDeps__","AuthorizationLivechat","room","user","extraData","includes","t","rid","_id","livechatRoom","findOneById","canAccessRoom","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/authorization/canAccessRoomLivechat.ts"],"sourcesContent":["import type { IAuthorizationLivechat, RoomAccessValidator } from '@rocket.chat/core-services';\nimport { proxify } from '@rocket.chat/core-services';\nimport type { IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { Rooms } from '@rocket.chat/models';\n\nconst AuthorizationLivechat = proxify<IAuthorizationLivechat>('authorization-livechat');\n\nexport const canAccessRoomLivechat: RoomAccessValidator = async (room, user, extraData): Promise<boolean> => {\n\t// If we received a partial room and its type is not `l` or `v`, skip all checks.\n\tif (room && !['v', 'l'].includes(room.t)) {\n\t\treturn false;\n\t}\n\n\t// if we received a partial room, load the full IOmnichannelRoom data for it\n\t// Otherwise, try to load the data from the extraData (this is the case for file uploads)\n\tconst rid = room?._id || extraData?.rid;\n\tconst livechatRoom = rid && (await Rooms.findOneById(rid));\n\n\t// if the roomId is invalid skip checks and fail\n\tif (!livechatRoom) {\n\t\treturn false;\n\t}\n\n\t// Check the type again in case the room parameter was not received\n\tif (!['v', 'l'].includes(livechatRoom.t)) {\n\t\treturn false;\n\t}\n\n\t// Call back core temporarily\n\treturn AuthorizationLivechat.canAccessRoom(livechatRoom as IOmnichannelRoom, user, extraData);\n};\n"],"mappings":";;;IACAA,MAAA,CAAOC,MAAE;MAAAC,qBAAe,EAAAA,CAAA,KAAAA;IAA6B;IAAA,IAAAC,OAAA;IAAAH,MAAA,CAAAI,IAAA;MAAAD,QAAAE,CAAA;QAAAF,OAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,KAAA;IAAAN,MAAA,CAAAI,IAAA;MAAAE,MAAAD,CAAA;QAAAC,KAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,oBAAA,WAAAA,oBAAA;IAIrD,MAAMC,qBAAqB,GAAGL,OAAO,CAAyB,wBAAwB,CAAC;IAEhF,MAAMD,qBAAqB,GAAwB,MAAAA,CAAOO,IAAI,EAAEC,IAAI,EAAEC,SAAS,KAAsB;MAC3G;MACA,IAAIF,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAACG,QAAQ,CAACH,IAAI,CAACI,CAAC,CAAC,EAAE;QACzC,OAAO,KAAK;MACb;MAEA;MACA;MACA,MAAMC,GAAG,GAAG,CAAAL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,GAAG,MAAIJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,GAAG;MACvC,MAAME,YAAY,GAAGF,GAAG,KAAK,MAAMR,KAAK,CAACW,WAAW,CAACH,GAAG,CAAC,CAAC;MAE1D;MACA,IAAI,CAACE,YAAY,EAAE;QAClB,OAAO,KAAK;MACb;MAEA;MACA,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAACJ,QAAQ,CAACI,YAAY,CAACH,CAAC,CAAC,EAAE;QACzC,OAAO,KAAK;MACb;MAEA;MACA,OAAOL,qBAAqB,CAACU,aAAa,CAACF,YAAgC,EAAEN,IAAI,EAAEC,SAAS,CAAC;IAC9F,CAAC;IAACQ,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"9d260f3a458cfebc0b1ab16640e8820447f18259"}
