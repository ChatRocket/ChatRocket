{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/custom-oauth/client/CustomOAuth.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/custom-oauth/client/CustomOAuth.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/custom-oauth/client/CustomOAuth.ts","inputSourceMap":{"version":3,"file":"app/custom-oauth/client/CustomOAuth.ts","sourceRoot":"","sources":["app/custom-oauth/client/CustomOAuth.ts"],"names":[],"mappings":"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","sourcesContent":["import type { OAuthConfiguration, OauthConfig } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport { capitalize } from '@rocket.chat/string-helpers';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport { OAuth } from 'meteor/oauth';\n\nimport type { IOAuthProvider } from '../../../client/definitions/IOAuthProvider';\nimport { overrideLoginMethod, type LoginCallback } from '../../../client/lib/2fa/overrideLoginMethod';\nimport { loginServices } from '../../../client/lib/loginServices';\nimport { createOAuthTotpLoginMethod } from '../../../client/meteorOverrides/login/oauth';\nimport { isURL } from '../../../lib/utils/isURL';\n\n// Request custom OAuth credentials for the user\n// @param options {optional}\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\n\nexport class CustomOAuth implements IOAuthProvider {\n\tpublic serverURL: string;\n\n\tpublic authorizePath: string;\n\n\tpublic scope: string;\n\n\tpublic responseType: string;\n\n\tconstructor(public readonly name: string, options: OauthConfig) {\n\t\tthis.name = name;\n\t\tif (!Match.test(this.name, String)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Name is required and must be String');\n\t\t}\n\n\t\tthis.configure(options);\n\n\t\tAccounts.oauth.registerService(this.name);\n\n\t\tthis.configureLogin();\n\t}\n\n\tconfigure(options: OauthConfig) {\n\t\tif (!Match.test(options, Object)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Options is required and must be Object');\n\t\t}\n\n\t\tif (!Match.test(options.serverURL, String)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Options.serverURL is required and must be String');\n\t\t}\n\n\t\tif (!Match.test(options.authorizePath, String)) {\n\t\t\toptions.authorizePath = '/oauth/authorize';\n\t\t}\n\n\t\tif (!Match.test(options.scope, String)) {\n\t\t\toptions.scope = 'openid';\n\t\t}\n\n\t\tthis.serverURL = options.serverURL;\n\t\tthis.authorizePath = options.authorizePath;\n\t\tthis.scope = options.scope;\n\t\tthis.responseType = options.responseType || 'code';\n\n\t\tif (!isURL(this.authorizePath)) {\n\t\t\tthis.authorizePath = this.serverURL + this.authorizePath;\n\t\t}\n\t}\n\n\tconfigureLogin() {\n\t\tconst loginWithService = `loginWith${capitalize(String(this.name || ''))}` as const;\n\n\t\tconst loginWithOAuthTokenAndTOTP = createOAuthTotpLoginMethod(this);\n\n\t\tconst loginWithOAuthToken = async (options?: Meteor.LoginWithExternalServiceOptions, callback?: LoginCallback) => {\n\t\t\tconst credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n\t\t\tawait this.requestCredential(options, credentialRequestCompleteCallback);\n\t\t};\n\n\t\t(Meteor as any)[loginWithService] = (options: Meteor.LoginWithExternalServiceOptions, callback: LoginCallback) => {\n\t\t\toverrideLoginMethod(loginWithOAuthToken, [options], callback, loginWithOAuthTokenAndTOTP);\n\t\t};\n\t}\n\n\tasync requestCredential(\n\t\toptions: Meteor.LoginWithExternalServiceOptions = {},\n\t\tcredentialRequestCompleteCallback: (credentialTokenOrError?: string | Error) => void,\n\t) {\n\t\tconst config = await loginServices.loadLoginService<OAuthConfiguration>(this.name);\n\t\tif (!config) {\n\t\t\tif (credentialRequestCompleteCallback) {\n\t\t\t\tcredentialRequestCompleteCallback(new Accounts.ConfigError());\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst credentialToken = Random.secret();\n\t\tconst loginStyle = OAuth._loginStyle(this.name, config);\n\n\t\tconst separator = this.authorizePath.indexOf('?') !== -1 ? '&' : '?';\n\n\t\tconst loginUrl =\n\t\t\t`${this.authorizePath}${separator}client_id=${config.clientId}&redirect_uri=${encodeURIComponent(\n\t\t\t\tOAuth._redirectUri(this.name, config),\n\t\t\t)}&response_type=${encodeURIComponent(this.responseType)}` +\n\t\t\t`&state=${encodeURIComponent(OAuth._stateParam(loginStyle, credentialToken, options.redirectUrl))}&scope=${encodeURIComponent(\n\t\t\t\tthis.scope,\n\t\t\t)}`;\n\n\t\tOAuth.launchLogin({\n\t\t\tloginService: this.name,\n\t\t\tloginStyle,\n\t\t\tloginUrl,\n\t\t\tcredentialRequestCompleteCallback,\n\t\t\tcredentialToken,\n\t\t\tpopupOptions: {\n\t\t\t\twidth: 900,\n\t\t\t\theight: 450,\n\t\t\t},\n\t\t});\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/custom-oauth/client/CustomOAuth.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/custom-oauth/client/CustomOAuth.ts","inputSourceMap":{"version":3,"file":"app/custom-oauth/client/CustomOAuth.ts","sourceRoot":"","sources":["app/custom-oauth/client/CustomOAuth.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,6BAA6B,CAAC;AACzD,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAGrC,OAAO,EAAE,mBAAmB,EAAsB,MAAM,6CAA6C,CAAC;AACtG,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,0BAA0B,EAAE,MAAM,6CAA6C,CAAC;AACzF,OAAO,EAAE,KAAK,EAAE,MAAM,0BAA0B,CAAC;AAEjD,gDAAgD;AAChD,4BAA4B;AAC5B,mFAAmF;AACnF,4EAA4E;AAC5E,WAAW;AAEX,MAAM,OAAO,WAAW;IASK;IARrB,SAAS,CAAS;IAElB,aAAa,CAAS;IAEtB,KAAK,CAAS;IAEd,YAAY,CAAS;IAE5B,YAA4B,IAAY,EAAE,OAAoB;QAAlC,SAAI,GAAJ,IAAI,CAAQ;QACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC;YACpC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,kDAAkD,CAAC,CAAC;QAC5E,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAExB,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE1C,IAAI,CAAC,cAAc,EAAE,CAAC;IACvB,CAAC;IAED,SAAS,CAAC,OAAoB;QAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC;YAClC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,qDAAqD,CAAC,CAAC;QAC/E,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC;YAC5C,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,+DAA+D,CAAC,CAAC;QACzF,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,EAAE,CAAC;YAChD,OAAO,CAAC,aAAa,GAAG,kBAAkB,CAAC;QAC5C,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC;YACxC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC1B,CAAC;QAED,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QACnC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,MAAM,CAAC;QAEnD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;QAC1D,CAAC;IACF,CAAC;IAED,cAAc;QACb,MAAM,gBAAgB,GAAG,YAAY,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAW,CAAC;QAEpF,MAAM,0BAA0B,GAAG,0BAA0B,CAAC,IAAI,CAAC,CAAC;QAEpE,MAAM,mBAAmB,GAAG,KAAK,EAAE,OAAgD,EAAE,QAAwB,EAAE,EAAE;YAChH,MAAM,iCAAiC,GAAG,QAAQ,CAAC,KAAK,CAAC,gCAAgC,CAAC,QAAQ,CAAC,CAAC;YACpG,MAAM,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,iCAAiC,CAAC,CAAC;QAC1E,CAAC,CAAC;QAED,MAAc,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAA+C,EAAE,QAAuB,EAAE,EAAE;YAChH,mBAAmB,CAAC,mBAAmB,EAAE,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,0BAA0B,CAAC,CAAC;QAC3F,CAAC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,iBAAiB,CACtB,UAAkD,EAAE,EACpD,iCAAoF;QAEpF,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,gBAAgB,CAAqB,IAAI,CAAC,IAAI,CAAC,CAAC;QACnF,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,IAAI,iCAAiC,EAAE,CAAC;gBACvC,iCAAiC,CAAC,IAAI,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;YAC/D,CAAC;YACD,OAAO;QACR,CAAC;QAED,MAAM,eAAe,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QACxC,MAAM,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAExD,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAErE,MAAM,QAAQ,GACb,GAAG,IAAI,CAAC,aAAa,GAAG,SAAS,aAAa,MAAM,CAAC,QAAQ,iBAAiB,kBAAkB,CAC/F,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CACrC,kBAAkB,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YAC1D,UAAU,kBAAkB,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,EAAE,eAAe,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC,UAAU,kBAAkB,CAC5H,IAAI,CAAC,KAAK,CACV,EAAE,CAAC;QAEL,KAAK,CAAC,WAAW,CAAC;YACjB,YAAY,EAAE,IAAI,CAAC,IAAI;YACvB,UAAU;YACV,QAAQ;YACR,iCAAiC;YACjC,eAAe;YACf,YAAY,EAAE;gBACb,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,GAAG;aACX;SACD,CAAC,CAAC;IACJ,CAAC;CACD","sourcesContent":["import type { OAuthConfiguration, OauthConfig } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport { capitalize } from '@rocket.chat/string-helpers';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport { OAuth } from 'meteor/oauth';\n\nimport type { IOAuthProvider } from '../../../client/definitions/IOAuthProvider';\nimport { overrideLoginMethod, type LoginCallback } from '../../../client/lib/2fa/overrideLoginMethod';\nimport { loginServices } from '../../../client/lib/loginServices';\nimport { createOAuthTotpLoginMethod } from '../../../client/meteorOverrides/login/oauth';\nimport { isURL } from '../../../lib/utils/isURL';\n\n// Request custom OAuth credentials for the user\n// @param options {optional}\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\n\nexport class CustomOAuth implements IOAuthProvider {\n\tpublic serverURL: string;\n\n\tpublic authorizePath: string;\n\n\tpublic scope: string;\n\n\tpublic responseType: string;\n\n\tconstructor(public readonly name: string, options: OauthConfig) {\n\t\tthis.name = name;\n\t\tif (!Match.test(this.name, String)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Name is required and must be String');\n\t\t}\n\n\t\tthis.configure(options);\n\n\t\tAccounts.oauth.registerService(this.name);\n\n\t\tthis.configureLogin();\n\t}\n\n\tconfigure(options: OauthConfig) {\n\t\tif (!Match.test(options, Object)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Options is required and must be Object');\n\t\t}\n\n\t\tif (!Match.test(options.serverURL, String)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Options.serverURL is required and must be String');\n\t\t}\n\n\t\tif (!Match.test(options.authorizePath, String)) {\n\t\t\toptions.authorizePath = '/oauth/authorize';\n\t\t}\n\n\t\tif (!Match.test(options.scope, String)) {\n\t\t\toptions.scope = 'openid';\n\t\t}\n\n\t\tthis.serverURL = options.serverURL;\n\t\tthis.authorizePath = options.authorizePath;\n\t\tthis.scope = options.scope;\n\t\tthis.responseType = options.responseType || 'code';\n\n\t\tif (!isURL(this.authorizePath)) {\n\t\t\tthis.authorizePath = this.serverURL + this.authorizePath;\n\t\t}\n\t}\n\n\tconfigureLogin() {\n\t\tconst loginWithService = `loginWith${capitalize(String(this.name || ''))}` as const;\n\n\t\tconst loginWithOAuthTokenAndTOTP = createOAuthTotpLoginMethod(this);\n\n\t\tconst loginWithOAuthToken = async (options?: Meteor.LoginWithExternalServiceOptions, callback?: LoginCallback) => {\n\t\t\tconst credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n\t\t\tawait this.requestCredential(options, credentialRequestCompleteCallback);\n\t\t};\n\n\t\t(Meteor as any)[loginWithService] = (options: Meteor.LoginWithExternalServiceOptions, callback: LoginCallback) => {\n\t\t\toverrideLoginMethod(loginWithOAuthToken, [options], callback, loginWithOAuthTokenAndTOTP);\n\t\t};\n\t}\n\n\tasync requestCredential(\n\t\toptions: Meteor.LoginWithExternalServiceOptions = {},\n\t\tcredentialRequestCompleteCallback: (credentialTokenOrError?: string | Error) => void,\n\t) {\n\t\tconst config = await loginServices.loadLoginService<OAuthConfiguration>(this.name);\n\t\tif (!config) {\n\t\t\tif (credentialRequestCompleteCallback) {\n\t\t\t\tcredentialRequestCompleteCallback(new Accounts.ConfigError());\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst credentialToken = Random.secret();\n\t\tconst loginStyle = OAuth._loginStyle(this.name, config);\n\n\t\tconst separator = this.authorizePath.indexOf('?') !== -1 ? '&' : '?';\n\n\t\tconst loginUrl =\n\t\t\t`${this.authorizePath}${separator}client_id=${config.clientId}&redirect_uri=${encodeURIComponent(\n\t\t\t\tOAuth._redirectUri(this.name, config),\n\t\t\t)}&response_type=${encodeURIComponent(this.responseType)}` +\n\t\t\t`&state=${encodeURIComponent(OAuth._stateParam(loginStyle, credentialToken, options.redirectUrl))}&scope=${encodeURIComponent(\n\t\t\t\tthis.scope,\n\t\t\t)}`;\n\n\t\tOAuth.launchLogin({\n\t\t\tloginService: this.name,\n\t\t\tloginStyle,\n\t\t\tloginUrl,\n\t\t\tcredentialRequestCompleteCallback,\n\t\t\tcredentialToken,\n\t\t\tpopupOptions: {\n\t\t\t\twidth: 900,\n\t\t\t\theight: 450,\n\t\t\t},\n\t\t});\n\t}\n}\n"]}}},"code":"module.export({\n  CustomOAuth: () => CustomOAuth\n});\nlet Random;\nmodule.link(\"@rocket.chat/random\", {\n  Random(v) {\n    Random = v;\n  }\n}, 0);\nlet capitalize;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  capitalize(v) {\n    capitalize = v;\n  }\n}, 1);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n}, 2);\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n}, 3);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 4);\nlet OAuth;\nmodule.link(\"meteor/oauth\", {\n  OAuth(v) {\n    OAuth = v;\n  }\n}, 5);\nlet overrideLoginMethod;\nmodule.link(\"../../../client/lib/2fa/overrideLoginMethod\", {\n  overrideLoginMethod(v) {\n    overrideLoginMethod = v;\n  }\n}, 6);\nlet loginServices;\nmodule.link(\"../../../client/lib/loginServices\", {\n  loginServices(v) {\n    loginServices = v;\n  }\n}, 7);\nlet createOAuthTotpLoginMethod;\nmodule.link(\"../../../client/meteorOverrides/login/oauth\", {\n  createOAuthTotpLoginMethod(v) {\n    createOAuthTotpLoginMethod = v;\n  }\n}, 8);\nlet isURL;\nmodule.link(\"../../../lib/utils/isURL\", {\n  isURL(v) {\n    isURL = v;\n  }\n}, 9);\nclass CustomOAuth {\n  constructor(name, options) {\n    this.name = void 0;\n    this.serverURL = void 0;\n    this.authorizePath = void 0;\n    this.scope = void 0;\n    this.responseType = void 0;\n    this.name = name;\n    this.name = name;\n    if (!Match.test(this.name, String)) {\n      throw new Meteor.Error('CustomOAuth: Name is required and must be String');\n    }\n    this.configure(options);\n    Accounts.oauth.registerService(this.name);\n    this.configureLogin();\n  }\n  configure(options) {\n    if (!Match.test(options, Object)) {\n      throw new Meteor.Error('CustomOAuth: Options is required and must be Object');\n    }\n    if (!Match.test(options.serverURL, String)) {\n      throw new Meteor.Error('CustomOAuth: Options.serverURL is required and must be String');\n    }\n    if (!Match.test(options.authorizePath, String)) {\n      options.authorizePath = '/oauth/authorize';\n    }\n    if (!Match.test(options.scope, String)) {\n      options.scope = 'openid';\n    }\n    this.serverURL = options.serverURL;\n    this.authorizePath = options.authorizePath;\n    this.scope = options.scope;\n    this.responseType = options.responseType || 'code';\n    if (!isURL(this.authorizePath)) {\n      this.authorizePath = this.serverURL + this.authorizePath;\n    }\n  }\n  configureLogin() {\n    const loginWithService = \"loginWith\".concat(capitalize(String(this.name || '')));\n    const loginWithOAuthTokenAndTOTP = createOAuthTotpLoginMethod(this);\n    const loginWithOAuthToken = async (options, callback) => {\n      const credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n      await this.requestCredential(options, credentialRequestCompleteCallback);\n    };\n    Meteor[loginWithService] = (options, callback) => {\n      overrideLoginMethod(loginWithOAuthToken, [options], callback, loginWithOAuthTokenAndTOTP);\n    };\n  }\n  async requestCredential() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let credentialRequestCompleteCallback = arguments.length > 1 ? arguments[1] : undefined;\n    const config = await loginServices.loadLoginService(this.name);\n    if (!config) {\n      if (credentialRequestCompleteCallback) {\n        credentialRequestCompleteCallback(new Accounts.ConfigError());\n      }\n      return;\n    }\n    const credentialToken = Random.secret();\n    const loginStyle = OAuth._loginStyle(this.name, config);\n    const separator = this.authorizePath.indexOf('?') !== -1 ? '&' : '?';\n    const loginUrl = \"\".concat(this.authorizePath).concat(separator, \"client_id=\").concat(config.clientId, \"&redirect_uri=\").concat(encodeURIComponent(OAuth._redirectUri(this.name, config)), \"&response_type=\").concat(encodeURIComponent(this.responseType)) + \"&state=\".concat(encodeURIComponent(OAuth._stateParam(loginStyle, credentialToken, options.redirectUrl)), \"&scope=\").concat(encodeURIComponent(this.scope));\n    OAuth.launchLogin({\n      loginService: this.name,\n      loginStyle,\n      loginUrl,\n      credentialRequestCompleteCallback,\n      credentialToken,\n      popupOptions: {\n        width: 900,\n        height: 450\n      }\n    });\n  }\n}","map":{"version":3,"names":["module","export","CustomOAuth","Random","link","v","capitalize","Accounts","Match","Meteor","OAuth","overrideLoginMethod","loginServices","createOAuthTotpLoginMethod","isURL","constructor","name","options","serverURL","authorizePath","scope","responseType","test","String","Error","configure","oauth","registerService","configureLogin","Object","loginWithService","concat","loginWithOAuthTokenAndTOTP","loginWithOAuthToken","callback","credentialRequestCompleteCallback","credentialRequestCompleteHandler","requestCredential","arguments","length","undefined","config","loadLoginService","ConfigError","credentialToken","secret","loginStyle","_loginStyle","separator","indexOf","loginUrl","clientId","encodeURIComponent","_redirectUri","_stateParam","redirectUrl","launchLogin","loginService","popupOptions","width","height"],"sources":["app/custom-oauth/client/CustomOAuth.ts"],"sourcesContent":["import type { OAuthConfiguration, OauthConfig } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport { capitalize } from '@rocket.chat/string-helpers';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport { OAuth } from 'meteor/oauth';\n\nimport type { IOAuthProvider } from '../../../client/definitions/IOAuthProvider';\nimport { overrideLoginMethod, type LoginCallback } from '../../../client/lib/2fa/overrideLoginMethod';\nimport { loginServices } from '../../../client/lib/loginServices';\nimport { createOAuthTotpLoginMethod } from '../../../client/meteorOverrides/login/oauth';\nimport { isURL } from '../../../lib/utils/isURL';\n\n// Request custom OAuth credentials for the user\n// @param options {optional}\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\n\nexport class CustomOAuth implements IOAuthProvider {\n\tpublic serverURL: string;\n\n\tpublic authorizePath: string;\n\n\tpublic scope: string;\n\n\tpublic responseType: string;\n\n\tconstructor(public readonly name: string, options: OauthConfig) {\n\t\tthis.name = name;\n\t\tif (!Match.test(this.name, String)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Name is required and must be String');\n\t\t}\n\n\t\tthis.configure(options);\n\n\t\tAccounts.oauth.registerService(this.name);\n\n\t\tthis.configureLogin();\n\t}\n\n\tconfigure(options: OauthConfig) {\n\t\tif (!Match.test(options, Object)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Options is required and must be Object');\n\t\t}\n\n\t\tif (!Match.test(options.serverURL, String)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Options.serverURL is required and must be String');\n\t\t}\n\n\t\tif (!Match.test(options.authorizePath, String)) {\n\t\t\toptions.authorizePath = '/oauth/authorize';\n\t\t}\n\n\t\tif (!Match.test(options.scope, String)) {\n\t\t\toptions.scope = 'openid';\n\t\t}\n\n\t\tthis.serverURL = options.serverURL;\n\t\tthis.authorizePath = options.authorizePath;\n\t\tthis.scope = options.scope;\n\t\tthis.responseType = options.responseType || 'code';\n\n\t\tif (!isURL(this.authorizePath)) {\n\t\t\tthis.authorizePath = this.serverURL + this.authorizePath;\n\t\t}\n\t}\n\n\tconfigureLogin() {\n\t\tconst loginWithService = `loginWith${capitalize(String(this.name || ''))}` as const;\n\n\t\tconst loginWithOAuthTokenAndTOTP = createOAuthTotpLoginMethod(this);\n\n\t\tconst loginWithOAuthToken = async (options?: Meteor.LoginWithExternalServiceOptions, callback?: LoginCallback) => {\n\t\t\tconst credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n\t\t\tawait this.requestCredential(options, credentialRequestCompleteCallback);\n\t\t};\n\n\t\t(Meteor as any)[loginWithService] = (options: Meteor.LoginWithExternalServiceOptions, callback: LoginCallback) => {\n\t\t\toverrideLoginMethod(loginWithOAuthToken, [options], callback, loginWithOAuthTokenAndTOTP);\n\t\t};\n\t}\n\n\tasync requestCredential(\n\t\toptions: Meteor.LoginWithExternalServiceOptions = {},\n\t\tcredentialRequestCompleteCallback: (credentialTokenOrError?: string | Error) => void,\n\t) {\n\t\tconst config = await loginServices.loadLoginService<OAuthConfiguration>(this.name);\n\t\tif (!config) {\n\t\t\tif (credentialRequestCompleteCallback) {\n\t\t\t\tcredentialRequestCompleteCallback(new Accounts.ConfigError());\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst credentialToken = Random.secret();\n\t\tconst loginStyle = OAuth._loginStyle(this.name, config);\n\n\t\tconst separator = this.authorizePath.indexOf('?') !== -1 ? '&' : '?';\n\n\t\tconst loginUrl =\n\t\t\t`${this.authorizePath}${separator}client_id=${config.clientId}&redirect_uri=${encodeURIComponent(\n\t\t\t\tOAuth._redirectUri(this.name, config),\n\t\t\t)}&response_type=${encodeURIComponent(this.responseType)}` +\n\t\t\t`&state=${encodeURIComponent(OAuth._stateParam(loginStyle, credentialToken, options.redirectUrl))}&scope=${encodeURIComponent(\n\t\t\t\tthis.scope,\n\t\t\t)}`;\n\n\t\tOAuth.launchLogin({\n\t\t\tloginService: this.name,\n\t\t\tloginStyle,\n\t\t\tloginUrl,\n\t\t\tcredentialRequestCompleteCallback,\n\t\t\tcredentialToken,\n\t\t\tpopupOptions: {\n\t\t\t\twidth: 900,\n\t\t\t\theight: 450,\n\t\t\t},\n\t\t});\n\t}\n}\n"],"mappings":"AACAA,MAAA,CAAOC,MAAE;EAAMC,WAAQ,EAAAA,CAAA,KAAAA;AAAA,EAAqB;AAAC,IAAAC,MAAA;AAAAH,MAAA,CAAAI,IAAA;EAAAD,OAAAE,CAAA;IAAAF,MAAA,GAAAE,CAAA;EAAA;AAAA;AAAA,IAAAC,UAAA;AAAAN,MAAA,CAAAI,IAAA;EAAAE,WAAAD,CAAA;IAAAC,UAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,QAAA;AAAAP,MAAA,CAAAI,IAAA;EAAAG,SAAAF,CAAA;IAAAE,QAAA,GAAAF,CAAA;EAAA;AAAA;AAAA,IAAAG,KAAA;AAAAR,MAAA,CAAAI,IAAA;EAAAI,MAAAH,CAAA;IAAAG,KAAA,GAAAH,CAAA;EAAA;AAAA;AAAA,IAAAI,MAAA;AAAAT,MAAA,CAAAI,IAAA;EAAAK,OAAAJ,CAAA;IAAAI,MAAA,GAAAJ,CAAA;EAAA;AAAA;AAAA,IAAAK,KAAA;AAAAV,MAAA,CAAAI,IAAA;EAAAM,MAAAL,CAAA;IAAAK,KAAA,GAAAL,CAAA;EAAA;AAAA;AAAA,IAAAM,mBAAA;AAAAX,MAAA,CAAAI,IAAA;EAAAO,oBAAAN,CAAA;IAAAM,mBAAA,GAAAN,CAAA;EAAA;AAAA;AAAA,IAAAO,aAAA;AAAAZ,MAAA,CAAAI,IAAA;EAAAQ,cAAAP,CAAA;IAAAO,aAAA,GAAAP,CAAA;EAAA;AAAA;AAAA,IAAAQ,0BAAA;AAAAb,MAAA,CAAAI,IAAA;EAAAS,2BAAAR,CAAA;IAAAQ,0BAAA,GAAAR,CAAA;EAAA;AAAA;AAAA,IAAAS,KAAA;AAAAd,MAAA,CAAAI,IAAA;EAAAU,MAAAT,CAAA;IAAAS,KAAA,GAAAT,CAAA;EAAA;AAAA;AAmBvC,MAAOH,WAAW;EASvBa,YAA4BC,IAAY,EAAEC,OAAoB;IAAA,KAAlCD,IAAA;IAAA,KARrBE,SAAS;IAAA,KAETC,aAAa;IAAA,KAEbC,KAAK;IAAA,KAELC,YAAY;IAES,KAAAL,IAAI,GAAJA,IAAI;IAC/B,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACR,KAAK,CAACc,IAAI,CAAC,IAAI,CAACN,IAAI,EAAEO,MAAM,CAAC,EAAE;MACnC,MAAM,IAAId,MAAM,CAACe,KAAK,CAAC,kDAAkD,CAAC;IAC3E;IAEA,IAAI,CAACC,SAAS,CAACR,OAAO,CAAC;IAEvBV,QAAQ,CAACmB,KAAK,CAACC,eAAe,CAAC,IAAI,CAACX,IAAI,CAAC;IAEzC,IAAI,CAACY,cAAc,EAAE;EACtB;EAEAH,SAASA,CAACR,OAAoB;IAC7B,IAAI,CAACT,KAAK,CAACc,IAAI,CAACL,OAAO,EAAEY,MAAM,CAAC,EAAE;MACjC,MAAM,IAAIpB,MAAM,CAACe,KAAK,CAAC,qDAAqD,CAAC;IAC9E;IAEA,IAAI,CAAChB,KAAK,CAACc,IAAI,CAACL,OAAO,CAACC,SAAS,EAAEK,MAAM,CAAC,EAAE;MAC3C,MAAM,IAAId,MAAM,CAACe,KAAK,CAAC,+DAA+D,CAAC;IACxF;IAEA,IAAI,CAAChB,KAAK,CAACc,IAAI,CAACL,OAAO,CAACE,aAAa,EAAEI,MAAM,CAAC,EAAE;MAC/CN,OAAO,CAACE,aAAa,GAAG,kBAAkB;IAC3C;IAEA,IAAI,CAACX,KAAK,CAACc,IAAI,CAACL,OAAO,CAACG,KAAK,EAAEG,MAAM,CAAC,EAAE;MACvCN,OAAO,CAACG,KAAK,GAAG,QAAQ;IACzB;IAEA,IAAI,CAACF,SAAS,GAAGD,OAAO,CAACC,SAAS;IAClC,IAAI,CAACC,aAAa,GAAGF,OAAO,CAACE,aAAa;IAC1C,IAAI,CAACC,KAAK,GAAGH,OAAO,CAACG,KAAK;IAC1B,IAAI,CAACC,YAAY,GAAGJ,OAAO,CAACI,YAAY,IAAI,MAAM;IAElD,IAAI,CAACP,KAAK,CAAC,IAAI,CAACK,aAAa,CAAC,EAAE;MAC/B,IAAI,CAACA,aAAa,GAAG,IAAI,CAACD,SAAS,GAAG,IAAI,CAACC,aAAa;IACzD;EACD;EAEAS,cAAcA,CAAA;IACb,MAAME,gBAAgB,eAAAC,MAAA,CAAezB,UAAU,CAACiB,MAAM,CAAC,IAAI,CAACP,IAAI,IAAI,EAAE,CAAC,CAAC,CAAW;IAEnF,MAAMgB,0BAA0B,GAAGnB,0BAA0B,CAAC,IAAI,CAAC;IAEnE,MAAMoB,mBAAmB,GAAG,MAAAA,CAAOhB,OAAgD,EAAEiB,QAAwB,KAAI;MAChH,MAAMC,iCAAiC,GAAG5B,QAAQ,CAACmB,KAAK,CAACU,gCAAgC,CAACF,QAAQ,CAAC;MACnG,MAAM,IAAI,CAACG,iBAAiB,CAACpB,OAAO,EAAEkB,iCAAiC,CAAC;IACzE,CAAC;IAEA1B,MAAc,CAACqB,gBAAgB,CAAC,GAAG,CAACb,OAA+C,EAAEiB,QAAuB,KAAI;MAChHvB,mBAAmB,CAACsB,mBAAmB,EAAE,CAAChB,OAAO,CAAC,EAAEiB,QAAQ,EAAEF,0BAA0B,CAAC;IAC1F,CAAC;EACF;EAEA,MAAMK,iBAAiBA,CAAA,EAE8D;IAAA,IADpFpB,OAAA,GAAAqB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAkD,EAAE;IAAA,IACpDH,iCAAoF,GAAAG,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAEpF,MAAMC,MAAM,GAAG,MAAM7B,aAAa,CAAC8B,gBAAgB,CAAqB,IAAI,CAAC1B,IAAI,CAAC;IAClF,IAAI,CAACyB,MAAM,EAAE;MACZ,IAAIN,iCAAiC,EAAE;QACtCA,iCAAiC,CAAC,IAAI5B,QAAQ,CAACoC,WAAW,EAAE,CAAC;MAC9D;MACA;IACD;IAEA,MAAMC,eAAe,GAAGzC,MAAM,CAAC0C,MAAM,EAAE;IACvC,MAAMC,UAAU,GAAGpC,KAAK,CAACqC,WAAW,CAAC,IAAI,CAAC/B,IAAI,EAAEyB,MAAM,CAAC;IAEvD,MAAMO,SAAS,GAAG,IAAI,CAAC7B,aAAa,CAAC8B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;IAEpE,MAAMC,QAAQ,GACb,GAAAnB,MAAA,CAAG,IAAI,CAACZ,aAAa,EAAAY,MAAA,CAAGiB,SAAS,gBAAAjB,MAAA,CAAaU,MAAM,CAACU,QAAQ,oBAAApB,MAAA,CAAiBqB,kBAAkB,CAC/F1C,KAAK,CAAC2C,YAAY,CAAC,IAAI,CAACrC,IAAI,EAAEyB,MAAM,CAAC,CACrC,qBAAAV,MAAA,CAAkBqB,kBAAkB,CAAC,IAAI,CAAC/B,YAAY,CAAC,cAAAU,MAAA,CAC9CqB,kBAAkB,CAAC1C,KAAK,CAAC4C,WAAW,CAACR,UAAU,EAAEF,eAAe,EAAE3B,OAAO,CAACsC,WAAW,CAAC,CAAC,aAAAxB,MAAA,CAAUqB,kBAAkB,CAC5H,IAAI,CAAChC,KAAK,CACV,CAAE;IAEJV,KAAK,CAAC8C,WAAW,CAAC;MACjBC,YAAY,EAAE,IAAI,CAACzC,IAAI;MACvB8B,UAAU;MACVI,QAAQ;MACRf,iCAAiC;MACjCS,eAAe;MACfc,YAAY,EAAE;QACbC,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE;;KAET,CAAC;EACH","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"319ed02fb52dfe9d5db0c09834c4e8caa26d9597"}
