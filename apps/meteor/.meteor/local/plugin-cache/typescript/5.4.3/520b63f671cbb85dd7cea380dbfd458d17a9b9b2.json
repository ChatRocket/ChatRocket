{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/lib/analytics/agents.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/lib/analytics/agents.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/lib/analytics/agents.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/lib/analytics/agents.ts","sourceRoot":"","sources":["app/livechat/server/lib/analytics/agents.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,qBAAqB,EAAE,MAAM,qBAAqB,CAAC;AAQ3E,MAAM,CAAC,MAAM,8BAA8B,GAAG,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,GAAG,EAAE,EAAU,EAAE,EAAE;IAC5F,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,EAAE,CAAC;QACpB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;IACvD,CAAC;IACD,MAAM,KAAK,GAAG,MAAM,aAAa,CAAC,iCAAiC,CAAC;QACnE,KAAK;QACL,GAAG;QACH,SAAS,EAAE,IAAI;KACf,CAAC,CAAC,OAAO,EAAE,CAAC;IACb,OAAO;QACN,MAAM,EAAE,MAAM,aAAa,CAAC,iCAAiC,CAAC;YAC7D,KAAK;YACL,GAAG;YACH,OAAO;SACP,CAAC,CAAC,OAAO,EAAE;QACZ,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACxC,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,uBAAuB,GAAG,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,GAAG,EAAE,EAAU,EAAE,EAAE;IACrF,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,EAAE,CAAC;QACpB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;IACvD,CAAC;IACD,MAAM,KAAK,GAAG,MAAM,aAAa,CAAC,yBAAyB,CAAC;QAC3D,KAAK;QACL,GAAG;QACH,SAAS,EAAE,IAAI;KACf,CAAC,CAAC,OAAO,EAAE,CAAC;IACb,OAAO;QACN,MAAM,EAAE,MAAM,aAAa,CAAC,yBAAyB,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE;QACxF,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACxC,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oCAAoC,GAAG,KAAK,EAAE,EAC1D,KAAK,EACL,GAAG,EACH,UAAU,EACV,OAAO,GAAG,EAAE,GAMZ,EAAE,EAAE;IACJ,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,EAAE,CAAC;QACpB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;IACvD,CAAC;IACD,MAAM,KAAK,GAAG,MAAM,qBAAqB,CAAC,+BAA+B,CAAC;QACzE,KAAK;QACL,GAAG;QACH,UAAU;QACV,SAAS,EAAE,IAAI;KACf,CAAC,CAAC,OAAO,EAAE,CAAC;IACb,OAAO;QACN,MAAM,EAAE,MAAM,qBAAqB,CAAC,+BAA+B,CAAC;YACnE,KAAK;YACL,GAAG;YACH,UAAU;YACV,OAAO;SACP,CAAC,CAAC,OAAO,EAAE;QACZ,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACxC,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { LivechatRooms, LivechatAgentActivity } from '@rocket.chat/models';\n\ntype Params = {\n\tstart: Date;\n\tend: Date;\n\toptions?: any;\n};\n\nexport const findAllAverageServiceTimeAsync = async ({ start, end, options = {} }: Params) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatRooms.findAllAverageServiceTimeByAgents({\n\t\tstart,\n\t\tend,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tagents: await LivechatRooms.findAllAverageServiceTimeByAgents({\n\t\t\tstart,\n\t\t\tend,\n\t\t\toptions,\n\t\t}).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nexport const findAllServiceTimeAsync = async ({ start, end, options = {} }: Params) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatRooms.findAllServiceTimeByAgent({\n\t\tstart,\n\t\tend,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tagents: await LivechatRooms.findAllServiceTimeByAgent({ start, end, options }).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nexport const findAvailableServiceTimeHistoryAsync = async ({\n\tstart,\n\tend,\n\tfullReport,\n\toptions = {},\n}: {\n\tstart: string;\n\tend: string;\n\tfullReport: boolean;\n\toptions: { sort?: Record<string, number>; offset?: number; count?: number };\n}) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatAgentActivity.findAvailableServiceTimeHistory({\n\t\tstart,\n\t\tend,\n\t\tfullReport,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tagents: await LivechatAgentActivity.findAvailableServiceTimeHistory({\n\t\t\tstart,\n\t\t\tend,\n\t\t\tfullReport,\n\t\t\toptions,\n\t\t}).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/lib/analytics/agents.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/lib/analytics/agents.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/lib/analytics/agents.ts","sourceRoot":"","sources":["app/livechat/server/lib/analytics/agents.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,qBAAqB,EAAE,MAAM,qBAAqB,CAAC;AAQ3E,MAAM,CAAC,MAAM,8BAA8B,GAAG,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,GAAG,EAAE,EAAU,EAAE,EAAE;IAC5F,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,EAAE,CAAC;QACpB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;IACvD,CAAC;IACD,MAAM,KAAK,GAAG,MAAM,aAAa,CAAC,iCAAiC,CAAC;QACnE,KAAK;QACL,GAAG;QACH,SAAS,EAAE,IAAI;KACf,CAAC,CAAC,OAAO,EAAE,CAAC;IACb,OAAO;QACN,MAAM,EAAE,MAAM,aAAa,CAAC,iCAAiC,CAAC;YAC7D,KAAK;YACL,GAAG;YACH,OAAO;SACP,CAAC,CAAC,OAAO,EAAE;QACZ,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACxC,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,uBAAuB,GAAG,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,GAAG,EAAE,EAAU,EAAE,EAAE;IACrF,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,EAAE,CAAC;QACpB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;IACvD,CAAC;IACD,MAAM,KAAK,GAAG,MAAM,aAAa,CAAC,yBAAyB,CAAC;QAC3D,KAAK;QACL,GAAG;QACH,SAAS,EAAE,IAAI;KACf,CAAC,CAAC,OAAO,EAAE,CAAC;IACb,OAAO;QACN,MAAM,EAAE,MAAM,aAAa,CAAC,yBAAyB,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE;QACxF,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACxC,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oCAAoC,GAAG,KAAK,EAAE,EAC1D,KAAK,EACL,GAAG,EACH,UAAU,EACV,OAAO,GAAG,EAAE,GAMZ,EAAE,EAAE;IACJ,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,EAAE,CAAC;QACpB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;IACvD,CAAC;IACD,MAAM,KAAK,GAAG,MAAM,qBAAqB,CAAC,+BAA+B,CAAC;QACzE,KAAK;QACL,GAAG;QACH,UAAU;QACV,SAAS,EAAE,IAAI;KACf,CAAC,CAAC,OAAO,EAAE,CAAC;IACb,OAAO;QACN,MAAM,EAAE,MAAM,qBAAqB,CAAC,+BAA+B,CAAC;YACnE,KAAK;YACL,GAAG;YACH,UAAU;YACV,OAAO;SACP,CAAC,CAAC,OAAO,EAAE;QACZ,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACxC,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { LivechatRooms, LivechatAgentActivity } from '@rocket.chat/models';\n\ntype Params = {\n\tstart: Date;\n\tend: Date;\n\toptions?: any;\n};\n\nexport const findAllAverageServiceTimeAsync = async ({ start, end, options = {} }: Params) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatRooms.findAllAverageServiceTimeByAgents({\n\t\tstart,\n\t\tend,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tagents: await LivechatRooms.findAllAverageServiceTimeByAgents({\n\t\t\tstart,\n\t\t\tend,\n\t\t\toptions,\n\t\t}).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nexport const findAllServiceTimeAsync = async ({ start, end, options = {} }: Params) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatRooms.findAllServiceTimeByAgent({\n\t\tstart,\n\t\tend,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tagents: await LivechatRooms.findAllServiceTimeByAgent({ start, end, options }).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nexport const findAvailableServiceTimeHistoryAsync = async ({\n\tstart,\n\tend,\n\tfullReport,\n\toptions = {},\n}: {\n\tstart: string;\n\tend: string;\n\tfullReport: boolean;\n\toptions: { sort?: Record<string, number>; offset?: number; count?: number };\n}) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatAgentActivity.findAvailableServiceTimeHistory({\n\t\tstart,\n\t\tend,\n\t\tfullReport,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tagents: await LivechatAgentActivity.findAvailableServiceTimeHistory({\n\t\t\tstart,\n\t\t\tend,\n\t\t\tfullReport,\n\t\t\toptions,\n\t\t}).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      findAllAverageServiceTimeAsync: () => findAllAverageServiceTimeAsync,\n      findAllServiceTimeAsync: () => findAllServiceTimeAsync,\n      findAvailableServiceTimeHistoryAsync: () => findAvailableServiceTimeHistoryAsync\n    });\n    let LivechatRooms, LivechatAgentActivity;\n    module.link(\"@rocket.chat/models\", {\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      },\n      LivechatAgentActivity(v) {\n        LivechatAgentActivity = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const findAllAverageServiceTimeAsync = async _ref => {\n      let {\n        start,\n        end,\n        options = {}\n      } = _ref;\n      if (!start || !end) {\n        throw new Error('\"start\" and \"end\" must be provided');\n      }\n      const total = await LivechatRooms.findAllAverageServiceTimeByAgents({\n        start,\n        end,\n        onlyCount: true\n      }).toArray();\n      return {\n        agents: await LivechatRooms.findAllAverageServiceTimeByAgents({\n          start,\n          end,\n          options\n        }).toArray(),\n        total: total.length ? total[0].total : 0\n      };\n    };\n    const findAllServiceTimeAsync = async _ref2 => {\n      let {\n        start,\n        end,\n        options = {}\n      } = _ref2;\n      if (!start || !end) {\n        throw new Error('\"start\" and \"end\" must be provided');\n      }\n      const total = await LivechatRooms.findAllServiceTimeByAgent({\n        start,\n        end,\n        onlyCount: true\n      }).toArray();\n      return {\n        agents: await LivechatRooms.findAllServiceTimeByAgent({\n          start,\n          end,\n          options\n        }).toArray(),\n        total: total.length ? total[0].total : 0\n      };\n    };\n    const findAvailableServiceTimeHistoryAsync = async _ref3 => {\n      let {\n        start,\n        end,\n        fullReport,\n        options = {}\n      } = _ref3;\n      if (!start || !end) {\n        throw new Error('\"start\" and \"end\" must be provided');\n      }\n      const total = await LivechatAgentActivity.findAvailableServiceTimeHistory({\n        start,\n        end,\n        fullReport,\n        onlyCount: true\n      }).toArray();\n      return {\n        agents: await LivechatAgentActivity.findAvailableServiceTimeHistory({\n          start,\n          end,\n          fullReport,\n          options\n        }).toArray(),\n        total: total.length ? total[0].total : 0\n      };\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","findAllAverageServiceTimeAsync","findAllServiceTimeAsync","findAvailableServiceTimeHistoryAsync","LivechatRooms","LivechatAgentActivity","link","v","__reifyWaitForDeps__","_ref","start","end","options","Error","total","findAllAverageServiceTimeByAgents","onlyCount","toArray","agents","length","_ref2","findAllServiceTimeByAgent","_ref3","fullReport","findAvailableServiceTimeHistory","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/lib/analytics/agents.ts"],"sourcesContent":["import { LivechatRooms, LivechatAgentActivity } from '@rocket.chat/models';\n\ntype Params = {\n\tstart: Date;\n\tend: Date;\n\toptions?: any;\n};\n\nexport const findAllAverageServiceTimeAsync = async ({ start, end, options = {} }: Params) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatRooms.findAllAverageServiceTimeByAgents({\n\t\tstart,\n\t\tend,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tagents: await LivechatRooms.findAllAverageServiceTimeByAgents({\n\t\t\tstart,\n\t\t\tend,\n\t\t\toptions,\n\t\t}).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nexport const findAllServiceTimeAsync = async ({ start, end, options = {} }: Params) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatRooms.findAllServiceTimeByAgent({\n\t\tstart,\n\t\tend,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tagents: await LivechatRooms.findAllServiceTimeByAgent({ start, end, options }).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nexport const findAvailableServiceTimeHistoryAsync = async ({\n\tstart,\n\tend,\n\tfullReport,\n\toptions = {},\n}: {\n\tstart: string;\n\tend: string;\n\tfullReport: boolean;\n\toptions: { sort?: Record<string, number>; offset?: number; count?: number };\n}) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatAgentActivity.findAvailableServiceTimeHistory({\n\t\tstart,\n\t\tend,\n\t\tfullReport,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tagents: await LivechatAgentActivity.findAvailableServiceTimeHistory({\n\t\t\tstart,\n\t\t\tend,\n\t\t\tfullReport,\n\t\t\toptions,\n\t\t}).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"520b63f671cbb85dd7cea380dbfd458d17a9b9b2"}
