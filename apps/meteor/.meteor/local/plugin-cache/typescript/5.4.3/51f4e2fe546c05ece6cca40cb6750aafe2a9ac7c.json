{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/publications/messages.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/publications/messages.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/publications/messages.ts","inputSourceMap":{"version":3,"file":"server/publications/messages.ts","sourceRoot":"","sources":["server/publications/messages.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC/C,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGvC,OAAO,EAAE,oBAAoB,EAAE,MAAM,wDAAwD,CAAC;AAe9F,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,UAAU,GAAG,IAAI,IAAI,EAAE,EAAE,UAAU,EAAE,SAAS,GAAG,KAAK,EAAE,KAAK,GAAG,EAAE,EAAE,OAAO,GAAG,KAAK,EAAE;QAC5H,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAEnB,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAE/B,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;gBAC5D,MAAM,EAAE,cAAc;aACtB,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,GAAG,EAAE,CAAC;YACV,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;QAC1F,CAAC;QAED,IAAI,CAAC,CAAC,MAAM,oBAAoB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC;YAChD,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,aAAa,EAAE;gBAC1D,MAAM,EAAE,cAAc;aACtB,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,OAAO,GAA0B;YACtC,IAAI,EAAE;gBACL,EAAE,EAAE,CAAC,CAAC;aACN;SACD,CAAC;QAEF,IAAI,UAAU,YAAY,IAAI,EAAE,CAAC;YAChC,OAAO;gBACN,OAAO,EAAE,MAAM,QAAQ,CAAC,cAAc,CAAC,GAAG,EAAE,UAAU,EAAE;oBACvD,IAAI,EAAE;wBACL,EAAE,EAAE,CAAC,CAAC;qBACN;iBACD,CAAC,CAAC,OAAO,EAAE;gBACZ,OAAO,EAAE,MAAM,QAAQ,CAAC,qBAAqB,CAAC,UAAU,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,OAAO,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE;aACnI,CAAC;QACH,CAAC;QAED,OAAO,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE;YAC5C,GAAG;YACH,MAAM,EAAE,UAAU;YAClB,MAAM,EAAE,UAAU;YAClB,SAAS;YACT,KAAK;YACL,OAAO;SACP,CAAC,CAAC;IACJ,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Messages } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport type { FindOptions } from 'mongodb';\n\nimport { canAccessRoomIdAsync } from '../../app/authorization/server/functions/canAccessRoom';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'messages/get': (\n\t\t\trid: IRoom['_id'],\n\t\t\toptions: { lastUpdate?: Date; latestDate?: Date; oldestDate?: Date; inclusive?: boolean; count?: number; unreads?: boolean },\n\t\t) => Promise<{\n\t\t\tupdated: IMessage[];\n\t\t\tdeleted: IMessage[];\n\t\t}>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'messages/get'(rid, { lastUpdate, latestDate = new Date(), oldestDate, inclusive = false, count = 20, unreads = false }) {\n\t\tcheck(rid, String);\n\n\t\tconst fromId = Meteor.userId();\n\n\t\tif (!fromId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'messages/get',\n\t\t\t});\n\t\t}\n\n\t\tif (!rid) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'messages/get' });\n\t\t}\n\n\t\tif (!(await canAccessRoomIdAsync(rid, fromId))) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'messages/get',\n\t\t\t});\n\t\t}\n\n\t\tconst options: FindOptions<IMessage> = {\n\t\t\tsort: {\n\t\t\t\tts: -1,\n\t\t\t},\n\t\t};\n\n\t\tif (lastUpdate instanceof Date) {\n\t\t\treturn {\n\t\t\t\tupdated: await Messages.findForUpdates(rid, lastUpdate, {\n\t\t\t\t\tsort: {\n\t\t\t\t\t\tts: -1,\n\t\t\t\t\t},\n\t\t\t\t}).toArray(),\n\t\t\t\tdeleted: await Messages.trashFindDeletedAfter(lastUpdate, { rid }, { ...options, projection: { _id: 1, _deletedAt: 1 } }).toArray(),\n\t\t\t};\n\t\t}\n\n\t\treturn Meteor.callAsync('getChannelHistory', {\n\t\t\trid,\n\t\t\tlatest: latestDate,\n\t\t\toldest: oldestDate,\n\t\t\tinclusive,\n\t\t\tcount,\n\t\t\tunreads,\n\t\t});\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/publications/messages.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/publications/messages.ts","inputSourceMap":{"version":3,"file":"server/publications/messages.ts","sourceRoot":"","sources":["server/publications/messages.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC/C,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGvC,OAAO,EAAE,oBAAoB,EAAE,MAAM,wDAAwD,CAAC;AAe9F,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,UAAU,GAAG,IAAI,IAAI,EAAE,EAAE,UAAU,EAAE,SAAS,GAAG,KAAK,EAAE,KAAK,GAAG,EAAE,EAAE,OAAO,GAAG,KAAK,EAAE;QAC5H,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAEnB,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAE/B,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;gBAC5D,MAAM,EAAE,cAAc;aACtB,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,GAAG,EAAE,CAAC;YACV,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;QAC1F,CAAC;QAED,IAAI,CAAC,CAAC,MAAM,oBAAoB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC;YAChD,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,aAAa,EAAE;gBAC1D,MAAM,EAAE,cAAc;aACtB,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,OAAO,GAA0B;YACtC,IAAI,EAAE;gBACL,EAAE,EAAE,CAAC,CAAC;aACN;SACD,CAAC;QAEF,IAAI,UAAU,YAAY,IAAI,EAAE,CAAC;YAChC,OAAO;gBACN,OAAO,EAAE,MAAM,QAAQ,CAAC,cAAc,CAAC,GAAG,EAAE,UAAU,EAAE;oBACvD,IAAI,EAAE;wBACL,EAAE,EAAE,CAAC,CAAC;qBACN;iBACD,CAAC,CAAC,OAAO,EAAE;gBACZ,OAAO,EAAE,MAAM,QAAQ,CAAC,qBAAqB,CAAC,UAAU,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,OAAO,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE;aACnI,CAAC;QACH,CAAC;QAED,OAAO,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE;YAC5C,GAAG;YACH,MAAM,EAAE,UAAU;YAClB,MAAM,EAAE,UAAU;YAClB,SAAS;YACT,KAAK;YACL,OAAO;SACP,CAAC,CAAC;IACJ,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Messages } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport type { FindOptions } from 'mongodb';\n\nimport { canAccessRoomIdAsync } from '../../app/authorization/server/functions/canAccessRoom';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'messages/get': (\n\t\t\trid: IRoom['_id'],\n\t\t\toptions: { lastUpdate?: Date; latestDate?: Date; oldestDate?: Date; inclusive?: boolean; count?: number; unreads?: boolean },\n\t\t) => Promise<{\n\t\t\tupdated: IMessage[];\n\t\t\tdeleted: IMessage[];\n\t\t}>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'messages/get'(rid, { lastUpdate, latestDate = new Date(), oldestDate, inclusive = false, count = 20, unreads = false }) {\n\t\tcheck(rid, String);\n\n\t\tconst fromId = Meteor.userId();\n\n\t\tif (!fromId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'messages/get',\n\t\t\t});\n\t\t}\n\n\t\tif (!rid) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'messages/get' });\n\t\t}\n\n\t\tif (!(await canAccessRoomIdAsync(rid, fromId))) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'messages/get',\n\t\t\t});\n\t\t}\n\n\t\tconst options: FindOptions<IMessage> = {\n\t\t\tsort: {\n\t\t\t\tts: -1,\n\t\t\t},\n\t\t};\n\n\t\tif (lastUpdate instanceof Date) {\n\t\t\treturn {\n\t\t\t\tupdated: await Messages.findForUpdates(rid, lastUpdate, {\n\t\t\t\t\tsort: {\n\t\t\t\t\t\tts: -1,\n\t\t\t\t\t},\n\t\t\t\t}).toArray(),\n\t\t\t\tdeleted: await Messages.trashFindDeletedAfter(lastUpdate, { rid }, { ...options, projection: { _id: 1, _deletedAt: 1 } }).toArray(),\n\t\t\t};\n\t\t}\n\n\t\treturn Meteor.callAsync('getChannelHistory', {\n\t\t\trid,\n\t\t\tlatest: latestDate,\n\t\t\toldest: oldestDate,\n\t\t\tinclusive,\n\t\t\tcount,\n\t\t\tunreads,\n\t\t});\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let Messages;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      }\n    }, 0);\n    let check;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let canAccessRoomIdAsync;\n    module.link(\"../../app/authorization/server/functions/canAccessRoom\", {\n      canAccessRoomIdAsync(v) {\n        canAccessRoomIdAsync = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async 'messages/get'(rid, _ref) {\n        let {\n          lastUpdate,\n          latestDate = new Date(),\n          oldestDate,\n          inclusive = false,\n          count = 20,\n          unreads = false\n        } = _ref;\n        check(rid, String);\n        const fromId = Meteor.userId();\n        if (!fromId) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'messages/get'\n          });\n        }\n        if (!rid) {\n          throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n            method: 'messages/get'\n          });\n        }\n        if (!(await canAccessRoomIdAsync(rid, fromId))) {\n          throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n            method: 'messages/get'\n          });\n        }\n        const options = {\n          sort: {\n            ts: -1\n          }\n        };\n        if (lastUpdate instanceof Date) {\n          return {\n            updated: await Messages.findForUpdates(rid, lastUpdate, {\n              sort: {\n                ts: -1\n              }\n            }).toArray(),\n            deleted: await Messages.trashFindDeletedAfter(lastUpdate, {\n              rid\n            }, _objectSpread(_objectSpread({}, options), {}, {\n              projection: {\n                _id: 1,\n                _deletedAt: 1\n              }\n            })).toArray()\n          };\n        }\n        return Meteor.callAsync('getChannelHistory', {\n          rid,\n          latest: latestDate,\n          oldest: oldestDate,\n          inclusive,\n          count,\n          unreads\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","Messages","check","Meteor","canAccessRoomIdAsync","__reifyWaitForDeps__","methods","messages/get","rid","_ref","lastUpdate","latestDate","Date","oldestDate","inclusive","count","unreads","String","fromId","userId","Error","method","options","sort","ts","updated","findForUpdates","toArray","deleted","trashFindDeletedAfter","projection","_id","_deletedAt","callAsync","latest","oldest","__reify_async_result__","_reifyError","self","async"],"sources":["server/publications/messages.ts"],"sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Messages } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport type { FindOptions } from 'mongodb';\n\nimport { canAccessRoomIdAsync } from '../../app/authorization/server/functions/canAccessRoom';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'messages/get': (\n\t\t\trid: IRoom['_id'],\n\t\t\toptions: { lastUpdate?: Date; latestDate?: Date; oldestDate?: Date; inclusive?: boolean; count?: number; unreads?: boolean },\n\t\t) => Promise<{\n\t\t\tupdated: IMessage[];\n\t\t\tdeleted: IMessage[];\n\t\t}>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'messages/get'(rid, { lastUpdate, latestDate = new Date(), oldestDate, inclusive = false, count = 20, unreads = false }) {\n\t\tcheck(rid, String);\n\n\t\tconst fromId = Meteor.userId();\n\n\t\tif (!fromId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'messages/get',\n\t\t\t});\n\t\t}\n\n\t\tif (!rid) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'messages/get' });\n\t\t}\n\n\t\tif (!(await canAccessRoomIdAsync(rid, fromId))) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'messages/get',\n\t\t\t});\n\t\t}\n\n\t\tconst options: FindOptions<IMessage> = {\n\t\t\tsort: {\n\t\t\t\tts: -1,\n\t\t\t},\n\t\t};\n\n\t\tif (lastUpdate instanceof Date) {\n\t\t\treturn {\n\t\t\t\tupdated: await Messages.findForUpdates(rid, lastUpdate, {\n\t\t\t\t\tsort: {\n\t\t\t\t\t\tts: -1,\n\t\t\t\t\t},\n\t\t\t\t}).toArray(),\n\t\t\t\tdeleted: await Messages.trashFindDeletedAfter(lastUpdate, { rid }, { ...options, projection: { _id: 1, _deletedAt: 1 } }).toArray(),\n\t\t\t};\n\t\t}\n\n\t\treturn Meteor.callAsync('getChannelHistory', {\n\t\t\trid,\n\t\t\tlatest: latestDate,\n\t\t\toldest: oldestDate,\n\t\t\tinclusive,\n\t\t\tcount,\n\t\t\tunreads,\n\t\t});\n\t},\n});\n"],"mappings":";;;IAEA,IAAAA,aAAiB;IAAAC,MAAE,CAAMC,IAAA,uCAAsB;MAAAC,QAAAC,CAAA;QAAAJ,aAAA,GAAAI,CAAA;MAAA;IAAA;IAA/C,IAAAC,QAAS;IAAAJ,MAAU,CAAAC,IAAA,CAAM,qBAAqB,EAAC;MAAAG,SAAAD,CAAA;QAAAC,QAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,KAAA;IAAAL,MAAA,CAAAC,IAAA;MAAAI,MAAAF,CAAA;QAAAE,KAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,MAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,OAAAH,CAAA;QAAAG,MAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,oBAAA;IAAAP,MAAA,CAAAC,IAAA;MAAAM,qBAAAJ,CAAA;QAAAI,oBAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,oBAAA,WAAAA,oBAAA;IAoB/CF,MAAM,CAACG,OAAO,CAAgB;MAC7B,MAAM,cAAcC,CAACC,GAAG,EAAAC,IAAA,EAAqG;QAAA,IAAnG;UAAEC,UAAU;UAAEC,UAAU,GAAG,IAAIC,IAAI,EAAE;UAAEC,UAAU;UAAEC,SAAS,GAAG,KAAK;UAAEC,KAAK,GAAG,EAAE;UAAEC,OAAO,GAAG;QAAK,CAAE,GAAAP,IAAA;QAC5HP,KAAK,CAACM,GAAG,EAAES,MAAM,CAAC;QAElB,MAAMC,MAAM,GAAGf,MAAM,CAACgB,MAAM,EAAE;QAE9B,IAAI,CAACD,MAAM,EAAE;UACZ,MAAM,IAAIf,MAAM,CAACiB,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;YAC5DC,MAAM,EAAE;WACR,CAAC;QACH;QAEA,IAAI,CAACb,GAAG,EAAE;UACT,MAAM,IAAIL,MAAM,CAACiB,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;YAAEC,MAAM,EAAE;UAAc,CAAE,CAAC;QACzF;QAEA,IAAI,EAAE,MAAMjB,oBAAoB,CAACI,GAAG,EAAEU,MAAM,CAAC,CAAC,EAAE;UAC/C,MAAM,IAAIf,MAAM,CAACiB,KAAK,CAAC,mBAAmB,EAAE,aAAa,EAAE;YAC1DC,MAAM,EAAE;WACR,CAAC;QACH;QAEA,MAAMC,OAAO,GAA0B;UACtCC,IAAI,EAAE;YACLC,EAAE,EAAE,CAAC;;SAEN;QAED,IAAId,UAAU,YAAYE,IAAI,EAAE;UAC/B,OAAO;YACNa,OAAO,EAAE,MAAMxB,QAAQ,CAACyB,cAAc,CAAClB,GAAG,EAAEE,UAAU,EAAE;cACvDa,IAAI,EAAE;gBACLC,EAAE,EAAE,CAAC;;aAEN,CAAC,CAACG,OAAO,EAAE;YACZC,OAAO,EAAE,MAAM3B,QAAQ,CAAC4B,qBAAqB,CAACnB,UAAU,EAAE;cAAEF;YAAG,CAAE,EAAAZ,aAAA,CAAAA,aAAA,KAAO0B,OAAO;cAAEQ,UAAU,EAAE;gBAAEC,GAAG,EAAE,CAAC;gBAAEC,UAAU,EAAE;cAAC;YAAE,EAAE,CAAC,CAACL,OAAO;WACjI;QACF;QAEA,OAAOxB,MAAM,CAAC8B,SAAS,CAAC,mBAAmB,EAAE;UAC5CzB,GAAG;UACH0B,MAAM,EAAEvB,UAAU;UAClBwB,MAAM,EAAEtB,UAAU;UAClBC,SAAS;UACTC,KAAK;UACLC;SACA,CAAC;MACH;KACA,CAAC;IAACoB,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"51f4e2fe546c05ece6cca40cb6750aafe2a9ac7c"}
