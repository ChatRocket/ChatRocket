{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/chats/data.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/chats/data.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/chats/data.ts","inputSourceMap":{"version":3,"file":"client/lib/chats/data.ts","sourceRoot":"","sources":["client/lib/chats/data.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IEditedMessage, IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport moment from 'moment';\n\nimport type { DataAPI } from './ChatAPI';\nimport { hasAtLeastOnePermission, hasPermission } from '../../../app/authorization/client';\nimport { Messages, ChatRoom, ChatSubscription } from '../../../app/models/client';\nimport { settings } from '../../../app/settings/client';\nimport { MessageTypes } from '../../../app/ui-utils/client';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\nimport { prependReplies } from '../utils/prependReplies';\n\nexport const createDataAPI = ({ rid, tmid }: { rid: IRoom['_id']; tmid: IMessage['_id'] | undefined }): DataAPI => {\n\tconst composeMessage = async (\n\t\ttext: string,\n\t\t{ sendToChannel, quotedMessages, originalMessage }: { sendToChannel?: boolean; quotedMessages: IMessage[]; originalMessage?: IMessage },\n\t): Promise<IMessage> => {\n\t\tconst msg = await prependReplies(text, quotedMessages);\n\n\t\tconst effectiveRID = originalMessage?.rid ?? rid;\n\t\tconst effectiveTMID = originalMessage ? originalMessage.tmid : tmid;\n\n\t\treturn {\n\t\t\t_id: originalMessage?._id ?? Random.id(),\n\t\t\trid: effectiveRID,\n\t\t\t...(effectiveTMID && {\n\t\t\t\ttmid: effectiveTMID,\n\t\t\t\t...(sendToChannel && { tshow: sendToChannel }),\n\t\t\t}),\n\t\t\tmsg,\n\t\t} as IMessage;\n\t};\n\n\tconst findMessageByID = async (mid: IMessage['_id']): Promise<IMessage | null> =>\n\t\tMessages.findOne({ _id: mid, _hidden: { $ne: true } }, { reactive: false }) ?? sdk.call('getSingleMessage', mid);\n\n\tconst getMessageByID = async (mid: IMessage['_id']): Promise<IMessage> => {\n\t\tconst message = await findMessageByID(mid);\n\n\t\tif (!message) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn message;\n\t};\n\n\tconst findLastMessage = async (): Promise<IMessage | undefined> =>\n\t\tMessages.findOne({ rid, tmid: tmid ?? { $exists: false }, _hidden: { $ne: true } }, { sort: { ts: -1 }, reactive: false });\n\n\tconst getLastMessage = async (): Promise<IMessage> => {\n\t\tconst message = await findLastMessage();\n\n\t\tif (!message) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn message;\n\t};\n\n\tconst findLastOwnMessage = async (): Promise<IMessage | undefined> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn Messages.findOne(\n\t\t\t{ rid, 'tmid': tmid ?? { $exists: false }, 'u._id': uid, '_hidden': { $ne: true } },\n\t\t\t{ sort: { ts: -1 }, reactive: false },\n\t\t);\n\t};\n\n\tconst getLastOwnMessage = async (): Promise<IMessage> => {\n\t\tconst message = await findLastOwnMessage();\n\n\t\tif (!message) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn message;\n\t};\n\n\tconst canUpdateMessage = async (message: IMessage): Promise<boolean> => {\n\t\tif (MessageTypes.isSystemMessage(message)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst canEditMessage = hasAtLeastOnePermission('edit-message', message.rid);\n\t\tconst editAllowed = (settings.get('Message_AllowEditing') as boolean | undefined) ?? false;\n\t\tconst editOwn = message?.u && message.u._id === Meteor.userId();\n\n\t\tif (!canEditMessage && (!editAllowed || !editOwn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst blockEditInMinutes = settings.get('Message_AllowEditing_BlockEditInMinutes') as number | undefined;\n\t\tconst bypassBlockTimeLimit = hasPermission('bypass-time-limit-edit-and-delete', message.rid);\n\n\t\tconst elapsedMinutes = moment().diff(message.ts, 'minutes');\n\t\tif (!bypassBlockTimeLimit && elapsedMinutes && blockEditInMinutes && elapsedMinutes > blockEditInMinutes) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst findPreviousOwnMessage = async (message: IMessage): Promise<IMessage | undefined> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst msg = Messages.findOne(\n\t\t\t{ rid, 'tmid': tmid ?? { $exists: false }, 'u._id': uid, '_hidden': { $ne: true }, 'ts': { $lt: message.ts } },\n\t\t\t{ sort: { ts: -1 }, reactive: false },\n\t\t);\n\n\t\tif (!msg) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (await canUpdateMessage(msg)) {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn findPreviousOwnMessage(msg);\n\t};\n\n\tconst getPreviousOwnMessage = async (message: IMessage): Promise<IMessage> => {\n\t\tconst previousMessage = await findPreviousOwnMessage(message);\n\n\t\tif (!previousMessage) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn previousMessage;\n\t};\n\n\tconst findNextOwnMessage = async (message: IMessage): Promise<IMessage | undefined> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst msg = Messages.findOne(\n\t\t\t{ rid, 'tmid': tmid ?? { $exists: false }, 'u._id': uid, '_hidden': { $ne: true }, 'ts': { $gt: message.ts } },\n\t\t\t{ sort: { ts: 1 }, reactive: false },\n\t\t);\n\n\t\tif (!msg) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (await canUpdateMessage(msg)) {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn findNextOwnMessage(msg);\n\t};\n\n\tconst getNextOwnMessage = async (message: IMessage): Promise<IMessage> => {\n\t\tconst nextMessage = await findNextOwnMessage(message);\n\n\t\tif (!nextMessage) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn nextMessage;\n\t};\n\n\tconst pushEphemeralMessage = async (message: Omit<IMessage, 'rid' | 'tmid'>): Promise<void> => {\n\t\tMessages.upsert({ _id: message._id }, { $set: { ...message, rid, ...(tmid && { tmid }) } });\n\t};\n\n\tconst updateMessage = async (message: IEditedMessage, previewUrls?: string[]): Promise<void> =>\n\t\tsdk.call('updateMessage', message, previewUrls);\n\n\tconst canDeleteMessage = async (message: IMessage): Promise<boolean> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (MessageTypes.isSystemMessage(message)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst forceDeleteAllowed = hasPermission('force-delete-message', message.rid);\n\t\tif (forceDeleteAllowed) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst deletionEnabled = settings.get('Message_AllowDeleting') as boolean | undefined;\n\t\tif (!deletionEnabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst deleteAnyAllowed = hasPermission('delete-message', rid);\n\t\tconst deleteOwnAllowed = hasPermission('delete-own-message');\n\t\tconst deleteAllowed = deleteAnyAllowed || (deleteOwnAllowed && message?.u && message.u._id === Meteor.userId());\n\n\t\tif (!deleteAllowed) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst blockDeleteInMinutes = settings.get('Message_AllowDeleting_BlockDeleteInMinutes') as number | undefined;\n\t\tconst bypassBlockTimeLimit = hasPermission('bypass-time-limit-edit-and-delete', message.rid);\n\t\tconst elapsedMinutes = moment().diff(message.ts, 'minutes');\n\t\tconst onTimeForDelete = bypassBlockTimeLimit || !blockDeleteInMinutes || !elapsedMinutes || elapsedMinutes <= blockDeleteInMinutes;\n\n\t\treturn deleteAllowed && onTimeForDelete;\n\t};\n\n\tconst deleteMessage = async (msgIdOrMsg: IMessage | IMessage['_id']): Promise<void> => {\n\t\tlet msgId: string;\n\t\tlet roomId: string;\n\t\tif (typeof msgIdOrMsg === 'string') {\n\t\t\tmsgId = msgIdOrMsg;\n\t\t\tconst msg = await findMessageByID(msgId);\n\t\t\tif (!msg) {\n\t\t\t\tthrow new Error('Message not found');\n\t\t\t}\n\t\t\troomId = msg.rid;\n\t\t} else {\n\t\t\tmsgId = msgIdOrMsg._id;\n\t\t\troomId = msgIdOrMsg.rid;\n\t\t}\n\n\t\tawait sdk.rest.post('/v1/chat.delete', { msgId, roomId });\n\t};\n\n\tconst drafts = new Map<IMessage['_id'] | undefined, string>();\n\n\tconst getDraft = async (mid: IMessage['_id'] | undefined): Promise<string | undefined> => drafts.get(mid);\n\n\tconst discardDraft = async (mid: IMessage['_id'] | undefined): Promise<void> => {\n\t\tdrafts.delete(mid);\n\t};\n\n\tconst saveDraft = async (mid: IMessage['_id'] | undefined, draft: string): Promise<void> => {\n\t\tdrafts.set(mid, draft);\n\t};\n\n\tconst findRoom = async (): Promise<IRoom | undefined> => ChatRoom.findOne({ _id: rid }, { reactive: false });\n\n\tconst getRoom = async (): Promise<IRoom> => {\n\t\tconst room = await findRoom();\n\n\t\tif (!room) {\n\t\t\tthrow new Error('Room not found');\n\t\t}\n\n\t\treturn room;\n\t};\n\n\tconst isSubscribedToRoom = async (): Promise<boolean> => !!ChatSubscription.findOne({ rid }, { reactive: false });\n\n\tconst joinRoom = async (): Promise<void> => {\n\t\tawait sdk.call('joinRoom', rid);\n\t};\n\n\tconst findDiscussionByID = async (drid: IRoom['_id']): Promise<IRoom | undefined> =>\n\t\tChatRoom.findOne({ _id: drid, prid: { $exists: true } }, { reactive: false });\n\n\tconst getDiscussionByID = async (drid: IRoom['_id']): Promise<IRoom> => {\n\t\tconst discussion = await findDiscussionByID(drid);\n\n\t\tif (!discussion) {\n\t\t\tthrow new Error('Discussion not found');\n\t\t}\n\n\t\treturn discussion;\n\t};\n\n\tconst createStrictGetter = <TFind extends (...args: any[]) => Promise<any>>(\n\t\tfind: TFind,\n\t\terrorMessage: string,\n\t): ((...args: Parameters<TFind>) => Promise<Exclude<Awaited<ReturnType<TFind>>, undefined>>) => {\n\t\treturn async (...args) => {\n\t\t\tconst result = await find(...args);\n\n\t\t\tif (!result) {\n\t\t\t\tthrow new Error(errorMessage);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t};\n\n\tconst findSubscription = async (): Promise<ISubscription | undefined> => {\n\t\treturn ChatSubscription.findOne({ rid }, { reactive: false });\n\t};\n\n\tconst getSubscription = createStrictGetter(findSubscription, 'Subscription not found');\n\n\tconst findSubscriptionFromMessage = async (message: IMessage): Promise<ISubscription | undefined> => {\n\t\treturn ChatSubscription.findOne({ rid: message.rid }, { reactive: false });\n\t};\n\n\tconst getSubscriptionFromMessage = createStrictGetter(findSubscriptionFromMessage, 'Subscription not found');\n\n\treturn {\n\t\tcomposeMessage,\n\t\tfindMessageByID,\n\t\tgetMessageByID,\n\t\tfindLastMessage,\n\t\tgetLastMessage,\n\t\tfindLastOwnMessage,\n\t\tgetLastOwnMessage,\n\t\tfindPreviousOwnMessage,\n\t\tgetPreviousOwnMessage,\n\t\tfindNextOwnMessage,\n\t\tgetNextOwnMessage,\n\t\tpushEphemeralMessage,\n\t\tcanUpdateMessage,\n\t\tupdateMessage,\n\t\tcanDeleteMessage,\n\t\tdeleteMessage,\n\t\tgetDraft,\n\t\tsaveDraft,\n\t\tdiscardDraft,\n\t\tfindRoom,\n\t\tgetRoom,\n\t\tisSubscribedToRoom,\n\t\tjoinRoom,\n\t\tfindDiscussionByID,\n\t\tgetDiscussionByID,\n\t\tfindSubscription,\n\t\tgetSubscription,\n\t\tfindSubscriptionFromMessage,\n\t\tgetSubscriptionFromMessage,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/chats/data.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/chats/data.ts","inputSourceMap":{"version":3,"file":"client/lib/chats/data.ts","sourceRoot":"","sources":["client/lib/chats/data.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IEditedMessage, IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport moment from 'moment';\n\nimport type { DataAPI } from './ChatAPI';\nimport { hasAtLeastOnePermission, hasPermission } from '../../../app/authorization/client';\nimport { Messages, ChatRoom, ChatSubscription } from '../../../app/models/client';\nimport { settings } from '../../../app/settings/client';\nimport { MessageTypes } from '../../../app/ui-utils/client';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\nimport { prependReplies } from '../utils/prependReplies';\n\nexport const createDataAPI = ({ rid, tmid }: { rid: IRoom['_id']; tmid: IMessage['_id'] | undefined }): DataAPI => {\n\tconst composeMessage = async (\n\t\ttext: string,\n\t\t{ sendToChannel, quotedMessages, originalMessage }: { sendToChannel?: boolean; quotedMessages: IMessage[]; originalMessage?: IMessage },\n\t): Promise<IMessage> => {\n\t\tconst msg = await prependReplies(text, quotedMessages);\n\n\t\tconst effectiveRID = originalMessage?.rid ?? rid;\n\t\tconst effectiveTMID = originalMessage ? originalMessage.tmid : tmid;\n\n\t\treturn {\n\t\t\t_id: originalMessage?._id ?? Random.id(),\n\t\t\trid: effectiveRID,\n\t\t\t...(effectiveTMID && {\n\t\t\t\ttmid: effectiveTMID,\n\t\t\t\t...(sendToChannel && { tshow: sendToChannel }),\n\t\t\t}),\n\t\t\tmsg,\n\t\t} as IMessage;\n\t};\n\n\tconst findMessageByID = async (mid: IMessage['_id']): Promise<IMessage | null> =>\n\t\tMessages.findOne({ _id: mid, _hidden: { $ne: true } }, { reactive: false }) ?? sdk.call('getSingleMessage', mid);\n\n\tconst getMessageByID = async (mid: IMessage['_id']): Promise<IMessage> => {\n\t\tconst message = await findMessageByID(mid);\n\n\t\tif (!message) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn message;\n\t};\n\n\tconst findLastMessage = async (): Promise<IMessage | undefined> =>\n\t\tMessages.findOne({ rid, tmid: tmid ?? { $exists: false }, _hidden: { $ne: true } }, { sort: { ts: -1 }, reactive: false });\n\n\tconst getLastMessage = async (): Promise<IMessage> => {\n\t\tconst message = await findLastMessage();\n\n\t\tif (!message) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn message;\n\t};\n\n\tconst findLastOwnMessage = async (): Promise<IMessage | undefined> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn Messages.findOne(\n\t\t\t{ rid, 'tmid': tmid ?? { $exists: false }, 'u._id': uid, '_hidden': { $ne: true } },\n\t\t\t{ sort: { ts: -1 }, reactive: false },\n\t\t);\n\t};\n\n\tconst getLastOwnMessage = async (): Promise<IMessage> => {\n\t\tconst message = await findLastOwnMessage();\n\n\t\tif (!message) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn message;\n\t};\n\n\tconst canUpdateMessage = async (message: IMessage): Promise<boolean> => {\n\t\tif (MessageTypes.isSystemMessage(message)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst canEditMessage = hasAtLeastOnePermission('edit-message', message.rid);\n\t\tconst editAllowed = (settings.get('Message_AllowEditing') as boolean | undefined) ?? false;\n\t\tconst editOwn = message?.u && message.u._id === Meteor.userId();\n\n\t\tif (!canEditMessage && (!editAllowed || !editOwn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst blockEditInMinutes = settings.get('Message_AllowEditing_BlockEditInMinutes') as number | undefined;\n\t\tconst bypassBlockTimeLimit = hasPermission('bypass-time-limit-edit-and-delete', message.rid);\n\n\t\tconst elapsedMinutes = moment().diff(message.ts, 'minutes');\n\t\tif (!bypassBlockTimeLimit && elapsedMinutes && blockEditInMinutes && elapsedMinutes > blockEditInMinutes) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst findPreviousOwnMessage = async (message: IMessage): Promise<IMessage | undefined> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst msg = Messages.findOne(\n\t\t\t{ rid, 'tmid': tmid ?? { $exists: false }, 'u._id': uid, '_hidden': { $ne: true }, 'ts': { $lt: message.ts } },\n\t\t\t{ sort: { ts: -1 }, reactive: false },\n\t\t);\n\n\t\tif (!msg) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (await canUpdateMessage(msg)) {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn findPreviousOwnMessage(msg);\n\t};\n\n\tconst getPreviousOwnMessage = async (message: IMessage): Promise<IMessage> => {\n\t\tconst previousMessage = await findPreviousOwnMessage(message);\n\n\t\tif (!previousMessage) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn previousMessage;\n\t};\n\n\tconst findNextOwnMessage = async (message: IMessage): Promise<IMessage | undefined> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst msg = Messages.findOne(\n\t\t\t{ rid, 'tmid': tmid ?? { $exists: false }, 'u._id': uid, '_hidden': { $ne: true }, 'ts': { $gt: message.ts } },\n\t\t\t{ sort: { ts: 1 }, reactive: false },\n\t\t);\n\n\t\tif (!msg) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (await canUpdateMessage(msg)) {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn findNextOwnMessage(msg);\n\t};\n\n\tconst getNextOwnMessage = async (message: IMessage): Promise<IMessage> => {\n\t\tconst nextMessage = await findNextOwnMessage(message);\n\n\t\tif (!nextMessage) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn nextMessage;\n\t};\n\n\tconst pushEphemeralMessage = async (message: Omit<IMessage, 'rid' | 'tmid'>): Promise<void> => {\n\t\tMessages.upsert({ _id: message._id }, { $set: { ...message, rid, ...(tmid && { tmid }) } });\n\t};\n\n\tconst updateMessage = async (message: IEditedMessage, previewUrls?: string[]): Promise<void> =>\n\t\tsdk.call('updateMessage', message, previewUrls);\n\n\tconst canDeleteMessage = async (message: IMessage): Promise<boolean> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (MessageTypes.isSystemMessage(message)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst forceDeleteAllowed = hasPermission('force-delete-message', message.rid);\n\t\tif (forceDeleteAllowed) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst deletionEnabled = settings.get('Message_AllowDeleting') as boolean | undefined;\n\t\tif (!deletionEnabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst deleteAnyAllowed = hasPermission('delete-message', rid);\n\t\tconst deleteOwnAllowed = hasPermission('delete-own-message');\n\t\tconst deleteAllowed = deleteAnyAllowed || (deleteOwnAllowed && message?.u && message.u._id === Meteor.userId());\n\n\t\tif (!deleteAllowed) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst blockDeleteInMinutes = settings.get('Message_AllowDeleting_BlockDeleteInMinutes') as number | undefined;\n\t\tconst bypassBlockTimeLimit = hasPermission('bypass-time-limit-edit-and-delete', message.rid);\n\t\tconst elapsedMinutes = moment().diff(message.ts, 'minutes');\n\t\tconst onTimeForDelete = bypassBlockTimeLimit || !blockDeleteInMinutes || !elapsedMinutes || elapsedMinutes <= blockDeleteInMinutes;\n\n\t\treturn deleteAllowed && onTimeForDelete;\n\t};\n\n\tconst deleteMessage = async (msgIdOrMsg: IMessage | IMessage['_id']): Promise<void> => {\n\t\tlet msgId: string;\n\t\tlet roomId: string;\n\t\tif (typeof msgIdOrMsg === 'string') {\n\t\t\tmsgId = msgIdOrMsg;\n\t\t\tconst msg = await findMessageByID(msgId);\n\t\t\tif (!msg) {\n\t\t\t\tthrow new Error('Message not found');\n\t\t\t}\n\t\t\troomId = msg.rid;\n\t\t} else {\n\t\t\tmsgId = msgIdOrMsg._id;\n\t\t\troomId = msgIdOrMsg.rid;\n\t\t}\n\n\t\tawait sdk.rest.post('/v1/chat.delete', { msgId, roomId });\n\t};\n\n\tconst drafts = new Map<IMessage['_id'] | undefined, string>();\n\n\tconst getDraft = async (mid: IMessage['_id'] | undefined): Promise<string | undefined> => drafts.get(mid);\n\n\tconst discardDraft = async (mid: IMessage['_id'] | undefined): Promise<void> => {\n\t\tdrafts.delete(mid);\n\t};\n\n\tconst saveDraft = async (mid: IMessage['_id'] | undefined, draft: string): Promise<void> => {\n\t\tdrafts.set(mid, draft);\n\t};\n\n\tconst findRoom = async (): Promise<IRoom | undefined> => ChatRoom.findOne({ _id: rid }, { reactive: false });\n\n\tconst getRoom = async (): Promise<IRoom> => {\n\t\tconst room = await findRoom();\n\n\t\tif (!room) {\n\t\t\tthrow new Error('Room not found');\n\t\t}\n\n\t\treturn room;\n\t};\n\n\tconst isSubscribedToRoom = async (): Promise<boolean> => !!ChatSubscription.findOne({ rid }, { reactive: false });\n\n\tconst joinRoom = async (): Promise<void> => {\n\t\tawait sdk.call('joinRoom', rid);\n\t};\n\n\tconst findDiscussionByID = async (drid: IRoom['_id']): Promise<IRoom | undefined> =>\n\t\tChatRoom.findOne({ _id: drid, prid: { $exists: true } }, { reactive: false });\n\n\tconst getDiscussionByID = async (drid: IRoom['_id']): Promise<IRoom> => {\n\t\tconst discussion = await findDiscussionByID(drid);\n\n\t\tif (!discussion) {\n\t\t\tthrow new Error('Discussion not found');\n\t\t}\n\n\t\treturn discussion;\n\t};\n\n\tconst createStrictGetter = <TFind extends (...args: any[]) => Promise<any>>(\n\t\tfind: TFind,\n\t\terrorMessage: string,\n\t): ((...args: Parameters<TFind>) => Promise<Exclude<Awaited<ReturnType<TFind>>, undefined>>) => {\n\t\treturn async (...args) => {\n\t\t\tconst result = await find(...args);\n\n\t\t\tif (!result) {\n\t\t\t\tthrow new Error(errorMessage);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t};\n\n\tconst findSubscription = async (): Promise<ISubscription | undefined> => {\n\t\treturn ChatSubscription.findOne({ rid }, { reactive: false });\n\t};\n\n\tconst getSubscription = createStrictGetter(findSubscription, 'Subscription not found');\n\n\tconst findSubscriptionFromMessage = async (message: IMessage): Promise<ISubscription | undefined> => {\n\t\treturn ChatSubscription.findOne({ rid: message.rid }, { reactive: false });\n\t};\n\n\tconst getSubscriptionFromMessage = createStrictGetter(findSubscriptionFromMessage, 'Subscription not found');\n\n\treturn {\n\t\tcomposeMessage,\n\t\tfindMessageByID,\n\t\tgetMessageByID,\n\t\tfindLastMessage,\n\t\tgetLastMessage,\n\t\tfindLastOwnMessage,\n\t\tgetLastOwnMessage,\n\t\tfindPreviousOwnMessage,\n\t\tgetPreviousOwnMessage,\n\t\tfindNextOwnMessage,\n\t\tgetNextOwnMessage,\n\t\tpushEphemeralMessage,\n\t\tcanUpdateMessage,\n\t\tupdateMessage,\n\t\tcanDeleteMessage,\n\t\tdeleteMessage,\n\t\tgetDraft,\n\t\tsaveDraft,\n\t\tdiscardDraft,\n\t\tfindRoom,\n\t\tgetRoom,\n\t\tisSubscribedToRoom,\n\t\tjoinRoom,\n\t\tfindDiscussionByID,\n\t\tgetDiscussionByID,\n\t\tfindSubscription,\n\t\tgetSubscription,\n\t\tfindSubscriptionFromMessage,\n\t\tgetSubscriptionFromMessage,\n\t};\n};\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  createDataAPI: () => createDataAPI\n});\nlet Random;\nmodule.link(\"@rocket.chat/random\", {\n  Random(v) {\n    Random = v;\n  }\n}, 0);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n}, 1);\nlet hasAtLeastOnePermission, hasPermission;\nmodule.link(\"../../../app/authorization/client\", {\n  hasAtLeastOnePermission(v) {\n    hasAtLeastOnePermission = v;\n  },\n  hasPermission(v) {\n    hasPermission = v;\n  }\n}, 2);\nlet Messages, ChatRoom, ChatSubscription;\nmodule.link(\"../../../app/models/client\", {\n  Messages(v) {\n    Messages = v;\n  },\n  ChatRoom(v) {\n    ChatRoom = v;\n  },\n  ChatSubscription(v) {\n    ChatSubscription = v;\n  }\n}, 3);\nlet settings;\nmodule.link(\"../../../app/settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n}, 4);\nlet MessageTypes;\nmodule.link(\"../../../app/ui-utils/client\", {\n  MessageTypes(v) {\n    MessageTypes = v;\n  }\n}, 5);\nlet sdk;\nmodule.link(\"../../../app/utils/client/lib/SDKClient\", {\n  sdk(v) {\n    sdk = v;\n  }\n}, 6);\nlet prependReplies;\nmodule.link(\"../utils/prependReplies\", {\n  prependReplies(v) {\n    prependReplies = v;\n  }\n}, 7);\nconst createDataAPI = _ref => {\n  let {\n    rid,\n    tmid\n  } = _ref;\n  const composeMessage = async (text, _ref2) => {\n    var _originalMessage$rid, _originalMessage$_id;\n    let {\n      sendToChannel,\n      quotedMessages,\n      originalMessage\n    } = _ref2;\n    const msg = await prependReplies(text, quotedMessages);\n    const effectiveRID = (_originalMessage$rid = originalMessage === null || originalMessage === void 0 ? void 0 : originalMessage.rid) !== null && _originalMessage$rid !== void 0 ? _originalMessage$rid : rid;\n    const effectiveTMID = originalMessage ? originalMessage.tmid : tmid;\n    return _objectSpread(_objectSpread({\n      _id: (_originalMessage$_id = originalMessage === null || originalMessage === void 0 ? void 0 : originalMessage._id) !== null && _originalMessage$_id !== void 0 ? _originalMessage$_id : Random.id(),\n      rid: effectiveRID\n    }, effectiveTMID && _objectSpread({\n      tmid: effectiveTMID\n    }, sendToChannel && {\n      tshow: sendToChannel\n    })), {}, {\n      msg\n    });\n  };\n  const findMessageByID = async mid => {\n    var _Messages$findOne;\n    return (_Messages$findOne = Messages.findOne({\n      _id: mid,\n      _hidden: {\n        $ne: true\n      }\n    }, {\n      reactive: false\n    })) !== null && _Messages$findOne !== void 0 ? _Messages$findOne : sdk.call('getSingleMessage', mid);\n  };\n  const getMessageByID = async mid => {\n    const message = await findMessageByID(mid);\n    if (!message) {\n      throw new Error('Message not found');\n    }\n    return message;\n  };\n  const findLastMessage = async () => Messages.findOne({\n    rid,\n    tmid: tmid !== null && tmid !== void 0 ? tmid : {\n      $exists: false\n    },\n    _hidden: {\n      $ne: true\n    }\n  }, {\n    sort: {\n      ts: -1\n    },\n    reactive: false\n  });\n  const getLastMessage = async () => {\n    const message = await findLastMessage();\n    if (!message) {\n      throw new Error('Message not found');\n    }\n    return message;\n  };\n  const findLastOwnMessage = async () => {\n    const uid = Meteor.userId();\n    if (!uid) {\n      return undefined;\n    }\n    return Messages.findOne({\n      rid,\n      'tmid': tmid !== null && tmid !== void 0 ? tmid : {\n        $exists: false\n      },\n      'u._id': uid,\n      '_hidden': {\n        $ne: true\n      }\n    }, {\n      sort: {\n        ts: -1\n      },\n      reactive: false\n    });\n  };\n  const getLastOwnMessage = async () => {\n    const message = await findLastOwnMessage();\n    if (!message) {\n      throw new Error('Message not found');\n    }\n    return message;\n  };\n  const canUpdateMessage = async message => {\n    var _settings$get;\n    if (MessageTypes.isSystemMessage(message)) {\n      return false;\n    }\n    const canEditMessage = hasAtLeastOnePermission('edit-message', message.rid);\n    const editAllowed = (_settings$get = settings.get('Message_AllowEditing')) !== null && _settings$get !== void 0 ? _settings$get : false;\n    const editOwn = (message === null || message === void 0 ? void 0 : message.u) && message.u._id === Meteor.userId();\n    if (!canEditMessage && (!editAllowed || !editOwn)) {\n      return false;\n    }\n    const blockEditInMinutes = settings.get('Message_AllowEditing_BlockEditInMinutes');\n    const bypassBlockTimeLimit = hasPermission('bypass-time-limit-edit-and-delete', message.rid);\n    const elapsedMinutes = moment().diff(message.ts, 'minutes');\n    if (!bypassBlockTimeLimit && elapsedMinutes && blockEditInMinutes && elapsedMinutes > blockEditInMinutes) {\n      return false;\n    }\n    return true;\n  };\n  const findPreviousOwnMessage = async message => {\n    const uid = Meteor.userId();\n    if (!uid) {\n      return undefined;\n    }\n    const msg = Messages.findOne({\n      rid,\n      'tmid': tmid !== null && tmid !== void 0 ? tmid : {\n        $exists: false\n      },\n      'u._id': uid,\n      '_hidden': {\n        $ne: true\n      },\n      'ts': {\n        $lt: message.ts\n      }\n    }, {\n      sort: {\n        ts: -1\n      },\n      reactive: false\n    });\n    if (!msg) {\n      return undefined;\n    }\n    if (await canUpdateMessage(msg)) {\n      return msg;\n    }\n    return findPreviousOwnMessage(msg);\n  };\n  const getPreviousOwnMessage = async message => {\n    const previousMessage = await findPreviousOwnMessage(message);\n    if (!previousMessage) {\n      throw new Error('Message not found');\n    }\n    return previousMessage;\n  };\n  const findNextOwnMessage = async message => {\n    const uid = Meteor.userId();\n    if (!uid) {\n      return undefined;\n    }\n    const msg = Messages.findOne({\n      rid,\n      'tmid': tmid !== null && tmid !== void 0 ? tmid : {\n        $exists: false\n      },\n      'u._id': uid,\n      '_hidden': {\n        $ne: true\n      },\n      'ts': {\n        $gt: message.ts\n      }\n    }, {\n      sort: {\n        ts: 1\n      },\n      reactive: false\n    });\n    if (!msg) {\n      return undefined;\n    }\n    if (await canUpdateMessage(msg)) {\n      return msg;\n    }\n    return findNextOwnMessage(msg);\n  };\n  const getNextOwnMessage = async message => {\n    const nextMessage = await findNextOwnMessage(message);\n    if (!nextMessage) {\n      throw new Error('Message not found');\n    }\n    return nextMessage;\n  };\n  const pushEphemeralMessage = async message => {\n    Messages.upsert({\n      _id: message._id\n    }, {\n      $set: _objectSpread(_objectSpread({}, message), {}, {\n        rid\n      }, tmid && {\n        tmid\n      })\n    });\n  };\n  const updateMessage = async (message, previewUrls) => sdk.call('updateMessage', message, previewUrls);\n  const canDeleteMessage = async message => {\n    const uid = Meteor.userId();\n    if (!uid) {\n      return false;\n    }\n    if (MessageTypes.isSystemMessage(message)) {\n      return false;\n    }\n    const forceDeleteAllowed = hasPermission('force-delete-message', message.rid);\n    if (forceDeleteAllowed) {\n      return true;\n    }\n    const deletionEnabled = settings.get('Message_AllowDeleting');\n    if (!deletionEnabled) {\n      return false;\n    }\n    const deleteAnyAllowed = hasPermission('delete-message', rid);\n    const deleteOwnAllowed = hasPermission('delete-own-message');\n    const deleteAllowed = deleteAnyAllowed || deleteOwnAllowed && (message === null || message === void 0 ? void 0 : message.u) && message.u._id === Meteor.userId();\n    if (!deleteAllowed) {\n      return false;\n    }\n    const blockDeleteInMinutes = settings.get('Message_AllowDeleting_BlockDeleteInMinutes');\n    const bypassBlockTimeLimit = hasPermission('bypass-time-limit-edit-and-delete', message.rid);\n    const elapsedMinutes = moment().diff(message.ts, 'minutes');\n    const onTimeForDelete = bypassBlockTimeLimit || !blockDeleteInMinutes || !elapsedMinutes || elapsedMinutes <= blockDeleteInMinutes;\n    return deleteAllowed && onTimeForDelete;\n  };\n  const deleteMessage = async msgIdOrMsg => {\n    let msgId;\n    let roomId;\n    if (typeof msgIdOrMsg === 'string') {\n      msgId = msgIdOrMsg;\n      const msg = await findMessageByID(msgId);\n      if (!msg) {\n        throw new Error('Message not found');\n      }\n      roomId = msg.rid;\n    } else {\n      msgId = msgIdOrMsg._id;\n      roomId = msgIdOrMsg.rid;\n    }\n    await sdk.rest.post('/v1/chat.delete', {\n      msgId,\n      roomId\n    });\n  };\n  const drafts = new Map();\n  const getDraft = async mid => drafts.get(mid);\n  const discardDraft = async mid => {\n    drafts.delete(mid);\n  };\n  const saveDraft = async (mid, draft) => {\n    drafts.set(mid, draft);\n  };\n  const findRoom = async () => ChatRoom.findOne({\n    _id: rid\n  }, {\n    reactive: false\n  });\n  const getRoom = async () => {\n    const room = await findRoom();\n    if (!room) {\n      throw new Error('Room not found');\n    }\n    return room;\n  };\n  const isSubscribedToRoom = async () => !!ChatSubscription.findOne({\n    rid\n  }, {\n    reactive: false\n  });\n  const joinRoom = async () => {\n    await sdk.call('joinRoom', rid);\n  };\n  const findDiscussionByID = async drid => ChatRoom.findOne({\n    _id: drid,\n    prid: {\n      $exists: true\n    }\n  }, {\n    reactive: false\n  });\n  const getDiscussionByID = async drid => {\n    const discussion = await findDiscussionByID(drid);\n    if (!discussion) {\n      throw new Error('Discussion not found');\n    }\n    return discussion;\n  };\n  const createStrictGetter = (find, errorMessage) => {\n    return async function () {\n      const result = await find(...arguments);\n      if (!result) {\n        throw new Error(errorMessage);\n      }\n      return result;\n    };\n  };\n  const findSubscription = async () => {\n    return ChatSubscription.findOne({\n      rid\n    }, {\n      reactive: false\n    });\n  };\n  const getSubscription = createStrictGetter(findSubscription, 'Subscription not found');\n  const findSubscriptionFromMessage = async message => {\n    return ChatSubscription.findOne({\n      rid: message.rid\n    }, {\n      reactive: false\n    });\n  };\n  const getSubscriptionFromMessage = createStrictGetter(findSubscriptionFromMessage, 'Subscription not found');\n  return {\n    composeMessage,\n    findMessageByID,\n    getMessageByID,\n    findLastMessage,\n    getLastMessage,\n    findLastOwnMessage,\n    getLastOwnMessage,\n    findPreviousOwnMessage,\n    getPreviousOwnMessage,\n    findNextOwnMessage,\n    getNextOwnMessage,\n    pushEphemeralMessage,\n    canUpdateMessage,\n    updateMessage,\n    canDeleteMessage,\n    deleteMessage,\n    getDraft,\n    saveDraft,\n    discardDraft,\n    findRoom,\n    getRoom,\n    isSubscribedToRoom,\n    joinRoom,\n    findDiscussionByID,\n    getDiscussionByID,\n    findSubscription,\n    getSubscription,\n    findSubscriptionFromMessage,\n    getSubscriptionFromMessage\n  };\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","createDataAPI","Random","moment","hasAtLeastOnePermission","hasPermission","Messages","ChatRoom","ChatSubscription","settings","MessageTypes","sdk","prependReplies","_ref","rid","tmid","composeMessage","text","_ref2","_originalMessage$rid","_originalMessage$_id","sendToChannel","quotedMessages","originalMessage","msg","effectiveRID","effectiveTMID","_id","id","tshow","findMessageByID","mid","_Messages$findOne","findOne","_hidden","$ne","reactive","call","getMessageByID","message","Error","findLastMessage","$exists","sort","ts","getLastMessage","findLastOwnMessage","uid","Meteor","userId","undefined","getLastOwnMessage","canUpdateMessage","_settings$get","isSystemMessage","canEditMessage","editAllowed","get","editOwn","u","blockEditInMinutes","bypassBlockTimeLimit","elapsedMinutes","diff","findPreviousOwnMessage","$lt","getPreviousOwnMessage","previousMessage","findNextOwnMessage","$gt","getNextOwnMessage","nextMessage","pushEphemeralMessage","upsert","$set","updateMessage","previewUrls","canDeleteMessage","forceDeleteAllowed","deletionEnabled","deleteAnyAllowed","deleteOwnAllowed","deleteAllowed","blockDeleteInMinutes","onTimeForDelete","deleteMessage","msgIdOrMsg","msgId","roomId","rest","post","drafts","Map","getDraft","discardDraft","delete","saveDraft","draft","set","findRoom","getRoom","room","isSubscribedToRoom","joinRoom","findDiscussionByID","drid","prid","getDiscussionByID","discussion","createStrictGetter","find","errorMessage","result","arguments","findSubscription","getSubscription","findSubscriptionFromMessage","getSubscriptionFromMessage"],"sources":["client/lib/chats/data.ts"],"sourcesContent":["import type { IEditedMessage, IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport moment from 'moment';\n\nimport type { DataAPI } from './ChatAPI';\nimport { hasAtLeastOnePermission, hasPermission } from '../../../app/authorization/client';\nimport { Messages, ChatRoom, ChatSubscription } from '../../../app/models/client';\nimport { settings } from '../../../app/settings/client';\nimport { MessageTypes } from '../../../app/ui-utils/client';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\nimport { prependReplies } from '../utils/prependReplies';\n\nexport const createDataAPI = ({ rid, tmid }: { rid: IRoom['_id']; tmid: IMessage['_id'] | undefined }): DataAPI => {\n\tconst composeMessage = async (\n\t\ttext: string,\n\t\t{ sendToChannel, quotedMessages, originalMessage }: { sendToChannel?: boolean; quotedMessages: IMessage[]; originalMessage?: IMessage },\n\t): Promise<IMessage> => {\n\t\tconst msg = await prependReplies(text, quotedMessages);\n\n\t\tconst effectiveRID = originalMessage?.rid ?? rid;\n\t\tconst effectiveTMID = originalMessage ? originalMessage.tmid : tmid;\n\n\t\treturn {\n\t\t\t_id: originalMessage?._id ?? Random.id(),\n\t\t\trid: effectiveRID,\n\t\t\t...(effectiveTMID && {\n\t\t\t\ttmid: effectiveTMID,\n\t\t\t\t...(sendToChannel && { tshow: sendToChannel }),\n\t\t\t}),\n\t\t\tmsg,\n\t\t} as IMessage;\n\t};\n\n\tconst findMessageByID = async (mid: IMessage['_id']): Promise<IMessage | null> =>\n\t\tMessages.findOne({ _id: mid, _hidden: { $ne: true } }, { reactive: false }) ?? sdk.call('getSingleMessage', mid);\n\n\tconst getMessageByID = async (mid: IMessage['_id']): Promise<IMessage> => {\n\t\tconst message = await findMessageByID(mid);\n\n\t\tif (!message) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn message;\n\t};\n\n\tconst findLastMessage = async (): Promise<IMessage | undefined> =>\n\t\tMessages.findOne({ rid, tmid: tmid ?? { $exists: false }, _hidden: { $ne: true } }, { sort: { ts: -1 }, reactive: false });\n\n\tconst getLastMessage = async (): Promise<IMessage> => {\n\t\tconst message = await findLastMessage();\n\n\t\tif (!message) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn message;\n\t};\n\n\tconst findLastOwnMessage = async (): Promise<IMessage | undefined> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn Messages.findOne(\n\t\t\t{ rid, 'tmid': tmid ?? { $exists: false }, 'u._id': uid, '_hidden': { $ne: true } },\n\t\t\t{ sort: { ts: -1 }, reactive: false },\n\t\t);\n\t};\n\n\tconst getLastOwnMessage = async (): Promise<IMessage> => {\n\t\tconst message = await findLastOwnMessage();\n\n\t\tif (!message) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn message;\n\t};\n\n\tconst canUpdateMessage = async (message: IMessage): Promise<boolean> => {\n\t\tif (MessageTypes.isSystemMessage(message)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst canEditMessage = hasAtLeastOnePermission('edit-message', message.rid);\n\t\tconst editAllowed = (settings.get('Message_AllowEditing') as boolean | undefined) ?? false;\n\t\tconst editOwn = message?.u && message.u._id === Meteor.userId();\n\n\t\tif (!canEditMessage && (!editAllowed || !editOwn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst blockEditInMinutes = settings.get('Message_AllowEditing_BlockEditInMinutes') as number | undefined;\n\t\tconst bypassBlockTimeLimit = hasPermission('bypass-time-limit-edit-and-delete', message.rid);\n\n\t\tconst elapsedMinutes = moment().diff(message.ts, 'minutes');\n\t\tif (!bypassBlockTimeLimit && elapsedMinutes && blockEditInMinutes && elapsedMinutes > blockEditInMinutes) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst findPreviousOwnMessage = async (message: IMessage): Promise<IMessage | undefined> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst msg = Messages.findOne(\n\t\t\t{ rid, 'tmid': tmid ?? { $exists: false }, 'u._id': uid, '_hidden': { $ne: true }, 'ts': { $lt: message.ts } },\n\t\t\t{ sort: { ts: -1 }, reactive: false },\n\t\t);\n\n\t\tif (!msg) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (await canUpdateMessage(msg)) {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn findPreviousOwnMessage(msg);\n\t};\n\n\tconst getPreviousOwnMessage = async (message: IMessage): Promise<IMessage> => {\n\t\tconst previousMessage = await findPreviousOwnMessage(message);\n\n\t\tif (!previousMessage) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn previousMessage;\n\t};\n\n\tconst findNextOwnMessage = async (message: IMessage): Promise<IMessage | undefined> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst msg = Messages.findOne(\n\t\t\t{ rid, 'tmid': tmid ?? { $exists: false }, 'u._id': uid, '_hidden': { $ne: true }, 'ts': { $gt: message.ts } },\n\t\t\t{ sort: { ts: 1 }, reactive: false },\n\t\t);\n\n\t\tif (!msg) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (await canUpdateMessage(msg)) {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn findNextOwnMessage(msg);\n\t};\n\n\tconst getNextOwnMessage = async (message: IMessage): Promise<IMessage> => {\n\t\tconst nextMessage = await findNextOwnMessage(message);\n\n\t\tif (!nextMessage) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn nextMessage;\n\t};\n\n\tconst pushEphemeralMessage = async (message: Omit<IMessage, 'rid' | 'tmid'>): Promise<void> => {\n\t\tMessages.upsert({ _id: message._id }, { $set: { ...message, rid, ...(tmid && { tmid }) } });\n\t};\n\n\tconst updateMessage = async (message: IEditedMessage, previewUrls?: string[]): Promise<void> =>\n\t\tsdk.call('updateMessage', message, previewUrls);\n\n\tconst canDeleteMessage = async (message: IMessage): Promise<boolean> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (MessageTypes.isSystemMessage(message)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst forceDeleteAllowed = hasPermission('force-delete-message', message.rid);\n\t\tif (forceDeleteAllowed) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst deletionEnabled = settings.get('Message_AllowDeleting') as boolean | undefined;\n\t\tif (!deletionEnabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst deleteAnyAllowed = hasPermission('delete-message', rid);\n\t\tconst deleteOwnAllowed = hasPermission('delete-own-message');\n\t\tconst deleteAllowed = deleteAnyAllowed || (deleteOwnAllowed && message?.u && message.u._id === Meteor.userId());\n\n\t\tif (!deleteAllowed) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst blockDeleteInMinutes = settings.get('Message_AllowDeleting_BlockDeleteInMinutes') as number | undefined;\n\t\tconst bypassBlockTimeLimit = hasPermission('bypass-time-limit-edit-and-delete', message.rid);\n\t\tconst elapsedMinutes = moment().diff(message.ts, 'minutes');\n\t\tconst onTimeForDelete = bypassBlockTimeLimit || !blockDeleteInMinutes || !elapsedMinutes || elapsedMinutes <= blockDeleteInMinutes;\n\n\t\treturn deleteAllowed && onTimeForDelete;\n\t};\n\n\tconst deleteMessage = async (msgIdOrMsg: IMessage | IMessage['_id']): Promise<void> => {\n\t\tlet msgId: string;\n\t\tlet roomId: string;\n\t\tif (typeof msgIdOrMsg === 'string') {\n\t\t\tmsgId = msgIdOrMsg;\n\t\t\tconst msg = await findMessageByID(msgId);\n\t\t\tif (!msg) {\n\t\t\t\tthrow new Error('Message not found');\n\t\t\t}\n\t\t\troomId = msg.rid;\n\t\t} else {\n\t\t\tmsgId = msgIdOrMsg._id;\n\t\t\troomId = msgIdOrMsg.rid;\n\t\t}\n\n\t\tawait sdk.rest.post('/v1/chat.delete', { msgId, roomId });\n\t};\n\n\tconst drafts = new Map<IMessage['_id'] | undefined, string>();\n\n\tconst getDraft = async (mid: IMessage['_id'] | undefined): Promise<string | undefined> => drafts.get(mid);\n\n\tconst discardDraft = async (mid: IMessage['_id'] | undefined): Promise<void> => {\n\t\tdrafts.delete(mid);\n\t};\n\n\tconst saveDraft = async (mid: IMessage['_id'] | undefined, draft: string): Promise<void> => {\n\t\tdrafts.set(mid, draft);\n\t};\n\n\tconst findRoom = async (): Promise<IRoom | undefined> => ChatRoom.findOne({ _id: rid }, { reactive: false });\n\n\tconst getRoom = async (): Promise<IRoom> => {\n\t\tconst room = await findRoom();\n\n\t\tif (!room) {\n\t\t\tthrow new Error('Room not found');\n\t\t}\n\n\t\treturn room;\n\t};\n\n\tconst isSubscribedToRoom = async (): Promise<boolean> => !!ChatSubscription.findOne({ rid }, { reactive: false });\n\n\tconst joinRoom = async (): Promise<void> => {\n\t\tawait sdk.call('joinRoom', rid);\n\t};\n\n\tconst findDiscussionByID = async (drid: IRoom['_id']): Promise<IRoom | undefined> =>\n\t\tChatRoom.findOne({ _id: drid, prid: { $exists: true } }, { reactive: false });\n\n\tconst getDiscussionByID = async (drid: IRoom['_id']): Promise<IRoom> => {\n\t\tconst discussion = await findDiscussionByID(drid);\n\n\t\tif (!discussion) {\n\t\t\tthrow new Error('Discussion not found');\n\t\t}\n\n\t\treturn discussion;\n\t};\n\n\tconst createStrictGetter = <TFind extends (...args: any[]) => Promise<any>>(\n\t\tfind: TFind,\n\t\terrorMessage: string,\n\t): ((...args: Parameters<TFind>) => Promise<Exclude<Awaited<ReturnType<TFind>>, undefined>>) => {\n\t\treturn async (...args) => {\n\t\t\tconst result = await find(...args);\n\n\t\t\tif (!result) {\n\t\t\t\tthrow new Error(errorMessage);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t};\n\n\tconst findSubscription = async (): Promise<ISubscription | undefined> => {\n\t\treturn ChatSubscription.findOne({ rid }, { reactive: false });\n\t};\n\n\tconst getSubscription = createStrictGetter(findSubscription, 'Subscription not found');\n\n\tconst findSubscriptionFromMessage = async (message: IMessage): Promise<ISubscription | undefined> => {\n\t\treturn ChatSubscription.findOne({ rid: message.rid }, { reactive: false });\n\t};\n\n\tconst getSubscriptionFromMessage = createStrictGetter(findSubscriptionFromMessage, 'Subscription not found');\n\n\treturn {\n\t\tcomposeMessage,\n\t\tfindMessageByID,\n\t\tgetMessageByID,\n\t\tfindLastMessage,\n\t\tgetLastMessage,\n\t\tfindLastOwnMessage,\n\t\tgetLastOwnMessage,\n\t\tfindPreviousOwnMessage,\n\t\tgetPreviousOwnMessage,\n\t\tfindNextOwnMessage,\n\t\tgetNextOwnMessage,\n\t\tpushEphemeralMessage,\n\t\tcanUpdateMessage,\n\t\tupdateMessage,\n\t\tcanDeleteMessage,\n\t\tdeleteMessage,\n\t\tgetDraft,\n\t\tsaveDraft,\n\t\tdiscardDraft,\n\t\tfindRoom,\n\t\tgetRoom,\n\t\tisSubscribedToRoom,\n\t\tjoinRoom,\n\t\tfindDiscussionByID,\n\t\tgetDiscussionByID,\n\t\tfindSubscription,\n\t\tgetSubscription,\n\t\tfindSubscriptionFromMessage,\n\t\tgetSubscriptionFromMessage,\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"452bf1a83750a1a14b9e27df3b896ba9bcc2f6ab"}
