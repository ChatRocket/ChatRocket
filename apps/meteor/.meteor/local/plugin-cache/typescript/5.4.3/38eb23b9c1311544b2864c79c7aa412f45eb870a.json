{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/version-check/server/functions/buildVersionUpdateMessage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/version-check/server/functions/buildVersionUpdateMessage.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/version-check/server/functions/buildVersionUpdateMessage.ts","inputSourceMap":{"version":3,"file":"app/version-check/server/functions/buildVersionUpdateMessage.ts","sourceRoot":"","sources":["app/version-check/server/functions/buildVersionUpdateMessage.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC/C,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAE,IAAI,EAAE,MAAM,6BAA6B,CAAC;AACnD,OAAO,EAAE,oBAAoB,EAAE,MAAM,6CAA6C,CAAC;AACnF,OAAO,EAAE,qBAAqB,EAAE,MAAM,uDAAuD,CAAC;AAC9F,OAAO,EAAE,0BAA0B,EAAE,MAAM,wCAAwC,CAAC;AACpF,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,IAAI,EAAE,MAAM,gCAAgC,CAAC;AAEtD,MAAM,CAAC,MAAM,yBAAyB,GAAG,KAAK,EAC7C,WAIM,EAAE,EACP,EAAE;IACH,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QAC3B,OAAO;IACR,CAAC;IAED,MAAM,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAS,+BAA+B,CAAC,CAAC;IAEjF,IAAI,CAAC,kBAAkB,EAAE,CAAC;QACzB,OAAO;IACR,CAAC;IAED,IAAI,KAAK,EAAE,MAAM,OAAO,IAAI,QAAQ,EAAE,CAAC;QACtC,6BAA6B;QAC7B,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;YACxC,SAAS;QACV,CAAC;QAED,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,kBAAkB,CAAC,EAAE,CAAC;YACrD,SAAS;QACV,CAAC;QAED,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;YAC/C,SAAS;QACV,CAAC;QACD,EAAE;QACF,CACC,MAAM,qBAAqB,CAAC;YAC3B,MAAM,EAAE,2BAA2B;SACnC,CAAC,CAAC,QAAQ,CAAC,eAAe,EAAE,+BAA+B,EAAE,OAAO,CAAC,OAAO,CAAC,CAC9E,CAAC,aAAa,IAAI,KAAK,0BAA0B,CAAC,+BAA+B,CAAC,CAAC;QAEpF,MAAM,oBAAoB,CAAC;YAC1B,IAAI,EAAE,KAAK,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;gBAC9B;oBACC,GAAG,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,wBAAwB,EAAE,EAAE,GAAG,CAAC,SAAS,CAAC,QAAQ,IAAI,EAAE,GAAG,EAAE,SAAS,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,CAChH,2BAA2B,EAC3B;wBACC,WAAW,EAAE,SAAS;wBACtB,OAAO,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;qBAC1B,CACD,KAAK,OAAO,CAAC,OAAO,EAAE;iBACvB;aACD;YACD,OAAO,EAAE;gBACR;oBACC,EAAE,EAAE,iBAAiB,OAAO,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;oBAC1D,QAAQ,EAAE,EAAE;oBACZ,KAAK,EAAE,wBAAwB;oBAC/B,IAAI,EAAE,2BAA2B;oBACjC,aAAa,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;oBAChC,IAAI,EAAE,OAAO,CAAC,OAAO;oBACrB,SAAS,EAAE,EAAE;iBACb;aACD;SACD,CAAC,CAAC;QACH,MAAM;IACP,CAAC;AACF,CAAC,CAAC","sourcesContent":["import { Settings } from '@rocket.chat/models';\nimport semver from 'semver';\n\nimport { i18n } from '../../../../server/lib/i18n';\nimport { sendMessagesToAdmins } from '../../../../server/lib/sendMessagesToAdmins';\nimport { updateAuditedBySystem } from '../../../../server/settings/lib/auditedSettingUpdates';\nimport { notifyOnSettingChangedById } from '../../../lib/server/lib/notifyListener';\nimport { settings } from '../../../settings/server';\nimport { Info } from '../../../utils/rocketchat.info';\n\nexport const buildVersionUpdateMessage = async (\n\tversions: {\n\t\tversion: string;\n\t\tsecurity: boolean;\n\t\tinfoUrl: string;\n\t}[] = [],\n) => {\n\tif (process.env.TEST_MODE) {\n\t\treturn;\n\t}\n\n\tconst lastCheckedVersion = settings.get<string>('Update_LatestAvailableVersion');\n\n\tif (!lastCheckedVersion) {\n\t\treturn;\n\t}\n\n\tfor await (const version of versions) {\n\t\t// Ignore prerelease versions\n\t\tif (semver.prerelease(version.version)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (semver.lte(version.version, lastCheckedVersion)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (semver.lte(version.version, Info.version)) {\n\t\t\tcontinue;\n\t\t}\n\t\t//\n\t\t(\n\t\t\tawait updateAuditedBySystem({\n\t\t\t\treason: 'buildVersionUpdateMessage',\n\t\t\t})(Settings.updateValueById, 'Update_LatestAvailableVersion', version.version)\n\t\t).modifiedCount && void notifyOnSettingChangedById('Update_LatestAvailableVersion');\n\n\t\tawait sendMessagesToAdmins({\n\t\t\tmsgs: async ({ adminUser }) => [\n\t\t\t\t{\n\t\t\t\t\tmsg: `*${i18n.t('Update_your_RocketChat', { ...(adminUser.language && { lng: adminUser.language }) })}*\\n${i18n.t(\n\t\t\t\t\t\t'New_version_available_(s)',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\t\tsprintf: [version.version],\n\t\t\t\t\t\t},\n\t\t\t\t\t)}\\n${version.infoUrl}`,\n\t\t\t\t},\n\t\t\t],\n\t\t\tbanners: [\n\t\t\t\t{\n\t\t\t\t\tid: `versionUpdate-${version.version}`.replace(/\\./g, '_'),\n\t\t\t\t\tpriority: 10,\n\t\t\t\t\ttitle: 'Update_your_RocketChat',\n\t\t\t\t\ttext: 'New_version_available_(s)',\n\t\t\t\t\ttextArguments: [version.version],\n\t\t\t\t\tlink: version.infoUrl,\n\t\t\t\t\tmodifiers: [],\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tbreak;\n\t}\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/version-check/server/functions/buildVersionUpdateMessage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/version-check/server/functions/buildVersionUpdateMessage.ts","inputSourceMap":{"version":3,"file":"app/version-check/server/functions/buildVersionUpdateMessage.ts","sourceRoot":"","sources":["app/version-check/server/functions/buildVersionUpdateMessage.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC/C,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAE,IAAI,EAAE,MAAM,6BAA6B,CAAC;AACnD,OAAO,EAAE,oBAAoB,EAAE,MAAM,6CAA6C,CAAC;AACnF,OAAO,EAAE,qBAAqB,EAAE,MAAM,uDAAuD,CAAC;AAC9F,OAAO,EAAE,0BAA0B,EAAE,MAAM,wCAAwC,CAAC;AACpF,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,IAAI,EAAE,MAAM,gCAAgC,CAAC;AAEtD,MAAM,CAAC,MAAM,yBAAyB,GAAG,KAAK,EAC7C,WAIM,EAAE,EACP,EAAE;IACH,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QAC3B,OAAO;IACR,CAAC;IAED,MAAM,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAS,+BAA+B,CAAC,CAAC;IAEjF,IAAI,CAAC,kBAAkB,EAAE,CAAC;QACzB,OAAO;IACR,CAAC;IAED,IAAI,KAAK,EAAE,MAAM,OAAO,IAAI,QAAQ,EAAE,CAAC;QACtC,6BAA6B;QAC7B,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;YACxC,SAAS;QACV,CAAC;QAED,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,kBAAkB,CAAC,EAAE,CAAC;YACrD,SAAS;QACV,CAAC;QAED,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;YAC/C,SAAS;QACV,CAAC;QACD,EAAE;QACF,CACC,MAAM,qBAAqB,CAAC;YAC3B,MAAM,EAAE,2BAA2B;SACnC,CAAC,CAAC,QAAQ,CAAC,eAAe,EAAE,+BAA+B,EAAE,OAAO,CAAC,OAAO,CAAC,CAC9E,CAAC,aAAa,IAAI,KAAK,0BAA0B,CAAC,+BAA+B,CAAC,CAAC;QAEpF,MAAM,oBAAoB,CAAC;YAC1B,IAAI,EAAE,KAAK,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;gBAC9B;oBACC,GAAG,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,wBAAwB,EAAE,EAAE,GAAG,CAAC,SAAS,CAAC,QAAQ,IAAI,EAAE,GAAG,EAAE,SAAS,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,CAChH,2BAA2B,EAC3B;wBACC,WAAW,EAAE,SAAS;wBACtB,OAAO,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;qBAC1B,CACD,KAAK,OAAO,CAAC,OAAO,EAAE;iBACvB;aACD;YACD,OAAO,EAAE;gBACR;oBACC,EAAE,EAAE,iBAAiB,OAAO,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;oBAC1D,QAAQ,EAAE,EAAE;oBACZ,KAAK,EAAE,wBAAwB;oBAC/B,IAAI,EAAE,2BAA2B;oBACjC,aAAa,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;oBAChC,IAAI,EAAE,OAAO,CAAC,OAAO;oBACrB,SAAS,EAAE,EAAE;iBACb;aACD;SACD,CAAC,CAAC;QACH,MAAM;IACP,CAAC;AACF,CAAC,CAAC","sourcesContent":["import { Settings } from '@rocket.chat/models';\nimport semver from 'semver';\n\nimport { i18n } from '../../../../server/lib/i18n';\nimport { sendMessagesToAdmins } from '../../../../server/lib/sendMessagesToAdmins';\nimport { updateAuditedBySystem } from '../../../../server/settings/lib/auditedSettingUpdates';\nimport { notifyOnSettingChangedById } from '../../../lib/server/lib/notifyListener';\nimport { settings } from '../../../settings/server';\nimport { Info } from '../../../utils/rocketchat.info';\n\nexport const buildVersionUpdateMessage = async (\n\tversions: {\n\t\tversion: string;\n\t\tsecurity: boolean;\n\t\tinfoUrl: string;\n\t}[] = [],\n) => {\n\tif (process.env.TEST_MODE) {\n\t\treturn;\n\t}\n\n\tconst lastCheckedVersion = settings.get<string>('Update_LatestAvailableVersion');\n\n\tif (!lastCheckedVersion) {\n\t\treturn;\n\t}\n\n\tfor await (const version of versions) {\n\t\t// Ignore prerelease versions\n\t\tif (semver.prerelease(version.version)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (semver.lte(version.version, lastCheckedVersion)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (semver.lte(version.version, Info.version)) {\n\t\t\tcontinue;\n\t\t}\n\t\t//\n\t\t(\n\t\t\tawait updateAuditedBySystem({\n\t\t\t\treason: 'buildVersionUpdateMessage',\n\t\t\t})(Settings.updateValueById, 'Update_LatestAvailableVersion', version.version)\n\t\t).modifiedCount && void notifyOnSettingChangedById('Update_LatestAvailableVersion');\n\n\t\tawait sendMessagesToAdmins({\n\t\t\tmsgs: async ({ adminUser }) => [\n\t\t\t\t{\n\t\t\t\t\tmsg: `*${i18n.t('Update_your_RocketChat', { ...(adminUser.language && { lng: adminUser.language }) })}*\\n${i18n.t(\n\t\t\t\t\t\t'New_version_available_(s)',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\t\tsprintf: [version.version],\n\t\t\t\t\t\t},\n\t\t\t\t\t)}\\n${version.infoUrl}`,\n\t\t\t\t},\n\t\t\t],\n\t\t\tbanners: [\n\t\t\t\t{\n\t\t\t\t\tid: `versionUpdate-${version.version}`.replace(/\\./g, '_'),\n\t\t\t\t\tpriority: 10,\n\t\t\t\t\ttitle: 'Update_your_RocketChat',\n\t\t\t\t\ttext: 'New_version_available_(s)',\n\t\t\t\t\ttextArguments: [version.version],\n\t\t\t\t\tlink: version.infoUrl,\n\t\t\t\t\tmodifiers: [],\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tbreak;\n\t}\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      buildVersionUpdateMessage: () => buildVersionUpdateMessage\n    });\n    let Settings;\n    module.link(\"@rocket.chat/models\", {\n      Settings(v) {\n        Settings = v;\n      }\n    }, 0);\n    let semver;\n    module.link(\"semver\", {\n      default(v) {\n        semver = v;\n      }\n    }, 1);\n    let i18n;\n    module.link(\"../../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 2);\n    let sendMessagesToAdmins;\n    module.link(\"../../../../server/lib/sendMessagesToAdmins\", {\n      sendMessagesToAdmins(v) {\n        sendMessagesToAdmins = v;\n      }\n    }, 3);\n    let updateAuditedBySystem;\n    module.link(\"../../../../server/settings/lib/auditedSettingUpdates\", {\n      updateAuditedBySystem(v) {\n        updateAuditedBySystem = v;\n      }\n    }, 4);\n    let notifyOnSettingChangedById;\n    module.link(\"../../../lib/server/lib/notifyListener\", {\n      notifyOnSettingChangedById(v) {\n        notifyOnSettingChangedById = v;\n      }\n    }, 5);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 6);\n    let Info;\n    module.link(\"../../../utils/rocketchat.info\", {\n      Info(v) {\n        Info = v;\n      }\n    }, 7);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const buildVersionUpdateMessage = async function () {\n      let versions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      if (process.env.TEST_MODE) {\n        return;\n      }\n      const lastCheckedVersion = settings.get('Update_LatestAvailableVersion');\n      if (!lastCheckedVersion) {\n        return;\n      }\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(versions), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const version = _step.value;\n          {\n            // Ignore prerelease versions\n            if (semver.prerelease(version.version)) {\n              continue;\n            }\n            if (semver.lte(version.version, lastCheckedVersion)) {\n              continue;\n            }\n            if (semver.lte(version.version, Info.version)) {\n              continue;\n            }\n            //\n            (await updateAuditedBySystem({\n              reason: 'buildVersionUpdateMessage'\n            })(Settings.updateValueById, 'Update_LatestAvailableVersion', version.version)).modifiedCount && void notifyOnSettingChangedById('Update_LatestAvailableVersion');\n            await sendMessagesToAdmins({\n              msgs: async _ref => {\n                let {\n                  adminUser\n                } = _ref;\n                return [{\n                  msg: \"*\".concat(i18n.t('Update_your_RocketChat', _objectSpread({}, adminUser.language && {\n                    lng: adminUser.language\n                  })), \"*\\n\").concat(i18n.t('New_version_available_(s)', {\n                    postProcess: 'sprintf',\n                    sprintf: [version.version]\n                  }), \"\\n\").concat(version.infoUrl)\n                }];\n              },\n              banners: [{\n                id: \"versionUpdate-\".concat(version.version).replace(/\\./g, '_'),\n                priority: 10,\n                title: 'Update_your_RocketChat',\n                text: 'New_version_available_(s)',\n                textArguments: [version.version],\n                link: version.infoUrl,\n                modifiers: []\n              }]\n            });\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","buildVersionUpdateMessage","Settings","semver","i18n","sendMessagesToAdmins","updateAuditedBySystem","notifyOnSettingChangedById","settings","Info","__reifyWaitForDeps__","versions","arguments","length","undefined","process","env","TEST_MODE","lastCheckedVersion","get","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","version","value","prerelease","lte","reason","updateValueById","modifiedCount","msgs","_ref","adminUser","msg","concat","t","language","lng","postProcess","sprintf","infoUrl","banners","id","replace","priority","title","text","textArguments","modifiers","err","return","__reify_async_result__","_reifyError","self","async"],"sources":["app/version-check/server/functions/buildVersionUpdateMessage.ts"],"sourcesContent":["import { Settings } from '@rocket.chat/models';\nimport semver from 'semver';\n\nimport { i18n } from '../../../../server/lib/i18n';\nimport { sendMessagesToAdmins } from '../../../../server/lib/sendMessagesToAdmins';\nimport { updateAuditedBySystem } from '../../../../server/settings/lib/auditedSettingUpdates';\nimport { notifyOnSettingChangedById } from '../../../lib/server/lib/notifyListener';\nimport { settings } from '../../../settings/server';\nimport { Info } from '../../../utils/rocketchat.info';\n\nexport const buildVersionUpdateMessage = async (\n\tversions: {\n\t\tversion: string;\n\t\tsecurity: boolean;\n\t\tinfoUrl: string;\n\t}[] = [],\n) => {\n\tif (process.env.TEST_MODE) {\n\t\treturn;\n\t}\n\n\tconst lastCheckedVersion = settings.get<string>('Update_LatestAvailableVersion');\n\n\tif (!lastCheckedVersion) {\n\t\treturn;\n\t}\n\n\tfor await (const version of versions) {\n\t\t// Ignore prerelease versions\n\t\tif (semver.prerelease(version.version)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (semver.lte(version.version, lastCheckedVersion)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (semver.lte(version.version, Info.version)) {\n\t\t\tcontinue;\n\t\t}\n\t\t//\n\t\t(\n\t\t\tawait updateAuditedBySystem({\n\t\t\t\treason: 'buildVersionUpdateMessage',\n\t\t\t})(Settings.updateValueById, 'Update_LatestAvailableVersion', version.version)\n\t\t).modifiedCount && void notifyOnSettingChangedById('Update_LatestAvailableVersion');\n\n\t\tawait sendMessagesToAdmins({\n\t\t\tmsgs: async ({ adminUser }) => [\n\t\t\t\t{\n\t\t\t\t\tmsg: `*${i18n.t('Update_your_RocketChat', { ...(adminUser.language && { lng: adminUser.language }) })}*\\n${i18n.t(\n\t\t\t\t\t\t'New_version_available_(s)',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\t\tsprintf: [version.version],\n\t\t\t\t\t\t},\n\t\t\t\t\t)}\\n${version.infoUrl}`,\n\t\t\t\t},\n\t\t\t],\n\t\t\tbanners: [\n\t\t\t\t{\n\t\t\t\t\tid: `versionUpdate-${version.version}`.replace(/\\./g, '_'),\n\t\t\t\t\tpriority: 10,\n\t\t\t\t\ttitle: 'Update_your_RocketChat',\n\t\t\t\t\ttext: 'New_version_available_(s)',\n\t\t\t\t\ttextArguments: [version.version],\n\t\t\t\t\tlink: version.infoUrl,\n\t\t\t\t\tmodifiers: [],\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tbreak;\n\t}\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"38eb23b9c1311544b2864c79c7aa412f45eb870a"}
