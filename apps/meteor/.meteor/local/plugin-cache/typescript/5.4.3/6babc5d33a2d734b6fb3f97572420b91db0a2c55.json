{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/unmuteUserInRoom.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/unmuteUserInRoom.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/unmuteUserInRoom.ts","inputSourceMap":{"version":3,"file":"server/methods/unmuteUserInRoom.ts","sourceRoot":"","sources":["server/methods/unmuteUserInRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import { Message } from '@rocket.chat/core-services';\nimport type { IRoom } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Subscriptions, Users } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../app/authorization/server/functions/hasPermission';\nimport { methodDeprecationLogger } from '../../app/lib/server/lib/deprecationWarningLogger';\nimport { notifyOnRoomChangedById } from '../../app/lib/server/lib/notifyListener';\nimport { RoomMemberActions } from '../../definition/IRoomTypeConfig';\nimport { callbacks } from '../../lib/callbacks';\nimport { roomCoordinator } from '../lib/rooms/roomCoordinator';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tunmuteUserInRoom(data: { rid: IRoom['_id']; username: string }): boolean;\n\t}\n}\n\nexport const unmuteUserInRoom = async (fromId: string, data: { rid: IRoom['_id']; username: string }): Promise<boolean> => {\n\tif (!fromId || !(await hasPermissionAsync(fromId, 'mute-user', data.rid))) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t});\n\t}\n\n\tconst room = await Rooms.findOneById(data.rid);\n\n\tif (!room) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t});\n\t}\n\n\tif (!(await roomCoordinator.getRoomDirectives(room.t).allowMemberAction(room, RoomMemberActions.MUTE, fromId))) {\n\t\tthrow new Meteor.Error('error-invalid-room-type', `${room.t} is not a valid room type`, {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t\ttype: room.t,\n\t\t});\n\t}\n\n\tconst subscription = await Subscriptions.findOneByRoomIdAndUsername(data.rid, data.username, {\n\t\tprojection: { _id: 1 },\n\t});\n\n\tif (!subscription) {\n\t\tthrow new Meteor.Error('error-user-not-in-room', 'User is not in this room', {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t});\n\t}\n\n\tconst unmutedUser = await Users.findOneByUsernameIgnoringCase(data.username);\n\tif (!unmutedUser?.username) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user to unmute', {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t});\n\t}\n\n\tconst fromUser = await Users.findOneById(fromId);\n\tif (!fromUser) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t});\n\t}\n\n\tawait callbacks.run('beforeUnmuteUser', { unmutedUser, fromUser }, room);\n\n\tif (room.ro) {\n\t\tawait Rooms.unmuteReadOnlyUsernameByRoomId(data.rid, unmutedUser.username);\n\t} else {\n\t\tawait Rooms.unmuteMutedUsernameByRoomId(data.rid, unmutedUser.username);\n\t}\n\n\tawait Message.saveSystemMessage('user-unmuted', data.rid, unmutedUser.username, fromUser);\n\n\tsetImmediate(() => {\n\t\tvoid callbacks.run('afterUnmuteUser', { unmutedUser, fromUser }, room);\n\t\tvoid notifyOnRoomChangedById(data.rid);\n\t});\n\n\treturn true;\n};\n\nMeteor.methods<ServerMethods>({\n\tasync unmuteUserInRoom(data) {\n\t\tmethodDeprecationLogger.method('unmuteUserInRoom', '8.0.0');\n\n\t\tconst fromId = Meteor.userId();\n\n\t\tcheck(\n\t\t\tdata,\n\t\t\tMatch.ObjectIncluding({\n\t\t\t\trid: String,\n\t\t\t\tusername: String,\n\t\t\t}),\n\t\t);\n\n\t\tif (!fromId) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'unmuteUserInRoom',\n\t\t\t});\n\t\t}\n\n\t\treturn unmuteUserInRoom(fromId, data);\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/unmuteUserInRoom.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/unmuteUserInRoom.ts","inputSourceMap":{"version":3,"file":"server/methods/unmuteUserInRoom.ts","sourceRoot":"","sources":["server/methods/unmuteUserInRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import { Message } from '@rocket.chat/core-services';\nimport type { IRoom } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Subscriptions, Users } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../app/authorization/server/functions/hasPermission';\nimport { methodDeprecationLogger } from '../../app/lib/server/lib/deprecationWarningLogger';\nimport { notifyOnRoomChangedById } from '../../app/lib/server/lib/notifyListener';\nimport { RoomMemberActions } from '../../definition/IRoomTypeConfig';\nimport { callbacks } from '../../lib/callbacks';\nimport { roomCoordinator } from '../lib/rooms/roomCoordinator';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tunmuteUserInRoom(data: { rid: IRoom['_id']; username: string }): boolean;\n\t}\n}\n\nexport const unmuteUserInRoom = async (fromId: string, data: { rid: IRoom['_id']; username: string }): Promise<boolean> => {\n\tif (!fromId || !(await hasPermissionAsync(fromId, 'mute-user', data.rid))) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t});\n\t}\n\n\tconst room = await Rooms.findOneById(data.rid);\n\n\tif (!room) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t});\n\t}\n\n\tif (!(await roomCoordinator.getRoomDirectives(room.t).allowMemberAction(room, RoomMemberActions.MUTE, fromId))) {\n\t\tthrow new Meteor.Error('error-invalid-room-type', `${room.t} is not a valid room type`, {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t\ttype: room.t,\n\t\t});\n\t}\n\n\tconst subscription = await Subscriptions.findOneByRoomIdAndUsername(data.rid, data.username, {\n\t\tprojection: { _id: 1 },\n\t});\n\n\tif (!subscription) {\n\t\tthrow new Meteor.Error('error-user-not-in-room', 'User is not in this room', {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t});\n\t}\n\n\tconst unmutedUser = await Users.findOneByUsernameIgnoringCase(data.username);\n\tif (!unmutedUser?.username) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user to unmute', {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t});\n\t}\n\n\tconst fromUser = await Users.findOneById(fromId);\n\tif (!fromUser) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t});\n\t}\n\n\tawait callbacks.run('beforeUnmuteUser', { unmutedUser, fromUser }, room);\n\n\tif (room.ro) {\n\t\tawait Rooms.unmuteReadOnlyUsernameByRoomId(data.rid, unmutedUser.username);\n\t} else {\n\t\tawait Rooms.unmuteMutedUsernameByRoomId(data.rid, unmutedUser.username);\n\t}\n\n\tawait Message.saveSystemMessage('user-unmuted', data.rid, unmutedUser.username, fromUser);\n\n\tsetImmediate(() => {\n\t\tvoid callbacks.run('afterUnmuteUser', { unmutedUser, fromUser }, room);\n\t\tvoid notifyOnRoomChangedById(data.rid);\n\t});\n\n\treturn true;\n};\n\nMeteor.methods<ServerMethods>({\n\tasync unmuteUserInRoom(data) {\n\t\tmethodDeprecationLogger.method('unmuteUserInRoom', '8.0.0');\n\n\t\tconst fromId = Meteor.userId();\n\n\t\tcheck(\n\t\t\tdata,\n\t\t\tMatch.ObjectIncluding({\n\t\t\t\trid: String,\n\t\t\t\tusername: String,\n\t\t\t}),\n\t\t);\n\n\t\tif (!fromId) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'unmuteUserInRoom',\n\t\t\t});\n\t\t}\n\n\t\treturn unmuteUserInRoom(fromId, data);\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      unmuteUserInRoom: () => unmuteUserInRoom\n    });\n    let Message;\n    module.link(\"@rocket.chat/core-services\", {\n      Message(v) {\n        Message = v;\n      }\n    }, 0);\n    let Rooms, Subscriptions, Users;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let hasPermissionAsync;\n    module.link(\"../../app/authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 4);\n    let methodDeprecationLogger;\n    module.link(\"../../app/lib/server/lib/deprecationWarningLogger\", {\n      methodDeprecationLogger(v) {\n        methodDeprecationLogger = v;\n      }\n    }, 5);\n    let notifyOnRoomChangedById;\n    module.link(\"../../app/lib/server/lib/notifyListener\", {\n      notifyOnRoomChangedById(v) {\n        notifyOnRoomChangedById = v;\n      }\n    }, 6);\n    let RoomMemberActions;\n    module.link(\"../../definition/IRoomTypeConfig\", {\n      RoomMemberActions(v) {\n        RoomMemberActions = v;\n      }\n    }, 7);\n    let callbacks;\n    module.link(\"../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 8);\n    let roomCoordinator;\n    module.link(\"../lib/rooms/roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 9);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const unmuteUserInRoom = async (fromId, data) => {\n      if (!fromId || !(await hasPermissionAsync(fromId, 'mute-user', data.rid))) {\n        throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n          method: 'unmuteUserInRoom'\n        });\n      }\n      const room = await Rooms.findOneById(data.rid);\n      if (!room) {\n        throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n          method: 'unmuteUserInRoom'\n        });\n      }\n      if (!(await roomCoordinator.getRoomDirectives(room.t).allowMemberAction(room, RoomMemberActions.MUTE, fromId))) {\n        throw new Meteor.Error('error-invalid-room-type', \"\".concat(room.t, \" is not a valid room type\"), {\n          method: 'unmuteUserInRoom',\n          type: room.t\n        });\n      }\n      const subscription = await Subscriptions.findOneByRoomIdAndUsername(data.rid, data.username, {\n        projection: {\n          _id: 1\n        }\n      });\n      if (!subscription) {\n        throw new Meteor.Error('error-user-not-in-room', 'User is not in this room', {\n          method: 'unmuteUserInRoom'\n        });\n      }\n      const unmutedUser = await Users.findOneByUsernameIgnoringCase(data.username);\n      if (!(unmutedUser !== null && unmutedUser !== void 0 && unmutedUser.username)) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user to unmute', {\n          method: 'unmuteUserInRoom'\n        });\n      }\n      const fromUser = await Users.findOneById(fromId);\n      if (!fromUser) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'unmuteUserInRoom'\n        });\n      }\n      await callbacks.run('beforeUnmuteUser', {\n        unmutedUser,\n        fromUser\n      }, room);\n      if (room.ro) {\n        await Rooms.unmuteReadOnlyUsernameByRoomId(data.rid, unmutedUser.username);\n      } else {\n        await Rooms.unmuteMutedUsernameByRoomId(data.rid, unmutedUser.username);\n      }\n      await Message.saveSystemMessage('user-unmuted', data.rid, unmutedUser.username, fromUser);\n      setImmediate(() => {\n        void callbacks.run('afterUnmuteUser', {\n          unmutedUser,\n          fromUser\n        }, room);\n        void notifyOnRoomChangedById(data.rid);\n      });\n      return true;\n    };\n    Meteor.methods({\n      async unmuteUserInRoom(data) {\n        methodDeprecationLogger.method('unmuteUserInRoom', '8.0.0');\n        const fromId = Meteor.userId();\n        check(data, Match.ObjectIncluding({\n          rid: String,\n          username: String\n        }));\n        if (!fromId) {\n          throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n            method: 'unmuteUserInRoom'\n          });\n        }\n        return unmuteUserInRoom(fromId, data);\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","unmuteUserInRoom","Message","link","v","Rooms","Subscriptions","Users","Match","check","Meteor","hasPermissionAsync","methodDeprecationLogger","notifyOnRoomChangedById","RoomMemberActions","callbacks","roomCoordinator","__reifyWaitForDeps__","fromId","data","rid","Error","method","room","findOneById","getRoomDirectives","t","allowMemberAction","MUTE","concat","type","subscription","findOneByRoomIdAndUsername","username","projection","_id","unmutedUser","findOneByUsernameIgnoringCase","fromUser","run","ro","unmuteReadOnlyUsernameByRoomId","unmuteMutedUsernameByRoomId","saveSystemMessage","setImmediate","methods","userId","ObjectIncluding","String","__reify_async_result__","_reifyError","self","async"],"sources":["server/methods/unmuteUserInRoom.ts"],"sourcesContent":["import { Message } from '@rocket.chat/core-services';\nimport type { IRoom } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Subscriptions, Users } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../app/authorization/server/functions/hasPermission';\nimport { methodDeprecationLogger } from '../../app/lib/server/lib/deprecationWarningLogger';\nimport { notifyOnRoomChangedById } from '../../app/lib/server/lib/notifyListener';\nimport { RoomMemberActions } from '../../definition/IRoomTypeConfig';\nimport { callbacks } from '../../lib/callbacks';\nimport { roomCoordinator } from '../lib/rooms/roomCoordinator';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tunmuteUserInRoom(data: { rid: IRoom['_id']; username: string }): boolean;\n\t}\n}\n\nexport const unmuteUserInRoom = async (fromId: string, data: { rid: IRoom['_id']; username: string }): Promise<boolean> => {\n\tif (!fromId || !(await hasPermissionAsync(fromId, 'mute-user', data.rid))) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t});\n\t}\n\n\tconst room = await Rooms.findOneById(data.rid);\n\n\tif (!room) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t});\n\t}\n\n\tif (!(await roomCoordinator.getRoomDirectives(room.t).allowMemberAction(room, RoomMemberActions.MUTE, fromId))) {\n\t\tthrow new Meteor.Error('error-invalid-room-type', `${room.t} is not a valid room type`, {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t\ttype: room.t,\n\t\t});\n\t}\n\n\tconst subscription = await Subscriptions.findOneByRoomIdAndUsername(data.rid, data.username, {\n\t\tprojection: { _id: 1 },\n\t});\n\n\tif (!subscription) {\n\t\tthrow new Meteor.Error('error-user-not-in-room', 'User is not in this room', {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t});\n\t}\n\n\tconst unmutedUser = await Users.findOneByUsernameIgnoringCase(data.username);\n\tif (!unmutedUser?.username) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user to unmute', {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t});\n\t}\n\n\tconst fromUser = await Users.findOneById(fromId);\n\tif (!fromUser) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'unmuteUserInRoom',\n\t\t});\n\t}\n\n\tawait callbacks.run('beforeUnmuteUser', { unmutedUser, fromUser }, room);\n\n\tif (room.ro) {\n\t\tawait Rooms.unmuteReadOnlyUsernameByRoomId(data.rid, unmutedUser.username);\n\t} else {\n\t\tawait Rooms.unmuteMutedUsernameByRoomId(data.rid, unmutedUser.username);\n\t}\n\n\tawait Message.saveSystemMessage('user-unmuted', data.rid, unmutedUser.username, fromUser);\n\n\tsetImmediate(() => {\n\t\tvoid callbacks.run('afterUnmuteUser', { unmutedUser, fromUser }, room);\n\t\tvoid notifyOnRoomChangedById(data.rid);\n\t});\n\n\treturn true;\n};\n\nMeteor.methods<ServerMethods>({\n\tasync unmuteUserInRoom(data) {\n\t\tmethodDeprecationLogger.method('unmuteUserInRoom', '8.0.0');\n\n\t\tconst fromId = Meteor.userId();\n\n\t\tcheck(\n\t\t\tdata,\n\t\t\tMatch.ObjectIncluding({\n\t\t\t\trid: String,\n\t\t\t\tusername: String,\n\t\t\t}),\n\t\t);\n\n\t\tif (!fromId) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'unmuteUserInRoom',\n\t\t\t});\n\t\t}\n\n\t\treturn unmuteUserInRoom(fromId, data);\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"6babc5d33a2d734b6fb3f97572420b91db0a2c55"}
