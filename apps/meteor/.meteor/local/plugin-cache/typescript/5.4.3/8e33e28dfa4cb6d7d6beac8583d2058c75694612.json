{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/Omnichannel/hooks/useLivechatTags.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/Omnichannel/hooks/useLivechatTags.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/Omnichannel/hooks/useLivechatTags.ts","inputSourceMap":{"version":3,"file":"client/components/Omnichannel/hooks/useLivechatTags.ts","sourceRoot":"","sources":["client/components/Omnichannel/hooks/useLivechatTags.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEjD,OAAO,EAAE,cAAc,EAAE,MAAM,2CAA2C,CAAC;AAQ3E,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,OAAc,EAAE,EAAE;IACjD,MAAM,OAAO,GAAG,WAAW,CAAC,KAAK,EAAE,mBAAmB,CAAC,CAAC;IACxD,MAAM,EAAE,YAAY,EAAE,GAAG,cAAc,EAAE,CAAC;IAE1C,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;IAC9C,OAAO,QAAQ,CACd,CAAC,mBAAmB,EAAE,IAAI,EAAE,UAAU,CAAC,EACvC,GAAG,EAAE,CACJ,OAAO,CAAC;QACP,IAAI,EAAE,IAAI,IAAI,EAAE;QAChB,GAAG,CAAC,UAAU,IAAI,EAAE,UAAU,EAAE,CAAC;QACjC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO;KACnC,CAAC,EACH;QACC,OAAO,EAAE,YAAY;KACrB,CACD,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useOmnichannel } from '../../../hooks/omnichannel/useOmnichannel';\n\ntype Props = {\n\tdepartment?: string;\n\ttext?: string;\n\tviewAll?: boolean;\n};\n\nexport const useLivechatTags = (options: Props) => {\n\tconst getTags = useEndpoint('GET', '/v1/livechat/tags');\n\tconst { isEnterprise } = useOmnichannel();\n\n\tconst { department, text, viewAll } = options;\n\treturn useQuery(\n\t\t['/v1/livechat/tags', text, department],\n\t\t() =>\n\t\t\tgetTags({\n\t\t\t\ttext: text || '',\n\t\t\t\t...(department && { department }),\n\t\t\t\tviewAll: viewAll ? 'true' : 'false',\n\t\t\t}),\n\t\t{\n\t\t\tenabled: isEnterprise,\n\t\t},\n\t);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/Omnichannel/hooks/useLivechatTags.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/Omnichannel/hooks/useLivechatTags.ts","inputSourceMap":{"version":3,"file":"client/components/Omnichannel/hooks/useLivechatTags.ts","sourceRoot":"","sources":["client/components/Omnichannel/hooks/useLivechatTags.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEjD,OAAO,EAAE,cAAc,EAAE,MAAM,2CAA2C,CAAC;AAQ3E,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,OAAc,EAAE,EAAE;IACjD,MAAM,OAAO,GAAG,WAAW,CAAC,KAAK,EAAE,mBAAmB,CAAC,CAAC;IACxD,MAAM,EAAE,YAAY,EAAE,GAAG,cAAc,EAAE,CAAC;IAE1C,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;IAC9C,OAAO,QAAQ,CACd,CAAC,mBAAmB,EAAE,IAAI,EAAE,UAAU,CAAC,EACvC,GAAG,EAAE,CACJ,OAAO,CAAC;QACP,IAAI,EAAE,IAAI,IAAI,EAAE;QAChB,GAAG,CAAC,UAAU,IAAI,EAAE,UAAU,EAAE,CAAC;QACjC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO;KACnC,CAAC,EACH;QACC,OAAO,EAAE,YAAY;KACrB,CACD,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useOmnichannel } from '../../../hooks/omnichannel/useOmnichannel';\n\ntype Props = {\n\tdepartment?: string;\n\ttext?: string;\n\tviewAll?: boolean;\n};\n\nexport const useLivechatTags = (options: Props) => {\n\tconst getTags = useEndpoint('GET', '/v1/livechat/tags');\n\tconst { isEnterprise } = useOmnichannel();\n\n\tconst { department, text, viewAll } = options;\n\treturn useQuery(\n\t\t['/v1/livechat/tags', text, department],\n\t\t() =>\n\t\t\tgetTags({\n\t\t\t\ttext: text || '',\n\t\t\t\t...(department && { department }),\n\t\t\t\tviewAll: viewAll ? 'true' : 'false',\n\t\t\t}),\n\t\t{\n\t\t\tenabled: isEnterprise,\n\t\t},\n\t);\n};\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  useLivechatTags: () => useLivechatTags\n});\nlet useEndpoint;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n}, 0);\nlet useQuery;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery(v) {\n    useQuery = v;\n  }\n}, 1);\nlet useOmnichannel;\nmodule.link(\"../../../hooks/omnichannel/useOmnichannel\", {\n  useOmnichannel(v) {\n    useOmnichannel = v;\n  }\n}, 2);\nconst useLivechatTags = options => {\n  const getTags = useEndpoint('GET', '/v1/livechat/tags');\n  const {\n    isEnterprise\n  } = useOmnichannel();\n  const {\n    department,\n    text,\n    viewAll\n  } = options;\n  return useQuery(['/v1/livechat/tags', text, department], () => getTags(_objectSpread(_objectSpread({\n    text: text || ''\n  }, department && {\n    department\n  }), {}, {\n    viewAll: viewAll ? 'true' : 'false'\n  })), {\n    enabled: isEnterprise\n  });\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","useLivechatTags","useEndpoint","useQuery","useOmnichannel","options","getTags","isEnterprise","department","text","viewAll","enabled"],"sources":["client/components/Omnichannel/hooks/useLivechatTags.ts"],"sourcesContent":["import { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useOmnichannel } from '../../../hooks/omnichannel/useOmnichannel';\n\ntype Props = {\n\tdepartment?: string;\n\ttext?: string;\n\tviewAll?: boolean;\n};\n\nexport const useLivechatTags = (options: Props) => {\n\tconst getTags = useEndpoint('GET', '/v1/livechat/tags');\n\tconst { isEnterprise } = useOmnichannel();\n\n\tconst { department, text, viewAll } = options;\n\treturn useQuery(\n\t\t['/v1/livechat/tags', text, department],\n\t\t() =>\n\t\t\tgetTags({\n\t\t\t\ttext: text || '',\n\t\t\t\t...(department && { department }),\n\t\t\t\tviewAll: viewAll ? 'true' : 'false',\n\t\t\t}),\n\t\t{\n\t\t\tenabled: isEnterprise,\n\t\t},\n\t);\n};\n"],"mappings":"AAAA,IAAAA,aAAS;AAAAC,MAAa,CAAAC,IAAM,uCAA2B;EAAAC,QAAAC,CAAA;IAAAJ,aAAA,GAAAI,CAAA;EAAA;AAAA;AAAvDH,MAAA,CAAOI,MAAE;EAAAC,eAAmB,EAAAA,CAAA,KAAAA;AAAA;AAAA,IAA2BC,WAAA;AAAAN,MAAA,CAAAC,IAAA;EAAAK,YAAAH,CAAA;IAAAG,WAAA,GAAAH,CAAA;EAAA;AAAA;AAAA,IAAAI,QAAA;AAAAP,MAAA,CAAAC,IAAA;EAAAM,SAAAJ,CAAA;IAAAI,QAAA,GAAAJ,CAAA;EAAA;AAAA;AAAA,IAAAK,cAAA;AAAAR,MAAA,CAAAC,IAAA;EAAAO,eAAAL,CAAA;IAAAK,cAAA,GAAAL,CAAA;EAAA;AAAA;AAWhD,MAAME,eAAe,GAAII,OAAc,IAAI;EACjD,MAAMC,OAAO,GAAGJ,WAAW,CAAC,KAAK,EAAE,mBAAmB,CAAC;EACvD,MAAM;IAAEK;EAAY,CAAE,GAAGH,cAAc,EAAE;EAEzC,MAAM;IAAEI,UAAU;IAAEC,IAAI;IAAEC;EAAO,CAAE,GAAGL,OAAO;EAC7C,OAAOF,QAAQ,CACd,CAAC,mBAAmB,EAAEM,IAAI,EAAED,UAAU,CAAC,EACvC,MACCF,OAAO,CAAAX,aAAA,CAAAA,aAAA;IACNc,IAAI,EAAEA,IAAI,IAAI;EAAE,GACZD,UAAU,IAAI;IAAEA;EAAU,CAAE;IAChCE,OAAO,EAAEA,OAAO,GAAG,MAAM,GAAG;EAAO,EACnC,CAAC,EACH;IACCC,OAAO,EAAEJ;GACT,CACD;AACF,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"8e33e28dfa4cb6d7d6beac8583d2058c75694612"}
