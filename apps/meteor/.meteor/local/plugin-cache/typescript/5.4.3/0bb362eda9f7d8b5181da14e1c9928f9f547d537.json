{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/imports/server/rest/visitors.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/imports/server/rest/visitors.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/imports/server/rest/visitors.ts","inputSourceMap":{"version":3,"file":"app/livechat/imports/server/rest/visitors.ts","sourceRoot":"","sources":["app/livechat/imports/server/rest/visitors.ts"],"names":[],"mappings":"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","sourcesContent":["import { Messages, LivechatRooms } from '@rocket.chat/models';\nimport {\n\tisLivechatVisitorsInfoProps,\n\tisGETLivechatVisitorsPagesVisitedRoomIdParams,\n\tisGETLivechatVisitorsChatHistoryRoomRoomIdVisitorVisitorIdParams,\n\tisGETLivechatVisitorsSearchChatsRoomRoomIdVisitorVisitorIdParams,\n\tisGETLivechatVisitorsAutocompleteParams,\n\tisLivechatRidMessagesProps,\n\tisGETLivechatVisitorsSearch,\n} from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { API } from '../../../../api/server';\nimport { getPaginationItems } from '../../../../api/server/helpers/getPaginationItems';\nimport { canAccessRoomAsync } from '../../../../authorization/server';\nimport { normalizeMessagesForUser } from '../../../../utils/server/lib/normalizeMessagesForUser';\nimport {\n\tfindVisitorInfo,\n\tfindVisitedPages,\n\tfindChatHistory,\n\tsearchChats,\n\tfindVisitorsToAutocomplete,\n\tfindVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField,\n} from '../../../server/api/lib/visitors';\n\nAPI.v1.addRoute(\n\t'livechat/visitors.info',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isLivechatVisitorsInfoProps },\n\t{\n\t\tasync get() {\n\t\t\tconst visitor = await findVisitorInfo({ visitorId: this.queryParams.visitorId });\n\t\t\treturn API.v1.success(visitor);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.pagesVisited/:roomId',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETLivechatVisitorsPagesVisitedRoomIdParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\n\t\t\tconst pages = await findVisitedPages({\n\t\t\t\troomId: this.urlParams.roomId,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn API.v1.success(pages);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.chatHistory/room/:roomId/visitor/:visitorId',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-l-room'],\n\t\tvalidateParams: isGETLivechatVisitorsChatHistoryRoomRoomIdVisitorVisitorIdParams,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst history = await findChatHistory({\n\t\t\t\tuserId: this.userId,\n\t\t\t\troomId: this.urlParams.roomId,\n\t\t\t\tvisitorId: this.urlParams.visitorId,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success(history);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.searchChats/room/:roomId/visitor/:visitorId',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-l-room'],\n\t\tvalidateParams: isGETLivechatVisitorsSearchChatsRoomRoomIdVisitorVisitorIdParams,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { roomId, visitorId } = this.urlParams;\n\t\t\tconst { searchText, closedChatsOnly, servedChatsOnly, source } = this.queryParams;\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst history = await searchChats({\n\t\t\t\tuserId: this.userId,\n\t\t\t\troomId,\n\t\t\t\tvisitorId,\n\t\t\t\tsearchText,\n\t\t\t\tclosedChatsOnly,\n\t\t\t\tservedChatsOnly,\n\t\t\t\tsource,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn API.v1.success(history);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.autocomplete',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETLivechatVisitorsAutocompleteParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { selector } = this.queryParams;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findVisitorsToAutocomplete({\n\t\t\t\t\tselector: JSON.parse(selector),\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.search',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETLivechatVisitorsSearch },\n\t{\n\t\tasync get() {\n\t\t\tconst { term } = this.queryParams;\n\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\n\t\t\tconst nameOrUsername = term ? new RegExp(escapeRegExp(term), 'i') : undefined;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField({\n\t\t\t\t\temailOrPhone: term,\n\t\t\t\t\tnameOrUsername,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/:rid/messages',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isLivechatRidMessagesProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst { searchTerm } = this.queryParams;\n\n\t\t\tconst room = await LivechatRooms.findOneById(this.urlParams.rid);\n\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('invalid-room');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomAsync(room, this.user))) {\n\t\t\t\tthrow new Error('not-allowed');\n\t\t\t}\n\n\t\t\tconst { cursor, totalCount } = Messages.findLivechatClosedMessages(this.urlParams.rid, searchTerm, {\n\t\t\t\tsort: sort || { ts: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t});\n\n\t\t\tconst [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tmessages: await normalizeMessagesForUser(messages, this.userId),\n\t\t\t\toffset,\n\t\t\t\tcount,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/imports/server/rest/visitors.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/imports/server/rest/visitors.ts","inputSourceMap":{"version":3,"file":"app/livechat/imports/server/rest/visitors.ts","sourceRoot":"","sources":["app/livechat/imports/server/rest/visitors.ts"],"names":[],"mappings":"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","sourcesContent":["import { Messages, LivechatRooms } from '@rocket.chat/models';\nimport {\n\tisLivechatVisitorsInfoProps,\n\tisGETLivechatVisitorsPagesVisitedRoomIdParams,\n\tisGETLivechatVisitorsChatHistoryRoomRoomIdVisitorVisitorIdParams,\n\tisGETLivechatVisitorsSearchChatsRoomRoomIdVisitorVisitorIdParams,\n\tisGETLivechatVisitorsAutocompleteParams,\n\tisLivechatRidMessagesProps,\n\tisGETLivechatVisitorsSearch,\n} from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { API } from '../../../../api/server';\nimport { getPaginationItems } from '../../../../api/server/helpers/getPaginationItems';\nimport { canAccessRoomAsync } from '../../../../authorization/server';\nimport { normalizeMessagesForUser } from '../../../../utils/server/lib/normalizeMessagesForUser';\nimport {\n\tfindVisitorInfo,\n\tfindVisitedPages,\n\tfindChatHistory,\n\tsearchChats,\n\tfindVisitorsToAutocomplete,\n\tfindVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField,\n} from '../../../server/api/lib/visitors';\n\nAPI.v1.addRoute(\n\t'livechat/visitors.info',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isLivechatVisitorsInfoProps },\n\t{\n\t\tasync get() {\n\t\t\tconst visitor = await findVisitorInfo({ visitorId: this.queryParams.visitorId });\n\t\t\treturn API.v1.success(visitor);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.pagesVisited/:roomId',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETLivechatVisitorsPagesVisitedRoomIdParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\n\t\t\tconst pages = await findVisitedPages({\n\t\t\t\troomId: this.urlParams.roomId,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn API.v1.success(pages);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.chatHistory/room/:roomId/visitor/:visitorId',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-l-room'],\n\t\tvalidateParams: isGETLivechatVisitorsChatHistoryRoomRoomIdVisitorVisitorIdParams,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst history = await findChatHistory({\n\t\t\t\tuserId: this.userId,\n\t\t\t\troomId: this.urlParams.roomId,\n\t\t\t\tvisitorId: this.urlParams.visitorId,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success(history);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.searchChats/room/:roomId/visitor/:visitorId',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-l-room'],\n\t\tvalidateParams: isGETLivechatVisitorsSearchChatsRoomRoomIdVisitorVisitorIdParams,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { roomId, visitorId } = this.urlParams;\n\t\t\tconst { searchText, closedChatsOnly, servedChatsOnly, source } = this.queryParams;\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst history = await searchChats({\n\t\t\t\tuserId: this.userId,\n\t\t\t\troomId,\n\t\t\t\tvisitorId,\n\t\t\t\tsearchText,\n\t\t\t\tclosedChatsOnly,\n\t\t\t\tservedChatsOnly,\n\t\t\t\tsource,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn API.v1.success(history);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.autocomplete',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETLivechatVisitorsAutocompleteParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { selector } = this.queryParams;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findVisitorsToAutocomplete({\n\t\t\t\t\tselector: JSON.parse(selector),\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.search',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETLivechatVisitorsSearch },\n\t{\n\t\tasync get() {\n\t\t\tconst { term } = this.queryParams;\n\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\n\t\t\tconst nameOrUsername = term ? new RegExp(escapeRegExp(term), 'i') : undefined;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField({\n\t\t\t\t\temailOrPhone: term,\n\t\t\t\t\tnameOrUsername,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/:rid/messages',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isLivechatRidMessagesProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst { searchTerm } = this.queryParams;\n\n\t\t\tconst room = await LivechatRooms.findOneById(this.urlParams.rid);\n\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('invalid-room');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomAsync(room, this.user))) {\n\t\t\t\tthrow new Error('not-allowed');\n\t\t\t}\n\n\t\t\tconst { cursor, totalCount } = Messages.findLivechatClosedMessages(this.urlParams.rid, searchTerm, {\n\t\t\t\tsort: sort || { ts: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t});\n\n\t\t\tconst [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tmessages: await normalizeMessagesForUser(messages, this.userId),\n\t\t\t\toffset,\n\t\t\t\tcount,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Messages, LivechatRooms;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      },\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      }\n    }, 0);\n    let isLivechatVisitorsInfoProps, isGETLivechatVisitorsPagesVisitedRoomIdParams, isGETLivechatVisitorsChatHistoryRoomRoomIdVisitorVisitorIdParams, isGETLivechatVisitorsSearchChatsRoomRoomIdVisitorVisitorIdParams, isGETLivechatVisitorsAutocompleteParams, isLivechatRidMessagesProps, isGETLivechatVisitorsSearch;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isLivechatVisitorsInfoProps(v) {\n        isLivechatVisitorsInfoProps = v;\n      },\n      isGETLivechatVisitorsPagesVisitedRoomIdParams(v) {\n        isGETLivechatVisitorsPagesVisitedRoomIdParams = v;\n      },\n      isGETLivechatVisitorsChatHistoryRoomRoomIdVisitorVisitorIdParams(v) {\n        isGETLivechatVisitorsChatHistoryRoomRoomIdVisitorVisitorIdParams = v;\n      },\n      isGETLivechatVisitorsSearchChatsRoomRoomIdVisitorVisitorIdParams(v) {\n        isGETLivechatVisitorsSearchChatsRoomRoomIdVisitorVisitorIdParams = v;\n      },\n      isGETLivechatVisitorsAutocompleteParams(v) {\n        isGETLivechatVisitorsAutocompleteParams = v;\n      },\n      isLivechatRidMessagesProps(v) {\n        isLivechatRidMessagesProps = v;\n      },\n      isGETLivechatVisitorsSearch(v) {\n        isGETLivechatVisitorsSearch = v;\n      }\n    }, 1);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 2);\n    let API;\n    module.link(\"../../../../api/server\", {\n      API(v) {\n        API = v;\n      }\n    }, 3);\n    let getPaginationItems;\n    module.link(\"../../../../api/server/helpers/getPaginationItems\", {\n      getPaginationItems(v) {\n        getPaginationItems = v;\n      }\n    }, 4);\n    let canAccessRoomAsync;\n    module.link(\"../../../../authorization/server\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      }\n    }, 5);\n    let normalizeMessagesForUser;\n    module.link(\"../../../../utils/server/lib/normalizeMessagesForUser\", {\n      normalizeMessagesForUser(v) {\n        normalizeMessagesForUser = v;\n      }\n    }, 6);\n    let findVisitorInfo, findVisitedPages, findChatHistory, searchChats, findVisitorsToAutocomplete, findVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField;\n    module.link(\"../../../server/api/lib/visitors\", {\n      findVisitorInfo(v) {\n        findVisitorInfo = v;\n      },\n      findVisitedPages(v) {\n        findVisitedPages = v;\n      },\n      findChatHistory(v) {\n        findChatHistory = v;\n      },\n      searchChats(v) {\n        searchChats = v;\n      },\n      findVisitorsToAutocomplete(v) {\n        findVisitorsToAutocomplete = v;\n      },\n      findVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField(v) {\n        findVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField = v;\n      }\n    }, 7);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('livechat/visitors.info', {\n      authRequired: true,\n      permissionsRequired: ['view-l-room'],\n      validateParams: isLivechatVisitorsInfoProps\n    }, {\n      async get() {\n        const visitor = await findVisitorInfo({\n          visitorId: this.queryParams.visitorId\n        });\n        return API.v1.success(visitor);\n      }\n    });\n    API.v1.addRoute('livechat/visitors.pagesVisited/:roomId', {\n      authRequired: true,\n      permissionsRequired: ['view-l-room'],\n      validateParams: isGETLivechatVisitorsPagesVisitedRoomIdParams\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort\n        } = await this.parseJsonQuery();\n        const pages = await findVisitedPages({\n          roomId: this.urlParams.roomId,\n          pagination: {\n            offset,\n            count,\n            sort\n          }\n        });\n        return API.v1.success(pages);\n      }\n    });\n    API.v1.addRoute('livechat/visitors.chatHistory/room/:roomId/visitor/:visitorId', {\n      authRequired: true,\n      permissionsRequired: ['view-l-room'],\n      validateParams: isGETLivechatVisitorsChatHistoryRoomRoomIdVisitorVisitorIdParams\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort\n        } = await this.parseJsonQuery();\n        const history = await findChatHistory({\n          userId: this.userId,\n          roomId: this.urlParams.roomId,\n          visitorId: this.urlParams.visitorId,\n          pagination: {\n            offset,\n            count,\n            sort\n          }\n        });\n        return API.v1.success(history);\n      }\n    });\n    API.v1.addRoute('livechat/visitors.searchChats/room/:roomId/visitor/:visitorId', {\n      authRequired: true,\n      permissionsRequired: ['view-l-room'],\n      validateParams: isGETLivechatVisitorsSearchChatsRoomRoomIdVisitorVisitorIdParams\n    }, {\n      async get() {\n        const {\n          roomId,\n          visitorId\n        } = this.urlParams;\n        const {\n          searchText,\n          closedChatsOnly,\n          servedChatsOnly,\n          source\n        } = this.queryParams;\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort\n        } = await this.parseJsonQuery();\n        const history = await searchChats({\n          userId: this.userId,\n          roomId,\n          visitorId,\n          searchText,\n          closedChatsOnly,\n          servedChatsOnly,\n          source,\n          pagination: {\n            offset,\n            count,\n            sort\n          }\n        });\n        return API.v1.success(history);\n      }\n    });\n    API.v1.addRoute('livechat/visitors.autocomplete', {\n      authRequired: true,\n      permissionsRequired: ['view-l-room'],\n      validateParams: isGETLivechatVisitorsAutocompleteParams\n    }, {\n      async get() {\n        const {\n          selector\n        } = this.queryParams;\n        return API.v1.success(await findVisitorsToAutocomplete({\n          selector: JSON.parse(selector)\n        }));\n      }\n    });\n    API.v1.addRoute('livechat/visitors.search', {\n      authRequired: true,\n      permissionsRequired: ['view-l-room'],\n      validateParams: isGETLivechatVisitorsSearch\n    }, {\n      async get() {\n        const {\n          term\n        } = this.queryParams;\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort\n        } = await this.parseJsonQuery();\n        const nameOrUsername = term ? new RegExp(escapeRegExp(term), 'i') : undefined;\n        return API.v1.success(await findVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField({\n          emailOrPhone: term,\n          nameOrUsername,\n          pagination: {\n            offset,\n            count,\n            sort\n          }\n        }));\n      }\n    });\n    API.v1.addRoute('livechat/:rid/messages', {\n      authRequired: true,\n      permissionsRequired: ['view-l-room'],\n      validateParams: isLivechatRidMessagesProps\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort\n        } = await this.parseJsonQuery();\n        const {\n          searchTerm\n        } = this.queryParams;\n        const room = await LivechatRooms.findOneById(this.urlParams.rid);\n        if (!room) {\n          throw new Error('invalid-room');\n        }\n        if (!(await canAccessRoomAsync(room, this.user))) {\n          throw new Error('not-allowed');\n        }\n        const {\n          cursor,\n          totalCount\n        } = Messages.findLivechatClosedMessages(this.urlParams.rid, searchTerm, {\n          sort: sort || {\n            ts: -1\n          },\n          skip: offset,\n          limit: count\n        });\n        const [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n        return API.v1.success({\n          messages: await normalizeMessagesForUser(messages, this.userId),\n          offset,\n          count,\n          total\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Messages","LivechatRooms","module","link","v","isLivechatVisitorsInfoProps","isGETLivechatVisitorsPagesVisitedRoomIdParams","isGETLivechatVisitorsChatHistoryRoomRoomIdVisitorVisitorIdParams","isGETLivechatVisitorsSearchChatsRoomRoomIdVisitorVisitorIdParams","isGETLivechatVisitorsAutocompleteParams","isLivechatRidMessagesProps","isGETLivechatVisitorsSearch","escapeRegExp","API","getPaginationItems","canAccessRoomAsync","normalizeMessagesForUser","findVisitorInfo","findVisitedPages","findChatHistory","searchChats","findVisitorsToAutocomplete","findVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField","__reifyWaitForDeps__","v1","addRoute","authRequired","permissionsRequired","validateParams","get","visitor","visitorId","queryParams","success","offset","count","sort","parseJsonQuery","pages","roomId","urlParams","pagination","history","userId","searchText","closedChatsOnly","servedChatsOnly","source","selector","JSON","parse","term","nameOrUsername","RegExp","undefined","emailOrPhone","searchTerm","room","findOneById","rid","Error","user","cursor","totalCount","findLivechatClosedMessages","ts","skip","limit","messages","total","Promise","all","toArray","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/imports/server/rest/visitors.ts"],"sourcesContent":["import { Messages, LivechatRooms } from '@rocket.chat/models';\nimport {\n\tisLivechatVisitorsInfoProps,\n\tisGETLivechatVisitorsPagesVisitedRoomIdParams,\n\tisGETLivechatVisitorsChatHistoryRoomRoomIdVisitorVisitorIdParams,\n\tisGETLivechatVisitorsSearchChatsRoomRoomIdVisitorVisitorIdParams,\n\tisGETLivechatVisitorsAutocompleteParams,\n\tisLivechatRidMessagesProps,\n\tisGETLivechatVisitorsSearch,\n} from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { API } from '../../../../api/server';\nimport { getPaginationItems } from '../../../../api/server/helpers/getPaginationItems';\nimport { canAccessRoomAsync } from '../../../../authorization/server';\nimport { normalizeMessagesForUser } from '../../../../utils/server/lib/normalizeMessagesForUser';\nimport {\n\tfindVisitorInfo,\n\tfindVisitedPages,\n\tfindChatHistory,\n\tsearchChats,\n\tfindVisitorsToAutocomplete,\n\tfindVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField,\n} from '../../../server/api/lib/visitors';\n\nAPI.v1.addRoute(\n\t'livechat/visitors.info',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isLivechatVisitorsInfoProps },\n\t{\n\t\tasync get() {\n\t\t\tconst visitor = await findVisitorInfo({ visitorId: this.queryParams.visitorId });\n\t\t\treturn API.v1.success(visitor);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.pagesVisited/:roomId',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETLivechatVisitorsPagesVisitedRoomIdParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\n\t\t\tconst pages = await findVisitedPages({\n\t\t\t\troomId: this.urlParams.roomId,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn API.v1.success(pages);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.chatHistory/room/:roomId/visitor/:visitorId',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-l-room'],\n\t\tvalidateParams: isGETLivechatVisitorsChatHistoryRoomRoomIdVisitorVisitorIdParams,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst history = await findChatHistory({\n\t\t\t\tuserId: this.userId,\n\t\t\t\troomId: this.urlParams.roomId,\n\t\t\t\tvisitorId: this.urlParams.visitorId,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success(history);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.searchChats/room/:roomId/visitor/:visitorId',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-l-room'],\n\t\tvalidateParams: isGETLivechatVisitorsSearchChatsRoomRoomIdVisitorVisitorIdParams,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { roomId, visitorId } = this.urlParams;\n\t\t\tconst { searchText, closedChatsOnly, servedChatsOnly, source } = this.queryParams;\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst history = await searchChats({\n\t\t\t\tuserId: this.userId,\n\t\t\t\troomId,\n\t\t\t\tvisitorId,\n\t\t\t\tsearchText,\n\t\t\t\tclosedChatsOnly,\n\t\t\t\tservedChatsOnly,\n\t\t\t\tsource,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn API.v1.success(history);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.autocomplete',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETLivechatVisitorsAutocompleteParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { selector } = this.queryParams;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findVisitorsToAutocomplete({\n\t\t\t\t\tselector: JSON.parse(selector),\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.search',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETLivechatVisitorsSearch },\n\t{\n\t\tasync get() {\n\t\t\tconst { term } = this.queryParams;\n\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\n\t\t\tconst nameOrUsername = term ? new RegExp(escapeRegExp(term), 'i') : undefined;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField({\n\t\t\t\t\temailOrPhone: term,\n\t\t\t\t\tnameOrUsername,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/:rid/messages',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isLivechatRidMessagesProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst { searchTerm } = this.queryParams;\n\n\t\t\tconst room = await LivechatRooms.findOneById(this.urlParams.rid);\n\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('invalid-room');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomAsync(room, this.user))) {\n\t\t\t\tthrow new Error('not-allowed');\n\t\t\t}\n\n\t\t\tconst { cursor, totalCount } = Messages.findLivechatClosedMessages(this.urlParams.rid, searchTerm, {\n\t\t\t\tsort: sort || { ts: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t});\n\n\t\t\tconst [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tmessages: await normalizeMessagesForUser(messages, this.userId),\n\t\t\t\toffset,\n\t\t\t\tcount,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0bb362eda9f7d8b5181da14e1c9928f9f547d537"}
