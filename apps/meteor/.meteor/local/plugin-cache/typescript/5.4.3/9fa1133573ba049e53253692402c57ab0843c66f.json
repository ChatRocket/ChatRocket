{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/authorization/server/functions/hasRole.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/authorization/server/functions/hasRole.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/authorization/server/functions/hasRole.ts","inputSourceMap":{"version":3,"file":"app/authorization/server/functions/hasRole.ts","sourceRoot":"","sources":["app/authorization/server/functions/hasRole.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE5C,MAAM,CAAC,MAAM,eAAe,GAAG,KAAK,EACnC,MAAoB,EACpB,OAAuB,EACvB,KAAgC,EACb,EAAE;IACrB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QAC7B,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC5C,CAAC;IAED,IAAI,CAAC,MAAM,IAAI,MAAM,KAAK,EAAE,EAAE,CAAC;QAC9B,OAAO,KAAK,CAAC;IACd,CAAC;IAED,OAAO,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AACpD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG,KAAK,EAAE,MAAoB,EAAE,MAAoB,EAAE,KAAgC,EAAoB,EAAE;IACpI,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC;QAC3B,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC5C,CAAC;IAED,OAAO,eAAe,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;AACjD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,GAAkB,EAAE,IAAkB,EAAuB,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC","sourcesContent":["import type { IRole, IUser, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Roles } from '@rocket.chat/models';\n\nexport const hasAnyRoleAsync = async (\n\tuserId: IUser['_id'],\n\troleIds: IRole['_id'][],\n\tscope?: IRoom['_id'] | undefined,\n): Promise<boolean> => {\n\tif (!Array.isArray(roleIds)) {\n\t\tthrow new Error('error-invalid-arguments');\n\t}\n\n\tif (!userId || userId === '') {\n\t\treturn false;\n\t}\n\n\treturn Roles.isUserInRoles(userId, roleIds, scope);\n};\n\nexport const hasRoleAsync = async (userId: IUser['_id'], roleId: IRole['_id'], scope?: IRoom['_id'] | undefined): Promise<boolean> => {\n\tif (Array.isArray(roleId)) {\n\t\tthrow new Error('error-invalid-arguments');\n\t}\n\n\treturn hasAnyRoleAsync(userId, [roleId], scope);\n};\n\nexport const subscriptionHasRole = (sub: ISubscription, role: IRole['_id']): boolean | undefined => sub.roles?.includes(role);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/authorization/server/functions/hasRole.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/authorization/server/functions/hasRole.ts","inputSourceMap":{"version":3,"file":"app/authorization/server/functions/hasRole.ts","sourceRoot":"","sources":["app/authorization/server/functions/hasRole.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE5C,MAAM,CAAC,MAAM,eAAe,GAAG,KAAK,EACnC,MAAoB,EACpB,OAAuB,EACvB,KAAgC,EACb,EAAE;IACrB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QAC7B,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC5C,CAAC;IAED,IAAI,CAAC,MAAM,IAAI,MAAM,KAAK,EAAE,EAAE,CAAC;QAC9B,OAAO,KAAK,CAAC;IACd,CAAC;IAED,OAAO,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AACpD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG,KAAK,EAAE,MAAoB,EAAE,MAAoB,EAAE,KAAgC,EAAoB,EAAE;IACpI,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC;QAC3B,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC5C,CAAC;IAED,OAAO,eAAe,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;AACjD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,GAAkB,EAAE,IAAkB,EAAuB,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC","sourcesContent":["import type { IRole, IUser, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Roles } from '@rocket.chat/models';\n\nexport const hasAnyRoleAsync = async (\n\tuserId: IUser['_id'],\n\troleIds: IRole['_id'][],\n\tscope?: IRoom['_id'] | undefined,\n): Promise<boolean> => {\n\tif (!Array.isArray(roleIds)) {\n\t\tthrow new Error('error-invalid-arguments');\n\t}\n\n\tif (!userId || userId === '') {\n\t\treturn false;\n\t}\n\n\treturn Roles.isUserInRoles(userId, roleIds, scope);\n};\n\nexport const hasRoleAsync = async (userId: IUser['_id'], roleId: IRole['_id'], scope?: IRoom['_id'] | undefined): Promise<boolean> => {\n\tif (Array.isArray(roleId)) {\n\t\tthrow new Error('error-invalid-arguments');\n\t}\n\n\treturn hasAnyRoleAsync(userId, [roleId], scope);\n};\n\nexport const subscriptionHasRole = (sub: ISubscription, role: IRole['_id']): boolean | undefined => sub.roles?.includes(role);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      hasAnyRoleAsync: () => hasAnyRoleAsync,\n      hasRoleAsync: () => hasRoleAsync,\n      subscriptionHasRole: () => subscriptionHasRole\n    });\n    let Roles;\n    module.link(\"@rocket.chat/models\", {\n      Roles(v) {\n        Roles = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const hasAnyRoleAsync = async (userId, roleIds, scope) => {\n      if (!Array.isArray(roleIds)) {\n        throw new Error('error-invalid-arguments');\n      }\n      if (!userId || userId === '') {\n        return false;\n      }\n      return Roles.isUserInRoles(userId, roleIds, scope);\n    };\n    const hasRoleAsync = async (userId, roleId, scope) => {\n      if (Array.isArray(roleId)) {\n        throw new Error('error-invalid-arguments');\n      }\n      return hasAnyRoleAsync(userId, [roleId], scope);\n    };\n    const subscriptionHasRole = (sub, role) => {\n      var _sub$roles;\n      return (_sub$roles = sub.roles) === null || _sub$roles === void 0 ? void 0 : _sub$roles.includes(role);\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","hasAnyRoleAsync","hasRoleAsync","subscriptionHasRole","Roles","link","v","__reifyWaitForDeps__","userId","roleIds","scope","Array","isArray","Error","isUserInRoles","roleId","sub","role","_sub$roles","roles","includes","__reify_async_result__","_reifyError","self","async"],"sources":["app/authorization/server/functions/hasRole.ts"],"sourcesContent":["import type { IRole, IUser, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Roles } from '@rocket.chat/models';\n\nexport const hasAnyRoleAsync = async (\n\tuserId: IUser['_id'],\n\troleIds: IRole['_id'][],\n\tscope?: IRoom['_id'] | undefined,\n): Promise<boolean> => {\n\tif (!Array.isArray(roleIds)) {\n\t\tthrow new Error('error-invalid-arguments');\n\t}\n\n\tif (!userId || userId === '') {\n\t\treturn false;\n\t}\n\n\treturn Roles.isUserInRoles(userId, roleIds, scope);\n};\n\nexport const hasRoleAsync = async (userId: IUser['_id'], roleId: IRole['_id'], scope?: IRoom['_id'] | undefined): Promise<boolean> => {\n\tif (Array.isArray(roleId)) {\n\t\tthrow new Error('error-invalid-arguments');\n\t}\n\n\treturn hasAnyRoleAsync(userId, [roleId], scope);\n};\n\nexport const subscriptionHasRole = (sub: ISubscription, role: IRole['_id']): boolean | undefined => sub.roles?.includes(role);\n"],"mappings":";;;IACAA,MAAA,CAAOC,MAAE,CAAK;MAAAC,eAAQ,EAAAA,CAAA,KAAAA,eAAsB;MAAAC,YAAA,EAAAA,CAAA,KAAAA,YAAA;MAAAC,mBAAA,EAAAA,CAAA,KAAAA;IAAA;IAAA,IAAAC,KAAA;IAAAL,MAAA,CAAAM,IAAA;MAAAD,MAAAE,CAAA;QAAAF,KAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,oBAAA,WAAAA,oBAAA;IAErC,MAAMN,eAAe,GAAG,MAAAA,CAC9BO,MAAoB,EACpBC,OAAuB,EACvBC,KAAgC,KACX;MACrB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,OAAO,CAAC,EAAE;QAC5B,MAAM,IAAII,KAAK,CAAC,yBAAyB,CAAC;MAC3C;MAEA,IAAI,CAACL,MAAM,IAAIA,MAAM,KAAK,EAAE,EAAE;QAC7B,OAAO,KAAK;MACb;MAEA,OAAOJ,KAAK,CAACU,aAAa,CAACN,MAAM,EAAEC,OAAO,EAAEC,KAAK,CAAC;IACnD,CAAC;IAEM,MAAMR,YAAY,GAAG,MAAAA,CAAOM,MAAoB,EAAEO,MAAoB,EAAEL,KAAgC,KAAsB;MACpI,IAAIC,KAAK,CAACC,OAAO,CAACG,MAAM,CAAC,EAAE;QAC1B,MAAM,IAAIF,KAAK,CAAC,yBAAyB,CAAC;MAC3C;MAEA,OAAOZ,eAAe,CAACO,MAAM,EAAE,CAACO,MAAM,CAAC,EAAEL,KAAK,CAAC;IAChD,CAAC;IAEM,MAAMP,mBAAmB,GAAGA,CAACa,GAAkB,EAAEC,IAAkB;MAAA,IAAAC,UAAA;MAAA,QAAAA,UAAA,GAA0BF,GAAG,CAACG,KAAK,cAAAD,UAAA,uBAATA,UAAA,CAAWE,QAAQ,CAACH,IAAI,CAAC;IAAA;IAACI,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"9fa1133573ba049e53253692402c57ab0843c66f"}
