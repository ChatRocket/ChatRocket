{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/contexts/CallContext.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/contexts/CallContext.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/contexts/CallContext.ts","inputSourceMap":{"version":3,"file":"client/contexts/CallContext.ts","sourceRoot":"","sources":["client/contexts/CallContext.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IVoipRoom, ICallerInfo, VoIpCallerInfo } from '@rocket.chat/core-typings';\nimport type { Device } from '@rocket.chat/ui-contexts';\nimport { createContext, useContext, useMemo } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nimport { useHasLicenseModule } from '../hooks/useHasLicenseModule';\nimport type { VoIPUser } from '../lib/voip/VoIPUser';\n\nexport type CallContextValue = CallContextDisabled | CallContextReady | CallContextError | CallContextEnabled;\n\ntype CallContextDisabled = {\n\tenabled: false;\n\tready: false;\n\toutBoundCallsAllowed: undefined;\n\toutBoundCallsEnabled: undefined;\n\toutBoundCallsEnabledForUser: undefined;\n};\n\ntype CallContextEnabled = {\n\tenabled: true;\n\tready: unknown;\n\toutBoundCallsAllowed: undefined;\n\toutBoundCallsEnabled: undefined;\n\toutBoundCallsEnabledForUser: undefined;\n};\n\ntype CallContextReady = {\n\toutBoundCallsEnabled: boolean;\n\toutBoundCallsAllowed: boolean;\n\toutBoundCallsEnabledForUser: boolean;\n\tenabled: true;\n\tready: true;\n\tvoipClient: VoIPUser;\n\tactions: CallActionsType;\n\tqueueName: string;\n\tqueueCounter: number;\n\tnetworkStatus: 'online' | 'offline';\n\topenedRoomInfo: { v: { token?: string }; rid: string };\n\topenWrapUpModal: () => void;\n\topenRoom: (rid: IVoipRoom['_id']) => void;\n\tcreateRoom: (caller: ICallerInfo) => Promise<IVoipRoom['_id']>;\n\tcloseRoom: (data?: { comment?: string; tags?: string[] }) => void;\n\tchangeAudioOutputDevice: (selectedAudioDevices: Device) => void;\n\tchangeAudioInputDevice: (selectedAudioDevices: Device) => void;\n\tregister: () => void;\n\tunregister: () => void;\n};\n\ntype CallContextError = {\n\tenabled: true;\n\tready: false;\n\toutBoundCallsAllowed: undefined;\n\toutBoundCallsEnabled: undefined;\n\toutBoundCallsEnabledForUser: undefined;\n\terror: Error | unknown;\n};\n\nconst isCallContextReady = (context: CallContextValue): context is CallContextReady => (context as CallContextReady).ready;\n\nconst isCallContextError = (context: CallContextValue): context is CallContextError => (context as CallContextError).error !== undefined;\n\nexport type CallActionsType = {\n\tmute: () => unknown;\n\tunmute: () => unknown;\n\tpause: () => unknown;\n\tresume: () => unknown;\n\tend: () => unknown;\n\tpickUp: () => unknown;\n\treject: () => unknown;\n};\n\nconst CallContextValueDefault: CallContextValue = {\n\tenabled: false,\n\tready: false,\n\toutBoundCallsAllowed: undefined,\n\toutBoundCallsEnabled: undefined,\n\toutBoundCallsEnabledForUser: undefined,\n};\n\nexport const CallContext = createContext<CallContextValue>(CallContextValueDefault);\n\nexport const useIsVoipEnterprise = (): boolean => useHasLicenseModule('voip-enterprise') === true;\n\nexport const useIsCallEnabled = (): boolean => {\n\tconst { enabled } = useContext(CallContext);\n\treturn enabled;\n};\n\nexport const useIsCallReady = (): boolean => {\n\tconst { ready } = useContext(CallContext);\n\n\treturn Boolean(ready);\n};\nexport const useIsCallError = (): boolean => {\n\tconst context = useContext(CallContext);\n\treturn Boolean(isCallContextError(context));\n};\n\nexport const useCallActions = (): CallActionsType => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallActions only if Calls are enabled and ready');\n\t}\n\treturn context.actions;\n};\n\nexport const useCallerInfo = (): VoIpCallerInfo => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallerInfo only if Calls are enabled and ready');\n\t}\n\n\tconst { voipClient } = context;\n\n\tconst [subscribe, getSnapshot] = useMemo(() => {\n\t\tlet caller: VoIpCallerInfo = voipClient.callerInfo;\n\n\t\tconst callback = (cb: () => void): (() => void) =>\n\t\t\tvoipClient.on('stateChanged', () => {\n\t\t\t\tcaller = voipClient.callerInfo;\n\t\t\t\tcb();\n\t\t\t});\n\n\t\tconst getSnapshot = (): VoIpCallerInfo => caller;\n\t\treturn [callback, getSnapshot];\n\t}, [voipClient]);\n\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useCallCreateRoom = (): CallContextReady['createRoom'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallCreateRoom only if Calls are enabled and ready');\n\t}\n\n\treturn context.createRoom;\n};\n\nexport const useCallOpenRoom = (): CallContextReady['openRoom'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallOpenRoom only if Calls are enabled and ready');\n\t}\n\n\treturn context.openRoom;\n};\n\nexport const useCallClient = (): VoIPUser => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallClient only if Calls are enabled and ready');\n\t}\n\n\treturn context.voipClient;\n};\n\nexport const useQueueName = (): CallContextReady['queueName'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useQueueName only if Calls are enabled and ready');\n\t}\n\n\treturn context.queueName;\n};\n\nexport const useQueueCounter = (): CallContextReady['queueCounter'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useQueueCounter only if Calls are enabled and ready');\n\t}\n\n\treturn context.queueCounter;\n};\n\nexport const useOpenedRoomInfo = (): CallContextReady['openedRoomInfo'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useOpenedRoomInfo only if Calls are enabled and ready');\n\t}\n\n\treturn context.openedRoomInfo;\n};\n\nexport const useChangeAudioOutputDevice = (): CallContextReady['changeAudioOutputDevice'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useChangeAudioOutputDevice only if Calls are enabled and ready');\n\t}\n\n\treturn context.changeAudioOutputDevice;\n};\n\nexport const useChangeAudioInputDevice = (): CallContextReady['changeAudioOutputDevice'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useChangeAudioInputDevice only if Calls are enabled and ready');\n\t}\n\n\treturn context.changeAudioInputDevice;\n};\n\nexport const useCallRegisterClient = (): (() => void) => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallRegisterClient only if Calls are enabled and ready');\n\t}\n\n\treturn context.register;\n};\n\nexport const useCallUnregisterClient = (): (() => void) => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallUnregisterClient only if Calls are enabled and ready');\n\t}\n\n\treturn context.unregister;\n};\n\nexport const useVoipOutboundStates = (): {\n\toutBoundCallsAllowed: boolean;\n\toutBoundCallsEnabled: boolean;\n\toutBoundCallsEnabledForUser: boolean;\n} => {\n\tconst isEnterprise = useIsVoipEnterprise();\n\tconst callerInfo = useCallerInfo();\n\n\treturn {\n\t\toutBoundCallsAllowed: isEnterprise,\n\t\toutBoundCallsEnabled: isEnterprise,\n\t\toutBoundCallsEnabledForUser: isEnterprise && !['IN_CALL', 'ON_HOLD', 'UNREGISTERED', 'INITIAL'].includes(callerInfo.state),\n\t};\n};\n\nexport const useVoipNetworkStatus = (): 'online' | 'offline' => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useVoipNetworkStatus only if Calls are enabled and ready');\n\t}\n\n\treturn context.networkStatus;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/contexts/CallContext.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/contexts/CallContext.ts","inputSourceMap":{"version":3,"file":"client/contexts/CallContext.ts","sourceRoot":"","sources":["client/contexts/CallContext.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IVoipRoom, ICallerInfo, VoIpCallerInfo } from '@rocket.chat/core-typings';\nimport type { Device } from '@rocket.chat/ui-contexts';\nimport { createContext, useContext, useMemo } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nimport { useHasLicenseModule } from '../hooks/useHasLicenseModule';\nimport type { VoIPUser } from '../lib/voip/VoIPUser';\n\nexport type CallContextValue = CallContextDisabled | CallContextReady | CallContextError | CallContextEnabled;\n\ntype CallContextDisabled = {\n\tenabled: false;\n\tready: false;\n\toutBoundCallsAllowed: undefined;\n\toutBoundCallsEnabled: undefined;\n\toutBoundCallsEnabledForUser: undefined;\n};\n\ntype CallContextEnabled = {\n\tenabled: true;\n\tready: unknown;\n\toutBoundCallsAllowed: undefined;\n\toutBoundCallsEnabled: undefined;\n\toutBoundCallsEnabledForUser: undefined;\n};\n\ntype CallContextReady = {\n\toutBoundCallsEnabled: boolean;\n\toutBoundCallsAllowed: boolean;\n\toutBoundCallsEnabledForUser: boolean;\n\tenabled: true;\n\tready: true;\n\tvoipClient: VoIPUser;\n\tactions: CallActionsType;\n\tqueueName: string;\n\tqueueCounter: number;\n\tnetworkStatus: 'online' | 'offline';\n\topenedRoomInfo: { v: { token?: string }; rid: string };\n\topenWrapUpModal: () => void;\n\topenRoom: (rid: IVoipRoom['_id']) => void;\n\tcreateRoom: (caller: ICallerInfo) => Promise<IVoipRoom['_id']>;\n\tcloseRoom: (data?: { comment?: string; tags?: string[] }) => void;\n\tchangeAudioOutputDevice: (selectedAudioDevices: Device) => void;\n\tchangeAudioInputDevice: (selectedAudioDevices: Device) => void;\n\tregister: () => void;\n\tunregister: () => void;\n};\n\ntype CallContextError = {\n\tenabled: true;\n\tready: false;\n\toutBoundCallsAllowed: undefined;\n\toutBoundCallsEnabled: undefined;\n\toutBoundCallsEnabledForUser: undefined;\n\terror: Error | unknown;\n};\n\nconst isCallContextReady = (context: CallContextValue): context is CallContextReady => (context as CallContextReady).ready;\n\nconst isCallContextError = (context: CallContextValue): context is CallContextError => (context as CallContextError).error !== undefined;\n\nexport type CallActionsType = {\n\tmute: () => unknown;\n\tunmute: () => unknown;\n\tpause: () => unknown;\n\tresume: () => unknown;\n\tend: () => unknown;\n\tpickUp: () => unknown;\n\treject: () => unknown;\n};\n\nconst CallContextValueDefault: CallContextValue = {\n\tenabled: false,\n\tready: false,\n\toutBoundCallsAllowed: undefined,\n\toutBoundCallsEnabled: undefined,\n\toutBoundCallsEnabledForUser: undefined,\n};\n\nexport const CallContext = createContext<CallContextValue>(CallContextValueDefault);\n\nexport const useIsVoipEnterprise = (): boolean => useHasLicenseModule('voip-enterprise') === true;\n\nexport const useIsCallEnabled = (): boolean => {\n\tconst { enabled } = useContext(CallContext);\n\treturn enabled;\n};\n\nexport const useIsCallReady = (): boolean => {\n\tconst { ready } = useContext(CallContext);\n\n\treturn Boolean(ready);\n};\nexport const useIsCallError = (): boolean => {\n\tconst context = useContext(CallContext);\n\treturn Boolean(isCallContextError(context));\n};\n\nexport const useCallActions = (): CallActionsType => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallActions only if Calls are enabled and ready');\n\t}\n\treturn context.actions;\n};\n\nexport const useCallerInfo = (): VoIpCallerInfo => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallerInfo only if Calls are enabled and ready');\n\t}\n\n\tconst { voipClient } = context;\n\n\tconst [subscribe, getSnapshot] = useMemo(() => {\n\t\tlet caller: VoIpCallerInfo = voipClient.callerInfo;\n\n\t\tconst callback = (cb: () => void): (() => void) =>\n\t\t\tvoipClient.on('stateChanged', () => {\n\t\t\t\tcaller = voipClient.callerInfo;\n\t\t\t\tcb();\n\t\t\t});\n\n\t\tconst getSnapshot = (): VoIpCallerInfo => caller;\n\t\treturn [callback, getSnapshot];\n\t}, [voipClient]);\n\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useCallCreateRoom = (): CallContextReady['createRoom'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallCreateRoom only if Calls are enabled and ready');\n\t}\n\n\treturn context.createRoom;\n};\n\nexport const useCallOpenRoom = (): CallContextReady['openRoom'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallOpenRoom only if Calls are enabled and ready');\n\t}\n\n\treturn context.openRoom;\n};\n\nexport const useCallClient = (): VoIPUser => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallClient only if Calls are enabled and ready');\n\t}\n\n\treturn context.voipClient;\n};\n\nexport const useQueueName = (): CallContextReady['queueName'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useQueueName only if Calls are enabled and ready');\n\t}\n\n\treturn context.queueName;\n};\n\nexport const useQueueCounter = (): CallContextReady['queueCounter'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useQueueCounter only if Calls are enabled and ready');\n\t}\n\n\treturn context.queueCounter;\n};\n\nexport const useOpenedRoomInfo = (): CallContextReady['openedRoomInfo'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useOpenedRoomInfo only if Calls are enabled and ready');\n\t}\n\n\treturn context.openedRoomInfo;\n};\n\nexport const useChangeAudioOutputDevice = (): CallContextReady['changeAudioOutputDevice'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useChangeAudioOutputDevice only if Calls are enabled and ready');\n\t}\n\n\treturn context.changeAudioOutputDevice;\n};\n\nexport const useChangeAudioInputDevice = (): CallContextReady['changeAudioOutputDevice'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useChangeAudioInputDevice only if Calls are enabled and ready');\n\t}\n\n\treturn context.changeAudioInputDevice;\n};\n\nexport const useCallRegisterClient = (): (() => void) => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallRegisterClient only if Calls are enabled and ready');\n\t}\n\n\treturn context.register;\n};\n\nexport const useCallUnregisterClient = (): (() => void) => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallUnregisterClient only if Calls are enabled and ready');\n\t}\n\n\treturn context.unregister;\n};\n\nexport const useVoipOutboundStates = (): {\n\toutBoundCallsAllowed: boolean;\n\toutBoundCallsEnabled: boolean;\n\toutBoundCallsEnabledForUser: boolean;\n} => {\n\tconst isEnterprise = useIsVoipEnterprise();\n\tconst callerInfo = useCallerInfo();\n\n\treturn {\n\t\toutBoundCallsAllowed: isEnterprise,\n\t\toutBoundCallsEnabled: isEnterprise,\n\t\toutBoundCallsEnabledForUser: isEnterprise && !['IN_CALL', 'ON_HOLD', 'UNREGISTERED', 'INITIAL'].includes(callerInfo.state),\n\t};\n};\n\nexport const useVoipNetworkStatus = (): 'online' | 'offline' => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useVoipNetworkStatus only if Calls are enabled and ready');\n\t}\n\n\treturn context.networkStatus;\n};\n"]}}},"code":"var _slicedToArray;\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 0);\nmodule.export({\n  CallContext: function () {\n    return CallContext;\n  },\n  useIsVoipEnterprise: function () {\n    return useIsVoipEnterprise;\n  },\n  useIsCallEnabled: function () {\n    return useIsCallEnabled;\n  },\n  useIsCallReady: function () {\n    return useIsCallReady;\n  },\n  useIsCallError: function () {\n    return useIsCallError;\n  },\n  useCallActions: function () {\n    return useCallActions;\n  },\n  useCallerInfo: function () {\n    return useCallerInfo;\n  },\n  useCallCreateRoom: function () {\n    return useCallCreateRoom;\n  },\n  useCallOpenRoom: function () {\n    return useCallOpenRoom;\n  },\n  useCallClient: function () {\n    return useCallClient;\n  },\n  useQueueName: function () {\n    return useQueueName;\n  },\n  useQueueCounter: function () {\n    return useQueueCounter;\n  },\n  useOpenedRoomInfo: function () {\n    return useOpenedRoomInfo;\n  },\n  useChangeAudioOutputDevice: function () {\n    return useChangeAudioOutputDevice;\n  },\n  useChangeAudioInputDevice: function () {\n    return useChangeAudioInputDevice;\n  },\n  useCallRegisterClient: function () {\n    return useCallRegisterClient;\n  },\n  useCallUnregisterClient: function () {\n    return useCallUnregisterClient;\n  },\n  useVoipOutboundStates: function () {\n    return useVoipOutboundStates;\n  },\n  useVoipNetworkStatus: function () {\n    return useVoipNetworkStatus;\n  }\n});\nvar createContext, useContext, useMemo;\nmodule.link(\"react\", {\n  createContext: function (v) {\n    createContext = v;\n  },\n  useContext: function (v) {\n    useContext = v;\n  },\n  useMemo: function (v) {\n    useMemo = v;\n  }\n}, 0);\nvar useSyncExternalStore;\nmodule.link(\"use-sync-external-store/shim\", {\n  useSyncExternalStore: function (v) {\n    useSyncExternalStore = v;\n  }\n}, 1);\nvar useHasLicenseModule;\nmodule.link(\"../hooks/useHasLicenseModule\", {\n  useHasLicenseModule: function (v) {\n    useHasLicenseModule = v;\n  }\n}, 2);\nvar isCallContextReady = function (context) {\n  return context.ready;\n};\nvar isCallContextError = function (context) {\n  return context.error !== undefined;\n};\nvar CallContextValueDefault = {\n  enabled: false,\n  ready: false,\n  outBoundCallsAllowed: undefined,\n  outBoundCallsEnabled: undefined,\n  outBoundCallsEnabledForUser: undefined\n};\nvar CallContext = /*#__PURE__*/createContext(CallContextValueDefault);\nvar useIsVoipEnterprise = function () {\n  return useHasLicenseModule('voip-enterprise') === true;\n};\nvar useIsCallEnabled = function () {\n  var _useContext = useContext(CallContext),\n    enabled = _useContext.enabled;\n  return enabled;\n};\nvar useIsCallReady = function () {\n  var _useContext2 = useContext(CallContext),\n    ready = _useContext2.ready;\n  return Boolean(ready);\n};\nvar useIsCallError = function () {\n  var context = useContext(CallContext);\n  return Boolean(isCallContextError(context));\n};\nvar useCallActions = function () {\n  var context = useContext(CallContext);\n  if (!isCallContextReady(context)) {\n    throw new Error('useCallActions only if Calls are enabled and ready');\n  }\n  return context.actions;\n};\nvar useCallerInfo = function () {\n  var context = useContext(CallContext);\n  if (!isCallContextReady(context)) {\n    throw new Error('useCallerInfo only if Calls are enabled and ready');\n  }\n  var voipClient = context.voipClient;\n  var _useMemo = useMemo(function () {\n      var caller = voipClient.callerInfo;\n      var callback = function (cb) {\n        return voipClient.on('stateChanged', function () {\n          caller = voipClient.callerInfo;\n          cb();\n        });\n      };\n      var getSnapshot = function () {\n        return caller;\n      };\n      return [callback, getSnapshot];\n    }, [voipClient]),\n    _useMemo2 = _slicedToArray(_useMemo, 2),\n    subscribe = _useMemo2[0],\n    getSnapshot = _useMemo2[1];\n  return useSyncExternalStore(subscribe, getSnapshot);\n};\nvar useCallCreateRoom = function () {\n  var context = useContext(CallContext);\n  if (!isCallContextReady(context)) {\n    throw new Error('useCallCreateRoom only if Calls are enabled and ready');\n  }\n  return context.createRoom;\n};\nvar useCallOpenRoom = function () {\n  var context = useContext(CallContext);\n  if (!isCallContextReady(context)) {\n    throw new Error('useCallOpenRoom only if Calls are enabled and ready');\n  }\n  return context.openRoom;\n};\nvar useCallClient = function () {\n  var context = useContext(CallContext);\n  if (!isCallContextReady(context)) {\n    throw new Error('useCallClient only if Calls are enabled and ready');\n  }\n  return context.voipClient;\n};\nvar useQueueName = function () {\n  var context = useContext(CallContext);\n  if (!isCallContextReady(context)) {\n    throw new Error('useQueueName only if Calls are enabled and ready');\n  }\n  return context.queueName;\n};\nvar useQueueCounter = function () {\n  var context = useContext(CallContext);\n  if (!isCallContextReady(context)) {\n    throw new Error('useQueueCounter only if Calls are enabled and ready');\n  }\n  return context.queueCounter;\n};\nvar useOpenedRoomInfo = function () {\n  var context = useContext(CallContext);\n  if (!isCallContextReady(context)) {\n    throw new Error('useOpenedRoomInfo only if Calls are enabled and ready');\n  }\n  return context.openedRoomInfo;\n};\nvar useChangeAudioOutputDevice = function () {\n  var context = useContext(CallContext);\n  if (!isCallContextReady(context)) {\n    throw new Error('useChangeAudioOutputDevice only if Calls are enabled and ready');\n  }\n  return context.changeAudioOutputDevice;\n};\nvar useChangeAudioInputDevice = function () {\n  var context = useContext(CallContext);\n  if (!isCallContextReady(context)) {\n    throw new Error('useChangeAudioInputDevice only if Calls are enabled and ready');\n  }\n  return context.changeAudioInputDevice;\n};\nvar useCallRegisterClient = function () {\n  var context = useContext(CallContext);\n  if (!isCallContextReady(context)) {\n    throw new Error('useCallRegisterClient only if Calls are enabled and ready');\n  }\n  return context.register;\n};\nvar useCallUnregisterClient = function () {\n  var context = useContext(CallContext);\n  if (!isCallContextReady(context)) {\n    throw new Error('useCallUnregisterClient only if Calls are enabled and ready');\n  }\n  return context.unregister;\n};\nvar useVoipOutboundStates = function () {\n  var isEnterprise = useIsVoipEnterprise();\n  var callerInfo = useCallerInfo();\n  return {\n    outBoundCallsAllowed: isEnterprise,\n    outBoundCallsEnabled: isEnterprise,\n    outBoundCallsEnabledForUser: isEnterprise && !['IN_CALL', 'ON_HOLD', 'UNREGISTERED', 'INITIAL'].includes(callerInfo.state)\n  };\n};\nvar useVoipNetworkStatus = function () {\n  var context = useContext(CallContext);\n  if (!isCallContextReady(context)) {\n    throw new Error('useVoipNetworkStatus only if Calls are enabled and ready');\n  }\n  return context.networkStatus;\n};","map":{"version":3,"names":["_slicedToArray","module","link","default","v","export","CallContext","useIsVoipEnterprise","useIsCallEnabled","useIsCallReady","useIsCallError","useCallActions","useCallerInfo","useCallCreateRoom","useCallOpenRoom","useCallClient","useQueueName","useQueueCounter","useOpenedRoomInfo","useChangeAudioOutputDevice","useChangeAudioInputDevice","useCallRegisterClient","useCallUnregisterClient","useVoipOutboundStates","useVoipNetworkStatus","createContext","useContext","useMemo","useSyncExternalStore","useHasLicenseModule","isCallContextReady","context","ready","isCallContextError","error","undefined","CallContextValueDefault","enabled","outBoundCallsAllowed","outBoundCallsEnabled","outBoundCallsEnabledForUser","_useContext","_useContext2","Boolean","Error","actions","voipClient","_useMemo","caller","callerInfo","callback","cb","on","getSnapshot","_useMemo2","subscribe","createRoom","openRoom","queueName","queueCounter","openedRoomInfo","changeAudioOutputDevice","changeAudioInputDevice","register","unregister","isEnterprise","includes","state","networkStatus"],"sources":["client/contexts/CallContext.ts"],"sourcesContent":["import type { IVoipRoom, ICallerInfo, VoIpCallerInfo } from '@rocket.chat/core-typings';\nimport type { Device } from '@rocket.chat/ui-contexts';\nimport { createContext, useContext, useMemo } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nimport { useHasLicenseModule } from '../hooks/useHasLicenseModule';\nimport type { VoIPUser } from '../lib/voip/VoIPUser';\n\nexport type CallContextValue = CallContextDisabled | CallContextReady | CallContextError | CallContextEnabled;\n\ntype CallContextDisabled = {\n\tenabled: false;\n\tready: false;\n\toutBoundCallsAllowed: undefined;\n\toutBoundCallsEnabled: undefined;\n\toutBoundCallsEnabledForUser: undefined;\n};\n\ntype CallContextEnabled = {\n\tenabled: true;\n\tready: unknown;\n\toutBoundCallsAllowed: undefined;\n\toutBoundCallsEnabled: undefined;\n\toutBoundCallsEnabledForUser: undefined;\n};\n\ntype CallContextReady = {\n\toutBoundCallsEnabled: boolean;\n\toutBoundCallsAllowed: boolean;\n\toutBoundCallsEnabledForUser: boolean;\n\tenabled: true;\n\tready: true;\n\tvoipClient: VoIPUser;\n\tactions: CallActionsType;\n\tqueueName: string;\n\tqueueCounter: number;\n\tnetworkStatus: 'online' | 'offline';\n\topenedRoomInfo: { v: { token?: string }; rid: string };\n\topenWrapUpModal: () => void;\n\topenRoom: (rid: IVoipRoom['_id']) => void;\n\tcreateRoom: (caller: ICallerInfo) => Promise<IVoipRoom['_id']>;\n\tcloseRoom: (data?: { comment?: string; tags?: string[] }) => void;\n\tchangeAudioOutputDevice: (selectedAudioDevices: Device) => void;\n\tchangeAudioInputDevice: (selectedAudioDevices: Device) => void;\n\tregister: () => void;\n\tunregister: () => void;\n};\n\ntype CallContextError = {\n\tenabled: true;\n\tready: false;\n\toutBoundCallsAllowed: undefined;\n\toutBoundCallsEnabled: undefined;\n\toutBoundCallsEnabledForUser: undefined;\n\terror: Error | unknown;\n};\n\nconst isCallContextReady = (context: CallContextValue): context is CallContextReady => (context as CallContextReady).ready;\n\nconst isCallContextError = (context: CallContextValue): context is CallContextError => (context as CallContextError).error !== undefined;\n\nexport type CallActionsType = {\n\tmute: () => unknown;\n\tunmute: () => unknown;\n\tpause: () => unknown;\n\tresume: () => unknown;\n\tend: () => unknown;\n\tpickUp: () => unknown;\n\treject: () => unknown;\n};\n\nconst CallContextValueDefault: CallContextValue = {\n\tenabled: false,\n\tready: false,\n\toutBoundCallsAllowed: undefined,\n\toutBoundCallsEnabled: undefined,\n\toutBoundCallsEnabledForUser: undefined,\n};\n\nexport const CallContext = createContext<CallContextValue>(CallContextValueDefault);\n\nexport const useIsVoipEnterprise = (): boolean => useHasLicenseModule('voip-enterprise') === true;\n\nexport const useIsCallEnabled = (): boolean => {\n\tconst { enabled } = useContext(CallContext);\n\treturn enabled;\n};\n\nexport const useIsCallReady = (): boolean => {\n\tconst { ready } = useContext(CallContext);\n\n\treturn Boolean(ready);\n};\nexport const useIsCallError = (): boolean => {\n\tconst context = useContext(CallContext);\n\treturn Boolean(isCallContextError(context));\n};\n\nexport const useCallActions = (): CallActionsType => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallActions only if Calls are enabled and ready');\n\t}\n\treturn context.actions;\n};\n\nexport const useCallerInfo = (): VoIpCallerInfo => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallerInfo only if Calls are enabled and ready');\n\t}\n\n\tconst { voipClient } = context;\n\n\tconst [subscribe, getSnapshot] = useMemo(() => {\n\t\tlet caller: VoIpCallerInfo = voipClient.callerInfo;\n\n\t\tconst callback = (cb: () => void): (() => void) =>\n\t\t\tvoipClient.on('stateChanged', () => {\n\t\t\t\tcaller = voipClient.callerInfo;\n\t\t\t\tcb();\n\t\t\t});\n\n\t\tconst getSnapshot = (): VoIpCallerInfo => caller;\n\t\treturn [callback, getSnapshot];\n\t}, [voipClient]);\n\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useCallCreateRoom = (): CallContextReady['createRoom'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallCreateRoom only if Calls are enabled and ready');\n\t}\n\n\treturn context.createRoom;\n};\n\nexport const useCallOpenRoom = (): CallContextReady['openRoom'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallOpenRoom only if Calls are enabled and ready');\n\t}\n\n\treturn context.openRoom;\n};\n\nexport const useCallClient = (): VoIPUser => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallClient only if Calls are enabled and ready');\n\t}\n\n\treturn context.voipClient;\n};\n\nexport const useQueueName = (): CallContextReady['queueName'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useQueueName only if Calls are enabled and ready');\n\t}\n\n\treturn context.queueName;\n};\n\nexport const useQueueCounter = (): CallContextReady['queueCounter'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useQueueCounter only if Calls are enabled and ready');\n\t}\n\n\treturn context.queueCounter;\n};\n\nexport const useOpenedRoomInfo = (): CallContextReady['openedRoomInfo'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useOpenedRoomInfo only if Calls are enabled and ready');\n\t}\n\n\treturn context.openedRoomInfo;\n};\n\nexport const useChangeAudioOutputDevice = (): CallContextReady['changeAudioOutputDevice'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useChangeAudioOutputDevice only if Calls are enabled and ready');\n\t}\n\n\treturn context.changeAudioOutputDevice;\n};\n\nexport const useChangeAudioInputDevice = (): CallContextReady['changeAudioOutputDevice'] => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useChangeAudioInputDevice only if Calls are enabled and ready');\n\t}\n\n\treturn context.changeAudioInputDevice;\n};\n\nexport const useCallRegisterClient = (): (() => void) => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallRegisterClient only if Calls are enabled and ready');\n\t}\n\n\treturn context.register;\n};\n\nexport const useCallUnregisterClient = (): (() => void) => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useCallUnregisterClient only if Calls are enabled and ready');\n\t}\n\n\treturn context.unregister;\n};\n\nexport const useVoipOutboundStates = (): {\n\toutBoundCallsAllowed: boolean;\n\toutBoundCallsEnabled: boolean;\n\toutBoundCallsEnabledForUser: boolean;\n} => {\n\tconst isEnterprise = useIsVoipEnterprise();\n\tconst callerInfo = useCallerInfo();\n\n\treturn {\n\t\toutBoundCallsAllowed: isEnterprise,\n\t\toutBoundCallsEnabled: isEnterprise,\n\t\toutBoundCallsEnabledForUser: isEnterprise && !['IN_CALL', 'ON_HOLD', 'UNREGISTERED', 'INITIAL'].includes(callerInfo.state),\n\t};\n};\n\nexport const useVoipNetworkStatus = (): 'online' | 'offline' => {\n\tconst context = useContext(CallContext);\n\n\tif (!isCallContextReady(context)) {\n\t\tthrow new Error('useVoipNetworkStatus only if Calls are enabled and ready');\n\t}\n\n\treturn context.networkStatus;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"079d0e1c3201540b0a101e8e40caf283e730af92"}
