{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveUser/saveUser.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/saveUser/saveUser.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveUser/saveUser.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/saveUser/saveUser.ts","sourceRoot":"","sources":["app/lib/server/functions/saveUser/saveUser.ts"],"names":[],"mappings":"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","sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport type { DeepWritable, DeepPartial } from '@rocket.chat/core-typings';\nimport { isUserFederated, type IUser, type IRole, type IUserSettings, type RequiredField } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport type { UpdateFilter } from 'mongodb';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { safeGetMeteorUser } from '../../../../utils/server/functions/safeGetMeteorUser';\nimport { generatePassword } from '../../lib/generatePassword';\nimport { notifyOnUserChange } from '../../lib/notifyListener';\nimport { passwordPolicy } from '../../lib/passwordPolicy';\nimport { saveUserIdentity } from '../saveUserIdentity';\nimport { setEmail } from '../setEmail';\nimport { setStatusText } from '../setStatusText';\nimport { handleBio } from './handleBio';\nimport { handleNickname } from './handleNickname';\nimport { saveNewUser } from './saveNewUser';\nimport { sendPasswordEmail } from './sendUserEmail';\nimport { validateUserData } from './validateUserData';\nimport { validateUserEditing } from './validateUserEditing';\n\nexport type SaveUserData = {\n\t_id?: IUser['_id'];\n\tsetRandomPassword?: boolean;\n\n\tpassword?: string;\n\trequirePasswordChange?: boolean;\n\n\tusername?: string;\n\tname?: string;\n\n\tstatusText?: string;\n\temail?: string;\n\tverified?: boolean;\n\n\tbio?: string;\n\tnickname?: string;\n\n\troles?: IRole['_id'][];\n\tsettings?: Partial<IUserSettings>;\n\tlanguage?: string;\n\n\tjoinDefaultChannels?: boolean;\n\tsendWelcomeEmail?: boolean;\n};\n\nexport const saveUser = async function (userId: IUser['_id'], userData: SaveUserData) {\n\tconst oldUserData = userData._id && (await Users.findOneById(userData._id));\n\tif (oldUserData && isUserFederated(oldUserData)) {\n\t\tthrow new Meteor.Error('Edit_Federated_User_Not_Allowed', 'Not possible to edit a federated user');\n\t}\n\n\tawait validateUserData(userId, userData);\n\n\tawait callbacks.run('beforeSaveUser', {\n\t\tuser: userData,\n\t\toldUser: oldUserData,\n\t});\n\n\tlet sendPassword = false;\n\n\tif (userData.hasOwnProperty('setRandomPassword')) {\n\t\tif (userData.setRandomPassword) {\n\t\t\tuserData.password = generatePassword();\n\t\t\tuserData.requirePasswordChange = true;\n\t\t\tsendPassword = true;\n\t\t}\n\n\t\tdelete userData.setRandomPassword;\n\t}\n\n\tif (!userData._id) {\n\t\treturn saveNewUser(userData, sendPassword);\n\t}\n\n\tawait validateUserEditing(userId, userData as RequiredField<SaveUserData, '_id'>);\n\n\t// update user\n\tif (userData.hasOwnProperty('username') || userData.hasOwnProperty('name')) {\n\t\tif (\n\t\t\t!(await saveUserIdentity({\n\t\t\t\t_id: userData._id,\n\t\t\t\tusername: userData.username,\n\t\t\t\tname: userData.name,\n\t\t\t\tupdateUsernameInBackground: true,\n\t\t\t}))\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-could-not-save-identity', 'Could not save user identity', {\n\t\t\t\tmethod: 'saveUser',\n\t\t\t});\n\t\t}\n\t}\n\n\tif (typeof userData.statusText === 'string') {\n\t\tawait setStatusText(userData._id, userData.statusText);\n\t}\n\n\tif (userData.email) {\n\t\tconst shouldSendVerificationEmailToUser = userData.verified !== true;\n\t\tawait setEmail(userData._id, userData.email, shouldSendVerificationEmailToUser);\n\t}\n\n\tif (\n\t\tuserData.password?.trim() &&\n\t\t(await hasPermissionAsync(userId, 'edit-other-user-password')) &&\n\t\tpasswordPolicy.validate(userData.password)\n\t) {\n\t\tawait Accounts.setPasswordAsync(userData._id, userData.password.trim());\n\t} else {\n\t\tsendPassword = false;\n\t}\n\n\tconst updateUser: RequiredField<DeepWritable<UpdateFilter<DeepPartial<IUser>>>, '$set' | '$unset'> = {\n\t\t$set: {},\n\t\t$unset: {},\n\t};\n\n\thandleBio(updateUser, userData.bio);\n\thandleNickname(updateUser, userData.nickname);\n\n\tif (userData.roles) {\n\t\tupdateUser.$set.roles = userData.roles;\n\t}\n\tif (userData.settings) {\n\t\tupdateUser.$set.settings = { preferences: userData.settings.preferences };\n\t}\n\n\tif (userData.language) {\n\t\tupdateUser.$set.language = userData.language;\n\t}\n\n\tif (typeof userData.requirePasswordChange !== 'undefined') {\n\t\tupdateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n\t\tif (!userData.requirePasswordChange) {\n\t\t\tupdateUser.$unset.requirePasswordChangeReason = 1;\n\t\t}\n\t}\n\n\tif (typeof userData.verified === 'boolean') {\n\t\tupdateUser.$set['emails.0.verified'] = userData.verified;\n\t}\n\n\tawait Users.updateOne({ _id: userData._id }, updateUser as UpdateFilter<IUser>);\n\n\t// App IPostUserUpdated event hook\n\tconst userUpdated = await Users.findOneById(userData._id);\n\n\tawait callbacks.run('afterSaveUser', {\n\t\tuser: userUpdated,\n\t\toldUser: oldUserData,\n\t});\n\n\tawait Apps.self?.triggerEvent(AppEvents.IPostUserUpdated, {\n\t\tuser: userUpdated,\n\t\tpreviousUser: oldUserData,\n\t\tperformedBy: await safeGetMeteorUser(),\n\t});\n\n\tif (sendPassword) {\n\t\tawait sendPasswordEmail(userData);\n\t}\n\n\tif (typeof userData.verified === 'boolean') {\n\t\tdelete userData.verified;\n\t}\n\tvoid notifyOnUserChange({\n\t\tclientAction: 'updated',\n\t\tid: userData._id,\n\t\tdiff: {\n\t\t\t...userData,\n\t\t\temails: userUpdated?.emails,\n\t\t},\n\t});\n\n\treturn true;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveUser/saveUser.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/saveUser/saveUser.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/saveUser/saveUser.ts","sourceRoot":"","sources":["app/lib/server/functions/saveUser/saveUser.ts"],"names":[],"mappings":"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","sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport type { DeepWritable, DeepPartial } from '@rocket.chat/core-typings';\nimport { isUserFederated, type IUser, type IRole, type IUserSettings, type RequiredField } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport type { UpdateFilter } from 'mongodb';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { safeGetMeteorUser } from '../../../../utils/server/functions/safeGetMeteorUser';\nimport { generatePassword } from '../../lib/generatePassword';\nimport { notifyOnUserChange } from '../../lib/notifyListener';\nimport { passwordPolicy } from '../../lib/passwordPolicy';\nimport { saveUserIdentity } from '../saveUserIdentity';\nimport { setEmail } from '../setEmail';\nimport { setStatusText } from '../setStatusText';\nimport { handleBio } from './handleBio';\nimport { handleNickname } from './handleNickname';\nimport { saveNewUser } from './saveNewUser';\nimport { sendPasswordEmail } from './sendUserEmail';\nimport { validateUserData } from './validateUserData';\nimport { validateUserEditing } from './validateUserEditing';\n\nexport type SaveUserData = {\n\t_id?: IUser['_id'];\n\tsetRandomPassword?: boolean;\n\n\tpassword?: string;\n\trequirePasswordChange?: boolean;\n\n\tusername?: string;\n\tname?: string;\n\n\tstatusText?: string;\n\temail?: string;\n\tverified?: boolean;\n\n\tbio?: string;\n\tnickname?: string;\n\n\troles?: IRole['_id'][];\n\tsettings?: Partial<IUserSettings>;\n\tlanguage?: string;\n\n\tjoinDefaultChannels?: boolean;\n\tsendWelcomeEmail?: boolean;\n};\n\nexport const saveUser = async function (userId: IUser['_id'], userData: SaveUserData) {\n\tconst oldUserData = userData._id && (await Users.findOneById(userData._id));\n\tif (oldUserData && isUserFederated(oldUserData)) {\n\t\tthrow new Meteor.Error('Edit_Federated_User_Not_Allowed', 'Not possible to edit a federated user');\n\t}\n\n\tawait validateUserData(userId, userData);\n\n\tawait callbacks.run('beforeSaveUser', {\n\t\tuser: userData,\n\t\toldUser: oldUserData,\n\t});\n\n\tlet sendPassword = false;\n\n\tif (userData.hasOwnProperty('setRandomPassword')) {\n\t\tif (userData.setRandomPassword) {\n\t\t\tuserData.password = generatePassword();\n\t\t\tuserData.requirePasswordChange = true;\n\t\t\tsendPassword = true;\n\t\t}\n\n\t\tdelete userData.setRandomPassword;\n\t}\n\n\tif (!userData._id) {\n\t\treturn saveNewUser(userData, sendPassword);\n\t}\n\n\tawait validateUserEditing(userId, userData as RequiredField<SaveUserData, '_id'>);\n\n\t// update user\n\tif (userData.hasOwnProperty('username') || userData.hasOwnProperty('name')) {\n\t\tif (\n\t\t\t!(await saveUserIdentity({\n\t\t\t\t_id: userData._id,\n\t\t\t\tusername: userData.username,\n\t\t\t\tname: userData.name,\n\t\t\t\tupdateUsernameInBackground: true,\n\t\t\t}))\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-could-not-save-identity', 'Could not save user identity', {\n\t\t\t\tmethod: 'saveUser',\n\t\t\t});\n\t\t}\n\t}\n\n\tif (typeof userData.statusText === 'string') {\n\t\tawait setStatusText(userData._id, userData.statusText);\n\t}\n\n\tif (userData.email) {\n\t\tconst shouldSendVerificationEmailToUser = userData.verified !== true;\n\t\tawait setEmail(userData._id, userData.email, shouldSendVerificationEmailToUser);\n\t}\n\n\tif (\n\t\tuserData.password?.trim() &&\n\t\t(await hasPermissionAsync(userId, 'edit-other-user-password')) &&\n\t\tpasswordPolicy.validate(userData.password)\n\t) {\n\t\tawait Accounts.setPasswordAsync(userData._id, userData.password.trim());\n\t} else {\n\t\tsendPassword = false;\n\t}\n\n\tconst updateUser: RequiredField<DeepWritable<UpdateFilter<DeepPartial<IUser>>>, '$set' | '$unset'> = {\n\t\t$set: {},\n\t\t$unset: {},\n\t};\n\n\thandleBio(updateUser, userData.bio);\n\thandleNickname(updateUser, userData.nickname);\n\n\tif (userData.roles) {\n\t\tupdateUser.$set.roles = userData.roles;\n\t}\n\tif (userData.settings) {\n\t\tupdateUser.$set.settings = { preferences: userData.settings.preferences };\n\t}\n\n\tif (userData.language) {\n\t\tupdateUser.$set.language = userData.language;\n\t}\n\n\tif (typeof userData.requirePasswordChange !== 'undefined') {\n\t\tupdateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n\t\tif (!userData.requirePasswordChange) {\n\t\t\tupdateUser.$unset.requirePasswordChangeReason = 1;\n\t\t}\n\t}\n\n\tif (typeof userData.verified === 'boolean') {\n\t\tupdateUser.$set['emails.0.verified'] = userData.verified;\n\t}\n\n\tawait Users.updateOne({ _id: userData._id }, updateUser as UpdateFilter<IUser>);\n\n\t// App IPostUserUpdated event hook\n\tconst userUpdated = await Users.findOneById(userData._id);\n\n\tawait callbacks.run('afterSaveUser', {\n\t\tuser: userUpdated,\n\t\toldUser: oldUserData,\n\t});\n\n\tawait Apps.self?.triggerEvent(AppEvents.IPostUserUpdated, {\n\t\tuser: userUpdated,\n\t\tpreviousUser: oldUserData,\n\t\tperformedBy: await safeGetMeteorUser(),\n\t});\n\n\tif (sendPassword) {\n\t\tawait sendPasswordEmail(userData);\n\t}\n\n\tif (typeof userData.verified === 'boolean') {\n\t\tdelete userData.verified;\n\t}\n\tvoid notifyOnUserChange({\n\t\tclientAction: 'updated',\n\t\tid: userData._id,\n\t\tdiff: {\n\t\t\t...userData,\n\t\t\temails: userUpdated?.emails,\n\t\t},\n\t});\n\n\treturn true;\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      saveUser: () => saveUser\n    });\n    let Apps, AppEvents;\n    module.link(\"@rocket.chat/apps\", {\n      Apps(v) {\n        Apps = v;\n      },\n      AppEvents(v) {\n        AppEvents = v;\n      }\n    }, 0);\n    let isUserFederated;\n    module.link(\"@rocket.chat/core-typings\", {\n      isUserFederated(v) {\n        isUserFederated = v;\n      }\n    }, 1);\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 2);\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 3);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 4);\n    let callbacks;\n    module.link(\"../../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 5);\n    let hasPermissionAsync;\n    module.link(\"../../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 6);\n    let safeGetMeteorUser;\n    module.link(\"../../../../utils/server/functions/safeGetMeteorUser\", {\n      safeGetMeteorUser(v) {\n        safeGetMeteorUser = v;\n      }\n    }, 7);\n    let generatePassword;\n    module.link(\"../../lib/generatePassword\", {\n      generatePassword(v) {\n        generatePassword = v;\n      }\n    }, 8);\n    let notifyOnUserChange;\n    module.link(\"../../lib/notifyListener\", {\n      notifyOnUserChange(v) {\n        notifyOnUserChange = v;\n      }\n    }, 9);\n    let passwordPolicy;\n    module.link(\"../../lib/passwordPolicy\", {\n      passwordPolicy(v) {\n        passwordPolicy = v;\n      }\n    }, 10);\n    let saveUserIdentity;\n    module.link(\"../saveUserIdentity\", {\n      saveUserIdentity(v) {\n        saveUserIdentity = v;\n      }\n    }, 11);\n    let setEmail;\n    module.link(\"../setEmail\", {\n      setEmail(v) {\n        setEmail = v;\n      }\n    }, 12);\n    let setStatusText;\n    module.link(\"../setStatusText\", {\n      setStatusText(v) {\n        setStatusText = v;\n      }\n    }, 13);\n    let handleBio;\n    module.link(\"./handleBio\", {\n      handleBio(v) {\n        handleBio = v;\n      }\n    }, 14);\n    let handleNickname;\n    module.link(\"./handleNickname\", {\n      handleNickname(v) {\n        handleNickname = v;\n      }\n    }, 15);\n    let saveNewUser;\n    module.link(\"./saveNewUser\", {\n      saveNewUser(v) {\n        saveNewUser = v;\n      }\n    }, 16);\n    let sendPasswordEmail;\n    module.link(\"./sendUserEmail\", {\n      sendPasswordEmail(v) {\n        sendPasswordEmail = v;\n      }\n    }, 17);\n    let validateUserData;\n    module.link(\"./validateUserData\", {\n      validateUserData(v) {\n        validateUserData = v;\n      }\n    }, 18);\n    let validateUserEditing;\n    module.link(\"./validateUserEditing\", {\n      validateUserEditing(v) {\n        validateUserEditing = v;\n      }\n    }, 19);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const saveUser = async function (userId, userData) {\n      var _userData$password, _Apps$self;\n      const oldUserData = userData._id && (await Users.findOneById(userData._id));\n      if (oldUserData && isUserFederated(oldUserData)) {\n        throw new Meteor.Error('Edit_Federated_User_Not_Allowed', 'Not possible to edit a federated user');\n      }\n      await validateUserData(userId, userData);\n      await callbacks.run('beforeSaveUser', {\n        user: userData,\n        oldUser: oldUserData\n      });\n      let sendPassword = false;\n      if (userData.hasOwnProperty('setRandomPassword')) {\n        if (userData.setRandomPassword) {\n          userData.password = generatePassword();\n          userData.requirePasswordChange = true;\n          sendPassword = true;\n        }\n        delete userData.setRandomPassword;\n      }\n      if (!userData._id) {\n        return saveNewUser(userData, sendPassword);\n      }\n      await validateUserEditing(userId, userData);\n      // update user\n      if (userData.hasOwnProperty('username') || userData.hasOwnProperty('name')) {\n        if (!(await saveUserIdentity({\n          _id: userData._id,\n          username: userData.username,\n          name: userData.name,\n          updateUsernameInBackground: true\n        }))) {\n          throw new Meteor.Error('error-could-not-save-identity', 'Could not save user identity', {\n            method: 'saveUser'\n          });\n        }\n      }\n      if (typeof userData.statusText === 'string') {\n        await setStatusText(userData._id, userData.statusText);\n      }\n      if (userData.email) {\n        const shouldSendVerificationEmailToUser = userData.verified !== true;\n        await setEmail(userData._id, userData.email, shouldSendVerificationEmailToUser);\n      }\n      if ((_userData$password = userData.password) !== null && _userData$password !== void 0 && _userData$password.trim() && (await hasPermissionAsync(userId, 'edit-other-user-password')) && passwordPolicy.validate(userData.password)) {\n        await Accounts.setPasswordAsync(userData._id, userData.password.trim());\n      } else {\n        sendPassword = false;\n      }\n      const updateUser = {\n        $set: {},\n        $unset: {}\n      };\n      handleBio(updateUser, userData.bio);\n      handleNickname(updateUser, userData.nickname);\n      if (userData.roles) {\n        updateUser.$set.roles = userData.roles;\n      }\n      if (userData.settings) {\n        updateUser.$set.settings = {\n          preferences: userData.settings.preferences\n        };\n      }\n      if (userData.language) {\n        updateUser.$set.language = userData.language;\n      }\n      if (typeof userData.requirePasswordChange !== 'undefined') {\n        updateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n        if (!userData.requirePasswordChange) {\n          updateUser.$unset.requirePasswordChangeReason = 1;\n        }\n      }\n      if (typeof userData.verified === 'boolean') {\n        updateUser.$set['emails.0.verified'] = userData.verified;\n      }\n      await Users.updateOne({\n        _id: userData._id\n      }, updateUser);\n      // App IPostUserUpdated event hook\n      const userUpdated = await Users.findOneById(userData._id);\n      await callbacks.run('afterSaveUser', {\n        user: userUpdated,\n        oldUser: oldUserData\n      });\n      await ((_Apps$self = Apps.self) === null || _Apps$self === void 0 ? void 0 : _Apps$self.triggerEvent(AppEvents.IPostUserUpdated, {\n        user: userUpdated,\n        previousUser: oldUserData,\n        performedBy: await safeGetMeteorUser()\n      }));\n      if (sendPassword) {\n        await sendPasswordEmail(userData);\n      }\n      if (typeof userData.verified === 'boolean') {\n        delete userData.verified;\n      }\n      void notifyOnUserChange({\n        clientAction: 'updated',\n        id: userData._id,\n        diff: _objectSpread(_objectSpread({}, userData), {}, {\n          emails: userUpdated === null || userUpdated === void 0 ? void 0 : userUpdated.emails\n        })\n      });\n      return true;\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","saveUser","Apps","AppEvents","isUserFederated","Users","Accounts","Meteor","callbacks","hasPermissionAsync","safeGetMeteorUser","generatePassword","notifyOnUserChange","passwordPolicy","saveUserIdentity","setEmail","setStatusText","handleBio","handleNickname","saveNewUser","sendPasswordEmail","validateUserData","validateUserEditing","__reifyWaitForDeps__","userId","userData","_userData$password","_Apps$self","oldUserData","_id","findOneById","Error","run","user","oldUser","sendPassword","hasOwnProperty","setRandomPassword","password","requirePasswordChange","username","name","updateUsernameInBackground","method","statusText","email","shouldSendVerificationEmailToUser","verified","trim","validate","setPasswordAsync","updateUser","$set","$unset","bio","nickname","roles","settings","preferences","language","requirePasswordChangeReason","updateOne","userUpdated","self","triggerEvent","IPostUserUpdated","previousUser","performedBy","clientAction","id","diff","emails","__reify_async_result__","_reifyError","async"],"sources":["app/lib/server/functions/saveUser/saveUser.ts"],"sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport type { DeepWritable, DeepPartial } from '@rocket.chat/core-typings';\nimport { isUserFederated, type IUser, type IRole, type IUserSettings, type RequiredField } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport type { UpdateFilter } from 'mongodb';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { safeGetMeteorUser } from '../../../../utils/server/functions/safeGetMeteorUser';\nimport { generatePassword } from '../../lib/generatePassword';\nimport { notifyOnUserChange } from '../../lib/notifyListener';\nimport { passwordPolicy } from '../../lib/passwordPolicy';\nimport { saveUserIdentity } from '../saveUserIdentity';\nimport { setEmail } from '../setEmail';\nimport { setStatusText } from '../setStatusText';\nimport { handleBio } from './handleBio';\nimport { handleNickname } from './handleNickname';\nimport { saveNewUser } from './saveNewUser';\nimport { sendPasswordEmail } from './sendUserEmail';\nimport { validateUserData } from './validateUserData';\nimport { validateUserEditing } from './validateUserEditing';\n\nexport type SaveUserData = {\n\t_id?: IUser['_id'];\n\tsetRandomPassword?: boolean;\n\n\tpassword?: string;\n\trequirePasswordChange?: boolean;\n\n\tusername?: string;\n\tname?: string;\n\n\tstatusText?: string;\n\temail?: string;\n\tverified?: boolean;\n\n\tbio?: string;\n\tnickname?: string;\n\n\troles?: IRole['_id'][];\n\tsettings?: Partial<IUserSettings>;\n\tlanguage?: string;\n\n\tjoinDefaultChannels?: boolean;\n\tsendWelcomeEmail?: boolean;\n};\n\nexport const saveUser = async function (userId: IUser['_id'], userData: SaveUserData) {\n\tconst oldUserData = userData._id && (await Users.findOneById(userData._id));\n\tif (oldUserData && isUserFederated(oldUserData)) {\n\t\tthrow new Meteor.Error('Edit_Federated_User_Not_Allowed', 'Not possible to edit a federated user');\n\t}\n\n\tawait validateUserData(userId, userData);\n\n\tawait callbacks.run('beforeSaveUser', {\n\t\tuser: userData,\n\t\toldUser: oldUserData,\n\t});\n\n\tlet sendPassword = false;\n\n\tif (userData.hasOwnProperty('setRandomPassword')) {\n\t\tif (userData.setRandomPassword) {\n\t\t\tuserData.password = generatePassword();\n\t\t\tuserData.requirePasswordChange = true;\n\t\t\tsendPassword = true;\n\t\t}\n\n\t\tdelete userData.setRandomPassword;\n\t}\n\n\tif (!userData._id) {\n\t\treturn saveNewUser(userData, sendPassword);\n\t}\n\n\tawait validateUserEditing(userId, userData as RequiredField<SaveUserData, '_id'>);\n\n\t// update user\n\tif (userData.hasOwnProperty('username') || userData.hasOwnProperty('name')) {\n\t\tif (\n\t\t\t!(await saveUserIdentity({\n\t\t\t\t_id: userData._id,\n\t\t\t\tusername: userData.username,\n\t\t\t\tname: userData.name,\n\t\t\t\tupdateUsernameInBackground: true,\n\t\t\t}))\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-could-not-save-identity', 'Could not save user identity', {\n\t\t\t\tmethod: 'saveUser',\n\t\t\t});\n\t\t}\n\t}\n\n\tif (typeof userData.statusText === 'string') {\n\t\tawait setStatusText(userData._id, userData.statusText);\n\t}\n\n\tif (userData.email) {\n\t\tconst shouldSendVerificationEmailToUser = userData.verified !== true;\n\t\tawait setEmail(userData._id, userData.email, shouldSendVerificationEmailToUser);\n\t}\n\n\tif (\n\t\tuserData.password?.trim() &&\n\t\t(await hasPermissionAsync(userId, 'edit-other-user-password')) &&\n\t\tpasswordPolicy.validate(userData.password)\n\t) {\n\t\tawait Accounts.setPasswordAsync(userData._id, userData.password.trim());\n\t} else {\n\t\tsendPassword = false;\n\t}\n\n\tconst updateUser: RequiredField<DeepWritable<UpdateFilter<DeepPartial<IUser>>>, '$set' | '$unset'> = {\n\t\t$set: {},\n\t\t$unset: {},\n\t};\n\n\thandleBio(updateUser, userData.bio);\n\thandleNickname(updateUser, userData.nickname);\n\n\tif (userData.roles) {\n\t\tupdateUser.$set.roles = userData.roles;\n\t}\n\tif (userData.settings) {\n\t\tupdateUser.$set.settings = { preferences: userData.settings.preferences };\n\t}\n\n\tif (userData.language) {\n\t\tupdateUser.$set.language = userData.language;\n\t}\n\n\tif (typeof userData.requirePasswordChange !== 'undefined') {\n\t\tupdateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n\t\tif (!userData.requirePasswordChange) {\n\t\t\tupdateUser.$unset.requirePasswordChangeReason = 1;\n\t\t}\n\t}\n\n\tif (typeof userData.verified === 'boolean') {\n\t\tupdateUser.$set['emails.0.verified'] = userData.verified;\n\t}\n\n\tawait Users.updateOne({ _id: userData._id }, updateUser as UpdateFilter<IUser>);\n\n\t// App IPostUserUpdated event hook\n\tconst userUpdated = await Users.findOneById(userData._id);\n\n\tawait callbacks.run('afterSaveUser', {\n\t\tuser: userUpdated,\n\t\toldUser: oldUserData,\n\t});\n\n\tawait Apps.self?.triggerEvent(AppEvents.IPostUserUpdated, {\n\t\tuser: userUpdated,\n\t\tpreviousUser: oldUserData,\n\t\tperformedBy: await safeGetMeteorUser(),\n\t});\n\n\tif (sendPassword) {\n\t\tawait sendPasswordEmail(userData);\n\t}\n\n\tif (typeof userData.verified === 'boolean') {\n\t\tdelete userData.verified;\n\t}\n\tvoid notifyOnUserChange({\n\t\tclientAction: 'updated',\n\t\tid: userData._id,\n\t\tdiff: {\n\t\t\t...userData,\n\t\t\temails: userUpdated?.emails,\n\t\t},\n\t});\n\n\treturn true;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"34b550d89e3e28712fb63d7cf336f089d4d7e16e"}
