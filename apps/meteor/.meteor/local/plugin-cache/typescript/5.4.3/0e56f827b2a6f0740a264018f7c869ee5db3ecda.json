{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer/server/classes/ImporterSelectionUser.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/importer/server/classes/ImporterSelectionUser.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer/server/classes/ImporterSelectionUser.ts","inputSourceMap":{"version":3,"file":"app/importer/server/classes/ImporterSelectionUser.ts","sourceRoot":"","sources":["app/importer/server/classes/ImporterSelectionUser.ts"],"names":[],"mappings":"AAEA,MAAM,OAAO,aAAa;IAClB,OAAO,CAAS;IAEhB,QAAQ,CAAqB;IAE7B,KAAK,CAAS;IAEd,UAAU,CAAU;IAEpB,MAAM,CAAU;IAEhB,SAAS,CAAU;IAEnB,cAAc,CAAU;IAE/B;;;;;;;;;;OAUG;IACH,YACC,MAAc,EACd,QAA4B,EAC5B,KAAa,EACb,SAAkB,EAClB,KAAc,EACd,QAAiB,EACjB,YAAY,GAAG,KAAK;QAEpB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC;IACpC,CAAC;CACD","sourcesContent":["import type { IImporterSelectionUser } from '@rocket.chat/core-typings';\n\nexport class SelectionUser implements IImporterSelectionUser {\n\tpublic user_id: string;\n\n\tpublic username: string | undefined;\n\n\tpublic email: string;\n\n\tpublic is_deleted: boolean;\n\n\tpublic is_bot: boolean;\n\n\tpublic do_import: boolean;\n\n\tpublic is_email_taken: boolean;\n\n\t/**\n\t * Constructs a new selection user.\n\t *\n\t * @param userId the unique user identifier\n\t * @param username the user's username\n\t * @param email the user's email\n\t * @param isDeleted whether the user was deleted or not\n\t * @param isBot whether the user is a bot or not\n\t * @param doImport whether we are going to import this user or not\n\t * @param isEmailTaken whether there's an existing user with the same email\n\t */\n\tconstructor(\n\t\tuserId: string,\n\t\tusername: string | undefined,\n\t\temail: string,\n\t\tisDeleted: boolean,\n\t\tisBot: boolean,\n\t\tdoImport: boolean,\n\t\tisEmailTaken = false,\n\t) {\n\t\tthis.user_id = userId;\n\t\tthis.username = username;\n\t\tthis.email = email;\n\t\tthis.is_deleted = isDeleted;\n\t\tthis.is_bot = isBot;\n\t\tthis.do_import = doImport;\n\t\tthis.is_email_taken = isEmailTaken;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer/server/classes/ImporterSelectionUser.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/importer/server/classes/ImporterSelectionUser.ts","inputSourceMap":{"version":3,"file":"app/importer/server/classes/ImporterSelectionUser.ts","sourceRoot":"","sources":["app/importer/server/classes/ImporterSelectionUser.ts"],"names":[],"mappings":"AAEA,MAAM,OAAO,aAAa;IAClB,OAAO,CAAS;IAEhB,QAAQ,CAAqB;IAE7B,KAAK,CAAS;IAEd,UAAU,CAAU;IAEpB,MAAM,CAAU;IAEhB,SAAS,CAAU;IAEnB,cAAc,CAAU;IAE/B;;;;;;;;;;OAUG;IACH,YACC,MAAc,EACd,QAA4B,EAC5B,KAAa,EACb,SAAkB,EAClB,KAAc,EACd,QAAiB,EACjB,YAAY,GAAG,KAAK;QAEpB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC;IACpC,CAAC;CACD","sourcesContent":["import type { IImporterSelectionUser } from '@rocket.chat/core-typings';\n\nexport class SelectionUser implements IImporterSelectionUser {\n\tpublic user_id: string;\n\n\tpublic username: string | undefined;\n\n\tpublic email: string;\n\n\tpublic is_deleted: boolean;\n\n\tpublic is_bot: boolean;\n\n\tpublic do_import: boolean;\n\n\tpublic is_email_taken: boolean;\n\n\t/**\n\t * Constructs a new selection user.\n\t *\n\t * @param userId the unique user identifier\n\t * @param username the user's username\n\t * @param email the user's email\n\t * @param isDeleted whether the user was deleted or not\n\t * @param isBot whether the user is a bot or not\n\t * @param doImport whether we are going to import this user or not\n\t * @param isEmailTaken whether there's an existing user with the same email\n\t */\n\tconstructor(\n\t\tuserId: string,\n\t\tusername: string | undefined,\n\t\temail: string,\n\t\tisDeleted: boolean,\n\t\tisBot: boolean,\n\t\tdoImport: boolean,\n\t\tisEmailTaken = false,\n\t) {\n\t\tthis.user_id = userId;\n\t\tthis.username = username;\n\t\tthis.email = email;\n\t\tthis.is_deleted = isDeleted;\n\t\tthis.is_bot = isBot;\n\t\tthis.do_import = doImport;\n\t\tthis.is_email_taken = isEmailTaken;\n\t}\n}\n"]}}},"code":"module.export({\n  SelectionUser: () => SelectionUser\n});\nclass SelectionUser {\n  /**\n   * Constructs a new selection user.\n   *\n   * @param userId the unique user identifier\n   * @param username the user's username\n   * @param email the user's email\n   * @param isDeleted whether the user was deleted or not\n   * @param isBot whether the user is a bot or not\n   * @param doImport whether we are going to import this user or not\n   * @param isEmailTaken whether there's an existing user with the same email\n   */\n  constructor(userId, username, email, isDeleted, isBot, doImport) {\n    let isEmailTaken = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    this.user_id = void 0;\n    this.username = void 0;\n    this.email = void 0;\n    this.is_deleted = void 0;\n    this.is_bot = void 0;\n    this.do_import = void 0;\n    this.is_email_taken = void 0;\n    this.user_id = userId;\n    this.username = username;\n    this.email = email;\n    this.is_deleted = isDeleted;\n    this.is_bot = isBot;\n    this.do_import = doImport;\n    this.is_email_taken = isEmailTaken;\n  }\n}","map":{"version":3,"names":["module","export","SelectionUser","constructor","userId","username","email","isDeleted","isBot","doImport","isEmailTaken","arguments","length","undefined","user_id","is_deleted","is_bot","do_import","is_email_taken"],"sources":["app/importer/server/classes/ImporterSelectionUser.ts"],"sourcesContent":["import type { IImporterSelectionUser } from '@rocket.chat/core-typings';\n\nexport class SelectionUser implements IImporterSelectionUser {\n\tpublic user_id: string;\n\n\tpublic username: string | undefined;\n\n\tpublic email: string;\n\n\tpublic is_deleted: boolean;\n\n\tpublic is_bot: boolean;\n\n\tpublic do_import: boolean;\n\n\tpublic is_email_taken: boolean;\n\n\t/**\n\t * Constructs a new selection user.\n\t *\n\t * @param userId the unique user identifier\n\t * @param username the user's username\n\t * @param email the user's email\n\t * @param isDeleted whether the user was deleted or not\n\t * @param isBot whether the user is a bot or not\n\t * @param doImport whether we are going to import this user or not\n\t * @param isEmailTaken whether there's an existing user with the same email\n\t */\n\tconstructor(\n\t\tuserId: string,\n\t\tusername: string | undefined,\n\t\temail: string,\n\t\tisDeleted: boolean,\n\t\tisBot: boolean,\n\t\tdoImport: boolean,\n\t\tisEmailTaken = false,\n\t) {\n\t\tthis.user_id = userId;\n\t\tthis.username = username;\n\t\tthis.email = email;\n\t\tthis.is_deleted = isDeleted;\n\t\tthis.is_bot = isBot;\n\t\tthis.do_import = doImport;\n\t\tthis.is_email_taken = isEmailTaken;\n\t}\n}\n"],"mappings":"AAEAA,MAAM,CAAAC,MAAO;EAAAC,aAAa,EAAAA,CAAA,KAAAA;AAAA;AAApB,MAAOA,aAAa;EAezB;;;;;;;;;;;EAWAC,YACCC,MAAc,EACdC,QAA4B,EAC5BC,KAAa,EACbC,SAAkB,EAClBC,KAAc,EACdC,QAAiB,EACG;IAAA,IAApBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;IAAA,KAhCdG,OAAO;IAAA,KAEPT,QAAQ;IAAA,KAERC,KAAK;IAAA,KAELS,UAAU;IAAA,KAEVC,MAAM;IAAA,KAENC,SAAS;IAAA,KAETC,cAAc;IAsBpB,IAAI,CAACJ,OAAO,GAAGV,MAAM;IACrB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACS,UAAU,GAAGR,SAAS;IAC3B,IAAI,CAACS,MAAM,GAAGR,KAAK;IACnB,IAAI,CAACS,SAAS,GAAGR,QAAQ;IACzB,IAAI,CAACS,cAAc,GAAGR,YAAY;EACnC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0e56f827b2a6f0740a264018f7c869ee5db3ecda"}
