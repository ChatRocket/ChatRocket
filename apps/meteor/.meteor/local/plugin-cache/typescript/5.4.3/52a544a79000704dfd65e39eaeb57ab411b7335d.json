{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/updateGroupDMsName.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/updateGroupDMsName.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/updateGroupDMsName.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/updateGroupDMsName.ts","sourceRoot":"","sources":["app/lib/server/functions/updateGroupDMsName.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAElE,OAAO,EAAE,mCAAmC,EAAE,MAAM,uBAAuB,CAAC;AAE5E,MAAM,QAAQ,GAAG,CAAC,OAAgB,EAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChH,MAAM,OAAO,GAAG,CAAC,OAAgB,EAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAEhG,KAAK,UAAU,iCAAiC,CAAC,IAAW;IAC3D,8EAA8E;IAC9E,IAAI,CAAC,MAAM,KAAK,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;QACzD,OAAO;IACR,CAAC;IAED,MAAM,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;IAC1B,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;IAExB,MAAM,KAAK,GAAG,KAAK,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAChF,MAAM,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAChB,OAAO;QACR,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;IAEH,CAAC,MAAM,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,IAAW,EAAE,EAAE,CACjH,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CACzB,CAAC;IAEF,OAAO,KAAK,CAAC;AACd,CAAC;AAED,SAAS,uBAAuB,CAAC,EAAS,EAAE,EAAS;IACpD,oEAAoE;IACpE,OAAO,CAAC,EAAE,CAAC,IAAK,IAAI,EAAE,CAAC,QAAS,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,IAAK,IAAI,EAAE,CAAC,QAAS,CAAC,CAAC;AAC3E,CAAC;AAED,MAAM,CAAC,MAAM,kBAAkB,GAAG,KAAK,EAAE,mBAA0B,EAAiB,EAAE;IACrF,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QACnC,OAAO;IACR,CAAC;IAED,MAAM,KAAK,GAAG,MAAM,iCAAiC,CAAC,mBAAmB,CAAC,CAAC;IAC3E,IAAI,CAAC,KAAK,EAAE,CAAC;QACZ,OAAO;IACR,CAAC;IAED,KAAK,CAAC,GAAG,CAAC,mBAAmB,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;IAExD,MAAM,KAAK,GAAG,KAAK,CAAC,kBAAkB,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAE/F,4EAA4E;IAC5E,MAAM,UAAU,GAAG,CAAC,IAAc,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAEzF,uDAAuD;IACvD,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAChB,OAAO;QACR,CAAC;QAED,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,aAAa,GAAG,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAE5D,MAAM,IAAI,GAAG,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5F,IAAI,KAAK,EAAE,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;YAC9B,MAAM,YAAY,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC1E,MAAM,iBAAiB,GAAG,MAAM,aAAa,CAAC,sBAAsB,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,YAAY,CAAC,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;YAC7H,IAAI,iBAAiB,CAAC,aAAa,EAAE,CAAC;gBACrC,KAAK,mCAAmC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACpD,CAAC;QACF,CAAC;IACF,CAAC;AACF,CAAC,CAAC","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions, Users } from '@rocket.chat/models';\n\nimport { notifyOnSubscriptionChangedByRoomId } from '../lib/notifyListener';\n\nconst getFname = (members: IUser[]): string => members.map(({ name, username }) => name || username).join(', ');\nconst getName = (members: IUser[]): string => members.map(({ username }) => username).join(',');\n\nasync function getUsersWhoAreInTheSameGroupDMsAs(user: IUser) {\n\t// add all users to single array so we can fetch details from them all at once\n\tif ((await Rooms.countGroupDMsByUids([user._id])) === 0) {\n\t\treturn;\n\t}\n\n\tconst userIds = new Set();\n\tconst users = new Map();\n\n\tconst rooms = Rooms.findGroupDMsByUids([user._id], { projection: { uids: 1 } });\n\tawait rooms.forEach((room) => {\n\t\tif (!room.uids) {\n\t\t\treturn;\n\t\t}\n\n\t\troom.uids.forEach((uid) => uid !== user._id && userIds.add(uid));\n\t});\n\n\t(await Users.findByIds([...userIds], { projection: { username: 1, name: 1 } }).toArray()).forEach((user: IUser) =>\n\t\tusers.set(user._id, user),\n\t);\n\n\treturn users;\n}\n\nfunction sortUsersAlphabetically(u1: IUser, u2: IUser): number {\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\treturn (u1.name! || u1.username!).localeCompare(u2.name! || u2.username!);\n}\n\nexport const updateGroupDMsName = async (userThatChangedName: IUser): Promise<void> => {\n\tif (!userThatChangedName.username) {\n\t\treturn;\n\t}\n\n\tconst users = await getUsersWhoAreInTheSameGroupDMsAs(userThatChangedName);\n\tif (!users) {\n\t\treturn;\n\t}\n\n\tusers.set(userThatChangedName._id, userThatChangedName);\n\n\tconst rooms = Rooms.findGroupDMsByUids([userThatChangedName._id], { projection: { uids: 1 } });\n\n\t// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\tconst getMembers = (uids: string[]) => uids.map((uid) => users.get(uid)).filter(Boolean);\n\n\t// loop rooms to update the subscriptions from them all\n\tfor await (const room of rooms) {\n\t\tif (!room.uids) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst members = getMembers(room.uids);\n\t\tconst sortedMembers = members.sort(sortUsersAlphabetically);\n\n\t\tconst subs = Subscriptions.findByRoomId(room._id, { projection: { '_id': 1, 'u._id': 1 } });\n\t\tfor await (const sub of subs) {\n\t\t\tconst otherMembers = sortedMembers.filter(({ _id }) => _id !== sub.u._id);\n\t\t\tconst updateNameRespose = await Subscriptions.updateNameAndFnameById(sub._id, getName(otherMembers), getFname(otherMembers));\n\t\t\tif (updateNameRespose.modifiedCount) {\n\t\t\t\tvoid notifyOnSubscriptionChangedByRoomId(room._id);\n\t\t\t}\n\t\t}\n\t}\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/updateGroupDMsName.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/updateGroupDMsName.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/updateGroupDMsName.ts","sourceRoot":"","sources":["app/lib/server/functions/updateGroupDMsName.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAElE,OAAO,EAAE,mCAAmC,EAAE,MAAM,uBAAuB,CAAC;AAE5E,MAAM,QAAQ,GAAG,CAAC,OAAgB,EAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChH,MAAM,OAAO,GAAG,CAAC,OAAgB,EAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAEhG,KAAK,UAAU,iCAAiC,CAAC,IAAW;IAC3D,8EAA8E;IAC9E,IAAI,CAAC,MAAM,KAAK,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;QACzD,OAAO;IACR,CAAC;IAED,MAAM,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;IAC1B,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;IAExB,MAAM,KAAK,GAAG,KAAK,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAChF,MAAM,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAChB,OAAO;QACR,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;IAEH,CAAC,MAAM,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,IAAW,EAAE,EAAE,CACjH,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CACzB,CAAC;IAEF,OAAO,KAAK,CAAC;AACd,CAAC;AAED,SAAS,uBAAuB,CAAC,EAAS,EAAE,EAAS;IACpD,oEAAoE;IACpE,OAAO,CAAC,EAAE,CAAC,IAAK,IAAI,EAAE,CAAC,QAAS,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,IAAK,IAAI,EAAE,CAAC,QAAS,CAAC,CAAC;AAC3E,CAAC;AAED,MAAM,CAAC,MAAM,kBAAkB,GAAG,KAAK,EAAE,mBAA0B,EAAiB,EAAE;IACrF,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QACnC,OAAO;IACR,CAAC;IAED,MAAM,KAAK,GAAG,MAAM,iCAAiC,CAAC,mBAAmB,CAAC,CAAC;IAC3E,IAAI,CAAC,KAAK,EAAE,CAAC;QACZ,OAAO;IACR,CAAC;IAED,KAAK,CAAC,GAAG,CAAC,mBAAmB,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;IAExD,MAAM,KAAK,GAAG,KAAK,CAAC,kBAAkB,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAE/F,4EAA4E;IAC5E,MAAM,UAAU,GAAG,CAAC,IAAc,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAEzF,uDAAuD;IACvD,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAChB,OAAO;QACR,CAAC;QAED,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,aAAa,GAAG,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAE5D,MAAM,IAAI,GAAG,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5F,IAAI,KAAK,EAAE,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;YAC9B,MAAM,YAAY,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC1E,MAAM,iBAAiB,GAAG,MAAM,aAAa,CAAC,sBAAsB,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,YAAY,CAAC,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;YAC7H,IAAI,iBAAiB,CAAC,aAAa,EAAE,CAAC;gBACrC,KAAK,mCAAmC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACpD,CAAC;QACF,CAAC;IACF,CAAC;AACF,CAAC,CAAC","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions, Users } from '@rocket.chat/models';\n\nimport { notifyOnSubscriptionChangedByRoomId } from '../lib/notifyListener';\n\nconst getFname = (members: IUser[]): string => members.map(({ name, username }) => name || username).join(', ');\nconst getName = (members: IUser[]): string => members.map(({ username }) => username).join(',');\n\nasync function getUsersWhoAreInTheSameGroupDMsAs(user: IUser) {\n\t// add all users to single array so we can fetch details from them all at once\n\tif ((await Rooms.countGroupDMsByUids([user._id])) === 0) {\n\t\treturn;\n\t}\n\n\tconst userIds = new Set();\n\tconst users = new Map();\n\n\tconst rooms = Rooms.findGroupDMsByUids([user._id], { projection: { uids: 1 } });\n\tawait rooms.forEach((room) => {\n\t\tif (!room.uids) {\n\t\t\treturn;\n\t\t}\n\n\t\troom.uids.forEach((uid) => uid !== user._id && userIds.add(uid));\n\t});\n\n\t(await Users.findByIds([...userIds], { projection: { username: 1, name: 1 } }).toArray()).forEach((user: IUser) =>\n\t\tusers.set(user._id, user),\n\t);\n\n\treturn users;\n}\n\nfunction sortUsersAlphabetically(u1: IUser, u2: IUser): number {\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\treturn (u1.name! || u1.username!).localeCompare(u2.name! || u2.username!);\n}\n\nexport const updateGroupDMsName = async (userThatChangedName: IUser): Promise<void> => {\n\tif (!userThatChangedName.username) {\n\t\treturn;\n\t}\n\n\tconst users = await getUsersWhoAreInTheSameGroupDMsAs(userThatChangedName);\n\tif (!users) {\n\t\treturn;\n\t}\n\n\tusers.set(userThatChangedName._id, userThatChangedName);\n\n\tconst rooms = Rooms.findGroupDMsByUids([userThatChangedName._id], { projection: { uids: 1 } });\n\n\t// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\tconst getMembers = (uids: string[]) => uids.map((uid) => users.get(uid)).filter(Boolean);\n\n\t// loop rooms to update the subscriptions from them all\n\tfor await (const room of rooms) {\n\t\tif (!room.uids) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst members = getMembers(room.uids);\n\t\tconst sortedMembers = members.sort(sortUsersAlphabetically);\n\n\t\tconst subs = Subscriptions.findByRoomId(room._id, { projection: { '_id': 1, 'u._id': 1 } });\n\t\tfor await (const sub of subs) {\n\t\t\tconst otherMembers = sortedMembers.filter(({ _id }) => _id !== sub.u._id);\n\t\t\tconst updateNameRespose = await Subscriptions.updateNameAndFnameById(sub._id, getName(otherMembers), getFname(otherMembers));\n\t\t\tif (updateNameRespose.modifiedCount) {\n\t\t\t\tvoid notifyOnSubscriptionChangedByRoomId(room._id);\n\t\t\t}\n\t\t}\n\t}\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      updateGroupDMsName: () => updateGroupDMsName\n    });\n    let Rooms, Subscriptions, Users;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let notifyOnSubscriptionChangedByRoomId;\n    module.link(\"../lib/notifyListener\", {\n      notifyOnSubscriptionChangedByRoomId(v) {\n        notifyOnSubscriptionChangedByRoomId = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const getFname = members => members.map(_ref => {\n      let {\n        name,\n        username\n      } = _ref;\n      return name || username;\n    }).join(', ');\n    const getName = members => members.map(_ref2 => {\n      let {\n        username\n      } = _ref2;\n      return username;\n    }).join(',');\n    async function getUsersWhoAreInTheSameGroupDMsAs(user) {\n      // add all users to single array so we can fetch details from them all at once\n      if ((await Rooms.countGroupDMsByUids([user._id])) === 0) {\n        return;\n      }\n      const userIds = new Set();\n      const users = new Map();\n      const rooms = Rooms.findGroupDMsByUids([user._id], {\n        projection: {\n          uids: 1\n        }\n      });\n      await rooms.forEach(room => {\n        if (!room.uids) {\n          return;\n        }\n        room.uids.forEach(uid => uid !== user._id && userIds.add(uid));\n      });\n      (await Users.findByIds([...userIds], {\n        projection: {\n          username: 1,\n          name: 1\n        }\n      }).toArray()).forEach(user => users.set(user._id, user));\n      return users;\n    }\n    function sortUsersAlphabetically(u1, u2) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return (u1.name || u1.username).localeCompare(u2.name || u2.username);\n    }\n    const updateGroupDMsName = async userThatChangedName => {\n      if (!userThatChangedName.username) {\n        return;\n      }\n      const users = await getUsersWhoAreInTheSameGroupDMsAs(userThatChangedName);\n      if (!users) {\n        return;\n      }\n      users.set(userThatChangedName._id, userThatChangedName);\n      const rooms = Rooms.findGroupDMsByUids([userThatChangedName._id], {\n        projection: {\n          uids: 1\n        }\n      });\n      // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n      const getMembers = uids => uids.map(uid => users.get(uid)).filter(Boolean);\n      // loop rooms to update the subscriptions from them all\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(rooms), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const room = _step.value;\n          {\n            if (!room.uids) {\n              return;\n            }\n            const members = getMembers(room.uids);\n            const sortedMembers = members.sort(sortUsersAlphabetically);\n            const subs = Subscriptions.findByRoomId(room._id, {\n              projection: {\n                '_id': 1,\n                'u._id': 1\n              }\n            });\n            var _iteratorAbruptCompletion2 = false;\n            var _didIteratorError2 = false;\n            var _iteratorError2;\n            try {\n              for (var _iterator2 = _asyncIterator(subs), _step2; _iteratorAbruptCompletion2 = !(_step2 = await _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n                const sub = _step2.value;\n                {\n                  const otherMembers = sortedMembers.filter(_ref3 => {\n                    let {\n                      _id\n                    } = _ref3;\n                    return _id !== sub.u._id;\n                  });\n                  const updateNameRespose = await Subscriptions.updateNameAndFnameById(sub._id, getName(otherMembers), getFname(otherMembers));\n                  if (updateNameRespose.modifiedCount) {\n                    void notifyOnSubscriptionChangedByRoomId(room._id);\n                  }\n                }\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n                  await _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","updateGroupDMsName","Rooms","Subscriptions","Users","notifyOnSubscriptionChangedByRoomId","__reifyWaitForDeps__","getFname","members","map","_ref","name","username","join","getName","_ref2","getUsersWhoAreInTheSameGroupDMsAs","user","countGroupDMsByUids","_id","userIds","Set","users","Map","rooms","findGroupDMsByUids","projection","uids","forEach","room","uid","add","findByIds","toArray","set","sortUsersAlphabetically","u1","u2","localeCompare","userThatChangedName","getMembers","get","filter","Boolean","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","value","sortedMembers","sort","subs","findByRoomId","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","sub","otherMembers","_ref3","u","updateNameRespose","updateNameAndFnameById","modifiedCount","err","return","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/updateGroupDMsName.ts"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions, Users } from '@rocket.chat/models';\n\nimport { notifyOnSubscriptionChangedByRoomId } from '../lib/notifyListener';\n\nconst getFname = (members: IUser[]): string => members.map(({ name, username }) => name || username).join(', ');\nconst getName = (members: IUser[]): string => members.map(({ username }) => username).join(',');\n\nasync function getUsersWhoAreInTheSameGroupDMsAs(user: IUser) {\n\t// add all users to single array so we can fetch details from them all at once\n\tif ((await Rooms.countGroupDMsByUids([user._id])) === 0) {\n\t\treturn;\n\t}\n\n\tconst userIds = new Set();\n\tconst users = new Map();\n\n\tconst rooms = Rooms.findGroupDMsByUids([user._id], { projection: { uids: 1 } });\n\tawait rooms.forEach((room) => {\n\t\tif (!room.uids) {\n\t\t\treturn;\n\t\t}\n\n\t\troom.uids.forEach((uid) => uid !== user._id && userIds.add(uid));\n\t});\n\n\t(await Users.findByIds([...userIds], { projection: { username: 1, name: 1 } }).toArray()).forEach((user: IUser) =>\n\t\tusers.set(user._id, user),\n\t);\n\n\treturn users;\n}\n\nfunction sortUsersAlphabetically(u1: IUser, u2: IUser): number {\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\treturn (u1.name! || u1.username!).localeCompare(u2.name! || u2.username!);\n}\n\nexport const updateGroupDMsName = async (userThatChangedName: IUser): Promise<void> => {\n\tif (!userThatChangedName.username) {\n\t\treturn;\n\t}\n\n\tconst users = await getUsersWhoAreInTheSameGroupDMsAs(userThatChangedName);\n\tif (!users) {\n\t\treturn;\n\t}\n\n\tusers.set(userThatChangedName._id, userThatChangedName);\n\n\tconst rooms = Rooms.findGroupDMsByUids([userThatChangedName._id], { projection: { uids: 1 } });\n\n\t// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\tconst getMembers = (uids: string[]) => uids.map((uid) => users.get(uid)).filter(Boolean);\n\n\t// loop rooms to update the subscriptions from them all\n\tfor await (const room of rooms) {\n\t\tif (!room.uids) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst members = getMembers(room.uids);\n\t\tconst sortedMembers = members.sort(sortUsersAlphabetically);\n\n\t\tconst subs = Subscriptions.findByRoomId(room._id, { projection: { '_id': 1, 'u._id': 1 } });\n\t\tfor await (const sub of subs) {\n\t\t\tconst otherMembers = sortedMembers.filter(({ _id }) => _id !== sub.u._id);\n\t\t\tconst updateNameRespose = await Subscriptions.updateNameAndFnameById(sub._id, getName(otherMembers), getFname(otherMembers));\n\t\t\tif (updateNameRespose.modifiedCount) {\n\t\t\t\tvoid notifyOnSubscriptionChangedByRoomId(room._id);\n\t\t\t}\n\t\t}\n\t}\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"52a544a79000704dfd65e39eaeb57ab411b7335d"}
