{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/messageBox.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/ui-utils/client/lib/messageBox.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/messageBox.ts","inputSourceMap":{"version":3,"file":"app/ui-utils/client/lib/messageBox.ts","sourceRoot":"","sources":["app/ui-utils/client/lib/messageBox.ts"],"names":[],"mappings":"AAcA,MAAM,iBAAiB;IACtB,OAAO,GAA4C,IAAI,GAAG,EAAE,CAAC;IAE7D,GAAG,CAAC,KAAqB,EAAE,KAAqB,EAAE,MAAuC;QACxF,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;YACjC,OAAO;QACR,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC7B,CAAC;QAED,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;QAEvF,IAAI,YAAY,EAAE,CAAC;YAClB,OAAO;QACR,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,MAAM,CAAC,KAAqB,EAAE,UAAkB;QAC/C,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YACxC,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QACxG,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAMD,GAAG,CAAC,KAAsB;QACzB,IAAI,CAAC,KAAK,EAAE,CAAC;YACZ,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CAA6C,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE;gBAC/G,MAAM,eAAe,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;gBAC5F,IAAI,eAAe,CAAC,MAAM,EAAE,CAAC;oBAC5B,GAAG,CAAC,KAAK,CAAC,GAAG,eAAe,CAAC;gBAC9B,CAAC;gBACD,OAAO,GAAG,CAAC;YACZ,CAAC,EAAE,EAAgD,CAAC,CAAC;QACtD,CAAC;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;IAC7F,CAAC;IAED,OAAO,CAAC,EAA0B;QACjC,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;aAChC,IAAI,EAAE;aACN,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACxC,CAAC;CACD;AAED,MAAM,CAAC,MAAM,UAAU,GAAG;IACzB,OAAO,EAAE,IAAI,iBAAiB,EAAE;CACvB,CAAC","sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { Keys as IconName } from '@rocket.chat/icons';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\n\nimport type { ChatAPI } from '../../../../client/lib/chats/ChatAPI';\n\nexport type MessageBoxAction = {\n\tlabel: TranslationKey;\n\tid: string;\n\ticon: IconName;\n\taction: (params: { rid: IRoom['_id']; tmid?: IMessage['_id']; event: Event; chat: ChatAPI }) => void;\n\tcondition?: () => boolean;\n};\n\nclass MessageBoxActions {\n\tactions: Map<TranslationKey, MessageBoxAction[]> = new Map();\n\n\tadd(group: TranslationKey, label: TranslationKey, config: Omit<MessageBoxAction, 'label'>) {\n\t\tif (!group && !label && !config) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.actions.has(group)) {\n\t\t\tthis.actions.set(group, []);\n\t\t}\n\n\t\tconst actionExists = this.actions.get(group)?.find((action) => action.label === label);\n\n\t\tif (actionExists) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.actions.get(group)?.push({ ...config, label });\n\t}\n\n\tremove(group: TranslationKey, expression: RegExp) {\n\t\tif (!group || !this.actions.get(group)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.actions.set(group, this.actions.get(group)?.filter((action) => !expression.test(action.id)) || []);\n\t\treturn this.actions.get(group);\n\t}\n\n\tget(): Record<TranslationKey, MessageBoxAction[]>;\n\n\tget(group: TranslationKey): MessageBoxAction[];\n\n\tget(group?: TranslationKey) {\n\t\tif (!group) {\n\t\t\treturn [...this.actions.entries()].reduce<Record<TranslationKey, MessageBoxAction[]>>((ret, [group, actions]) => {\n\t\t\t\tconst filteredActions = actions.filter((action) => !action.condition || action.condition());\n\t\t\t\tif (filteredActions.length) {\n\t\t\t\t\tret[group] = filteredActions;\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}, {} as Record<TranslationKey, MessageBoxAction[]>);\n\t\t}\n\n\t\treturn this.actions.get(group)?.filter((action) => !action.condition || action.condition());\n\t}\n\n\tgetById(id: MessageBoxAction['id']) {\n\t\treturn Object.values(this.actions)\n\t\t\t.flat()\n\t\t\t.filter((action) => action.id === id);\n\t}\n}\n\nexport const messageBox = {\n\tactions: new MessageBoxActions(),\n} as const;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/messageBox.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-utils/client/lib/messageBox.ts","inputSourceMap":{"version":3,"file":"app/ui-utils/client/lib/messageBox.ts","sourceRoot":"","sources":["app/ui-utils/client/lib/messageBox.ts"],"names":[],"mappings":"AAcA,MAAM,iBAAiB;IACtB,OAAO,GAA4C,IAAI,GAAG,EAAE,CAAC;IAE7D,GAAG,CAAC,KAAqB,EAAE,KAAqB,EAAE,MAAuC;QACxF,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;YACjC,OAAO;QACR,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC7B,CAAC;QAED,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;QAEvF,IAAI,YAAY,EAAE,CAAC;YAClB,OAAO;QACR,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,MAAM,CAAC,KAAqB,EAAE,UAAkB;QAC/C,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YACxC,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QACxG,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAMD,GAAG,CAAC,KAAsB;QACzB,IAAI,CAAC,KAAK,EAAE,CAAC;YACZ,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CAA6C,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE;gBAC/G,MAAM,eAAe,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;gBAC5F,IAAI,eAAe,CAAC,MAAM,EAAE,CAAC;oBAC5B,GAAG,CAAC,KAAK,CAAC,GAAG,eAAe,CAAC;gBAC9B,CAAC;gBACD,OAAO,GAAG,CAAC;YACZ,CAAC,EAAE,EAAgD,CAAC,CAAC;QACtD,CAAC;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;IAC7F,CAAC;IAED,OAAO,CAAC,EAA0B;QACjC,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;aAChC,IAAI,EAAE;aACN,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACxC,CAAC;CACD;AAED,MAAM,CAAC,MAAM,UAAU,GAAG;IACzB,OAAO,EAAE,IAAI,iBAAiB,EAAE;CACvB,CAAC","sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { Keys as IconName } from '@rocket.chat/icons';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\n\nimport type { ChatAPI } from '../../../../client/lib/chats/ChatAPI';\n\nexport type MessageBoxAction = {\n\tlabel: TranslationKey;\n\tid: string;\n\ticon: IconName;\n\taction: (params: { rid: IRoom['_id']; tmid?: IMessage['_id']; event: Event; chat: ChatAPI }) => void;\n\tcondition?: () => boolean;\n};\n\nclass MessageBoxActions {\n\tactions: Map<TranslationKey, MessageBoxAction[]> = new Map();\n\n\tadd(group: TranslationKey, label: TranslationKey, config: Omit<MessageBoxAction, 'label'>) {\n\t\tif (!group && !label && !config) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.actions.has(group)) {\n\t\t\tthis.actions.set(group, []);\n\t\t}\n\n\t\tconst actionExists = this.actions.get(group)?.find((action) => action.label === label);\n\n\t\tif (actionExists) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.actions.get(group)?.push({ ...config, label });\n\t}\n\n\tremove(group: TranslationKey, expression: RegExp) {\n\t\tif (!group || !this.actions.get(group)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.actions.set(group, this.actions.get(group)?.filter((action) => !expression.test(action.id)) || []);\n\t\treturn this.actions.get(group);\n\t}\n\n\tget(): Record<TranslationKey, MessageBoxAction[]>;\n\n\tget(group: TranslationKey): MessageBoxAction[];\n\n\tget(group?: TranslationKey) {\n\t\tif (!group) {\n\t\t\treturn [...this.actions.entries()].reduce<Record<TranslationKey, MessageBoxAction[]>>((ret, [group, actions]) => {\n\t\t\t\tconst filteredActions = actions.filter((action) => !action.condition || action.condition());\n\t\t\t\tif (filteredActions.length) {\n\t\t\t\t\tret[group] = filteredActions;\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}, {} as Record<TranslationKey, MessageBoxAction[]>);\n\t\t}\n\n\t\treturn this.actions.get(group)?.filter((action) => !action.condition || action.condition());\n\t}\n\n\tgetById(id: MessageBoxAction['id']) {\n\t\treturn Object.values(this.actions)\n\t\t\t.flat()\n\t\t\t.filter((action) => action.id === id);\n\t}\n}\n\nexport const messageBox = {\n\tactions: new MessageBoxActions(),\n} as const;\n"]}}},"code":"var _slicedToArray;\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 0);\nvar _toConsumableArray;\nmodule.link(\"@babel/runtime/helpers/toConsumableArray\", {\n  default: function (v) {\n    _toConsumableArray = v;\n  }\n}, 1);\nvar _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 2);\nmodule.export({\n  messageBox: function () {\n    return messageBox;\n  }\n});\nvar MessageBoxActions = /*#__PURE__*/function () {\n  function MessageBoxActions() {\n    this.actions = new Map();\n  }\n  var _proto = MessageBoxActions.prototype;\n  _proto.add = function () {\n    function add(group, label, config) {\n      var _this$actions$get, _this$actions$get2;\n      if (!group && !label && !config) {\n        return;\n      }\n      if (!this.actions.has(group)) {\n        this.actions.set(group, []);\n      }\n      var actionExists = (_this$actions$get = this.actions.get(group)) === null || _this$actions$get === void 0 ? void 0 : _this$actions$get.find(function (action) {\n        return action.label === label;\n      });\n      if (actionExists) {\n        return;\n      }\n      (_this$actions$get2 = this.actions.get(group)) === null || _this$actions$get2 === void 0 ? void 0 : _this$actions$get2.push(_objectSpread(_objectSpread({}, config), {}, {\n        label: label\n      }));\n    }\n    return add;\n  }();\n  _proto.remove = function () {\n    function remove(group, expression) {\n      var _this$actions$get3;\n      if (!group || !this.actions.get(group)) {\n        return false;\n      }\n      this.actions.set(group, ((_this$actions$get3 = this.actions.get(group)) === null || _this$actions$get3 === void 0 ? void 0 : _this$actions$get3.filter(function (action) {\n        return !expression.test(action.id);\n      })) || []);\n      return this.actions.get(group);\n    }\n    return remove;\n  }();\n  _proto.get = function () {\n    function get(group) {\n      var _this$actions$get4;\n      if (!group) {\n        return _toConsumableArray(this.actions.entries()).reduce(function (ret, _ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n            group = _ref2[0],\n            actions = _ref2[1];\n          var filteredActions = actions.filter(function (action) {\n            return !action.condition || action.condition();\n          });\n          if (filteredActions.length) {\n            ret[group] = filteredActions;\n          }\n          return ret;\n        }, {});\n      }\n      return (_this$actions$get4 = this.actions.get(group)) === null || _this$actions$get4 === void 0 ? void 0 : _this$actions$get4.filter(function (action) {\n        return !action.condition || action.condition();\n      });\n    }\n    return get;\n  }();\n  _proto.getById = function () {\n    function getById(id) {\n      return Object.values(this.actions).flat().filter(function (action) {\n        return action.id === id;\n      });\n    }\n    return getById;\n  }();\n  return MessageBoxActions;\n}();\nvar messageBox = {\n  actions: new MessageBoxActions()\n};","map":{"version":3,"names":["_slicedToArray","module","link","default","v","_toConsumableArray","_objectSpread","export","messageBox","MessageBoxActions","actions","Map","_proto","prototype","add","group","label","config","_this$actions$get","_this$actions$get2","has","set","actionExists","get","find","action","push","remove","expression","_this$actions$get3","filter","test","id","_this$actions$get4","entries","reduce","ret","_ref","_ref2","filteredActions","condition","length","getById","Object","values","flat"],"sources":["app/ui-utils/client/lib/messageBox.ts"],"sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { Keys as IconName } from '@rocket.chat/icons';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\n\nimport type { ChatAPI } from '../../../../client/lib/chats/ChatAPI';\n\nexport type MessageBoxAction = {\n\tlabel: TranslationKey;\n\tid: string;\n\ticon: IconName;\n\taction: (params: { rid: IRoom['_id']; tmid?: IMessage['_id']; event: Event; chat: ChatAPI }) => void;\n\tcondition?: () => boolean;\n};\n\nclass MessageBoxActions {\n\tactions: Map<TranslationKey, MessageBoxAction[]> = new Map();\n\n\tadd(group: TranslationKey, label: TranslationKey, config: Omit<MessageBoxAction, 'label'>) {\n\t\tif (!group && !label && !config) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.actions.has(group)) {\n\t\t\tthis.actions.set(group, []);\n\t\t}\n\n\t\tconst actionExists = this.actions.get(group)?.find((action) => action.label === label);\n\n\t\tif (actionExists) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.actions.get(group)?.push({ ...config, label });\n\t}\n\n\tremove(group: TranslationKey, expression: RegExp) {\n\t\tif (!group || !this.actions.get(group)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.actions.set(group, this.actions.get(group)?.filter((action) => !expression.test(action.id)) || []);\n\t\treturn this.actions.get(group);\n\t}\n\n\tget(): Record<TranslationKey, MessageBoxAction[]>;\n\n\tget(group: TranslationKey): MessageBoxAction[];\n\n\tget(group?: TranslationKey) {\n\t\tif (!group) {\n\t\t\treturn [...this.actions.entries()].reduce<Record<TranslationKey, MessageBoxAction[]>>((ret, [group, actions]) => {\n\t\t\t\tconst filteredActions = actions.filter((action) => !action.condition || action.condition());\n\t\t\t\tif (filteredActions.length) {\n\t\t\t\t\tret[group] = filteredActions;\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}, {} as Record<TranslationKey, MessageBoxAction[]>);\n\t\t}\n\n\t\treturn this.actions.get(group)?.filter((action) => !action.condition || action.condition());\n\t}\n\n\tgetById(id: MessageBoxAction['id']) {\n\t\treturn Object.values(this.actions)\n\t\t\t.flat()\n\t\t\t.filter((action) => action.id === id);\n\t}\n}\n\nexport const messageBox = {\n\tactions: new MessageBoxActions(),\n} as const;\n"],"mappings":"AAcA,IAAAA,cAAM;AAAAC,MAAiB,CAAAC,IAAA;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAJ,cAAA,GAAAI,CAAA;EAAA;AAAA;AAAA,IAAAC,kBAAA;AAAAJ,MAAA,CAAAC,IAAA;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAC,kBAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,aAAA;AAAAL,MAAA,CAAAC,IAAA;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAE,aAAA,GAAAF,CAAA;EAAA;AAAA;AAAvBH,MAAM,CAAAM,MAAA;EAAAC,UAAiB,WAAAA,CAAA;IAAA,OAAAA,UAAA;EAAA;AAAA;AAAA,IAAjBC,iBAAiB;EAAA,SAAAA,kBAAA;IAAA,KACtBC,OAAO,GAA4C,IAAIC,GAAG,EAAE;EAAA;EAAA,IAAAC,MAAA,GAAAH,iBAAA,CAAAI,SAAA;EAAAD,MAAA,CAE5DE,GAAG;IAAH,SAAAA,IAAIC,KAAqB,EAAEC,KAAqB,EAAEC,MAAuC;MAAA,IAAAC,iBAAA,EAAAC,kBAAA;MACxF,IAAI,CAACJ,KAAK,IAAI,CAACC,KAAK,IAAI,CAACC,MAAM,EAAE;QAChC;MACD;MAEA,IAAI,CAAC,IAAI,CAACP,OAAO,CAACU,GAAG,CAACL,KAAK,CAAC,EAAE;QAC7B,IAAI,CAACL,OAAO,CAACW,GAAG,CAACN,KAAK,EAAE,EAAE,CAAC;MAC5B;MAEA,IAAMO,YAAY,IAAAJ,iBAAA,GAAG,IAAI,CAACR,OAAO,CAACa,GAAG,CAACR,KAAK,CAAC,cAAAG,iBAAA,uBAAvBA,iBAAA,CAAyBM,IAAI,CAAC,UAACC,MAAM;QAAA,OAAKA,MAAM,CAACT,KAAK,KAAKA,KAAK;MAAA,EAAC;MAEtF,IAAIM,YAAY,EAAE;QACjB;MACD;MAEA,CAAAH,kBAAA,OAAI,CAACT,OAAO,CAACa,GAAG,CAACR,KAAK,CAAC,cAAAI,kBAAA,uBAAvBA,kBAAA,CAAyBO,IAAI,CAAApB,aAAA,CAAAA,aAAA,KAAMW,MAAM;QAAED,KAAK,EAALA;MAAK,EAAE,CAAC;IACpD;IAAC,OAAAF,GAAA;EAAA;EAAAF,MAAA,CAEDe,MAAM;IAAN,SAAAA,OAAOZ,KAAqB,EAAEa,UAAkB;MAAA,IAAAC,kBAAA;MAC/C,IAAI,CAACd,KAAK,IAAI,CAAC,IAAI,CAACL,OAAO,CAACa,GAAG,CAACR,KAAK,CAAC,EAAE;QACvC,OAAO,KAAK;MACb;MAEA,IAAI,CAACL,OAAO,CAACW,GAAG,CAACN,KAAK,EAAE,EAAAc,kBAAA,OAAI,CAACnB,OAAO,CAACa,GAAG,CAACR,KAAK,CAAC,cAAAc,kBAAA,uBAAvBA,kBAAA,CAAyBC,MAAM,CAAC,UAACL,MAAM;QAAA,OAAK,CAACG,UAAU,CAACG,IAAI,CAACN,MAAM,CAACO,EAAE,CAAC;MAAA,EAAC,KAAI,EAAE,CAAC;MACvG,OAAO,IAAI,CAACtB,OAAO,CAACa,GAAG,CAACR,KAAK,CAAC;IAC/B;IAAC,OAAAY,MAAA;EAAA;EAAAf,MAAA,CAMDW,GAAG;IAAH,SAAAA,IAAIR,KAAsB;MAAA,IAAAkB,kBAAA;MACzB,IAAI,CAAClB,KAAK,EAAE;QACX,OAAOV,kBAAA,CAAI,IAAI,CAACK,OAAO,CAACwB,OAAO,EAAE,EAAEC,MAAM,CAA6C,UAACC,GAAG,EAAAC,IAAA,EAAsB;UAAA,IAAAC,KAAA,GAAAtC,cAAA,CAAAqC,IAAA;YAAnBtB,KAAK,GAAAuB,KAAA;YAAE5B,OAAO,GAAA4B,KAAA;UAC1G,IAAMC,eAAe,GAAG7B,OAAO,CAACoB,MAAM,CAAC,UAACL,MAAM;YAAA,OAAK,CAACA,MAAM,CAACe,SAAS,IAAIf,MAAM,CAACe,SAAS,EAAE;UAAA,EAAC;UAC3F,IAAID,eAAe,CAACE,MAAM,EAAE;YAC3BL,GAAG,CAACrB,KAAK,CAAC,GAAGwB,eAAe;UAC7B;UACA,OAAOH,GAAG;QACX,CAAC,EAAE,EAAgD,CAAC;MACrD;MAEA,QAAAH,kBAAA,GAAO,IAAI,CAACvB,OAAO,CAACa,GAAG,CAACR,KAAK,CAAC,cAAAkB,kBAAA,uBAAvBA,kBAAA,CAAyBH,MAAM,CAAC,UAACL,MAAM;QAAA,OAAK,CAACA,MAAM,CAACe,SAAS,IAAIf,MAAM,CAACe,SAAS,EAAE;MAAA,EAAC;IAC5F;IAAC,OAAAjB,GAAA;EAAA;EAAAX,MAAA,CAED8B,OAAO;IAAP,SAAAA,QAAQV,EAA0B;MACjC,OAAOW,MAAM,CAACC,MAAM,CAAC,IAAI,CAAClC,OAAO,CAAC,CAChCmC,IAAI,EAAE,CACNf,MAAM,CAAC,UAACL,MAAM;QAAA,OAAKA,MAAM,CAACO,EAAE,KAAKA,EAAE;MAAA,EAAC;IACvC;IAAC,OAAAU,OAAA;EAAA;EAAA,OAAAjC,iBAAA;AAAA;AAGK,IAAMD,UAAU,GAAG;EACzBE,OAAO,EAAE,IAAID,iBAAiB;CACrB","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"6fc26583c39568240d8f8522bb6dcf2b5fab011d"}
