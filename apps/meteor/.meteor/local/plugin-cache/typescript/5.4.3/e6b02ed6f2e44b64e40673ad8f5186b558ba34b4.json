{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/Threads/components/ThreadMessageList.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/contextualBar/Threads/components/ThreadMessageList.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/Threads/components/ThreadMessageList.tsx","inputSourceMap":{"version":3,"file":"client/views/room/contextualBar/Threads/components/ThreadMessageList.tsx","sourceRoot":"","sources":["client/views/room/contextualBar/Threads/components/ThreadMessageList.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IThreadMainMessage } from '@rocket.chat/core-typings';\nimport { Box } from '@rocket.chat/fuselage';\nimport { useMergedRefs } from '@rocket.chat/fuselage-hooks';\nimport { useSetting, useUserPreference } from '@rocket.chat/ui-contexts';\nimport { differenceInSeconds } from 'date-fns';\nimport type { ReactElement } from 'react';\nimport React, { Fragment } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { MessageTypes } from '../../../../../../app/ui-utils/client';\nimport { isTruthy } from '../../../../../../lib/isTruthy';\nimport { CustomScrollbars } from '../../../../../components/CustomScrollbars';\nimport { BubbleDate } from '../../../BubbleDate';\nimport { isMessageNewDay } from '../../../MessageList/lib/isMessageNewDay';\nimport MessageListProvider from '../../../MessageList/providers/MessageListProvider';\nimport LoadingMessagesIndicator from '../../../body/LoadingMessagesIndicator';\nimport { useDateScroll } from '../../../hooks/useDateScroll';\nimport { useFirstUnreadMessageId } from '../../../hooks/useFirstUnreadMessageId';\nimport { useMessageListNavigation } from '../../../hooks/useMessageListNavigation';\nimport { useLegacyThreadMessageJump } from '../hooks/useLegacyThreadMessageJump';\nimport { useLegacyThreadMessageListScrolling } from '../hooks/useLegacyThreadMessageListScrolling';\nimport { useLegacyThreadMessages } from '../hooks/useLegacyThreadMessages';\nimport { ThreadMessageItem } from './ThreadMessageItem';\n\nconst isMessageSequential = (current: IMessage, previous: IMessage | undefined, groupingRange: number): boolean => {\n\tif (!previous) {\n\t\treturn false;\n\t}\n\n\tif (MessageTypes.isSystemMessage(current) || MessageTypes.isSystemMessage(previous)) {\n\t\treturn false;\n\t}\n\n\tif (current.groupable === false) {\n\t\treturn false;\n\t}\n\n\tif (current.u._id !== previous.u._id) {\n\t\treturn false;\n\t}\n\n\tif (current.alias !== previous.alias) {\n\t\treturn false;\n\t}\n\treturn differenceInSeconds(current.ts, previous.ts) < groupingRange && !isMessageNewDay(current, previous);\n};\n\ntype ThreadMessageListProps = {\n\tmainMessage: IThreadMainMessage;\n};\n\nconst ThreadMessageList = ({ mainMessage }: ThreadMessageListProps): ReactElement => {\n\tconst { t } = useTranslation();\n\tconst { innerRef, bubbleRef, listStyle, ...bubbleDate } = useDateScroll();\n\n\tconst { messages, loading } = useLegacyThreadMessages(mainMessage._id);\n\tconst {\n\t\tlistWrapperRef: listWrapperScrollRef,\n\t\tlistRef: listScrollRef,\n\t\tonScroll: handleScroll,\n\t} = useLegacyThreadMessageListScrolling(mainMessage);\n\tconst { parentRef: listJumpRef } = useLegacyThreadMessageJump({ enabled: !loading });\n\n\tconst hideUsernames = useUserPreference<boolean>('hideUsernames');\n\tconst showUserAvatar = !!useUserPreference<boolean>('displayAvatars');\n\tconst firstUnreadMessageId = useFirstUnreadMessageId();\n\tconst messageGroupingPeriod = Number(useSetting('Message_GroupingPeriod'));\n\n\tconst { messageListRef } = useMessageListNavigation();\n\tconst listRef = useMergedRefs<HTMLElement | null>(listScrollRef, messageListRef);\n\n\tconst scrollRef = useMergedRefs<HTMLElement | null>(innerRef, listWrapperScrollRef, listJumpRef);\n\n\treturn (\n\t\t<div className={['thread-list js-scroll-thread', hideUsernames && 'hide-usernames'].filter(isTruthy).join(' ')}>\n\t\t\t<BubbleDate ref={bubbleRef} {...bubbleDate} />\n\t\t\t<CustomScrollbars\n\t\t\t\tref={scrollRef}\n\t\t\t\tonScroll={(args) => {\n\t\t\t\t\thandleScroll(args);\n\t\t\t\t}}\n\t\t\t\tstyle={{ scrollBehavior: 'smooth', overflowX: 'hidden' }}\n\t\t\t>\n\t\t\t\t<Box\n\t\t\t\t\tis='ul'\n\t\t\t\t\tclassName={[listStyle, 'thread']}\n\t\t\t\t\tref={listRef}\n\t\t\t\t\taria-label={t('Thread_message_list')}\n\t\t\t\t\tstyle={{ scrollBehavior: 'smooth', overflowX: 'hidden' }}\n\t\t\t\t>\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<li className='load-more'>\n\t\t\t\t\t\t\t<LoadingMessagesIndicator />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<MessageListProvider messageListRef={listJumpRef}>\n\t\t\t\t\t\t\t{[mainMessage, ...messages].map((message, index, { [index - 1]: previous }) => {\n\t\t\t\t\t\t\t\tconst sequential = isMessageSequential(message, previous, messageGroupingPeriod);\n\t\t\t\t\t\t\t\tconst newDay = isMessageNewDay(message, previous);\n\t\t\t\t\t\t\t\tconst shouldShowAsSequential = sequential && !newDay;\n\n\t\t\t\t\t\t\t\tconst firstUnread = firstUnreadMessageId === message._id;\n\t\t\t\t\t\t\t\tconst system = MessageTypes.isSystemMessage(message);\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Fragment key={message._id}>\n\t\t\t\t\t\t\t\t\t\t<ThreadMessageItem\n\t\t\t\t\t\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\t\t\t\t\t\tprevious={previous}\n\t\t\t\t\t\t\t\t\t\t\tsequential={sequential}\n\t\t\t\t\t\t\t\t\t\t\tshouldShowAsSequential={shouldShowAsSequential}\n\t\t\t\t\t\t\t\t\t\t\tshowUserAvatar={showUserAvatar}\n\t\t\t\t\t\t\t\t\t\t\tfirstUnread={firstUnread}\n\t\t\t\t\t\t\t\t\t\t\tsystem={system}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</MessageListProvider>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t</CustomScrollbars>\n\t\t</div>\n\t);\n};\n\nexport default ThreadMessageList;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/Threads/components/ThreadMessageList.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/contextualBar/Threads/components/ThreadMessageList.tsx","inputSourceMap":{"version":3,"file":"client/views/room/contextualBar/Threads/components/ThreadMessageList.tsx","sourceRoot":"","sources":["client/views/room/contextualBar/Threads/components/ThreadMessageList.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,GAAG,EAAE,MAAM,uBAAuB,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAC5D,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AACzE,OAAO,EAAE,mBAAmB,EAAE,MAAM,UAAU,CAAC;AAE/C,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,OAAO,EAAE,YAAY,EAAE,MAAM,uCAAuC,CAAC;AACrE,OAAO,EAAE,QAAQ,EAAE,MAAM,gCAAgC,CAAC;AAC1D,OAAO,EAAE,gBAAgB,EAAE,MAAM,4CAA4C,CAAC;AAC9E,OAAO,EAAE,UAAU,EAAE,MAAM,qBAAqB,CAAC;AACjD,OAAO,EAAE,eAAe,EAAE,MAAM,0CAA0C,CAAC;AAC3E,OAAO,mBAAmB,MAAM,oDAAoD,CAAC;AACrF,OAAO,wBAAwB,MAAM,wCAAwC,CAAC;AAC9E,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAC7D,OAAO,EAAE,uBAAuB,EAAE,MAAM,wCAAwC,CAAC;AACjF,OAAO,EAAE,wBAAwB,EAAE,MAAM,yCAAyC,CAAC;AACnF,OAAO,EAAE,0BAA0B,EAAE,MAAM,qCAAqC,CAAC;AACjF,OAAO,EAAE,mCAAmC,EAAE,MAAM,8CAA8C,CAAC;AACnG,OAAO,EAAE,uBAAuB,EAAE,MAAM,kCAAkC,CAAC;AAC3E,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAExD,MAAM,mBAAmB,GAAG,CAAC,OAAiB,EAAE,QAA8B,EAAE,aAAqB,EAAW,EAAE;IACjH,IAAI,CAAC,QAAQ,EAAE,CAAC;QACf,OAAO,KAAK,CAAC;IACd,CAAC;IAED,IAAI,YAAY,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,YAAY,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC;QACrF,OAAO,KAAK,CAAC;IACd,CAAC;IAED,IAAI,OAAO,CAAC,SAAS,KAAK,KAAK,EAAE,CAAC;QACjC,OAAO,KAAK,CAAC;IACd,CAAC;IAED,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACtC,OAAO,KAAK,CAAC;IACd,CAAC;IAED,IAAI,OAAO,CAAC,KAAK,KAAK,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtC,OAAO,KAAK,CAAC;IACd,CAAC;IACD,OAAO,mBAAmB,CAAC,OAAO,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,GAAG,aAAa,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC5G,CAAC,CAAC;AAMF,MAAM,iBAAiB,GAAG,CAAC,EAAE,WAAW,EAA0B,EAAgB,EAAE;IACnF,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAC/B,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,UAAU,EAAE,GAAG,aAAa,EAAE,CAAC;IAE1E,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,uBAAuB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACvE,MAAM,EACL,cAAc,EAAE,oBAAoB,EACpC,OAAO,EAAE,aAAa,EACtB,QAAQ,EAAE,YAAY,GACtB,GAAG,mCAAmC,CAAC,WAAW,CAAC,CAAC;IACrD,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,0BAA0B,CAAC,EAAE,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;IAErF,MAAM,aAAa,GAAG,iBAAiB,CAAU,eAAe,CAAC,CAAC;IAClE,MAAM,cAAc,GAAG,CAAC,CAAC,iBAAiB,CAAU,gBAAgB,CAAC,CAAC;IACtE,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IACvD,MAAM,qBAAqB,GAAG,MAAM,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC,CAAC;IAE3E,MAAM,EAAE,cAAc,EAAE,GAAG,wBAAwB,EAAE,CAAC;IACtD,MAAM,OAAO,GAAG,aAAa,CAAqB,aAAa,EAAE,cAAc,CAAC,CAAC;IAEjF,MAAM,SAAS,GAAG,aAAa,CAAqB,QAAQ,EAAE,oBAAoB,EAAE,WAAW,CAAC,CAAC;IAEjG,OAAO,CACN,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,8BAA8B,EAAE,aAAa,IAAI,gBAAgB,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAC9G;GAAA,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,UAAU,CAAC,EAC3C;GAAA,CAAC,gBAAgB,CAChB,GAAG,CAAC,CAAC,SAAS,CAAC,CACf,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,YAAY,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CACF,KAAK,CAAC,CAAC,EAAE,cAAc,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAEzD;IAAA,CAAC,GAAG,CACH,EAAE,CAAC,IAAI,CACP,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CACjC,GAAG,CAAC,CAAC,OAAO,CAAC,CACb,UAAU,CAAC,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CACrC,KAAK,CAAC,CAAC,EAAE,cAAc,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAEzD;KAAA,CAAC,OAAO,CAAC,CAAC,CAAC,CACV,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,CACxB;OAAA,CAAC,wBAAwB,CAAC,AAAD,EAC1B;MAAA,EAAE,EAAE,CAAC,CACL,CAAC,CAAC,CAAC,CACH,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,CAChD;OAAA,CAAC,CAAC,WAAW,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;gBAC7E,MAAM,UAAU,GAAG,mBAAmB,CAAC,OAAO,EAAE,QAAQ,EAAE,qBAAqB,CAAC,CAAC;gBACjF,MAAM,MAAM,GAAG,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;gBAClD,MAAM,sBAAsB,GAAG,UAAU,IAAI,CAAC,MAAM,CAAC;gBAErD,MAAM,WAAW,GAAG,oBAAoB,KAAK,OAAO,CAAC,GAAG,CAAC;gBACzD,MAAM,MAAM,GAAG,YAAY,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;gBAErD,OAAO,CACN,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAC1B;UAAA,CAAC,iBAAiB,CACjB,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,UAAU,CAAC,CAAC,UAAU,CAAC,CACvB,sBAAsB,CAAC,CAAC,sBAAsB,CAAC,CAC/C,cAAc,CAAC,CAAC,cAAc,CAAC,CAC/B,WAAW,CAAC,CAAC,WAAW,CAAC,CACzB,MAAM,CAAC,CAAC,MAAM,CAAC,EAEjB;SAAA,EAAE,QAAQ,CAAC,CACX,CAAC;YACH,CAAC,CAAC,CACH;MAAA,EAAE,mBAAmB,CAAC,CACtB,CACF;IAAA,EAAE,GAAG,CACN;GAAA,EAAE,gBAAgB,CACnB;EAAA,EAAE,GAAG,CAAC,CACN,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import type { IMessage, IThreadMainMessage } from '@rocket.chat/core-typings';\nimport { Box } from '@rocket.chat/fuselage';\nimport { useMergedRefs } from '@rocket.chat/fuselage-hooks';\nimport { useSetting, useUserPreference } from '@rocket.chat/ui-contexts';\nimport { differenceInSeconds } from 'date-fns';\nimport type { ReactElement } from 'react';\nimport React, { Fragment } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { MessageTypes } from '../../../../../../app/ui-utils/client';\nimport { isTruthy } from '../../../../../../lib/isTruthy';\nimport { CustomScrollbars } from '../../../../../components/CustomScrollbars';\nimport { BubbleDate } from '../../../BubbleDate';\nimport { isMessageNewDay } from '../../../MessageList/lib/isMessageNewDay';\nimport MessageListProvider from '../../../MessageList/providers/MessageListProvider';\nimport LoadingMessagesIndicator from '../../../body/LoadingMessagesIndicator';\nimport { useDateScroll } from '../../../hooks/useDateScroll';\nimport { useFirstUnreadMessageId } from '../../../hooks/useFirstUnreadMessageId';\nimport { useMessageListNavigation } from '../../../hooks/useMessageListNavigation';\nimport { useLegacyThreadMessageJump } from '../hooks/useLegacyThreadMessageJump';\nimport { useLegacyThreadMessageListScrolling } from '../hooks/useLegacyThreadMessageListScrolling';\nimport { useLegacyThreadMessages } from '../hooks/useLegacyThreadMessages';\nimport { ThreadMessageItem } from './ThreadMessageItem';\n\nconst isMessageSequential = (current: IMessage, previous: IMessage | undefined, groupingRange: number): boolean => {\n\tif (!previous) {\n\t\treturn false;\n\t}\n\n\tif (MessageTypes.isSystemMessage(current) || MessageTypes.isSystemMessage(previous)) {\n\t\treturn false;\n\t}\n\n\tif (current.groupable === false) {\n\t\treturn false;\n\t}\n\n\tif (current.u._id !== previous.u._id) {\n\t\treturn false;\n\t}\n\n\tif (current.alias !== previous.alias) {\n\t\treturn false;\n\t}\n\treturn differenceInSeconds(current.ts, previous.ts) < groupingRange && !isMessageNewDay(current, previous);\n};\n\ntype ThreadMessageListProps = {\n\tmainMessage: IThreadMainMessage;\n};\n\nconst ThreadMessageList = ({ mainMessage }: ThreadMessageListProps): ReactElement => {\n\tconst { t } = useTranslation();\n\tconst { innerRef, bubbleRef, listStyle, ...bubbleDate } = useDateScroll();\n\n\tconst { messages, loading } = useLegacyThreadMessages(mainMessage._id);\n\tconst {\n\t\tlistWrapperRef: listWrapperScrollRef,\n\t\tlistRef: listScrollRef,\n\t\tonScroll: handleScroll,\n\t} = useLegacyThreadMessageListScrolling(mainMessage);\n\tconst { parentRef: listJumpRef } = useLegacyThreadMessageJump({ enabled: !loading });\n\n\tconst hideUsernames = useUserPreference<boolean>('hideUsernames');\n\tconst showUserAvatar = !!useUserPreference<boolean>('displayAvatars');\n\tconst firstUnreadMessageId = useFirstUnreadMessageId();\n\tconst messageGroupingPeriod = Number(useSetting('Message_GroupingPeriod'));\n\n\tconst { messageListRef } = useMessageListNavigation();\n\tconst listRef = useMergedRefs<HTMLElement | null>(listScrollRef, messageListRef);\n\n\tconst scrollRef = useMergedRefs<HTMLElement | null>(innerRef, listWrapperScrollRef, listJumpRef);\n\n\treturn (\n\t\t<div className={['thread-list js-scroll-thread', hideUsernames && 'hide-usernames'].filter(isTruthy).join(' ')}>\n\t\t\t<BubbleDate ref={bubbleRef} {...bubbleDate} />\n\t\t\t<CustomScrollbars\n\t\t\t\tref={scrollRef}\n\t\t\t\tonScroll={(args) => {\n\t\t\t\t\thandleScroll(args);\n\t\t\t\t}}\n\t\t\t\tstyle={{ scrollBehavior: 'smooth', overflowX: 'hidden' }}\n\t\t\t>\n\t\t\t\t<Box\n\t\t\t\t\tis='ul'\n\t\t\t\t\tclassName={[listStyle, 'thread']}\n\t\t\t\t\tref={listRef}\n\t\t\t\t\taria-label={t('Thread_message_list')}\n\t\t\t\t\tstyle={{ scrollBehavior: 'smooth', overflowX: 'hidden' }}\n\t\t\t\t>\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<li className='load-more'>\n\t\t\t\t\t\t\t<LoadingMessagesIndicator />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<MessageListProvider messageListRef={listJumpRef}>\n\t\t\t\t\t\t\t{[mainMessage, ...messages].map((message, index, { [index - 1]: previous }) => {\n\t\t\t\t\t\t\t\tconst sequential = isMessageSequential(message, previous, messageGroupingPeriod);\n\t\t\t\t\t\t\t\tconst newDay = isMessageNewDay(message, previous);\n\t\t\t\t\t\t\t\tconst shouldShowAsSequential = sequential && !newDay;\n\n\t\t\t\t\t\t\t\tconst firstUnread = firstUnreadMessageId === message._id;\n\t\t\t\t\t\t\t\tconst system = MessageTypes.isSystemMessage(message);\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Fragment key={message._id}>\n\t\t\t\t\t\t\t\t\t\t<ThreadMessageItem\n\t\t\t\t\t\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\t\t\t\t\t\tprevious={previous}\n\t\t\t\t\t\t\t\t\t\t\tsequential={sequential}\n\t\t\t\t\t\t\t\t\t\t\tshouldShowAsSequential={shouldShowAsSequential}\n\t\t\t\t\t\t\t\t\t\t\tshowUserAvatar={showUserAvatar}\n\t\t\t\t\t\t\t\t\t\t\tfirstUnread={firstUnread}\n\t\t\t\t\t\t\t\t\t\t\tsystem={system}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</MessageListProvider>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t</CustomScrollbars>\n\t\t</div>\n\t);\n};\n\nexport default ThreadMessageList;\n"]}}},"code":"const _excluded = [\"innerRef\", \"bubbleRef\", \"listStyle\"];\nlet _extends;\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n}, 0);\nlet _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n}, 1);\nlet Box;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Box(v) {\n    Box = v;\n  }\n}, 0);\nlet useMergedRefs;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMergedRefs(v) {\n    useMergedRefs = v;\n  }\n}, 1);\nlet useSetting, useUserPreference;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useSetting(v) {\n    useSetting = v;\n  },\n  useUserPreference(v) {\n    useUserPreference = v;\n  }\n}, 2);\nlet differenceInSeconds;\nmodule.link(\"date-fns\", {\n  differenceInSeconds(v) {\n    differenceInSeconds = v;\n  }\n}, 3);\nlet React, Fragment;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  Fragment(v) {\n    Fragment = v;\n  }\n}, 4);\nlet useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 5);\nlet MessageTypes;\nmodule.link(\"../../../../../../app/ui-utils/client\", {\n  MessageTypes(v) {\n    MessageTypes = v;\n  }\n}, 6);\nlet isTruthy;\nmodule.link(\"../../../../../../lib/isTruthy\", {\n  isTruthy(v) {\n    isTruthy = v;\n  }\n}, 7);\nlet CustomScrollbars;\nmodule.link(\"../../../../../components/CustomScrollbars\", {\n  CustomScrollbars(v) {\n    CustomScrollbars = v;\n  }\n}, 8);\nlet BubbleDate;\nmodule.link(\"../../../BubbleDate\", {\n  BubbleDate(v) {\n    BubbleDate = v;\n  }\n}, 9);\nlet isMessageNewDay;\nmodule.link(\"../../../MessageList/lib/isMessageNewDay\", {\n  isMessageNewDay(v) {\n    isMessageNewDay = v;\n  }\n}, 10);\nlet MessageListProvider;\nmodule.link(\"../../../MessageList/providers/MessageListProvider\", {\n  default(v) {\n    MessageListProvider = v;\n  }\n}, 11);\nlet LoadingMessagesIndicator;\nmodule.link(\"../../../body/LoadingMessagesIndicator\", {\n  default(v) {\n    LoadingMessagesIndicator = v;\n  }\n}, 12);\nlet useDateScroll;\nmodule.link(\"../../../hooks/useDateScroll\", {\n  useDateScroll(v) {\n    useDateScroll = v;\n  }\n}, 13);\nlet useFirstUnreadMessageId;\nmodule.link(\"../../../hooks/useFirstUnreadMessageId\", {\n  useFirstUnreadMessageId(v) {\n    useFirstUnreadMessageId = v;\n  }\n}, 14);\nlet useMessageListNavigation;\nmodule.link(\"../../../hooks/useMessageListNavigation\", {\n  useMessageListNavigation(v) {\n    useMessageListNavigation = v;\n  }\n}, 15);\nlet useLegacyThreadMessageJump;\nmodule.link(\"../hooks/useLegacyThreadMessageJump\", {\n  useLegacyThreadMessageJump(v) {\n    useLegacyThreadMessageJump = v;\n  }\n}, 16);\nlet useLegacyThreadMessageListScrolling;\nmodule.link(\"../hooks/useLegacyThreadMessageListScrolling\", {\n  useLegacyThreadMessageListScrolling(v) {\n    useLegacyThreadMessageListScrolling = v;\n  }\n}, 17);\nlet useLegacyThreadMessages;\nmodule.link(\"../hooks/useLegacyThreadMessages\", {\n  useLegacyThreadMessages(v) {\n    useLegacyThreadMessages = v;\n  }\n}, 18);\nlet ThreadMessageItem;\nmodule.link(\"./ThreadMessageItem\", {\n  ThreadMessageItem(v) {\n    ThreadMessageItem = v;\n  }\n}, 19);\nconst isMessageSequential = (current, previous, groupingRange) => {\n  if (!previous) {\n    return false;\n  }\n  if (MessageTypes.isSystemMessage(current) || MessageTypes.isSystemMessage(previous)) {\n    return false;\n  }\n  if (current.groupable === false) {\n    return false;\n  }\n  if (current.u._id !== previous.u._id) {\n    return false;\n  }\n  if (current.alias !== previous.alias) {\n    return false;\n  }\n  return differenceInSeconds(current.ts, previous.ts) < groupingRange && !isMessageNewDay(current, previous);\n};\nconst ThreadMessageList = _ref => {\n  let {\n    mainMessage\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const _useDateScroll = useDateScroll(),\n    {\n      innerRef,\n      bubbleRef,\n      listStyle\n    } = _useDateScroll,\n    bubbleDate = _objectWithoutProperties(_useDateScroll, _excluded);\n  const {\n    messages,\n    loading\n  } = useLegacyThreadMessages(mainMessage._id);\n  const {\n    listWrapperRef: listWrapperScrollRef,\n    listRef: listScrollRef,\n    onScroll: handleScroll\n  } = useLegacyThreadMessageListScrolling(mainMessage);\n  const {\n    parentRef: listJumpRef\n  } = useLegacyThreadMessageJump({\n    enabled: !loading\n  });\n  const hideUsernames = useUserPreference('hideUsernames');\n  const showUserAvatar = !!useUserPreference('displayAvatars');\n  const firstUnreadMessageId = useFirstUnreadMessageId();\n  const messageGroupingPeriod = Number(useSetting('Message_GroupingPeriod'));\n  const {\n    messageListRef\n  } = useMessageListNavigation();\n  const listRef = useMergedRefs(listScrollRef, messageListRef);\n  const scrollRef = useMergedRefs(innerRef, listWrapperScrollRef, listJumpRef);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: ['thread-list js-scroll-thread', hideUsernames && 'hide-usernames'].filter(isTruthy).join(' ')\n  }, /*#__PURE__*/React.createElement(BubbleDate, _extends({\n    ref: bubbleRef\n  }, bubbleDate)), /*#__PURE__*/React.createElement(CustomScrollbars, {\n    ref: scrollRef,\n    onScroll: args => {\n      handleScroll(args);\n    },\n    style: {\n      scrollBehavior: 'smooth',\n      overflowX: 'hidden'\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    is: \"ul\",\n    className: [listStyle, 'thread'],\n    ref: listRef,\n    \"aria-label\": t('Thread_message_list'),\n    style: {\n      scrollBehavior: 'smooth',\n      overflowX: 'hidden'\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"li\", {\n    className: \"load-more\"\n  }, /*#__PURE__*/React.createElement(LoadingMessagesIndicator, null)) : /*#__PURE__*/React.createElement(MessageListProvider, {\n    messageListRef: listJumpRef\n  }, [mainMessage, ...messages].map((message, index, _ref2) => {\n    let {\n      [index - 1]: previous\n    } = _ref2;\n    const sequential = isMessageSequential(message, previous, messageGroupingPeriod);\n    const newDay = isMessageNewDay(message, previous);\n    const shouldShowAsSequential = sequential && !newDay;\n    const firstUnread = firstUnreadMessageId === message._id;\n    const system = MessageTypes.isSystemMessage(message);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: message._id\n    }, /*#__PURE__*/React.createElement(ThreadMessageItem, {\n      message: message,\n      previous: previous,\n      sequential: sequential,\n      shouldShowAsSequential: shouldShowAsSequential,\n      showUserAvatar: showUserAvatar,\n      firstUnread: firstUnread,\n      system: system\n    }));\n  })))));\n};\nmodule.exportDefault(ThreadMessageList);","map":{"version":3,"names":["_extends","module","link","default","v","_objectWithoutProperties","Box","useMergedRefs","useSetting","useUserPreference","differenceInSeconds","React","Fragment","useTranslation","MessageTypes","isTruthy","CustomScrollbars","BubbleDate","isMessageNewDay","MessageListProvider","LoadingMessagesIndicator","useDateScroll","useFirstUnreadMessageId","useMessageListNavigation","useLegacyThreadMessageJump","useLegacyThreadMessageListScrolling","useLegacyThreadMessages","ThreadMessageItem","isMessageSequential","current","previous","groupingRange","isSystemMessage","groupable","u","_id","alias","ts","ThreadMessageList","_ref","mainMessage","t","_useDateScroll","innerRef","bubbleRef","listStyle","bubbleDate","_excluded","messages","loading","listWrapperRef","listWrapperScrollRef","listRef","listScrollRef","onScroll","handleScroll","parentRef","listJumpRef","enabled","hideUsernames","showUserAvatar","firstUnreadMessageId","messageGroupingPeriod","Number","messageListRef","scrollRef","createElement","className","filter","join","ref","args","style","scrollBehavior","overflowX","is","map","message","index","_ref2","sequential","newDay","shouldShowAsSequential","firstUnread","system","key","exportDefault"],"sources":["client/views/room/contextualBar/Threads/components/ThreadMessageList.tsx"],"sourcesContent":["import type { IMessage, IThreadMainMessage } from '@rocket.chat/core-typings';\nimport { Box } from '@rocket.chat/fuselage';\nimport { useMergedRefs } from '@rocket.chat/fuselage-hooks';\nimport { useSetting, useUserPreference } from '@rocket.chat/ui-contexts';\nimport { differenceInSeconds } from 'date-fns';\nimport type { ReactElement } from 'react';\nimport React, { Fragment } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { MessageTypes } from '../../../../../../app/ui-utils/client';\nimport { isTruthy } from '../../../../../../lib/isTruthy';\nimport { CustomScrollbars } from '../../../../../components/CustomScrollbars';\nimport { BubbleDate } from '../../../BubbleDate';\nimport { isMessageNewDay } from '../../../MessageList/lib/isMessageNewDay';\nimport MessageListProvider from '../../../MessageList/providers/MessageListProvider';\nimport LoadingMessagesIndicator from '../../../body/LoadingMessagesIndicator';\nimport { useDateScroll } from '../../../hooks/useDateScroll';\nimport { useFirstUnreadMessageId } from '../../../hooks/useFirstUnreadMessageId';\nimport { useMessageListNavigation } from '../../../hooks/useMessageListNavigation';\nimport { useLegacyThreadMessageJump } from '../hooks/useLegacyThreadMessageJump';\nimport { useLegacyThreadMessageListScrolling } from '../hooks/useLegacyThreadMessageListScrolling';\nimport { useLegacyThreadMessages } from '../hooks/useLegacyThreadMessages';\nimport { ThreadMessageItem } from './ThreadMessageItem';\n\nconst isMessageSequential = (current: IMessage, previous: IMessage | undefined, groupingRange: number): boolean => {\n\tif (!previous) {\n\t\treturn false;\n\t}\n\n\tif (MessageTypes.isSystemMessage(current) || MessageTypes.isSystemMessage(previous)) {\n\t\treturn false;\n\t}\n\n\tif (current.groupable === false) {\n\t\treturn false;\n\t}\n\n\tif (current.u._id !== previous.u._id) {\n\t\treturn false;\n\t}\n\n\tif (current.alias !== previous.alias) {\n\t\treturn false;\n\t}\n\treturn differenceInSeconds(current.ts, previous.ts) < groupingRange && !isMessageNewDay(current, previous);\n};\n\ntype ThreadMessageListProps = {\n\tmainMessage: IThreadMainMessage;\n};\n\nconst ThreadMessageList = ({ mainMessage }: ThreadMessageListProps): ReactElement => {\n\tconst { t } = useTranslation();\n\tconst { innerRef, bubbleRef, listStyle, ...bubbleDate } = useDateScroll();\n\n\tconst { messages, loading } = useLegacyThreadMessages(mainMessage._id);\n\tconst {\n\t\tlistWrapperRef: listWrapperScrollRef,\n\t\tlistRef: listScrollRef,\n\t\tonScroll: handleScroll,\n\t} = useLegacyThreadMessageListScrolling(mainMessage);\n\tconst { parentRef: listJumpRef } = useLegacyThreadMessageJump({ enabled: !loading });\n\n\tconst hideUsernames = useUserPreference<boolean>('hideUsernames');\n\tconst showUserAvatar = !!useUserPreference<boolean>('displayAvatars');\n\tconst firstUnreadMessageId = useFirstUnreadMessageId();\n\tconst messageGroupingPeriod = Number(useSetting('Message_GroupingPeriod'));\n\n\tconst { messageListRef } = useMessageListNavigation();\n\tconst listRef = useMergedRefs<HTMLElement | null>(listScrollRef, messageListRef);\n\n\tconst scrollRef = useMergedRefs<HTMLElement | null>(innerRef, listWrapperScrollRef, listJumpRef);\n\n\treturn (\n\t\t<div className={['thread-list js-scroll-thread', hideUsernames && 'hide-usernames'].filter(isTruthy).join(' ')}>\n\t\t\t<BubbleDate ref={bubbleRef} {...bubbleDate} />\n\t\t\t<CustomScrollbars\n\t\t\t\tref={scrollRef}\n\t\t\t\tonScroll={(args) => {\n\t\t\t\t\thandleScroll(args);\n\t\t\t\t}}\n\t\t\t\tstyle={{ scrollBehavior: 'smooth', overflowX: 'hidden' }}\n\t\t\t>\n\t\t\t\t<Box\n\t\t\t\t\tis='ul'\n\t\t\t\t\tclassName={[listStyle, 'thread']}\n\t\t\t\t\tref={listRef}\n\t\t\t\t\taria-label={t('Thread_message_list')}\n\t\t\t\t\tstyle={{ scrollBehavior: 'smooth', overflowX: 'hidden' }}\n\t\t\t\t>\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<li className='load-more'>\n\t\t\t\t\t\t\t<LoadingMessagesIndicator />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<MessageListProvider messageListRef={listJumpRef}>\n\t\t\t\t\t\t\t{[mainMessage, ...messages].map((message, index, { [index - 1]: previous }) => {\n\t\t\t\t\t\t\t\tconst sequential = isMessageSequential(message, previous, messageGroupingPeriod);\n\t\t\t\t\t\t\t\tconst newDay = isMessageNewDay(message, previous);\n\t\t\t\t\t\t\t\tconst shouldShowAsSequential = sequential && !newDay;\n\n\t\t\t\t\t\t\t\tconst firstUnread = firstUnreadMessageId === message._id;\n\t\t\t\t\t\t\t\tconst system = MessageTypes.isSystemMessage(message);\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Fragment key={message._id}>\n\t\t\t\t\t\t\t\t\t\t<ThreadMessageItem\n\t\t\t\t\t\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\t\t\t\t\t\tprevious={previous}\n\t\t\t\t\t\t\t\t\t\t\tsequential={sequential}\n\t\t\t\t\t\t\t\t\t\t\tshouldShowAsSequential={shouldShowAsSequential}\n\t\t\t\t\t\t\t\t\t\t\tshowUserAvatar={showUserAvatar}\n\t\t\t\t\t\t\t\t\t\t\tfirstUnread={firstUnread}\n\t\t\t\t\t\t\t\t\t\t\tsystem={system}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</MessageListProvider>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t</CustomScrollbars>\n\t\t</div>\n\t);\n};\n\nexport default ThreadMessageList;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e6b02ed6f2e44b64e40673ad8f5186b558ba34b4"}
