{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/2fa/server/functions/resetTOTP.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/2fa/server/functions/resetTOTP.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/2fa/server/functions/resetTOTP.ts","inputSourceMap":{"version":3,"file":"app/2fa/server/functions/resetTOTP.ts","sourceRoot":"","sources":["app/2fa/server/functions/resetTOTP.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { i18n } from '../../../../server/lib/i18n';\nimport { isUserIdFederated } from '../../../../server/lib/isUserIdFederated';\nimport { notifyOnUserChange } from '../../../lib/server/lib/notifyListener';\nimport * as Mailer from '../../../mailer/server/api';\nimport { settings } from '../../../settings/server';\n\nconst sendResetNotification = async function (uid: string): Promise<void> {\n\tconst user = await Users.findOneById<Pick<IUser, 'language' | 'emails'>>(uid, {\n\t\tprojection: { language: 1, emails: 1 },\n\t});\n\tif (!user) {\n\t\tthrow new Meteor.Error('invalid-user');\n\t}\n\n\tconst language = user.language || settings.get('Language') || 'en';\n\tconst addresses = user.emails?.filter(({ verified }) => Boolean(verified)).map((e) => e.address);\n\tif (!addresses?.length) {\n\t\treturn;\n\t}\n\n\tconst t = i18n.getFixedT(language);\n\tconst text = `\n\t${t('Your_TOTP_has_been_reset')}\n\n\t${t('TOTP_Reset_Other_Key_Warning')}\n\t`;\n\tconst html = `\n\t\t<p>${t('Your_TOTP_has_been_reset')}</p>\n\t\t<p>${t('TOTP_Reset_Other_Key_Warning')}</p>\n\t`;\n\n\tconst from = settings.get('From_Email');\n\tconst subject = t('TOTP_reset_email');\n\n\tfor await (const address of addresses) {\n\t\ttry {\n\t\t\tawait Mailer.send({\n\t\t\t\tto: address,\n\t\t\t\tfrom,\n\t\t\t\tsubject,\n\t\t\t\ttext,\n\t\t\t\thtml,\n\t\t\t} as any);\n\t\t} catch (error) {\n\t\t\tconst message = error instanceof Error ? error.message : String(error);\n\t\t\tthrow new Meteor.Error('error-email-send-failed', `Error trying to send email: ${message}`, {\n\t\t\t\tfunction: 'resetUserTOTP',\n\t\t\t\tmessage,\n\t\t\t});\n\t\t}\n\t}\n};\n\nexport async function resetTOTP(userId: string, notifyUser = false): Promise<boolean> {\n\tif (notifyUser) {\n\t\tawait sendResetNotification(userId);\n\t}\n\n\tconst isUserFederated = await isUserIdFederated(userId);\n\tif (isUserFederated) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Federated Users cant have TOTP', { function: 'resetTOTP' });\n\t}\n\n\tconst result = await Users.resetTOTPById(userId);\n\n\tif (result?.modifiedCount === 1) {\n\t\tawait Users.unsetLoginTokens(userId);\n\n\t\tvoid notifyOnUserChange({\n\t\t\tclientAction: 'updated',\n\t\t\tid: userId,\n\t\t\tdiff: {\n\t\t\t\t'services.resume.loginTokens': [],\n\t\t\t},\n\t\t});\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/2fa/server/functions/resetTOTP.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/2fa/server/functions/resetTOTP.ts","inputSourceMap":{"version":3,"file":"app/2fa/server/functions/resetTOTP.ts","sourceRoot":"","sources":["app/2fa/server/functions/resetTOTP.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { i18n } from '../../../../server/lib/i18n';\nimport { isUserIdFederated } from '../../../../server/lib/isUserIdFederated';\nimport { notifyOnUserChange } from '../../../lib/server/lib/notifyListener';\nimport * as Mailer from '../../../mailer/server/api';\nimport { settings } from '../../../settings/server';\n\nconst sendResetNotification = async function (uid: string): Promise<void> {\n\tconst user = await Users.findOneById<Pick<IUser, 'language' | 'emails'>>(uid, {\n\t\tprojection: { language: 1, emails: 1 },\n\t});\n\tif (!user) {\n\t\tthrow new Meteor.Error('invalid-user');\n\t}\n\n\tconst language = user.language || settings.get('Language') || 'en';\n\tconst addresses = user.emails?.filter(({ verified }) => Boolean(verified)).map((e) => e.address);\n\tif (!addresses?.length) {\n\t\treturn;\n\t}\n\n\tconst t = i18n.getFixedT(language);\n\tconst text = `\n\t${t('Your_TOTP_has_been_reset')}\n\n\t${t('TOTP_Reset_Other_Key_Warning')}\n\t`;\n\tconst html = `\n\t\t<p>${t('Your_TOTP_has_been_reset')}</p>\n\t\t<p>${t('TOTP_Reset_Other_Key_Warning')}</p>\n\t`;\n\n\tconst from = settings.get('From_Email');\n\tconst subject = t('TOTP_reset_email');\n\n\tfor await (const address of addresses) {\n\t\ttry {\n\t\t\tawait Mailer.send({\n\t\t\t\tto: address,\n\t\t\t\tfrom,\n\t\t\t\tsubject,\n\t\t\t\ttext,\n\t\t\t\thtml,\n\t\t\t} as any);\n\t\t} catch (error) {\n\t\t\tconst message = error instanceof Error ? error.message : String(error);\n\t\t\tthrow new Meteor.Error('error-email-send-failed', `Error trying to send email: ${message}`, {\n\t\t\t\tfunction: 'resetUserTOTP',\n\t\t\t\tmessage,\n\t\t\t});\n\t\t}\n\t}\n};\n\nexport async function resetTOTP(userId: string, notifyUser = false): Promise<boolean> {\n\tif (notifyUser) {\n\t\tawait sendResetNotification(userId);\n\t}\n\n\tconst isUserFederated = await isUserIdFederated(userId);\n\tif (isUserFederated) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Federated Users cant have TOTP', { function: 'resetTOTP' });\n\t}\n\n\tconst result = await Users.resetTOTPById(userId);\n\n\tif (result?.modifiedCount === 1) {\n\t\tawait Users.unsetLoginTokens(userId);\n\n\t\tvoid notifyOnUserChange({\n\t\t\tclientAction: 'updated',\n\t\t\tid: userId,\n\t\t\tdiff: {\n\t\t\t\t'services.resume.loginTokens': [],\n\t\t\t},\n\t\t});\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      resetTOTP: () => resetTOTP\n    });\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let i18n;\n    module.link(\"../../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 2);\n    let isUserIdFederated;\n    module.link(\"../../../../server/lib/isUserIdFederated\", {\n      isUserIdFederated(v) {\n        isUserIdFederated = v;\n      }\n    }, 3);\n    let notifyOnUserChange;\n    module.link(\"../../../lib/server/lib/notifyListener\", {\n      notifyOnUserChange(v) {\n        notifyOnUserChange = v;\n      }\n    }, 4);\n    let Mailer;\n    module.link(\"../../../mailer/server/api\", {\n      \"*\"(v) {\n        Mailer = v;\n      }\n    }, 5);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const sendResetNotification = async function (uid) {\n      var _user$emails;\n      const user = await Users.findOneById(uid, {\n        projection: {\n          language: 1,\n          emails: 1\n        }\n      });\n      if (!user) {\n        throw new Meteor.Error('invalid-user');\n      }\n      const language = user.language || settings.get('Language') || 'en';\n      const addresses = (_user$emails = user.emails) === null || _user$emails === void 0 ? void 0 : _user$emails.filter(_ref => {\n        let {\n          verified\n        } = _ref;\n        return Boolean(verified);\n      }).map(e => e.address);\n      if (!(addresses !== null && addresses !== void 0 && addresses.length)) {\n        return;\n      }\n      const t = i18n.getFixedT(language);\n      const text = \"\\n\\t\".concat(t('Your_TOTP_has_been_reset'), \"\\n\\n\\t\").concat(t('TOTP_Reset_Other_Key_Warning'), \"\\n\\t\");\n      const html = \"\\n\\t\\t<p>\".concat(t('Your_TOTP_has_been_reset'), \"</p>\\n\\t\\t<p>\").concat(t('TOTP_Reset_Other_Key_Warning'), \"</p>\\n\\t\");\n      const from = settings.get('From_Email');\n      const subject = t('TOTP_reset_email');\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(addresses), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const address = _step.value;\n          {\n            try {\n              await Mailer.send({\n                to: address,\n                from,\n                subject,\n                text,\n                html\n              });\n            } catch (error) {\n              const message = error instanceof Error ? error.message : String(error);\n              throw new Meteor.Error('error-email-send-failed', \"Error trying to send email: \".concat(message), {\n                function: 'resetUserTOTP',\n                message\n              });\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    };\n    async function resetTOTP(userId) {\n      let notifyUser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (notifyUser) {\n        await sendResetNotification(userId);\n      }\n      const isUserFederated = await isUserIdFederated(userId);\n      if (isUserFederated) {\n        throw new Meteor.Error('error-not-allowed', 'Federated Users cant have TOTP', {\n          function: 'resetTOTP'\n        });\n      }\n      const result = await Users.resetTOTPById(userId);\n      if ((result === null || result === void 0 ? void 0 : result.modifiedCount) === 1) {\n        await Users.unsetLoginTokens(userId);\n        void notifyOnUserChange({\n          clientAction: 'updated',\n          id: userId,\n          diff: {\n            'services.resume.loginTokens': []\n          }\n        });\n        return true;\n      }\n      return false;\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","resetTOTP","Users","Meteor","i18n","isUserIdFederated","notifyOnUserChange","Mailer","*","settings","__reifyWaitForDeps__","sendResetNotification","uid","_user$emails","user","findOneById","projection","language","emails","Error","get","addresses","filter","_ref","verified","Boolean","map","e","address","length","t","getFixedT","text","concat","html","from","subject","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","value","send","to","error","message","String","function","err","return","userId","notifyUser","arguments","undefined","isUserFederated","result","resetTOTPById","modifiedCount","unsetLoginTokens","clientAction","id","diff","__reify_async_result__","_reifyError","self","async"],"sources":["app/2fa/server/functions/resetTOTP.ts"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { i18n } from '../../../../server/lib/i18n';\nimport { isUserIdFederated } from '../../../../server/lib/isUserIdFederated';\nimport { notifyOnUserChange } from '../../../lib/server/lib/notifyListener';\nimport * as Mailer from '../../../mailer/server/api';\nimport { settings } from '../../../settings/server';\n\nconst sendResetNotification = async function (uid: string): Promise<void> {\n\tconst user = await Users.findOneById<Pick<IUser, 'language' | 'emails'>>(uid, {\n\t\tprojection: { language: 1, emails: 1 },\n\t});\n\tif (!user) {\n\t\tthrow new Meteor.Error('invalid-user');\n\t}\n\n\tconst language = user.language || settings.get('Language') || 'en';\n\tconst addresses = user.emails?.filter(({ verified }) => Boolean(verified)).map((e) => e.address);\n\tif (!addresses?.length) {\n\t\treturn;\n\t}\n\n\tconst t = i18n.getFixedT(language);\n\tconst text = `\n\t${t('Your_TOTP_has_been_reset')}\n\n\t${t('TOTP_Reset_Other_Key_Warning')}\n\t`;\n\tconst html = `\n\t\t<p>${t('Your_TOTP_has_been_reset')}</p>\n\t\t<p>${t('TOTP_Reset_Other_Key_Warning')}</p>\n\t`;\n\n\tconst from = settings.get('From_Email');\n\tconst subject = t('TOTP_reset_email');\n\n\tfor await (const address of addresses) {\n\t\ttry {\n\t\t\tawait Mailer.send({\n\t\t\t\tto: address,\n\t\t\t\tfrom,\n\t\t\t\tsubject,\n\t\t\t\ttext,\n\t\t\t\thtml,\n\t\t\t} as any);\n\t\t} catch (error) {\n\t\t\tconst message = error instanceof Error ? error.message : String(error);\n\t\t\tthrow new Meteor.Error('error-email-send-failed', `Error trying to send email: ${message}`, {\n\t\t\t\tfunction: 'resetUserTOTP',\n\t\t\t\tmessage,\n\t\t\t});\n\t\t}\n\t}\n};\n\nexport async function resetTOTP(userId: string, notifyUser = false): Promise<boolean> {\n\tif (notifyUser) {\n\t\tawait sendResetNotification(userId);\n\t}\n\n\tconst isUserFederated = await isUserIdFederated(userId);\n\tif (isUserFederated) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Federated Users cant have TOTP', { function: 'resetTOTP' });\n\t}\n\n\tconst result = await Users.resetTOTPById(userId);\n\n\tif (result?.modifiedCount === 1) {\n\t\tawait Users.unsetLoginTokens(userId);\n\n\t\tvoid notifyOnUserChange({\n\t\t\tclientAction: 'updated',\n\t\t\tid: userId,\n\t\t\tdiff: {\n\t\t\t\t'services.resume.loginTokens': [],\n\t\t\t},\n\t\t});\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"bc646f555cb48eeb6296d614339675e30c879ca6"}
