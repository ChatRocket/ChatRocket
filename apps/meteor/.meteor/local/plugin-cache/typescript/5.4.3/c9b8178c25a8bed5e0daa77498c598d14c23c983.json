{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/models/client/models/Users.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/models/client/models/Users.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/models/client/models/Users.ts","inputSourceMap":{"version":3,"file":"app/models/client/models/Users.ts","sourceRoot":"","sources":["app/models/client/models/Users.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAErC,MAAM,eAAgB,SAAQ,KAAK,CAAC,UAAiB;IACpD;QACC,KAAK,CAAC,IAAI,CAAC,CAAC;IACb,CAAC;IAED,WAAW,CAAuD,GAAiB,EAAE,OAAkB;QACtG,MAAM,KAAK,GAA0B;YACpC,GAAG,EAAE,GAAG;SACR,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,YAAY,CAAC,GAAiB,EAAE,MAAoB;QACnD,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC7D,OAAO,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACzE,CAAC;IAED,gBAAgB,CAAC,KAAoC,EAAE,MAAc,EAAE,OAAY;QAClF,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAE/C,MAAM,KAAK,GAA0B;YACpC,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE;SACrB,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;CACD;AAED,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;IAC3B,WAAW,EAAE,SAAS;IACtB,WAAW,EAAE,eAAe,CAAC,SAAS,CAAC,WAAW;IAClD,YAAY,EAAE,eAAe,CAAC,SAAS,CAAC,YAAY;IACpD,gBAAgB,EAAE,eAAe,CAAC,SAAS,CAAC,gBAAgB;IAC5D,MAAM,EAAE,eAAe,CAAC,SAAS,CAAC,MAAM;CACxC,CAAC,CAAC;AAEH,qMAAqM;AACrM,MAAM,CAAC,MAAM,KAAK,GAAG,MAAM,CAAC,KAAmC,CAAC","sourcesContent":["import type { IRole, IUser } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n\nclass UsersCollection extends Mongo.Collection<IUser> {\n\tconstructor() {\n\t\tsuper(null);\n\t}\n\n\tfindOneById<TOptions extends Omit<Mongo.Options<IUser>, 'limit'>>(uid: IUser['_id'], options?: TOptions) {\n\t\tconst query: Mongo.Selector<IUser> = {\n\t\t\t_id: uid,\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tisUserInRole(uid: IUser['_id'], roleId: IRole['_id']) {\n\t\tconst user = this.findOneById(uid, { fields: { roles: 1 } });\n\t\treturn user && Array.isArray(user.roles) && user.roles.includes(roleId);\n\t}\n\n\tfindUsersInRoles(roles: IRole['_id'][] | IRole['_id'], _scope: string, options: any) {\n\t\troles = Array.isArray(roles) ? roles : [roles];\n\n\t\tconst query: Mongo.Selector<IUser> = {\n\t\t\troles: { $in: roles },\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n}\n\nObject.assign(Meteor.users, {\n\t_connection: undefined,\n\tfindOneById: UsersCollection.prototype.findOneById,\n\tisUserInRole: UsersCollection.prototype.isUserInRole,\n\tfindUsersInRoles: UsersCollection.prototype.findUsersInRoles,\n\tremove: UsersCollection.prototype.remove,\n});\n\n/** @deprecated new code refer to Minimongo collections like this one; prefer fetching data from the REST API, listening to changes via streamer events, and storing the state in a Tanstack Query */\nexport const Users = Meteor.users as unknown as UsersCollection;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/models/client/models/Users.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/client/models/Users.ts","inputSourceMap":{"version":3,"file":"app/models/client/models/Users.ts","sourceRoot":"","sources":["app/models/client/models/Users.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAErC,MAAM,eAAgB,SAAQ,KAAK,CAAC,UAAiB;IACpD;QACC,KAAK,CAAC,IAAI,CAAC,CAAC;IACb,CAAC;IAED,WAAW,CAAuD,GAAiB,EAAE,OAAkB;QACtG,MAAM,KAAK,GAA0B;YACpC,GAAG,EAAE,GAAG;SACR,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,YAAY,CAAC,GAAiB,EAAE,MAAoB;QACnD,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC7D,OAAO,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACzE,CAAC;IAED,gBAAgB,CAAC,KAAoC,EAAE,MAAc,EAAE,OAAY;QAClF,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAE/C,MAAM,KAAK,GAA0B;YACpC,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE;SACrB,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;CACD;AAED,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;IAC3B,WAAW,EAAE,SAAS;IACtB,WAAW,EAAE,eAAe,CAAC,SAAS,CAAC,WAAW;IAClD,YAAY,EAAE,eAAe,CAAC,SAAS,CAAC,YAAY;IACpD,gBAAgB,EAAE,eAAe,CAAC,SAAS,CAAC,gBAAgB;IAC5D,MAAM,EAAE,eAAe,CAAC,SAAS,CAAC,MAAM;CACxC,CAAC,CAAC;AAEH,qMAAqM;AACrM,MAAM,CAAC,MAAM,KAAK,GAAG,MAAM,CAAC,KAAmC,CAAC","sourcesContent":["import type { IRole, IUser } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n\nclass UsersCollection extends Mongo.Collection<IUser> {\n\tconstructor() {\n\t\tsuper(null);\n\t}\n\n\tfindOneById<TOptions extends Omit<Mongo.Options<IUser>, 'limit'>>(uid: IUser['_id'], options?: TOptions) {\n\t\tconst query: Mongo.Selector<IUser> = {\n\t\t\t_id: uid,\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tisUserInRole(uid: IUser['_id'], roleId: IRole['_id']) {\n\t\tconst user = this.findOneById(uid, { fields: { roles: 1 } });\n\t\treturn user && Array.isArray(user.roles) && user.roles.includes(roleId);\n\t}\n\n\tfindUsersInRoles(roles: IRole['_id'][] | IRole['_id'], _scope: string, options: any) {\n\t\troles = Array.isArray(roles) ? roles : [roles];\n\n\t\tconst query: Mongo.Selector<IUser> = {\n\t\t\troles: { $in: roles },\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n}\n\nObject.assign(Meteor.users, {\n\t_connection: undefined,\n\tfindOneById: UsersCollection.prototype.findOneById,\n\tisUserInRole: UsersCollection.prototype.isUserInRole,\n\tfindUsersInRoles: UsersCollection.prototype.findUsersInRoles,\n\tremove: UsersCollection.prototype.remove,\n});\n\n/** @deprecated new code refer to Minimongo collections like this one; prefer fetching data from the REST API, listening to changes via streamer events, and storing the state in a Tanstack Query */\nexport const Users = Meteor.users as unknown as UsersCollection;\n"]}}},"code":"var _inheritsLoose;\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 0);\nmodule.export({\n  Users: function () {\n    return Users;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 1);\nvar UsersCollection = /*#__PURE__*/function (_Mongo$Collection) {\n  function UsersCollection() {\n    return _Mongo$Collection.call(this, null) || this;\n  }\n  _inheritsLoose(UsersCollection, _Mongo$Collection);\n  var _proto = UsersCollection.prototype;\n  _proto.findOneById = function () {\n    function findOneById(uid, options) {\n      var query = {\n        _id: uid\n      };\n      return this.findOne(query, options);\n    }\n    return findOneById;\n  }();\n  _proto.isUserInRole = function () {\n    function isUserInRole(uid, roleId) {\n      var user = this.findOneById(uid, {\n        fields: {\n          roles: 1\n        }\n      });\n      return user && Array.isArray(user.roles) && user.roles.includes(roleId);\n    }\n    return isUserInRole;\n  }();\n  _proto.findUsersInRoles = function () {\n    function findUsersInRoles(roles, _scope, options) {\n      roles = Array.isArray(roles) ? roles : [roles];\n      var query = {\n        roles: {\n          $in: roles\n        }\n      };\n      return this.find(query, options);\n    }\n    return findUsersInRoles;\n  }();\n  return UsersCollection;\n}(Mongo.Collection);\nObject.assign(Meteor.users, {\n  _connection: undefined,\n  findOneById: UsersCollection.prototype.findOneById,\n  isUserInRole: UsersCollection.prototype.isUserInRole,\n  findUsersInRoles: UsersCollection.prototype.findUsersInRoles,\n  remove: UsersCollection.prototype.remove\n});\n/** @deprecated new code refer to Minimongo collections like this one; prefer fetching data from the REST API, listening to changes via streamer events, and storing the state in a Tanstack Query */\nvar Users = Meteor.users;","map":{"version":3,"names":["_inheritsLoose","module","link","default","v","export","Users","Meteor","Mongo","UsersCollection","_Mongo$Collection","call","_proto","prototype","findOneById","uid","options","query","_id","findOne","isUserInRole","roleId","user","fields","roles","Array","isArray","includes","findUsersInRoles","_scope","$in","find","Collection","Object","assign","users","_connection","undefined","remove"],"sources":["app/models/client/models/Users.ts"],"sourcesContent":["import type { IRole, IUser } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n\nclass UsersCollection extends Mongo.Collection<IUser> {\n\tconstructor() {\n\t\tsuper(null);\n\t}\n\n\tfindOneById<TOptions extends Omit<Mongo.Options<IUser>, 'limit'>>(uid: IUser['_id'], options?: TOptions) {\n\t\tconst query: Mongo.Selector<IUser> = {\n\t\t\t_id: uid,\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tisUserInRole(uid: IUser['_id'], roleId: IRole['_id']) {\n\t\tconst user = this.findOneById(uid, { fields: { roles: 1 } });\n\t\treturn user && Array.isArray(user.roles) && user.roles.includes(roleId);\n\t}\n\n\tfindUsersInRoles(roles: IRole['_id'][] | IRole['_id'], _scope: string, options: any) {\n\t\troles = Array.isArray(roles) ? roles : [roles];\n\n\t\tconst query: Mongo.Selector<IUser> = {\n\t\t\troles: { $in: roles },\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n}\n\nObject.assign(Meteor.users, {\n\t_connection: undefined,\n\tfindOneById: UsersCollection.prototype.findOneById,\n\tisUserInRole: UsersCollection.prototype.isUserInRole,\n\tfindUsersInRoles: UsersCollection.prototype.findUsersInRoles,\n\tremove: UsersCollection.prototype.remove,\n});\n\n/** @deprecated new code refer to Minimongo collections like this one; prefer fetching data from the REST API, listening to changes via streamer events, and storing the state in a Tanstack Query */\nexport const Users = Meteor.users as unknown as UsersCollection;\n"],"mappings":"AACA,IAAAA,cAAiB;AAAAC,MAAM,CAAAC,IAAA,uCAAgB;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAJ,cAAA,GAAAI,CAAA;EAAA;AAAA;AAAvCH,MAAA,CAAOI,MAAE;EAAMC,KAAE,WAAAA,CAAA,EAAM;IAAA,OAAgBA,KAAA;EAAA;AAAA;AAAA,IAAAC,MAAA;AAAAN,MAAA,CAAAC,IAAA;EAAAK,MAAA,WAAAA,CAAAH,CAAA;IAAAG,MAAA,GAAAH,CAAA;EAAA;AAAA;AAAA,IAAAI,KAAA;AAAAP,MAAA,CAAAC,IAAA;EAAAM,KAAA,WAAAA,CAAAJ,CAAA;IAAAI,KAAA,GAAAJ,CAAA;EAAA;AAAA;AAAA,IAGjCK,eAAgB,0BAAAC,iBAAA;EACrB,SAAAD,gBAAA;IAAA,OACCC,iBAAA,CAAAC,IAAA,OAAM,IAAI,CAAC;EACZ;EAACX,cAAA,CAAAS,eAAA,EAAAC,iBAAA;EAAA,IAAAE,MAAA,GAAAH,eAAA,CAAAI,SAAA;EAAAD,MAAA,CAEDE,WAAW;IAAX,SAAAA,YAAkEC,GAAiB,EAAEC,OAAkB;MACtG,IAAMC,KAAK,GAA0B;QACpCC,GAAG,EAAEH;OACL;MAED,OAAO,IAAI,CAACI,OAAO,CAACF,KAAK,EAAED,OAAO,CAAC;IACpC;IAAC,OAAAF,WAAA;EAAA;EAAAF,MAAA,CAEDQ,YAAY;IAAZ,SAAAA,aAAaL,GAAiB,EAAEM,MAAoB;MACnD,IAAMC,IAAI,GAAG,IAAI,CAACR,WAAW,CAACC,GAAG,EAAE;QAAEQ,MAAM,EAAE;UAAEC,KAAK,EAAE;QAAC;MAAE,CAAE,CAAC;MAC5D,OAAOF,IAAI,IAAIG,KAAK,CAACC,OAAO,CAACJ,IAAI,CAACE,KAAK,CAAC,IAAIF,IAAI,CAACE,KAAK,CAACG,QAAQ,CAACN,MAAM,CAAC;IACxE;IAAC,OAAAD,YAAA;EAAA;EAAAR,MAAA,CAEDgB,gBAAgB;IAAhB,SAAAA,iBAAiBJ,KAAoC,EAAEK,MAAc,EAAEb,OAAY;MAClFQ,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;MAE9C,IAAMP,KAAK,GAA0B;QACpCO,KAAK,EAAE;UAAEM,GAAG,EAAEN;QAAK;OACnB;MAED,OAAO,IAAI,CAACO,IAAI,CAACd,KAAK,EAAED,OAAO,CAAC;IACjC;IAAC,OAAAY,gBAAA;EAAA;EAAA,OAAAnB,eAAA;AAAA,EA1B4BD,KAAK,CAACwB,UAAiB;AA6BrDC,MAAM,CAACC,MAAM,CAAC3B,MAAM,CAAC4B,KAAK,EAAE;EAC3BC,WAAW,EAAEC,SAAS;EACtBvB,WAAW,EAAEL,eAAe,CAACI,SAAS,CAACC,WAAW;EAClDM,YAAY,EAAEX,eAAe,CAACI,SAAS,CAACO,YAAY;EACpDQ,gBAAgB,EAAEnB,eAAe,CAACI,SAAS,CAACe,gBAAgB;EAC5DU,MAAM,EAAE7B,eAAe,CAACI,SAAS,CAACyB;CAClC,CAAC;AAEF;AACO,IAAMhC,KAAK,GAAGC,MAAM,CAAC4B,KAAmC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c9b8178c25a8bed5e0daa77498c598d14c23c983"}
