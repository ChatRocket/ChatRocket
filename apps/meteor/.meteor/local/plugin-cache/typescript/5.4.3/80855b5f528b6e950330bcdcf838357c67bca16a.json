{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/contexts/VideoConfContext.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/contexts/VideoConfContext.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/contexts/VideoConfContext.ts","inputSourceMap":{"version":3,"file":"client/contexts/VideoConfContext.ts","sourceRoot":"","sources":["client/contexts/VideoConfContext.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAElD,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;AA4BnD,MAAM,CAAC,MAAM,gBAAgB,GAAG,aAAa,CAAoC,SAAS,CAAC,CAAC;AAC5F,MAAM,mBAAmB,GAAG,GAA0B,EAAE;IACvD,MAAM,OAAO,GAAG,UAAU,CAAC,gBAAgB,CAAC,CAAC;IAC7C,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;IACzD,CAAC;IAED,OAAO,OAAO,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,4BAA4B,GAAG,GAA8C,EAAE,CAAC,mBAAmB,EAAE,CAAC,gBAAgB,CAAC;AACpI,MAAM,CAAC,MAAM,2BAA2B,GAAG,GAA6C,EAAE,CAAC,mBAAmB,EAAE,CAAC,eAAe,CAAC;AACjI,MAAM,CAAC,MAAM,qBAAqB,GAAG,GAAuC,EAAE,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC;AAC/G,MAAM,CAAC,MAAM,sBAAsB,GAAG,GAAwC,EAAE,CAAC,mBAAmB,EAAE,CAAC,UAAU,CAAC;AAClH,MAAM,CAAC,MAAM,oBAAoB,GAAG,GAAsC,EAAE,CAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC;AAC5G,MAAM,CAAC,MAAM,uBAAuB,GAAG,GAAyC,EAAE,CAAC,mBAAmB,EAAE,CAAC,WAAW,CAAC;AACrH,MAAM,CAAC,MAAM,qBAAqB,GAAG,GAAuC,EAAE,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC;AAC/G,MAAM,CAAC,MAAM,8BAA8B,GAAG,GAAgD,EAAE,CAAC,mBAAmB,EAAE,CAAC,kBAAkB,CAAC;AAC1I,MAAM,CAAC,MAAM,yBAAyB,GAAG,GAAqB,EAAE;IAC/D,MAAM,EAAE,kBAAkB,EAAE,GAAG,mBAAmB,EAAE,CAAC;IACrD,OAAO,eAAe,CAAC,kBAAkB,CAAC,CAAC;AAC5C,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,0BAA0B,GAAG,GAA4C,EAAE,CAAC,mBAAmB,EAAE,CAAC,cAAc,CAAC;AAC9H,MAAM,CAAC,MAAM,qBAAqB,GAAG,GAAY,EAAE;IAClD,MAAM,EAAE,YAAY,EAAE,GAAG,mBAAmB,EAAE,CAAC;IAC/C,OAAO,eAAe,CAAC,YAAY,CAAC,CAAC;AACtC,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,qBAAqB,GAAG,GAAY,EAAE;IAClD,MAAM,EAAE,YAAY,EAAE,GAAG,mBAAmB,EAAE,CAAC;IAC/C,OAAO,eAAe,CAAC,YAAY,CAAC,CAAC;AACtC,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,wBAAwB,GAAG,GAAyB,EAAE;IAClE,MAAM,EAAE,iBAAiB,EAAE,GAAG,mBAAmB,EAAE,CAAC;IACpD,OAAO,eAAe,CAAC,iBAAiB,CAAC,CAAC;AAC3C,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,uBAAuB,GAAG,GAAoB,EAAE;IAC5D,MAAM,EAAE,gBAAgB,EAAE,GAAG,mBAAmB,EAAE,CAAC;IACnD,OAAO,eAAe,CAAC,gBAAgB,CAAC,CAAC;AAC1C,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,GAAwC,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE,OAAO,CAAC","sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { createContext, useContext } from 'react';\nimport type { Subscription } from 'use-subscription';\nimport { useSubscription } from 'use-subscription';\n\nimport type { DirectCallData, ProviderCapabilities, CallPreferences, VideoConfManager } from '../lib/VideoConfManager';\n\nexport type VideoConfPopupPayload = {\n\tid: string;\n\trid: IRoom['_id'];\n\tisReceiving?: boolean;\n};\n\ntype VideoConfContextValue = {\n\tmanager: typeof VideoConfManager;\n\tdispatchOutgoing: (options: Omit<VideoConfPopupPayload, 'id'>) => void;\n\tdismissOutgoing: () => void;\n\tstartCall: (rid: IRoom['_id'], title?: string) => void;\n\tacceptCall: (callId: string) => void;\n\tjoinCall: (callId: string) => void;\n\tdismissCall: (callId: string) => void;\n\trejectIncomingCall: (callId: string) => void;\n\tabortCall: () => void;\n\tsetPreferences: (prefs: { mic?: boolean; cam?: boolean }) => void;\n\tqueryIncomingCalls: Subscription<DirectCallData[]>;\n\tqueryRinging: Subscription<boolean>;\n\tqueryCalling: Subscription<boolean>;\n\tqueryCapabilities: Subscription<ProviderCapabilities>;\n\tqueryPreferences: Subscription<CallPreferences>;\n};\n\nexport const VideoConfContext = createContext<VideoConfContextValue | undefined>(undefined);\nconst useVideoConfContext = (): VideoConfContextValue => {\n\tconst context = useContext(VideoConfContext);\n\tif (!context) {\n\t\tthrow new Error('Must be running in VideoConf Context');\n\t}\n\n\treturn context;\n};\n\nexport const useVideoConfDispatchOutgoing = (): VideoConfContextValue['dispatchOutgoing'] => useVideoConfContext().dispatchOutgoing;\nexport const useVideoConfDismissOutgoing = (): VideoConfContextValue['dismissOutgoing'] => useVideoConfContext().dismissOutgoing;\nexport const useVideoConfStartCall = (): VideoConfContextValue['startCall'] => useVideoConfContext().startCall;\nexport const useVideoConfAcceptCall = (): VideoConfContextValue['acceptCall'] => useVideoConfContext().acceptCall;\nexport const useVideoConfJoinCall = (): VideoConfContextValue['joinCall'] => useVideoConfContext().joinCall;\nexport const useVideoConfDismissCall = (): VideoConfContextValue['dismissCall'] => useVideoConfContext().dismissCall;\nexport const useVideoConfAbortCall = (): VideoConfContextValue['abortCall'] => useVideoConfContext().abortCall;\nexport const useVideoConfRejectIncomingCall = (): VideoConfContextValue['rejectIncomingCall'] => useVideoConfContext().rejectIncomingCall;\nexport const useVideoConfIncomingCalls = (): DirectCallData[] => {\n\tconst { queryIncomingCalls } = useVideoConfContext();\n\treturn useSubscription(queryIncomingCalls);\n};\nexport const useVideoConfSetPreferences = (): VideoConfContextValue['setPreferences'] => useVideoConfContext().setPreferences;\nexport const useVideoConfIsRinging = (): boolean => {\n\tconst { queryRinging } = useVideoConfContext();\n\treturn useSubscription(queryRinging);\n};\nexport const useVideoConfIsCalling = (): boolean => {\n\tconst { queryCalling } = useVideoConfContext();\n\treturn useSubscription(queryCalling);\n};\nexport const useVideoConfCapabilities = (): ProviderCapabilities => {\n\tconst { queryCapabilities } = useVideoConfContext();\n\treturn useSubscription(queryCapabilities);\n};\nexport const useVideoConfPreferences = (): CallPreferences => {\n\tconst { queryPreferences } = useVideoConfContext();\n\treturn useSubscription(queryPreferences);\n};\n\nexport const useVideoConfManager = (): typeof VideoConfManager | undefined => useContext(VideoConfContext)?.manager;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/contexts/VideoConfContext.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/contexts/VideoConfContext.ts","inputSourceMap":{"version":3,"file":"client/contexts/VideoConfContext.ts","sourceRoot":"","sources":["client/contexts/VideoConfContext.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAElD,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;AA4BnD,MAAM,CAAC,MAAM,gBAAgB,GAAG,aAAa,CAAoC,SAAS,CAAC,CAAC;AAC5F,MAAM,mBAAmB,GAAG,GAA0B,EAAE;IACvD,MAAM,OAAO,GAAG,UAAU,CAAC,gBAAgB,CAAC,CAAC;IAC7C,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;IACzD,CAAC;IAED,OAAO,OAAO,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,4BAA4B,GAAG,GAA8C,EAAE,CAAC,mBAAmB,EAAE,CAAC,gBAAgB,CAAC;AACpI,MAAM,CAAC,MAAM,2BAA2B,GAAG,GAA6C,EAAE,CAAC,mBAAmB,EAAE,CAAC,eAAe,CAAC;AACjI,MAAM,CAAC,MAAM,qBAAqB,GAAG,GAAuC,EAAE,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC;AAC/G,MAAM,CAAC,MAAM,sBAAsB,GAAG,GAAwC,EAAE,CAAC,mBAAmB,EAAE,CAAC,UAAU,CAAC;AAClH,MAAM,CAAC,MAAM,oBAAoB,GAAG,GAAsC,EAAE,CAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC;AAC5G,MAAM,CAAC,MAAM,uBAAuB,GAAG,GAAyC,EAAE,CAAC,mBAAmB,EAAE,CAAC,WAAW,CAAC;AACrH,MAAM,CAAC,MAAM,qBAAqB,GAAG,GAAuC,EAAE,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC;AAC/G,MAAM,CAAC,MAAM,8BAA8B,GAAG,GAAgD,EAAE,CAAC,mBAAmB,EAAE,CAAC,kBAAkB,CAAC;AAC1I,MAAM,CAAC,MAAM,yBAAyB,GAAG,GAAqB,EAAE;IAC/D,MAAM,EAAE,kBAAkB,EAAE,GAAG,mBAAmB,EAAE,CAAC;IACrD,OAAO,eAAe,CAAC,kBAAkB,CAAC,CAAC;AAC5C,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,0BAA0B,GAAG,GAA4C,EAAE,CAAC,mBAAmB,EAAE,CAAC,cAAc,CAAC;AAC9H,MAAM,CAAC,MAAM,qBAAqB,GAAG,GAAY,EAAE;IAClD,MAAM,EAAE,YAAY,EAAE,GAAG,mBAAmB,EAAE,CAAC;IAC/C,OAAO,eAAe,CAAC,YAAY,CAAC,CAAC;AACtC,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,qBAAqB,GAAG,GAAY,EAAE;IAClD,MAAM,EAAE,YAAY,EAAE,GAAG,mBAAmB,EAAE,CAAC;IAC/C,OAAO,eAAe,CAAC,YAAY,CAAC,CAAC;AACtC,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,wBAAwB,GAAG,GAAyB,EAAE;IAClE,MAAM,EAAE,iBAAiB,EAAE,GAAG,mBAAmB,EAAE,CAAC;IACpD,OAAO,eAAe,CAAC,iBAAiB,CAAC,CAAC;AAC3C,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,uBAAuB,GAAG,GAAoB,EAAE;IAC5D,MAAM,EAAE,gBAAgB,EAAE,GAAG,mBAAmB,EAAE,CAAC;IACnD,OAAO,eAAe,CAAC,gBAAgB,CAAC,CAAC;AAC1C,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,GAAwC,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE,OAAO,CAAC","sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { createContext, useContext } from 'react';\nimport type { Subscription } from 'use-subscription';\nimport { useSubscription } from 'use-subscription';\n\nimport type { DirectCallData, ProviderCapabilities, CallPreferences, VideoConfManager } from '../lib/VideoConfManager';\n\nexport type VideoConfPopupPayload = {\n\tid: string;\n\trid: IRoom['_id'];\n\tisReceiving?: boolean;\n};\n\ntype VideoConfContextValue = {\n\tmanager: typeof VideoConfManager;\n\tdispatchOutgoing: (options: Omit<VideoConfPopupPayload, 'id'>) => void;\n\tdismissOutgoing: () => void;\n\tstartCall: (rid: IRoom['_id'], title?: string) => void;\n\tacceptCall: (callId: string) => void;\n\tjoinCall: (callId: string) => void;\n\tdismissCall: (callId: string) => void;\n\trejectIncomingCall: (callId: string) => void;\n\tabortCall: () => void;\n\tsetPreferences: (prefs: { mic?: boolean; cam?: boolean }) => void;\n\tqueryIncomingCalls: Subscription<DirectCallData[]>;\n\tqueryRinging: Subscription<boolean>;\n\tqueryCalling: Subscription<boolean>;\n\tqueryCapabilities: Subscription<ProviderCapabilities>;\n\tqueryPreferences: Subscription<CallPreferences>;\n};\n\nexport const VideoConfContext = createContext<VideoConfContextValue | undefined>(undefined);\nconst useVideoConfContext = (): VideoConfContextValue => {\n\tconst context = useContext(VideoConfContext);\n\tif (!context) {\n\t\tthrow new Error('Must be running in VideoConf Context');\n\t}\n\n\treturn context;\n};\n\nexport const useVideoConfDispatchOutgoing = (): VideoConfContextValue['dispatchOutgoing'] => useVideoConfContext().dispatchOutgoing;\nexport const useVideoConfDismissOutgoing = (): VideoConfContextValue['dismissOutgoing'] => useVideoConfContext().dismissOutgoing;\nexport const useVideoConfStartCall = (): VideoConfContextValue['startCall'] => useVideoConfContext().startCall;\nexport const useVideoConfAcceptCall = (): VideoConfContextValue['acceptCall'] => useVideoConfContext().acceptCall;\nexport const useVideoConfJoinCall = (): VideoConfContextValue['joinCall'] => useVideoConfContext().joinCall;\nexport const useVideoConfDismissCall = (): VideoConfContextValue['dismissCall'] => useVideoConfContext().dismissCall;\nexport const useVideoConfAbortCall = (): VideoConfContextValue['abortCall'] => useVideoConfContext().abortCall;\nexport const useVideoConfRejectIncomingCall = (): VideoConfContextValue['rejectIncomingCall'] => useVideoConfContext().rejectIncomingCall;\nexport const useVideoConfIncomingCalls = (): DirectCallData[] => {\n\tconst { queryIncomingCalls } = useVideoConfContext();\n\treturn useSubscription(queryIncomingCalls);\n};\nexport const useVideoConfSetPreferences = (): VideoConfContextValue['setPreferences'] => useVideoConfContext().setPreferences;\nexport const useVideoConfIsRinging = (): boolean => {\n\tconst { queryRinging } = useVideoConfContext();\n\treturn useSubscription(queryRinging);\n};\nexport const useVideoConfIsCalling = (): boolean => {\n\tconst { queryCalling } = useVideoConfContext();\n\treturn useSubscription(queryCalling);\n};\nexport const useVideoConfCapabilities = (): ProviderCapabilities => {\n\tconst { queryCapabilities } = useVideoConfContext();\n\treturn useSubscription(queryCapabilities);\n};\nexport const useVideoConfPreferences = (): CallPreferences => {\n\tconst { queryPreferences } = useVideoConfContext();\n\treturn useSubscription(queryPreferences);\n};\n\nexport const useVideoConfManager = (): typeof VideoConfManager | undefined => useContext(VideoConfContext)?.manager;\n"]}}},"code":"module.export({\n  VideoConfContext: () => VideoConfContext,\n  useVideoConfDispatchOutgoing: () => useVideoConfDispatchOutgoing,\n  useVideoConfDismissOutgoing: () => useVideoConfDismissOutgoing,\n  useVideoConfStartCall: () => useVideoConfStartCall,\n  useVideoConfAcceptCall: () => useVideoConfAcceptCall,\n  useVideoConfJoinCall: () => useVideoConfJoinCall,\n  useVideoConfDismissCall: () => useVideoConfDismissCall,\n  useVideoConfAbortCall: () => useVideoConfAbortCall,\n  useVideoConfRejectIncomingCall: () => useVideoConfRejectIncomingCall,\n  useVideoConfIncomingCalls: () => useVideoConfIncomingCalls,\n  useVideoConfSetPreferences: () => useVideoConfSetPreferences,\n  useVideoConfIsRinging: () => useVideoConfIsRinging,\n  useVideoConfIsCalling: () => useVideoConfIsCalling,\n  useVideoConfCapabilities: () => useVideoConfCapabilities,\n  useVideoConfPreferences: () => useVideoConfPreferences,\n  useVideoConfManager: () => useVideoConfManager\n});\nlet createContext, useContext;\nmodule.link(\"react\", {\n  createContext(v) {\n    createContext = v;\n  },\n  useContext(v) {\n    useContext = v;\n  }\n}, 0);\nlet useSubscription;\nmodule.link(\"use-subscription\", {\n  useSubscription(v) {\n    useSubscription = v;\n  }\n}, 1);\nconst VideoConfContext = /*#__PURE__*/createContext(undefined);\nconst useVideoConfContext = () => {\n  const context = useContext(VideoConfContext);\n  if (!context) {\n    throw new Error('Must be running in VideoConf Context');\n  }\n  return context;\n};\nconst useVideoConfDispatchOutgoing = () => useVideoConfContext().dispatchOutgoing;\nconst useVideoConfDismissOutgoing = () => useVideoConfContext().dismissOutgoing;\nconst useVideoConfStartCall = () => useVideoConfContext().startCall;\nconst useVideoConfAcceptCall = () => useVideoConfContext().acceptCall;\nconst useVideoConfJoinCall = () => useVideoConfContext().joinCall;\nconst useVideoConfDismissCall = () => useVideoConfContext().dismissCall;\nconst useVideoConfAbortCall = () => useVideoConfContext().abortCall;\nconst useVideoConfRejectIncomingCall = () => useVideoConfContext().rejectIncomingCall;\nconst useVideoConfIncomingCalls = () => {\n  const {\n    queryIncomingCalls\n  } = useVideoConfContext();\n  return useSubscription(queryIncomingCalls);\n};\nconst useVideoConfSetPreferences = () => useVideoConfContext().setPreferences;\nconst useVideoConfIsRinging = () => {\n  const {\n    queryRinging\n  } = useVideoConfContext();\n  return useSubscription(queryRinging);\n};\nconst useVideoConfIsCalling = () => {\n  const {\n    queryCalling\n  } = useVideoConfContext();\n  return useSubscription(queryCalling);\n};\nconst useVideoConfCapabilities = () => {\n  const {\n    queryCapabilities\n  } = useVideoConfContext();\n  return useSubscription(queryCapabilities);\n};\nconst useVideoConfPreferences = () => {\n  const {\n    queryPreferences\n  } = useVideoConfContext();\n  return useSubscription(queryPreferences);\n};\nconst useVideoConfManager = () => {\n  var _useContext;\n  return (_useContext = useContext(VideoConfContext)) === null || _useContext === void 0 ? void 0 : _useContext.manager;\n};","map":{"version":3,"names":["module","export","VideoConfContext","useVideoConfDispatchOutgoing","useVideoConfDismissOutgoing","useVideoConfStartCall","useVideoConfAcceptCall","useVideoConfJoinCall","useVideoConfDismissCall","useVideoConfAbortCall","useVideoConfRejectIncomingCall","useVideoConfIncomingCalls","useVideoConfSetPreferences","useVideoConfIsRinging","useVideoConfIsCalling","useVideoConfCapabilities","useVideoConfPreferences","useVideoConfManager","createContext","useContext","link","v","useSubscription","undefined","useVideoConfContext","context","Error","dispatchOutgoing","dismissOutgoing","startCall","acceptCall","joinCall","dismissCall","abortCall","rejectIncomingCall","queryIncomingCalls","setPreferences","queryRinging","queryCalling","queryCapabilities","queryPreferences","_useContext","manager"],"sources":["client/contexts/VideoConfContext.ts"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { createContext, useContext } from 'react';\nimport type { Subscription } from 'use-subscription';\nimport { useSubscription } from 'use-subscription';\n\nimport type { DirectCallData, ProviderCapabilities, CallPreferences, VideoConfManager } from '../lib/VideoConfManager';\n\nexport type VideoConfPopupPayload = {\n\tid: string;\n\trid: IRoom['_id'];\n\tisReceiving?: boolean;\n};\n\ntype VideoConfContextValue = {\n\tmanager: typeof VideoConfManager;\n\tdispatchOutgoing: (options: Omit<VideoConfPopupPayload, 'id'>) => void;\n\tdismissOutgoing: () => void;\n\tstartCall: (rid: IRoom['_id'], title?: string) => void;\n\tacceptCall: (callId: string) => void;\n\tjoinCall: (callId: string) => void;\n\tdismissCall: (callId: string) => void;\n\trejectIncomingCall: (callId: string) => void;\n\tabortCall: () => void;\n\tsetPreferences: (prefs: { mic?: boolean; cam?: boolean }) => void;\n\tqueryIncomingCalls: Subscription<DirectCallData[]>;\n\tqueryRinging: Subscription<boolean>;\n\tqueryCalling: Subscription<boolean>;\n\tqueryCapabilities: Subscription<ProviderCapabilities>;\n\tqueryPreferences: Subscription<CallPreferences>;\n};\n\nexport const VideoConfContext = createContext<VideoConfContextValue | undefined>(undefined);\nconst useVideoConfContext = (): VideoConfContextValue => {\n\tconst context = useContext(VideoConfContext);\n\tif (!context) {\n\t\tthrow new Error('Must be running in VideoConf Context');\n\t}\n\n\treturn context;\n};\n\nexport const useVideoConfDispatchOutgoing = (): VideoConfContextValue['dispatchOutgoing'] => useVideoConfContext().dispatchOutgoing;\nexport const useVideoConfDismissOutgoing = (): VideoConfContextValue['dismissOutgoing'] => useVideoConfContext().dismissOutgoing;\nexport const useVideoConfStartCall = (): VideoConfContextValue['startCall'] => useVideoConfContext().startCall;\nexport const useVideoConfAcceptCall = (): VideoConfContextValue['acceptCall'] => useVideoConfContext().acceptCall;\nexport const useVideoConfJoinCall = (): VideoConfContextValue['joinCall'] => useVideoConfContext().joinCall;\nexport const useVideoConfDismissCall = (): VideoConfContextValue['dismissCall'] => useVideoConfContext().dismissCall;\nexport const useVideoConfAbortCall = (): VideoConfContextValue['abortCall'] => useVideoConfContext().abortCall;\nexport const useVideoConfRejectIncomingCall = (): VideoConfContextValue['rejectIncomingCall'] => useVideoConfContext().rejectIncomingCall;\nexport const useVideoConfIncomingCalls = (): DirectCallData[] => {\n\tconst { queryIncomingCalls } = useVideoConfContext();\n\treturn useSubscription(queryIncomingCalls);\n};\nexport const useVideoConfSetPreferences = (): VideoConfContextValue['setPreferences'] => useVideoConfContext().setPreferences;\nexport const useVideoConfIsRinging = (): boolean => {\n\tconst { queryRinging } = useVideoConfContext();\n\treturn useSubscription(queryRinging);\n};\nexport const useVideoConfIsCalling = (): boolean => {\n\tconst { queryCalling } = useVideoConfContext();\n\treturn useSubscription(queryCalling);\n};\nexport const useVideoConfCapabilities = (): ProviderCapabilities => {\n\tconst { queryCapabilities } = useVideoConfContext();\n\treturn useSubscription(queryCapabilities);\n};\nexport const useVideoConfPreferences = (): CallPreferences => {\n\tconst { queryPreferences } = useVideoConfContext();\n\treturn useSubscription(queryPreferences);\n};\n\nexport const useVideoConfManager = (): typeof VideoConfManager | undefined => useContext(VideoConfContext)?.manager;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"80855b5f528b6e950330bcdcf838357c67bca16a"}
