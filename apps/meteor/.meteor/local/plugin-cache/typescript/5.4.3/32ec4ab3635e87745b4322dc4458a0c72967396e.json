{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/MarkdownText.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/MarkdownText.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/MarkdownText.tsx","inputSourceMap":{"version":3,"file":"client/components/MarkdownText.tsx","sourceRoot":"","sources":["client/components/MarkdownText.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box } from '@rocket.chat/fuselage';\nimport { isExternal, getBaseURI } from '@rocket.chat/ui-client';\nimport dompurify from 'dompurify';\nimport { marked } from 'marked';\nimport type { ComponentProps } from 'react';\nimport React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { renderMessageEmoji } from '../lib/utils/renderMessageEmoji';\n\ntype MarkdownTextParams = {\n\tcontent: string;\n\tvariant: 'inline' | 'inlineWithoutBreaks' | 'document';\n\tpreserveHtml: boolean;\n\tparseEmoji: boolean;\n\twithTruncatedText: boolean;\n} & ComponentProps<typeof Box>;\n\nconst documentRenderer = new marked.Renderer();\nconst inlineRenderer = new marked.Renderer();\nconst inlineWithoutBreaks = new marked.Renderer();\n\nconst walkTokens = (token: marked.Token) => {\n\tconst boldPattern = /^\\*[^*]+\\*$|^\\*\\*[^*]+\\*\\*$/;\n\tconst italicPattern = /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/;\n\tif (boldPattern.test(token.raw) && token.type === 'em') {\n\t\ttoken.type = 'strong' as 'em';\n\t} else if (italicPattern.test(token.raw) && token.type === 'strong') {\n\t\ttoken.type = 'em' as 'strong';\n\t}\n};\n\nmarked.use({ walkTokens });\n\nconst linkMarked = (href: string | null, _title: string | null, text: string): string =>\n\t`<a href=\"${href}\" rel=\"nofollow noopener noreferrer\">${text}</a> `;\nconst paragraphMarked = (text: string): string => text;\nconst brMarked = (): string => ' ';\nconst listItemMarked = (text: string): string => {\n\tconst cleanText = text.replace(/<p.*?>|<\\/p>/gi, '');\n\treturn `<li>${cleanText}</li>`;\n};\nconst horizontalRuleMarked = (): string => '';\n\ndocumentRenderer.link = linkMarked;\ndocumentRenderer.listitem = listItemMarked;\n\ninlineRenderer.link = linkMarked;\ninlineRenderer.paragraph = paragraphMarked;\ninlineRenderer.listitem = listItemMarked;\ninlineRenderer.hr = horizontalRuleMarked;\n\ninlineWithoutBreaks.link = linkMarked;\ninlineWithoutBreaks.paragraph = paragraphMarked;\ninlineWithoutBreaks.br = brMarked;\ninlineWithoutBreaks.image = brMarked;\ninlineWithoutBreaks.code = paragraphMarked;\ninlineWithoutBreaks.codespan = paragraphMarked;\ninlineWithoutBreaks.listitem = listItemMarked;\ninlineWithoutBreaks.hr = horizontalRuleMarked;\n\nconst defaultOptions = {\n\tgfm: true,\n\theaderIds: false,\n};\n\nconst options = {\n\t...defaultOptions,\n\trenderer: documentRenderer,\n};\n\nconst inlineOptions = {\n\t...defaultOptions,\n\trenderer: inlineRenderer,\n};\n\nconst inlineWithoutBreaksOptions = {\n\t...defaultOptions,\n\trenderer: inlineWithoutBreaks,\n};\n\nconst getRegexp = (schemeSetting: string): RegExp => {\n\tconst schemes = schemeSetting ? schemeSetting.split(',').join('|') : '';\n\treturn new RegExp(`^(${schemes}):`, 'gim');\n};\n\ntype MarkdownTextProps = Partial<MarkdownTextParams>;\n\nconst MarkdownText = ({\n\tcontent,\n\tvariant = 'document',\n\twithTruncatedText = false,\n\tpreserveHtml = false,\n\tparseEmoji = false,\n\t...props\n}: MarkdownTextProps) => {\n\tconst sanitizer = dompurify.sanitize;\n\tconst { t } = useTranslation();\n\tlet markedOptions: marked.MarkedOptions;\n\n\tconst schemes = 'http,https,notes,ftp,ftps,tel,mailto,sms,cid';\n\n\tswitch (variant) {\n\t\tcase 'inline':\n\t\t\tmarkedOptions = inlineOptions;\n\t\t\tbreak;\n\t\tcase 'inlineWithoutBreaks':\n\t\t\tmarkedOptions = inlineWithoutBreaksOptions;\n\t\t\tbreak;\n\t\tcase 'document':\n\t\tdefault:\n\t\t\tmarkedOptions = options;\n\t}\n\n\tconst __html = useMemo(() => {\n\t\tconst html = ((): any => {\n\t\t\tif (content && typeof content === 'string') {\n\t\t\t\tconst markedHtml = /inline/.test(variant)\n\t\t\t\t\t? marked.parseInline(new Option(content).innerHTML, markedOptions)\n\t\t\t\t\t: marked.parse(new Option(content).innerHTML, markedOptions);\n\n\t\t\t\tif (parseEmoji) {\n\t\t\t\t\t// We are using the old emoji parser here. This could come\n\t\t\t\t\t// with additional processing use, but is the workaround available right now.\n\t\t\t\t\t// Should be replaced in the future with the new parser.\n\t\t\t\t\treturn renderMessageEmoji({ html: markedHtml });\n\t\t\t\t}\n\n\t\t\t\treturn markedHtml;\n\t\t\t}\n\t\t})();\n\n\t\t// Add a hook to make all external links open a new window\n\t\tdompurify.addHook('afterSanitizeAttributes', (node) => {\n\t\t\tif ('target' in node) {\n\t\t\t\tconst href = node.getAttribute('href') || '';\n\n\t\t\t\tnode.setAttribute('title', `${t('Go_to_href', { href: href.replace(getBaseURI(), '') })}`);\n\t\t\t\tnode.setAttribute('rel', 'nofollow noopener noreferrer');\n\t\t\t\tif (isExternal(node.getAttribute('href') || '')) {\n\t\t\t\t\tnode.setAttribute('target', '_blank');\n\t\t\t\t\tnode.setAttribute('title', href);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn preserveHtml ? html : html && sanitizer(html, { ADD_ATTR: ['target'], ALLOWED_URI_REGEXP: getRegexp(schemes) });\n\t}, [preserveHtml, sanitizer, content, variant, markedOptions, parseEmoji, t]);\n\n\treturn __html ? (\n\t\t<Box\n\t\t\tdangerouslySetInnerHTML={{ __html }}\n\t\t\twithTruncatedText={withTruncatedText}\n\t\t\twithRichContent={variant === 'inlineWithoutBreaks' ? 'inlineWithoutBreaks' : true}\n\t\t\t{...props}\n\t\t/>\n\t) : null;\n};\n\nexport default MarkdownText;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/MarkdownText.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/MarkdownText.tsx","inputSourceMap":{"version":3,"file":"client/components/MarkdownText.tsx","sourceRoot":"","sources":["client/components/MarkdownText.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box } from '@rocket.chat/fuselage';\nimport { isExternal, getBaseURI } from '@rocket.chat/ui-client';\nimport dompurify from 'dompurify';\nimport { marked } from 'marked';\nimport type { ComponentProps } from 'react';\nimport React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { renderMessageEmoji } from '../lib/utils/renderMessageEmoji';\n\ntype MarkdownTextParams = {\n\tcontent: string;\n\tvariant: 'inline' | 'inlineWithoutBreaks' | 'document';\n\tpreserveHtml: boolean;\n\tparseEmoji: boolean;\n\twithTruncatedText: boolean;\n} & ComponentProps<typeof Box>;\n\nconst documentRenderer = new marked.Renderer();\nconst inlineRenderer = new marked.Renderer();\nconst inlineWithoutBreaks = new marked.Renderer();\n\nconst walkTokens = (token: marked.Token) => {\n\tconst boldPattern = /^\\*[^*]+\\*$|^\\*\\*[^*]+\\*\\*$/;\n\tconst italicPattern = /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/;\n\tif (boldPattern.test(token.raw) && token.type === 'em') {\n\t\ttoken.type = 'strong' as 'em';\n\t} else if (italicPattern.test(token.raw) && token.type === 'strong') {\n\t\ttoken.type = 'em' as 'strong';\n\t}\n};\n\nmarked.use({ walkTokens });\n\nconst linkMarked = (href: string | null, _title: string | null, text: string): string =>\n\t`<a href=\"${href}\" rel=\"nofollow noopener noreferrer\">${text}</a> `;\nconst paragraphMarked = (text: string): string => text;\nconst brMarked = (): string => ' ';\nconst listItemMarked = (text: string): string => {\n\tconst cleanText = text.replace(/<p.*?>|<\\/p>/gi, '');\n\treturn `<li>${cleanText}</li>`;\n};\nconst horizontalRuleMarked = (): string => '';\n\ndocumentRenderer.link = linkMarked;\ndocumentRenderer.listitem = listItemMarked;\n\ninlineRenderer.link = linkMarked;\ninlineRenderer.paragraph = paragraphMarked;\ninlineRenderer.listitem = listItemMarked;\ninlineRenderer.hr = horizontalRuleMarked;\n\ninlineWithoutBreaks.link = linkMarked;\ninlineWithoutBreaks.paragraph = paragraphMarked;\ninlineWithoutBreaks.br = brMarked;\ninlineWithoutBreaks.image = brMarked;\ninlineWithoutBreaks.code = paragraphMarked;\ninlineWithoutBreaks.codespan = paragraphMarked;\ninlineWithoutBreaks.listitem = listItemMarked;\ninlineWithoutBreaks.hr = horizontalRuleMarked;\n\nconst defaultOptions = {\n\tgfm: true,\n\theaderIds: false,\n};\n\nconst options = {\n\t...defaultOptions,\n\trenderer: documentRenderer,\n};\n\nconst inlineOptions = {\n\t...defaultOptions,\n\trenderer: inlineRenderer,\n};\n\nconst inlineWithoutBreaksOptions = {\n\t...defaultOptions,\n\trenderer: inlineWithoutBreaks,\n};\n\nconst getRegexp = (schemeSetting: string): RegExp => {\n\tconst schemes = schemeSetting ? schemeSetting.split(',').join('|') : '';\n\treturn new RegExp(`^(${schemes}):`, 'gim');\n};\n\ntype MarkdownTextProps = Partial<MarkdownTextParams>;\n\nconst MarkdownText = ({\n\tcontent,\n\tvariant = 'document',\n\twithTruncatedText = false,\n\tpreserveHtml = false,\n\tparseEmoji = false,\n\t...props\n}: MarkdownTextProps) => {\n\tconst sanitizer = dompurify.sanitize;\n\tconst { t } = useTranslation();\n\tlet markedOptions: marked.MarkedOptions;\n\n\tconst schemes = 'http,https,notes,ftp,ftps,tel,mailto,sms,cid';\n\n\tswitch (variant) {\n\t\tcase 'inline':\n\t\t\tmarkedOptions = inlineOptions;\n\t\t\tbreak;\n\t\tcase 'inlineWithoutBreaks':\n\t\t\tmarkedOptions = inlineWithoutBreaksOptions;\n\t\t\tbreak;\n\t\tcase 'document':\n\t\tdefault:\n\t\t\tmarkedOptions = options;\n\t}\n\n\tconst __html = useMemo(() => {\n\t\tconst html = ((): any => {\n\t\t\tif (content && typeof content === 'string') {\n\t\t\t\tconst markedHtml = /inline/.test(variant)\n\t\t\t\t\t? marked.parseInline(new Option(content).innerHTML, markedOptions)\n\t\t\t\t\t: marked.parse(new Option(content).innerHTML, markedOptions);\n\n\t\t\t\tif (parseEmoji) {\n\t\t\t\t\t// We are using the old emoji parser here. This could come\n\t\t\t\t\t// with additional processing use, but is the workaround available right now.\n\t\t\t\t\t// Should be replaced in the future with the new parser.\n\t\t\t\t\treturn renderMessageEmoji({ html: markedHtml });\n\t\t\t\t}\n\n\t\t\t\treturn markedHtml;\n\t\t\t}\n\t\t})();\n\n\t\t// Add a hook to make all external links open a new window\n\t\tdompurify.addHook('afterSanitizeAttributes', (node) => {\n\t\t\tif ('target' in node) {\n\t\t\t\tconst href = node.getAttribute('href') || '';\n\n\t\t\t\tnode.setAttribute('title', `${t('Go_to_href', { href: href.replace(getBaseURI(), '') })}`);\n\t\t\t\tnode.setAttribute('rel', 'nofollow noopener noreferrer');\n\t\t\t\tif (isExternal(node.getAttribute('href') || '')) {\n\t\t\t\t\tnode.setAttribute('target', '_blank');\n\t\t\t\t\tnode.setAttribute('title', href);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn preserveHtml ? html : html && sanitizer(html, { ADD_ATTR: ['target'], ALLOWED_URI_REGEXP: getRegexp(schemes) });\n\t}, [preserveHtml, sanitizer, content, variant, markedOptions, parseEmoji, t]);\n\n\treturn __html ? (\n\t\t<Box\n\t\t\tdangerouslySetInnerHTML={{ __html }}\n\t\t\twithTruncatedText={withTruncatedText}\n\t\t\twithRichContent={variant === 'inlineWithoutBreaks' ? 'inlineWithoutBreaks' : true}\n\t\t\t{...props}\n\t\t/>\n\t) : null;\n};\n\nexport default MarkdownText;\n"]}}},"code":"const _excluded = [\"content\", \"variant\", \"withTruncatedText\", \"preserveHtml\", \"parseEmoji\"];\nlet _extends;\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n}, 0);\nlet _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n}, 1);\nlet _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 2);\nlet Box;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Box(v) {\n    Box = v;\n  }\n}, 0);\nlet isExternal, getBaseURI;\nmodule.link(\"@rocket.chat/ui-client\", {\n  isExternal(v) {\n    isExternal = v;\n  },\n  getBaseURI(v) {\n    getBaseURI = v;\n  }\n}, 1);\nlet dompurify;\nmodule.link(\"dompurify\", {\n  default(v) {\n    dompurify = v;\n  }\n}, 2);\nlet marked;\nmodule.link(\"marked\", {\n  marked(v) {\n    marked = v;\n  }\n}, 3);\nlet React, useMemo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 4);\nlet useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 5);\nlet renderMessageEmoji;\nmodule.link(\"../lib/utils/renderMessageEmoji\", {\n  renderMessageEmoji(v) {\n    renderMessageEmoji = v;\n  }\n}, 6);\nconst documentRenderer = new marked.Renderer();\nconst inlineRenderer = new marked.Renderer();\nconst inlineWithoutBreaks = new marked.Renderer();\nconst walkTokens = token => {\n  const boldPattern = /^\\*[^*]+\\*$|^\\*\\*[^*]+\\*\\*$/;\n  const italicPattern = /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/;\n  if (boldPattern.test(token.raw) && token.type === 'em') {\n    token.type = 'strong';\n  } else if (italicPattern.test(token.raw) && token.type === 'strong') {\n    token.type = 'em';\n  }\n};\nmarked.use({\n  walkTokens\n});\nconst linkMarked = (href, _title, text) => \"<a href=\\\"\".concat(href, \"\\\" rel=\\\"nofollow noopener noreferrer\\\">\").concat(text, \"</a> \");\nconst paragraphMarked = text => text;\nconst brMarked = () => ' ';\nconst listItemMarked = text => {\n  const cleanText = text.replace(/<p.*?>|<\\/p>/gi, '');\n  return \"<li>\".concat(cleanText, \"</li>\");\n};\nconst horizontalRuleMarked = () => '';\ndocumentRenderer.link = linkMarked;\ndocumentRenderer.listitem = listItemMarked;\ninlineRenderer.link = linkMarked;\ninlineRenderer.paragraph = paragraphMarked;\ninlineRenderer.listitem = listItemMarked;\ninlineRenderer.hr = horizontalRuleMarked;\ninlineWithoutBreaks.link = linkMarked;\ninlineWithoutBreaks.paragraph = paragraphMarked;\ninlineWithoutBreaks.br = brMarked;\ninlineWithoutBreaks.image = brMarked;\ninlineWithoutBreaks.code = paragraphMarked;\ninlineWithoutBreaks.codespan = paragraphMarked;\ninlineWithoutBreaks.listitem = listItemMarked;\ninlineWithoutBreaks.hr = horizontalRuleMarked;\nconst defaultOptions = {\n  gfm: true,\n  headerIds: false\n};\nconst options = _objectSpread(_objectSpread({}, defaultOptions), {}, {\n  renderer: documentRenderer\n});\nconst inlineOptions = _objectSpread(_objectSpread({}, defaultOptions), {}, {\n  renderer: inlineRenderer\n});\nconst inlineWithoutBreaksOptions = _objectSpread(_objectSpread({}, defaultOptions), {}, {\n  renderer: inlineWithoutBreaks\n});\nconst getRegexp = schemeSetting => {\n  const schemes = schemeSetting ? schemeSetting.split(',').join('|') : '';\n  return new RegExp(\"^(\".concat(schemes, \"):\"), 'gim');\n};\nconst MarkdownText = _ref => {\n  let {\n      content,\n      variant = 'document',\n      withTruncatedText = false,\n      preserveHtml = false,\n      parseEmoji = false\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const sanitizer = dompurify.sanitize;\n  const {\n    t\n  } = useTranslation();\n  let markedOptions;\n  const schemes = 'http,https,notes,ftp,ftps,tel,mailto,sms,cid';\n  switch (variant) {\n    case 'inline':\n      markedOptions = inlineOptions;\n      break;\n    case 'inlineWithoutBreaks':\n      markedOptions = inlineWithoutBreaksOptions;\n      break;\n    case 'document':\n    default:\n      markedOptions = options;\n  }\n  const __html = useMemo(() => {\n    const html = (() => {\n      if (content && typeof content === 'string') {\n        const markedHtml = /inline/.test(variant) ? marked.parseInline(new Option(content).innerHTML, markedOptions) : marked.parse(new Option(content).innerHTML, markedOptions);\n        if (parseEmoji) {\n          // We are using the old emoji parser here. This could come\n          // with additional processing use, but is the workaround available right now.\n          // Should be replaced in the future with the new parser.\n          return renderMessageEmoji({\n            html: markedHtml\n          });\n        }\n        return markedHtml;\n      }\n    })();\n    // Add a hook to make all external links open a new window\n    dompurify.addHook('afterSanitizeAttributes', node => {\n      if ('target' in node) {\n        const href = node.getAttribute('href') || '';\n        node.setAttribute('title', \"\".concat(t('Go_to_href', {\n          href: href.replace(getBaseURI(), '')\n        })));\n        node.setAttribute('rel', 'nofollow noopener noreferrer');\n        if (isExternal(node.getAttribute('href') || '')) {\n          node.setAttribute('target', '_blank');\n          node.setAttribute('title', href);\n        }\n      }\n    });\n    return preserveHtml ? html : html && sanitizer(html, {\n      ADD_ATTR: ['target'],\n      ALLOWED_URI_REGEXP: getRegexp(schemes)\n    });\n  }, [preserveHtml, sanitizer, content, variant, markedOptions, parseEmoji, t]);\n  return __html ? /*#__PURE__*/React.createElement(Box, _extends({\n    dangerouslySetInnerHTML: {\n      __html\n    },\n    withTruncatedText: withTruncatedText,\n    withRichContent: variant === 'inlineWithoutBreaks' ? 'inlineWithoutBreaks' : true\n  }, props)) : null;\n};\nmodule.exportDefault(MarkdownText);","map":{"version":3,"names":["_extends","module","link","default","v","_objectWithoutProperties","_objectSpread","Box","isExternal","getBaseURI","dompurify","marked","React","useMemo","useTranslation","renderMessageEmoji","documentRenderer","Renderer","inlineRenderer","inlineWithoutBreaks","walkTokens","token","boldPattern","italicPattern","test","raw","type","use","linkMarked","href","_title","text","concat","paragraphMarked","brMarked","listItemMarked","cleanText","replace","horizontalRuleMarked","listitem","paragraph","hr","br","image","code","codespan","defaultOptions","gfm","headerIds","options","renderer","inlineOptions","inlineWithoutBreaksOptions","getRegexp","schemeSetting","schemes","split","join","RegExp","MarkdownText","_ref","content","variant","withTruncatedText","preserveHtml","parseEmoji","props","_excluded","sanitizer","sanitize","t","markedOptions","__html","html","markedHtml","parseInline","Option","innerHTML","parse","addHook","node","getAttribute","setAttribute","ADD_ATTR","ALLOWED_URI_REGEXP","createElement","dangerouslySetInnerHTML","withRichContent","exportDefault"],"sources":["client/components/MarkdownText.tsx"],"sourcesContent":["import { Box } from '@rocket.chat/fuselage';\nimport { isExternal, getBaseURI } from '@rocket.chat/ui-client';\nimport dompurify from 'dompurify';\nimport { marked } from 'marked';\nimport type { ComponentProps } from 'react';\nimport React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { renderMessageEmoji } from '../lib/utils/renderMessageEmoji';\n\ntype MarkdownTextParams = {\n\tcontent: string;\n\tvariant: 'inline' | 'inlineWithoutBreaks' | 'document';\n\tpreserveHtml: boolean;\n\tparseEmoji: boolean;\n\twithTruncatedText: boolean;\n} & ComponentProps<typeof Box>;\n\nconst documentRenderer = new marked.Renderer();\nconst inlineRenderer = new marked.Renderer();\nconst inlineWithoutBreaks = new marked.Renderer();\n\nconst walkTokens = (token: marked.Token) => {\n\tconst boldPattern = /^\\*[^*]+\\*$|^\\*\\*[^*]+\\*\\*$/;\n\tconst italicPattern = /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/;\n\tif (boldPattern.test(token.raw) && token.type === 'em') {\n\t\ttoken.type = 'strong' as 'em';\n\t} else if (italicPattern.test(token.raw) && token.type === 'strong') {\n\t\ttoken.type = 'em' as 'strong';\n\t}\n};\n\nmarked.use({ walkTokens });\n\nconst linkMarked = (href: string | null, _title: string | null, text: string): string =>\n\t`<a href=\"${href}\" rel=\"nofollow noopener noreferrer\">${text}</a> `;\nconst paragraphMarked = (text: string): string => text;\nconst brMarked = (): string => ' ';\nconst listItemMarked = (text: string): string => {\n\tconst cleanText = text.replace(/<p.*?>|<\\/p>/gi, '');\n\treturn `<li>${cleanText}</li>`;\n};\nconst horizontalRuleMarked = (): string => '';\n\ndocumentRenderer.link = linkMarked;\ndocumentRenderer.listitem = listItemMarked;\n\ninlineRenderer.link = linkMarked;\ninlineRenderer.paragraph = paragraphMarked;\ninlineRenderer.listitem = listItemMarked;\ninlineRenderer.hr = horizontalRuleMarked;\n\ninlineWithoutBreaks.link = linkMarked;\ninlineWithoutBreaks.paragraph = paragraphMarked;\ninlineWithoutBreaks.br = brMarked;\ninlineWithoutBreaks.image = brMarked;\ninlineWithoutBreaks.code = paragraphMarked;\ninlineWithoutBreaks.codespan = paragraphMarked;\ninlineWithoutBreaks.listitem = listItemMarked;\ninlineWithoutBreaks.hr = horizontalRuleMarked;\n\nconst defaultOptions = {\n\tgfm: true,\n\theaderIds: false,\n};\n\nconst options = {\n\t...defaultOptions,\n\trenderer: documentRenderer,\n};\n\nconst inlineOptions = {\n\t...defaultOptions,\n\trenderer: inlineRenderer,\n};\n\nconst inlineWithoutBreaksOptions = {\n\t...defaultOptions,\n\trenderer: inlineWithoutBreaks,\n};\n\nconst getRegexp = (schemeSetting: string): RegExp => {\n\tconst schemes = schemeSetting ? schemeSetting.split(',').join('|') : '';\n\treturn new RegExp(`^(${schemes}):`, 'gim');\n};\n\ntype MarkdownTextProps = Partial<MarkdownTextParams>;\n\nconst MarkdownText = ({\n\tcontent,\n\tvariant = 'document',\n\twithTruncatedText = false,\n\tpreserveHtml = false,\n\tparseEmoji = false,\n\t...props\n}: MarkdownTextProps) => {\n\tconst sanitizer = dompurify.sanitize;\n\tconst { t } = useTranslation();\n\tlet markedOptions: marked.MarkedOptions;\n\n\tconst schemes = 'http,https,notes,ftp,ftps,tel,mailto,sms,cid';\n\n\tswitch (variant) {\n\t\tcase 'inline':\n\t\t\tmarkedOptions = inlineOptions;\n\t\t\tbreak;\n\t\tcase 'inlineWithoutBreaks':\n\t\t\tmarkedOptions = inlineWithoutBreaksOptions;\n\t\t\tbreak;\n\t\tcase 'document':\n\t\tdefault:\n\t\t\tmarkedOptions = options;\n\t}\n\n\tconst __html = useMemo(() => {\n\t\tconst html = ((): any => {\n\t\t\tif (content && typeof content === 'string') {\n\t\t\t\tconst markedHtml = /inline/.test(variant)\n\t\t\t\t\t? marked.parseInline(new Option(content).innerHTML, markedOptions)\n\t\t\t\t\t: marked.parse(new Option(content).innerHTML, markedOptions);\n\n\t\t\t\tif (parseEmoji) {\n\t\t\t\t\t// We are using the old emoji parser here. This could come\n\t\t\t\t\t// with additional processing use, but is the workaround available right now.\n\t\t\t\t\t// Should be replaced in the future with the new parser.\n\t\t\t\t\treturn renderMessageEmoji({ html: markedHtml });\n\t\t\t\t}\n\n\t\t\t\treturn markedHtml;\n\t\t\t}\n\t\t})();\n\n\t\t// Add a hook to make all external links open a new window\n\t\tdompurify.addHook('afterSanitizeAttributes', (node) => {\n\t\t\tif ('target' in node) {\n\t\t\t\tconst href = node.getAttribute('href') || '';\n\n\t\t\t\tnode.setAttribute('title', `${t('Go_to_href', { href: href.replace(getBaseURI(), '') })}`);\n\t\t\t\tnode.setAttribute('rel', 'nofollow noopener noreferrer');\n\t\t\t\tif (isExternal(node.getAttribute('href') || '')) {\n\t\t\t\t\tnode.setAttribute('target', '_blank');\n\t\t\t\t\tnode.setAttribute('title', href);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn preserveHtml ? html : html && sanitizer(html, { ADD_ATTR: ['target'], ALLOWED_URI_REGEXP: getRegexp(schemes) });\n\t}, [preserveHtml, sanitizer, content, variant, markedOptions, parseEmoji, t]);\n\n\treturn __html ? (\n\t\t<Box\n\t\t\tdangerouslySetInnerHTML={{ __html }}\n\t\t\twithTruncatedText={withTruncatedText}\n\t\t\twithRichContent={variant === 'inlineWithoutBreaks' ? 'inlineWithoutBreaks' : true}\n\t\t\t{...props}\n\t\t/>\n\t) : null;\n};\n\nexport default MarkdownText;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"32ec4ab3635e87745b4322dc4458a0c72967396e"}
