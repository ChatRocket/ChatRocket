{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/lib/departments.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/api/lib/departments.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/lib/departments.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/lib/departments.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/lib/departments.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,wBAAwB,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAEjG,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAEhD,MAAM,CAAC,MAAM,gCAAgC,GAAG,KAAK,EAAE,MAAc,EAAE,eAAe,GAAG,KAAK,EAAqB,EAAE;IACpH,MAAM,WAAW,GAAG,MAAM,wBAAwB,CAAC,IAAI,CACtD;QACC,OAAO,EAAE,MAAM;KACf,EACD;QACC,UAAU,EAAE;YACX,YAAY,EAAE,CAAC;SACf;KACD,CACD,CAAC,OAAO,EAAE,CAAC;IAEZ,MAAM,oBAAoB,GAAG,MAAM,YAAY,CAAC,mCAAmC,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;IAC7G,MAAM,mBAAmB,GAAG;QAC3B,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC;QAC3D,GAAG,oBAAoB,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC;KAC3D,CAAC;IAEF,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAG,KAAK,EAAE,MAAc,EAAE,YAAoB,EAAoB,EAAE;IACrG,MAAM,UAAU,GAAG,MAAM,wBAAwB,CAAC,+BAA+B,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACpI,IAAI,UAAU,EAAE,CAAC;QAChB,YAAY,CAAC,KAAK,CAAC,QAAQ,MAAM,6BAA6B,YAAY,4BAA4B,CAAC,CAAC;QACxG,OAAO,IAAI,CAAC;IACb,CAAC;IAED,MAAM,aAAa,GAAG,MAAM,kBAAkB,CAAC,wCAAwC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAC9G,YAAY,CAAC,KAAK,CACjB,QAAQ,MAAM,IAAI,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,yBAAyB,YAAY,6BAA6B,CAC3H,CAAC;IACF,OAAO,aAAa,CAAC;AACtB,CAAC,CAAC","sourcesContent":["import { LivechatDepartment, LivechatDepartmentAgents, LivechatUnit } from '@rocket.chat/models';\n\nimport { helperLogger } from '../../lib/logger';\n\nexport const getDepartmentsWhichUserCanAccess = async (userId: string, includeDisabled = false): Promise<string[]> => {\n\tconst departments = await LivechatDepartmentAgents.find(\n\t\t{\n\t\t\tagentId: userId,\n\t\t},\n\t\t{\n\t\t\tprojection: {\n\t\t\t\tdepartmentId: 1,\n\t\t\t},\n\t\t},\n\t).toArray();\n\n\tconst monitoredDepartments = await LivechatUnit.findMonitoredDepartmentsByMonitorId(userId, includeDisabled);\n\tconst combinedDepartments = [\n\t\t...departments.map((department) => department.departmentId),\n\t\t...monitoredDepartments.map((department) => department._id),\n\t];\n\n\treturn [...new Set(combinedDepartments)];\n};\n\nexport const hasAccessToDepartment = async (userId: string, departmentId: string): Promise<boolean> => {\n\tconst department = await LivechatDepartmentAgents.findOneByAgentIdAndDepartmentId(userId, departmentId, { projection: { _id: 1 } });\n\tif (department) {\n\t\thelperLogger.debug(`User ${userId} has access to department ${departmentId} because they are an agent`);\n\t\treturn true;\n\t}\n\n\tconst monitorAccess = await LivechatDepartment.checkIfMonitorIsMonitoringDepartmentById(userId, departmentId);\n\thelperLogger.debug(\n\t\t`User ${userId} ${monitorAccess ? 'has' : 'does not have'} access to department ${departmentId} because they are a monitor`,\n\t);\n\treturn monitorAccess;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/lib/departments.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/api/lib/departments.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/lib/departments.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/lib/departments.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,wBAAwB,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAEjG,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAEhD,MAAM,CAAC,MAAM,gCAAgC,GAAG,KAAK,EAAE,MAAc,EAAE,eAAe,GAAG,KAAK,EAAqB,EAAE;IACpH,MAAM,WAAW,GAAG,MAAM,wBAAwB,CAAC,IAAI,CACtD;QACC,OAAO,EAAE,MAAM;KACf,EACD;QACC,UAAU,EAAE;YACX,YAAY,EAAE,CAAC;SACf;KACD,CACD,CAAC,OAAO,EAAE,CAAC;IAEZ,MAAM,oBAAoB,GAAG,MAAM,YAAY,CAAC,mCAAmC,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;IAC7G,MAAM,mBAAmB,GAAG;QAC3B,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC;QAC3D,GAAG,oBAAoB,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC;KAC3D,CAAC;IAEF,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAG,KAAK,EAAE,MAAc,EAAE,YAAoB,EAAoB,EAAE;IACrG,MAAM,UAAU,GAAG,MAAM,wBAAwB,CAAC,+BAA+B,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACpI,IAAI,UAAU,EAAE,CAAC;QAChB,YAAY,CAAC,KAAK,CAAC,QAAQ,MAAM,6BAA6B,YAAY,4BAA4B,CAAC,CAAC;QACxG,OAAO,IAAI,CAAC;IACb,CAAC;IAED,MAAM,aAAa,GAAG,MAAM,kBAAkB,CAAC,wCAAwC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAC9G,YAAY,CAAC,KAAK,CACjB,QAAQ,MAAM,IAAI,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,yBAAyB,YAAY,6BAA6B,CAC3H,CAAC;IACF,OAAO,aAAa,CAAC;AACtB,CAAC,CAAC","sourcesContent":["import { LivechatDepartment, LivechatDepartmentAgents, LivechatUnit } from '@rocket.chat/models';\n\nimport { helperLogger } from '../../lib/logger';\n\nexport const getDepartmentsWhichUserCanAccess = async (userId: string, includeDisabled = false): Promise<string[]> => {\n\tconst departments = await LivechatDepartmentAgents.find(\n\t\t{\n\t\t\tagentId: userId,\n\t\t},\n\t\t{\n\t\t\tprojection: {\n\t\t\t\tdepartmentId: 1,\n\t\t\t},\n\t\t},\n\t).toArray();\n\n\tconst monitoredDepartments = await LivechatUnit.findMonitoredDepartmentsByMonitorId(userId, includeDisabled);\n\tconst combinedDepartments = [\n\t\t...departments.map((department) => department.departmentId),\n\t\t...monitoredDepartments.map((department) => department._id),\n\t];\n\n\treturn [...new Set(combinedDepartments)];\n};\n\nexport const hasAccessToDepartment = async (userId: string, departmentId: string): Promise<boolean> => {\n\tconst department = await LivechatDepartmentAgents.findOneByAgentIdAndDepartmentId(userId, departmentId, { projection: { _id: 1 } });\n\tif (department) {\n\t\thelperLogger.debug(`User ${userId} has access to department ${departmentId} because they are an agent`);\n\t\treturn true;\n\t}\n\n\tconst monitorAccess = await LivechatDepartment.checkIfMonitorIsMonitoringDepartmentById(userId, departmentId);\n\thelperLogger.debug(\n\t\t`User ${userId} ${monitorAccess ? 'has' : 'does not have'} access to department ${departmentId} because they are a monitor`,\n\t);\n\treturn monitorAccess;\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      getDepartmentsWhichUserCanAccess: () => getDepartmentsWhichUserCanAccess,\n      hasAccessToDepartment: () => hasAccessToDepartment\n    });\n    let LivechatDepartment, LivechatDepartmentAgents, LivechatUnit;\n    module.link(\"@rocket.chat/models\", {\n      LivechatDepartment(v) {\n        LivechatDepartment = v;\n      },\n      LivechatDepartmentAgents(v) {\n        LivechatDepartmentAgents = v;\n      },\n      LivechatUnit(v) {\n        LivechatUnit = v;\n      }\n    }, 0);\n    let helperLogger;\n    module.link(\"../../lib/logger\", {\n      helperLogger(v) {\n        helperLogger = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const getDepartmentsWhichUserCanAccess = async function (userId) {\n      let includeDisabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      const departments = await LivechatDepartmentAgents.find({\n        agentId: userId\n      }, {\n        projection: {\n          departmentId: 1\n        }\n      }).toArray();\n      const monitoredDepartments = await LivechatUnit.findMonitoredDepartmentsByMonitorId(userId, includeDisabled);\n      const combinedDepartments = [...departments.map(department => department.departmentId), ...monitoredDepartments.map(department => department._id)];\n      return [...new Set(combinedDepartments)];\n    };\n    const hasAccessToDepartment = async (userId, departmentId) => {\n      const department = await LivechatDepartmentAgents.findOneByAgentIdAndDepartmentId(userId, departmentId, {\n        projection: {\n          _id: 1\n        }\n      });\n      if (department) {\n        helperLogger.debug(\"User \".concat(userId, \" has access to department \").concat(departmentId, \" because they are an agent\"));\n        return true;\n      }\n      const monitorAccess = await LivechatDepartment.checkIfMonitorIsMonitoringDepartmentById(userId, departmentId);\n      helperLogger.debug(\"User \".concat(userId, \" \").concat(monitorAccess ? 'has' : 'does not have', \" access to department \").concat(departmentId, \" because they are a monitor\"));\n      return monitorAccess;\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","getDepartmentsWhichUserCanAccess","hasAccessToDepartment","LivechatDepartment","LivechatDepartmentAgents","LivechatUnit","link","v","helperLogger","__reifyWaitForDeps__","userId","includeDisabled","arguments","length","undefined","departments","find","agentId","projection","departmentId","toArray","monitoredDepartments","findMonitoredDepartmentsByMonitorId","combinedDepartments","map","department","_id","Set","findOneByAgentIdAndDepartmentId","debug","concat","monitorAccess","checkIfMonitorIsMonitoringDepartmentById","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/livechat-enterprise/server/api/lib/departments.ts"],"sourcesContent":["import { LivechatDepartment, LivechatDepartmentAgents, LivechatUnit } from '@rocket.chat/models';\n\nimport { helperLogger } from '../../lib/logger';\n\nexport const getDepartmentsWhichUserCanAccess = async (userId: string, includeDisabled = false): Promise<string[]> => {\n\tconst departments = await LivechatDepartmentAgents.find(\n\t\t{\n\t\t\tagentId: userId,\n\t\t},\n\t\t{\n\t\t\tprojection: {\n\t\t\t\tdepartmentId: 1,\n\t\t\t},\n\t\t},\n\t).toArray();\n\n\tconst monitoredDepartments = await LivechatUnit.findMonitoredDepartmentsByMonitorId(userId, includeDisabled);\n\tconst combinedDepartments = [\n\t\t...departments.map((department) => department.departmentId),\n\t\t...monitoredDepartments.map((department) => department._id),\n\t];\n\n\treturn [...new Set(combinedDepartments)];\n};\n\nexport const hasAccessToDepartment = async (userId: string, departmentId: string): Promise<boolean> => {\n\tconst department = await LivechatDepartmentAgents.findOneByAgentIdAndDepartmentId(userId, departmentId, { projection: { _id: 1 } });\n\tif (department) {\n\t\thelperLogger.debug(`User ${userId} has access to department ${departmentId} because they are an agent`);\n\t\treturn true;\n\t}\n\n\tconst monitorAccess = await LivechatDepartment.checkIfMonitorIsMonitoringDepartmentById(userId, departmentId);\n\thelperLogger.debug(\n\t\t`User ${userId} ${monitorAccess ? 'has' : 'does not have'} access to department ${departmentId} because they are a monitor`,\n\t);\n\treturn monitorAccess;\n};\n"],"mappings":";;;IAAAA,MAAA,CAAOC,MAAE;MAAAC,gCAAoB,EAAAA,CAAA,KAAAA,gCAA8C;MAAAC,qBAAsB,EAAAA,CAAA,KAAAA;IAAA;IAAA,IAAAC,kBAAA,EAAAC,wBAAA,EAAAC,YAAA;IAAAN,MAAA,CAAAO,IAAA;MAAAH,mBAAAI,CAAA;QAAAJ,kBAAA,GAAAI,CAAA;MAAA;MAAAH,yBAAAG,CAAA;QAAAH,wBAAA,GAAAG,CAAA;MAAA;MAAAF,aAAAE,CAAA;QAAAF,YAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,YAAA;IAAAT,MAAA,CAAAO,IAAA;MAAAE,aAAAD,CAAA;QAAAC,YAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,oBAAA,WAAAA,oBAAA;IAI1F,MAAMR,gCAAgC,GAAG,eAAAA,CAAOS,MAAc,EAAgD;MAAA,IAA9CC,eAAe,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;MAC7F,MAAMG,WAAW,GAAG,MAAMX,wBAAwB,CAACY,IAAI,CACtD;QACCC,OAAO,EAAEP;OACT,EACD;QACCQ,UAAU,EAAE;UACXC,YAAY,EAAE;;OAEf,CACD,CAACC,OAAO,EAAE;MAEX,MAAMC,oBAAoB,GAAG,MAAMhB,YAAY,CAACiB,mCAAmC,CAACZ,MAAM,EAAEC,eAAe,CAAC;MAC5G,MAAMY,mBAAmB,GAAG,CAC3B,GAAGR,WAAW,CAACS,GAAG,CAAEC,UAAU,IAAKA,UAAU,CAACN,YAAY,CAAC,EAC3D,GAAGE,oBAAoB,CAACG,GAAG,CAAEC,UAAU,IAAKA,UAAU,CAACC,GAAG,CAAC,CAC3D;MAED,OAAO,CAAC,GAAG,IAAIC,GAAG,CAACJ,mBAAmB,CAAC,CAAC;IACzC,CAAC;IAEM,MAAMrB,qBAAqB,GAAG,MAAAA,CAAOQ,MAAc,EAAES,YAAoB,KAAsB;MACrG,MAAMM,UAAU,GAAG,MAAMrB,wBAAwB,CAACwB,+BAA+B,CAAClB,MAAM,EAAES,YAAY,EAAE;QAAED,UAAU,EAAE;UAAEQ,GAAG,EAAE;QAAC;MAAE,CAAE,CAAC;MACnI,IAAID,UAAU,EAAE;QACfjB,YAAY,CAACqB,KAAK,SAAAC,MAAA,CAASpB,MAAM,gCAAAoB,MAAA,CAA6BX,YAAY,+BAA4B,CAAC;QACvG,OAAO,IAAI;MACZ;MAEA,MAAMY,aAAa,GAAG,MAAM5B,kBAAkB,CAAC6B,wCAAwC,CAACtB,MAAM,EAAES,YAAY,CAAC;MAC7GX,YAAY,CAACqB,KAAK,SAAAC,MAAA,CACTpB,MAAM,OAAAoB,MAAA,CAAIC,aAAa,GAAG,KAAK,GAAG,eAAe,4BAAAD,MAAA,CAAyBX,YAAY,gCAA6B,CAC3H;MACD,OAAOY,aAAa;IACrB,CAAC;IAACE,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e73a2567b4452032ad4474624d878994dea0888b"}
