{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/message-mark-as-unread/server/unreadMessages.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/message-mark-as-unread/server/unreadMessages.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/message-mark-as-unread/server/unreadMessages.ts","inputSourceMap":{"version":3,"file":"app/message-mark-as-unread/server/unreadMessages.ts","sourceRoot":"","sources":["app/message-mark-as-unread/server/unreadMessages.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAC9D,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,4CAA4C,EAAE,MAAM,qCAAqC,CAAC;AACnG,OAAO,MAAM,MAAM,UAAU,CAAC;AAS9B,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,cAAc,CAAC,kBAAkB,EAAE,IAAI;QAC5C,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;gBAC5D,MAAM,EAAE,gBAAgB;aACxB,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;YACtC,MAAM,WAAW,GAAG,CACnB,MAAM,QAAQ,CAAC,mBAAmB,CAAC,IAAI,EAAE;gBACxC,KAAK,EAAE,CAAC;gBACR,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE;aAChB,CAAC,CAAC,OAAO,EAAE,CACZ,CAAC,CAAC,CAAC,CAAC;YAEL,IAAI,CAAC,WAAW,EAAE,CAAC;gBAClB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,sCAAsC,EAAE;oBAC7F,MAAM,EAAE,gBAAgB;oBACxB,MAAM,EAAE,iBAAiB;iBACzB,CAAC,CAAC;YACJ,CAAC;YAED,MAAM,mBAAmB,GAAG,MAAM,aAAa,CAAC,4BAA4B,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;YACtH,IAAI,mBAAmB,CAAC,aAAa,EAAE,CAAC;gBACvC,KAAK,4CAA4C,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YAC5E,CAAC;YAED,OAAO;QACR,CAAC;QAED,IAAI,OAAO,kBAAkB,EAAE,GAAG,KAAK,QAAQ,EAAE,CAAC;YACjD,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,0BAA0B,EAAE,aAAa,EAAE;gBACjE,MAAM,EAAE,gBAAgB;gBACxB,MAAM,EAAE,iBAAiB;aACzB,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,eAAe,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,kBAAkB,CAAC,GAAG,EAAE;YAC1E,UAAU,EAAE;gBACX,CAAC,EAAE,CAAC;gBACJ,GAAG,EAAE,CAAC;gBACN,IAAI,EAAE,CAAC;gBACP,EAAE,EAAE,CAAC;aACL;SACD,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,IAAI,MAAM,KAAK,eAAe,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAC1D,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,0BAA0B,EAAE,aAAa,EAAE;gBACjE,MAAM,EAAE,gBAAgB;gBACxB,MAAM,EAAE,iBAAiB;aACzB,CAAC,CAAC;QACJ,CAAC;QACD,MAAM,QAAQ,GAAG,CAAC,MAAM,aAAa,CAAC,wBAAwB,CAAC,eAAe,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;QACjG,IAAI,CAAC,QAAQ,EAAE,CAAC;YACf,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,8BAA8B,EAAE,wBAAwB,EAAE;gBAChF,MAAM,EAAE,gBAAgB;gBACxB,MAAM,EAAE,iBAAiB;aACzB,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,kBAAkB,CAAC,EAAE,IAAI,QAAQ,EAAE,CAAC;YACvC,OAAO,MAAM,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;QACrE,CAAC;QAED,MAAM,CAAC,KAAK,CAAC,8BAA8B,eAAe,CAAC,EAAE,sBAAsB,CAAC,CAAC;QACrF,MAAM,mBAAmB,GAAG,MAAM,aAAa,CAAC,4BAA4B,CAAC,eAAe,CAAC,GAAG,EAAE,MAAM,EAAE,eAAe,CAAC,EAAE,CAAC,CAAC;QAC9H,IAAI,mBAAmB,CAAC,aAAa,EAAE,CAAC;YACvC,KAAK,4CAA4C,CAAC,eAAe,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAChF,CAAC;IACF,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Messages, Subscriptions } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { notifyOnSubscriptionChangedByRoomIdAndUserId } from '../../lib/server/lib/notifyListener';\nimport logger from './logger';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tunreadMessages(firstUnreadMessage?: IMessage, room?: IRoom['_id']): void;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync unreadMessages(firstUnreadMessage, room) {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'unreadMessages',\n\t\t\t});\n\t\t}\n\n\t\tif (room && typeof room === 'string') {\n\t\t\tconst lastMessage = (\n\t\t\t\tawait Messages.findVisibleByRoomId(room, {\n\t\t\t\t\tlimit: 1,\n\t\t\t\t\tsort: { ts: -1 },\n\t\t\t\t}).toArray()\n\t\t\t)[0];\n\n\t\t\tif (!lastMessage) {\n\t\t\t\tthrow new Meteor.Error('error-no-message-for-unread', 'There are no messages to mark unread', {\n\t\t\t\t\tmethod: 'unreadMessages',\n\t\t\t\t\taction: 'Unread_messages',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst setAsUnreadResponse = await Subscriptions.setAsUnreadByRoomIdAndUserId(lastMessage.rid, userId, lastMessage.ts);\n\t\t\tif (setAsUnreadResponse.modifiedCount) {\n\t\t\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(lastMessage.rid, userId);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof firstUnreadMessage?._id !== 'string') {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'unreadMessages',\n\t\t\t\taction: 'Unread_messages',\n\t\t\t});\n\t\t}\n\n\t\tconst originalMessage = await Messages.findOneById(firstUnreadMessage._id, {\n\t\t\tprojection: {\n\t\t\t\tu: 1,\n\t\t\t\trid: 1,\n\t\t\t\tfile: 1,\n\t\t\t\tts: 1,\n\t\t\t},\n\t\t});\n\t\tif (!originalMessage || userId === originalMessage.u._id) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'unreadMessages',\n\t\t\t\taction: 'Unread_messages',\n\t\t\t});\n\t\t}\n\t\tconst lastSeen = (await Subscriptions.findOneByRoomIdAndUserId(originalMessage.rid, userId))?.ls;\n\t\tif (!lastSeen) {\n\t\t\tthrow new Meteor.Error('error-subscription-not-found', 'Subscription not found', {\n\t\t\t\tmethod: 'unreadMessages',\n\t\t\t\taction: 'Unread_messages',\n\t\t\t});\n\t\t}\n\n\t\tif (firstUnreadMessage.ts >= lastSeen) {\n\t\t\treturn logger.debug('Provided message is already marked as unread');\n\t\t}\n\n\t\tlogger.debug(`Updating unread message of ${originalMessage.ts} as the first unread`);\n\t\tconst setAsUnreadResponse = await Subscriptions.setAsUnreadByRoomIdAndUserId(originalMessage.rid, userId, originalMessage.ts);\n\t\tif (setAsUnreadResponse.modifiedCount) {\n\t\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(originalMessage.rid, userId);\n\t\t}\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/message-mark-as-unread/server/unreadMessages.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/message-mark-as-unread/server/unreadMessages.ts","inputSourceMap":{"version":3,"file":"app/message-mark-as-unread/server/unreadMessages.ts","sourceRoot":"","sources":["app/message-mark-as-unread/server/unreadMessages.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Messages, Subscriptions } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { notifyOnSubscriptionChangedByRoomIdAndUserId } from '../../lib/server/lib/notifyListener';\nimport logger from './logger';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tunreadMessages(firstUnreadMessage?: IMessage, room?: IRoom['_id']): void;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync unreadMessages(firstUnreadMessage, room) {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'unreadMessages',\n\t\t\t});\n\t\t}\n\n\t\tif (room && typeof room === 'string') {\n\t\t\tconst lastMessage = (\n\t\t\t\tawait Messages.findVisibleByRoomId(room, {\n\t\t\t\t\tlimit: 1,\n\t\t\t\t\tsort: { ts: -1 },\n\t\t\t\t}).toArray()\n\t\t\t)[0];\n\n\t\t\tif (!lastMessage) {\n\t\t\t\tthrow new Meteor.Error('error-no-message-for-unread', 'There are no messages to mark unread', {\n\t\t\t\t\tmethod: 'unreadMessages',\n\t\t\t\t\taction: 'Unread_messages',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst setAsUnreadResponse = await Subscriptions.setAsUnreadByRoomIdAndUserId(lastMessage.rid, userId, lastMessage.ts);\n\t\t\tif (setAsUnreadResponse.modifiedCount) {\n\t\t\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(lastMessage.rid, userId);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof firstUnreadMessage?._id !== 'string') {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'unreadMessages',\n\t\t\t\taction: 'Unread_messages',\n\t\t\t});\n\t\t}\n\n\t\tconst originalMessage = await Messages.findOneById(firstUnreadMessage._id, {\n\t\t\tprojection: {\n\t\t\t\tu: 1,\n\t\t\t\trid: 1,\n\t\t\t\tfile: 1,\n\t\t\t\tts: 1,\n\t\t\t},\n\t\t});\n\t\tif (!originalMessage || userId === originalMessage.u._id) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'unreadMessages',\n\t\t\t\taction: 'Unread_messages',\n\t\t\t});\n\t\t}\n\t\tconst lastSeen = (await Subscriptions.findOneByRoomIdAndUserId(originalMessage.rid, userId))?.ls;\n\t\tif (!lastSeen) {\n\t\t\tthrow new Meteor.Error('error-subscription-not-found', 'Subscription not found', {\n\t\t\t\tmethod: 'unreadMessages',\n\t\t\t\taction: 'Unread_messages',\n\t\t\t});\n\t\t}\n\n\t\tif (firstUnreadMessage.ts >= lastSeen) {\n\t\t\treturn logger.debug('Provided message is already marked as unread');\n\t\t}\n\n\t\tlogger.debug(`Updating unread message of ${originalMessage.ts} as the first unread`);\n\t\tconst setAsUnreadResponse = await Subscriptions.setAsUnreadByRoomIdAndUserId(originalMessage.rid, userId, originalMessage.ts);\n\t\tif (setAsUnreadResponse.modifiedCount) {\n\t\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(originalMessage.rid, userId);\n\t\t}\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Messages, Subscriptions;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let notifyOnSubscriptionChangedByRoomIdAndUserId;\n    module.link(\"../../lib/server/lib/notifyListener\", {\n      notifyOnSubscriptionChangedByRoomIdAndUserId(v) {\n        notifyOnSubscriptionChangedByRoomIdAndUserId = v;\n      }\n    }, 2);\n    let logger;\n    module.link(\"./logger\", {\n      default(v) {\n        logger = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async unreadMessages(firstUnreadMessage, room) {\n        var _await$Subscriptions$;\n        const userId = Meteor.userId();\n        if (!userId) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'unreadMessages'\n          });\n        }\n        if (room && typeof room === 'string') {\n          const lastMessage = (await Messages.findVisibleByRoomId(room, {\n            limit: 1,\n            sort: {\n              ts: -1\n            }\n          }).toArray())[0];\n          if (!lastMessage) {\n            throw new Meteor.Error('error-no-message-for-unread', 'There are no messages to mark unread', {\n              method: 'unreadMessages',\n              action: 'Unread_messages'\n            });\n          }\n          const setAsUnreadResponse = await Subscriptions.setAsUnreadByRoomIdAndUserId(lastMessage.rid, userId, lastMessage.ts);\n          if (setAsUnreadResponse.modifiedCount) {\n            void notifyOnSubscriptionChangedByRoomIdAndUserId(lastMessage.rid, userId);\n          }\n          return;\n        }\n        if (typeof (firstUnreadMessage === null || firstUnreadMessage === void 0 ? void 0 : firstUnreadMessage._id) !== 'string') {\n          throw new Meteor.Error('error-action-not-allowed', 'Not allowed', {\n            method: 'unreadMessages',\n            action: 'Unread_messages'\n          });\n        }\n        const originalMessage = await Messages.findOneById(firstUnreadMessage._id, {\n          projection: {\n            u: 1,\n            rid: 1,\n            file: 1,\n            ts: 1\n          }\n        });\n        if (!originalMessage || userId === originalMessage.u._id) {\n          throw new Meteor.Error('error-action-not-allowed', 'Not allowed', {\n            method: 'unreadMessages',\n            action: 'Unread_messages'\n          });\n        }\n        const lastSeen = (_await$Subscriptions$ = await Subscriptions.findOneByRoomIdAndUserId(originalMessage.rid, userId)) === null || _await$Subscriptions$ === void 0 ? void 0 : _await$Subscriptions$.ls;\n        if (!lastSeen) {\n          throw new Meteor.Error('error-subscription-not-found', 'Subscription not found', {\n            method: 'unreadMessages',\n            action: 'Unread_messages'\n          });\n        }\n        if (firstUnreadMessage.ts >= lastSeen) {\n          return logger.debug('Provided message is already marked as unread');\n        }\n        logger.debug(\"Updating unread message of \".concat(originalMessage.ts, \" as the first unread\"));\n        const setAsUnreadResponse = await Subscriptions.setAsUnreadByRoomIdAndUserId(originalMessage.rid, userId, originalMessage.ts);\n        if (setAsUnreadResponse.modifiedCount) {\n          void notifyOnSubscriptionChangedByRoomIdAndUserId(originalMessage.rid, userId);\n        }\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Messages","Subscriptions","module","link","v","Meteor","notifyOnSubscriptionChangedByRoomIdAndUserId","logger","default","__reifyWaitForDeps__","methods","unreadMessages","firstUnreadMessage","room","_await$Subscriptions$","userId","Error","method","lastMessage","findVisibleByRoomId","limit","sort","ts","toArray","action","setAsUnreadResponse","setAsUnreadByRoomIdAndUserId","rid","modifiedCount","_id","originalMessage","findOneById","projection","u","file","lastSeen","findOneByRoomIdAndUserId","ls","debug","concat","__reify_async_result__","_reifyError","self","async"],"sources":["app/message-mark-as-unread/server/unreadMessages.ts"],"sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Messages, Subscriptions } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { notifyOnSubscriptionChangedByRoomIdAndUserId } from '../../lib/server/lib/notifyListener';\nimport logger from './logger';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tunreadMessages(firstUnreadMessage?: IMessage, room?: IRoom['_id']): void;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync unreadMessages(firstUnreadMessage, room) {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'unreadMessages',\n\t\t\t});\n\t\t}\n\n\t\tif (room && typeof room === 'string') {\n\t\t\tconst lastMessage = (\n\t\t\t\tawait Messages.findVisibleByRoomId(room, {\n\t\t\t\t\tlimit: 1,\n\t\t\t\t\tsort: { ts: -1 },\n\t\t\t\t}).toArray()\n\t\t\t)[0];\n\n\t\t\tif (!lastMessage) {\n\t\t\t\tthrow new Meteor.Error('error-no-message-for-unread', 'There are no messages to mark unread', {\n\t\t\t\t\tmethod: 'unreadMessages',\n\t\t\t\t\taction: 'Unread_messages',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst setAsUnreadResponse = await Subscriptions.setAsUnreadByRoomIdAndUserId(lastMessage.rid, userId, lastMessage.ts);\n\t\t\tif (setAsUnreadResponse.modifiedCount) {\n\t\t\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(lastMessage.rid, userId);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof firstUnreadMessage?._id !== 'string') {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'unreadMessages',\n\t\t\t\taction: 'Unread_messages',\n\t\t\t});\n\t\t}\n\n\t\tconst originalMessage = await Messages.findOneById(firstUnreadMessage._id, {\n\t\t\tprojection: {\n\t\t\t\tu: 1,\n\t\t\t\trid: 1,\n\t\t\t\tfile: 1,\n\t\t\t\tts: 1,\n\t\t\t},\n\t\t});\n\t\tif (!originalMessage || userId === originalMessage.u._id) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'unreadMessages',\n\t\t\t\taction: 'Unread_messages',\n\t\t\t});\n\t\t}\n\t\tconst lastSeen = (await Subscriptions.findOneByRoomIdAndUserId(originalMessage.rid, userId))?.ls;\n\t\tif (!lastSeen) {\n\t\t\tthrow new Meteor.Error('error-subscription-not-found', 'Subscription not found', {\n\t\t\t\tmethod: 'unreadMessages',\n\t\t\t\taction: 'Unread_messages',\n\t\t\t});\n\t\t}\n\n\t\tif (firstUnreadMessage.ts >= lastSeen) {\n\t\t\treturn logger.debug('Provided message is already marked as unread');\n\t\t}\n\n\t\tlogger.debug(`Updating unread message of ${originalMessage.ts} as the first unread`);\n\t\tconst setAsUnreadResponse = await Subscriptions.setAsUnreadByRoomIdAndUserId(originalMessage.rid, userId, originalMessage.ts);\n\t\tif (setAsUnreadResponse.modifiedCount) {\n\t\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(originalMessage.rid, userId);\n\t\t}\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"bf4dd4c882980adac485adb137c337f1d352825a"}
