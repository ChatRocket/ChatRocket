{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/notifications/server/lib/Presence.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/notifications/server/lib/Presence.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/notifications/server/lib/Presence.ts","inputSourceMap":{"version":3,"file":"app/notifications/server/lib/Presence.ts","sourceRoot":"","sources":["app/notifications/server/lib/Presence.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport type { StreamerEvents } from '@rocket.chat/ddp-client';\nimport { Emitter } from '@rocket.chat/emitter';\nimport type { IPublication, IStreamerConstructor, Connection, IStreamer } from 'meteor/rocketchat:streamer';\n\ntype UserPresenceStreamProps = {\n\tadded: IUser['_id'][];\n\tremoved: IUser['_id'][];\n};\n\ntype UserPresenceStreamArgs = {\n\tuid: string;\n\targs: StreamerEvents['user-presence'][number]['args'];\n};\n\nconst e = new Emitter<{\n\t[key: string]: UserPresenceStreamArgs;\n}>();\n\nconst clients = new WeakMap<Connection, UserPresence>();\n\nclass UserPresence {\n\tprivate readonly streamer: IStreamer<'user-presence'>;\n\n\tprivate readonly publication: IPublication;\n\n\tprivate readonly listeners: Set<string>;\n\n\tconstructor(publication: IPublication, streamer: IStreamer<'user-presence'>) {\n\t\tthis.listeners = new Set();\n\t\tthis.publication = publication;\n\t\tthis.streamer = streamer;\n\t}\n\n\tlisten(uid: string): void {\n\t\tif (this.listeners.has(uid)) {\n\t\t\treturn;\n\t\t}\n\t\te.on(uid, this.run);\n\t\tthis.listeners.add(uid);\n\t}\n\n\toff = (uid: string): void => {\n\t\te.off(uid, this.run);\n\t\tthis.listeners.delete(uid);\n\t};\n\n\trun = (args: UserPresenceStreamArgs): void => {\n\t\tconst payload = this.streamer.changedPayload(this.streamer.subscriptionName, args.uid, { ...args, eventName: args.uid }); // there is no good explanation to keep eventName, I just want to save one 'DDPCommon.parseDDP' on the client side, so I'm trying to fit the Meteor Streamer's payload\n\t\tif (payload) this.publication._session.socket?.send(payload);\n\t};\n\n\tstop(): void {\n\t\tthis.listeners.forEach(this.off);\n\t\tclients.delete(this.publication.connection);\n\t}\n\n\tstatic getClient(publication: IPublication, streamer: IStreamer<'user-presence'>): [UserPresence, boolean] {\n\t\tconst { connection } = publication;\n\t\tconst stored = clients.get(connection);\n\n\t\tconst client = stored || new UserPresence(publication, streamer);\n\n\t\tconst main = Boolean(!stored);\n\n\t\tclients.set(connection, client);\n\n\t\treturn [client, main];\n\t}\n}\n\nexport class StreamPresence {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tstatic getInstance(Streamer: IStreamerConstructor, name = 'user-presence'): IStreamer<'user-presence'> {\n\t\treturn new (class StreamPresence extends Streamer<'user-presence'> {\n\t\t\tasync _publish(\n\t\t\t\tpublication: IPublication,\n\t\t\t\t_eventName: string,\n\t\t\t\toptions: boolean | { useCollection?: boolean; args?: any } = false,\n\t\t\t): Promise<void> {\n\t\t\t\tconst { added, removed } = (typeof options !== 'boolean' ? options : {}) as unknown as UserPresenceStreamProps;\n\n\t\t\t\tconst [client, main] = UserPresence.getClient(publication, this);\n\n\t\t\t\tadded?.forEach((uid) => client.listen(uid));\n\t\t\t\tremoved?.forEach((uid) => client.off(uid));\n\n\t\t\t\tif (!main) {\n\t\t\t\t\tpublication.stop();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tpublication.ready();\n\n\t\t\t\tpublication.onStop(() => client.stop());\n\t\t\t}\n\t\t} as any)(name);\n\t}\n}\n\nexport const emit = (uid: string, args: UserPresenceStreamArgs['args']): void => {\n\te.emit(uid, { uid, args });\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/notifications/server/lib/Presence.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/notifications/server/lib/Presence.ts","inputSourceMap":{"version":3,"file":"app/notifications/server/lib/Presence.ts","sourceRoot":"","sources":["app/notifications/server/lib/Presence.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport type { StreamerEvents } from '@rocket.chat/ddp-client';\nimport { Emitter } from '@rocket.chat/emitter';\nimport type { IPublication, IStreamerConstructor, Connection, IStreamer } from 'meteor/rocketchat:streamer';\n\ntype UserPresenceStreamProps = {\n\tadded: IUser['_id'][];\n\tremoved: IUser['_id'][];\n};\n\ntype UserPresenceStreamArgs = {\n\tuid: string;\n\targs: StreamerEvents['user-presence'][number]['args'];\n};\n\nconst e = new Emitter<{\n\t[key: string]: UserPresenceStreamArgs;\n}>();\n\nconst clients = new WeakMap<Connection, UserPresence>();\n\nclass UserPresence {\n\tprivate readonly streamer: IStreamer<'user-presence'>;\n\n\tprivate readonly publication: IPublication;\n\n\tprivate readonly listeners: Set<string>;\n\n\tconstructor(publication: IPublication, streamer: IStreamer<'user-presence'>) {\n\t\tthis.listeners = new Set();\n\t\tthis.publication = publication;\n\t\tthis.streamer = streamer;\n\t}\n\n\tlisten(uid: string): void {\n\t\tif (this.listeners.has(uid)) {\n\t\t\treturn;\n\t\t}\n\t\te.on(uid, this.run);\n\t\tthis.listeners.add(uid);\n\t}\n\n\toff = (uid: string): void => {\n\t\te.off(uid, this.run);\n\t\tthis.listeners.delete(uid);\n\t};\n\n\trun = (args: UserPresenceStreamArgs): void => {\n\t\tconst payload = this.streamer.changedPayload(this.streamer.subscriptionName, args.uid, { ...args, eventName: args.uid }); // there is no good explanation to keep eventName, I just want to save one 'DDPCommon.parseDDP' on the client side, so I'm trying to fit the Meteor Streamer's payload\n\t\tif (payload) this.publication._session.socket?.send(payload);\n\t};\n\n\tstop(): void {\n\t\tthis.listeners.forEach(this.off);\n\t\tclients.delete(this.publication.connection);\n\t}\n\n\tstatic getClient(publication: IPublication, streamer: IStreamer<'user-presence'>): [UserPresence, boolean] {\n\t\tconst { connection } = publication;\n\t\tconst stored = clients.get(connection);\n\n\t\tconst client = stored || new UserPresence(publication, streamer);\n\n\t\tconst main = Boolean(!stored);\n\n\t\tclients.set(connection, client);\n\n\t\treturn [client, main];\n\t}\n}\n\nexport class StreamPresence {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tstatic getInstance(Streamer: IStreamerConstructor, name = 'user-presence'): IStreamer<'user-presence'> {\n\t\treturn new (class StreamPresence extends Streamer<'user-presence'> {\n\t\t\tasync _publish(\n\t\t\t\tpublication: IPublication,\n\t\t\t\t_eventName: string,\n\t\t\t\toptions: boolean | { useCollection?: boolean; args?: any } = false,\n\t\t\t): Promise<void> {\n\t\t\t\tconst { added, removed } = (typeof options !== 'boolean' ? options : {}) as unknown as UserPresenceStreamProps;\n\n\t\t\t\tconst [client, main] = UserPresence.getClient(publication, this);\n\n\t\t\t\tadded?.forEach((uid) => client.listen(uid));\n\t\t\t\tremoved?.forEach((uid) => client.off(uid));\n\n\t\t\t\tif (!main) {\n\t\t\t\t\tpublication.stop();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tpublication.ready();\n\n\t\t\t\tpublication.onStop(() => client.stop());\n\t\t\t}\n\t\t} as any)(name);\n\t}\n}\n\nexport const emit = (uid: string, args: UserPresenceStreamArgs['args']): void => {\n\te.emit(uid, { uid, args });\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      StreamPresence: () => StreamPresence,\n      emit: () => emit\n    });\n    let Emitter;\n    module.link(\"@rocket.chat/emitter\", {\n      Emitter(v) {\n        Emitter = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const e = new Emitter();\n    const clients = new WeakMap();\n    class UserPresence {\n      constructor(publication, streamer) {\n        this.streamer = void 0;\n        this.publication = void 0;\n        this.listeners = void 0;\n        this.off = uid => {\n          e.off(uid, this.run);\n          this.listeners.delete(uid);\n        };\n        this.run = args => {\n          var _this$publication$_se;\n          const payload = this.streamer.changedPayload(this.streamer.subscriptionName, args.uid, _objectSpread(_objectSpread({}, args), {}, {\n            eventName: args.uid\n          })); // there is no good explanation to keep eventName, I just want to save one 'DDPCommon.parseDDP' on the client side, so I'm trying to fit the Meteor Streamer's payload\n          if (payload) (_this$publication$_se = this.publication._session.socket) === null || _this$publication$_se === void 0 ? void 0 : _this$publication$_se.send(payload);\n        };\n        this.listeners = new Set();\n        this.publication = publication;\n        this.streamer = streamer;\n      }\n      listen(uid) {\n        if (this.listeners.has(uid)) {\n          return;\n        }\n        e.on(uid, this.run);\n        this.listeners.add(uid);\n      }\n      stop() {\n        this.listeners.forEach(this.off);\n        clients.delete(this.publication.connection);\n      }\n      static getClient(publication, streamer) {\n        const {\n          connection\n        } = publication;\n        const stored = clients.get(connection);\n        const client = stored || new UserPresence(publication, streamer);\n        const main = Boolean(!stored);\n        clients.set(connection, client);\n        return [client, main];\n      }\n    }\n    class StreamPresence {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      static getInstance(Streamer) {\n        let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'user-presence';\n        return new class StreamPresence extends Streamer {\n          async _publish(publication, _eventName) {\n            let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            const {\n              added,\n              removed\n            } = typeof options !== 'boolean' ? options : {};\n            const [client, main] = UserPresence.getClient(publication, this);\n            added === null || added === void 0 ? void 0 : added.forEach(uid => client.listen(uid));\n            removed === null || removed === void 0 ? void 0 : removed.forEach(uid => client.off(uid));\n            if (!main) {\n              publication.stop();\n              return;\n            }\n            publication.ready();\n            publication.onStop(() => client.stop());\n          }\n        }(name);\n      }\n    }\n    const emit = (uid, args) => {\n      e.emit(uid, {\n        uid,\n        args\n      });\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","StreamPresence","emit","Emitter","__reifyWaitForDeps__","e","clients","WeakMap","UserPresence","constructor","publication","streamer","listeners","off","uid","run","delete","args","_this$publication$_se","payload","changedPayload","subscriptionName","eventName","_session","socket","send","Set","listen","has","on","add","stop","forEach","connection","getClient","stored","get","client","main","Boolean","set","getInstance","Streamer","name","arguments","length","undefined","_publish","_eventName","options","added","removed","ready","onStop","__reify_async_result__","_reifyError","self","async"],"sources":["app/notifications/server/lib/Presence.ts"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport type { StreamerEvents } from '@rocket.chat/ddp-client';\nimport { Emitter } from '@rocket.chat/emitter';\nimport type { IPublication, IStreamerConstructor, Connection, IStreamer } from 'meteor/rocketchat:streamer';\n\ntype UserPresenceStreamProps = {\n\tadded: IUser['_id'][];\n\tremoved: IUser['_id'][];\n};\n\ntype UserPresenceStreamArgs = {\n\tuid: string;\n\targs: StreamerEvents['user-presence'][number]['args'];\n};\n\nconst e = new Emitter<{\n\t[key: string]: UserPresenceStreamArgs;\n}>();\n\nconst clients = new WeakMap<Connection, UserPresence>();\n\nclass UserPresence {\n\tprivate readonly streamer: IStreamer<'user-presence'>;\n\n\tprivate readonly publication: IPublication;\n\n\tprivate readonly listeners: Set<string>;\n\n\tconstructor(publication: IPublication, streamer: IStreamer<'user-presence'>) {\n\t\tthis.listeners = new Set();\n\t\tthis.publication = publication;\n\t\tthis.streamer = streamer;\n\t}\n\n\tlisten(uid: string): void {\n\t\tif (this.listeners.has(uid)) {\n\t\t\treturn;\n\t\t}\n\t\te.on(uid, this.run);\n\t\tthis.listeners.add(uid);\n\t}\n\n\toff = (uid: string): void => {\n\t\te.off(uid, this.run);\n\t\tthis.listeners.delete(uid);\n\t};\n\n\trun = (args: UserPresenceStreamArgs): void => {\n\t\tconst payload = this.streamer.changedPayload(this.streamer.subscriptionName, args.uid, { ...args, eventName: args.uid }); // there is no good explanation to keep eventName, I just want to save one 'DDPCommon.parseDDP' on the client side, so I'm trying to fit the Meteor Streamer's payload\n\t\tif (payload) this.publication._session.socket?.send(payload);\n\t};\n\n\tstop(): void {\n\t\tthis.listeners.forEach(this.off);\n\t\tclients.delete(this.publication.connection);\n\t}\n\n\tstatic getClient(publication: IPublication, streamer: IStreamer<'user-presence'>): [UserPresence, boolean] {\n\t\tconst { connection } = publication;\n\t\tconst stored = clients.get(connection);\n\n\t\tconst client = stored || new UserPresence(publication, streamer);\n\n\t\tconst main = Boolean(!stored);\n\n\t\tclients.set(connection, client);\n\n\t\treturn [client, main];\n\t}\n}\n\nexport class StreamPresence {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tstatic getInstance(Streamer: IStreamerConstructor, name = 'user-presence'): IStreamer<'user-presence'> {\n\t\treturn new (class StreamPresence extends Streamer<'user-presence'> {\n\t\t\tasync _publish(\n\t\t\t\tpublication: IPublication,\n\t\t\t\t_eventName: string,\n\t\t\t\toptions: boolean | { useCollection?: boolean; args?: any } = false,\n\t\t\t): Promise<void> {\n\t\t\t\tconst { added, removed } = (typeof options !== 'boolean' ? options : {}) as unknown as UserPresenceStreamProps;\n\n\t\t\t\tconst [client, main] = UserPresence.getClient(publication, this);\n\n\t\t\t\tadded?.forEach((uid) => client.listen(uid));\n\t\t\t\tremoved?.forEach((uid) => client.off(uid));\n\n\t\t\t\tif (!main) {\n\t\t\t\t\tpublication.stop();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tpublication.ready();\n\n\t\t\t\tpublication.onStop(() => client.stop());\n\t\t\t}\n\t\t} as any)(name);\n\t}\n}\n\nexport const emit = (uid: string, args: UserPresenceStreamArgs['args']): void => {\n\te.emit(uid, { uid, args });\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e8fac5ba77e2e66a4075843c828b5d1e936b0d80"}
