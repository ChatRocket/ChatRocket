{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/userStatuses.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/userStatuses.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/userStatuses.ts","inputSourceMap":{"version":3,"file":"client/lib/userStatuses.ts","sourceRoot":"","sources":["client/lib/userStatuses.ts"],"names":[],"mappings":"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","sourcesContent":["import { UserStatus } from '@rocket.chat/core-typings';\nimport type { ICustomUserStatus } from '@rocket.chat/core-typings';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\n\nexport type UserStatusDescriptor = {\n\tid: string;\n\tname: string;\n\tstatusType: UserStatus;\n\tlocalizeName: boolean;\n};\n\nexport class UserStatuses implements Iterable<UserStatusDescriptor> {\n\tpublic invisibleAllowed = true;\n\n\tprivate store: Map<UserStatusDescriptor['id'], UserStatusDescriptor> = new Map(\n\t\t[UserStatus.ONLINE, UserStatus.AWAY, UserStatus.BUSY, UserStatus.OFFLINE].map((status) => [\n\t\t\tstatus,\n\t\t\t{\n\t\t\t\tid: status,\n\t\t\t\tname: status,\n\t\t\t\tstatusType: status,\n\t\t\t\tlocalizeName: true,\n\t\t\t},\n\t\t]),\n\t);\n\n\tpublic delete(id: string): void {\n\t\tthis.store.delete(id);\n\t}\n\n\tpublic put(customUserStatus: UserStatusDescriptor): void {\n\t\tthis.store.set(customUserStatus.id, customUserStatus);\n\t}\n\n\tpublic createFromCustom(customUserStatus: ICustomUserStatus): UserStatusDescriptor {\n\t\tif (!this.isValidType(customUserStatus.statusType)) {\n\t\t\tthrow new Error('Invalid user status type');\n\t\t}\n\n\t\treturn {\n\t\t\tname: customUserStatus.name,\n\t\t\tid: customUserStatus._id,\n\t\t\tstatusType: customUserStatus.statusType as UserStatus,\n\t\t\tlocalizeName: false,\n\t\t};\n\t}\n\n\tpublic isValidType(type: string): type is UserStatus {\n\t\treturn (Object.values(UserStatus) as string[]).includes(type);\n\t}\n\n\tpublic *[Symbol.iterator]() {\n\t\tfor (const value of this.store.values()) {\n\t\t\tif (this.invisibleAllowed || value.statusType !== UserStatus.OFFLINE) {\n\t\t\t\tyield value;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async sync() {\n\t\tconst result = await sdk.call('listCustomUserStatus');\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const customStatus of result) {\n\t\t\tthis.put(this.createFromCustom(customStatus));\n\t\t}\n\t}\n\n\tpublic watch(cb?: () => void) {\n\t\tconst updateSubscription = sdk.stream('notify-logged', ['updateCustomUserStatus'], (data) => {\n\t\t\tthis.put(this.createFromCustom(data.userStatusData));\n\t\t\tcb?.();\n\t\t});\n\n\t\tconst deleteSubscription = sdk.stream('notify-logged', ['deleteCustomUserStatus'], (data) => {\n\t\t\tthis.delete(data.userStatusData._id);\n\t\t\tcb?.();\n\t\t});\n\n\t\treturn () => {\n\t\t\tupdateSubscription.stop();\n\t\t\tdeleteSubscription.stop();\n\t\t};\n\t}\n}\n\nexport const userStatuses = new UserStatuses();\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/userStatuses.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/userStatuses.ts","inputSourceMap":{"version":3,"file":"client/lib/userStatuses.ts","sourceRoot":"","sources":["client/lib/userStatuses.ts"],"names":[],"mappings":"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","sourcesContent":["import { UserStatus } from '@rocket.chat/core-typings';\nimport type { ICustomUserStatus } from '@rocket.chat/core-typings';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\n\nexport type UserStatusDescriptor = {\n\tid: string;\n\tname: string;\n\tstatusType: UserStatus;\n\tlocalizeName: boolean;\n};\n\nexport class UserStatuses implements Iterable<UserStatusDescriptor> {\n\tpublic invisibleAllowed = true;\n\n\tprivate store: Map<UserStatusDescriptor['id'], UserStatusDescriptor> = new Map(\n\t\t[UserStatus.ONLINE, UserStatus.AWAY, UserStatus.BUSY, UserStatus.OFFLINE].map((status) => [\n\t\t\tstatus,\n\t\t\t{\n\t\t\t\tid: status,\n\t\t\t\tname: status,\n\t\t\t\tstatusType: status,\n\t\t\t\tlocalizeName: true,\n\t\t\t},\n\t\t]),\n\t);\n\n\tpublic delete(id: string): void {\n\t\tthis.store.delete(id);\n\t}\n\n\tpublic put(customUserStatus: UserStatusDescriptor): void {\n\t\tthis.store.set(customUserStatus.id, customUserStatus);\n\t}\n\n\tpublic createFromCustom(customUserStatus: ICustomUserStatus): UserStatusDescriptor {\n\t\tif (!this.isValidType(customUserStatus.statusType)) {\n\t\t\tthrow new Error('Invalid user status type');\n\t\t}\n\n\t\treturn {\n\t\t\tname: customUserStatus.name,\n\t\t\tid: customUserStatus._id,\n\t\t\tstatusType: customUserStatus.statusType as UserStatus,\n\t\t\tlocalizeName: false,\n\t\t};\n\t}\n\n\tpublic isValidType(type: string): type is UserStatus {\n\t\treturn (Object.values(UserStatus) as string[]).includes(type);\n\t}\n\n\tpublic *[Symbol.iterator]() {\n\t\tfor (const value of this.store.values()) {\n\t\t\tif (this.invisibleAllowed || value.statusType !== UserStatus.OFFLINE) {\n\t\t\t\tyield value;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async sync() {\n\t\tconst result = await sdk.call('listCustomUserStatus');\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const customStatus of result) {\n\t\t\tthis.put(this.createFromCustom(customStatus));\n\t\t}\n\t}\n\n\tpublic watch(cb?: () => void) {\n\t\tconst updateSubscription = sdk.stream('notify-logged', ['updateCustomUserStatus'], (data) => {\n\t\t\tthis.put(this.createFromCustom(data.userStatusData));\n\t\t\tcb?.();\n\t\t});\n\n\t\tconst deleteSubscription = sdk.stream('notify-logged', ['deleteCustomUserStatus'], (data) => {\n\t\t\tthis.delete(data.userStatusData._id);\n\t\t\tcb?.();\n\t\t});\n\n\t\treturn () => {\n\t\t\tupdateSubscription.stop();\n\t\t\tdeleteSubscription.stop();\n\t\t};\n\t}\n}\n\nexport const userStatuses = new UserStatuses();\n"]}}},"code":"module.export({\n  UserStatuses: () => UserStatuses,\n  userStatuses: () => userStatuses\n});\nlet UserStatus;\nmodule.link(\"@rocket.chat/core-typings\", {\n  UserStatus(v) {\n    UserStatus = v;\n  }\n}, 0);\nlet sdk;\nmodule.link(\"../../app/utils/client/lib/SDKClient\", {\n  sdk(v) {\n    sdk = v;\n  }\n}, 1);\nclass UserStatuses {\n  constructor() {\n    this.invisibleAllowed = true;\n    this.store = new Map([UserStatus.ONLINE, UserStatus.AWAY, UserStatus.BUSY, UserStatus.OFFLINE].map(status => [status, {\n      id: status,\n      name: status,\n      statusType: status,\n      localizeName: true\n    }]));\n  }\n  delete(id) {\n    this.store.delete(id);\n  }\n  put(customUserStatus) {\n    this.store.set(customUserStatus.id, customUserStatus);\n  }\n  createFromCustom(customUserStatus) {\n    if (!this.isValidType(customUserStatus.statusType)) {\n      throw new Error('Invalid user status type');\n    }\n    return {\n      name: customUserStatus.name,\n      id: customUserStatus._id,\n      statusType: customUserStatus.statusType,\n      localizeName: false\n    };\n  }\n  isValidType(type) {\n    return Object.values(UserStatus).includes(type);\n  }\n  *[Symbol.iterator]() {\n    for (const value of this.store.values()) {\n      if (this.invisibleAllowed || value.statusType !== UserStatus.OFFLINE) {\n        yield value;\n      }\n    }\n  }\n  async sync() {\n    const result = await sdk.call('listCustomUserStatus');\n    if (!result) {\n      return;\n    }\n    for (const customStatus of result) {\n      this.put(this.createFromCustom(customStatus));\n    }\n  }\n  watch(cb) {\n    const updateSubscription = sdk.stream('notify-logged', ['updateCustomUserStatus'], data => {\n      this.put(this.createFromCustom(data.userStatusData));\n      cb === null || cb === void 0 ? void 0 : cb();\n    });\n    const deleteSubscription = sdk.stream('notify-logged', ['deleteCustomUserStatus'], data => {\n      this.delete(data.userStatusData._id);\n      cb === null || cb === void 0 ? void 0 : cb();\n    });\n    return () => {\n      updateSubscription.stop();\n      deleteSubscription.stop();\n    };\n  }\n}\nconst userStatuses = new UserStatuses();","map":{"version":3,"names":["module","export","UserStatuses","userStatuses","UserStatus","link","v","sdk","constructor","invisibleAllowed","store","Map","ONLINE","AWAY","BUSY","OFFLINE","map","status","id","name","statusType","localizeName","delete","put","customUserStatus","set","createFromCustom","isValidType","Error","_id","type","Object","values","includes","Symbol","iterator","value","sync","result","call","customStatus","watch","cb","updateSubscription","stream","data","userStatusData","deleteSubscription","stop"],"sources":["client/lib/userStatuses.ts"],"sourcesContent":["import { UserStatus } from '@rocket.chat/core-typings';\nimport type { ICustomUserStatus } from '@rocket.chat/core-typings';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\n\nexport type UserStatusDescriptor = {\n\tid: string;\n\tname: string;\n\tstatusType: UserStatus;\n\tlocalizeName: boolean;\n};\n\nexport class UserStatuses implements Iterable<UserStatusDescriptor> {\n\tpublic invisibleAllowed = true;\n\n\tprivate store: Map<UserStatusDescriptor['id'], UserStatusDescriptor> = new Map(\n\t\t[UserStatus.ONLINE, UserStatus.AWAY, UserStatus.BUSY, UserStatus.OFFLINE].map((status) => [\n\t\t\tstatus,\n\t\t\t{\n\t\t\t\tid: status,\n\t\t\t\tname: status,\n\t\t\t\tstatusType: status,\n\t\t\t\tlocalizeName: true,\n\t\t\t},\n\t\t]),\n\t);\n\n\tpublic delete(id: string): void {\n\t\tthis.store.delete(id);\n\t}\n\n\tpublic put(customUserStatus: UserStatusDescriptor): void {\n\t\tthis.store.set(customUserStatus.id, customUserStatus);\n\t}\n\n\tpublic createFromCustom(customUserStatus: ICustomUserStatus): UserStatusDescriptor {\n\t\tif (!this.isValidType(customUserStatus.statusType)) {\n\t\t\tthrow new Error('Invalid user status type');\n\t\t}\n\n\t\treturn {\n\t\t\tname: customUserStatus.name,\n\t\t\tid: customUserStatus._id,\n\t\t\tstatusType: customUserStatus.statusType as UserStatus,\n\t\t\tlocalizeName: false,\n\t\t};\n\t}\n\n\tpublic isValidType(type: string): type is UserStatus {\n\t\treturn (Object.values(UserStatus) as string[]).includes(type);\n\t}\n\n\tpublic *[Symbol.iterator]() {\n\t\tfor (const value of this.store.values()) {\n\t\t\tif (this.invisibleAllowed || value.statusType !== UserStatus.OFFLINE) {\n\t\t\t\tyield value;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async sync() {\n\t\tconst result = await sdk.call('listCustomUserStatus');\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const customStatus of result) {\n\t\t\tthis.put(this.createFromCustom(customStatus));\n\t\t}\n\t}\n\n\tpublic watch(cb?: () => void) {\n\t\tconst updateSubscription = sdk.stream('notify-logged', ['updateCustomUserStatus'], (data) => {\n\t\t\tthis.put(this.createFromCustom(data.userStatusData));\n\t\t\tcb?.();\n\t\t});\n\n\t\tconst deleteSubscription = sdk.stream('notify-logged', ['deleteCustomUserStatus'], (data) => {\n\t\t\tthis.delete(data.userStatusData._id);\n\t\t\tcb?.();\n\t\t});\n\n\t\treturn () => {\n\t\t\tupdateSubscription.stop();\n\t\t\tdeleteSubscription.stop();\n\t\t};\n\t}\n}\n\nexport const userStatuses = new UserStatuses();\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"de62c85327b29c8293bbafa8e2f6a15212f84f92"}
