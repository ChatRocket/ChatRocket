{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/deleteMessage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/deleteMessage.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/deleteMessage.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/deleteMessage.ts","sourceRoot":"","sources":["app/lib/server/functions/deleteMessage.ts"],"names":[],"mappings":"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","sourcesContent":["import { AppEvents, Apps } from '@rocket.chat/apps';\nimport { api, Message } from '@rocket.chat/core-services';\nimport type { AtLeast, IMessage, IUser } from '@rocket.chat/core-typings';\nimport { Messages, Rooms, Uploads, Users, ReadReceipts } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { canDeleteMessageAsync } from '../../../authorization/server/functions/canDeleteMessage';\nimport { FileUpload } from '../../../file-upload/server';\nimport { settings } from '../../../settings/server';\nimport { notifyOnRoomChangedById, notifyOnMessageChange } from '../lib/notifyListener';\n\nexport const deleteMessageValidatingPermission = async (message: AtLeast<IMessage, '_id'>, userId: IUser['_id']): Promise<void> => {\n\tif (!message?._id) {\n\t\tthrow new Meteor.Error('error-invalid-message', 'Invalid message');\n\t}\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user');\n\t}\n\n\tconst user = await Users.findOneById(userId);\n\tconst originalMessage = await Messages.findOneById(message._id);\n\n\tif (!originalMessage || !user || !(await canDeleteMessageAsync(userId, originalMessage))) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Not allowed');\n\t}\n\n\treturn deleteMessage(originalMessage, user);\n};\n\nexport async function deleteMessage(message: IMessage, user: IUser): Promise<void> {\n\tconst deletedMsg: IMessage | null = await Messages.findOneById(message._id);\n\tconst isThread = (deletedMsg?.tcount || 0) > 0;\n\tconst keepHistory = settings.get('Message_KeepHistory') || isThread;\n\tconst showDeletedStatus = settings.get('Message_ShowDeletedStatus') || isThread;\n\tconst bridges = Apps.self?.isLoaded() && Apps.getBridges();\n\n\tconst room = await Rooms.findOneById(message.rid, { projection: { lastMessage: 1, prid: 1, mid: 1, federated: 1 } });\n\n\tif (deletedMsg) {\n\t\tif (bridges) {\n\t\t\tconst prevent = await bridges.getListenerBridge().messageEvent(AppEvents.IPreMessageDeletePrevent, deletedMsg);\n\t\t\tif (prevent) {\n\t\t\t\tthrow new Meteor.Error('error-app-prevented-deleting', 'A Rocket.Chat App prevented the message deleting.');\n\t\t\t}\n\t\t}\n\n\t\tif (room) {\n\t\t\tawait Message.beforeDelete(deletedMsg, room);\n\t\t}\n\t}\n\n\tif (deletedMsg?.tmid) {\n\t\tawait Messages.decreaseReplyCountById(deletedMsg.tmid, -1);\n\t}\n\n\tconst files = (message.files || [message.file]).filter(Boolean); // Keep compatibility with old messages\n\n\tif (keepHistory) {\n\t\tif (showDeletedStatus) {\n\t\t\t// TODO is there a better way to tell TS \"IUser[username]\" is not undefined?\n\t\t\tawait Messages.cloneAndSaveAsHistoryById(message._id, user as Required<Pick<IUser, '_id' | 'username' | 'name'>>);\n\t\t} else {\n\t\t\tawait Messages.setHiddenById(message._id, true);\n\t\t}\n\n\t\tfor await (const file of files) {\n\t\t\tfile?._id && (await Uploads.updateOne({ _id: file._id }, { $set: { _hidden: true } }));\n\t\t}\n\t} else {\n\t\tif (!showDeletedStatus) {\n\t\t\tawait Messages.removeById(message._id);\n\t\t}\n\t\tawait ReadReceipts.removeByMessageId(message._id);\n\n\t\tfor await (const file of files) {\n\t\t\tfile?._id && (await FileUpload.getStore('Uploads').deleteById(file._id));\n\t\t}\n\t}\n\tif (showDeletedStatus) {\n\t\t// TODO is there a better way to tell TS \"IUser[username]\" is not undefined?\n\t\tawait Messages.setAsDeletedByIdAndUser(message._id, user as Required<Pick<IUser, '_id' | 'username' | 'name'>>);\n\t} else {\n\t\tvoid api.broadcast('notify.deleteMessage', message.rid, { _id: message._id });\n\t}\n\n\t// update last message\n\tif (settings.get('Store_Last_Message') && (!room?.lastMessage || room.lastMessage._id === message._id)) {\n\t\tconst lastMessageNotDeleted = await Messages.getLastVisibleUserMessageSentByRoomId(message.rid);\n\t\tawait Rooms.resetLastMessageById(message.rid, lastMessageNotDeleted, -1);\n\t} else {\n\t\t// decrease message count\n\t\tawait Rooms.decreaseMessageCountById(message.rid, 1);\n\t}\n\n\tawait callbacks.run('afterDeleteMessage', deletedMsg, room);\n\n\tvoid notifyOnRoomChangedById(message.rid);\n\n\tif (keepHistory || showDeletedStatus) {\n\t\tvoid notifyOnMessageChange({\n\t\t\tid: message._id,\n\t\t});\n\t}\n\n\tif (bridges && deletedMsg) {\n\t\tvoid bridges.getListenerBridge().messageEvent(AppEvents.IPostMessageDeleted, deletedMsg, user);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/deleteMessage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/deleteMessage.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/deleteMessage.ts","sourceRoot":"","sources":["app/lib/server/functions/deleteMessage.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAE1D,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AACpF,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,qBAAqB,EAAE,MAAM,0DAA0D,CAAC;AACjG,OAAO,EAAE,UAAU,EAAE,MAAM,6BAA6B,CAAC;AACzD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,MAAM,uBAAuB,CAAC;AAEvF,MAAM,CAAC,MAAM,iCAAiC,GAAG,KAAK,EAAE,OAAiC,EAAE,MAAoB,EAAiB,EAAE;IACjI,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC;QACnB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,iBAAiB,CAAC,CAAC;IACpE,CAAC;IACD,IAAI,CAAC,MAAM,EAAE,CAAC;QACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,CAAC,CAAC;IAC9D,CAAC;IAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC7C,MAAM,eAAe,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAEhE,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,qBAAqB,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC,EAAE,CAAC;QAC1F,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,0BAA0B,EAAE,aAAa,CAAC,CAAC;IACnE,CAAC;IAED,OAAO,aAAa,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC;AAEF,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,OAAiB,EAAE,IAAW;IACjE,MAAM,UAAU,GAAoB,MAAM,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC5E,MAAM,QAAQ,GAAG,CAAC,UAAU,EAAE,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IAC/C,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,QAAQ,CAAC;IACpE,MAAM,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC,2BAA2B,CAAC,IAAI,QAAQ,CAAC;IAChF,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;IAE3D,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAErH,IAAI,UAAU,EAAE,CAAC;QAChB,IAAI,OAAO,EAAE,CAAC;YACb,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,iBAAiB,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,wBAAwB,EAAE,UAAU,CAAC,CAAC;YAC/G,IAAI,OAAO,EAAE,CAAC;gBACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,8BAA8B,EAAE,mDAAmD,CAAC,CAAC;YAC7G,CAAC;QACF,CAAC;QAED,IAAI,IAAI,EAAE,CAAC;YACV,MAAM,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC9C,CAAC;IACF,CAAC;IAED,IAAI,UAAU,EAAE,IAAI,EAAE,CAAC;QACtB,MAAM,QAAQ,CAAC,sBAAsB,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,MAAM,KAAK,GAAG,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,uCAAuC;IAExG,IAAI,WAAW,EAAE,CAAC;QACjB,IAAI,iBAAiB,EAAE,CAAC;YACvB,4EAA4E;YAC5E,MAAM,QAAQ,CAAC,yBAAyB,CAAC,OAAO,CAAC,GAAG,EAAE,IAA0D,CAAC,CAAC;QACnH,CAAC;aAAM,CAAC;YACP,MAAM,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACjD,CAAC;QAED,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YAChC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,OAAO,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QACxF,CAAC;IACF,CAAC;SAAM,CAAC;QACP,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACxB,MAAM,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACxC,CAAC;QACD,MAAM,YAAY,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAElD,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YAChC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC1E,CAAC;IACF,CAAC;IACD,IAAI,iBAAiB,EAAE,CAAC;QACvB,4EAA4E;QAC5E,MAAM,QAAQ,CAAC,uBAAuB,CAAC,OAAO,CAAC,GAAG,EAAE,IAA0D,CAAC,CAAC;IACjH,CAAC;SAAM,CAAC;QACP,KAAK,GAAG,CAAC,SAAS,CAAC,sBAAsB,EAAE,OAAO,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;IAC/E,CAAC;IAED,sBAAsB;IACtB,IAAI,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;QACxG,MAAM,qBAAqB,GAAG,MAAM,QAAQ,CAAC,qCAAqC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChG,MAAM,KAAK,CAAC,oBAAoB,CAAC,OAAO,CAAC,GAAG,EAAE,qBAAqB,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;SAAM,CAAC;QACP,yBAAyB;QACzB,MAAM,KAAK,CAAC,wBAAwB,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,MAAM,SAAS,CAAC,GAAG,CAAC,oBAAoB,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;IAE5D,KAAK,uBAAuB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAE1C,IAAI,WAAW,IAAI,iBAAiB,EAAE,CAAC;QACtC,KAAK,qBAAqB,CAAC;YAC1B,EAAE,EAAE,OAAO,CAAC,GAAG;SACf,CAAC,CAAC;IACJ,CAAC;IAED,IAAI,OAAO,IAAI,UAAU,EAAE,CAAC;QAC3B,KAAK,OAAO,CAAC,iBAAiB,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,mBAAmB,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;IAChG,CAAC;AACF,CAAC","sourcesContent":["import { AppEvents, Apps } from '@rocket.chat/apps';\nimport { api, Message } from '@rocket.chat/core-services';\nimport type { AtLeast, IMessage, IUser } from '@rocket.chat/core-typings';\nimport { Messages, Rooms, Uploads, Users, ReadReceipts } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { canDeleteMessageAsync } from '../../../authorization/server/functions/canDeleteMessage';\nimport { FileUpload } from '../../../file-upload/server';\nimport { settings } from '../../../settings/server';\nimport { notifyOnRoomChangedById, notifyOnMessageChange } from '../lib/notifyListener';\n\nexport const deleteMessageValidatingPermission = async (message: AtLeast<IMessage, '_id'>, userId: IUser['_id']): Promise<void> => {\n\tif (!message?._id) {\n\t\tthrow new Meteor.Error('error-invalid-message', 'Invalid message');\n\t}\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user');\n\t}\n\n\tconst user = await Users.findOneById(userId);\n\tconst originalMessage = await Messages.findOneById(message._id);\n\n\tif (!originalMessage || !user || !(await canDeleteMessageAsync(userId, originalMessage))) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Not allowed');\n\t}\n\n\treturn deleteMessage(originalMessage, user);\n};\n\nexport async function deleteMessage(message: IMessage, user: IUser): Promise<void> {\n\tconst deletedMsg: IMessage | null = await Messages.findOneById(message._id);\n\tconst isThread = (deletedMsg?.tcount || 0) > 0;\n\tconst keepHistory = settings.get('Message_KeepHistory') || isThread;\n\tconst showDeletedStatus = settings.get('Message_ShowDeletedStatus') || isThread;\n\tconst bridges = Apps.self?.isLoaded() && Apps.getBridges();\n\n\tconst room = await Rooms.findOneById(message.rid, { projection: { lastMessage: 1, prid: 1, mid: 1, federated: 1 } });\n\n\tif (deletedMsg) {\n\t\tif (bridges) {\n\t\t\tconst prevent = await bridges.getListenerBridge().messageEvent(AppEvents.IPreMessageDeletePrevent, deletedMsg);\n\t\t\tif (prevent) {\n\t\t\t\tthrow new Meteor.Error('error-app-prevented-deleting', 'A Rocket.Chat App prevented the message deleting.');\n\t\t\t}\n\t\t}\n\n\t\tif (room) {\n\t\t\tawait Message.beforeDelete(deletedMsg, room);\n\t\t}\n\t}\n\n\tif (deletedMsg?.tmid) {\n\t\tawait Messages.decreaseReplyCountById(deletedMsg.tmid, -1);\n\t}\n\n\tconst files = (message.files || [message.file]).filter(Boolean); // Keep compatibility with old messages\n\n\tif (keepHistory) {\n\t\tif (showDeletedStatus) {\n\t\t\t// TODO is there a better way to tell TS \"IUser[username]\" is not undefined?\n\t\t\tawait Messages.cloneAndSaveAsHistoryById(message._id, user as Required<Pick<IUser, '_id' | 'username' | 'name'>>);\n\t\t} else {\n\t\t\tawait Messages.setHiddenById(message._id, true);\n\t\t}\n\n\t\tfor await (const file of files) {\n\t\t\tfile?._id && (await Uploads.updateOne({ _id: file._id }, { $set: { _hidden: true } }));\n\t\t}\n\t} else {\n\t\tif (!showDeletedStatus) {\n\t\t\tawait Messages.removeById(message._id);\n\t\t}\n\t\tawait ReadReceipts.removeByMessageId(message._id);\n\n\t\tfor await (const file of files) {\n\t\t\tfile?._id && (await FileUpload.getStore('Uploads').deleteById(file._id));\n\t\t}\n\t}\n\tif (showDeletedStatus) {\n\t\t// TODO is there a better way to tell TS \"IUser[username]\" is not undefined?\n\t\tawait Messages.setAsDeletedByIdAndUser(message._id, user as Required<Pick<IUser, '_id' | 'username' | 'name'>>);\n\t} else {\n\t\tvoid api.broadcast('notify.deleteMessage', message.rid, { _id: message._id });\n\t}\n\n\t// update last message\n\tif (settings.get('Store_Last_Message') && (!room?.lastMessage || room.lastMessage._id === message._id)) {\n\t\tconst lastMessageNotDeleted = await Messages.getLastVisibleUserMessageSentByRoomId(message.rid);\n\t\tawait Rooms.resetLastMessageById(message.rid, lastMessageNotDeleted, -1);\n\t} else {\n\t\t// decrease message count\n\t\tawait Rooms.decreaseMessageCountById(message.rid, 1);\n\t}\n\n\tawait callbacks.run('afterDeleteMessage', deletedMsg, room);\n\n\tvoid notifyOnRoomChangedById(message.rid);\n\n\tif (keepHistory || showDeletedStatus) {\n\t\tvoid notifyOnMessageChange({\n\t\t\tid: message._id,\n\t\t});\n\t}\n\n\tif (bridges && deletedMsg) {\n\t\tvoid bridges.getListenerBridge().messageEvent(AppEvents.IPostMessageDeleted, deletedMsg, user);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      deleteMessageValidatingPermission: () => deleteMessageValidatingPermission,\n      deleteMessage: () => deleteMessage\n    });\n    let AppEvents, Apps;\n    module.link(\"@rocket.chat/apps\", {\n      AppEvents(v) {\n        AppEvents = v;\n      },\n      Apps(v) {\n        Apps = v;\n      }\n    }, 0);\n    let api, Message;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      },\n      Message(v) {\n        Message = v;\n      }\n    }, 1);\n    let Messages, Rooms, Uploads, Users, ReadReceipts;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      },\n      Uploads(v) {\n        Uploads = v;\n      },\n      Users(v) {\n        Users = v;\n      },\n      ReadReceipts(v) {\n        ReadReceipts = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let callbacks;\n    module.link(\"../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 4);\n    let canDeleteMessageAsync;\n    module.link(\"../../../authorization/server/functions/canDeleteMessage\", {\n      canDeleteMessageAsync(v) {\n        canDeleteMessageAsync = v;\n      }\n    }, 5);\n    let FileUpload;\n    module.link(\"../../../file-upload/server\", {\n      FileUpload(v) {\n        FileUpload = v;\n      }\n    }, 6);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 7);\n    let notifyOnRoomChangedById, notifyOnMessageChange;\n    module.link(\"../lib/notifyListener\", {\n      notifyOnRoomChangedById(v) {\n        notifyOnRoomChangedById = v;\n      },\n      notifyOnMessageChange(v) {\n        notifyOnMessageChange = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const deleteMessageValidatingPermission = async (message, userId) => {\n      if (!(message !== null && message !== void 0 && message._id)) {\n        throw new Meteor.Error('error-invalid-message', 'Invalid message');\n      }\n      if (!userId) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user');\n      }\n      const user = await Users.findOneById(userId);\n      const originalMessage = await Messages.findOneById(message._id);\n      if (!originalMessage || !user || !(await canDeleteMessageAsync(userId, originalMessage))) {\n        throw new Meteor.Error('error-action-not-allowed', 'Not allowed');\n      }\n      return deleteMessage(originalMessage, user);\n    };\n    async function deleteMessage(message, user) {\n      var _Apps$self;\n      const deletedMsg = await Messages.findOneById(message._id);\n      const isThread = ((deletedMsg === null || deletedMsg === void 0 ? void 0 : deletedMsg.tcount) || 0) > 0;\n      const keepHistory = settings.get('Message_KeepHistory') || isThread;\n      const showDeletedStatus = settings.get('Message_ShowDeletedStatus') || isThread;\n      const bridges = ((_Apps$self = Apps.self) === null || _Apps$self === void 0 ? void 0 : _Apps$self.isLoaded()) && Apps.getBridges();\n      const room = await Rooms.findOneById(message.rid, {\n        projection: {\n          lastMessage: 1,\n          prid: 1,\n          mid: 1,\n          federated: 1\n        }\n      });\n      if (deletedMsg) {\n        if (bridges) {\n          const prevent = await bridges.getListenerBridge().messageEvent(AppEvents.IPreMessageDeletePrevent, deletedMsg);\n          if (prevent) {\n            throw new Meteor.Error('error-app-prevented-deleting', 'A Rocket.Chat App prevented the message deleting.');\n          }\n        }\n        if (room) {\n          await Message.beforeDelete(deletedMsg, room);\n        }\n      }\n      if (deletedMsg !== null && deletedMsg !== void 0 && deletedMsg.tmid) {\n        await Messages.decreaseReplyCountById(deletedMsg.tmid, -1);\n      }\n      const files = (message.files || [message.file]).filter(Boolean); // Keep compatibility with old messages\n      if (keepHistory) {\n        if (showDeletedStatus) {\n          // TODO is there a better way to tell TS \"IUser[username]\" is not undefined?\n          await Messages.cloneAndSaveAsHistoryById(message._id, user);\n        } else {\n          await Messages.setHiddenById(message._id, true);\n        }\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(files), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const file = _step.value;\n            {\n              (file === null || file === void 0 ? void 0 : file._id) && (await Uploads.updateOne({\n                _id: file._id\n              }, {\n                $set: {\n                  _hidden: true\n                }\n              }));\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } else {\n        if (!showDeletedStatus) {\n          await Messages.removeById(message._id);\n        }\n        await ReadReceipts.removeByMessageId(message._id);\n        var _iteratorAbruptCompletion2 = false;\n        var _didIteratorError2 = false;\n        var _iteratorError2;\n        try {\n          for (var _iterator2 = _asyncIterator(files), _step2; _iteratorAbruptCompletion2 = !(_step2 = await _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n            const file = _step2.value;\n            {\n              (file === null || file === void 0 ? void 0 : file._id) && (await FileUpload.getStore('Uploads').deleteById(file._id));\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n              await _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n      if (showDeletedStatus) {\n        // TODO is there a better way to tell TS \"IUser[username]\" is not undefined?\n        await Messages.setAsDeletedByIdAndUser(message._id, user);\n      } else {\n        void api.broadcast('notify.deleteMessage', message.rid, {\n          _id: message._id\n        });\n      }\n      // update last message\n      if (settings.get('Store_Last_Message') && (!(room !== null && room !== void 0 && room.lastMessage) || room.lastMessage._id === message._id)) {\n        const lastMessageNotDeleted = await Messages.getLastVisibleUserMessageSentByRoomId(message.rid);\n        await Rooms.resetLastMessageById(message.rid, lastMessageNotDeleted, -1);\n      } else {\n        // decrease message count\n        await Rooms.decreaseMessageCountById(message.rid, 1);\n      }\n      await callbacks.run('afterDeleteMessage', deletedMsg, room);\n      void notifyOnRoomChangedById(message.rid);\n      if (keepHistory || showDeletedStatus) {\n        void notifyOnMessageChange({\n          id: message._id\n        });\n      }\n      if (bridges && deletedMsg) {\n        void bridges.getListenerBridge().messageEvent(AppEvents.IPostMessageDeleted, deletedMsg, user);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","deleteMessageValidatingPermission","deleteMessage","AppEvents","Apps","api","Message","Messages","Rooms","Uploads","Users","ReadReceipts","Meteor","callbacks","canDeleteMessageAsync","FileUpload","settings","notifyOnRoomChangedById","notifyOnMessageChange","__reifyWaitForDeps__","message","userId","_id","Error","user","findOneById","originalMessage","_Apps$self","deletedMsg","isThread","tcount","keepHistory","get","showDeletedStatus","bridges","self","isLoaded","getBridges","room","rid","projection","lastMessage","prid","mid","federated","prevent","getListenerBridge","messageEvent","IPreMessageDeletePrevent","beforeDelete","tmid","decreaseReplyCountById","files","file","filter","Boolean","cloneAndSaveAsHistoryById","setHiddenById","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","value","updateOne","$set","_hidden","err","return","removeById","removeByMessageId","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","getStore","deleteById","setAsDeletedByIdAndUser","broadcast","lastMessageNotDeleted","getLastVisibleUserMessageSentByRoomId","resetLastMessageById","decreaseMessageCountById","run","id","IPostMessageDeleted","__reify_async_result__","_reifyError","async"],"sources":["app/lib/server/functions/deleteMessage.ts"],"sourcesContent":["import { AppEvents, Apps } from '@rocket.chat/apps';\nimport { api, Message } from '@rocket.chat/core-services';\nimport type { AtLeast, IMessage, IUser } from '@rocket.chat/core-typings';\nimport { Messages, Rooms, Uploads, Users, ReadReceipts } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { canDeleteMessageAsync } from '../../../authorization/server/functions/canDeleteMessage';\nimport { FileUpload } from '../../../file-upload/server';\nimport { settings } from '../../../settings/server';\nimport { notifyOnRoomChangedById, notifyOnMessageChange } from '../lib/notifyListener';\n\nexport const deleteMessageValidatingPermission = async (message: AtLeast<IMessage, '_id'>, userId: IUser['_id']): Promise<void> => {\n\tif (!message?._id) {\n\t\tthrow new Meteor.Error('error-invalid-message', 'Invalid message');\n\t}\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user');\n\t}\n\n\tconst user = await Users.findOneById(userId);\n\tconst originalMessage = await Messages.findOneById(message._id);\n\n\tif (!originalMessage || !user || !(await canDeleteMessageAsync(userId, originalMessage))) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Not allowed');\n\t}\n\n\treturn deleteMessage(originalMessage, user);\n};\n\nexport async function deleteMessage(message: IMessage, user: IUser): Promise<void> {\n\tconst deletedMsg: IMessage | null = await Messages.findOneById(message._id);\n\tconst isThread = (deletedMsg?.tcount || 0) > 0;\n\tconst keepHistory = settings.get('Message_KeepHistory') || isThread;\n\tconst showDeletedStatus = settings.get('Message_ShowDeletedStatus') || isThread;\n\tconst bridges = Apps.self?.isLoaded() && Apps.getBridges();\n\n\tconst room = await Rooms.findOneById(message.rid, { projection: { lastMessage: 1, prid: 1, mid: 1, federated: 1 } });\n\n\tif (deletedMsg) {\n\t\tif (bridges) {\n\t\t\tconst prevent = await bridges.getListenerBridge().messageEvent(AppEvents.IPreMessageDeletePrevent, deletedMsg);\n\t\t\tif (prevent) {\n\t\t\t\tthrow new Meteor.Error('error-app-prevented-deleting', 'A Rocket.Chat App prevented the message deleting.');\n\t\t\t}\n\t\t}\n\n\t\tif (room) {\n\t\t\tawait Message.beforeDelete(deletedMsg, room);\n\t\t}\n\t}\n\n\tif (deletedMsg?.tmid) {\n\t\tawait Messages.decreaseReplyCountById(deletedMsg.tmid, -1);\n\t}\n\n\tconst files = (message.files || [message.file]).filter(Boolean); // Keep compatibility with old messages\n\n\tif (keepHistory) {\n\t\tif (showDeletedStatus) {\n\t\t\t// TODO is there a better way to tell TS \"IUser[username]\" is not undefined?\n\t\t\tawait Messages.cloneAndSaveAsHistoryById(message._id, user as Required<Pick<IUser, '_id' | 'username' | 'name'>>);\n\t\t} else {\n\t\t\tawait Messages.setHiddenById(message._id, true);\n\t\t}\n\n\t\tfor await (const file of files) {\n\t\t\tfile?._id && (await Uploads.updateOne({ _id: file._id }, { $set: { _hidden: true } }));\n\t\t}\n\t} else {\n\t\tif (!showDeletedStatus) {\n\t\t\tawait Messages.removeById(message._id);\n\t\t}\n\t\tawait ReadReceipts.removeByMessageId(message._id);\n\n\t\tfor await (const file of files) {\n\t\t\tfile?._id && (await FileUpload.getStore('Uploads').deleteById(file._id));\n\t\t}\n\t}\n\tif (showDeletedStatus) {\n\t\t// TODO is there a better way to tell TS \"IUser[username]\" is not undefined?\n\t\tawait Messages.setAsDeletedByIdAndUser(message._id, user as Required<Pick<IUser, '_id' | 'username' | 'name'>>);\n\t} else {\n\t\tvoid api.broadcast('notify.deleteMessage', message.rid, { _id: message._id });\n\t}\n\n\t// update last message\n\tif (settings.get('Store_Last_Message') && (!room?.lastMessage || room.lastMessage._id === message._id)) {\n\t\tconst lastMessageNotDeleted = await Messages.getLastVisibleUserMessageSentByRoomId(message.rid);\n\t\tawait Rooms.resetLastMessageById(message.rid, lastMessageNotDeleted, -1);\n\t} else {\n\t\t// decrease message count\n\t\tawait Rooms.decreaseMessageCountById(message.rid, 1);\n\t}\n\n\tawait callbacks.run('afterDeleteMessage', deletedMsg, room);\n\n\tvoid notifyOnRoomChangedById(message.rid);\n\n\tif (keepHistory || showDeletedStatus) {\n\t\tvoid notifyOnMessageChange({\n\t\t\tid: message._id,\n\t\t});\n\t}\n\n\tif (bridges && deletedMsg) {\n\t\tvoid bridges.getListenerBridge().messageEvent(AppEvents.IPostMessageDeleted, deletedMsg, user);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d0ee06d9f8cc0d920fff50adc7bc090f21900eaa"}
