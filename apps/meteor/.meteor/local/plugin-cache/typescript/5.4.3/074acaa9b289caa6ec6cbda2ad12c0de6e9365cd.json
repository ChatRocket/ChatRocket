{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/configuration/ldap.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/configuration/ldap.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/configuration/ldap.ts","inputSourceMap":{"version":3,"file":"ee/server/configuration/ldap.ts","sourceRoot":"","sources":["ee/server/configuration/ldap.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IImportUser, ILDAPEntry, IUser } from '@rocket.chat/core-typings';\nimport { cronJobs } from '@rocket.chat/cron';\nimport { License } from '@rocket.chat/license';\nimport { Settings } from '@rocket.chat/models';\nimport { isValidCron } from 'cron-validator';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../app/settings/server';\nimport { callbacks } from '../../../lib/callbacks';\nimport type { LDAPConnection } from '../../../server/lib/ldap/Connection';\nimport { logger } from '../../../server/lib/ldap/Logger';\nimport { LDAPEEManager } from '../lib/ldap/Manager';\nimport { LDAPEE } from '../sdk';\nimport { addSettings, ldapIntervalValuesToCronMap } from '../settings/ldap';\n\nMeteor.startup(async () => {\n\tawait License.onLicense('ldap-enterprise', async () => {\n\t\tawait addSettings();\n\n\t\t// Configure background sync cronjob\n\t\tfunction configureBackgroundSync(jobName: string, enableSetting: string, intervalSetting: string, cb: () => void): () => Promise<void> {\n\t\t\tlet lastSchedule: string;\n\t\t\treturn async function addCronJobDebounced(): Promise<void> {\n\t\t\t\tif (settings.get('LDAP_Enable') !== true || settings.get(enableSetting) !== true) {\n\t\t\t\t\tif (await cronJobs.has(jobName)) {\n\t\t\t\t\t\tlogger.info({ msg: 'Disabling LDAP Background Sync', jobName });\n\t\t\t\t\t\tawait cronJobs.remove(jobName);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst settingValue = settings.get<string>(intervalSetting);\n\t\t\t\tconst schedule =\n\t\t\t\t\tldapIntervalValuesToCronMap[settingValue] ??\n\t\t\t\t\t(isValidCron(settingValue) ? settingValue : ((await Settings.findOneById(intervalSetting))?.packageValue as string));\n\t\t\t\tif (schedule) {\n\t\t\t\t\tif (schedule !== lastSchedule && (await cronJobs.has(jobName))) {\n\t\t\t\t\t\tawait cronJobs.remove(jobName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlastSchedule = schedule;\n\t\t\t\t\tlogger.info({ msg: 'Enabling LDAP Background Sync', jobName });\n\n\t\t\t\t\tawait cronJobs.add(jobName, schedule, cb);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tconst addCronJob = configureBackgroundSync('LDAP_Sync', 'LDAP_Background_Sync', 'LDAP_Background_Sync_Interval', () => LDAPEE.sync());\n\t\tconst addAvatarCronJob = configureBackgroundSync(\n\t\t\t'LDAP_AvatarSync',\n\t\t\t'LDAP_Background_Sync_Avatars',\n\t\t\t'LDAP_Background_Sync_Avatars_Interval',\n\t\t\t() => LDAPEE.syncAvatars(),\n\t\t);\n\t\tconst addLogoutCronJob = configureBackgroundSync(\n\t\t\t'LDAP_AutoLogout',\n\t\t\t'LDAP_Sync_AutoLogout_Enabled',\n\t\t\t'LDAP_Sync_AutoLogout_Interval',\n\t\t\t() => LDAPEE.syncLogout(),\n\t\t);\n\n\t\tsettings.watchMultiple(['LDAP_Background_Sync', 'LDAP_Background_Sync_Interval'], addCronJob);\n\t\tsettings.watchMultiple(['LDAP_Background_Sync_Avatars', 'LDAP_Background_Sync_Avatars_Interval'], addAvatarCronJob);\n\t\tsettings.watchMultiple(['LDAP_Sync_AutoLogout_Enabled', 'LDAP_Sync_AutoLogout_Interval'], addLogoutCronJob);\n\n\t\tsettings.watch('LDAP_Enable', async () => {\n\t\t\tawait addCronJob();\n\t\t\tawait addAvatarCronJob();\n\t\t\tawait addLogoutCronJob();\n\t\t});\n\n\t\tsettings.watch<string>('LDAP_Groups_To_Rocket_Chat_Teams', (value) => {\n\t\t\ttry {\n\t\t\t\tLDAPEEManager.validateLDAPTeamsMappingChanges(value);\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error);\n\t\t\t}\n\t\t});\n\n\t\tcallbacks.add(\n\t\t\t'mapLDAPUserData',\n\t\t\t(userData: IImportUser, ldapUser?: ILDAPEntry) => {\n\t\t\t\tif (!ldapUser) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tLDAPEEManager.copyCustomFields(ldapUser, userData);\n\t\t\t\tLDAPEEManager.copyActiveState(ldapUser, userData);\n\t\t\t},\n\t\t\tcallbacks.priority.MEDIUM,\n\t\t\t'mapLDAPCustomFields',\n\t\t);\n\n\t\tcallbacks.add(\n\t\t\t'onLDAPLogin',\n\t\t\tasync ({ user, ldapUser, isNewUser }: { user: IUser; ldapUser: ILDAPEntry; isNewUser: boolean }, ldap?: LDAPConnection) => {\n\t\t\t\tif (!ldap) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait LDAPEEManager.advancedSyncForUser(ldap, user, isNewUser, ldapUser.dn);\n\t\t\t},\n\t\t\tcallbacks.priority.MEDIUM,\n\t\t\t'advancedLDAPSync',\n\t\t);\n\t});\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/configuration/ldap.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/configuration/ldap.ts","inputSourceMap":{"version":3,"file":"ee/server/configuration/ldap.ts","sourceRoot":"","sources":["ee/server/configuration/ldap.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IImportUser, ILDAPEntry, IUser } from '@rocket.chat/core-typings';\nimport { cronJobs } from '@rocket.chat/cron';\nimport { License } from '@rocket.chat/license';\nimport { Settings } from '@rocket.chat/models';\nimport { isValidCron } from 'cron-validator';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../app/settings/server';\nimport { callbacks } from '../../../lib/callbacks';\nimport type { LDAPConnection } from '../../../server/lib/ldap/Connection';\nimport { logger } from '../../../server/lib/ldap/Logger';\nimport { LDAPEEManager } from '../lib/ldap/Manager';\nimport { LDAPEE } from '../sdk';\nimport { addSettings, ldapIntervalValuesToCronMap } from '../settings/ldap';\n\nMeteor.startup(async () => {\n\tawait License.onLicense('ldap-enterprise', async () => {\n\t\tawait addSettings();\n\n\t\t// Configure background sync cronjob\n\t\tfunction configureBackgroundSync(jobName: string, enableSetting: string, intervalSetting: string, cb: () => void): () => Promise<void> {\n\t\t\tlet lastSchedule: string;\n\t\t\treturn async function addCronJobDebounced(): Promise<void> {\n\t\t\t\tif (settings.get('LDAP_Enable') !== true || settings.get(enableSetting) !== true) {\n\t\t\t\t\tif (await cronJobs.has(jobName)) {\n\t\t\t\t\t\tlogger.info({ msg: 'Disabling LDAP Background Sync', jobName });\n\t\t\t\t\t\tawait cronJobs.remove(jobName);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst settingValue = settings.get<string>(intervalSetting);\n\t\t\t\tconst schedule =\n\t\t\t\t\tldapIntervalValuesToCronMap[settingValue] ??\n\t\t\t\t\t(isValidCron(settingValue) ? settingValue : ((await Settings.findOneById(intervalSetting))?.packageValue as string));\n\t\t\t\tif (schedule) {\n\t\t\t\t\tif (schedule !== lastSchedule && (await cronJobs.has(jobName))) {\n\t\t\t\t\t\tawait cronJobs.remove(jobName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlastSchedule = schedule;\n\t\t\t\t\tlogger.info({ msg: 'Enabling LDAP Background Sync', jobName });\n\n\t\t\t\t\tawait cronJobs.add(jobName, schedule, cb);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tconst addCronJob = configureBackgroundSync('LDAP_Sync', 'LDAP_Background_Sync', 'LDAP_Background_Sync_Interval', () => LDAPEE.sync());\n\t\tconst addAvatarCronJob = configureBackgroundSync(\n\t\t\t'LDAP_AvatarSync',\n\t\t\t'LDAP_Background_Sync_Avatars',\n\t\t\t'LDAP_Background_Sync_Avatars_Interval',\n\t\t\t() => LDAPEE.syncAvatars(),\n\t\t);\n\t\tconst addLogoutCronJob = configureBackgroundSync(\n\t\t\t'LDAP_AutoLogout',\n\t\t\t'LDAP_Sync_AutoLogout_Enabled',\n\t\t\t'LDAP_Sync_AutoLogout_Interval',\n\t\t\t() => LDAPEE.syncLogout(),\n\t\t);\n\n\t\tsettings.watchMultiple(['LDAP_Background_Sync', 'LDAP_Background_Sync_Interval'], addCronJob);\n\t\tsettings.watchMultiple(['LDAP_Background_Sync_Avatars', 'LDAP_Background_Sync_Avatars_Interval'], addAvatarCronJob);\n\t\tsettings.watchMultiple(['LDAP_Sync_AutoLogout_Enabled', 'LDAP_Sync_AutoLogout_Interval'], addLogoutCronJob);\n\n\t\tsettings.watch('LDAP_Enable', async () => {\n\t\t\tawait addCronJob();\n\t\t\tawait addAvatarCronJob();\n\t\t\tawait addLogoutCronJob();\n\t\t});\n\n\t\tsettings.watch<string>('LDAP_Groups_To_Rocket_Chat_Teams', (value) => {\n\t\t\ttry {\n\t\t\t\tLDAPEEManager.validateLDAPTeamsMappingChanges(value);\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error);\n\t\t\t}\n\t\t});\n\n\t\tcallbacks.add(\n\t\t\t'mapLDAPUserData',\n\t\t\t(userData: IImportUser, ldapUser?: ILDAPEntry) => {\n\t\t\t\tif (!ldapUser) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tLDAPEEManager.copyCustomFields(ldapUser, userData);\n\t\t\t\tLDAPEEManager.copyActiveState(ldapUser, userData);\n\t\t\t},\n\t\t\tcallbacks.priority.MEDIUM,\n\t\t\t'mapLDAPCustomFields',\n\t\t);\n\n\t\tcallbacks.add(\n\t\t\t'onLDAPLogin',\n\t\t\tasync ({ user, ldapUser, isNewUser }: { user: IUser; ldapUser: ILDAPEntry; isNewUser: boolean }, ldap?: LDAPConnection) => {\n\t\t\t\tif (!ldap) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait LDAPEEManager.advancedSyncForUser(ldap, user, isNewUser, ldapUser.dn);\n\t\t\t},\n\t\t\tcallbacks.priority.MEDIUM,\n\t\t\t'advancedLDAPSync',\n\t\t);\n\t});\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let cronJobs;\n    module.link(\"@rocket.chat/cron\", {\n      cronJobs(v) {\n        cronJobs = v;\n      }\n    }, 0);\n    let License;\n    module.link(\"@rocket.chat/license\", {\n      License(v) {\n        License = v;\n      }\n    }, 1);\n    let Settings;\n    module.link(\"@rocket.chat/models\", {\n      Settings(v) {\n        Settings = v;\n      }\n    }, 2);\n    let isValidCron;\n    module.link(\"cron-validator\", {\n      isValidCron(v) {\n        isValidCron = v;\n      }\n    }, 3);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 4);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 5);\n    let callbacks;\n    module.link(\"../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 6);\n    let logger;\n    module.link(\"../../../server/lib/ldap/Logger\", {\n      logger(v) {\n        logger = v;\n      }\n    }, 7);\n    let LDAPEEManager;\n    module.link(\"../lib/ldap/Manager\", {\n      LDAPEEManager(v) {\n        LDAPEEManager = v;\n      }\n    }, 8);\n    let LDAPEE;\n    module.link(\"../sdk\", {\n      LDAPEE(v) {\n        LDAPEE = v;\n      }\n    }, 9);\n    let addSettings, ldapIntervalValuesToCronMap;\n    module.link(\"../settings/ldap\", {\n      addSettings(v) {\n        addSettings = v;\n      },\n      ldapIntervalValuesToCronMap(v) {\n        ldapIntervalValuesToCronMap = v;\n      }\n    }, 10);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.startup(async () => {\n      await License.onLicense('ldap-enterprise', async () => {\n        await addSettings();\n        // Configure background sync cronjob\n        function configureBackgroundSync(jobName, enableSetting, intervalSetting, cb) {\n          let lastSchedule;\n          return async function addCronJobDebounced() {\n            var _ldapIntervalValuesTo, _await$Settings$findO;\n            if (settings.get('LDAP_Enable') !== true || settings.get(enableSetting) !== true) {\n              if (await cronJobs.has(jobName)) {\n                logger.info({\n                  msg: 'Disabling LDAP Background Sync',\n                  jobName\n                });\n                await cronJobs.remove(jobName);\n              }\n              return;\n            }\n            const settingValue = settings.get(intervalSetting);\n            const schedule = (_ldapIntervalValuesTo = ldapIntervalValuesToCronMap[settingValue]) !== null && _ldapIntervalValuesTo !== void 0 ? _ldapIntervalValuesTo : isValidCron(settingValue) ? settingValue : (_await$Settings$findO = await Settings.findOneById(intervalSetting)) === null || _await$Settings$findO === void 0 ? void 0 : _await$Settings$findO.packageValue;\n            if (schedule) {\n              if (schedule !== lastSchedule && (await cronJobs.has(jobName))) {\n                await cronJobs.remove(jobName);\n              }\n              lastSchedule = schedule;\n              logger.info({\n                msg: 'Enabling LDAP Background Sync',\n                jobName\n              });\n              await cronJobs.add(jobName, schedule, cb);\n            }\n          };\n        }\n        const addCronJob = configureBackgroundSync('LDAP_Sync', 'LDAP_Background_Sync', 'LDAP_Background_Sync_Interval', () => LDAPEE.sync());\n        const addAvatarCronJob = configureBackgroundSync('LDAP_AvatarSync', 'LDAP_Background_Sync_Avatars', 'LDAP_Background_Sync_Avatars_Interval', () => LDAPEE.syncAvatars());\n        const addLogoutCronJob = configureBackgroundSync('LDAP_AutoLogout', 'LDAP_Sync_AutoLogout_Enabled', 'LDAP_Sync_AutoLogout_Interval', () => LDAPEE.syncLogout());\n        settings.watchMultiple(['LDAP_Background_Sync', 'LDAP_Background_Sync_Interval'], addCronJob);\n        settings.watchMultiple(['LDAP_Background_Sync_Avatars', 'LDAP_Background_Sync_Avatars_Interval'], addAvatarCronJob);\n        settings.watchMultiple(['LDAP_Sync_AutoLogout_Enabled', 'LDAP_Sync_AutoLogout_Interval'], addLogoutCronJob);\n        settings.watch('LDAP_Enable', async () => {\n          await addCronJob();\n          await addAvatarCronJob();\n          await addLogoutCronJob();\n        });\n        settings.watch('LDAP_Groups_To_Rocket_Chat_Teams', value => {\n          try {\n            LDAPEEManager.validateLDAPTeamsMappingChanges(value);\n          } catch (error) {\n            logger.error(error);\n          }\n        });\n        callbacks.add('mapLDAPUserData', (userData, ldapUser) => {\n          if (!ldapUser) {\n            return;\n          }\n          LDAPEEManager.copyCustomFields(ldapUser, userData);\n          LDAPEEManager.copyActiveState(ldapUser, userData);\n        }, callbacks.priority.MEDIUM, 'mapLDAPCustomFields');\n        callbacks.add('onLDAPLogin', async (_ref, ldap) => {\n          let {\n            user,\n            ldapUser,\n            isNewUser\n          } = _ref;\n          if (!ldap) {\n            return;\n          }\n          await LDAPEEManager.advancedSyncForUser(ldap, user, isNewUser, ldapUser.dn);\n        }, callbacks.priority.MEDIUM, 'advancedLDAPSync');\n      });\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["cronJobs","module","link","v","License","Settings","isValidCron","Meteor","settings","callbacks","logger","LDAPEEManager","LDAPEE","addSettings","ldapIntervalValuesToCronMap","__reifyWaitForDeps__","startup","onLicense","configureBackgroundSync","jobName","enableSetting","intervalSetting","cb","lastSchedule","addCronJobDebounced","_ldapIntervalValuesTo","_await$Settings$findO","get","has","info","msg","remove","settingValue","schedule","findOneById","packageValue","add","addCronJob","sync","addAvatarCronJob","syncAvatars","addLogoutCronJob","syncLogout","watchMultiple","watch","value","validateLDAPTeamsMappingChanges","error","userData","ldapUser","copyCustomFields","copyActiveState","priority","MEDIUM","_ref","ldap","user","isNewUser","advancedSyncForUser","dn","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/configuration/ldap.ts"],"sourcesContent":["import type { IImportUser, ILDAPEntry, IUser } from '@rocket.chat/core-typings';\nimport { cronJobs } from '@rocket.chat/cron';\nimport { License } from '@rocket.chat/license';\nimport { Settings } from '@rocket.chat/models';\nimport { isValidCron } from 'cron-validator';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../app/settings/server';\nimport { callbacks } from '../../../lib/callbacks';\nimport type { LDAPConnection } from '../../../server/lib/ldap/Connection';\nimport { logger } from '../../../server/lib/ldap/Logger';\nimport { LDAPEEManager } from '../lib/ldap/Manager';\nimport { LDAPEE } from '../sdk';\nimport { addSettings, ldapIntervalValuesToCronMap } from '../settings/ldap';\n\nMeteor.startup(async () => {\n\tawait License.onLicense('ldap-enterprise', async () => {\n\t\tawait addSettings();\n\n\t\t// Configure background sync cronjob\n\t\tfunction configureBackgroundSync(jobName: string, enableSetting: string, intervalSetting: string, cb: () => void): () => Promise<void> {\n\t\t\tlet lastSchedule: string;\n\t\t\treturn async function addCronJobDebounced(): Promise<void> {\n\t\t\t\tif (settings.get('LDAP_Enable') !== true || settings.get(enableSetting) !== true) {\n\t\t\t\t\tif (await cronJobs.has(jobName)) {\n\t\t\t\t\t\tlogger.info({ msg: 'Disabling LDAP Background Sync', jobName });\n\t\t\t\t\t\tawait cronJobs.remove(jobName);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst settingValue = settings.get<string>(intervalSetting);\n\t\t\t\tconst schedule =\n\t\t\t\t\tldapIntervalValuesToCronMap[settingValue] ??\n\t\t\t\t\t(isValidCron(settingValue) ? settingValue : ((await Settings.findOneById(intervalSetting))?.packageValue as string));\n\t\t\t\tif (schedule) {\n\t\t\t\t\tif (schedule !== lastSchedule && (await cronJobs.has(jobName))) {\n\t\t\t\t\t\tawait cronJobs.remove(jobName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlastSchedule = schedule;\n\t\t\t\t\tlogger.info({ msg: 'Enabling LDAP Background Sync', jobName });\n\n\t\t\t\t\tawait cronJobs.add(jobName, schedule, cb);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tconst addCronJob = configureBackgroundSync('LDAP_Sync', 'LDAP_Background_Sync', 'LDAP_Background_Sync_Interval', () => LDAPEE.sync());\n\t\tconst addAvatarCronJob = configureBackgroundSync(\n\t\t\t'LDAP_AvatarSync',\n\t\t\t'LDAP_Background_Sync_Avatars',\n\t\t\t'LDAP_Background_Sync_Avatars_Interval',\n\t\t\t() => LDAPEE.syncAvatars(),\n\t\t);\n\t\tconst addLogoutCronJob = configureBackgroundSync(\n\t\t\t'LDAP_AutoLogout',\n\t\t\t'LDAP_Sync_AutoLogout_Enabled',\n\t\t\t'LDAP_Sync_AutoLogout_Interval',\n\t\t\t() => LDAPEE.syncLogout(),\n\t\t);\n\n\t\tsettings.watchMultiple(['LDAP_Background_Sync', 'LDAP_Background_Sync_Interval'], addCronJob);\n\t\tsettings.watchMultiple(['LDAP_Background_Sync_Avatars', 'LDAP_Background_Sync_Avatars_Interval'], addAvatarCronJob);\n\t\tsettings.watchMultiple(['LDAP_Sync_AutoLogout_Enabled', 'LDAP_Sync_AutoLogout_Interval'], addLogoutCronJob);\n\n\t\tsettings.watch('LDAP_Enable', async () => {\n\t\t\tawait addCronJob();\n\t\t\tawait addAvatarCronJob();\n\t\t\tawait addLogoutCronJob();\n\t\t});\n\n\t\tsettings.watch<string>('LDAP_Groups_To_Rocket_Chat_Teams', (value) => {\n\t\t\ttry {\n\t\t\t\tLDAPEEManager.validateLDAPTeamsMappingChanges(value);\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error);\n\t\t\t}\n\t\t});\n\n\t\tcallbacks.add(\n\t\t\t'mapLDAPUserData',\n\t\t\t(userData: IImportUser, ldapUser?: ILDAPEntry) => {\n\t\t\t\tif (!ldapUser) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tLDAPEEManager.copyCustomFields(ldapUser, userData);\n\t\t\t\tLDAPEEManager.copyActiveState(ldapUser, userData);\n\t\t\t},\n\t\t\tcallbacks.priority.MEDIUM,\n\t\t\t'mapLDAPCustomFields',\n\t\t);\n\n\t\tcallbacks.add(\n\t\t\t'onLDAPLogin',\n\t\t\tasync ({ user, ldapUser, isNewUser }: { user: IUser; ldapUser: ILDAPEntry; isNewUser: boolean }, ldap?: LDAPConnection) => {\n\t\t\t\tif (!ldap) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait LDAPEEManager.advancedSyncForUser(ldap, user, isNewUser, ldapUser.dn);\n\t\t\t},\n\t\t\tcallbacks.priority.MEDIUM,\n\t\t\t'advancedLDAPSync',\n\t\t);\n\t});\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"074acaa9b289caa6ec6cbda2ad12c0de6e9365cd"}
