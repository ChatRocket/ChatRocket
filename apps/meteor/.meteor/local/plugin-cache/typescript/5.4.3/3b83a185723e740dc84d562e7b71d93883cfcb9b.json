{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer/server/methods/uploadImportFile.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/importer/server/methods/uploadImportFile.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer/server/methods/uploadImportFile.ts","inputSourceMap":{"version":3,"file":"app/importer/server/methods/uploadImportFile.ts","sourceRoot":"","sources":["app/importer/server/methods/uploadImportFile.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,4BAA4B,CAAC;AAGpD,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,SAAS,EAAE,MAAM,IAAI,CAAC;AAC/B,OAAO,EAAE,kBAAkB,EAAE,MAAM,uDAAuD,CAAC;AAC3F,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AACtD,OAAO,EAAE,YAAY,EAAE,MAAM,gCAAgC,CAAC;AAC9D,OAAO,EAAE,4BAA4B,EAAE,MAAM,kBAAkB,CAAC;AAEhE,MAAM,CAAC,MAAM,uBAAuB,GAAG,KAAK,EAC3C,MAAoB,EACpB,aAAqB,EACrB,WAAmB,EACnB,QAAgB,EAChB,WAAmB,EACH,EAAE;IAClB,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC5C,IAAI,CAAC,QAAQ,EAAE,CAAC;QACf,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,4BAA4B,EAAE,iBAAiB,WAAW,gCAAgC,EAAE,kBAAkB,CAAC,CAAC;IACxI,CAAC;IAED,MAAM,SAAS,GAAG,MAAM,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;IAEjF,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,8BAA8B;IAE3F,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IACxB,MAAM,OAAO,GAAG,GAAG,IAAI,CAAC,cAAc,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC;IACvJ,MAAM,WAAW,GAAG,GAAG,OAAO,IAAI,MAAM,IAAI,QAAQ,EAAE,CAAC;IAEvD,iEAAiE;IACjE,MAAM,QAAQ,CAAC,eAAe,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IAEzD,kCAAkC;IAClC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;IAClD,MAAM,UAAU,GAAG,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACvD,MAAM,WAAW,GAAG,4BAA4B,CAAC,iBAAiB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IAE7F,MAAM,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAC3C,IAAI,CAAC;YACJ,WAAW,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;gBAC1B,OAAO,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;YACH,WAAW,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAQ,EAAE,EAAE;gBACpC,MAAM,CAAC,CAAC,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;YAEH,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,MAAM,CAAC,KAAK,CAAC,CAAC;QACf,CAAC;IACF,CAAC,CAAC,CAAC;IAEH,MAAM,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;AACzD,CAAC,CAAC;AASF,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,gBAAgB,CAAC,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW;QACvE,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAE/B,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAClF,CAAC;QAED,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,EAAE,CAAC;YACvD,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,0BAA0B,EAAE,0BAA0B,EAAE,kBAAkB,CAAC,CAAC;QACpG,CAAC;QAED,MAAM,uBAAuB,CAAC,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;IAC1F,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { Import } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Importers } from '..';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { RocketChatFile } from '../../../file/server';\nimport { ProgressStep } from '../../lib/ImporterProgressStep';\nimport { RocketChatImportFileInstance } from '../startup/store';\n\nexport const executeUploadImportFile = async (\n\tuserId: IUser['_id'],\n\tbinaryContent: string,\n\tcontentType: string,\n\tfileName: string,\n\timporterKey: string,\n): Promise<void> => {\n\tconst importer = Importers.get(importerKey);\n\tif (!importer) {\n\t\tthrow new Meteor.Error('error-importer-not-defined', `The importer (${importerKey}) has no import class defined.`, 'uploadImportFile');\n\t}\n\n\tconst operation = await Import.newOperation(userId, importer.name, importer.key);\n\n\tconst instance = new importer.importer(importer, operation); // eslint-disable-line new-cap\n\n\tconst date = new Date();\n\tconst dateStr = `${date.getUTCFullYear()}${date.getUTCMonth()}${date.getUTCDate()}${date.getUTCHours()}${date.getUTCMinutes()}${date.getUTCSeconds()}`;\n\tconst newFileName = `${dateStr}_${userId}_${fileName}`;\n\n\t// Store the file name and content type on the imports collection\n\tawait instance.startFileUpload(newFileName, contentType);\n\n\t// Save the file on the File Store\n\tconst file = Buffer.from(binaryContent, 'base64');\n\tconst readStream = RocketChatFile.bufferToStream(file);\n\tconst writeStream = RocketChatImportFileInstance.createWriteStream(newFileName, contentType);\n\n\tawait new Promise<void>((resolve, reject) => {\n\t\ttry {\n\t\t\twriteStream.on('end', () => {\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\twriteStream.on('error', (e: Error) => {\n\t\t\t\treject(e);\n\t\t\t});\n\n\t\t\treadStream.pipe(writeStream);\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t}\n\t});\n\n\tawait instance.updateProgress(ProgressStep.FILE_LOADED);\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tuploadImportFile(binaryContent: string, contentType: string, fileName: string, importerKey: string): void;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync uploadImportFile(binaryContent, contentType, fileName, importerKey) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', 'uploadImportFile');\n\t\t}\n\n\t\tif (!(await hasPermissionAsync(userId, 'run-import'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', 'uploadImportFile');\n\t\t}\n\n\t\tawait executeUploadImportFile(userId, binaryContent, contentType, fileName, importerKey);\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer/server/methods/uploadImportFile.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/importer/server/methods/uploadImportFile.ts","inputSourceMap":{"version":3,"file":"app/importer/server/methods/uploadImportFile.ts","sourceRoot":"","sources":["app/importer/server/methods/uploadImportFile.ts"],"names":[],"mappings":"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","sourcesContent":["import { Import } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Importers } from '..';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { RocketChatFile } from '../../../file/server';\nimport { ProgressStep } from '../../lib/ImporterProgressStep';\nimport { RocketChatImportFileInstance } from '../startup/store';\n\nexport const executeUploadImportFile = async (\n\tuserId: IUser['_id'],\n\tbinaryContent: string,\n\tcontentType: string,\n\tfileName: string,\n\timporterKey: string,\n): Promise<void> => {\n\tconst importer = Importers.get(importerKey);\n\tif (!importer) {\n\t\tthrow new Meteor.Error('error-importer-not-defined', `The importer (${importerKey}) has no import class defined.`, 'uploadImportFile');\n\t}\n\n\tconst operation = await Import.newOperation(userId, importer.name, importer.key);\n\n\tconst instance = new importer.importer(importer, operation); // eslint-disable-line new-cap\n\n\tconst date = new Date();\n\tconst dateStr = `${date.getUTCFullYear()}${date.getUTCMonth()}${date.getUTCDate()}${date.getUTCHours()}${date.getUTCMinutes()}${date.getUTCSeconds()}`;\n\tconst newFileName = `${dateStr}_${userId}_${fileName}`;\n\n\t// Store the file name and content type on the imports collection\n\tawait instance.startFileUpload(newFileName, contentType);\n\n\t// Save the file on the File Store\n\tconst file = Buffer.from(binaryContent, 'base64');\n\tconst readStream = RocketChatFile.bufferToStream(file);\n\tconst writeStream = RocketChatImportFileInstance.createWriteStream(newFileName, contentType);\n\n\tawait new Promise<void>((resolve, reject) => {\n\t\ttry {\n\t\t\twriteStream.on('end', () => {\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\twriteStream.on('error', (e: Error) => {\n\t\t\t\treject(e);\n\t\t\t});\n\n\t\t\treadStream.pipe(writeStream);\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t}\n\t});\n\n\tawait instance.updateProgress(ProgressStep.FILE_LOADED);\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tuploadImportFile(binaryContent: string, contentType: string, fileName: string, importerKey: string): void;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync uploadImportFile(binaryContent, contentType, fileName, importerKey) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', 'uploadImportFile');\n\t\t}\n\n\t\tif (!(await hasPermissionAsync(userId, 'run-import'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', 'uploadImportFile');\n\t\t}\n\n\t\tawait executeUploadImportFile(userId, binaryContent, contentType, fileName, importerKey);\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      executeUploadImportFile: () => executeUploadImportFile\n    });\n    let Import;\n    module.link(\"@rocket.chat/core-services\", {\n      Import(v) {\n        Import = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let Importers;\n    module.link(\"..\", {\n      Importers(v) {\n        Importers = v;\n      }\n    }, 2);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 3);\n    let RocketChatFile;\n    module.link(\"../../../file/server\", {\n      RocketChatFile(v) {\n        RocketChatFile = v;\n      }\n    }, 4);\n    let ProgressStep;\n    module.link(\"../../lib/ImporterProgressStep\", {\n      ProgressStep(v) {\n        ProgressStep = v;\n      }\n    }, 5);\n    let RocketChatImportFileInstance;\n    module.link(\"../startup/store\", {\n      RocketChatImportFileInstance(v) {\n        RocketChatImportFileInstance = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const executeUploadImportFile = async (userId, binaryContent, contentType, fileName, importerKey) => {\n      const importer = Importers.get(importerKey);\n      if (!importer) {\n        throw new Meteor.Error('error-importer-not-defined', \"The importer (\".concat(importerKey, \") has no import class defined.\"), 'uploadImportFile');\n      }\n      const operation = await Import.newOperation(userId, importer.name, importer.key);\n      const instance = new importer.importer(importer, operation); // eslint-disable-line new-cap\n      const date = new Date();\n      const dateStr = \"\".concat(date.getUTCFullYear()).concat(date.getUTCMonth()).concat(date.getUTCDate()).concat(date.getUTCHours()).concat(date.getUTCMinutes()).concat(date.getUTCSeconds());\n      const newFileName = \"\".concat(dateStr, \"_\").concat(userId, \"_\").concat(fileName);\n      // Store the file name and content type on the imports collection\n      await instance.startFileUpload(newFileName, contentType);\n      // Save the file on the File Store\n      const file = Buffer.from(binaryContent, 'base64');\n      const readStream = RocketChatFile.bufferToStream(file);\n      const writeStream = RocketChatImportFileInstance.createWriteStream(newFileName, contentType);\n      await new Promise((resolve, reject) => {\n        try {\n          writeStream.on('end', () => {\n            resolve();\n          });\n          writeStream.on('error', e => {\n            reject(e);\n          });\n          readStream.pipe(writeStream);\n        } catch (error) {\n          reject(error);\n        }\n      });\n      await instance.updateProgress(ProgressStep.FILE_LOADED);\n    };\n    Meteor.methods({\n      async uploadImportFile(binaryContent, contentType, fileName, importerKey) {\n        const userId = Meteor.userId();\n        if (!userId) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', 'uploadImportFile');\n        }\n        if (!(await hasPermissionAsync(userId, 'run-import'))) {\n          throw new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', 'uploadImportFile');\n        }\n        await executeUploadImportFile(userId, binaryContent, contentType, fileName, importerKey);\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","executeUploadImportFile","Import","link","v","Meteor","Importers","hasPermissionAsync","RocketChatFile","ProgressStep","RocketChatImportFileInstance","__reifyWaitForDeps__","userId","binaryContent","contentType","fileName","importerKey","importer","get","Error","concat","operation","newOperation","name","key","instance","date","Date","dateStr","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","newFileName","startFileUpload","file","Buffer","from","readStream","bufferToStream","writeStream","createWriteStream","Promise","resolve","reject","on","e","pipe","error","updateProgress","FILE_LOADED","methods","uploadImportFile","__reify_async_result__","_reifyError","self","async"],"sources":["app/importer/server/methods/uploadImportFile.ts"],"sourcesContent":["import { Import } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Importers } from '..';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { RocketChatFile } from '../../../file/server';\nimport { ProgressStep } from '../../lib/ImporterProgressStep';\nimport { RocketChatImportFileInstance } from '../startup/store';\n\nexport const executeUploadImportFile = async (\n\tuserId: IUser['_id'],\n\tbinaryContent: string,\n\tcontentType: string,\n\tfileName: string,\n\timporterKey: string,\n): Promise<void> => {\n\tconst importer = Importers.get(importerKey);\n\tif (!importer) {\n\t\tthrow new Meteor.Error('error-importer-not-defined', `The importer (${importerKey}) has no import class defined.`, 'uploadImportFile');\n\t}\n\n\tconst operation = await Import.newOperation(userId, importer.name, importer.key);\n\n\tconst instance = new importer.importer(importer, operation); // eslint-disable-line new-cap\n\n\tconst date = new Date();\n\tconst dateStr = `${date.getUTCFullYear()}${date.getUTCMonth()}${date.getUTCDate()}${date.getUTCHours()}${date.getUTCMinutes()}${date.getUTCSeconds()}`;\n\tconst newFileName = `${dateStr}_${userId}_${fileName}`;\n\n\t// Store the file name and content type on the imports collection\n\tawait instance.startFileUpload(newFileName, contentType);\n\n\t// Save the file on the File Store\n\tconst file = Buffer.from(binaryContent, 'base64');\n\tconst readStream = RocketChatFile.bufferToStream(file);\n\tconst writeStream = RocketChatImportFileInstance.createWriteStream(newFileName, contentType);\n\n\tawait new Promise<void>((resolve, reject) => {\n\t\ttry {\n\t\t\twriteStream.on('end', () => {\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\twriteStream.on('error', (e: Error) => {\n\t\t\t\treject(e);\n\t\t\t});\n\n\t\t\treadStream.pipe(writeStream);\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t}\n\t});\n\n\tawait instance.updateProgress(ProgressStep.FILE_LOADED);\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tuploadImportFile(binaryContent: string, contentType: string, fileName: string, importerKey: string): void;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync uploadImportFile(binaryContent, contentType, fileName, importerKey) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', 'uploadImportFile');\n\t\t}\n\n\t\tif (!(await hasPermissionAsync(userId, 'run-import'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', 'uploadImportFile');\n\t\t}\n\n\t\tawait executeUploadImportFile(userId, binaryContent, contentType, fileName, importerKey);\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"3b83a185723e740dc84d562e7b71d93883cfcb9b"}
