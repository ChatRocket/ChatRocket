{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/useUserInfoQuery.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/hooks/useUserInfoQuery.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/useUserInfoQuery.ts","inputSourceMap":{"version":3,"file":"client/hooks/useUserInfoQuery.ts","sourceRoot":"","sources":["client/hooks/useUserInfoQuery.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAOjD,8GAA8G;AAC9G,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,MAA0B,EAAE,UAAgC,EAAE,gBAAgB,EAAE,IAAI,EAAE,EAAE,EAAE;IAC1H,MAAM,WAAW,GAAG,WAAW,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;IACzD,OAAO,QAAQ,CAAC,CAAC,YAAY,EAAE,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,EAAE,GAAG,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;AACpF,CAAC,CAAC","sourcesContent":["import type { UsersInfoParamsGet } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\n\ntype UserInfoQueryOptions = {\n\tenabled?: boolean;\n\tkeepPreviousData?: boolean;\n};\n\n// a hook using tanstack useQuery and useEndpoint that fetches user information from the `users.info` endpoint\nexport const useUserInfoQuery = (params: UsersInfoParamsGet, options: UserInfoQueryOptions = { keepPreviousData: true }) => {\n\tconst getUserInfo = useEndpoint('GET', '/v1/users.info');\n\treturn useQuery(['users.info', params], () => getUserInfo({ ...params }), options);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/useUserInfoQuery.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/hooks/useUserInfoQuery.ts","inputSourceMap":{"version":3,"file":"client/hooks/useUserInfoQuery.ts","sourceRoot":"","sources":["client/hooks/useUserInfoQuery.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAOjD,8GAA8G;AAC9G,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,MAA0B,EAAE,UAAgC,EAAE,gBAAgB,EAAE,IAAI,EAAE,EAAE,EAAE;IAC1H,MAAM,WAAW,GAAG,WAAW,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;IACzD,OAAO,QAAQ,CAAC,CAAC,YAAY,EAAE,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,EAAE,GAAG,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;AACpF,CAAC,CAAC","sourcesContent":["import type { UsersInfoParamsGet } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\n\ntype UserInfoQueryOptions = {\n\tenabled?: boolean;\n\tkeepPreviousData?: boolean;\n};\n\n// a hook using tanstack useQuery and useEndpoint that fetches user information from the `users.info` endpoint\nexport const useUserInfoQuery = (params: UsersInfoParamsGet, options: UserInfoQueryOptions = { keepPreviousData: true }) => {\n\tconst getUserInfo = useEndpoint('GET', '/v1/users.info');\n\treturn useQuery(['users.info', params], () => getUserInfo({ ...params }), options);\n};\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  useUserInfoQuery: () => useUserInfoQuery\n});\nlet useEndpoint;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n}, 0);\nlet useQuery;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery(v) {\n    useQuery = v;\n  }\n}, 1);\nconst useUserInfoQuery = function (params) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    keepPreviousData: true\n  };\n  const getUserInfo = useEndpoint('GET', '/v1/users.info');\n  return useQuery(['users.info', params], () => getUserInfo(_objectSpread({}, params)), options);\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","useUserInfoQuery","useEndpoint","useQuery","params","options","arguments","length","undefined","keepPreviousData","getUserInfo"],"sources":["client/hooks/useUserInfoQuery.ts"],"sourcesContent":["import type { UsersInfoParamsGet } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\n\ntype UserInfoQueryOptions = {\n\tenabled?: boolean;\n\tkeepPreviousData?: boolean;\n};\n\n// a hook using tanstack useQuery and useEndpoint that fetches user information from the `users.info` endpoint\nexport const useUserInfoQuery = (params: UsersInfoParamsGet, options: UserInfoQueryOptions = { keepPreviousData: true }) => {\n\tconst getUserInfo = useEndpoint('GET', '/v1/users.info');\n\treturn useQuery(['users.info', params], () => getUserInfo({ ...params }), options);\n};\n"],"mappings":"AACA,IAAAA,aAAS;AAAAC,MAAa,CAAAC,IAAM,uCAA2B;EAAAC,QAAAC,CAAA;IAAAJ,aAAA,GAAAI,CAAA;EAAA;AAAA;AAAvDH,MAAA,CAAOI,MAAE;EAAAC,gBAAmB,EAAAA,CAAA,KAAAA;AAAA,EAA0B;AAAC,IAAAC,WAAA;AAAAN,MAAA,CAAAC,IAAA;EAAAK,YAAAH,CAAA;IAAAG,WAAA,GAAAH,CAAA;EAAA;AAAA;AAAA,IAAAI,QAAA;AAAAP,MAAA,CAAAC,IAAA;EAAAM,SAAAJ,CAAA;IAAAI,QAAA,GAAAJ,CAAA;EAAA;AAAA;AAShD,MAAME,gBAAgB,GAAG,SAAAA,CAACG,MAA0B,EAAgE;EAAA,IAA9DC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAgC;IAAEG,gBAAgB,EAAE;EAAI,CAAE;EACtH,MAAMC,WAAW,GAAGR,WAAW,CAAC,KAAK,EAAE,gBAAgB,CAAC;EACxD,OAAOC,QAAQ,CAAC,CAAC,YAAY,EAAEC,MAAM,CAAC,EAAE,MAAMM,WAAW,CAAAf,aAAA,KAAMS,MAAM,CAAE,CAAC,EAAEC,OAAO,CAAC;AACnF,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f102c5d70c95d95e51d19183c88cd55b3a501626"}
