{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerGrid/WebdavFilePickerGrid.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerGrid/WebdavFilePickerGrid.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerGrid/WebdavFilePickerGrid.tsx","inputSourceMap":{"version":3,"file":"client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerGrid/WebdavFilePickerGrid.tsx","sourceRoot":"","sources":["client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerGrid/WebdavFilePickerGrid.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,GAAG,EAAE,MAAM,wBAAwB,CAAC;AAC7C,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAErE,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,gBAAgB,MAAM,4CAA4C,CAAC;AAC1E,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AACzD,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAQlE,MAAM,oBAAoB,GAAG,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,SAAS,EAA6B,EAAgB,EAAE;IACjH,MAAM,UAAU,GAAG,GAAG,CAAA;;uBAEA,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC;;;EAGvD,CAAC;IAEF,OAAO,CACN,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAClC;GAAA,CAAC,SAAS;YACT,KAAK,CAAC,CAAC,CAAC;iBACN,IAAI,CAAC,EAAE,CAAC;iBACR,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAClB,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAC1C;OAAA,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EACpD;MAAA,EAAE,wBAAwB,CAAC,CAC3B,CAAC,CACJ;GAAA,CAAC,CAAC,SAAS;YACV,WAAW,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,KAAK,EAAE,EAAE;gBACrC,MAAM,EAAE,IAAI,EAAE,GAAG,eAAe,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;gBAExF,OAAO,CACN,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,GAAS,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CACzG;OAAA,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EACpC;OAAA,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,GAAG,CACnD;MAAA,EAAE,wBAAwB,CAAC,CAC3B,CAAC;YACH,CAAC,CAAC,CACH;GAAA,CAAC,CAAC,SAAS,IAAI,WAAW,EAAE,MAAM,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,AAAD,EAAG,CACjE;EAAA,EAAE,GAAG,CAAC,CACN,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,oBAAoB,CAAC","sourcesContent":["import type { IWebdavNode } from '@rocket.chat/core-typings';\nimport { css } from '@rocket.chat/css-in-js';\nimport { Box, Icon, Skeleton, Palette } from '@rocket.chat/fuselage';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport GenericNoResults from '../../../../../components/GenericNoResults';\nimport { getNodeIconType } from '../lib/getNodeIconType';\nimport WebdavFilePickerGridItem from './WebdavFilePickerGridItem';\n\ntype WebdavFilePickerGridProps = {\n\twebdavNodes: IWebdavNode[];\n\tonNodeClick: (file: IWebdavNode) => void;\n\tisLoading: boolean;\n};\n\nconst WebdavFilePickerGrid = ({ webdavNodes, onNodeClick, isLoading }: WebdavFilePickerGridProps): ReactElement => {\n\tconst hoverStyle = css`\n\t\t&:hover {\n\t\t\tbackground-color: ${Palette.surface['surface-neutral']};\n\t\t\tcursor: pointer;\n\t\t}\n\t`;\n\n\treturn (\n\t\t<Box display='flex' flexWrap='wrap'>\n\t\t\t{isLoading &&\n\t\t\t\tArray(6)\n\t\t\t\t\t.fill('')\n\t\t\t\t\t.map((_, index) => (\n\t\t\t\t\t\t<WebdavFilePickerGridItem p={4} key={index}>\n\t\t\t\t\t\t\t<Skeleton variant='rect' width='full' height='full' />\n\t\t\t\t\t\t</WebdavFilePickerGridItem>\n\t\t\t\t\t))}\n\t\t\t{!isLoading &&\n\t\t\t\twebdavNodes.map((webdavNode, index) => {\n\t\t\t\t\tconst { icon } = getNodeIconType(webdavNode.basename, webdavNode.type, webdavNode.mime);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<WebdavFilePickerGridItem key={index} className={hoverStyle} onClick={(): void => onNodeClick(webdavNode)}>\n\t\t\t\t\t\t\t<Icon mie={4} size='x72' name={icon} />\n\t\t\t\t\t\t\t<Box textAlign='center'>{webdavNode.basename}</Box>\n\t\t\t\t\t\t</WebdavFilePickerGridItem>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t{!isLoading && webdavNodes?.length === 0 && <GenericNoResults />}\n\t\t</Box>\n\t);\n};\n\nexport default WebdavFilePickerGrid;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerGrid/WebdavFilePickerGrid.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerGrid/WebdavFilePickerGrid.tsx","inputSourceMap":{"version":3,"file":"client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerGrid/WebdavFilePickerGrid.tsx","sourceRoot":"","sources":["client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerGrid/WebdavFilePickerGrid.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,GAAG,EAAE,MAAM,wBAAwB,CAAC;AAC7C,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAErE,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,gBAAgB,MAAM,4CAA4C,CAAC;AAC1E,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AACzD,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAQlE,MAAM,oBAAoB,GAAG,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,SAAS,EAA6B,EAAgB,EAAE;IACjH,MAAM,UAAU,GAAG,GAAG,CAAA;;uBAEA,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC;;;EAGvD,CAAC;IAEF,OAAO,CACN,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAClC;GAAA,CAAC,SAAS;YACT,KAAK,CAAC,CAAC,CAAC;iBACN,IAAI,CAAC,EAAE,CAAC;iBACR,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAClB,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAC1C;OAAA,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EACpD;MAAA,EAAE,wBAAwB,CAAC,CAC3B,CAAC,CACJ;GAAA,CAAC,CAAC,SAAS;YACV,WAAW,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,KAAK,EAAE,EAAE;gBACrC,MAAM,EAAE,IAAI,EAAE,GAAG,eAAe,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;gBAExF,OAAO,CACN,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,GAAS,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CACzG;OAAA,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EACpC;OAAA,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,GAAG,CACnD;MAAA,EAAE,wBAAwB,CAAC,CAC3B,CAAC;YACH,CAAC,CAAC,CACH;GAAA,CAAC,CAAC,SAAS,IAAI,WAAW,EAAE,MAAM,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,AAAD,EAAG,CACjE;EAAA,EAAE,GAAG,CAAC,CACN,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,oBAAoB,CAAC","sourcesContent":["import type { IWebdavNode } from '@rocket.chat/core-typings';\nimport { css } from '@rocket.chat/css-in-js';\nimport { Box, Icon, Skeleton, Palette } from '@rocket.chat/fuselage';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport GenericNoResults from '../../../../../components/GenericNoResults';\nimport { getNodeIconType } from '../lib/getNodeIconType';\nimport WebdavFilePickerGridItem from './WebdavFilePickerGridItem';\n\ntype WebdavFilePickerGridProps = {\n\twebdavNodes: IWebdavNode[];\n\tonNodeClick: (file: IWebdavNode) => void;\n\tisLoading: boolean;\n};\n\nconst WebdavFilePickerGrid = ({ webdavNodes, onNodeClick, isLoading }: WebdavFilePickerGridProps): ReactElement => {\n\tconst hoverStyle = css`\n\t\t&:hover {\n\t\t\tbackground-color: ${Palette.surface['surface-neutral']};\n\t\t\tcursor: pointer;\n\t\t}\n\t`;\n\n\treturn (\n\t\t<Box display='flex' flexWrap='wrap'>\n\t\t\t{isLoading &&\n\t\t\t\tArray(6)\n\t\t\t\t\t.fill('')\n\t\t\t\t\t.map((_, index) => (\n\t\t\t\t\t\t<WebdavFilePickerGridItem p={4} key={index}>\n\t\t\t\t\t\t\t<Skeleton variant='rect' width='full' height='full' />\n\t\t\t\t\t\t</WebdavFilePickerGridItem>\n\t\t\t\t\t))}\n\t\t\t{!isLoading &&\n\t\t\t\twebdavNodes.map((webdavNode, index) => {\n\t\t\t\t\tconst { icon } = getNodeIconType(webdavNode.basename, webdavNode.type, webdavNode.mime);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<WebdavFilePickerGridItem key={index} className={hoverStyle} onClick={(): void => onNodeClick(webdavNode)}>\n\t\t\t\t\t\t\t<Icon mie={4} size='x72' name={icon} />\n\t\t\t\t\t\t\t<Box textAlign='center'>{webdavNode.basename}</Box>\n\t\t\t\t\t\t</WebdavFilePickerGridItem>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t{!isLoading && webdavNodes?.length === 0 && <GenericNoResults />}\n\t\t</Box>\n\t);\n};\n\nexport default WebdavFilePickerGrid;\n"]}}},"code":"var _templateObject;\nlet _taggedTemplateLiteral;\nmodule.link(\"@babel/runtime/helpers/taggedTemplateLiteral\", {\n  default(v) {\n    _taggedTemplateLiteral = v;\n  }\n}, 0);\nlet css;\nmodule.link(\"@rocket.chat/css-in-js\", {\n  css(v) {\n    css = v;\n  }\n}, 0);\nlet Box, Icon, Skeleton, Palette;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Box(v) {\n    Box = v;\n  },\n  Icon(v) {\n    Icon = v;\n  },\n  Skeleton(v) {\n    Skeleton = v;\n  },\n  Palette(v) {\n    Palette = v;\n  }\n}, 1);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n}, 2);\nlet GenericNoResults;\nmodule.link(\"../../../../../components/GenericNoResults\", {\n  default(v) {\n    GenericNoResults = v;\n  }\n}, 3);\nlet getNodeIconType;\nmodule.link(\"../lib/getNodeIconType\", {\n  getNodeIconType(v) {\n    getNodeIconType = v;\n  }\n}, 4);\nlet WebdavFilePickerGridItem;\nmodule.link(\"./WebdavFilePickerGridItem\", {\n  default(v) {\n    WebdavFilePickerGridItem = v;\n  }\n}, 5);\nconst WebdavFilePickerGrid = _ref => {\n  let {\n    webdavNodes,\n    onNodeClick,\n    isLoading\n  } = _ref;\n  const hoverStyle = css(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n\\t\\t&:hover {\\n\\t\\t\\tbackground-color: \", \";\\n\\t\\t\\tcursor: pointer;\\n\\t\\t}\\n\\t\"])), Palette.surface['surface-neutral']);\n  return /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  }, isLoading && Array(6).fill('').map((_, index) => /*#__PURE__*/React.createElement(WebdavFilePickerGridItem, {\n    p: 4,\n    key: index\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    variant: \"rect\",\n    width: \"full\",\n    height: \"full\"\n  }))), !isLoading && webdavNodes.map((webdavNode, index) => {\n    const {\n      icon\n    } = getNodeIconType(webdavNode.basename, webdavNode.type, webdavNode.mime);\n    return /*#__PURE__*/React.createElement(WebdavFilePickerGridItem, {\n      key: index,\n      className: hoverStyle,\n      onClick: () => onNodeClick(webdavNode)\n    }, /*#__PURE__*/React.createElement(Icon, {\n      mie: 4,\n      size: \"x72\",\n      name: icon\n    }), /*#__PURE__*/React.createElement(Box, {\n      textAlign: \"center\"\n    }, webdavNode.basename));\n  }), !isLoading && (webdavNodes === null || webdavNodes === void 0 ? void 0 : webdavNodes.length) === 0 && /*#__PURE__*/React.createElement(GenericNoResults, null));\n};\nmodule.exportDefault(WebdavFilePickerGrid);","map":{"version":3,"names":["_taggedTemplateLiteral","module","link","default","v","css","Box","Icon","Skeleton","Palette","React","GenericNoResults","getNodeIconType","WebdavFilePickerGridItem","WebdavFilePickerGrid","_ref","webdavNodes","onNodeClick","isLoading","hoverStyle","_templateObject","surface","createElement","display","flexWrap","Array","fill","map","_","index","p","key","variant","width","height","webdavNode","icon","basename","type","mime","className","onClick","mie","size","name","textAlign","length","exportDefault"],"sources":["client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerGrid/WebdavFilePickerGrid.tsx"],"sourcesContent":["import type { IWebdavNode } from '@rocket.chat/core-typings';\nimport { css } from '@rocket.chat/css-in-js';\nimport { Box, Icon, Skeleton, Palette } from '@rocket.chat/fuselage';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport GenericNoResults from '../../../../../components/GenericNoResults';\nimport { getNodeIconType } from '../lib/getNodeIconType';\nimport WebdavFilePickerGridItem from './WebdavFilePickerGridItem';\n\ntype WebdavFilePickerGridProps = {\n\twebdavNodes: IWebdavNode[];\n\tonNodeClick: (file: IWebdavNode) => void;\n\tisLoading: boolean;\n};\n\nconst WebdavFilePickerGrid = ({ webdavNodes, onNodeClick, isLoading }: WebdavFilePickerGridProps): ReactElement => {\n\tconst hoverStyle = css`\n\t\t&:hover {\n\t\t\tbackground-color: ${Palette.surface['surface-neutral']};\n\t\t\tcursor: pointer;\n\t\t}\n\t`;\n\n\treturn (\n\t\t<Box display='flex' flexWrap='wrap'>\n\t\t\t{isLoading &&\n\t\t\t\tArray(6)\n\t\t\t\t\t.fill('')\n\t\t\t\t\t.map((_, index) => (\n\t\t\t\t\t\t<WebdavFilePickerGridItem p={4} key={index}>\n\t\t\t\t\t\t\t<Skeleton variant='rect' width='full' height='full' />\n\t\t\t\t\t\t</WebdavFilePickerGridItem>\n\t\t\t\t\t))}\n\t\t\t{!isLoading &&\n\t\t\t\twebdavNodes.map((webdavNode, index) => {\n\t\t\t\t\tconst { icon } = getNodeIconType(webdavNode.basename, webdavNode.type, webdavNode.mime);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<WebdavFilePickerGridItem key={index} className={hoverStyle} onClick={(): void => onNodeClick(webdavNode)}>\n\t\t\t\t\t\t\t<Icon mie={4} size='x72' name={icon} />\n\t\t\t\t\t\t\t<Box textAlign='center'>{webdavNode.basename}</Box>\n\t\t\t\t\t\t</WebdavFilePickerGridItem>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t{!isLoading && webdavNodes?.length === 0 && <GenericNoResults />}\n\t\t</Box>\n\t);\n};\n\nexport default WebdavFilePickerGrid;\n"],"mappings":";AACA,IAAAA,sBAAoB;AAAAC,MAAA,CAAAC,IAAA,+CAAyB;EAAAC,QAAAC,CAAA;IAAAJ,sBAAA,GAAAI,CAAA;EAAA;AAAA;AAA7C,IAAAC,GAAO;AAAAJ,MAAO,CAAAC,IAAA,CAAM,wBAAwB,EAAC;EAAAG,IAAAD,CAAA;IAAAC,GAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,GAAA,EAAAC,IAAA,EAAAC,QAAA,EAAAC,OAAA;AAAAR,MAAA,CAAAC,IAAA;EAAAI,IAAAF,CAAA;IAAAE,GAAA,GAAAF,CAAA;EAAA;EAAAG,KAAAH,CAAA;IAAAG,IAAA,GAAAH,CAAA;EAAA;EAAAI,SAAAJ,CAAA;IAAAI,QAAA,GAAAJ,CAAA;EAAA;EAAAK,QAAAL,CAAA;IAAAK,OAAA,GAAAL,CAAA;EAAA;AAAA;AAAA,IAAAM,KAAA;AAAAT,MAAA,CAAAC,IAAA;EAAAC,QAAAC,CAAA;IAAAM,KAAA,GAAAN,CAAA;EAAA;AAAA;AAAA,IAAAO,gBAAA;AAAAV,MAAA,CAAAC,IAAA;EAAAC,QAAAC,CAAA;IAAAO,gBAAA,GAAAP,CAAA;EAAA;AAAA;AAAA,IAAAQ,eAAA;AAAAX,MAAA,CAAAC,IAAA;EAAAU,gBAAAR,CAAA;IAAAQ,eAAA,GAAAR,CAAA;EAAA;AAAA;AAAA,IAAAS,wBAAA;AAAAZ,MAAA,CAAAC,IAAA;EAAAC,QAAAC,CAAA;IAAAS,wBAAA,GAAAT,CAAA;EAAA;AAAA;AAe7C,MAAMU,oBAAoB,GAAGC,IAAA,IAAqF;EAAA,IAApF;IAAEC,WAAW;IAAEC,WAAW;IAAEC;EAAS,CAA6B,GAAAH,IAAA;EAC/F,MAAMI,UAAU,GAAGd,GAAG,CAAAe,eAAA,KAAAA,eAAA,GAAApB,sBAAA,0FAEAS,OAAO,CAACY,OAAO,CAAC,iBAAiB,CAAC,CAGvD;EAED,oBACCX,KAAA,CAAAY,aAAA,CAAChB,GAAG;IAACiB,OAAO,EAAC,MAAM;IAACC,QAAQ,EAAC;EAAM,GACjCN,SAAS,IACTO,KAAK,CAAC,CAAC,CAAC,CACNC,IAAI,CAAC,EAAE,CAAC,CACRC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACbnB,KAAA,CAAAY,aAAA,CAACT,wBAAwB;IAACiB,CAAC,EAAE,CAAE;IAACC,GAAG,EAAEF;EAAM,gBAC1CnB,KAAA,CAAAY,aAAA,CAACd,QAAQ;IAACwB,OAAO,EAAC,MAAM;IAACC,KAAK,EAAC,MAAM;IAACC,MAAM,EAAC;EAAM,EAC1B,CAC1B,CAAC,EACH,CAAChB,SAAS,IACVF,WAAW,CAACW,GAAG,CAAC,CAACQ,UAAU,EAAEN,KAAK,KAAI;IACrC,MAAM;MAAEO;IAAI,CAAE,GAAGxB,eAAe,CAACuB,UAAU,CAACE,QAAQ,EAAEF,UAAU,CAACG,IAAI,EAAEH,UAAU,CAACI,IAAI,CAAC;IAEvF,oBACC7B,KAAA,CAAAY,aAAA,CAACT,wBAAwB;MAACkB,GAAG,EAAEF,KAAM;MAACW,SAAS,EAAErB,UAAW;MAACsB,OAAO,EAAEA,CAAA,KAAYxB,WAAW,CAACkB,UAAU;IAAE,gBACzGzB,KAAA,CAAAY,aAAA,CAACf,IAAI;MAACmC,GAAG,EAAE,CAAE;MAACC,IAAI,EAAC,KAAK;MAACC,IAAI,EAAER;IAAK,EACpC,eAAA1B,KAAA,CAAAY,aAAA,CAAChB,GAAG;MAACuC,SAAS,EAAC;IAAQ,GAAEV,UAAU,CAACE,QAAc,CACzB,CAAC;EAE7B,CAAC,CAAC,EACF,CAACnB,SAAS,IAAI,CAAAF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE8B,MAAM,MAAK,CAAC,iBAAIpC,KAAA,CAAAY,aAAA,CAACX,gBAAgB,OACzD,CAAC;AAER,CAAC;AA/CDV,MAAA,CAAO8C,aAAa,CAiDLjC,oBAjDK","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d0951abc582cc71404e4abb7a549888074f141d5"}
