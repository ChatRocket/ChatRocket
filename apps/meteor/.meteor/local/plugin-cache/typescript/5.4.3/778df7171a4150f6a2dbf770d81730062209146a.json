{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/root/hooks/useUnreadMessages.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/root/hooks/useUnreadMessages.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/root/hooks/useUnreadMessages.ts","inputSourceMap":{"version":3,"file":"client/views/root/hooks/useUnreadMessages.ts","sourceRoot":"","sources":["client/views/root/hooks/useUnreadMessages.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AAEtE,MAAM,CAAC,MAAM,iBAAiB,GAAG,GAAuB,EAAE;IACzD,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,cAAc,GAAG,UAAU,CAAC,QAAQ,CAA+B,CAAC;IAE1E,OAAO,CAAC,GAAG,EAAE;QACZ,6DAA6D;QAC7D,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE,CAAC;YACxC,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,OAAO,CAAC,CAAC,yBAAyB,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;IAChE,CAAC,CAAC,EAAE,CAAC;AACN,CAAC,CAAC","sourcesContent":["import { useSession, useTranslation } from '@rocket.chat/ui-contexts';\n\nexport const useUnreadMessages = (): string | undefined => {\n\tconst t = useTranslation();\n\tconst unreadMessages = useSession('unread') as number | '' | '999+' | '•';\n\n\treturn (() => {\n\t\t// TODO: remove this when we have a better way to handle this\n\t\tif (typeof unreadMessages !== 'number') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn t('unread_messages_counter', { count: unreadMessages });\n\t})();\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/root/hooks/useUnreadMessages.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/root/hooks/useUnreadMessages.ts","inputSourceMap":{"version":3,"file":"client/views/root/hooks/useUnreadMessages.ts","sourceRoot":"","sources":["client/views/root/hooks/useUnreadMessages.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AAEtE,MAAM,CAAC,MAAM,iBAAiB,GAAG,GAAuB,EAAE;IACzD,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,cAAc,GAAG,UAAU,CAAC,QAAQ,CAA+B,CAAC;IAE1E,OAAO,CAAC,GAAG,EAAE;QACZ,6DAA6D;QAC7D,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE,CAAC;YACxC,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,OAAO,CAAC,CAAC,yBAAyB,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;IAChE,CAAC,CAAC,EAAE,CAAC;AACN,CAAC,CAAC","sourcesContent":["import { useSession, useTranslation } from '@rocket.chat/ui-contexts';\n\nexport const useUnreadMessages = (): string | undefined => {\n\tconst t = useTranslation();\n\tconst unreadMessages = useSession('unread') as number | '' | '999+' | '•';\n\n\treturn (() => {\n\t\t// TODO: remove this when we have a better way to handle this\n\t\tif (typeof unreadMessages !== 'number') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn t('unread_messages_counter', { count: unreadMessages });\n\t})();\n};\n"]}}},"code":"module.export({\n  useUnreadMessages: () => useUnreadMessages\n});\nlet useSession, useTranslation;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useSession(v) {\n    useSession = v;\n  },\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 0);\nconst useUnreadMessages = () => {\n  const t = useTranslation();\n  const unreadMessages = useSession('unread');\n  return (() => {\n    // TODO: remove this when we have a better way to handle this\n    if (typeof unreadMessages !== 'number') {\n      return undefined;\n    }\n    return t('unread_messages_counter', {\n      count: unreadMessages\n    });\n  })();\n};","map":{"version":3,"names":["module","export","useUnreadMessages","useSession","useTranslation","link","v","t","unreadMessages","undefined","count"],"sources":["client/views/root/hooks/useUnreadMessages.ts"],"sourcesContent":["import { useSession, useTranslation } from '@rocket.chat/ui-contexts';\n\nexport const useUnreadMessages = (): string | undefined => {\n\tconst t = useTranslation();\n\tconst unreadMessages = useSession('unread') as number | '' | '999+' | '•';\n\n\treturn (() => {\n\t\t// TODO: remove this when we have a better way to handle this\n\t\tif (typeof unreadMessages !== 'number') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn t('unread_messages_counter', { count: unreadMessages });\n\t})();\n};\n"],"mappings":"AAAAA,MAAA,CAAOC,MAAE;EAAAC,iBAAY,EAAAA,CAAA,KAAgBA;AAAM;AAAA,IAAAC,UAA2B,EAAAC,cAAA;AAAAJ,MAAA,CAAAK,IAAA;EAAAF,WAAAG,CAAA;IAAAH,UAAA,GAAAG,CAAA;EAAA;EAAAF,eAAAE,CAAA;IAAAF,cAAA,GAAAE,CAAA;EAAA;AAAA;AAE/D,MAAMJ,iBAAiB,GAAGA,CAAA,KAAyB;EACzD,MAAMK,CAAC,GAAGH,cAAc,EAAE;EAC1B,MAAMI,cAAc,GAAGL,UAAU,CAAC,QAAQ,CAA+B;EAEzE,OAAO,CAAC,MAAK;IACZ;IACA,IAAI,OAAOK,cAAc,KAAK,QAAQ,EAAE;MACvC,OAAOC,SAAS;IACjB;IAEA,OAAOF,CAAC,CAAC,yBAAyB,EAAE;MAAEG,KAAK,EAAEF;IAAc,CAAE,CAAC;EAC/D,CAAC,EAAC,CAAE;AACL,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"778df7171a4150f6a2dbf770d81730062209146a"}
