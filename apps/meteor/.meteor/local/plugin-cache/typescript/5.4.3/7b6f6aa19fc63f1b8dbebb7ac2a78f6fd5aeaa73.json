{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/oauth/initCustomOAuthServices.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/oauth/initCustomOAuthServices.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/oauth/initCustomOAuthServices.ts","inputSourceMap":{"version":3,"file":"server/lib/oauth/initCustomOAuthServices.ts","sourceRoot":"","sources":["server/lib/oauth/initCustomOAuthServices.ts"],"names":[],"mappings":"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","sourcesContent":["import { addOAuthService } from './addOAuthService';\n\nexport async function initCustomOAuthServices(): Promise<void> {\n\t// Add settings for custom OAuth providers to the settings so they get\n\t// automatically added when they are defined in ENV variables\n\tfor await (const key of Object.keys(process.env)) {\n\t\tif (/Accounts_OAuth_Custom_[a-zA-Z0-9_-]+$/.test(key)) {\n\t\t\t// Most all shells actually prohibit the usage of - in environment variables\n\t\t\t// So this will allow replacing - with _ and translate it back to the setting name\n\t\t\tlet name = key.replace('Accounts_OAuth_Custom_', '');\n\n\t\t\tif (name.indexOf('_') > -1) {\n\t\t\t\tname = name.replace(name.substr(name.indexOf('_')), '');\n\t\t\t}\n\n\t\t\tconst serviceKey = `Accounts_OAuth_Custom_${name}`;\n\n\t\t\tif (key === serviceKey) {\n\t\t\t\tconst values = {\n\t\t\t\t\tenabled: process.env[`${serviceKey}`] === 'true',\n\t\t\t\t\tclientId: process.env[`${serviceKey}_id`],\n\t\t\t\t\tclientSecret: process.env[`${serviceKey}_secret`],\n\t\t\t\t\tserverURL: process.env[`${serviceKey}_url`],\n\t\t\t\t\ttokenPath: process.env[`${serviceKey}_token_path`],\n\t\t\t\t\tidentityPath: process.env[`${serviceKey}_identity_path`],\n\t\t\t\t\tauthorizePath: process.env[`${serviceKey}_authorize_path`],\n\t\t\t\t\tscope: process.env[`${serviceKey}_scope`],\n\t\t\t\t\taccessTokenParam: process.env[`${serviceKey}_access_token_param`],\n\t\t\t\t\tbuttonLabelText: process.env[`${serviceKey}_button_label_text`],\n\t\t\t\t\tbuttonLabelColor: process.env[`${serviceKey}_button_label_color`],\n\t\t\t\t\tloginStyle: process.env[`${serviceKey}_login_style`],\n\t\t\t\t\tbuttonColor: process.env[`${serviceKey}_button_color`],\n\t\t\t\t\ttokenSentVia: process.env[`${serviceKey}_token_sent_via`],\n\t\t\t\t\tidentityTokenSentVia: process.env[`${serviceKey}_identity_token_sent_via`],\n\t\t\t\t\tkeyField: process.env[`${serviceKey}_key_field`],\n\t\t\t\t\tusernameField: process.env[`${serviceKey}_username_field`],\n\t\t\t\t\tnameField: process.env[`${serviceKey}_name_field`],\n\t\t\t\t\temailField: process.env[`${serviceKey}_email_field`],\n\t\t\t\t\trolesClaim: process.env[`${serviceKey}_roles_claim`],\n\t\t\t\t\tgroupsClaim: process.env[`${serviceKey}_groups_claim`],\n\t\t\t\t\tchannelsMap: process.env[`${serviceKey}_groups_channel_map`],\n\t\t\t\t\tchannelsAdmin: process.env[`${serviceKey}_channels_admin`],\n\t\t\t\t\tmergeUsers: process.env[`${serviceKey}_merge_users`] === 'true',\n\t\t\t\t\tmergeUsersDistinctServices: process.env[`${serviceKey}_merge_users_distinct_services`] === 'true',\n\t\t\t\t\tmapChannels: process.env[`${serviceKey}_map_channels`],\n\t\t\t\t\tmergeRoles: process.env[`${serviceKey}_merge_roles`] === 'true',\n\t\t\t\t\trolesToSync: process.env[`${serviceKey}_roles_to_sync`],\n\t\t\t\t\tshowButton: process.env[`${serviceKey}_show_button`] === 'true',\n\t\t\t\t\tavatarField: process.env[`${serviceKey}_avatar_field`],\n\t\t\t\t};\n\n\t\t\t\tawait addOAuthService(name, values);\n\t\t\t}\n\t\t}\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/oauth/initCustomOAuthServices.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/oauth/initCustomOAuthServices.ts","inputSourceMap":{"version":3,"file":"server/lib/oauth/initCustomOAuthServices.ts","sourceRoot":"","sources":["server/lib/oauth/initCustomOAuthServices.ts"],"names":[],"mappings":"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","sourcesContent":["import { addOAuthService } from './addOAuthService';\n\nexport async function initCustomOAuthServices(): Promise<void> {\n\t// Add settings for custom OAuth providers to the settings so they get\n\t// automatically added when they are defined in ENV variables\n\tfor await (const key of Object.keys(process.env)) {\n\t\tif (/Accounts_OAuth_Custom_[a-zA-Z0-9_-]+$/.test(key)) {\n\t\t\t// Most all shells actually prohibit the usage of - in environment variables\n\t\t\t// So this will allow replacing - with _ and translate it back to the setting name\n\t\t\tlet name = key.replace('Accounts_OAuth_Custom_', '');\n\n\t\t\tif (name.indexOf('_') > -1) {\n\t\t\t\tname = name.replace(name.substr(name.indexOf('_')), '');\n\t\t\t}\n\n\t\t\tconst serviceKey = `Accounts_OAuth_Custom_${name}`;\n\n\t\t\tif (key === serviceKey) {\n\t\t\t\tconst values = {\n\t\t\t\t\tenabled: process.env[`${serviceKey}`] === 'true',\n\t\t\t\t\tclientId: process.env[`${serviceKey}_id`],\n\t\t\t\t\tclientSecret: process.env[`${serviceKey}_secret`],\n\t\t\t\t\tserverURL: process.env[`${serviceKey}_url`],\n\t\t\t\t\ttokenPath: process.env[`${serviceKey}_token_path`],\n\t\t\t\t\tidentityPath: process.env[`${serviceKey}_identity_path`],\n\t\t\t\t\tauthorizePath: process.env[`${serviceKey}_authorize_path`],\n\t\t\t\t\tscope: process.env[`${serviceKey}_scope`],\n\t\t\t\t\taccessTokenParam: process.env[`${serviceKey}_access_token_param`],\n\t\t\t\t\tbuttonLabelText: process.env[`${serviceKey}_button_label_text`],\n\t\t\t\t\tbuttonLabelColor: process.env[`${serviceKey}_button_label_color`],\n\t\t\t\t\tloginStyle: process.env[`${serviceKey}_login_style`],\n\t\t\t\t\tbuttonColor: process.env[`${serviceKey}_button_color`],\n\t\t\t\t\ttokenSentVia: process.env[`${serviceKey}_token_sent_via`],\n\t\t\t\t\tidentityTokenSentVia: process.env[`${serviceKey}_identity_token_sent_via`],\n\t\t\t\t\tkeyField: process.env[`${serviceKey}_key_field`],\n\t\t\t\t\tusernameField: process.env[`${serviceKey}_username_field`],\n\t\t\t\t\tnameField: process.env[`${serviceKey}_name_field`],\n\t\t\t\t\temailField: process.env[`${serviceKey}_email_field`],\n\t\t\t\t\trolesClaim: process.env[`${serviceKey}_roles_claim`],\n\t\t\t\t\tgroupsClaim: process.env[`${serviceKey}_groups_claim`],\n\t\t\t\t\tchannelsMap: process.env[`${serviceKey}_groups_channel_map`],\n\t\t\t\t\tchannelsAdmin: process.env[`${serviceKey}_channels_admin`],\n\t\t\t\t\tmergeUsers: process.env[`${serviceKey}_merge_users`] === 'true',\n\t\t\t\t\tmergeUsersDistinctServices: process.env[`${serviceKey}_merge_users_distinct_services`] === 'true',\n\t\t\t\t\tmapChannels: process.env[`${serviceKey}_map_channels`],\n\t\t\t\t\tmergeRoles: process.env[`${serviceKey}_merge_roles`] === 'true',\n\t\t\t\t\trolesToSync: process.env[`${serviceKey}_roles_to_sync`],\n\t\t\t\t\tshowButton: process.env[`${serviceKey}_show_button`] === 'true',\n\t\t\t\t\tavatarField: process.env[`${serviceKey}_avatar_field`],\n\t\t\t\t};\n\n\t\t\t\tawait addOAuthService(name, values);\n\t\t\t}\n\t\t}\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      initCustomOAuthServices: () => initCustomOAuthServices\n    });\n    let addOAuthService;\n    module.link(\"./addOAuthService\", {\n      addOAuthService(v) {\n        addOAuthService = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function initCustomOAuthServices() {\n      // Add settings for custom OAuth providers to the settings so they get\n      // automatically added when they are defined in ENV variables\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(Object.keys(process.env)), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const key = _step.value;\n          {\n            if (/Accounts_OAuth_Custom_[a-zA-Z0-9_-]+$/.test(key)) {\n              // Most all shells actually prohibit the usage of - in environment variables\n              // So this will allow replacing - with _ and translate it back to the setting name\n              let name = key.replace('Accounts_OAuth_Custom_', '');\n              if (name.indexOf('_') > -1) {\n                name = name.replace(name.substr(name.indexOf('_')), '');\n              }\n              const serviceKey = \"Accounts_OAuth_Custom_\".concat(name);\n              if (key === serviceKey) {\n                const values = {\n                  enabled: process.env[\"\".concat(serviceKey)] === 'true',\n                  clientId: process.env[\"\".concat(serviceKey, \"_id\")],\n                  clientSecret: process.env[\"\".concat(serviceKey, \"_secret\")],\n                  serverURL: process.env[\"\".concat(serviceKey, \"_url\")],\n                  tokenPath: process.env[\"\".concat(serviceKey, \"_token_path\")],\n                  identityPath: process.env[\"\".concat(serviceKey, \"_identity_path\")],\n                  authorizePath: process.env[\"\".concat(serviceKey, \"_authorize_path\")],\n                  scope: process.env[\"\".concat(serviceKey, \"_scope\")],\n                  accessTokenParam: process.env[\"\".concat(serviceKey, \"_access_token_param\")],\n                  buttonLabelText: process.env[\"\".concat(serviceKey, \"_button_label_text\")],\n                  buttonLabelColor: process.env[\"\".concat(serviceKey, \"_button_label_color\")],\n                  loginStyle: process.env[\"\".concat(serviceKey, \"_login_style\")],\n                  buttonColor: process.env[\"\".concat(serviceKey, \"_button_color\")],\n                  tokenSentVia: process.env[\"\".concat(serviceKey, \"_token_sent_via\")],\n                  identityTokenSentVia: process.env[\"\".concat(serviceKey, \"_identity_token_sent_via\")],\n                  keyField: process.env[\"\".concat(serviceKey, \"_key_field\")],\n                  usernameField: process.env[\"\".concat(serviceKey, \"_username_field\")],\n                  nameField: process.env[\"\".concat(serviceKey, \"_name_field\")],\n                  emailField: process.env[\"\".concat(serviceKey, \"_email_field\")],\n                  rolesClaim: process.env[\"\".concat(serviceKey, \"_roles_claim\")],\n                  groupsClaim: process.env[\"\".concat(serviceKey, \"_groups_claim\")],\n                  channelsMap: process.env[\"\".concat(serviceKey, \"_groups_channel_map\")],\n                  channelsAdmin: process.env[\"\".concat(serviceKey, \"_channels_admin\")],\n                  mergeUsers: process.env[\"\".concat(serviceKey, \"_merge_users\")] === 'true',\n                  mergeUsersDistinctServices: process.env[\"\".concat(serviceKey, \"_merge_users_distinct_services\")] === 'true',\n                  mapChannels: process.env[\"\".concat(serviceKey, \"_map_channels\")],\n                  mergeRoles: process.env[\"\".concat(serviceKey, \"_merge_roles\")] === 'true',\n                  rolesToSync: process.env[\"\".concat(serviceKey, \"_roles_to_sync\")],\n                  showButton: process.env[\"\".concat(serviceKey, \"_show_button\")] === 'true',\n                  avatarField: process.env[\"\".concat(serviceKey, \"_avatar_field\")]\n                };\n                await addOAuthService(name, values);\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","initCustomOAuthServices","addOAuthService","__reifyWaitForDeps__","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","Object","keys","process","env","_step","next","done","key","value","test","name","replace","indexOf","substr","serviceKey","concat","values","enabled","clientId","clientSecret","serverURL","tokenPath","identityPath","authorizePath","scope","accessTokenParam","buttonLabelText","buttonLabelColor","loginStyle","buttonColor","tokenSentVia","identityTokenSentVia","keyField","usernameField","nameField","emailField","rolesClaim","groupsClaim","channelsMap","channelsAdmin","mergeUsers","mergeUsersDistinctServices","mapChannels","mergeRoles","rolesToSync","showButton","avatarField","err","return","__reify_async_result__","_reifyError","self","async"],"sources":["server/lib/oauth/initCustomOAuthServices.ts"],"sourcesContent":["import { addOAuthService } from './addOAuthService';\n\nexport async function initCustomOAuthServices(): Promise<void> {\n\t// Add settings for custom OAuth providers to the settings so they get\n\t// automatically added when they are defined in ENV variables\n\tfor await (const key of Object.keys(process.env)) {\n\t\tif (/Accounts_OAuth_Custom_[a-zA-Z0-9_-]+$/.test(key)) {\n\t\t\t// Most all shells actually prohibit the usage of - in environment variables\n\t\t\t// So this will allow replacing - with _ and translate it back to the setting name\n\t\t\tlet name = key.replace('Accounts_OAuth_Custom_', '');\n\n\t\t\tif (name.indexOf('_') > -1) {\n\t\t\t\tname = name.replace(name.substr(name.indexOf('_')), '');\n\t\t\t}\n\n\t\t\tconst serviceKey = `Accounts_OAuth_Custom_${name}`;\n\n\t\t\tif (key === serviceKey) {\n\t\t\t\tconst values = {\n\t\t\t\t\tenabled: process.env[`${serviceKey}`] === 'true',\n\t\t\t\t\tclientId: process.env[`${serviceKey}_id`],\n\t\t\t\t\tclientSecret: process.env[`${serviceKey}_secret`],\n\t\t\t\t\tserverURL: process.env[`${serviceKey}_url`],\n\t\t\t\t\ttokenPath: process.env[`${serviceKey}_token_path`],\n\t\t\t\t\tidentityPath: process.env[`${serviceKey}_identity_path`],\n\t\t\t\t\tauthorizePath: process.env[`${serviceKey}_authorize_path`],\n\t\t\t\t\tscope: process.env[`${serviceKey}_scope`],\n\t\t\t\t\taccessTokenParam: process.env[`${serviceKey}_access_token_param`],\n\t\t\t\t\tbuttonLabelText: process.env[`${serviceKey}_button_label_text`],\n\t\t\t\t\tbuttonLabelColor: process.env[`${serviceKey}_button_label_color`],\n\t\t\t\t\tloginStyle: process.env[`${serviceKey}_login_style`],\n\t\t\t\t\tbuttonColor: process.env[`${serviceKey}_button_color`],\n\t\t\t\t\ttokenSentVia: process.env[`${serviceKey}_token_sent_via`],\n\t\t\t\t\tidentityTokenSentVia: process.env[`${serviceKey}_identity_token_sent_via`],\n\t\t\t\t\tkeyField: process.env[`${serviceKey}_key_field`],\n\t\t\t\t\tusernameField: process.env[`${serviceKey}_username_field`],\n\t\t\t\t\tnameField: process.env[`${serviceKey}_name_field`],\n\t\t\t\t\temailField: process.env[`${serviceKey}_email_field`],\n\t\t\t\t\trolesClaim: process.env[`${serviceKey}_roles_claim`],\n\t\t\t\t\tgroupsClaim: process.env[`${serviceKey}_groups_claim`],\n\t\t\t\t\tchannelsMap: process.env[`${serviceKey}_groups_channel_map`],\n\t\t\t\t\tchannelsAdmin: process.env[`${serviceKey}_channels_admin`],\n\t\t\t\t\tmergeUsers: process.env[`${serviceKey}_merge_users`] === 'true',\n\t\t\t\t\tmergeUsersDistinctServices: process.env[`${serviceKey}_merge_users_distinct_services`] === 'true',\n\t\t\t\t\tmapChannels: process.env[`${serviceKey}_map_channels`],\n\t\t\t\t\tmergeRoles: process.env[`${serviceKey}_merge_roles`] === 'true',\n\t\t\t\t\trolesToSync: process.env[`${serviceKey}_roles_to_sync`],\n\t\t\t\t\tshowButton: process.env[`${serviceKey}_show_button`] === 'true',\n\t\t\t\t\tavatarField: process.env[`${serviceKey}_avatar_field`],\n\t\t\t\t};\n\n\t\t\t\tawait addOAuthService(name, values);\n\t\t\t}\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"7b6f6aa19fc63f1b8dbebb7ac2a78f6fd5aeaa73"}
