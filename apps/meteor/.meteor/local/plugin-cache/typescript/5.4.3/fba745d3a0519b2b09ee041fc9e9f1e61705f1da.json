{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/teams.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/teams.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/teams.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/teams.ts","sourceRoot":"","sources":["app/api/server/v1/teams.ts"],"names":[],"mappings":"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","sourcesContent":["import { Team } from '@rocket.chat/core-services';\nimport type { ITeam, UserStatus } from '@rocket.chat/core-typings';\nimport { TEAM_TYPE, isValidSidepanel } from '@rocket.chat/core-typings';\nimport { Users, Rooms } from '@rocket.chat/models';\nimport {\n\tisTeamsConvertToChannelProps,\n\tisTeamsRemoveRoomProps,\n\tisTeamsUpdateMemberProps,\n\tisTeamsRemoveMemberProps,\n\tisTeamsAddMembersProps,\n\tisTeamsDeleteProps,\n\tisTeamsLeaveProps,\n\tisTeamsUpdateProps,\n\tisTeamsListChildrenProps,\n} from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { Match, check } from 'meteor/check';\n\nimport { eraseRoom } from '../../../../server/lib/eraseRoom';\nimport { canAccessRoomAsync } from '../../../authorization/server';\nimport { hasPermissionAsync, hasAtLeastOnePermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { removeUserFromRoom } from '../../../lib/server/functions/removeUserFromRoom';\nimport { API } from '../api';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\n\nAPI.v1.addRoute(\n\t'teams.list',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, query } = await this.parseJsonQuery();\n\n\t\t\tconst { records, total } = await Team.list(this.userId, { offset, count }, { sort, query });\n\n\t\t\treturn API.v1.success({\n\t\t\t\tteams: records,\n\t\t\t\ttotal,\n\t\t\t\tcount: records.length,\n\t\t\t\toffset,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.listAll',\n\t{ authRequired: true, permissionsRequired: ['view-all-teams'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\n\t\t\tconst { records, total } = await Team.listAll({ offset, count });\n\n\t\t\treturn API.v1.success({\n\t\t\t\tteams: records,\n\t\t\t\ttotal,\n\t\t\t\tcount: records.length,\n\t\t\t\toffset,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.create',\n\t{ authRequired: true, permissionsRequired: ['create-team'] },\n\t{\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tname: String,\n\t\t\t\t\ttype: Match.OneOf(TEAM_TYPE.PRIVATE, TEAM_TYPE.PUBLIC),\n\t\t\t\t\tmembers: Match.Maybe([String]),\n\t\t\t\t\troom: Match.Maybe(Match.Any),\n\t\t\t\t\towner: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { name, type, members, room, owner, sidepanel } = this.bodyParams;\n\n\t\t\tif (sidepanel?.items && !isValidSidepanel(sidepanel)) {\n\t\t\t\tthrow new Error('error-invalid-sidepanel');\n\t\t\t}\n\n\t\t\tconst team = await Team.create(this.userId, {\n\t\t\t\tteam: {\n\t\t\t\t\tname,\n\t\t\t\t\ttype,\n\t\t\t\t},\n\t\t\t\troom,\n\t\t\t\tmembers,\n\t\t\t\towner,\n\t\t\t\tsidepanel,\n\t\t\t});\n\n\t\t\treturn API.v1.success({ team });\n\t\t},\n\t},\n);\n\nconst getTeamByIdOrName = async (params: { teamId: string } | { teamName: string }): Promise<ITeam | null> => {\n\tif ('teamId' in params && params.teamId) {\n\t\treturn Team.getOneById<ITeam>(params.teamId);\n\t}\n\n\tif ('teamName' in params && params.teamName) {\n\t\treturn Team.getOneByName(params.teamName);\n\t}\n\n\treturn null;\n};\n\nAPI.v1.addRoute(\n\t'teams.convertToChannel',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsConvertToChannelProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { roomsToRemove = [] } = this.bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'convert-team', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst rooms = await Team.getMatchingTeamRooms(team._id, roomsToRemove);\n\n\t\t\tif (rooms.length) {\n\t\t\t\tfor await (const room of rooms) {\n\t\t\t\t\tawait eraseRoom(room, this.userId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait Promise.all([Team.unsetTeamIdOfRooms(this.userId, team._id), Team.removeAllMembersFromTeam(team._id)]);\n\n\t\t\tawait Team.deleteById(team._id);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.addRooms',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.OneOf(\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamId: String,\n\t\t\t\t\t\trooms: [String] as [StringConstructor],\n\t\t\t\t\t}),\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamName: String,\n\t\t\t\t\t\trooms: [String] as [StringConstructor],\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'move-room-to-team', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized('error-no-permission-team-channel');\n\t\t\t}\n\n\t\t\tconst { rooms } = this.bodyParams;\n\n\t\t\tconst validRooms = await Team.addRooms(this.userId, rooms, team._id);\n\n\t\t\treturn API.v1.success({ rooms: validRooms });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.removeRoom',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsRemoveRoomProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'remove-team-channel', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst canRemoveAny = !!(await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId));\n\n\t\t\tconst { roomId } = this.bodyParams;\n\n\t\t\tconst room = await Team.removeRoom(this.userId, roomId, team._id, canRemoveAny);\n\n\t\t\treturn API.v1.success({ room });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.updateRoom',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\troomId: String,\n\t\t\t\t\tisDefault: Boolean,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { roomId, isDefault } = this.bodyParams;\n\n\t\t\tconst team = await Team.getOneByRoomId(roomId);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'edit-team-channel', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tconst canUpdateAny = !!(await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId));\n\n\t\t\tconst room = await Team.updateRoom(this.userId, roomId, isDefault, canUpdateAny);\n\n\t\t\treturn API.v1.success({ room });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.listRooms',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.OneOf(\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamId: String,\n\t\t\t\t\t}),\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamName: String,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tfilter: Match.Maybe(String),\n\t\t\t\t\ttype: Match.Maybe(String),\n\t\t\t\t\toffset: Match.Maybe(String),\n\t\t\t\t\tcount: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { filter, type } = this.queryParams;\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\n\t\t\tconst team = await getTeamByIdOrName(this.queryParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tconst allowPrivateTeam: boolean = await hasPermissionAsync(this.userId, 'view-all-teams', team.roomId);\n\n\t\t\tconst getAllRooms = await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId);\n\n\t\t\tconst listFilter = {\n\t\t\t\tname: filter ?? undefined,\n\t\t\t\tisDefault: type === 'autoJoin',\n\t\t\t\tgetAllRooms,\n\t\t\t\tallowPrivateTeam,\n\t\t\t};\n\n\t\t\tconst { records, total } = await Team.listRooms(this.userId, team._id, listFilter, {\n\t\t\t\toffset,\n\t\t\t\tcount,\n\t\t\t});\n\n\t\t\treturn API.v1.success({\n\t\t\t\trooms: records,\n\t\t\t\ttotal,\n\t\t\t\tcount: records.length,\n\t\t\t\toffset,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.listRoomsOfUser',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.OneOf(\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamId: String,\n\t\t\t\t\t}),\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamName: String,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tuserId: String,\n\t\t\t\t\tcanUserDelete: Match.Maybe(String),\n\t\t\t\t\toffset: Match.Maybe(String),\n\t\t\t\t\tcount: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\n\t\t\tconst team = await getTeamByIdOrName(this.queryParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tconst allowPrivateTeam = await hasPermissionAsync(this.userId, 'view-all-teams', team.roomId);\n\n\t\t\tconst { userId, canUserDelete } = this.queryParams;\n\n\t\t\tif (!(this.userId === userId || (await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId)))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst booleanCanUserDelete = canUserDelete === 'true';\n\t\t\tconst { records, total } = await Team.listRoomsOfUser(this.userId, team._id, userId, allowPrivateTeam, booleanCanUserDelete, {\n\t\t\t\toffset,\n\t\t\t\tcount,\n\t\t\t});\n\n\t\t\treturn API.v1.success({\n\t\t\t\trooms: records,\n\t\t\t\ttotal,\n\t\t\t\tcount: records.length,\n\t\t\t\toffset: 0,\n\t\t\t});\n\t\t},\n\t},\n);\n\nconst getTeamByIdOrNameOrParentRoom = async (\n\tparams: { teamId: string } | { teamName: string } | { roomId: string },\n): Promise<Pick<ITeam, 'type' | 'roomId' | '_id'> | null> => {\n\tif ('teamId' in params && params.teamId) {\n\t\treturn Team.getOneById<ITeam>(params.teamId, { projection: { type: 1, roomId: 1 } });\n\t}\n\tif ('teamName' in params && params.teamName) {\n\t\treturn Team.getOneByName(params.teamName, { projection: { type: 1, roomId: 1 } });\n\t}\n\tif ('roomId' in params && params.roomId) {\n\t\treturn Team.getOneByRoomId(params.roomId, { projection: { type: 1, roomId: 1 } });\n\t}\n\treturn null;\n};\n\n// This should accept a teamId, filter (search by name on rooms collection) and sort/pagination\n// should return a list of rooms/discussions from the team. the discussions will only be returned from the main room\nAPI.v1.addRoute(\n\t'teams.listChildren',\n\t{ authRequired: true, validateParams: isTeamsListChildrenProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst { filter, type } = this.queryParams;\n\n\t\t\tconst team = await getTeamByIdOrNameOrParentRoom(this.queryParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst data = await Team.listChildren(this.userId, team, filter, type, sort, offset, count);\n\n\t\t\treturn API.v1.success({ ...data, offset, count });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.members',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.OneOf(\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamId: String,\n\t\t\t\t\t}),\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamName: String,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tstatus: Match.Maybe([String]),\n\t\t\t\t\tusername: Match.Maybe(String),\n\t\t\t\t\tname: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { status, username, name } = this.queryParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.queryParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tconst canSeeAllMembers = await hasPermissionAsync(this.userId, 'view-all-teams', team.roomId);\n\n\t\t\tconst query = {\n\t\t\t\tusername: username ? new RegExp(escapeRegExp(username), 'i') : undefined,\n\t\t\t\tname: name ? new RegExp(escapeRegExp(name), 'i') : undefined,\n\t\t\t\tstatus: status ? { $in: status as UserStatus[] } : undefined,\n\t\t\t};\n\n\t\t\tconst { records, total } = await Team.members(this.userId, team._id, canSeeAllMembers, { offset, count }, query);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tmembers: records,\n\t\t\t\ttotal,\n\t\t\t\tcount: records.length,\n\t\t\t\toffset,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.addMembers',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsAddMembersProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\t\t\tconst { members } = bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasAtLeastOnePermissionAsync(this.userId, ['add-team-member', 'edit-team-member'], team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tawait Team.addMembers(this.userId, team._id, members);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.updateMember',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsUpdateMemberProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\t\t\tconst { member } = bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasAtLeastOnePermissionAsync(this.userId, ['edit-team-member'], team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tawait Team.updateMember(team._id, member);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.removeMember',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsRemoveMemberProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\t\t\tconst { userId, rooms } = bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasAtLeastOnePermissionAsync(this.userId, ['edit-team-member'], team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst user = await Users.findOneActiveById(userId, {});\n\t\t\tif (!user) {\n\t\t\t\treturn API.v1.failure('invalid-user');\n\t\t\t}\n\n\t\t\tif (!(await Team.removeMembers(this.userId, team._id, [{ userId }]))) {\n\t\t\t\treturn API.v1.failure();\n\t\t\t}\n\n\t\t\tif (rooms?.length) {\n\t\t\t\tconst roomsFromTeam: string[] = await Team.getMatchingTeamRooms(team._id, rooms);\n\n\t\t\t\tawait Promise.all(\n\t\t\t\t\troomsFromTeam.map((rid) =>\n\t\t\t\t\t\tremoveUserFromRoom(rid, user, {\n\t\t\t\t\t\t\tbyUser: this.user,\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.leave',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsLeaveProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { rooms = [] } = this.bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tawait Team.removeMembers(this.userId, team._id, [\n\t\t\t\t{\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t},\n\t\t\t]);\n\n\t\t\tif (rooms.length) {\n\t\t\t\tconst roomsFromTeam: string[] = await Team.getMatchingTeamRooms(team._id, rooms);\n\t\t\t\tawait Promise.all(roomsFromTeam.map((rid) => removeUserFromRoom(rid, this.user)));\n\t\t\t}\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.info',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.OneOf(\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamId: String,\n\t\t\t\t\t}),\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamName: String,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tconst teamInfo = await getTeamByIdOrName(this.queryParams);\n\t\t\tif (!teamInfo) {\n\t\t\t\treturn API.v1.failure('Team not found');\n\t\t\t}\n\n\t\t\tconst room = await Rooms.findOneById(teamInfo.roomId);\n\n\t\t\tif (!room) {\n\t\t\t\treturn API.v1.failure('Room not found');\n\t\t\t}\n\n\t\t\tconst canViewInfo =\n\t\t\t\t(await canAccessRoomAsync(room, { _id: this.userId })) || (await hasPermissionAsync(this.userId, 'view-all-teams'));\n\n\t\t\tif (!canViewInfo) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\treturn API.v1.success({ teamInfo });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.delete',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsDeleteProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { roomsToRemove = [] } = this.bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'delete-team', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst rooms: string[] = await Team.getMatchingTeamRooms(team._id, roomsToRemove);\n\n\t\t\t// If we got a list of rooms to delete along with the team, remove them first\n\t\t\tif (rooms.length) {\n\t\t\t\tfor await (const room of rooms) {\n\t\t\t\t\tawait eraseRoom(room, this.userId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Move every other room back to the workspace\n\t\t\tawait Team.unsetTeamIdOfRooms(this.userId, team._id);\n\n\t\t\t// Remove the team's main room\n\t\t\tawait eraseRoom(team.roomId, this.userId);\n\n\t\t\t// Delete all team memberships\n\t\t\tawait Team.removeAllMembersFromTeam(team._id);\n\n\t\t\t// And finally delete the team itself\n\t\t\tawait Team.deleteById(team._id);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.autocomplete',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tname: String,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { name } = this.queryParams;\n\n\t\t\tconst teams = await Team.autocomplete(this.userId, name);\n\n\t\t\treturn API.v1.success({ teams });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.update',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsUpdateProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { data } = this.bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'edit-team', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tawait Team.update(this.userId, team._id, data);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/teams.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/teams.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/teams.ts","sourceRoot":"","sources":["app/api/server/v1/teams.ts"],"names":[],"mappings":"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","sourcesContent":["import { Team } from '@rocket.chat/core-services';\nimport type { ITeam, UserStatus } from '@rocket.chat/core-typings';\nimport { TEAM_TYPE, isValidSidepanel } from '@rocket.chat/core-typings';\nimport { Users, Rooms } from '@rocket.chat/models';\nimport {\n\tisTeamsConvertToChannelProps,\n\tisTeamsRemoveRoomProps,\n\tisTeamsUpdateMemberProps,\n\tisTeamsRemoveMemberProps,\n\tisTeamsAddMembersProps,\n\tisTeamsDeleteProps,\n\tisTeamsLeaveProps,\n\tisTeamsUpdateProps,\n\tisTeamsListChildrenProps,\n} from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { Match, check } from 'meteor/check';\n\nimport { eraseRoom } from '../../../../server/lib/eraseRoom';\nimport { canAccessRoomAsync } from '../../../authorization/server';\nimport { hasPermissionAsync, hasAtLeastOnePermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { removeUserFromRoom } from '../../../lib/server/functions/removeUserFromRoom';\nimport { API } from '../api';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\n\nAPI.v1.addRoute(\n\t'teams.list',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, query } = await this.parseJsonQuery();\n\n\t\t\tconst { records, total } = await Team.list(this.userId, { offset, count }, { sort, query });\n\n\t\t\treturn API.v1.success({\n\t\t\t\tteams: records,\n\t\t\t\ttotal,\n\t\t\t\tcount: records.length,\n\t\t\t\toffset,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.listAll',\n\t{ authRequired: true, permissionsRequired: ['view-all-teams'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\n\t\t\tconst { records, total } = await Team.listAll({ offset, count });\n\n\t\t\treturn API.v1.success({\n\t\t\t\tteams: records,\n\t\t\t\ttotal,\n\t\t\t\tcount: records.length,\n\t\t\t\toffset,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.create',\n\t{ authRequired: true, permissionsRequired: ['create-team'] },\n\t{\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tname: String,\n\t\t\t\t\ttype: Match.OneOf(TEAM_TYPE.PRIVATE, TEAM_TYPE.PUBLIC),\n\t\t\t\t\tmembers: Match.Maybe([String]),\n\t\t\t\t\troom: Match.Maybe(Match.Any),\n\t\t\t\t\towner: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { name, type, members, room, owner, sidepanel } = this.bodyParams;\n\n\t\t\tif (sidepanel?.items && !isValidSidepanel(sidepanel)) {\n\t\t\t\tthrow new Error('error-invalid-sidepanel');\n\t\t\t}\n\n\t\t\tconst team = await Team.create(this.userId, {\n\t\t\t\tteam: {\n\t\t\t\t\tname,\n\t\t\t\t\ttype,\n\t\t\t\t},\n\t\t\t\troom,\n\t\t\t\tmembers,\n\t\t\t\towner,\n\t\t\t\tsidepanel,\n\t\t\t});\n\n\t\t\treturn API.v1.success({ team });\n\t\t},\n\t},\n);\n\nconst getTeamByIdOrName = async (params: { teamId: string } | { teamName: string }): Promise<ITeam | null> => {\n\tif ('teamId' in params && params.teamId) {\n\t\treturn Team.getOneById<ITeam>(params.teamId);\n\t}\n\n\tif ('teamName' in params && params.teamName) {\n\t\treturn Team.getOneByName(params.teamName);\n\t}\n\n\treturn null;\n};\n\nAPI.v1.addRoute(\n\t'teams.convertToChannel',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsConvertToChannelProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { roomsToRemove = [] } = this.bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'convert-team', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst rooms = await Team.getMatchingTeamRooms(team._id, roomsToRemove);\n\n\t\t\tif (rooms.length) {\n\t\t\t\tfor await (const room of rooms) {\n\t\t\t\t\tawait eraseRoom(room, this.userId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait Promise.all([Team.unsetTeamIdOfRooms(this.userId, team._id), Team.removeAllMembersFromTeam(team._id)]);\n\n\t\t\tawait Team.deleteById(team._id);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.addRooms',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.OneOf(\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamId: String,\n\t\t\t\t\t\trooms: [String] as [StringConstructor],\n\t\t\t\t\t}),\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamName: String,\n\t\t\t\t\t\trooms: [String] as [StringConstructor],\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'move-room-to-team', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized('error-no-permission-team-channel');\n\t\t\t}\n\n\t\t\tconst { rooms } = this.bodyParams;\n\n\t\t\tconst validRooms = await Team.addRooms(this.userId, rooms, team._id);\n\n\t\t\treturn API.v1.success({ rooms: validRooms });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.removeRoom',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsRemoveRoomProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'remove-team-channel', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst canRemoveAny = !!(await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId));\n\n\t\t\tconst { roomId } = this.bodyParams;\n\n\t\t\tconst room = await Team.removeRoom(this.userId, roomId, team._id, canRemoveAny);\n\n\t\t\treturn API.v1.success({ room });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.updateRoom',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\troomId: String,\n\t\t\t\t\tisDefault: Boolean,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { roomId, isDefault } = this.bodyParams;\n\n\t\t\tconst team = await Team.getOneByRoomId(roomId);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'edit-team-channel', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tconst canUpdateAny = !!(await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId));\n\n\t\t\tconst room = await Team.updateRoom(this.userId, roomId, isDefault, canUpdateAny);\n\n\t\t\treturn API.v1.success({ room });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.listRooms',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.OneOf(\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamId: String,\n\t\t\t\t\t}),\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamName: String,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tfilter: Match.Maybe(String),\n\t\t\t\t\ttype: Match.Maybe(String),\n\t\t\t\t\toffset: Match.Maybe(String),\n\t\t\t\t\tcount: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { filter, type } = this.queryParams;\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\n\t\t\tconst team = await getTeamByIdOrName(this.queryParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tconst allowPrivateTeam: boolean = await hasPermissionAsync(this.userId, 'view-all-teams', team.roomId);\n\n\t\t\tconst getAllRooms = await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId);\n\n\t\t\tconst listFilter = {\n\t\t\t\tname: filter ?? undefined,\n\t\t\t\tisDefault: type === 'autoJoin',\n\t\t\t\tgetAllRooms,\n\t\t\t\tallowPrivateTeam,\n\t\t\t};\n\n\t\t\tconst { records, total } = await Team.listRooms(this.userId, team._id, listFilter, {\n\t\t\t\toffset,\n\t\t\t\tcount,\n\t\t\t});\n\n\t\t\treturn API.v1.success({\n\t\t\t\trooms: records,\n\t\t\t\ttotal,\n\t\t\t\tcount: records.length,\n\t\t\t\toffset,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.listRoomsOfUser',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.OneOf(\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamId: String,\n\t\t\t\t\t}),\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamName: String,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tuserId: String,\n\t\t\t\t\tcanUserDelete: Match.Maybe(String),\n\t\t\t\t\toffset: Match.Maybe(String),\n\t\t\t\t\tcount: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\n\t\t\tconst team = await getTeamByIdOrName(this.queryParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tconst allowPrivateTeam = await hasPermissionAsync(this.userId, 'view-all-teams', team.roomId);\n\n\t\t\tconst { userId, canUserDelete } = this.queryParams;\n\n\t\t\tif (!(this.userId === userId || (await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId)))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst booleanCanUserDelete = canUserDelete === 'true';\n\t\t\tconst { records, total } = await Team.listRoomsOfUser(this.userId, team._id, userId, allowPrivateTeam, booleanCanUserDelete, {\n\t\t\t\toffset,\n\t\t\t\tcount,\n\t\t\t});\n\n\t\t\treturn API.v1.success({\n\t\t\t\trooms: records,\n\t\t\t\ttotal,\n\t\t\t\tcount: records.length,\n\t\t\t\toffset: 0,\n\t\t\t});\n\t\t},\n\t},\n);\n\nconst getTeamByIdOrNameOrParentRoom = async (\n\tparams: { teamId: string } | { teamName: string } | { roomId: string },\n): Promise<Pick<ITeam, 'type' | 'roomId' | '_id'> | null> => {\n\tif ('teamId' in params && params.teamId) {\n\t\treturn Team.getOneById<ITeam>(params.teamId, { projection: { type: 1, roomId: 1 } });\n\t}\n\tif ('teamName' in params && params.teamName) {\n\t\treturn Team.getOneByName(params.teamName, { projection: { type: 1, roomId: 1 } });\n\t}\n\tif ('roomId' in params && params.roomId) {\n\t\treturn Team.getOneByRoomId(params.roomId, { projection: { type: 1, roomId: 1 } });\n\t}\n\treturn null;\n};\n\n// This should accept a teamId, filter (search by name on rooms collection) and sort/pagination\n// should return a list of rooms/discussions from the team. the discussions will only be returned from the main room\nAPI.v1.addRoute(\n\t'teams.listChildren',\n\t{ authRequired: true, validateParams: isTeamsListChildrenProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst { filter, type } = this.queryParams;\n\n\t\t\tconst team = await getTeamByIdOrNameOrParentRoom(this.queryParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst data = await Team.listChildren(this.userId, team, filter, type, sort, offset, count);\n\n\t\t\treturn API.v1.success({ ...data, offset, count });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.members',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.OneOf(\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamId: String,\n\t\t\t\t\t}),\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamName: String,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tstatus: Match.Maybe([String]),\n\t\t\t\t\tusername: Match.Maybe(String),\n\t\t\t\t\tname: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { status, username, name } = this.queryParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.queryParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tconst canSeeAllMembers = await hasPermissionAsync(this.userId, 'view-all-teams', team.roomId);\n\n\t\t\tconst query = {\n\t\t\t\tusername: username ? new RegExp(escapeRegExp(username), 'i') : undefined,\n\t\t\t\tname: name ? new RegExp(escapeRegExp(name), 'i') : undefined,\n\t\t\t\tstatus: status ? { $in: status as UserStatus[] } : undefined,\n\t\t\t};\n\n\t\t\tconst { records, total } = await Team.members(this.userId, team._id, canSeeAllMembers, { offset, count }, query);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tmembers: records,\n\t\t\t\ttotal,\n\t\t\t\tcount: records.length,\n\t\t\t\toffset,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.addMembers',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsAddMembersProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\t\t\tconst { members } = bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasAtLeastOnePermissionAsync(this.userId, ['add-team-member', 'edit-team-member'], team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tawait Team.addMembers(this.userId, team._id, members);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.updateMember',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsUpdateMemberProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\t\t\tconst { member } = bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasAtLeastOnePermissionAsync(this.userId, ['edit-team-member'], team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tawait Team.updateMember(team._id, member);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.removeMember',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsRemoveMemberProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\t\t\tconst { userId, rooms } = bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasAtLeastOnePermissionAsync(this.userId, ['edit-team-member'], team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst user = await Users.findOneActiveById(userId, {});\n\t\t\tif (!user) {\n\t\t\t\treturn API.v1.failure('invalid-user');\n\t\t\t}\n\n\t\t\tif (!(await Team.removeMembers(this.userId, team._id, [{ userId }]))) {\n\t\t\t\treturn API.v1.failure();\n\t\t\t}\n\n\t\t\tif (rooms?.length) {\n\t\t\t\tconst roomsFromTeam: string[] = await Team.getMatchingTeamRooms(team._id, rooms);\n\n\t\t\t\tawait Promise.all(\n\t\t\t\t\troomsFromTeam.map((rid) =>\n\t\t\t\t\t\tremoveUserFromRoom(rid, user, {\n\t\t\t\t\t\t\tbyUser: this.user,\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.leave',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsLeaveProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { rooms = [] } = this.bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tawait Team.removeMembers(this.userId, team._id, [\n\t\t\t\t{\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t},\n\t\t\t]);\n\n\t\t\tif (rooms.length) {\n\t\t\t\tconst roomsFromTeam: string[] = await Team.getMatchingTeamRooms(team._id, rooms);\n\t\t\t\tawait Promise.all(roomsFromTeam.map((rid) => removeUserFromRoom(rid, this.user)));\n\t\t\t}\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.info',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.OneOf(\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamId: String,\n\t\t\t\t\t}),\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamName: String,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tconst teamInfo = await getTeamByIdOrName(this.queryParams);\n\t\t\tif (!teamInfo) {\n\t\t\t\treturn API.v1.failure('Team not found');\n\t\t\t}\n\n\t\t\tconst room = await Rooms.findOneById(teamInfo.roomId);\n\n\t\t\tif (!room) {\n\t\t\t\treturn API.v1.failure('Room not found');\n\t\t\t}\n\n\t\t\tconst canViewInfo =\n\t\t\t\t(await canAccessRoomAsync(room, { _id: this.userId })) || (await hasPermissionAsync(this.userId, 'view-all-teams'));\n\n\t\t\tif (!canViewInfo) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\treturn API.v1.success({ teamInfo });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.delete',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsDeleteProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { roomsToRemove = [] } = this.bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'delete-team', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst rooms: string[] = await Team.getMatchingTeamRooms(team._id, roomsToRemove);\n\n\t\t\t// If we got a list of rooms to delete along with the team, remove them first\n\t\t\tif (rooms.length) {\n\t\t\t\tfor await (const room of rooms) {\n\t\t\t\t\tawait eraseRoom(room, this.userId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Move every other room back to the workspace\n\t\t\tawait Team.unsetTeamIdOfRooms(this.userId, team._id);\n\n\t\t\t// Remove the team's main room\n\t\t\tawait eraseRoom(team.roomId, this.userId);\n\n\t\t\t// Delete all team memberships\n\t\t\tawait Team.removeAllMembersFromTeam(team._id);\n\n\t\t\t// And finally delete the team itself\n\t\t\tawait Team.deleteById(team._id);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.autocomplete',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tname: String,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { name } = this.queryParams;\n\n\t\t\tconst teams = await Team.autocomplete(this.userId, name);\n\n\t\t\treturn API.v1.success({ teams });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.update',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsUpdateProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { data } = this.bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'edit-team', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tawait Team.update(this.userId, team._id, data);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    let Team;\n    module.link(\"@rocket.chat/core-services\", {\n      Team(v) {\n        Team = v;\n      }\n    }, 0);\n    let TEAM_TYPE, isValidSidepanel;\n    module.link(\"@rocket.chat/core-typings\", {\n      TEAM_TYPE(v) {\n        TEAM_TYPE = v;\n      },\n      isValidSidepanel(v) {\n        isValidSidepanel = v;\n      }\n    }, 1);\n    let Users, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 2);\n    let isTeamsConvertToChannelProps, isTeamsRemoveRoomProps, isTeamsUpdateMemberProps, isTeamsRemoveMemberProps, isTeamsAddMembersProps, isTeamsDeleteProps, isTeamsLeaveProps, isTeamsUpdateProps, isTeamsListChildrenProps;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isTeamsConvertToChannelProps(v) {\n        isTeamsConvertToChannelProps = v;\n      },\n      isTeamsRemoveRoomProps(v) {\n        isTeamsRemoveRoomProps = v;\n      },\n      isTeamsUpdateMemberProps(v) {\n        isTeamsUpdateMemberProps = v;\n      },\n      isTeamsRemoveMemberProps(v) {\n        isTeamsRemoveMemberProps = v;\n      },\n      isTeamsAddMembersProps(v) {\n        isTeamsAddMembersProps = v;\n      },\n      isTeamsDeleteProps(v) {\n        isTeamsDeleteProps = v;\n      },\n      isTeamsLeaveProps(v) {\n        isTeamsLeaveProps = v;\n      },\n      isTeamsUpdateProps(v) {\n        isTeamsUpdateProps = v;\n      },\n      isTeamsListChildrenProps(v) {\n        isTeamsListChildrenProps = v;\n      }\n    }, 3);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 4);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 5);\n    let eraseRoom;\n    module.link(\"../../../../server/lib/eraseRoom\", {\n      eraseRoom(v) {\n        eraseRoom = v;\n      }\n    }, 6);\n    let canAccessRoomAsync;\n    module.link(\"../../../authorization/server\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      }\n    }, 7);\n    let hasPermissionAsync, hasAtLeastOnePermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      },\n      hasAtLeastOnePermissionAsync(v) {\n        hasAtLeastOnePermissionAsync = v;\n      }\n    }, 8);\n    let removeUserFromRoom;\n    module.link(\"../../../lib/server/functions/removeUserFromRoom\", {\n      removeUserFromRoom(v) {\n        removeUserFromRoom = v;\n      }\n    }, 9);\n    let API;\n    module.link(\"../api\", {\n      API(v) {\n        API = v;\n      }\n    }, 10);\n    let getPaginationItems;\n    module.link(\"../helpers/getPaginationItems\", {\n      getPaginationItems(v) {\n        getPaginationItems = v;\n      }\n    }, 11);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('teams.list', {\n      authRequired: true\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort,\n          query\n        } = await this.parseJsonQuery();\n        const {\n          records,\n          total\n        } = await Team.list(this.userId, {\n          offset,\n          count\n        }, {\n          sort,\n          query\n        });\n        return API.v1.success({\n          teams: records,\n          total,\n          count: records.length,\n          offset\n        });\n      }\n    });\n    API.v1.addRoute('teams.listAll', {\n      authRequired: true,\n      permissionsRequired: ['view-all-teams']\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          records,\n          total\n        } = await Team.listAll({\n          offset,\n          count\n        });\n        return API.v1.success({\n          teams: records,\n          total,\n          count: records.length,\n          offset\n        });\n      }\n    });\n    API.v1.addRoute('teams.create', {\n      authRequired: true,\n      permissionsRequired: ['create-team']\n    }, {\n      async post() {\n        check(this.bodyParams, Match.ObjectIncluding({\n          name: String,\n          type: Match.OneOf(TEAM_TYPE.PRIVATE, TEAM_TYPE.PUBLIC),\n          members: Match.Maybe([String]),\n          room: Match.Maybe(Match.Any),\n          owner: Match.Maybe(String)\n        }));\n        const {\n          name,\n          type,\n          members,\n          room,\n          owner,\n          sidepanel\n        } = this.bodyParams;\n        if (sidepanel !== null && sidepanel !== void 0 && sidepanel.items && !isValidSidepanel(sidepanel)) {\n          throw new Error('error-invalid-sidepanel');\n        }\n        const team = await Team.create(this.userId, {\n          team: {\n            name,\n            type\n          },\n          room,\n          members,\n          owner,\n          sidepanel\n        });\n        return API.v1.success({\n          team\n        });\n      }\n    });\n    const getTeamByIdOrName = async params => {\n      if ('teamId' in params && params.teamId) {\n        return Team.getOneById(params.teamId);\n      }\n      if ('teamName' in params && params.teamName) {\n        return Team.getOneByName(params.teamName);\n      }\n      return null;\n    };\n    API.v1.addRoute('teams.convertToChannel', {\n      authRequired: true,\n      validateParams: isTeamsConvertToChannelProps\n    }, {\n      async post() {\n        const {\n          roomsToRemove = []\n        } = this.bodyParams;\n        const team = await getTeamByIdOrName(this.bodyParams);\n        if (!team) {\n          return API.v1.failure('team-does-not-exist');\n        }\n        if (!(await hasPermissionAsync(this.userId, 'convert-team', team.roomId))) {\n          return API.v1.unauthorized();\n        }\n        const rooms = await Team.getMatchingTeamRooms(team._id, roomsToRemove);\n        if (rooms.length) {\n          var _iteratorAbruptCompletion = false;\n          var _didIteratorError = false;\n          var _iteratorError;\n          try {\n            for (var _iterator = _asyncIterator(rooms), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n              const room = _step.value;\n              {\n                await eraseRoom(room, this.userId);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (_iteratorAbruptCompletion && _iterator.return != null) {\n                await _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n        await Promise.all([Team.unsetTeamIdOfRooms(this.userId, team._id), Team.removeAllMembersFromTeam(team._id)]);\n        await Team.deleteById(team._id);\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('teams.addRooms', {\n      authRequired: true\n    }, {\n      async post() {\n        check(this.bodyParams, Match.OneOf(Match.ObjectIncluding({\n          teamId: String,\n          rooms: [String]\n        }), Match.ObjectIncluding({\n          teamName: String,\n          rooms: [String]\n        })));\n        const team = await getTeamByIdOrName(this.bodyParams);\n        if (!team) {\n          return API.v1.failure('team-does-not-exist');\n        }\n        if (!(await hasPermissionAsync(this.userId, 'move-room-to-team', team.roomId))) {\n          return API.v1.unauthorized('error-no-permission-team-channel');\n        }\n        const {\n          rooms\n        } = this.bodyParams;\n        const validRooms = await Team.addRooms(this.userId, rooms, team._id);\n        return API.v1.success({\n          rooms: validRooms\n        });\n      }\n    });\n    API.v1.addRoute('teams.removeRoom', {\n      authRequired: true,\n      validateParams: isTeamsRemoveRoomProps\n    }, {\n      async post() {\n        const team = await getTeamByIdOrName(this.bodyParams);\n        if (!team) {\n          return API.v1.failure('team-does-not-exist');\n        }\n        if (!(await hasPermissionAsync(this.userId, 'remove-team-channel', team.roomId))) {\n          return API.v1.unauthorized();\n        }\n        const canRemoveAny = !!(await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId));\n        const {\n          roomId\n        } = this.bodyParams;\n        const room = await Team.removeRoom(this.userId, roomId, team._id, canRemoveAny);\n        return API.v1.success({\n          room\n        });\n      }\n    });\n    API.v1.addRoute('teams.updateRoom', {\n      authRequired: true\n    }, {\n      async post() {\n        check(this.bodyParams, Match.ObjectIncluding({\n          roomId: String,\n          isDefault: Boolean\n        }));\n        const {\n          roomId,\n          isDefault\n        } = this.bodyParams;\n        const team = await Team.getOneByRoomId(roomId);\n        if (!team) {\n          return API.v1.failure('team-does-not-exist');\n        }\n        if (!(await hasPermissionAsync(this.userId, 'edit-team-channel', team.roomId))) {\n          return API.v1.unauthorized();\n        }\n        const canUpdateAny = !!(await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId));\n        const room = await Team.updateRoom(this.userId, roomId, isDefault, canUpdateAny);\n        return API.v1.success({\n          room\n        });\n      }\n    });\n    API.v1.addRoute('teams.listRooms', {\n      authRequired: true\n    }, {\n      async get() {\n        check(this.queryParams, Match.OneOf(Match.ObjectIncluding({\n          teamId: String\n        }), Match.ObjectIncluding({\n          teamName: String\n        })));\n        check(this.queryParams, Match.ObjectIncluding({\n          filter: Match.Maybe(String),\n          type: Match.Maybe(String),\n          offset: Match.Maybe(String),\n          count: Match.Maybe(String)\n        }));\n        const {\n          filter,\n          type\n        } = this.queryParams;\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const team = await getTeamByIdOrName(this.queryParams);\n        if (!team) {\n          return API.v1.failure('team-does-not-exist');\n        }\n        const allowPrivateTeam = await hasPermissionAsync(this.userId, 'view-all-teams', team.roomId);\n        const getAllRooms = await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId);\n        const listFilter = {\n          name: filter !== null && filter !== void 0 ? filter : undefined,\n          isDefault: type === 'autoJoin',\n          getAllRooms,\n          allowPrivateTeam\n        };\n        const {\n          records,\n          total\n        } = await Team.listRooms(this.userId, team._id, listFilter, {\n          offset,\n          count\n        });\n        return API.v1.success({\n          rooms: records,\n          total,\n          count: records.length,\n          offset\n        });\n      }\n    });\n    API.v1.addRoute('teams.listRoomsOfUser', {\n      authRequired: true\n    }, {\n      async get() {\n        check(this.queryParams, Match.OneOf(Match.ObjectIncluding({\n          teamId: String\n        }), Match.ObjectIncluding({\n          teamName: String\n        })));\n        check(this.queryParams, Match.ObjectIncluding({\n          userId: String,\n          canUserDelete: Match.Maybe(String),\n          offset: Match.Maybe(String),\n          count: Match.Maybe(String)\n        }));\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const team = await getTeamByIdOrName(this.queryParams);\n        if (!team) {\n          return API.v1.failure('team-does-not-exist');\n        }\n        const allowPrivateTeam = await hasPermissionAsync(this.userId, 'view-all-teams', team.roomId);\n        const {\n          userId,\n          canUserDelete\n        } = this.queryParams;\n        if (!(this.userId === userId || (await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId)))) {\n          return API.v1.unauthorized();\n        }\n        const booleanCanUserDelete = canUserDelete === 'true';\n        const {\n          records,\n          total\n        } = await Team.listRoomsOfUser(this.userId, team._id, userId, allowPrivateTeam, booleanCanUserDelete, {\n          offset,\n          count\n        });\n        return API.v1.success({\n          rooms: records,\n          total,\n          count: records.length,\n          offset: 0\n        });\n      }\n    });\n    const getTeamByIdOrNameOrParentRoom = async params => {\n      if ('teamId' in params && params.teamId) {\n        return Team.getOneById(params.teamId, {\n          projection: {\n            type: 1,\n            roomId: 1\n          }\n        });\n      }\n      if ('teamName' in params && params.teamName) {\n        return Team.getOneByName(params.teamName, {\n          projection: {\n            type: 1,\n            roomId: 1\n          }\n        });\n      }\n      if ('roomId' in params && params.roomId) {\n        return Team.getOneByRoomId(params.roomId, {\n          projection: {\n            type: 1,\n            roomId: 1\n          }\n        });\n      }\n      return null;\n    };\n    // This should accept a teamId, filter (search by name on rooms collection) and sort/pagination\n    // should return a list of rooms/discussions from the team. the discussions will only be returned from the main room\n    API.v1.addRoute('teams.listChildren', {\n      authRequired: true,\n      validateParams: isTeamsListChildrenProps\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort\n        } = await this.parseJsonQuery();\n        const {\n          filter,\n          type\n        } = this.queryParams;\n        const team = await getTeamByIdOrNameOrParentRoom(this.queryParams);\n        if (!team) {\n          return API.v1.notFound();\n        }\n        const data = await Team.listChildren(this.userId, team, filter, type, sort, offset, count);\n        return API.v1.success(_objectSpread(_objectSpread({}, data), {}, {\n          offset,\n          count\n        }));\n      }\n    });\n    API.v1.addRoute('teams.members', {\n      authRequired: true\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        check(this.queryParams, Match.OneOf(Match.ObjectIncluding({\n          teamId: String\n        }), Match.ObjectIncluding({\n          teamName: String\n        })));\n        check(this.queryParams, Match.ObjectIncluding({\n          status: Match.Maybe([String]),\n          username: Match.Maybe(String),\n          name: Match.Maybe(String)\n        }));\n        const {\n          status,\n          username,\n          name\n        } = this.queryParams;\n        const team = await getTeamByIdOrName(this.queryParams);\n        if (!team) {\n          return API.v1.failure('team-does-not-exist');\n        }\n        const canSeeAllMembers = await hasPermissionAsync(this.userId, 'view-all-teams', team.roomId);\n        const query = {\n          username: username ? new RegExp(escapeRegExp(username), 'i') : undefined,\n          name: name ? new RegExp(escapeRegExp(name), 'i') : undefined,\n          status: status ? {\n            $in: status\n          } : undefined\n        };\n        const {\n          records,\n          total\n        } = await Team.members(this.userId, team._id, canSeeAllMembers, {\n          offset,\n          count\n        }, query);\n        return API.v1.success({\n          members: records,\n          total,\n          count: records.length,\n          offset\n        });\n      }\n    });\n    API.v1.addRoute('teams.addMembers', {\n      authRequired: true,\n      validateParams: isTeamsAddMembersProps\n    }, {\n      async post() {\n        const {\n          bodyParams\n        } = this;\n        const {\n          members\n        } = bodyParams;\n        const team = await getTeamByIdOrName(this.bodyParams);\n        if (!team) {\n          return API.v1.failure('team-does-not-exist');\n        }\n        if (!(await hasAtLeastOnePermissionAsync(this.userId, ['add-team-member', 'edit-team-member'], team.roomId))) {\n          return API.v1.unauthorized();\n        }\n        await Team.addMembers(this.userId, team._id, members);\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('teams.updateMember', {\n      authRequired: true,\n      validateParams: isTeamsUpdateMemberProps\n    }, {\n      async post() {\n        const {\n          bodyParams\n        } = this;\n        const {\n          member\n        } = bodyParams;\n        const team = await getTeamByIdOrName(this.bodyParams);\n        if (!team) {\n          return API.v1.failure('team-does-not-exist');\n        }\n        if (!(await hasAtLeastOnePermissionAsync(this.userId, ['edit-team-member'], team.roomId))) {\n          return API.v1.unauthorized();\n        }\n        await Team.updateMember(team._id, member);\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('teams.removeMember', {\n      authRequired: true,\n      validateParams: isTeamsRemoveMemberProps\n    }, {\n      async post() {\n        const {\n          bodyParams\n        } = this;\n        const {\n          userId,\n          rooms\n        } = bodyParams;\n        const team = await getTeamByIdOrName(this.bodyParams);\n        if (!team) {\n          return API.v1.failure('team-does-not-exist');\n        }\n        if (!(await hasAtLeastOnePermissionAsync(this.userId, ['edit-team-member'], team.roomId))) {\n          return API.v1.unauthorized();\n        }\n        const user = await Users.findOneActiveById(userId, {});\n        if (!user) {\n          return API.v1.failure('invalid-user');\n        }\n        if (!(await Team.removeMembers(this.userId, team._id, [{\n          userId\n        }]))) {\n          return API.v1.failure();\n        }\n        if (rooms !== null && rooms !== void 0 && rooms.length) {\n          const roomsFromTeam = await Team.getMatchingTeamRooms(team._id, rooms);\n          await Promise.all(roomsFromTeam.map(rid => removeUserFromRoom(rid, user, {\n            byUser: this.user\n          })));\n        }\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('teams.leave', {\n      authRequired: true,\n      validateParams: isTeamsLeaveProps\n    }, {\n      async post() {\n        const {\n          rooms = []\n        } = this.bodyParams;\n        const team = await getTeamByIdOrName(this.bodyParams);\n        if (!team) {\n          return API.v1.failure('team-does-not-exist');\n        }\n        await Team.removeMembers(this.userId, team._id, [{\n          userId: this.userId\n        }]);\n        if (rooms.length) {\n          const roomsFromTeam = await Team.getMatchingTeamRooms(team._id, rooms);\n          await Promise.all(roomsFromTeam.map(rid => removeUserFromRoom(rid, this.user)));\n        }\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('teams.info', {\n      authRequired: true\n    }, {\n      async get() {\n        check(this.queryParams, Match.OneOf(Match.ObjectIncluding({\n          teamId: String\n        }), Match.ObjectIncluding({\n          teamName: String\n        })));\n        const teamInfo = await getTeamByIdOrName(this.queryParams);\n        if (!teamInfo) {\n          return API.v1.failure('Team not found');\n        }\n        const room = await Rooms.findOneById(teamInfo.roomId);\n        if (!room) {\n          return API.v1.failure('Room not found');\n        }\n        const canViewInfo = (await canAccessRoomAsync(room, {\n          _id: this.userId\n        })) || (await hasPermissionAsync(this.userId, 'view-all-teams'));\n        if (!canViewInfo) {\n          return API.v1.unauthorized();\n        }\n        return API.v1.success({\n          teamInfo\n        });\n      }\n    });\n    API.v1.addRoute('teams.delete', {\n      authRequired: true,\n      validateParams: isTeamsDeleteProps\n    }, {\n      async post() {\n        const {\n          roomsToRemove = []\n        } = this.bodyParams;\n        const team = await getTeamByIdOrName(this.bodyParams);\n        if (!team) {\n          return API.v1.failure('team-does-not-exist');\n        }\n        if (!(await hasPermissionAsync(this.userId, 'delete-team', team.roomId))) {\n          return API.v1.unauthorized();\n        }\n        const rooms = await Team.getMatchingTeamRooms(team._id, roomsToRemove);\n        // If we got a list of rooms to delete along with the team, remove them first\n        if (rooms.length) {\n          var _iteratorAbruptCompletion2 = false;\n          var _didIteratorError2 = false;\n          var _iteratorError2;\n          try {\n            for (var _iterator2 = _asyncIterator(rooms), _step2; _iteratorAbruptCompletion2 = !(_step2 = await _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n              const room = _step2.value;\n              {\n                await eraseRoom(room, this.userId);\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n                await _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n        // Move every other room back to the workspace\n        await Team.unsetTeamIdOfRooms(this.userId, team._id);\n        // Remove the team's main room\n        await eraseRoom(team.roomId, this.userId);\n        // Delete all team memberships\n        await Team.removeAllMembersFromTeam(team._id);\n        // And finally delete the team itself\n        await Team.deleteById(team._id);\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('teams.autocomplete', {\n      authRequired: true\n    }, {\n      async get() {\n        check(this.queryParams, Match.ObjectIncluding({\n          name: String\n        }));\n        const {\n          name\n        } = this.queryParams;\n        const teams = await Team.autocomplete(this.userId, name);\n        return API.v1.success({\n          teams\n        });\n      }\n    });\n    API.v1.addRoute('teams.update', {\n      authRequired: true,\n      validateParams: isTeamsUpdateProps\n    }, {\n      async post() {\n        const {\n          data\n        } = this.bodyParams;\n        const team = await getTeamByIdOrName(this.bodyParams);\n        if (!team) {\n          return API.v1.failure('team-does-not-exist');\n        }\n        if (!(await hasPermissionAsync(this.userId, 'edit-team', team.roomId))) {\n          return API.v1.unauthorized();\n        }\n        await Team.update(this.userId, team._id, data);\n        return API.v1.success();\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","Team","TEAM_TYPE","isValidSidepanel","Users","Rooms","isTeamsConvertToChannelProps","isTeamsRemoveRoomProps","isTeamsUpdateMemberProps","isTeamsRemoveMemberProps","isTeamsAddMembersProps","isTeamsDeleteProps","isTeamsLeaveProps","isTeamsUpdateProps","isTeamsListChildrenProps","escapeRegExp","Match","check","eraseRoom","canAccessRoomAsync","hasPermissionAsync","hasAtLeastOnePermissionAsync","removeUserFromRoom","API","getPaginationItems","__reifyWaitForDeps__","v1","addRoute","authRequired","get","offset","count","queryParams","sort","query","parseJsonQuery","records","total","list","userId","success","teams","length","permissionsRequired","listAll","post","bodyParams","ObjectIncluding","name","String","type","OneOf","PRIVATE","PUBLIC","members","Maybe","room","Any","owner","sidepanel","items","Error","team","create","getTeamByIdOrName","params","teamId","getOneById","teamName","getOneByName","validateParams","roomsToRemove","failure","roomId","unauthorized","rooms","getMatchingTeamRooms","_id","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","value","err","return","Promise","all","unsetTeamIdOfRooms","removeAllMembersFromTeam","deleteById","validRooms","addRooms","canRemoveAny","removeRoom","isDefault","Boolean","getOneByRoomId","canUpdateAny","updateRoom","filter","allowPrivateTeam","getAllRooms","listFilter","undefined","listRooms","canUserDelete","booleanCanUserDelete","listRoomsOfUser","getTeamByIdOrNameOrParentRoom","projection","notFound","data","listChildren","status","username","canSeeAllMembers","RegExp","$in","addMembers","member","updateMember","user","findOneActiveById","removeMembers","roomsFromTeam","map","rid","byUser","teamInfo","findOneById","canViewInfo","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","autocomplete","update","__reify_async_result__","_reifyError","self","async"],"sources":["app/api/server/v1/teams.ts"],"sourcesContent":["import { Team } from '@rocket.chat/core-services';\nimport type { ITeam, UserStatus } from '@rocket.chat/core-typings';\nimport { TEAM_TYPE, isValidSidepanel } from '@rocket.chat/core-typings';\nimport { Users, Rooms } from '@rocket.chat/models';\nimport {\n\tisTeamsConvertToChannelProps,\n\tisTeamsRemoveRoomProps,\n\tisTeamsUpdateMemberProps,\n\tisTeamsRemoveMemberProps,\n\tisTeamsAddMembersProps,\n\tisTeamsDeleteProps,\n\tisTeamsLeaveProps,\n\tisTeamsUpdateProps,\n\tisTeamsListChildrenProps,\n} from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { Match, check } from 'meteor/check';\n\nimport { eraseRoom } from '../../../../server/lib/eraseRoom';\nimport { canAccessRoomAsync } from '../../../authorization/server';\nimport { hasPermissionAsync, hasAtLeastOnePermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { removeUserFromRoom } from '../../../lib/server/functions/removeUserFromRoom';\nimport { API } from '../api';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\n\nAPI.v1.addRoute(\n\t'teams.list',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, query } = await this.parseJsonQuery();\n\n\t\t\tconst { records, total } = await Team.list(this.userId, { offset, count }, { sort, query });\n\n\t\t\treturn API.v1.success({\n\t\t\t\tteams: records,\n\t\t\t\ttotal,\n\t\t\t\tcount: records.length,\n\t\t\t\toffset,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.listAll',\n\t{ authRequired: true, permissionsRequired: ['view-all-teams'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\n\t\t\tconst { records, total } = await Team.listAll({ offset, count });\n\n\t\t\treturn API.v1.success({\n\t\t\t\tteams: records,\n\t\t\t\ttotal,\n\t\t\t\tcount: records.length,\n\t\t\t\toffset,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.create',\n\t{ authRequired: true, permissionsRequired: ['create-team'] },\n\t{\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tname: String,\n\t\t\t\t\ttype: Match.OneOf(TEAM_TYPE.PRIVATE, TEAM_TYPE.PUBLIC),\n\t\t\t\t\tmembers: Match.Maybe([String]),\n\t\t\t\t\troom: Match.Maybe(Match.Any),\n\t\t\t\t\towner: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { name, type, members, room, owner, sidepanel } = this.bodyParams;\n\n\t\t\tif (sidepanel?.items && !isValidSidepanel(sidepanel)) {\n\t\t\t\tthrow new Error('error-invalid-sidepanel');\n\t\t\t}\n\n\t\t\tconst team = await Team.create(this.userId, {\n\t\t\t\tteam: {\n\t\t\t\t\tname,\n\t\t\t\t\ttype,\n\t\t\t\t},\n\t\t\t\troom,\n\t\t\t\tmembers,\n\t\t\t\towner,\n\t\t\t\tsidepanel,\n\t\t\t});\n\n\t\t\treturn API.v1.success({ team });\n\t\t},\n\t},\n);\n\nconst getTeamByIdOrName = async (params: { teamId: string } | { teamName: string }): Promise<ITeam | null> => {\n\tif ('teamId' in params && params.teamId) {\n\t\treturn Team.getOneById<ITeam>(params.teamId);\n\t}\n\n\tif ('teamName' in params && params.teamName) {\n\t\treturn Team.getOneByName(params.teamName);\n\t}\n\n\treturn null;\n};\n\nAPI.v1.addRoute(\n\t'teams.convertToChannel',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsConvertToChannelProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { roomsToRemove = [] } = this.bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'convert-team', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst rooms = await Team.getMatchingTeamRooms(team._id, roomsToRemove);\n\n\t\t\tif (rooms.length) {\n\t\t\t\tfor await (const room of rooms) {\n\t\t\t\t\tawait eraseRoom(room, this.userId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait Promise.all([Team.unsetTeamIdOfRooms(this.userId, team._id), Team.removeAllMembersFromTeam(team._id)]);\n\n\t\t\tawait Team.deleteById(team._id);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.addRooms',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.OneOf(\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamId: String,\n\t\t\t\t\t\trooms: [String] as [StringConstructor],\n\t\t\t\t\t}),\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamName: String,\n\t\t\t\t\t\trooms: [String] as [StringConstructor],\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'move-room-to-team', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized('error-no-permission-team-channel');\n\t\t\t}\n\n\t\t\tconst { rooms } = this.bodyParams;\n\n\t\t\tconst validRooms = await Team.addRooms(this.userId, rooms, team._id);\n\n\t\t\treturn API.v1.success({ rooms: validRooms });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.removeRoom',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsRemoveRoomProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'remove-team-channel', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst canRemoveAny = !!(await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId));\n\n\t\t\tconst { roomId } = this.bodyParams;\n\n\t\t\tconst room = await Team.removeRoom(this.userId, roomId, team._id, canRemoveAny);\n\n\t\t\treturn API.v1.success({ room });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.updateRoom',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\troomId: String,\n\t\t\t\t\tisDefault: Boolean,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { roomId, isDefault } = this.bodyParams;\n\n\t\t\tconst team = await Team.getOneByRoomId(roomId);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'edit-team-channel', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tconst canUpdateAny = !!(await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId));\n\n\t\t\tconst room = await Team.updateRoom(this.userId, roomId, isDefault, canUpdateAny);\n\n\t\t\treturn API.v1.success({ room });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.listRooms',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.OneOf(\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamId: String,\n\t\t\t\t\t}),\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamName: String,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tfilter: Match.Maybe(String),\n\t\t\t\t\ttype: Match.Maybe(String),\n\t\t\t\t\toffset: Match.Maybe(String),\n\t\t\t\t\tcount: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { filter, type } = this.queryParams;\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\n\t\t\tconst team = await getTeamByIdOrName(this.queryParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tconst allowPrivateTeam: boolean = await hasPermissionAsync(this.userId, 'view-all-teams', team.roomId);\n\n\t\t\tconst getAllRooms = await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId);\n\n\t\t\tconst listFilter = {\n\t\t\t\tname: filter ?? undefined,\n\t\t\t\tisDefault: type === 'autoJoin',\n\t\t\t\tgetAllRooms,\n\t\t\t\tallowPrivateTeam,\n\t\t\t};\n\n\t\t\tconst { records, total } = await Team.listRooms(this.userId, team._id, listFilter, {\n\t\t\t\toffset,\n\t\t\t\tcount,\n\t\t\t});\n\n\t\t\treturn API.v1.success({\n\t\t\t\trooms: records,\n\t\t\t\ttotal,\n\t\t\t\tcount: records.length,\n\t\t\t\toffset,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.listRoomsOfUser',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.OneOf(\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamId: String,\n\t\t\t\t\t}),\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamName: String,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tuserId: String,\n\t\t\t\t\tcanUserDelete: Match.Maybe(String),\n\t\t\t\t\toffset: Match.Maybe(String),\n\t\t\t\t\tcount: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\n\t\t\tconst team = await getTeamByIdOrName(this.queryParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tconst allowPrivateTeam = await hasPermissionAsync(this.userId, 'view-all-teams', team.roomId);\n\n\t\t\tconst { userId, canUserDelete } = this.queryParams;\n\n\t\t\tif (!(this.userId === userId || (await hasPermissionAsync(this.userId, 'view-all-team-channels', team.roomId)))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst booleanCanUserDelete = canUserDelete === 'true';\n\t\t\tconst { records, total } = await Team.listRoomsOfUser(this.userId, team._id, userId, allowPrivateTeam, booleanCanUserDelete, {\n\t\t\t\toffset,\n\t\t\t\tcount,\n\t\t\t});\n\n\t\t\treturn API.v1.success({\n\t\t\t\trooms: records,\n\t\t\t\ttotal,\n\t\t\t\tcount: records.length,\n\t\t\t\toffset: 0,\n\t\t\t});\n\t\t},\n\t},\n);\n\nconst getTeamByIdOrNameOrParentRoom = async (\n\tparams: { teamId: string } | { teamName: string } | { roomId: string },\n): Promise<Pick<ITeam, 'type' | 'roomId' | '_id'> | null> => {\n\tif ('teamId' in params && params.teamId) {\n\t\treturn Team.getOneById<ITeam>(params.teamId, { projection: { type: 1, roomId: 1 } });\n\t}\n\tif ('teamName' in params && params.teamName) {\n\t\treturn Team.getOneByName(params.teamName, { projection: { type: 1, roomId: 1 } });\n\t}\n\tif ('roomId' in params && params.roomId) {\n\t\treturn Team.getOneByRoomId(params.roomId, { projection: { type: 1, roomId: 1 } });\n\t}\n\treturn null;\n};\n\n// This should accept a teamId, filter (search by name on rooms collection) and sort/pagination\n// should return a list of rooms/discussions from the team. the discussions will only be returned from the main room\nAPI.v1.addRoute(\n\t'teams.listChildren',\n\t{ authRequired: true, validateParams: isTeamsListChildrenProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst { filter, type } = this.queryParams;\n\n\t\t\tconst team = await getTeamByIdOrNameOrParentRoom(this.queryParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst data = await Team.listChildren(this.userId, team, filter, type, sort, offset, count);\n\n\t\t\treturn API.v1.success({ ...data, offset, count });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.members',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.OneOf(\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamId: String,\n\t\t\t\t\t}),\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamName: String,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tstatus: Match.Maybe([String]),\n\t\t\t\t\tusername: Match.Maybe(String),\n\t\t\t\t\tname: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { status, username, name } = this.queryParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.queryParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tconst canSeeAllMembers = await hasPermissionAsync(this.userId, 'view-all-teams', team.roomId);\n\n\t\t\tconst query = {\n\t\t\t\tusername: username ? new RegExp(escapeRegExp(username), 'i') : undefined,\n\t\t\t\tname: name ? new RegExp(escapeRegExp(name), 'i') : undefined,\n\t\t\t\tstatus: status ? { $in: status as UserStatus[] } : undefined,\n\t\t\t};\n\n\t\t\tconst { records, total } = await Team.members(this.userId, team._id, canSeeAllMembers, { offset, count }, query);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tmembers: records,\n\t\t\t\ttotal,\n\t\t\t\tcount: records.length,\n\t\t\t\toffset,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.addMembers',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsAddMembersProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\t\t\tconst { members } = bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasAtLeastOnePermissionAsync(this.userId, ['add-team-member', 'edit-team-member'], team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tawait Team.addMembers(this.userId, team._id, members);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.updateMember',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsUpdateMemberProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\t\t\tconst { member } = bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasAtLeastOnePermissionAsync(this.userId, ['edit-team-member'], team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tawait Team.updateMember(team._id, member);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.removeMember',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsRemoveMemberProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\t\t\tconst { userId, rooms } = bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasAtLeastOnePermissionAsync(this.userId, ['edit-team-member'], team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst user = await Users.findOneActiveById(userId, {});\n\t\t\tif (!user) {\n\t\t\t\treturn API.v1.failure('invalid-user');\n\t\t\t}\n\n\t\t\tif (!(await Team.removeMembers(this.userId, team._id, [{ userId }]))) {\n\t\t\t\treturn API.v1.failure();\n\t\t\t}\n\n\t\t\tif (rooms?.length) {\n\t\t\t\tconst roomsFromTeam: string[] = await Team.getMatchingTeamRooms(team._id, rooms);\n\n\t\t\t\tawait Promise.all(\n\t\t\t\t\troomsFromTeam.map((rid) =>\n\t\t\t\t\t\tremoveUserFromRoom(rid, user, {\n\t\t\t\t\t\t\tbyUser: this.user,\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.leave',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsLeaveProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { rooms = [] } = this.bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tawait Team.removeMembers(this.userId, team._id, [\n\t\t\t\t{\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t},\n\t\t\t]);\n\n\t\t\tif (rooms.length) {\n\t\t\t\tconst roomsFromTeam: string[] = await Team.getMatchingTeamRooms(team._id, rooms);\n\t\t\t\tawait Promise.all(roomsFromTeam.map((rid) => removeUserFromRoom(rid, this.user)));\n\t\t\t}\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.info',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.OneOf(\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamId: String,\n\t\t\t\t\t}),\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tteamName: String,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tconst teamInfo = await getTeamByIdOrName(this.queryParams);\n\t\t\tif (!teamInfo) {\n\t\t\t\treturn API.v1.failure('Team not found');\n\t\t\t}\n\n\t\t\tconst room = await Rooms.findOneById(teamInfo.roomId);\n\n\t\t\tif (!room) {\n\t\t\t\treturn API.v1.failure('Room not found');\n\t\t\t}\n\n\t\t\tconst canViewInfo =\n\t\t\t\t(await canAccessRoomAsync(room, { _id: this.userId })) || (await hasPermissionAsync(this.userId, 'view-all-teams'));\n\n\t\t\tif (!canViewInfo) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\treturn API.v1.success({ teamInfo });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.delete',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsDeleteProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { roomsToRemove = [] } = this.bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'delete-team', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst rooms: string[] = await Team.getMatchingTeamRooms(team._id, roomsToRemove);\n\n\t\t\t// If we got a list of rooms to delete along with the team, remove them first\n\t\t\tif (rooms.length) {\n\t\t\t\tfor await (const room of rooms) {\n\t\t\t\t\tawait eraseRoom(room, this.userId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Move every other room back to the workspace\n\t\t\tawait Team.unsetTeamIdOfRooms(this.userId, team._id);\n\n\t\t\t// Remove the team's main room\n\t\t\tawait eraseRoom(team.roomId, this.userId);\n\n\t\t\t// Delete all team memberships\n\t\t\tawait Team.removeAllMembersFromTeam(team._id);\n\n\t\t\t// And finally delete the team itself\n\t\t\tawait Team.deleteById(team._id);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.autocomplete',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tname: String,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { name } = this.queryParams;\n\n\t\t\tconst teams = await Team.autocomplete(this.userId, name);\n\n\t\t\treturn API.v1.success({ teams });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'teams.update',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isTeamsUpdateProps,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { data } = this.bodyParams;\n\n\t\t\tconst team = await getTeamByIdOrName(this.bodyParams);\n\t\t\tif (!team) {\n\t\t\t\treturn API.v1.failure('team-does-not-exist');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'edit-team', team.roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tawait Team.update(this.userId, team._id, data);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"fba745d3a0519b2b09ee041fc9e9f1e61705f1da"}
