{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer-pending-avatars/server/PendingAvatarImporter.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/importer-pending-avatars/server/PendingAvatarImporter.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer-pending-avatars/server/PendingAvatarImporter.ts","inputSourceMap":{"version":3,"file":"app/importer-pending-avatars/server/PendingAvatarImporter.ts","sourceRoot":"","sources":["app/importer-pending-avatars/server/PendingAvatarImporter.ts"],"names":[],"mappings":"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","sourcesContent":["import { Users } from '@rocket.chat/models';\n\nimport { Importer, ProgressStep, Selection } from '../../importer/server';\nimport type { ImporterProgress } from '../../importer/server/classes/ImporterProgress';\nimport { setAvatarFromServiceWithValidation } from '../../lib/server/functions/setUserAvatar';\n\nexport class PendingAvatarImporter extends Importer {\n\tasync prepareFileCount() {\n\t\tthis.logger.debug('start preparing import operation');\n\t\tawait super.updateProgress(ProgressStep.PREPARING_STARTED);\n\n\t\tconst users = Users.findAllUsersWithPendingAvatar();\n\t\tconst fileCount = await users.count();\n\n\t\tif (fileCount === 0) {\n\t\t\tawait super.updateProgress(ProgressStep.DONE);\n\t\t\treturn 0;\n\t\t}\n\n\t\tawait this.updateRecord({ 'count.messages': fileCount, 'messagesstatus': null });\n\t\tawait this.addCountToTotal(fileCount);\n\n\t\tconst fileData = new Selection(this.info.name, [], [], fileCount);\n\t\tawait this.updateRecord({ fileData });\n\n\t\tawait super.updateProgress(ProgressStep.IMPORTING_FILES);\n\t\tsetImmediate(() => {\n\t\t\tvoid this.startImport(fileData);\n\t\t});\n\n\t\treturn fileCount;\n\t}\n\n\tasync startImport(importSelection: Selection): Promise<ImporterProgress> {\n\t\tconst pendingFileUserList = Users.findAllUsersWithPendingAvatar();\n\t\ttry {\n\t\t\tfor await (const user of pendingFileUserList) {\n\t\t\t\ttry {\n\t\t\t\t\tconst { _pendingAvatarUrl: url, name, _id } = user;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!url?.startsWith('http')) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait setAvatarFromServiceWithValidation(_id, url, undefined, 'url');\n\t\t\t\t\t\t\tawait Users.updateOne({ _id }, { $unset: { _pendingAvatarUrl: '' } });\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthis.logger.warn(`Failed to set ${name}'s avatar from url ${url}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tawait this.addCountCompleted(1);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logger.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// If the cursor expired, restart the method\n\t\t\tif (this.isCursorNotFoundError(error)) {\n\t\t\t\tthis.logger.info('CursorNotFound');\n\t\t\t\treturn this.startImport(importSelection);\n\t\t\t}\n\n\t\t\tawait super.updateProgress(ProgressStep.ERROR);\n\t\t\tthrow error;\n\t\t}\n\n\t\tawait super.updateProgress(ProgressStep.DONE);\n\t\treturn this.getProgress();\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer-pending-avatars/server/PendingAvatarImporter.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/importer-pending-avatars/server/PendingAvatarImporter.ts","inputSourceMap":{"version":3,"file":"app/importer-pending-avatars/server/PendingAvatarImporter.ts","sourceRoot":"","sources":["app/importer-pending-avatars/server/PendingAvatarImporter.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE5C,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAE1E,OAAO,EAAE,kCAAkC,EAAE,MAAM,0CAA0C,CAAC;AAE9F,MAAM,OAAO,qBAAsB,SAAQ,QAAQ;IAClD,KAAK,CAAC,gBAAgB;QACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;QACtD,MAAM,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAE3D,MAAM,KAAK,GAAG,KAAK,CAAC,6BAA6B,EAAE,CAAC;QACpD,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC;QAEtC,IAAI,SAAS,KAAK,CAAC,EAAE,CAAC;YACrB,MAAM,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAC9C,OAAO,CAAC,CAAC;QACV,CAAC;QAED,MAAM,IAAI,CAAC,YAAY,CAAC,EAAE,gBAAgB,EAAE,SAAS,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;QACjF,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAEtC,MAAM,QAAQ,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;QAClE,MAAM,IAAI,CAAC,YAAY,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;QAEtC,MAAM,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACzD,YAAY,CAAC,GAAG,EAAE;YACjB,KAAK,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,eAA0B;QAC3C,MAAM,mBAAmB,GAAG,KAAK,CAAC,6BAA6B,EAAE,CAAC;QAClE,IAAI,CAAC;YACJ,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,mBAAmB,EAAE,CAAC;gBAC9C,IAAI,CAAC;oBACJ,MAAM,EAAE,iBAAiB,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;oBAEnD,IAAI,CAAC;wBACJ,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC;4BAC9B,SAAS;wBACV,CAAC;wBAED,IAAI,CAAC;4BACJ,MAAM,kCAAkC,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;4BACrE,MAAM,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,iBAAiB,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;wBACvE,CAAC;wBAAC,OAAO,KAAK,EAAE,CAAC;4BAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,IAAI,sBAAsB,GAAG,EAAE,CAAC,CAAC;wBACpE,CAAC;oBACF,CAAC;4BAAS,CAAC;wBACV,MAAM,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;oBACjC,CAAC;gBACF,CAAC;gBAAC,OAAO,KAAK,EAAE,CAAC;oBAChB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC;YACF,CAAC;QACF,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,4CAA4C;YAC5C,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,EAAE,CAAC;gBACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnC,OAAO,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;YAC1C,CAAC;YAED,MAAM,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC/C,MAAM,KAAK,CAAC;QACb,CAAC;QAED,MAAM,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;IAC3B,CAAC;CACD","sourcesContent":["import { Users } from '@rocket.chat/models';\n\nimport { Importer, ProgressStep, Selection } from '../../importer/server';\nimport type { ImporterProgress } from '../../importer/server/classes/ImporterProgress';\nimport { setAvatarFromServiceWithValidation } from '../../lib/server/functions/setUserAvatar';\n\nexport class PendingAvatarImporter extends Importer {\n\tasync prepareFileCount() {\n\t\tthis.logger.debug('start preparing import operation');\n\t\tawait super.updateProgress(ProgressStep.PREPARING_STARTED);\n\n\t\tconst users = Users.findAllUsersWithPendingAvatar();\n\t\tconst fileCount = await users.count();\n\n\t\tif (fileCount === 0) {\n\t\t\tawait super.updateProgress(ProgressStep.DONE);\n\t\t\treturn 0;\n\t\t}\n\n\t\tawait this.updateRecord({ 'count.messages': fileCount, 'messagesstatus': null });\n\t\tawait this.addCountToTotal(fileCount);\n\n\t\tconst fileData = new Selection(this.info.name, [], [], fileCount);\n\t\tawait this.updateRecord({ fileData });\n\n\t\tawait super.updateProgress(ProgressStep.IMPORTING_FILES);\n\t\tsetImmediate(() => {\n\t\t\tvoid this.startImport(fileData);\n\t\t});\n\n\t\treturn fileCount;\n\t}\n\n\tasync startImport(importSelection: Selection): Promise<ImporterProgress> {\n\t\tconst pendingFileUserList = Users.findAllUsersWithPendingAvatar();\n\t\ttry {\n\t\t\tfor await (const user of pendingFileUserList) {\n\t\t\t\ttry {\n\t\t\t\t\tconst { _pendingAvatarUrl: url, name, _id } = user;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!url?.startsWith('http')) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait setAvatarFromServiceWithValidation(_id, url, undefined, 'url');\n\t\t\t\t\t\t\tawait Users.updateOne({ _id }, { $unset: { _pendingAvatarUrl: '' } });\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthis.logger.warn(`Failed to set ${name}'s avatar from url ${url}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tawait this.addCountCompleted(1);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logger.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// If the cursor expired, restart the method\n\t\t\tif (this.isCursorNotFoundError(error)) {\n\t\t\t\tthis.logger.info('CursorNotFound');\n\t\t\t\treturn this.startImport(importSelection);\n\t\t\t}\n\n\t\t\tawait super.updateProgress(ProgressStep.ERROR);\n\t\t\tthrow error;\n\t\t}\n\n\t\tawait super.updateProgress(ProgressStep.DONE);\n\t\treturn this.getProgress();\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      PendingAvatarImporter: () => PendingAvatarImporter\n    });\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let Importer, ProgressStep, Selection;\n    module.link(\"../../importer/server\", {\n      Importer(v) {\n        Importer = v;\n      },\n      ProgressStep(v) {\n        ProgressStep = v;\n      },\n      Selection(v) {\n        Selection = v;\n      }\n    }, 1);\n    let setAvatarFromServiceWithValidation;\n    module.link(\"../../lib/server/functions/setUserAvatar\", {\n      setAvatarFromServiceWithValidation(v) {\n        setAvatarFromServiceWithValidation = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class PendingAvatarImporter extends Importer {\n      async prepareFileCount() {\n        this.logger.debug('start preparing import operation');\n        await super.updateProgress(ProgressStep.PREPARING_STARTED);\n        const users = Users.findAllUsersWithPendingAvatar();\n        const fileCount = await users.count();\n        if (fileCount === 0) {\n          await super.updateProgress(ProgressStep.DONE);\n          return 0;\n        }\n        await this.updateRecord({\n          'count.messages': fileCount,\n          'messagesstatus': null\n        });\n        await this.addCountToTotal(fileCount);\n        const fileData = new Selection(this.info.name, [], [], fileCount);\n        await this.updateRecord({\n          fileData\n        });\n        await super.updateProgress(ProgressStep.IMPORTING_FILES);\n        setImmediate(() => {\n          void this.startImport(fileData);\n        });\n        return fileCount;\n      }\n      async startImport(importSelection) {\n        const pendingFileUserList = Users.findAllUsersWithPendingAvatar();\n        try {\n          var _iteratorAbruptCompletion = false;\n          var _didIteratorError = false;\n          var _iteratorError;\n          try {\n            for (var _iterator = _asyncIterator(pendingFileUserList), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n              const user = _step.value;\n              {\n                try {\n                  const {\n                    _pendingAvatarUrl: url,\n                    name,\n                    _id\n                  } = user;\n                  try {\n                    if (!(url !== null && url !== void 0 && url.startsWith('http'))) {\n                      continue;\n                    }\n                    try {\n                      await setAvatarFromServiceWithValidation(_id, url, undefined, 'url');\n                      await Users.updateOne({\n                        _id\n                      }, {\n                        $unset: {\n                          _pendingAvatarUrl: ''\n                        }\n                      });\n                    } catch (error) {\n                      this.logger.warn(\"Failed to set \".concat(name, \"'s avatar from url \").concat(url));\n                    }\n                  } finally {\n                    await this.addCountCompleted(1);\n                  }\n                } catch (error) {\n                  this.logger.error(error);\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (_iteratorAbruptCompletion && _iterator.return != null) {\n                await _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        } catch (error) {\n          // If the cursor expired, restart the method\n          if (this.isCursorNotFoundError(error)) {\n            this.logger.info('CursorNotFound');\n            return this.startImport(importSelection);\n          }\n          await super.updateProgress(ProgressStep.ERROR);\n          throw error;\n        }\n        await super.updateProgress(ProgressStep.DONE);\n        return this.getProgress();\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","PendingAvatarImporter","Users","Importer","ProgressStep","Selection","setAvatarFromServiceWithValidation","__reifyWaitForDeps__","prepareFileCount","logger","debug","updateProgress","PREPARING_STARTED","users","findAllUsersWithPendingAvatar","fileCount","count","DONE","updateRecord","addCountToTotal","fileData","info","name","IMPORTING_FILES","setImmediate","startImport","importSelection","pendingFileUserList","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","user","value","_pendingAvatarUrl","url","_id","startsWith","undefined","updateOne","$unset","error","warn","concat","addCountCompleted","err","return","isCursorNotFoundError","ERROR","getProgress","__reify_async_result__","_reifyError","self","async"],"sources":["app/importer-pending-avatars/server/PendingAvatarImporter.ts"],"sourcesContent":["import { Users } from '@rocket.chat/models';\n\nimport { Importer, ProgressStep, Selection } from '../../importer/server';\nimport type { ImporterProgress } from '../../importer/server/classes/ImporterProgress';\nimport { setAvatarFromServiceWithValidation } from '../../lib/server/functions/setUserAvatar';\n\nexport class PendingAvatarImporter extends Importer {\n\tasync prepareFileCount() {\n\t\tthis.logger.debug('start preparing import operation');\n\t\tawait super.updateProgress(ProgressStep.PREPARING_STARTED);\n\n\t\tconst users = Users.findAllUsersWithPendingAvatar();\n\t\tconst fileCount = await users.count();\n\n\t\tif (fileCount === 0) {\n\t\t\tawait super.updateProgress(ProgressStep.DONE);\n\t\t\treturn 0;\n\t\t}\n\n\t\tawait this.updateRecord({ 'count.messages': fileCount, 'messagesstatus': null });\n\t\tawait this.addCountToTotal(fileCount);\n\n\t\tconst fileData = new Selection(this.info.name, [], [], fileCount);\n\t\tawait this.updateRecord({ fileData });\n\n\t\tawait super.updateProgress(ProgressStep.IMPORTING_FILES);\n\t\tsetImmediate(() => {\n\t\t\tvoid this.startImport(fileData);\n\t\t});\n\n\t\treturn fileCount;\n\t}\n\n\tasync startImport(importSelection: Selection): Promise<ImporterProgress> {\n\t\tconst pendingFileUserList = Users.findAllUsersWithPendingAvatar();\n\t\ttry {\n\t\t\tfor await (const user of pendingFileUserList) {\n\t\t\t\ttry {\n\t\t\t\t\tconst { _pendingAvatarUrl: url, name, _id } = user;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!url?.startsWith('http')) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait setAvatarFromServiceWithValidation(_id, url, undefined, 'url');\n\t\t\t\t\t\t\tawait Users.updateOne({ _id }, { $unset: { _pendingAvatarUrl: '' } });\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthis.logger.warn(`Failed to set ${name}'s avatar from url ${url}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tawait this.addCountCompleted(1);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logger.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// If the cursor expired, restart the method\n\t\t\tif (this.isCursorNotFoundError(error)) {\n\t\t\t\tthis.logger.info('CursorNotFound');\n\t\t\t\treturn this.startImport(importSelection);\n\t\t\t}\n\n\t\t\tawait super.updateProgress(ProgressStep.ERROR);\n\t\t\tthrow error;\n\t\t}\n\n\t\tawait super.updateProgress(ProgressStep.DONE);\n\t\treturn this.getProgress();\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ce49f7b85cfd409528cb232cba59863d03d2174b"}
