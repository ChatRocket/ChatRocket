{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/rooms/roomTypes/direct.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/rooms/roomTypes/direct.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/rooms/roomTypes/direct.ts","inputSourceMap":{"version":3,"file":"client/lib/rooms/roomTypes/direct.ts","sourceRoot":"","sources":["client/lib/rooms/roomTypes/direct.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AtLeast, IRoom, ISubscription, IUser } from '@rocket.chat/core-typings';\nimport { isRoomFederated } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport type { Mongo } from 'meteor/mongo';\n\nimport { hasAtLeastOnePermission } from '../../../../app/authorization/client';\nimport { Subscriptions, Users, ChatRoom } from '../../../../app/models/client';\nimport { settings } from '../../../../app/settings/client';\nimport { getUserPreference } from '../../../../app/utils/client';\nimport { getAvatarURL } from '../../../../app/utils/client/getAvatarURL';\nimport { getUserAvatarURL } from '../../../../app/utils/client/getUserAvatarURL';\nimport type { IRoomTypeClientDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../../definition/IRoomTypeConfig';\nimport { getDirectMessageRoomType } from '../../../../lib/rooms/roomTypes/direct';\nimport * as Federation from '../../federation/Federation';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const DirectMessageRoomType = getDirectMessageRoomType(roomCoordinator);\n\nroomCoordinator.add(\n\t{\n\t\t...DirectMessageRoomType,\n\t\tlabel: 'Direct_Messages',\n\t},\n\t{\n\t\tallowRoomSettingChange(_room, setting) {\n\t\t\tif (isRoomFederated(_room as IRoom)) {\n\t\t\t\treturn Federation.isRoomSettingAllowed(_room, setting);\n\t\t\t}\n\t\t\tswitch (setting) {\n\t\t\t\tcase RoomSettingsEnum.TYPE:\n\t\t\t\tcase RoomSettingsEnum.NAME:\n\t\t\t\tcase RoomSettingsEnum.SYSTEM_MESSAGES:\n\t\t\t\tcase RoomSettingsEnum.DESCRIPTION:\n\t\t\t\tcase RoomSettingsEnum.READ_ONLY:\n\t\t\t\tcase RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n\t\t\t\tcase RoomSettingsEnum.ARCHIVE_OR_UNARCHIVE:\n\t\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\t\treturn false;\n\t\t\t\tcase RoomSettingsEnum.E2E:\n\t\t\t\t\treturn settings.get('E2E_Enable') === true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\n\t\tallowMemberAction(room, action, showingUserId, userSubscription) {\n\t\t\tif (isRoomFederated(room as IRoom)) {\n\t\t\t\treturn Federation.actionAllowed(room, action, showingUserId, userSubscription);\n\t\t\t}\n\t\t\tswitch (action) {\n\t\t\t\tcase RoomMemberActions.BLOCK:\n\t\t\t\t\treturn !this.isGroupChat(room);\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\troomName(roomData) {\n\t\t\tconst subscription = ((): { fname?: string; name?: string } | undefined => {\n\t\t\t\tif (roomData.fname || roomData.name) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfname: roomData.fname,\n\t\t\t\t\t\tname: roomData.name,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (!roomData._id) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\treturn Subscriptions.findOne({ rid: roomData._id });\n\t\t\t})();\n\n\t\t\tif (!subscription) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (settings.get('UI_Use_Real_Name') && subscription.fname) {\n\t\t\t\treturn subscription.fname;\n\t\t\t}\n\n\t\t\treturn subscription.name;\n\t\t},\n\n\t\tisGroupChat(room) {\n\t\t\treturn (room?.uids?.length || 0) > 2;\n\t\t},\n\n\t\tgetUiText(context) {\n\t\t\tswitch (context) {\n\t\t\t\tcase UiTextContext.HIDE_WARNING:\n\t\t\t\t\treturn 'Hide_Private_Warning';\n\t\t\t\tcase UiTextContext.LEAVE_WARNING:\n\t\t\t\t\treturn 'Leave_Private_Warning';\n\t\t\t\tdefault:\n\t\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\n\t\tcondition() {\n\t\t\tconst groupByType = getUserPreference(Meteor.userId(), 'sidebarGroupByType');\n\t\t\treturn groupByType && hasAtLeastOnePermission(['view-d-room', 'view-joined-room']);\n\t\t},\n\n\t\tgetAvatarPath(room) {\n\t\t\tif (!room) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\t// if coming from sidenav search\n\t\t\tif (room.name && room.avatarETag) {\n\t\t\t\treturn getUserAvatarURL(room.name, room.avatarETag);\n\t\t\t}\n\n\t\t\tif (this.isGroupChat(room)) {\n\t\t\t\treturn getAvatarURL({\n\t\t\t\t\tusername: (room.uids || []).length + (room.usernames || []).join(),\n\t\t\t\t\tcache: room.avatarETag,\n\t\t\t\t}) as string;\n\t\t\t}\n\n\t\t\tconst sub = Subscriptions.findOne({ rid: room._id }, { fields: { name: 1 } });\n\t\t\tif (sub?.name) {\n\t\t\t\tconst user = Users.findOne({ username: sub.name }, { fields: { username: 1, avatarETag: 1 } }) as IUser | undefined;\n\t\t\t\treturn getUserAvatarURL(user?.username || sub.name, user?.avatarETag);\n\t\t\t}\n\n\t\t\treturn getUserAvatarURL(room.name || this.roomName(room) || '');\n\t\t},\n\n\t\tgetIcon(room) {\n\t\t\tif (isRoomFederated(room)) {\n\t\t\t\treturn 'globe';\n\t\t\t}\n\n\t\t\tif (this.isGroupChat(room)) {\n\t\t\t\treturn 'balloon';\n\t\t\t}\n\n\t\t\treturn 'at';\n\t\t},\n\n\t\textractOpenRoomParams({ rid }) {\n\t\t\treturn { type: 'd', reference: rid };\n\t\t},\n\n\t\tfindRoom(identifier) {\n\t\t\tconst query: Mongo.Selector<ISubscription> = {\n\t\t\t\tt: 'd',\n\t\t\t\t$or: [{ name: identifier }, { rid: identifier }],\n\t\t\t};\n\n\t\t\tconst subscription = Subscriptions.findOne(query);\n\t\t\tif (subscription?.rid) {\n\t\t\t\treturn ChatRoom.findOne(subscription.rid);\n\t\t\t}\n\t\t},\n\t} as AtLeast<IRoomTypeClientDirectives, 'isGroupChat' | 'roomName'>,\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/rooms/roomTypes/direct.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/rooms/roomTypes/direct.ts","inputSourceMap":{"version":3,"file":"client/lib/rooms/roomTypes/direct.ts","sourceRoot":"","sources":["client/lib/rooms/roomTypes/direct.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AtLeast, IRoom, ISubscription, IUser } from '@rocket.chat/core-typings';\nimport { isRoomFederated } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport type { Mongo } from 'meteor/mongo';\n\nimport { hasAtLeastOnePermission } from '../../../../app/authorization/client';\nimport { Subscriptions, Users, ChatRoom } from '../../../../app/models/client';\nimport { settings } from '../../../../app/settings/client';\nimport { getUserPreference } from '../../../../app/utils/client';\nimport { getAvatarURL } from '../../../../app/utils/client/getAvatarURL';\nimport { getUserAvatarURL } from '../../../../app/utils/client/getUserAvatarURL';\nimport type { IRoomTypeClientDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../../definition/IRoomTypeConfig';\nimport { getDirectMessageRoomType } from '../../../../lib/rooms/roomTypes/direct';\nimport * as Federation from '../../federation/Federation';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const DirectMessageRoomType = getDirectMessageRoomType(roomCoordinator);\n\nroomCoordinator.add(\n\t{\n\t\t...DirectMessageRoomType,\n\t\tlabel: 'Direct_Messages',\n\t},\n\t{\n\t\tallowRoomSettingChange(_room, setting) {\n\t\t\tif (isRoomFederated(_room as IRoom)) {\n\t\t\t\treturn Federation.isRoomSettingAllowed(_room, setting);\n\t\t\t}\n\t\t\tswitch (setting) {\n\t\t\t\tcase RoomSettingsEnum.TYPE:\n\t\t\t\tcase RoomSettingsEnum.NAME:\n\t\t\t\tcase RoomSettingsEnum.SYSTEM_MESSAGES:\n\t\t\t\tcase RoomSettingsEnum.DESCRIPTION:\n\t\t\t\tcase RoomSettingsEnum.READ_ONLY:\n\t\t\t\tcase RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n\t\t\t\tcase RoomSettingsEnum.ARCHIVE_OR_UNARCHIVE:\n\t\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\t\treturn false;\n\t\t\t\tcase RoomSettingsEnum.E2E:\n\t\t\t\t\treturn settings.get('E2E_Enable') === true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\n\t\tallowMemberAction(room, action, showingUserId, userSubscription) {\n\t\t\tif (isRoomFederated(room as IRoom)) {\n\t\t\t\treturn Federation.actionAllowed(room, action, showingUserId, userSubscription);\n\t\t\t}\n\t\t\tswitch (action) {\n\t\t\t\tcase RoomMemberActions.BLOCK:\n\t\t\t\t\treturn !this.isGroupChat(room);\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\troomName(roomData) {\n\t\t\tconst subscription = ((): { fname?: string; name?: string } | undefined => {\n\t\t\t\tif (roomData.fname || roomData.name) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfname: roomData.fname,\n\t\t\t\t\t\tname: roomData.name,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (!roomData._id) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\treturn Subscriptions.findOne({ rid: roomData._id });\n\t\t\t})();\n\n\t\t\tif (!subscription) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (settings.get('UI_Use_Real_Name') && subscription.fname) {\n\t\t\t\treturn subscription.fname;\n\t\t\t}\n\n\t\t\treturn subscription.name;\n\t\t},\n\n\t\tisGroupChat(room) {\n\t\t\treturn (room?.uids?.length || 0) > 2;\n\t\t},\n\n\t\tgetUiText(context) {\n\t\t\tswitch (context) {\n\t\t\t\tcase UiTextContext.HIDE_WARNING:\n\t\t\t\t\treturn 'Hide_Private_Warning';\n\t\t\t\tcase UiTextContext.LEAVE_WARNING:\n\t\t\t\t\treturn 'Leave_Private_Warning';\n\t\t\t\tdefault:\n\t\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\n\t\tcondition() {\n\t\t\tconst groupByType = getUserPreference(Meteor.userId(), 'sidebarGroupByType');\n\t\t\treturn groupByType && hasAtLeastOnePermission(['view-d-room', 'view-joined-room']);\n\t\t},\n\n\t\tgetAvatarPath(room) {\n\t\t\tif (!room) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\t// if coming from sidenav search\n\t\t\tif (room.name && room.avatarETag) {\n\t\t\t\treturn getUserAvatarURL(room.name, room.avatarETag);\n\t\t\t}\n\n\t\t\tif (this.isGroupChat(room)) {\n\t\t\t\treturn getAvatarURL({\n\t\t\t\t\tusername: (room.uids || []).length + (room.usernames || []).join(),\n\t\t\t\t\tcache: room.avatarETag,\n\t\t\t\t}) as string;\n\t\t\t}\n\n\t\t\tconst sub = Subscriptions.findOne({ rid: room._id }, { fields: { name: 1 } });\n\t\t\tif (sub?.name) {\n\t\t\t\tconst user = Users.findOne({ username: sub.name }, { fields: { username: 1, avatarETag: 1 } }) as IUser | undefined;\n\t\t\t\treturn getUserAvatarURL(user?.username || sub.name, user?.avatarETag);\n\t\t\t}\n\n\t\t\treturn getUserAvatarURL(room.name || this.roomName(room) || '');\n\t\t},\n\n\t\tgetIcon(room) {\n\t\t\tif (isRoomFederated(room)) {\n\t\t\t\treturn 'globe';\n\t\t\t}\n\n\t\t\tif (this.isGroupChat(room)) {\n\t\t\t\treturn 'balloon';\n\t\t\t}\n\n\t\t\treturn 'at';\n\t\t},\n\n\t\textractOpenRoomParams({ rid }) {\n\t\t\treturn { type: 'd', reference: rid };\n\t\t},\n\n\t\tfindRoom(identifier) {\n\t\t\tconst query: Mongo.Selector<ISubscription> = {\n\t\t\t\tt: 'd',\n\t\t\t\t$or: [{ name: identifier }, { rid: identifier }],\n\t\t\t};\n\n\t\t\tconst subscription = Subscriptions.findOne(query);\n\t\t\tif (subscription?.rid) {\n\t\t\t\treturn ChatRoom.findOne(subscription.rid);\n\t\t\t}\n\t\t},\n\t} as AtLeast<IRoomTypeClientDirectives, 'isGroupChat' | 'roomName'>,\n);\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  DirectMessageRoomType: () => DirectMessageRoomType\n});\nlet isRoomFederated;\nmodule.link(\"@rocket.chat/core-typings\", {\n  isRoomFederated(v) {\n    isRoomFederated = v;\n  }\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 1);\nlet hasAtLeastOnePermission;\nmodule.link(\"../../../../app/authorization/client\", {\n  hasAtLeastOnePermission(v) {\n    hasAtLeastOnePermission = v;\n  }\n}, 2);\nlet Subscriptions, Users, ChatRoom;\nmodule.link(\"../../../../app/models/client\", {\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n  Users(v) {\n    Users = v;\n  },\n  ChatRoom(v) {\n    ChatRoom = v;\n  }\n}, 3);\nlet settings;\nmodule.link(\"../../../../app/settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n}, 4);\nlet getUserPreference;\nmodule.link(\"../../../../app/utils/client\", {\n  getUserPreference(v) {\n    getUserPreference = v;\n  }\n}, 5);\nlet getAvatarURL;\nmodule.link(\"../../../../app/utils/client/getAvatarURL\", {\n  getAvatarURL(v) {\n    getAvatarURL = v;\n  }\n}, 6);\nlet getUserAvatarURL;\nmodule.link(\"../../../../app/utils/client/getUserAvatarURL\", {\n  getUserAvatarURL(v) {\n    getUserAvatarURL = v;\n  }\n}, 7);\nlet RoomSettingsEnum, RoomMemberActions, UiTextContext;\nmodule.link(\"../../../../definition/IRoomTypeConfig\", {\n  RoomSettingsEnum(v) {\n    RoomSettingsEnum = v;\n  },\n  RoomMemberActions(v) {\n    RoomMemberActions = v;\n  },\n  UiTextContext(v) {\n    UiTextContext = v;\n  }\n}, 8);\nlet getDirectMessageRoomType;\nmodule.link(\"../../../../lib/rooms/roomTypes/direct\", {\n  getDirectMessageRoomType(v) {\n    getDirectMessageRoomType = v;\n  }\n}, 9);\nlet Federation;\nmodule.link(\"../../federation/Federation\", {\n  \"*\"(v) {\n    Federation = v;\n  }\n}, 10);\nlet roomCoordinator;\nmodule.link(\"../roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n}, 11);\nconst DirectMessageRoomType = getDirectMessageRoomType(roomCoordinator);\nroomCoordinator.add(_objectSpread(_objectSpread({}, DirectMessageRoomType), {}, {\n  label: 'Direct_Messages'\n}), {\n  allowRoomSettingChange(_room, setting) {\n    if (isRoomFederated(_room)) {\n      return Federation.isRoomSettingAllowed(_room, setting);\n    }\n    switch (setting) {\n      case RoomSettingsEnum.TYPE:\n      case RoomSettingsEnum.NAME:\n      case RoomSettingsEnum.SYSTEM_MESSAGES:\n      case RoomSettingsEnum.DESCRIPTION:\n      case RoomSettingsEnum.READ_ONLY:\n      case RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n      case RoomSettingsEnum.ARCHIVE_OR_UNARCHIVE:\n      case RoomSettingsEnum.JOIN_CODE:\n        return false;\n      case RoomSettingsEnum.E2E:\n        return settings.get('E2E_Enable') === true;\n      default:\n        return true;\n    }\n  },\n  allowMemberAction(room, action, showingUserId, userSubscription) {\n    if (isRoomFederated(room)) {\n      return Federation.actionAllowed(room, action, showingUserId, userSubscription);\n    }\n    switch (action) {\n      case RoomMemberActions.BLOCK:\n        return !this.isGroupChat(room);\n      default:\n        return false;\n    }\n  },\n  roomName(roomData) {\n    const subscription = (() => {\n      if (roomData.fname || roomData.name) {\n        return {\n          fname: roomData.fname,\n          name: roomData.name\n        };\n      }\n      if (!roomData._id) {\n        return undefined;\n      }\n      return Subscriptions.findOne({\n        rid: roomData._id\n      });\n    })();\n    if (!subscription) {\n      return;\n    }\n    if (settings.get('UI_Use_Real_Name') && subscription.fname) {\n      return subscription.fname;\n    }\n    return subscription.name;\n  },\n  isGroupChat(room) {\n    var _room$uids;\n    return ((room === null || room === void 0 ? void 0 : (_room$uids = room.uids) === null || _room$uids === void 0 ? void 0 : _room$uids.length) || 0) > 2;\n  },\n  getUiText(context) {\n    switch (context) {\n      case UiTextContext.HIDE_WARNING:\n        return 'Hide_Private_Warning';\n      case UiTextContext.LEAVE_WARNING:\n        return 'Leave_Private_Warning';\n      default:\n        return '';\n    }\n  },\n  condition() {\n    const groupByType = getUserPreference(Meteor.userId(), 'sidebarGroupByType');\n    return groupByType && hasAtLeastOnePermission(['view-d-room', 'view-joined-room']);\n  },\n  getAvatarPath(room) {\n    if (!room) {\n      return '';\n    }\n    // if coming from sidenav search\n    if (room.name && room.avatarETag) {\n      return getUserAvatarURL(room.name, room.avatarETag);\n    }\n    if (this.isGroupChat(room)) {\n      return getAvatarURL({\n        username: (room.uids || []).length + (room.usernames || []).join(),\n        cache: room.avatarETag\n      });\n    }\n    const sub = Subscriptions.findOne({\n      rid: room._id\n    }, {\n      fields: {\n        name: 1\n      }\n    });\n    if (sub !== null && sub !== void 0 && sub.name) {\n      const user = Users.findOne({\n        username: sub.name\n      }, {\n        fields: {\n          username: 1,\n          avatarETag: 1\n        }\n      });\n      return getUserAvatarURL((user === null || user === void 0 ? void 0 : user.username) || sub.name, user === null || user === void 0 ? void 0 : user.avatarETag);\n    }\n    return getUserAvatarURL(room.name || this.roomName(room) || '');\n  },\n  getIcon(room) {\n    if (isRoomFederated(room)) {\n      return 'globe';\n    }\n    if (this.isGroupChat(room)) {\n      return 'balloon';\n    }\n    return 'at';\n  },\n  extractOpenRoomParams(_ref) {\n    let {\n      rid\n    } = _ref;\n    return {\n      type: 'd',\n      reference: rid\n    };\n  },\n  findRoom(identifier) {\n    const query = {\n      t: 'd',\n      $or: [{\n        name: identifier\n      }, {\n        rid: identifier\n      }]\n    };\n    const subscription = Subscriptions.findOne(query);\n    if (subscription !== null && subscription !== void 0 && subscription.rid) {\n      return ChatRoom.findOne(subscription.rid);\n    }\n  }\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","DirectMessageRoomType","isRoomFederated","Meteor","hasAtLeastOnePermission","Subscriptions","Users","ChatRoom","settings","getUserPreference","getAvatarURL","getUserAvatarURL","RoomSettingsEnum","RoomMemberActions","UiTextContext","getDirectMessageRoomType","Federation","*","roomCoordinator","add","label","allowRoomSettingChange","_room","setting","isRoomSettingAllowed","TYPE","NAME","SYSTEM_MESSAGES","DESCRIPTION","READ_ONLY","REACT_WHEN_READ_ONLY","ARCHIVE_OR_UNARCHIVE","JOIN_CODE","E2E","get","allowMemberAction","room","action","showingUserId","userSubscription","actionAllowed","BLOCK","isGroupChat","roomName","roomData","subscription","fname","name","_id","undefined","findOne","rid","_room$uids","uids","length","getUiText","context","HIDE_WARNING","LEAVE_WARNING","condition","groupByType","userId","getAvatarPath","avatarETag","username","usernames","join","cache","sub","fields","user","getIcon","extractOpenRoomParams","_ref","type","reference","findRoom","identifier","query","t","$or"],"sources":["client/lib/rooms/roomTypes/direct.ts"],"sourcesContent":["import type { AtLeast, IRoom, ISubscription, IUser } from '@rocket.chat/core-typings';\nimport { isRoomFederated } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport type { Mongo } from 'meteor/mongo';\n\nimport { hasAtLeastOnePermission } from '../../../../app/authorization/client';\nimport { Subscriptions, Users, ChatRoom } from '../../../../app/models/client';\nimport { settings } from '../../../../app/settings/client';\nimport { getUserPreference } from '../../../../app/utils/client';\nimport { getAvatarURL } from '../../../../app/utils/client/getAvatarURL';\nimport { getUserAvatarURL } from '../../../../app/utils/client/getUserAvatarURL';\nimport type { IRoomTypeClientDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../../definition/IRoomTypeConfig';\nimport { getDirectMessageRoomType } from '../../../../lib/rooms/roomTypes/direct';\nimport * as Federation from '../../federation/Federation';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const DirectMessageRoomType = getDirectMessageRoomType(roomCoordinator);\n\nroomCoordinator.add(\n\t{\n\t\t...DirectMessageRoomType,\n\t\tlabel: 'Direct_Messages',\n\t},\n\t{\n\t\tallowRoomSettingChange(_room, setting) {\n\t\t\tif (isRoomFederated(_room as IRoom)) {\n\t\t\t\treturn Federation.isRoomSettingAllowed(_room, setting);\n\t\t\t}\n\t\t\tswitch (setting) {\n\t\t\t\tcase RoomSettingsEnum.TYPE:\n\t\t\t\tcase RoomSettingsEnum.NAME:\n\t\t\t\tcase RoomSettingsEnum.SYSTEM_MESSAGES:\n\t\t\t\tcase RoomSettingsEnum.DESCRIPTION:\n\t\t\t\tcase RoomSettingsEnum.READ_ONLY:\n\t\t\t\tcase RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n\t\t\t\tcase RoomSettingsEnum.ARCHIVE_OR_UNARCHIVE:\n\t\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\t\treturn false;\n\t\t\t\tcase RoomSettingsEnum.E2E:\n\t\t\t\t\treturn settings.get('E2E_Enable') === true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\n\t\tallowMemberAction(room, action, showingUserId, userSubscription) {\n\t\t\tif (isRoomFederated(room as IRoom)) {\n\t\t\t\treturn Federation.actionAllowed(room, action, showingUserId, userSubscription);\n\t\t\t}\n\t\t\tswitch (action) {\n\t\t\t\tcase RoomMemberActions.BLOCK:\n\t\t\t\t\treturn !this.isGroupChat(room);\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\troomName(roomData) {\n\t\t\tconst subscription = ((): { fname?: string; name?: string } | undefined => {\n\t\t\t\tif (roomData.fname || roomData.name) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfname: roomData.fname,\n\t\t\t\t\t\tname: roomData.name,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (!roomData._id) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\treturn Subscriptions.findOne({ rid: roomData._id });\n\t\t\t})();\n\n\t\t\tif (!subscription) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (settings.get('UI_Use_Real_Name') && subscription.fname) {\n\t\t\t\treturn subscription.fname;\n\t\t\t}\n\n\t\t\treturn subscription.name;\n\t\t},\n\n\t\tisGroupChat(room) {\n\t\t\treturn (room?.uids?.length || 0) > 2;\n\t\t},\n\n\t\tgetUiText(context) {\n\t\t\tswitch (context) {\n\t\t\t\tcase UiTextContext.HIDE_WARNING:\n\t\t\t\t\treturn 'Hide_Private_Warning';\n\t\t\t\tcase UiTextContext.LEAVE_WARNING:\n\t\t\t\t\treturn 'Leave_Private_Warning';\n\t\t\t\tdefault:\n\t\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\n\t\tcondition() {\n\t\t\tconst groupByType = getUserPreference(Meteor.userId(), 'sidebarGroupByType');\n\t\t\treturn groupByType && hasAtLeastOnePermission(['view-d-room', 'view-joined-room']);\n\t\t},\n\n\t\tgetAvatarPath(room) {\n\t\t\tif (!room) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\t// if coming from sidenav search\n\t\t\tif (room.name && room.avatarETag) {\n\t\t\t\treturn getUserAvatarURL(room.name, room.avatarETag);\n\t\t\t}\n\n\t\t\tif (this.isGroupChat(room)) {\n\t\t\t\treturn getAvatarURL({\n\t\t\t\t\tusername: (room.uids || []).length + (room.usernames || []).join(),\n\t\t\t\t\tcache: room.avatarETag,\n\t\t\t\t}) as string;\n\t\t\t}\n\n\t\t\tconst sub = Subscriptions.findOne({ rid: room._id }, { fields: { name: 1 } });\n\t\t\tif (sub?.name) {\n\t\t\t\tconst user = Users.findOne({ username: sub.name }, { fields: { username: 1, avatarETag: 1 } }) as IUser | undefined;\n\t\t\t\treturn getUserAvatarURL(user?.username || sub.name, user?.avatarETag);\n\t\t\t}\n\n\t\t\treturn getUserAvatarURL(room.name || this.roomName(room) || '');\n\t\t},\n\n\t\tgetIcon(room) {\n\t\t\tif (isRoomFederated(room)) {\n\t\t\t\treturn 'globe';\n\t\t\t}\n\n\t\t\tif (this.isGroupChat(room)) {\n\t\t\t\treturn 'balloon';\n\t\t\t}\n\n\t\t\treturn 'at';\n\t\t},\n\n\t\textractOpenRoomParams({ rid }) {\n\t\t\treturn { type: 'd', reference: rid };\n\t\t},\n\n\t\tfindRoom(identifier) {\n\t\t\tconst query: Mongo.Selector<ISubscription> = {\n\t\t\t\tt: 'd',\n\t\t\t\t$or: [{ name: identifier }, { rid: identifier }],\n\t\t\t};\n\n\t\t\tconst subscription = Subscriptions.findOne(query);\n\t\t\tif (subscription?.rid) {\n\t\t\t\treturn ChatRoom.findOne(subscription.rid);\n\t\t\t}\n\t\t},\n\t} as AtLeast<IRoomTypeClientDirectives, 'isGroupChat' | 'roomName'>,\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0d04bb95433a4a23215e449dde4bfb5efdad685a"}
