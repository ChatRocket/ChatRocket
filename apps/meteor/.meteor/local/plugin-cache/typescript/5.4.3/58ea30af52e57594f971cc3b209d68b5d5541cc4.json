{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/TeamMember.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/TeamMember.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/TeamMember.ts","inputSourceMap":{"version":3,"file":"server/models/raw/TeamMember.ts","sourceRoot":"","sources":["server/models/raw/TeamMember.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRole, ITeamMember, IUser, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { FindPaginated, ITeamMemberModel } from '@rocket.chat/model-typings';\nimport type {\n\tCollection,\n\tFindCursor,\n\tDb,\n\tDeleteResult,\n\tDocument,\n\tFilter,\n\tFindOptions,\n\tIndexDescription,\n\tInsertOneResult,\n\tUpdateResult,\n} from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class TeamMemberRaw extends BaseRaw<ITeamMember> implements ITeamMemberModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ITeamMember>>) {\n\t\tsuper(db, 'team_member', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: { teamId: 1 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: { teamId: 1, userId: 1 },\n\t\t\t\tunique: true,\n\t\t\t},\n\t\t];\n\t}\n\n\tfindByUserId(userId: string): FindCursor<ITeamMember>;\n\n\tfindByUserId(userId: string, options: FindOptions<ITeamMember>): FindCursor<ITeamMember>;\n\n\tfindByUserId<P extends Document>(userId: string, options: FindOptions<P>): FindCursor<P>;\n\n\tfindByUserId<P extends Document>(\n\t\tuserId: string,\n\t\toptions?: undefined | FindOptions<ITeamMember> | FindOptions<P extends ITeamMember ? ITeamMember : P>,\n\t): FindCursor<P> | FindCursor<ITeamMember> {\n\t\treturn options ? this.col.find({ userId }, options) : this.col.find({ userId }, options);\n\t}\n\n\tfindOneByUserIdAndTeamId(userId: string, teamId: string): Promise<ITeamMember | null>;\n\n\tfindOneByUserIdAndTeamId(userId: string, teamId: string, options: FindOptions<ITeamMember>): Promise<ITeamMember | null>;\n\n\tfindOneByUserIdAndTeamId<P extends Document>(userId: string, teamId: string, options: FindOptions<P>): Promise<P | null>;\n\n\tfindOneByUserIdAndTeamId<P extends Document>(\n\t\tuserId: string,\n\t\tteamId: string,\n\t\toptions?: undefined | FindOptions<ITeamMember> | FindOptions<P extends ITeamMember ? ITeamMember : P>,\n\t): Promise<P | null | ITeamMember> {\n\t\treturn options ? this.col.findOne({ userId, teamId }, options) : this.col.findOne({ userId, teamId }, options);\n\t}\n\n\tfindByTeamId(teamId: string): FindCursor<ITeamMember>;\n\n\tfindByTeamId(teamId: string, options: FindOptions<ITeamMember>): FindCursor<ITeamMember>;\n\n\tfindByTeamId<P extends Document>(teamId: string, options: FindOptions<P>): FindCursor<P>;\n\n\tfindByTeamId<P extends Document>(\n\t\tteamId: string,\n\t\toptions?: undefined | FindOptions<ITeamMember> | FindOptions<P extends ITeamMember ? ITeamMember : P>,\n\t): FindCursor<P> | FindCursor<ITeamMember> {\n\t\treturn options ? this.col.find({ teamId }, options) : this.col.find({ teamId }, options);\n\t}\n\n\tcountByTeamId(teamId: string): Promise<number> {\n\t\treturn this.countDocuments({ teamId });\n\t}\n\n\tfindByTeamIds(teamIds: Array<string>): FindCursor<ITeamMember>;\n\n\tfindByTeamIds(teamIds: Array<string>, options: FindOptions<ITeamMember>): FindCursor<ITeamMember>;\n\n\tfindByTeamIds<P extends Document>(teamIds: Array<string>, options: FindOptions<P>): FindCursor<P>;\n\n\tfindByTeamIds<P extends Document>(\n\t\tteamIds: Array<string>,\n\t\toptions?: undefined | FindOptions<ITeamMember> | FindOptions<P extends ITeamMember ? ITeamMember : P>,\n\t): FindCursor<P> | FindCursor<ITeamMember> {\n\t\treturn options ? this.col.find({ teamId: { $in: teamIds } }, options) : this.col.find({ teamId: { $in: teamIds } }, options);\n\t}\n\n\tfindByTeamIdAndRole(teamId: string, role: IRole['_id']): FindCursor<ITeamMember>;\n\n\tfindByTeamIdAndRole(teamId: string, role: IRole['_id'], options: FindOptions<ITeamMember>): FindCursor<ITeamMember>;\n\n\tfindByTeamIdAndRole<P extends Document>(teamId: string, role: IRole['_id'], options: FindOptions<P>): FindCursor<P>;\n\n\tfindByTeamIdAndRole<P extends Document>(\n\t\tteamId: string,\n\t\trole: IRole['_id'],\n\t\toptions?: undefined | FindOptions<ITeamMember> | FindOptions<P extends ITeamMember ? ITeamMember : P>,\n\t): FindCursor<P> | FindCursor<ITeamMember> {\n\t\treturn options ? this.col.find({ teamId, roles: role }, options) : this.col.find({ teamId, roles: role });\n\t}\n\n\tcountByTeamIdAndRole(teamId: string, role: IRole['_id']): Promise<number> {\n\t\treturn this.countDocuments({ teamId, roles: role });\n\t}\n\n\tfindByUserIdAndTeamIds(userId: string, teamIds: Array<string>, options: FindOptions<ITeamMember> = {}): FindCursor<ITeamMember> {\n\t\tconst query = {\n\t\t\tuserId,\n\t\t\tteamId: {\n\t\t\t\t$in: teamIds,\n\t\t\t},\n\t\t};\n\n\t\treturn this.col.find(query, options);\n\t}\n\n\tfindPaginatedMembersInfoByTeamId(\n\t\tteamId: string,\n\t\tlimit: number,\n\t\tskip: number,\n\t\tquery?: Filter<ITeamMember>,\n\t): FindPaginated<FindCursor<ITeamMember>> {\n\t\treturn this.findPaginated(\n\t\t\t{ ...query, teamId },\n\t\t\t{\n\t\t\t\tlimit,\n\t\t\t\tskip,\n\t\t\t\tprojection: {\n\t\t\t\t\tuserId: 1,\n\t\t\t\t\troles: 1,\n\t\t\t\t\tcreatedBy: 1,\n\t\t\t\t\tcreatedAt: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tupdateOneByUserIdAndTeamId(userId: string, teamId: string, update: Partial<ITeamMember>): Promise<UpdateResult> {\n\t\treturn this.updateOne({ userId, teamId }, { $set: update });\n\t}\n\n\tcreateOneByTeamIdAndUserId(\n\t\tteamId: string,\n\t\tuserId: string,\n\t\tcreatedBy: Pick<IUser, '_id' | 'username'>,\n\t): Promise<InsertOneResult<ITeamMember>> {\n\t\treturn this.insertOne({\n\t\t\tteamId,\n\t\t\tuserId,\n\t\t\tcreatedAt: new Date(),\n\t\t\tcreatedBy,\n\t\t\t_updatedAt: new Date(),\n\t\t});\n\t}\n\n\tupdateRolesByTeamIdAndUserId(teamId: string, userId: string, roles: Array<IRole['_id']>): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{\n\t\t\t\tteamId,\n\t\t\t\tuserId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$addToSet: {\n\t\t\t\t\troles: { $each: roles },\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tremoveRolesByTeamIdAndUserId(teamId: string, userId: string, roles: Array<IRole['_id']>): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{\n\t\t\t\tteamId,\n\t\t\t\tuserId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$pull: {\n\t\t\t\t\troles: { $in: roles },\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tdeleteByUserIdAndTeamId(userId: string, teamId: string): Promise<DeleteResult> {\n\t\treturn this.col.deleteOne({\n\t\t\tteamId,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tdeleteByTeamId(teamId: string): Promise<DeleteResult> {\n\t\treturn this.col.deleteMany({\n\t\t\tteamId,\n\t\t});\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"production","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/TeamMember.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/TeamMember.ts","inputSourceMap":{"version":3,"file":"server/models/raw/TeamMember.ts","sourceRoot":"","sources":["server/models/raw/TeamMember.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRole, ITeamMember, IUser, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { FindPaginated, ITeamMemberModel } from '@rocket.chat/model-typings';\nimport type {\n\tCollection,\n\tFindCursor,\n\tDb,\n\tDeleteResult,\n\tDocument,\n\tFilter,\n\tFindOptions,\n\tIndexDescription,\n\tInsertOneResult,\n\tUpdateResult,\n} from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class TeamMemberRaw extends BaseRaw<ITeamMember> implements ITeamMemberModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ITeamMember>>) {\n\t\tsuper(db, 'team_member', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: { teamId: 1 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: { teamId: 1, userId: 1 },\n\t\t\t\tunique: true,\n\t\t\t},\n\t\t];\n\t}\n\n\tfindByUserId(userId: string): FindCursor<ITeamMember>;\n\n\tfindByUserId(userId: string, options: FindOptions<ITeamMember>): FindCursor<ITeamMember>;\n\n\tfindByUserId<P extends Document>(userId: string, options: FindOptions<P>): FindCursor<P>;\n\n\tfindByUserId<P extends Document>(\n\t\tuserId: string,\n\t\toptions?: undefined | FindOptions<ITeamMember> | FindOptions<P extends ITeamMember ? ITeamMember : P>,\n\t): FindCursor<P> | FindCursor<ITeamMember> {\n\t\treturn options ? this.col.find({ userId }, options) : this.col.find({ userId }, options);\n\t}\n\n\tfindOneByUserIdAndTeamId(userId: string, teamId: string): Promise<ITeamMember | null>;\n\n\tfindOneByUserIdAndTeamId(userId: string, teamId: string, options: FindOptions<ITeamMember>): Promise<ITeamMember | null>;\n\n\tfindOneByUserIdAndTeamId<P extends Document>(userId: string, teamId: string, options: FindOptions<P>): Promise<P | null>;\n\n\tfindOneByUserIdAndTeamId<P extends Document>(\n\t\tuserId: string,\n\t\tteamId: string,\n\t\toptions?: undefined | FindOptions<ITeamMember> | FindOptions<P extends ITeamMember ? ITeamMember : P>,\n\t): Promise<P | null | ITeamMember> {\n\t\treturn options ? this.col.findOne({ userId, teamId }, options) : this.col.findOne({ userId, teamId }, options);\n\t}\n\n\tfindByTeamId(teamId: string): FindCursor<ITeamMember>;\n\n\tfindByTeamId(teamId: string, options: FindOptions<ITeamMember>): FindCursor<ITeamMember>;\n\n\tfindByTeamId<P extends Document>(teamId: string, options: FindOptions<P>): FindCursor<P>;\n\n\tfindByTeamId<P extends Document>(\n\t\tteamId: string,\n\t\toptions?: undefined | FindOptions<ITeamMember> | FindOptions<P extends ITeamMember ? ITeamMember : P>,\n\t): FindCursor<P> | FindCursor<ITeamMember> {\n\t\treturn options ? this.col.find({ teamId }, options) : this.col.find({ teamId }, options);\n\t}\n\n\tcountByTeamId(teamId: string): Promise<number> {\n\t\treturn this.countDocuments({ teamId });\n\t}\n\n\tfindByTeamIds(teamIds: Array<string>): FindCursor<ITeamMember>;\n\n\tfindByTeamIds(teamIds: Array<string>, options: FindOptions<ITeamMember>): FindCursor<ITeamMember>;\n\n\tfindByTeamIds<P extends Document>(teamIds: Array<string>, options: FindOptions<P>): FindCursor<P>;\n\n\tfindByTeamIds<P extends Document>(\n\t\tteamIds: Array<string>,\n\t\toptions?: undefined | FindOptions<ITeamMember> | FindOptions<P extends ITeamMember ? ITeamMember : P>,\n\t): FindCursor<P> | FindCursor<ITeamMember> {\n\t\treturn options ? this.col.find({ teamId: { $in: teamIds } }, options) : this.col.find({ teamId: { $in: teamIds } }, options);\n\t}\n\n\tfindByTeamIdAndRole(teamId: string, role: IRole['_id']): FindCursor<ITeamMember>;\n\n\tfindByTeamIdAndRole(teamId: string, role: IRole['_id'], options: FindOptions<ITeamMember>): FindCursor<ITeamMember>;\n\n\tfindByTeamIdAndRole<P extends Document>(teamId: string, role: IRole['_id'], options: FindOptions<P>): FindCursor<P>;\n\n\tfindByTeamIdAndRole<P extends Document>(\n\t\tteamId: string,\n\t\trole: IRole['_id'],\n\t\toptions?: undefined | FindOptions<ITeamMember> | FindOptions<P extends ITeamMember ? ITeamMember : P>,\n\t): FindCursor<P> | FindCursor<ITeamMember> {\n\t\treturn options ? this.col.find({ teamId, roles: role }, options) : this.col.find({ teamId, roles: role });\n\t}\n\n\tcountByTeamIdAndRole(teamId: string, role: IRole['_id']): Promise<number> {\n\t\treturn this.countDocuments({ teamId, roles: role });\n\t}\n\n\tfindByUserIdAndTeamIds(userId: string, teamIds: Array<string>, options: FindOptions<ITeamMember> = {}): FindCursor<ITeamMember> {\n\t\tconst query = {\n\t\t\tuserId,\n\t\t\tteamId: {\n\t\t\t\t$in: teamIds,\n\t\t\t},\n\t\t};\n\n\t\treturn this.col.find(query, options);\n\t}\n\n\tfindPaginatedMembersInfoByTeamId(\n\t\tteamId: string,\n\t\tlimit: number,\n\t\tskip: number,\n\t\tquery?: Filter<ITeamMember>,\n\t): FindPaginated<FindCursor<ITeamMember>> {\n\t\treturn this.findPaginated(\n\t\t\t{ ...query, teamId },\n\t\t\t{\n\t\t\t\tlimit,\n\t\t\t\tskip,\n\t\t\t\tprojection: {\n\t\t\t\t\tuserId: 1,\n\t\t\t\t\troles: 1,\n\t\t\t\t\tcreatedBy: 1,\n\t\t\t\t\tcreatedAt: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tupdateOneByUserIdAndTeamId(userId: string, teamId: string, update: Partial<ITeamMember>): Promise<UpdateResult> {\n\t\treturn this.updateOne({ userId, teamId }, { $set: update });\n\t}\n\n\tcreateOneByTeamIdAndUserId(\n\t\tteamId: string,\n\t\tuserId: string,\n\t\tcreatedBy: Pick<IUser, '_id' | 'username'>,\n\t): Promise<InsertOneResult<ITeamMember>> {\n\t\treturn this.insertOne({\n\t\t\tteamId,\n\t\t\tuserId,\n\t\t\tcreatedAt: new Date(),\n\t\t\tcreatedBy,\n\t\t\t_updatedAt: new Date(),\n\t\t});\n\t}\n\n\tupdateRolesByTeamIdAndUserId(teamId: string, userId: string, roles: Array<IRole['_id']>): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{\n\t\t\t\tteamId,\n\t\t\t\tuserId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$addToSet: {\n\t\t\t\t\troles: { $each: roles },\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tremoveRolesByTeamIdAndUserId(teamId: string, userId: string, roles: Array<IRole['_id']>): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{\n\t\t\t\tteamId,\n\t\t\t\tuserId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$pull: {\n\t\t\t\t\troles: { $in: roles },\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tdeleteByUserIdAndTeamId(userId: string, teamId: string): Promise<DeleteResult> {\n\t\treturn this.col.deleteOne({\n\t\t\tteamId,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tdeleteByTeamId(teamId: string): Promise<DeleteResult> {\n\t\treturn this.col.deleteMany({\n\t\t\tteamId,\n\t\t});\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      TeamMemberRaw: () => TeamMemberRaw\n    });\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class TeamMemberRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'team_member', trash);\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            teamId: 1\n          }\n        }, {\n          key: {\n            teamId: 1,\n            userId: 1\n          },\n          unique: true\n        }];\n      }\n      findByUserId(userId, options) {\n        return options ? this.col.find({\n          userId\n        }, options) : this.col.find({\n          userId\n        }, options);\n      }\n      findOneByUserIdAndTeamId(userId, teamId, options) {\n        return options ? this.col.findOne({\n          userId,\n          teamId\n        }, options) : this.col.findOne({\n          userId,\n          teamId\n        }, options);\n      }\n      findByTeamId(teamId, options) {\n        return options ? this.col.find({\n          teamId\n        }, options) : this.col.find({\n          teamId\n        }, options);\n      }\n      countByTeamId(teamId) {\n        return this.countDocuments({\n          teamId\n        });\n      }\n      findByTeamIds(teamIds, options) {\n        return options ? this.col.find({\n          teamId: {\n            $in: teamIds\n          }\n        }, options) : this.col.find({\n          teamId: {\n            $in: teamIds\n          }\n        }, options);\n      }\n      findByTeamIdAndRole(teamId, role, options) {\n        return options ? this.col.find({\n          teamId,\n          roles: role\n        }, options) : this.col.find({\n          teamId,\n          roles: role\n        });\n      }\n      countByTeamIdAndRole(teamId, role) {\n        return this.countDocuments({\n          teamId,\n          roles: role\n        });\n      }\n      findByUserIdAndTeamIds(userId, teamIds) {\n        let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        const query = {\n          userId,\n          teamId: {\n            $in: teamIds\n          }\n        };\n        return this.col.find(query, options);\n      }\n      findPaginatedMembersInfoByTeamId(teamId, limit, skip, query) {\n        return this.findPaginated(_objectSpread(_objectSpread({}, query), {}, {\n          teamId\n        }), {\n          limit,\n          skip,\n          projection: {\n            userId: 1,\n            roles: 1,\n            createdBy: 1,\n            createdAt: 1\n          }\n        });\n      }\n      updateOneByUserIdAndTeamId(userId, teamId, update) {\n        return this.updateOne({\n          userId,\n          teamId\n        }, {\n          $set: update\n        });\n      }\n      createOneByTeamIdAndUserId(teamId, userId, createdBy) {\n        return this.insertOne({\n          teamId,\n          userId,\n          createdAt: new Date(),\n          createdBy,\n          _updatedAt: new Date()\n        });\n      }\n      updateRolesByTeamIdAndUserId(teamId, userId, roles) {\n        return this.updateOne({\n          teamId,\n          userId\n        }, {\n          $addToSet: {\n            roles: {\n              $each: roles\n            }\n          }\n        });\n      }\n      removeRolesByTeamIdAndUserId(teamId, userId, roles) {\n        return this.updateOne({\n          teamId,\n          userId\n        }, {\n          $pull: {\n            roles: {\n              $in: roles\n            }\n          }\n        });\n      }\n      deleteByUserIdAndTeamId(userId, teamId) {\n        return this.col.deleteOne({\n          teamId,\n          userId\n        });\n      }\n      deleteByTeamId(teamId) {\n        return this.col.deleteMany({\n          teamId\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","TeamMemberRaw","BaseRaw","__reifyWaitForDeps__","constructor","db","trash","modelIndexes","key","teamId","userId","unique","findByUserId","options","col","find","findOneByUserIdAndTeamId","findOne","findByTeamId","countByTeamId","countDocuments","findByTeamIds","teamIds","$in","findByTeamIdAndRole","role","roles","countByTeamIdAndRole","findByUserIdAndTeamIds","arguments","length","undefined","query","findPaginatedMembersInfoByTeamId","limit","skip","findPaginated","projection","createdBy","createdAt","updateOneByUserIdAndTeamId","update","updateOne","$set","createOneByTeamIdAndUserId","insertOne","Date","_updatedAt","updateRolesByTeamIdAndUserId","$addToSet","$each","removeRolesByTeamIdAndUserId","$pull","deleteByUserIdAndTeamId","deleteOne","deleteByTeamId","deleteMany","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/TeamMember.ts"],"sourcesContent":["import type { IRole, ITeamMember, IUser, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { FindPaginated, ITeamMemberModel } from '@rocket.chat/model-typings';\nimport type {\n\tCollection,\n\tFindCursor,\n\tDb,\n\tDeleteResult,\n\tDocument,\n\tFilter,\n\tFindOptions,\n\tIndexDescription,\n\tInsertOneResult,\n\tUpdateResult,\n} from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class TeamMemberRaw extends BaseRaw<ITeamMember> implements ITeamMemberModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ITeamMember>>) {\n\t\tsuper(db, 'team_member', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: { teamId: 1 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: { teamId: 1, userId: 1 },\n\t\t\t\tunique: true,\n\t\t\t},\n\t\t];\n\t}\n\n\tfindByUserId(userId: string): FindCursor<ITeamMember>;\n\n\tfindByUserId(userId: string, options: FindOptions<ITeamMember>): FindCursor<ITeamMember>;\n\n\tfindByUserId<P extends Document>(userId: string, options: FindOptions<P>): FindCursor<P>;\n\n\tfindByUserId<P extends Document>(\n\t\tuserId: string,\n\t\toptions?: undefined | FindOptions<ITeamMember> | FindOptions<P extends ITeamMember ? ITeamMember : P>,\n\t): FindCursor<P> | FindCursor<ITeamMember> {\n\t\treturn options ? this.col.find({ userId }, options) : this.col.find({ userId }, options);\n\t}\n\n\tfindOneByUserIdAndTeamId(userId: string, teamId: string): Promise<ITeamMember | null>;\n\n\tfindOneByUserIdAndTeamId(userId: string, teamId: string, options: FindOptions<ITeamMember>): Promise<ITeamMember | null>;\n\n\tfindOneByUserIdAndTeamId<P extends Document>(userId: string, teamId: string, options: FindOptions<P>): Promise<P | null>;\n\n\tfindOneByUserIdAndTeamId<P extends Document>(\n\t\tuserId: string,\n\t\tteamId: string,\n\t\toptions?: undefined | FindOptions<ITeamMember> | FindOptions<P extends ITeamMember ? ITeamMember : P>,\n\t): Promise<P | null | ITeamMember> {\n\t\treturn options ? this.col.findOne({ userId, teamId }, options) : this.col.findOne({ userId, teamId }, options);\n\t}\n\n\tfindByTeamId(teamId: string): FindCursor<ITeamMember>;\n\n\tfindByTeamId(teamId: string, options: FindOptions<ITeamMember>): FindCursor<ITeamMember>;\n\n\tfindByTeamId<P extends Document>(teamId: string, options: FindOptions<P>): FindCursor<P>;\n\n\tfindByTeamId<P extends Document>(\n\t\tteamId: string,\n\t\toptions?: undefined | FindOptions<ITeamMember> | FindOptions<P extends ITeamMember ? ITeamMember : P>,\n\t): FindCursor<P> | FindCursor<ITeamMember> {\n\t\treturn options ? this.col.find({ teamId }, options) : this.col.find({ teamId }, options);\n\t}\n\n\tcountByTeamId(teamId: string): Promise<number> {\n\t\treturn this.countDocuments({ teamId });\n\t}\n\n\tfindByTeamIds(teamIds: Array<string>): FindCursor<ITeamMember>;\n\n\tfindByTeamIds(teamIds: Array<string>, options: FindOptions<ITeamMember>): FindCursor<ITeamMember>;\n\n\tfindByTeamIds<P extends Document>(teamIds: Array<string>, options: FindOptions<P>): FindCursor<P>;\n\n\tfindByTeamIds<P extends Document>(\n\t\tteamIds: Array<string>,\n\t\toptions?: undefined | FindOptions<ITeamMember> | FindOptions<P extends ITeamMember ? ITeamMember : P>,\n\t): FindCursor<P> | FindCursor<ITeamMember> {\n\t\treturn options ? this.col.find({ teamId: { $in: teamIds } }, options) : this.col.find({ teamId: { $in: teamIds } }, options);\n\t}\n\n\tfindByTeamIdAndRole(teamId: string, role: IRole['_id']): FindCursor<ITeamMember>;\n\n\tfindByTeamIdAndRole(teamId: string, role: IRole['_id'], options: FindOptions<ITeamMember>): FindCursor<ITeamMember>;\n\n\tfindByTeamIdAndRole<P extends Document>(teamId: string, role: IRole['_id'], options: FindOptions<P>): FindCursor<P>;\n\n\tfindByTeamIdAndRole<P extends Document>(\n\t\tteamId: string,\n\t\trole: IRole['_id'],\n\t\toptions?: undefined | FindOptions<ITeamMember> | FindOptions<P extends ITeamMember ? ITeamMember : P>,\n\t): FindCursor<P> | FindCursor<ITeamMember> {\n\t\treturn options ? this.col.find({ teamId, roles: role }, options) : this.col.find({ teamId, roles: role });\n\t}\n\n\tcountByTeamIdAndRole(teamId: string, role: IRole['_id']): Promise<number> {\n\t\treturn this.countDocuments({ teamId, roles: role });\n\t}\n\n\tfindByUserIdAndTeamIds(userId: string, teamIds: Array<string>, options: FindOptions<ITeamMember> = {}): FindCursor<ITeamMember> {\n\t\tconst query = {\n\t\t\tuserId,\n\t\t\tteamId: {\n\t\t\t\t$in: teamIds,\n\t\t\t},\n\t\t};\n\n\t\treturn this.col.find(query, options);\n\t}\n\n\tfindPaginatedMembersInfoByTeamId(\n\t\tteamId: string,\n\t\tlimit: number,\n\t\tskip: number,\n\t\tquery?: Filter<ITeamMember>,\n\t): FindPaginated<FindCursor<ITeamMember>> {\n\t\treturn this.findPaginated(\n\t\t\t{ ...query, teamId },\n\t\t\t{\n\t\t\t\tlimit,\n\t\t\t\tskip,\n\t\t\t\tprojection: {\n\t\t\t\t\tuserId: 1,\n\t\t\t\t\troles: 1,\n\t\t\t\t\tcreatedBy: 1,\n\t\t\t\t\tcreatedAt: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tupdateOneByUserIdAndTeamId(userId: string, teamId: string, update: Partial<ITeamMember>): Promise<UpdateResult> {\n\t\treturn this.updateOne({ userId, teamId }, { $set: update });\n\t}\n\n\tcreateOneByTeamIdAndUserId(\n\t\tteamId: string,\n\t\tuserId: string,\n\t\tcreatedBy: Pick<IUser, '_id' | 'username'>,\n\t): Promise<InsertOneResult<ITeamMember>> {\n\t\treturn this.insertOne({\n\t\t\tteamId,\n\t\t\tuserId,\n\t\t\tcreatedAt: new Date(),\n\t\t\tcreatedBy,\n\t\t\t_updatedAt: new Date(),\n\t\t});\n\t}\n\n\tupdateRolesByTeamIdAndUserId(teamId: string, userId: string, roles: Array<IRole['_id']>): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{\n\t\t\t\tteamId,\n\t\t\t\tuserId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$addToSet: {\n\t\t\t\t\troles: { $each: roles },\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tremoveRolesByTeamIdAndUserId(teamId: string, userId: string, roles: Array<IRole['_id']>): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{\n\t\t\t\tteamId,\n\t\t\t\tuserId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$pull: {\n\t\t\t\t\troles: { $in: roles },\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tdeleteByUserIdAndTeamId(userId: string, teamId: string): Promise<DeleteResult> {\n\t\treturn this.col.deleteOne({\n\t\t\tteamId,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tdeleteByTeamId(teamId: string): Promise<DeleteResult> {\n\t\treturn this.col.deleteMany({\n\t\t\tteamId,\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"58ea30af52e57594f971cc3b209d68b5d5541cc4"}
