{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/bridges/environmental.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/server/bridges/environmental.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/bridges/environmental.ts","inputSourceMap":{"version":3,"file":"app/apps/server/bridges/environmental.ts","sourceRoot":"","sources":["app/apps/server/bridges/environmental.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,2BAA2B,EAAE,MAAM,qEAAqE,CAAC;AAElH,MAAM,OAAO,8BAA+B,SAAQ,2BAA2B;IAGjD;IAF7B,OAAO,CAAgB;IAEvB,YAA6B,IAA4B;QACxD,KAAK,EAAE,CAAC;QADoB,SAAI,GAAJ,IAAI,CAAwB;QAExD,IAAI,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;IACxD,CAAC;IAES,KAAK,CAAC,cAAc,CAAC,UAAkB,EAAE,KAAa;QAC/D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,gDAAgD,UAAU,GAAG,CAAC,CAAC;QAElG,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC;YACjD,MAAM,IAAI,KAAK,CAAC,+BAA+B,UAAU,oBAAoB,CAAC,CAAC;QAChF,CAAC;QAED,OAAO,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC;IAES,KAAK,CAAC,UAAU,CAAC,UAAkB,EAAE,KAAa;QAC3D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,0DAA0D,UAAU,GAAG,CAAC,CAAC;QAE5G,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IACrG,CAAC;IAES,iBAAiB,CAAC,UAAkB,EAAE,KAAa;QAC5D;;WAEG;QACH,MAAM,iBAAiB,GAAG,WAAW,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC;QAC9E,OAAO,UAAU,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;IAC/D,CAAC;IAES,KAAK,CAAC,KAAK,CAAC,UAAkB,EAAE,KAAa;QACtD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,qDAAqD,UAAU,GAAG,CAAC,CAAC;QAEvG,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC;YACjD,MAAM,IAAI,KAAK,CAAC,+BAA+B,UAAU,oBAAoB,CAAC,CAAC;QAChF,CAAC;QAED,OAAO,OAAO,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,WAAW,CAAC;IACvD,CAAC;CACD","sourcesContent":["import type { IAppServerOrchestrator } from '@rocket.chat/apps';\nimport { EnvironmentalVariableBridge } from '@rocket.chat/apps-engine/server/bridges/EnvironmentalVariableBridge';\n\nexport class AppEnvironmentalVariableBridge extends EnvironmentalVariableBridge {\n\tallowed: Array<string>;\n\n\tconstructor(private readonly orch: IAppServerOrchestrator) {\n\t\tsuper();\n\t\tthis.allowed = ['NODE_ENV', 'ROOT_URL', 'INSTANCE_IP'];\n\t}\n\n\tprotected async getValueByName(envVarName: string, appId: string): Promise<string | undefined> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the environmental variable value ${envVarName}.`);\n\n\t\tif (!(await this.isReadable(envVarName, appId))) {\n\t\t\tthrow new Error(`The environmental variable \"${envVarName}\" is not readable.`);\n\t\t}\n\n\t\treturn process.env[envVarName];\n\t}\n\n\tprotected async isReadable(envVarName: string, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is checking if the environmental variable is readable ${envVarName}.`);\n\n\t\treturn this.allowed.includes(envVarName.toUpperCase()) || this.isAppsOwnVariable(envVarName, appId);\n\t}\n\n\tprotected isAppsOwnVariable(envVarName: string, appId: string): boolean {\n\t\t/**\n\t\t * Replace the letter `-` with `_` since environment variable name doesn't support it\n\t\t */\n\t\tconst appVariablePrefix = `RC_APPS_${appId.toUpperCase().replace(/-/g, '_')}`;\n\t\treturn envVarName.toUpperCase().startsWith(appVariablePrefix);\n\t}\n\n\tprotected async isSet(envVarName: string, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is checking if the environmental variable is set ${envVarName}.`);\n\n\t\tif (!(await this.isReadable(envVarName, appId))) {\n\t\t\tthrow new Error(`The environmental variable \"${envVarName}\" is not readable.`);\n\t\t}\n\n\t\treturn typeof process.env[envVarName] !== 'undefined';\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/bridges/environmental.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/server/bridges/environmental.ts","inputSourceMap":{"version":3,"file":"app/apps/server/bridges/environmental.ts","sourceRoot":"","sources":["app/apps/server/bridges/environmental.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,2BAA2B,EAAE,MAAM,qEAAqE,CAAC;AAElH,MAAM,OAAO,8BAA+B,SAAQ,2BAA2B;IAGjD;IAF7B,OAAO,CAAgB;IAEvB,YAA6B,IAA4B;QACxD,KAAK,EAAE,CAAC;QADoB,SAAI,GAAJ,IAAI,CAAwB;QAExD,IAAI,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;IACxD,CAAC;IAES,KAAK,CAAC,cAAc,CAAC,UAAkB,EAAE,KAAa;QAC/D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,gDAAgD,UAAU,GAAG,CAAC,CAAC;QAElG,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC;YACjD,MAAM,IAAI,KAAK,CAAC,+BAA+B,UAAU,oBAAoB,CAAC,CAAC;QAChF,CAAC;QAED,OAAO,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC;IAES,KAAK,CAAC,UAAU,CAAC,UAAkB,EAAE,KAAa;QAC3D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,0DAA0D,UAAU,GAAG,CAAC,CAAC;QAE5G,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IACrG,CAAC;IAES,iBAAiB,CAAC,UAAkB,EAAE,KAAa;QAC5D;;WAEG;QACH,MAAM,iBAAiB,GAAG,WAAW,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC;QAC9E,OAAO,UAAU,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;IAC/D,CAAC;IAES,KAAK,CAAC,KAAK,CAAC,UAAkB,EAAE,KAAa;QACtD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,qDAAqD,UAAU,GAAG,CAAC,CAAC;QAEvG,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC;YACjD,MAAM,IAAI,KAAK,CAAC,+BAA+B,UAAU,oBAAoB,CAAC,CAAC;QAChF,CAAC;QAED,OAAO,OAAO,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,WAAW,CAAC;IACvD,CAAC;CACD","sourcesContent":["import type { IAppServerOrchestrator } from '@rocket.chat/apps';\nimport { EnvironmentalVariableBridge } from '@rocket.chat/apps-engine/server/bridges/EnvironmentalVariableBridge';\n\nexport class AppEnvironmentalVariableBridge extends EnvironmentalVariableBridge {\n\tallowed: Array<string>;\n\n\tconstructor(private readonly orch: IAppServerOrchestrator) {\n\t\tsuper();\n\t\tthis.allowed = ['NODE_ENV', 'ROOT_URL', 'INSTANCE_IP'];\n\t}\n\n\tprotected async getValueByName(envVarName: string, appId: string): Promise<string | undefined> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the environmental variable value ${envVarName}.`);\n\n\t\tif (!(await this.isReadable(envVarName, appId))) {\n\t\t\tthrow new Error(`The environmental variable \"${envVarName}\" is not readable.`);\n\t\t}\n\n\t\treturn process.env[envVarName];\n\t}\n\n\tprotected async isReadable(envVarName: string, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is checking if the environmental variable is readable ${envVarName}.`);\n\n\t\treturn this.allowed.includes(envVarName.toUpperCase()) || this.isAppsOwnVariable(envVarName, appId);\n\t}\n\n\tprotected isAppsOwnVariable(envVarName: string, appId: string): boolean {\n\t\t/**\n\t\t * Replace the letter `-` with `_` since environment variable name doesn't support it\n\t\t */\n\t\tconst appVariablePrefix = `RC_APPS_${appId.toUpperCase().replace(/-/g, '_')}`;\n\t\treturn envVarName.toUpperCase().startsWith(appVariablePrefix);\n\t}\n\n\tprotected async isSet(envVarName: string, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is checking if the environmental variable is set ${envVarName}.`);\n\n\t\tif (!(await this.isReadable(envVarName, appId))) {\n\t\t\tthrow new Error(`The environmental variable \"${envVarName}\" is not readable.`);\n\t\t}\n\n\t\treturn typeof process.env[envVarName] !== 'undefined';\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      AppEnvironmentalVariableBridge: () => AppEnvironmentalVariableBridge\n    });\n    let EnvironmentalVariableBridge;\n    module.link(\"@rocket.chat/apps-engine/server/bridges/EnvironmentalVariableBridge\", {\n      EnvironmentalVariableBridge(v) {\n        EnvironmentalVariableBridge = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class AppEnvironmentalVariableBridge extends EnvironmentalVariableBridge {\n      constructor(orch) {\n        super();\n        this.orch = void 0;\n        this.allowed = void 0;\n        this.orch = orch;\n        this.allowed = ['NODE_ENV', 'ROOT_URL', 'INSTANCE_IP'];\n      }\n      async getValueByName(envVarName, appId) {\n        this.orch.debugLog(\"The App \".concat(appId, \" is getting the environmental variable value \").concat(envVarName, \".\"));\n        if (!(await this.isReadable(envVarName, appId))) {\n          throw new Error(\"The environmental variable \\\"\".concat(envVarName, \"\\\" is not readable.\"));\n        }\n        return process.env[envVarName];\n      }\n      async isReadable(envVarName, appId) {\n        this.orch.debugLog(\"The App \".concat(appId, \" is checking if the environmental variable is readable \").concat(envVarName, \".\"));\n        return this.allowed.includes(envVarName.toUpperCase()) || this.isAppsOwnVariable(envVarName, appId);\n      }\n      isAppsOwnVariable(envVarName, appId) {\n        /**\n         * Replace the letter `-` with `_` since environment variable name doesn't support it\n         */\n        const appVariablePrefix = \"RC_APPS_\".concat(appId.toUpperCase().replace(/-/g, '_'));\n        return envVarName.toUpperCase().startsWith(appVariablePrefix);\n      }\n      async isSet(envVarName, appId) {\n        this.orch.debugLog(\"The App \".concat(appId, \" is checking if the environmental variable is set \").concat(envVarName, \".\"));\n        if (!(await this.isReadable(envVarName, appId))) {\n          throw new Error(\"The environmental variable \\\"\".concat(envVarName, \"\\\" is not readable.\"));\n        }\n        return typeof process.env[envVarName] !== 'undefined';\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","AppEnvironmentalVariableBridge","EnvironmentalVariableBridge","link","v","__reifyWaitForDeps__","constructor","orch","allowed","getValueByName","envVarName","appId","debugLog","concat","isReadable","Error","process","env","includes","toUpperCase","isAppsOwnVariable","appVariablePrefix","replace","startsWith","isSet","__reify_async_result__","_reifyError","self","async"],"sources":["app/apps/server/bridges/environmental.ts"],"sourcesContent":["import type { IAppServerOrchestrator } from '@rocket.chat/apps';\nimport { EnvironmentalVariableBridge } from '@rocket.chat/apps-engine/server/bridges/EnvironmentalVariableBridge';\n\nexport class AppEnvironmentalVariableBridge extends EnvironmentalVariableBridge {\n\tallowed: Array<string>;\n\n\tconstructor(private readonly orch: IAppServerOrchestrator) {\n\t\tsuper();\n\t\tthis.allowed = ['NODE_ENV', 'ROOT_URL', 'INSTANCE_IP'];\n\t}\n\n\tprotected async getValueByName(envVarName: string, appId: string): Promise<string | undefined> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the environmental variable value ${envVarName}.`);\n\n\t\tif (!(await this.isReadable(envVarName, appId))) {\n\t\t\tthrow new Error(`The environmental variable \"${envVarName}\" is not readable.`);\n\t\t}\n\n\t\treturn process.env[envVarName];\n\t}\n\n\tprotected async isReadable(envVarName: string, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is checking if the environmental variable is readable ${envVarName}.`);\n\n\t\treturn this.allowed.includes(envVarName.toUpperCase()) || this.isAppsOwnVariable(envVarName, appId);\n\t}\n\n\tprotected isAppsOwnVariable(envVarName: string, appId: string): boolean {\n\t\t/**\n\t\t * Replace the letter `-` with `_` since environment variable name doesn't support it\n\t\t */\n\t\tconst appVariablePrefix = `RC_APPS_${appId.toUpperCase().replace(/-/g, '_')}`;\n\t\treturn envVarName.toUpperCase().startsWith(appVariablePrefix);\n\t}\n\n\tprotected async isSet(envVarName: string, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is checking if the environmental variable is set ${envVarName}.`);\n\n\t\tif (!(await this.isReadable(envVarName, appId))) {\n\t\t\tthrow new Error(`The environmental variable \"${envVarName}\" is not readable.`);\n\t\t}\n\n\t\treturn typeof process.env[envVarName] !== 'undefined';\n\t}\n}\n"],"mappings":";;;IACAA,MAAA,CAAOC,MAAE;MAAAC,8BAAmC,EAAAA,CAAA,KAAAA;IAAA;IAAA,IAAAC,2BAAsE;IAAAH,MAAA,CAAAI,IAAA;MAAAD,4BAAAE,CAAA;QAAAF,2BAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,oBAAA,WAAAA,oBAAA;IAE5G,MAAOJ,8BAA+B,SAAQC,2BAA2B;MAG9EI,YAA6BC,IAA4B;QACxD,KAAK,EAAE;QAAC,KADoBA,IAAA;QAAA,KAF7BC,OAAO;QAEsB,KAAAD,IAAI,GAAJA,IAAI;QAEhC,IAAI,CAACC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,aAAa,CAAC;MACvD;MAEU,MAAMC,cAAcA,CAACC,UAAkB,EAAEC,KAAa;QAC/D,IAAI,CAACJ,IAAI,CAACK,QAAQ,YAAAC,MAAA,CAAYF,KAAK,mDAAAE,MAAA,CAAgDH,UAAU,MAAG,CAAC;QAEjG,IAAI,EAAE,MAAM,IAAI,CAACI,UAAU,CAACJ,UAAU,EAAEC,KAAK,CAAC,CAAC,EAAE;UAChD,MAAM,IAAII,KAAK,iCAAAF,MAAA,CAAgCH,UAAU,wBAAoB,CAAC;QAC/E;QAEA,OAAOM,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC;MAC/B;MAEU,MAAMI,UAAUA,CAACJ,UAAkB,EAAEC,KAAa;QAC3D,IAAI,CAACJ,IAAI,CAACK,QAAQ,YAAAC,MAAA,CAAYF,KAAK,6DAAAE,MAAA,CAA0DH,UAAU,MAAG,CAAC;QAE3G,OAAO,IAAI,CAACF,OAAO,CAACU,QAAQ,CAACR,UAAU,CAACS,WAAW,EAAE,CAAC,IAAI,IAAI,CAACC,iBAAiB,CAACV,UAAU,EAAEC,KAAK,CAAC;MACpG;MAEUS,iBAAiBA,CAACV,UAAkB,EAAEC,KAAa;QAC5D;;;QAGA,MAAMU,iBAAiB,cAAAR,MAAA,CAAcF,KAAK,CAACQ,WAAW,EAAE,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAE;QAC7E,OAAOZ,UAAU,CAACS,WAAW,EAAE,CAACI,UAAU,CAACF,iBAAiB,CAAC;MAC9D;MAEU,MAAMG,KAAKA,CAACd,UAAkB,EAAEC,KAAa;QACtD,IAAI,CAACJ,IAAI,CAACK,QAAQ,YAAAC,MAAA,CAAYF,KAAK,wDAAAE,MAAA,CAAqDH,UAAU,MAAG,CAAC;QAEtG,IAAI,EAAE,MAAM,IAAI,CAACI,UAAU,CAACJ,UAAU,EAAEC,KAAK,CAAC,CAAC,EAAE;UAChD,MAAM,IAAII,KAAK,iCAAAF,MAAA,CAAgCH,UAAU,wBAAoB,CAAC;QAC/E;QAEA,OAAO,OAAOM,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC,KAAK,WAAW;MACtD;;IACAe,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e072c2bde2704e29cdc9584094c0e34a39fa8387"}
