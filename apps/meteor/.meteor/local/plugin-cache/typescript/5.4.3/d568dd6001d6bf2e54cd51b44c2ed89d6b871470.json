{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/models/raw/LivechatPriority.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/models/raw/LivechatPriority.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/models/raw/LivechatPriority.ts","inputSourceMap":{"version":3,"file":"ee/server/models/raw/LivechatPriority.ts","sourceRoot":"","sources":["ee/server/models/raw/LivechatPriority.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAG3D,OAAO,EAAE,OAAO,EAAE,MAAM,uCAAuC,CAAC;AAEhE,uDAAuD;AACvD,MAAM,OAAO,mBAAoB,SAAQ,OAA0B;IAClE,YAAY,EAAM;QACjB,KAAK,CAAC,EAAE,EAAE,mBAAmB,CAAC,CAAC;IAChC,CAAC;IAES,YAAY;QACrB,OAAO;YACN;gBACC,GAAG,EAAE;oBACJ,IAAI,EAAE,CAAC;iBACP;gBACD,MAAM,EAAE,IAAI;gBACZ,uBAAuB,EAAE;oBACxB,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;iBAC1D;aACD;SACD,CAAC;IACH,CAAC;IAED,iBAAiB,CAAC,SAAiB,EAAE,OAAO,GAAG,EAAE;QAChD,MAAM,KAAK,GAAG;YACb,GAAG,EAAE;gBACJ;oBACC,GAAG,EAAE,SAAS;iBACd;gBACD;oBACC,IAAI,EAAE,SAAS;iBACf;aACD;SACD,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,qBAAqB,CAAC,SAAiB,EAAE,OAAO,GAAG,EAAE;QACpD,MAAM,KAAK,GAAG;YACb,IAAI,EAAE,IAAI,MAAM,CAAC,IAAI,YAAY,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;SAC5D,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,WAAW;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,KAAK,CAAC,kBAAkB;QACvB,OAAO,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACjF,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,GAA+B;QACpD,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IAChG,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,GAAW,EAAE,KAAc,EAAE,IAAa;QAC9D,MAAM,KAAK,GAAG;YACb,GAAG;SACH,CAAC;QAEF,MAAM,MAAM,GAA6D;YACxE,GAAG,CAAC,CAAC,KAAK,IAAI;gBACb,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;gBACtB,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE;aACnB,CAAC,IAAI;gBACL,8BAA8B;gBAC9B,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;aACzC,CAAC;SACF,CAAC;QAEF,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,EAAE;YAC3C,cAAc,EAAE,OAAO;SACvB,CAAC,CAAC;IACJ,CAAC;CACD","sourcesContent":["import type { ILivechatPriority } from '@rocket.chat/core-typings';\nimport type { ILivechatPriorityModel } from '@rocket.chat/model-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Db, UpdateFilter, ModifyResult, IndexDescription, FindCursor } from 'mongodb';\n\nimport { BaseRaw } from '../../../../server/models/raw/BaseRaw';\n\n// TODO need to define type for LivechatPriority object\nexport class LivechatPriorityRaw extends BaseRaw<ILivechatPriority> implements ILivechatPriorityModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'livechat_priority');\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tname: 1,\n\t\t\t\t},\n\t\t\t\tunique: true,\n\t\t\t\tpartialFilterExpression: {\n\t\t\t\t\t$and: [{ name: { $exists: true } }, { name: { $gt: '' } }],\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\n\tfindOneByIdOrName(_idOrName: string, options = {}): Promise<ILivechatPriority | null> {\n\t\tconst query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: _idOrName,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: _idOrName,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindOneNameUsingRegex(_idOrName: string, options = {}): Promise<ILivechatPriority | null> {\n\t\tconst query = {\n\t\t\tname: new RegExp(`^${escapeRegExp(_idOrName.trim())}$`, 'i'),\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindByDirty(): FindCursor<Pick<ILivechatPriority, '_id'>> {\n\t\treturn this.find({ dirty: true }, { projection: { _id: 1 } });\n\t}\n\n\tasync canResetPriorities(): Promise<boolean> {\n\t\treturn Boolean(await this.findOne({ dirty: true }, { projection: { _id: 1 } }));\n\t}\n\n\tasync resetPriorities(ids: ILivechatPriority['_id'][]): Promise<void> {\n\t\tawait this.updateMany({ _id: { $in: ids } }, [{ $set: { dirty: false } }, { $unset: 'name' }]);\n\t}\n\n\tasync updatePriority(_id: string, reset: boolean, name?: string): Promise<ModifyResult<ILivechatPriority>> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t};\n\n\t\tconst update: Pick<UpdateFilter<ILivechatPriority>, '$set' | '$unset'> = {\n\t\t\t...((reset && {\n\t\t\t\t$set: { dirty: false },\n\t\t\t\t$unset: { name: 1 },\n\t\t\t}) || {\n\t\t\t\t// Trim value before inserting\n\t\t\t\t$set: { name: name?.trim(), dirty: true },\n\t\t\t}),\n\t\t};\n\n\t\treturn this.findOneAndUpdate(query, update, {\n\t\t\treturnDocument: 'after',\n\t\t});\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/models/raw/LivechatPriority.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/models/raw/LivechatPriority.ts","inputSourceMap":{"version":3,"file":"ee/server/models/raw/LivechatPriority.ts","sourceRoot":"","sources":["ee/server/models/raw/LivechatPriority.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAG3D,OAAO,EAAE,OAAO,EAAE,MAAM,uCAAuC,CAAC;AAEhE,uDAAuD;AACvD,MAAM,OAAO,mBAAoB,SAAQ,OAA0B;IAClE,YAAY,EAAM;QACjB,KAAK,CAAC,EAAE,EAAE,mBAAmB,CAAC,CAAC;IAChC,CAAC;IAES,YAAY;QACrB,OAAO;YACN;gBACC,GAAG,EAAE;oBACJ,IAAI,EAAE,CAAC;iBACP;gBACD,MAAM,EAAE,IAAI;gBACZ,uBAAuB,EAAE;oBACxB,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;iBAC1D;aACD;SACD,CAAC;IACH,CAAC;IAED,iBAAiB,CAAC,SAAiB,EAAE,OAAO,GAAG,EAAE;QAChD,MAAM,KAAK,GAAG;YACb,GAAG,EAAE;gBACJ;oBACC,GAAG,EAAE,SAAS;iBACd;gBACD;oBACC,IAAI,EAAE,SAAS;iBACf;aACD;SACD,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,qBAAqB,CAAC,SAAiB,EAAE,OAAO,GAAG,EAAE;QACpD,MAAM,KAAK,GAAG;YACb,IAAI,EAAE,IAAI,MAAM,CAAC,IAAI,YAAY,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;SAC5D,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,WAAW;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,KAAK,CAAC,kBAAkB;QACvB,OAAO,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACjF,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,GAA+B;QACpD,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IAChG,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,GAAW,EAAE,KAAc,EAAE,IAAa;QAC9D,MAAM,KAAK,GAAG;YACb,GAAG;SACH,CAAC;QAEF,MAAM,MAAM,GAA6D;YACxE,GAAG,CAAC,CAAC,KAAK,IAAI;gBACb,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;gBACtB,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE;aACnB,CAAC,IAAI;gBACL,8BAA8B;gBAC9B,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;aACzC,CAAC;SACF,CAAC;QAEF,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,EAAE;YAC3C,cAAc,EAAE,OAAO;SACvB,CAAC,CAAC;IACJ,CAAC;CACD","sourcesContent":["import type { ILivechatPriority } from '@rocket.chat/core-typings';\nimport type { ILivechatPriorityModel } from '@rocket.chat/model-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Db, UpdateFilter, ModifyResult, IndexDescription, FindCursor } from 'mongodb';\n\nimport { BaseRaw } from '../../../../server/models/raw/BaseRaw';\n\n// TODO need to define type for LivechatPriority object\nexport class LivechatPriorityRaw extends BaseRaw<ILivechatPriority> implements ILivechatPriorityModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'livechat_priority');\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tname: 1,\n\t\t\t\t},\n\t\t\t\tunique: true,\n\t\t\t\tpartialFilterExpression: {\n\t\t\t\t\t$and: [{ name: { $exists: true } }, { name: { $gt: '' } }],\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\n\tfindOneByIdOrName(_idOrName: string, options = {}): Promise<ILivechatPriority | null> {\n\t\tconst query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: _idOrName,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: _idOrName,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindOneNameUsingRegex(_idOrName: string, options = {}): Promise<ILivechatPriority | null> {\n\t\tconst query = {\n\t\t\tname: new RegExp(`^${escapeRegExp(_idOrName.trim())}$`, 'i'),\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindByDirty(): FindCursor<Pick<ILivechatPriority, '_id'>> {\n\t\treturn this.find({ dirty: true }, { projection: { _id: 1 } });\n\t}\n\n\tasync canResetPriorities(): Promise<boolean> {\n\t\treturn Boolean(await this.findOne({ dirty: true }, { projection: { _id: 1 } }));\n\t}\n\n\tasync resetPriorities(ids: ILivechatPriority['_id'][]): Promise<void> {\n\t\tawait this.updateMany({ _id: { $in: ids } }, [{ $set: { dirty: false } }, { $unset: 'name' }]);\n\t}\n\n\tasync updatePriority(_id: string, reset: boolean, name?: string): Promise<ModifyResult<ILivechatPriority>> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t};\n\n\t\tconst update: Pick<UpdateFilter<ILivechatPriority>, '$set' | '$unset'> = {\n\t\t\t...((reset && {\n\t\t\t\t$set: { dirty: false },\n\t\t\t\t$unset: { name: 1 },\n\t\t\t}) || {\n\t\t\t\t// Trim value before inserting\n\t\t\t\t$set: { name: name?.trim(), dirty: true },\n\t\t\t}),\n\t\t};\n\n\t\treturn this.findOneAndUpdate(query, update, {\n\t\t\treturnDocument: 'after',\n\t\t});\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      LivechatPriorityRaw: () => LivechatPriorityRaw\n    });\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 0);\n    let BaseRaw;\n    module.link(\"../../../../server/models/raw/BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class LivechatPriorityRaw extends BaseRaw {\n      constructor(db) {\n        super(db, 'livechat_priority');\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            name: 1\n          },\n          unique: true,\n          partialFilterExpression: {\n            $and: [{\n              name: {\n                $exists: true\n              }\n            }, {\n              name: {\n                $gt: ''\n              }\n            }]\n          }\n        }];\n      }\n      findOneByIdOrName(_idOrName) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const query = {\n          $or: [{\n            _id: _idOrName\n          }, {\n            name: _idOrName\n          }]\n        };\n        return this.findOne(query, options);\n      }\n      findOneNameUsingRegex(_idOrName) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const query = {\n          name: new RegExp(\"^\".concat(escapeRegExp(_idOrName.trim()), \"$\"), 'i')\n        };\n        return this.findOne(query, options);\n      }\n      findByDirty() {\n        return this.find({\n          dirty: true\n        }, {\n          projection: {\n            _id: 1\n          }\n        });\n      }\n      async canResetPriorities() {\n        return Boolean(await this.findOne({\n          dirty: true\n        }, {\n          projection: {\n            _id: 1\n          }\n        }));\n      }\n      async resetPriorities(ids) {\n        await this.updateMany({\n          _id: {\n            $in: ids\n          }\n        }, [{\n          $set: {\n            dirty: false\n          }\n        }, {\n          $unset: 'name'\n        }]);\n      }\n      async updatePriority(_id, reset, name) {\n        const query = {\n          _id\n        };\n        const update = _objectSpread({}, reset && {\n          $set: {\n            dirty: false\n          },\n          $unset: {\n            name: 1\n          }\n        } || {\n          // Trim value before inserting\n          $set: {\n            name: name === null || name === void 0 ? void 0 : name.trim(),\n            dirty: true\n          }\n        });\n        return this.findOneAndUpdate(query, update, {\n          returnDocument: 'after'\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","LivechatPriorityRaw","escapeRegExp","BaseRaw","__reifyWaitForDeps__","constructor","db","modelIndexes","key","name","unique","partialFilterExpression","$and","$exists","$gt","findOneByIdOrName","_idOrName","options","arguments","length","undefined","query","$or","_id","findOne","findOneNameUsingRegex","RegExp","concat","trim","findByDirty","find","dirty","projection","canResetPriorities","Boolean","resetPriorities","ids","updateMany","$in","$set","$unset","updatePriority","reset","update","findOneAndUpdate","returnDocument","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/models/raw/LivechatPriority.ts"],"sourcesContent":["import type { ILivechatPriority } from '@rocket.chat/core-typings';\nimport type { ILivechatPriorityModel } from '@rocket.chat/model-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Db, UpdateFilter, ModifyResult, IndexDescription, FindCursor } from 'mongodb';\n\nimport { BaseRaw } from '../../../../server/models/raw/BaseRaw';\n\n// TODO need to define type for LivechatPriority object\nexport class LivechatPriorityRaw extends BaseRaw<ILivechatPriority> implements ILivechatPriorityModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'livechat_priority');\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tname: 1,\n\t\t\t\t},\n\t\t\t\tunique: true,\n\t\t\t\tpartialFilterExpression: {\n\t\t\t\t\t$and: [{ name: { $exists: true } }, { name: { $gt: '' } }],\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\n\tfindOneByIdOrName(_idOrName: string, options = {}): Promise<ILivechatPriority | null> {\n\t\tconst query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: _idOrName,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: _idOrName,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindOneNameUsingRegex(_idOrName: string, options = {}): Promise<ILivechatPriority | null> {\n\t\tconst query = {\n\t\t\tname: new RegExp(`^${escapeRegExp(_idOrName.trim())}$`, 'i'),\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindByDirty(): FindCursor<Pick<ILivechatPriority, '_id'>> {\n\t\treturn this.find({ dirty: true }, { projection: { _id: 1 } });\n\t}\n\n\tasync canResetPriorities(): Promise<boolean> {\n\t\treturn Boolean(await this.findOne({ dirty: true }, { projection: { _id: 1 } }));\n\t}\n\n\tasync resetPriorities(ids: ILivechatPriority['_id'][]): Promise<void> {\n\t\tawait this.updateMany({ _id: { $in: ids } }, [{ $set: { dirty: false } }, { $unset: 'name' }]);\n\t}\n\n\tasync updatePriority(_id: string, reset: boolean, name?: string): Promise<ModifyResult<ILivechatPriority>> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t};\n\n\t\tconst update: Pick<UpdateFilter<ILivechatPriority>, '$set' | '$unset'> = {\n\t\t\t...((reset && {\n\t\t\t\t$set: { dirty: false },\n\t\t\t\t$unset: { name: 1 },\n\t\t\t}) || {\n\t\t\t\t// Trim value before inserting\n\t\t\t\t$set: { name: name?.trim(), dirty: true },\n\t\t\t}),\n\t\t};\n\n\t\treturn this.findOneAndUpdate(query, update, {\n\t\t\treturnDocument: 'after',\n\t\t});\n\t}\n}\n"],"mappings":";;;IAEA,IAAAA,aAAS;IAAAC,MAAc,CAAAC,IAAM,uCAA8B;MAAAC,QAAAC,CAAA;QAAAJ,aAAA,GAAAI,CAAA;MAAA;IAAA;IAA3DH,MAAA,CAAOI,MAAE;MAAAC,mBAAoB,EAAAA,CAAA,KAAAA;IAA6B,CAAC;IAAA,IAAAC,YAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,aAAAH,CAAA;QAAAG,YAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,OAAA;IAAAP,MAAA,CAAAC,IAAA;MAAAM,QAAAJ,CAAA;QAAAI,OAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,oBAAA,WAAAA,oBAAA;IAMrD,MAAOH,mBAAoB,SAAQE,OAA0B;MAClEE,YAAYC,EAAM;QACjB,KAAK,CAACA,EAAE,EAAE,mBAAmB,CAAC;MAC/B;MAEUC,YAAYA,CAAA;QACrB,OAAO,CACN;UACCC,GAAG,EAAE;YACJC,IAAI,EAAE;WACN;UACDC,MAAM,EAAE,IAAI;UACZC,uBAAuB,EAAE;YACxBC,IAAI,EAAE,CAAC;cAAEH,IAAI,EAAE;gBAAEI,OAAO,EAAE;cAAI;YAAE,CAAE,EAAE;cAAEJ,IAAI,EAAE;gBAAEK,GAAG,EAAE;cAAE;YAAE,CAAE;;SAE1D,CACD;MACF;MAEAC,iBAAiBA,CAACC,SAAiB,EAAc;QAAA,IAAZC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;QAChD,MAAMG,KAAK,GAAG;UACbC,GAAG,EAAE,CACJ;YACCC,GAAG,EAAEP;WACL,EACD;YACCP,IAAI,EAAEO;WACN;SAEF;QAED,OAAO,IAAI,CAACQ,OAAO,CAACH,KAAK,EAAEJ,OAAO,CAAC;MACpC;MAEAQ,qBAAqBA,CAACT,SAAiB,EAAc;QAAA,IAAZC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;QACpD,MAAMG,KAAK,GAAG;UACbZ,IAAI,EAAE,IAAIiB,MAAM,KAAAC,MAAA,CAAKzB,YAAY,CAACc,SAAS,CAACY,IAAI,EAAE,CAAC,QAAK,GAAG;SAC3D;QAED,OAAO,IAAI,CAACJ,OAAO,CAACH,KAAK,EAAEJ,OAAO,CAAC;MACpC;MAEAY,WAAWA,CAAA;QACV,OAAO,IAAI,CAACC,IAAI,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAE,EAAE;UAAEC,UAAU,EAAE;YAAET,GAAG,EAAE;UAAC;QAAE,CAAE,CAAC;MAC9D;MAEA,MAAMU,kBAAkBA,CAAA;QACvB,OAAOC,OAAO,CAAC,MAAM,IAAI,CAACV,OAAO,CAAC;UAAEO,KAAK,EAAE;QAAI,CAAE,EAAE;UAAEC,UAAU,EAAE;YAAET,GAAG,EAAE;UAAC;QAAE,CAAE,CAAC,CAAC;MAChF;MAEA,MAAMY,eAAeA,CAACC,GAA+B;QACpD,MAAM,IAAI,CAACC,UAAU,CAAC;UAAEd,GAAG,EAAE;YAAEe,GAAG,EAAEF;UAAG;QAAE,CAAE,EAAE,CAAC;UAAEG,IAAI,EAAE;YAAER,KAAK,EAAE;UAAK;QAAE,CAAE,EAAE;UAAES,MAAM,EAAE;QAAM,CAAE,CAAC,CAAC;MAC/F;MAEA,MAAMC,cAAcA,CAAClB,GAAW,EAAEmB,KAAc,EAAEjC,IAAa;QAC9D,MAAMY,KAAK,GAAG;UACbE;SACA;QAED,MAAMoB,MAAM,GAAAhD,aAAA,KACN+C,KAAK,IAAI;UACbH,IAAI,EAAE;YAAER,KAAK,EAAE;UAAK,CAAE;UACtBS,MAAM,EAAE;YAAE/B,IAAI,EAAE;UAAC;SACjB,IAAK;UACL;UACA8B,IAAI,EAAE;YAAE9B,IAAI,EAAEA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmB,IAAI,EAAE;YAAEG,KAAK,EAAE;UAAI;SACvC,CACD;QAED,OAAO,IAAI,CAACa,gBAAgB,CAACvB,KAAK,EAAEsB,MAAM,EAAE;UAC3CE,cAAc,EAAE;SAChB,CAAC;MACH;;IACAC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d568dd6001d6bf2e54cd51b44c2ed89d6b871470"}
