{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/createRoom.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/createRoom.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/createRoom.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/createRoom.ts","sourceRoot":"","sources":["app/lib/server/functions/createRoom.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable complexity */\nimport { AppEvents, Apps } from '@rocket.chat/apps';\nimport { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { Federation, FederationEE, License, Message, Team } from '@rocket.chat/core-services';\nimport type { ICreateRoomParams, ISubscriptionExtraData } from '@rocket.chat/core-services';\nimport type { ICreatedRoom, IUser, IRoom, RoomType } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { beforeCreateRoomCallback } from '../../../../lib/callbacks/beforeCreateRoomCallback';\nimport { getSubscriptionAutotranslateDefaultConfig } from '../../../../server/lib/getSubscriptionAutotranslateDefaultConfig';\nimport { getDefaultSubscriptionPref } from '../../../utils/lib/getDefaultSubscriptionPref';\nimport { getValidRoomName } from '../../../utils/server/lib/getValidRoomName';\nimport { notifyOnRoomChanged, notifyOnSubscriptionChangedById } from '../lib/notifyListener';\nimport { createDirectRoom } from './createDirectRoom';\n\nconst isValidName = (name: unknown): name is string => {\n\treturn typeof name === 'string' && name.trim().length > 0;\n};\n\nconst onlyUsernames = (members: unknown): members is string[] =>\n\tArray.isArray(members) && members.every((member) => typeof member === 'string');\n\nasync function createUsersSubscriptions({\n\troom,\n\tshouldBeHandledByFederation,\n\tmembers,\n\tnow,\n\towner,\n\toptions,\n}: {\n\troom: IRoom;\n\tshouldBeHandledByFederation: boolean;\n\tmembers: string[];\n\tnow: Date;\n\towner: IUser;\n\toptions?: ICreateRoomParams['options'];\n}) {\n\tif (shouldBeHandledByFederation) {\n\t\tconst extra: Partial<ISubscriptionExtraData> = {\n\t\t\t...options?.subscriptionExtra,\n\t\t\topen: true,\n\t\t\tls: now,\n\t\t\troles: ['owner'],\n\t\t\t...(room.prid && { prid: room.prid }),\n\t\t\t...getDefaultSubscriptionPref(owner),\n\t\t};\n\n\t\tconst { insertedId } = await Subscriptions.createWithRoomAndUser(room, owner, extra);\n\n\t\tif (insertedId) {\n\t\t\tawait notifyOnRoomChanged(room, 'inserted');\n\t\t}\n\n\t\treturn;\n\t}\n\n\tconst subs = [];\n\n\tconst memberIds = [];\n\n\tconst membersCursor = Users.findUsersByUsernames<Pick<IUser, '_id' | 'username' | 'settings' | 'federated' | 'roles'>>(members, {\n\t\tprojection: { 'username': 1, 'settings.preferences': 1, 'federated': 1, 'roles': 1 },\n\t});\n\n\tfor await (const member of membersCursor) {\n\t\ttry {\n\t\t\tawait callbacks.run('federation.beforeAddUserToARoom', { user: member, inviter: owner }, room);\n\t\t\tawait callbacks.run('beforeAddedToRoom', { user: member, inviter: owner });\n\t\t} catch (error) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmemberIds.push(member._id);\n\n\t\tconst extra: Partial<ISubscriptionExtraData> = options?.subscriptionExtra || {};\n\n\t\textra.open = true;\n\n\t\tif (room.prid) {\n\t\t\textra.prid = room.prid;\n\t\t}\n\n\t\tif (member.username === owner.username) {\n\t\t\textra.ls = now;\n\t\t\textra.roles = ['owner'];\n\t\t}\n\n\t\tconst autoTranslateConfig = getSubscriptionAutotranslateDefaultConfig(member);\n\n\t\tsubs.push({\n\t\t\tuser: member,\n\t\t\textraData: {\n\t\t\t\t...extra,\n\t\t\t\t...autoTranslateConfig,\n\t\t\t},\n\t\t});\n\t}\n\n\tif (!['d', 'l'].includes(room.t)) {\n\t\tawait Users.addRoomByUserIds(memberIds, room._id);\n\t}\n\n\tconst { insertedIds } = await Subscriptions.createWithRoomAndManyUsers(room, subs);\n\n\tObject.values(insertedIds).forEach((subId) => notifyOnSubscriptionChangedById(subId, 'inserted'));\n\n\tawait Rooms.incUsersCountById(room._id, subs.length);\n}\n\nexport const createRoom = async <T extends RoomType>(\n\ttype: T,\n\tname: T extends 'd' ? undefined : string,\n\towner: T extends 'd' ? IUser | undefined : IUser,\n\tmembers: T extends 'd' ? IUser[] : string[] = [],\n\texcludeSelf?: boolean,\n\treadOnly?: boolean,\n\troomExtraData?: Partial<IRoom>,\n\toptions?: ICreateRoomParams['options'],\n\tsidepanel?: ICreateRoomParams['sidepanel'],\n): Promise<\n\tICreatedRoom & {\n\t\trid: string;\n\t}\n> => {\n\tconst { teamId, ...extraData } = roomExtraData || ({} as IRoom);\n\n\tawait beforeCreateRoomCallback.run({\n\t\ttype,\n\t\t// name,\n\t\t// owner: ownerUsername,\n\t\t// members,\n\t\t// readOnly,\n\t\textraData,\n\t\t// options,\n\t});\n\n\tif (type === 'd') {\n\t\treturn createDirectRoom(members as IUser[], extraData, { ...options, creator: options?.creator || owner?.username });\n\t}\n\n\tif (!onlyUsernames(members)) {\n\t\tthrow new Meteor.Error(\n\t\t\t'error-invalid-members',\n\t\t\t'members should be an array of usernames if provided for rooms other than direct messages',\n\t\t);\n\t}\n\n\tif (!isValidName(name)) {\n\t\tthrow new Meteor.Error('error-invalid-name', 'Invalid name', {\n\t\t\tfunction: 'RocketChat.createRoom',\n\t\t});\n\t}\n\n\tif (!owner) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tfunction: 'RocketChat.createRoom',\n\t\t});\n\t}\n\n\tif (!owner?.username) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tfunction: 'RocketChat.createRoom',\n\t\t});\n\t}\n\n\tif (!excludeSelf && owner.username && !members.includes(owner.username)) {\n\t\tmembers.push(owner.username);\n\t}\n\n\tif (extraData.broadcast) {\n\t\treadOnly = true;\n\t\tdelete extraData.reactWhenReadOnly;\n\t}\n\n\t// this might not be the best way to check if the room is a discussion, we may need a specific field for that\n\tconst isDiscussion = 'prid' in extraData && extraData.prid !== '';\n\n\tconst now = new Date();\n\n\tconst roomProps: Omit<IRoom, '_id' | '_updatedAt'> = {\n\t\tfname: name,\n\t\t_updatedAt: now,\n\t\t...extraData,\n\t\tname: isDiscussion ? name : await getValidRoomName(name.trim(), undefined),\n\t\tt: type,\n\t\tmsgs: 0,\n\t\tusersCount: 0,\n\t\tu: {\n\t\t\t_id: owner._id,\n\t\t\tusername: owner.username,\n\t\t\tname: owner.name,\n\t\t},\n\t\tts: now,\n\t\tro: readOnly === true,\n\t\tsidepanel,\n\t};\n\n\tif (teamId) {\n\t\tconst team = await Team.getOneById(teamId, { projection: { _id: 1 } });\n\t\tif (team) {\n\t\t\troomProps.teamId = team._id;\n\t\t}\n\t}\n\n\tconst tmp = {\n\t\t...roomProps,\n\t\t_USERNAMES: members,\n\t};\n\n\tconst prevent = await Apps.self?.triggerEvent(AppEvents.IPreRoomCreatePrevent, tmp).catch((error) => {\n\t\tif (error.name === AppsEngineException.name) {\n\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t}\n\n\t\tthrow error;\n\t});\n\n\tif (prevent) {\n\t\tthrow new Meteor.Error('error-app-prevented', 'A Rocket.Chat App prevented the room creation.');\n\t}\n\n\tconst eventResult = await Apps.self?.triggerEvent(\n\t\tAppEvents.IPreRoomCreateModify,\n\t\tawait Apps.triggerEvent(AppEvents.IPreRoomCreateExtend, tmp),\n\t);\n\n\tif (eventResult && typeof eventResult === 'object' && delete eventResult._USERNAMES) {\n\t\tObject.assign(roomProps, eventResult);\n\t}\n\n\tconst shouldBeHandledByFederation = roomProps.federated === true || owner.username.includes(':');\n\n\tif (shouldBeHandledByFederation) {\n\t\tconst federation = (await License.hasValidLicense()) ? FederationEE : Federation;\n\t\tawait federation.beforeCreateRoom(roomProps);\n\t}\n\n\tif (type === 'c') {\n\t\tawait callbacks.run('beforeCreateChannel', owner, roomProps);\n\t}\n\n\tconst room = await Rooms.createWithFullRoomData(roomProps);\n\n\tvoid notifyOnRoomChanged(room, 'inserted');\n\n\tawait createUsersSubscriptions({ room, members, now, owner, options, shouldBeHandledByFederation });\n\n\tif (type === 'c') {\n\t\tif (room.teamId) {\n\t\t\tconst team = await Team.getOneById(room.teamId);\n\t\t\tif (team) {\n\t\t\t\tawait Message.saveSystemMessage('user-added-room-to-team', team.roomId, room.name || '', owner);\n\t\t\t}\n\t\t}\n\t\tcallbacks.runAsync('afterCreateChannel', owner, room);\n\t} else if (type === 'p') {\n\t\tcallbacks.runAsync('afterCreatePrivateGroup', owner, room);\n\t}\n\tcallbacks.runAsync('afterCreateRoom', owner, room);\n\tif (shouldBeHandledByFederation) {\n\t\tcallbacks.runAsync('federation.afterCreateFederatedRoom', room, { owner, originalMemberList: members });\n\t}\n\n\tvoid Apps.self?.triggerEvent(AppEvents.IPostRoomCreate, room);\n\treturn {\n\t\trid: room._id, // backwards compatible\n\t\tinserted: true,\n\t\t...room,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/createRoom.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/createRoom.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/createRoom.ts","sourceRoot":"","sources":["app/lib/server/functions/createRoom.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable complexity */\nimport { AppEvents, Apps } from '@rocket.chat/apps';\nimport { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { Federation, FederationEE, License, Message, Team } from '@rocket.chat/core-services';\nimport type { ICreateRoomParams, ISubscriptionExtraData } from '@rocket.chat/core-services';\nimport type { ICreatedRoom, IUser, IRoom, RoomType } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { beforeCreateRoomCallback } from '../../../../lib/callbacks/beforeCreateRoomCallback';\nimport { getSubscriptionAutotranslateDefaultConfig } from '../../../../server/lib/getSubscriptionAutotranslateDefaultConfig';\nimport { getDefaultSubscriptionPref } from '../../../utils/lib/getDefaultSubscriptionPref';\nimport { getValidRoomName } from '../../../utils/server/lib/getValidRoomName';\nimport { notifyOnRoomChanged, notifyOnSubscriptionChangedById } from '../lib/notifyListener';\nimport { createDirectRoom } from './createDirectRoom';\n\nconst isValidName = (name: unknown): name is string => {\n\treturn typeof name === 'string' && name.trim().length > 0;\n};\n\nconst onlyUsernames = (members: unknown): members is string[] =>\n\tArray.isArray(members) && members.every((member) => typeof member === 'string');\n\nasync function createUsersSubscriptions({\n\troom,\n\tshouldBeHandledByFederation,\n\tmembers,\n\tnow,\n\towner,\n\toptions,\n}: {\n\troom: IRoom;\n\tshouldBeHandledByFederation: boolean;\n\tmembers: string[];\n\tnow: Date;\n\towner: IUser;\n\toptions?: ICreateRoomParams['options'];\n}) {\n\tif (shouldBeHandledByFederation) {\n\t\tconst extra: Partial<ISubscriptionExtraData> = {\n\t\t\t...options?.subscriptionExtra,\n\t\t\topen: true,\n\t\t\tls: now,\n\t\t\troles: ['owner'],\n\t\t\t...(room.prid && { prid: room.prid }),\n\t\t\t...getDefaultSubscriptionPref(owner),\n\t\t};\n\n\t\tconst { insertedId } = await Subscriptions.createWithRoomAndUser(room, owner, extra);\n\n\t\tif (insertedId) {\n\t\t\tawait notifyOnRoomChanged(room, 'inserted');\n\t\t}\n\n\t\treturn;\n\t}\n\n\tconst subs = [];\n\n\tconst memberIds = [];\n\n\tconst membersCursor = Users.findUsersByUsernames<Pick<IUser, '_id' | 'username' | 'settings' | 'federated' | 'roles'>>(members, {\n\t\tprojection: { 'username': 1, 'settings.preferences': 1, 'federated': 1, 'roles': 1 },\n\t});\n\n\tfor await (const member of membersCursor) {\n\t\ttry {\n\t\t\tawait callbacks.run('federation.beforeAddUserToARoom', { user: member, inviter: owner }, room);\n\t\t\tawait callbacks.run('beforeAddedToRoom', { user: member, inviter: owner });\n\t\t} catch (error) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmemberIds.push(member._id);\n\n\t\tconst extra: Partial<ISubscriptionExtraData> = options?.subscriptionExtra || {};\n\n\t\textra.open = true;\n\n\t\tif (room.prid) {\n\t\t\textra.prid = room.prid;\n\t\t}\n\n\t\tif (member.username === owner.username) {\n\t\t\textra.ls = now;\n\t\t\textra.roles = ['owner'];\n\t\t}\n\n\t\tconst autoTranslateConfig = getSubscriptionAutotranslateDefaultConfig(member);\n\n\t\tsubs.push({\n\t\t\tuser: member,\n\t\t\textraData: {\n\t\t\t\t...extra,\n\t\t\t\t...autoTranslateConfig,\n\t\t\t},\n\t\t});\n\t}\n\n\tif (!['d', 'l'].includes(room.t)) {\n\t\tawait Users.addRoomByUserIds(memberIds, room._id);\n\t}\n\n\tconst { insertedIds } = await Subscriptions.createWithRoomAndManyUsers(room, subs);\n\n\tObject.values(insertedIds).forEach((subId) => notifyOnSubscriptionChangedById(subId, 'inserted'));\n\n\tawait Rooms.incUsersCountById(room._id, subs.length);\n}\n\nexport const createRoom = async <T extends RoomType>(\n\ttype: T,\n\tname: T extends 'd' ? undefined : string,\n\towner: T extends 'd' ? IUser | undefined : IUser,\n\tmembers: T extends 'd' ? IUser[] : string[] = [],\n\texcludeSelf?: boolean,\n\treadOnly?: boolean,\n\troomExtraData?: Partial<IRoom>,\n\toptions?: ICreateRoomParams['options'],\n\tsidepanel?: ICreateRoomParams['sidepanel'],\n): Promise<\n\tICreatedRoom & {\n\t\trid: string;\n\t}\n> => {\n\tconst { teamId, ...extraData } = roomExtraData || ({} as IRoom);\n\n\tawait beforeCreateRoomCallback.run({\n\t\ttype,\n\t\t// name,\n\t\t// owner: ownerUsername,\n\t\t// members,\n\t\t// readOnly,\n\t\textraData,\n\t\t// options,\n\t});\n\n\tif (type === 'd') {\n\t\treturn createDirectRoom(members as IUser[], extraData, { ...options, creator: options?.creator || owner?.username });\n\t}\n\n\tif (!onlyUsernames(members)) {\n\t\tthrow new Meteor.Error(\n\t\t\t'error-invalid-members',\n\t\t\t'members should be an array of usernames if provided for rooms other than direct messages',\n\t\t);\n\t}\n\n\tif (!isValidName(name)) {\n\t\tthrow new Meteor.Error('error-invalid-name', 'Invalid name', {\n\t\t\tfunction: 'RocketChat.createRoom',\n\t\t});\n\t}\n\n\tif (!owner) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tfunction: 'RocketChat.createRoom',\n\t\t});\n\t}\n\n\tif (!owner?.username) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tfunction: 'RocketChat.createRoom',\n\t\t});\n\t}\n\n\tif (!excludeSelf && owner.username && !members.includes(owner.username)) {\n\t\tmembers.push(owner.username);\n\t}\n\n\tif (extraData.broadcast) {\n\t\treadOnly = true;\n\t\tdelete extraData.reactWhenReadOnly;\n\t}\n\n\t// this might not be the best way to check if the room is a discussion, we may need a specific field for that\n\tconst isDiscussion = 'prid' in extraData && extraData.prid !== '';\n\n\tconst now = new Date();\n\n\tconst roomProps: Omit<IRoom, '_id' | '_updatedAt'> = {\n\t\tfname: name,\n\t\t_updatedAt: now,\n\t\t...extraData,\n\t\tname: isDiscussion ? name : await getValidRoomName(name.trim(), undefined),\n\t\tt: type,\n\t\tmsgs: 0,\n\t\tusersCount: 0,\n\t\tu: {\n\t\t\t_id: owner._id,\n\t\t\tusername: owner.username,\n\t\t\tname: owner.name,\n\t\t},\n\t\tts: now,\n\t\tro: readOnly === true,\n\t\tsidepanel,\n\t};\n\n\tif (teamId) {\n\t\tconst team = await Team.getOneById(teamId, { projection: { _id: 1 } });\n\t\tif (team) {\n\t\t\troomProps.teamId = team._id;\n\t\t}\n\t}\n\n\tconst tmp = {\n\t\t...roomProps,\n\t\t_USERNAMES: members,\n\t};\n\n\tconst prevent = await Apps.self?.triggerEvent(AppEvents.IPreRoomCreatePrevent, tmp).catch((error) => {\n\t\tif (error.name === AppsEngineException.name) {\n\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t}\n\n\t\tthrow error;\n\t});\n\n\tif (prevent) {\n\t\tthrow new Meteor.Error('error-app-prevented', 'A Rocket.Chat App prevented the room creation.');\n\t}\n\n\tconst eventResult = await Apps.self?.triggerEvent(\n\t\tAppEvents.IPreRoomCreateModify,\n\t\tawait Apps.triggerEvent(AppEvents.IPreRoomCreateExtend, tmp),\n\t);\n\n\tif (eventResult && typeof eventResult === 'object' && delete eventResult._USERNAMES) {\n\t\tObject.assign(roomProps, eventResult);\n\t}\n\n\tconst shouldBeHandledByFederation = roomProps.federated === true || owner.username.includes(':');\n\n\tif (shouldBeHandledByFederation) {\n\t\tconst federation = (await License.hasValidLicense()) ? FederationEE : Federation;\n\t\tawait federation.beforeCreateRoom(roomProps);\n\t}\n\n\tif (type === 'c') {\n\t\tawait callbacks.run('beforeCreateChannel', owner, roomProps);\n\t}\n\n\tconst room = await Rooms.createWithFullRoomData(roomProps);\n\n\tvoid notifyOnRoomChanged(room, 'inserted');\n\n\tawait createUsersSubscriptions({ room, members, now, owner, options, shouldBeHandledByFederation });\n\n\tif (type === 'c') {\n\t\tif (room.teamId) {\n\t\t\tconst team = await Team.getOneById(room.teamId);\n\t\t\tif (team) {\n\t\t\t\tawait Message.saveSystemMessage('user-added-room-to-team', team.roomId, room.name || '', owner);\n\t\t\t}\n\t\t}\n\t\tcallbacks.runAsync('afterCreateChannel', owner, room);\n\t} else if (type === 'p') {\n\t\tcallbacks.runAsync('afterCreatePrivateGroup', owner, room);\n\t}\n\tcallbacks.runAsync('afterCreateRoom', owner, room);\n\tif (shouldBeHandledByFederation) {\n\t\tcallbacks.runAsync('federation.afterCreateFederatedRoom', room, { owner, originalMemberList: members });\n\t}\n\n\tvoid Apps.self?.triggerEvent(AppEvents.IPostRoomCreate, room);\n\treturn {\n\t\trid: room._id, // backwards compatible\n\t\tinserted: true,\n\t\t...room,\n\t};\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectWithoutProperties;\n    module.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n      default(v) {\n        _objectWithoutProperties = v;\n      }\n    }, 0);\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 1);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 2);\n    const _excluded = [\"teamId\"];\n    module.export({\n      createRoom: () => createRoom\n    });\n    let AppEvents, Apps;\n    module.link(\"@rocket.chat/apps\", {\n      AppEvents(v) {\n        AppEvents = v;\n      },\n      Apps(v) {\n        Apps = v;\n      }\n    }, 0);\n    let AppsEngineException;\n    module.link(\"@rocket.chat/apps-engine/definition/exceptions\", {\n      AppsEngineException(v) {\n        AppsEngineException = v;\n      }\n    }, 1);\n    let Federation, FederationEE, License, Message, Team;\n    module.link(\"@rocket.chat/core-services\", {\n      Federation(v) {\n        Federation = v;\n      },\n      FederationEE(v) {\n        FederationEE = v;\n      },\n      License(v) {\n        License = v;\n      },\n      Message(v) {\n        Message = v;\n      },\n      Team(v) {\n        Team = v;\n      }\n    }, 2);\n    let Rooms, Subscriptions, Users;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 3);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 4);\n    let callbacks;\n    module.link(\"../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 5);\n    let beforeCreateRoomCallback;\n    module.link(\"../../../../lib/callbacks/beforeCreateRoomCallback\", {\n      beforeCreateRoomCallback(v) {\n        beforeCreateRoomCallback = v;\n      }\n    }, 6);\n    let getSubscriptionAutotranslateDefaultConfig;\n    module.link(\"../../../../server/lib/getSubscriptionAutotranslateDefaultConfig\", {\n      getSubscriptionAutotranslateDefaultConfig(v) {\n        getSubscriptionAutotranslateDefaultConfig = v;\n      }\n    }, 7);\n    let getDefaultSubscriptionPref;\n    module.link(\"../../../utils/lib/getDefaultSubscriptionPref\", {\n      getDefaultSubscriptionPref(v) {\n        getDefaultSubscriptionPref = v;\n      }\n    }, 8);\n    let getValidRoomName;\n    module.link(\"../../../utils/server/lib/getValidRoomName\", {\n      getValidRoomName(v) {\n        getValidRoomName = v;\n      }\n    }, 9);\n    let notifyOnRoomChanged, notifyOnSubscriptionChangedById;\n    module.link(\"../lib/notifyListener\", {\n      notifyOnRoomChanged(v) {\n        notifyOnRoomChanged = v;\n      },\n      notifyOnSubscriptionChangedById(v) {\n        notifyOnSubscriptionChangedById = v;\n      }\n    }, 10);\n    let createDirectRoom;\n    module.link(\"./createDirectRoom\", {\n      createDirectRoom(v) {\n        createDirectRoom = v;\n      }\n    }, 11);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const isValidName = name => {\n      return typeof name === 'string' && name.trim().length > 0;\n    };\n    const onlyUsernames = members => Array.isArray(members) && members.every(member => typeof member === 'string');\n    async function createUsersSubscriptions(_ref) {\n      let {\n        room,\n        shouldBeHandledByFederation,\n        members,\n        now,\n        owner,\n        options\n      } = _ref;\n      if (shouldBeHandledByFederation) {\n        const extra = _objectSpread(_objectSpread(_objectSpread({}, options === null || options === void 0 ? void 0 : options.subscriptionExtra), {}, {\n          open: true,\n          ls: now,\n          roles: ['owner']\n        }, room.prid && {\n          prid: room.prid\n        }), getDefaultSubscriptionPref(owner));\n        const {\n          insertedId\n        } = await Subscriptions.createWithRoomAndUser(room, owner, extra);\n        if (insertedId) {\n          await notifyOnRoomChanged(room, 'inserted');\n        }\n        return;\n      }\n      const subs = [];\n      const memberIds = [];\n      const membersCursor = Users.findUsersByUsernames(members, {\n        projection: {\n          'username': 1,\n          'settings.preferences': 1,\n          'federated': 1,\n          'roles': 1\n        }\n      });\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(membersCursor), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const member = _step.value;\n          {\n            try {\n              await callbacks.run('federation.beforeAddUserToARoom', {\n                user: member,\n                inviter: owner\n              }, room);\n              await callbacks.run('beforeAddedToRoom', {\n                user: member,\n                inviter: owner\n              });\n            } catch (error) {\n              continue;\n            }\n            memberIds.push(member._id);\n            const extra = (options === null || options === void 0 ? void 0 : options.subscriptionExtra) || {};\n            extra.open = true;\n            if (room.prid) {\n              extra.prid = room.prid;\n            }\n            if (member.username === owner.username) {\n              extra.ls = now;\n              extra.roles = ['owner'];\n            }\n            const autoTranslateConfig = getSubscriptionAutotranslateDefaultConfig(member);\n            subs.push({\n              user: member,\n              extraData: _objectSpread(_objectSpread({}, extra), autoTranslateConfig)\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      if (!['d', 'l'].includes(room.t)) {\n        await Users.addRoomByUserIds(memberIds, room._id);\n      }\n      const {\n        insertedIds\n      } = await Subscriptions.createWithRoomAndManyUsers(room, subs);\n      Object.values(insertedIds).forEach(subId => notifyOnSubscriptionChangedById(subId, 'inserted'));\n      await Rooms.incUsersCountById(room._id, subs.length);\n    }\n    const createRoom = async function (type, name, owner) {\n      var _Apps$self, _Apps$self2, _Apps$self3;\n      let members = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n      let excludeSelf = arguments.length > 4 ? arguments[4] : undefined;\n      let readOnly = arguments.length > 5 ? arguments[5] : undefined;\n      let roomExtraData = arguments.length > 6 ? arguments[6] : undefined;\n      let options = arguments.length > 7 ? arguments[7] : undefined;\n      let sidepanel = arguments.length > 8 ? arguments[8] : undefined;\n      const _ref2 = roomExtraData || {},\n        {\n          teamId\n        } = _ref2,\n        extraData = _objectWithoutProperties(_ref2, _excluded);\n      await beforeCreateRoomCallback.run({\n        type,\n        // name,\n        // owner: ownerUsername,\n        // members,\n        // readOnly,\n        extraData\n        // options,\n      });\n      if (type === 'd') {\n        return createDirectRoom(members, extraData, _objectSpread(_objectSpread({}, options), {}, {\n          creator: (options === null || options === void 0 ? void 0 : options.creator) || (owner === null || owner === void 0 ? void 0 : owner.username)\n        }));\n      }\n      if (!onlyUsernames(members)) {\n        throw new Meteor.Error('error-invalid-members', 'members should be an array of usernames if provided for rooms other than direct messages');\n      }\n      if (!isValidName(name)) {\n        throw new Meteor.Error('error-invalid-name', 'Invalid name', {\n          function: 'RocketChat.createRoom'\n        });\n      }\n      if (!owner) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          function: 'RocketChat.createRoom'\n        });\n      }\n      if (!(owner !== null && owner !== void 0 && owner.username)) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          function: 'RocketChat.createRoom'\n        });\n      }\n      if (!excludeSelf && owner.username && !members.includes(owner.username)) {\n        members.push(owner.username);\n      }\n      if (extraData.broadcast) {\n        readOnly = true;\n        delete extraData.reactWhenReadOnly;\n      }\n      // this might not be the best way to check if the room is a discussion, we may need a specific field for that\n      const isDiscussion = 'prid' in extraData && extraData.prid !== '';\n      const now = new Date();\n      const roomProps = _objectSpread(_objectSpread({\n        fname: name,\n        _updatedAt: now\n      }, extraData), {}, {\n        name: isDiscussion ? name : await getValidRoomName(name.trim(), undefined),\n        t: type,\n        msgs: 0,\n        usersCount: 0,\n        u: {\n          _id: owner._id,\n          username: owner.username,\n          name: owner.name\n        },\n        ts: now,\n        ro: readOnly === true,\n        sidepanel\n      });\n      if (teamId) {\n        const team = await Team.getOneById(teamId, {\n          projection: {\n            _id: 1\n          }\n        });\n        if (team) {\n          roomProps.teamId = team._id;\n        }\n      }\n      const tmp = _objectSpread(_objectSpread({}, roomProps), {}, {\n        _USERNAMES: members\n      });\n      const prevent = await ((_Apps$self = Apps.self) === null || _Apps$self === void 0 ? void 0 : _Apps$self.triggerEvent(AppEvents.IPreRoomCreatePrevent, tmp).catch(error => {\n        if (error.name === AppsEngineException.name) {\n          throw new Meteor.Error('error-app-prevented', error.message);\n        }\n        throw error;\n      }));\n      if (prevent) {\n        throw new Meteor.Error('error-app-prevented', 'A Rocket.Chat App prevented the room creation.');\n      }\n      const eventResult = await ((_Apps$self2 = Apps.self) === null || _Apps$self2 === void 0 ? void 0 : _Apps$self2.triggerEvent(AppEvents.IPreRoomCreateModify, await Apps.triggerEvent(AppEvents.IPreRoomCreateExtend, tmp)));\n      if (eventResult && typeof eventResult === 'object' && delete eventResult._USERNAMES) {\n        Object.assign(roomProps, eventResult);\n      }\n      const shouldBeHandledByFederation = roomProps.federated === true || owner.username.includes(':');\n      if (shouldBeHandledByFederation) {\n        const federation = (await License.hasValidLicense()) ? FederationEE : Federation;\n        await federation.beforeCreateRoom(roomProps);\n      }\n      if (type === 'c') {\n        await callbacks.run('beforeCreateChannel', owner, roomProps);\n      }\n      const room = await Rooms.createWithFullRoomData(roomProps);\n      void notifyOnRoomChanged(room, 'inserted');\n      await createUsersSubscriptions({\n        room,\n        members,\n        now,\n        owner,\n        options,\n        shouldBeHandledByFederation\n      });\n      if (type === 'c') {\n        if (room.teamId) {\n          const team = await Team.getOneById(room.teamId);\n          if (team) {\n            await Message.saveSystemMessage('user-added-room-to-team', team.roomId, room.name || '', owner);\n          }\n        }\n        callbacks.runAsync('afterCreateChannel', owner, room);\n      } else if (type === 'p') {\n        callbacks.runAsync('afterCreatePrivateGroup', owner, room);\n      }\n      callbacks.runAsync('afterCreateRoom', owner, room);\n      if (shouldBeHandledByFederation) {\n        callbacks.runAsync('federation.afterCreateFederatedRoom', room, {\n          owner,\n          originalMemberList: members\n        });\n      }\n      void ((_Apps$self3 = Apps.self) === null || _Apps$self3 === void 0 ? void 0 : _Apps$self3.triggerEvent(AppEvents.IPostRoomCreate, room));\n      return _objectSpread({\n        rid: room._id,\n        // backwards compatible\n        inserted: true\n      }, room);\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectWithoutProperties","module","link","default","v","_objectSpread","_asyncIterator","_excluded","export","createRoom","AppEvents","Apps","AppsEngineException","Federation","FederationEE","License","Message","Team","Rooms","Subscriptions","Users","Meteor","callbacks","beforeCreateRoomCallback","getSubscriptionAutotranslateDefaultConfig","getDefaultSubscriptionPref","getValidRoomName","notifyOnRoomChanged","notifyOnSubscriptionChangedById","createDirectRoom","__reifyWaitForDeps__","isValidName","name","trim","length","onlyUsernames","members","Array","isArray","every","member","createUsersSubscriptions","_ref","room","shouldBeHandledByFederation","now","owner","options","extra","subscriptionExtra","open","ls","roles","prid","insertedId","createWithRoomAndUser","subs","memberIds","membersCursor","findUsersByUsernames","projection","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","value","run","user","inviter","error","push","_id","username","autoTranslateConfig","extraData","err","return","includes","t","addRoomByUserIds","insertedIds","createWithRoomAndManyUsers","Object","values","forEach","subId","incUsersCountById","type","_Apps$self","_Apps$self2","_Apps$self3","arguments","undefined","excludeSelf","readOnly","roomExtraData","sidepanel","_ref2","teamId","creator","Error","function","broadcast","reactWhenReadOnly","isDiscussion","Date","roomProps","fname","_updatedAt","msgs","usersCount","u","ts","ro","team","getOneById","tmp","_USERNAMES","prevent","self","triggerEvent","IPreRoomCreatePrevent","catch","message","eventResult","IPreRoomCreateModify","IPreRoomCreateExtend","assign","federated","federation","hasValidLicense","beforeCreateRoom","createWithFullRoomData","saveSystemMessage","roomId","runAsync","originalMemberList","IPostRoomCreate","rid","inserted","__reify_async_result__","_reifyError","async"],"sources":["app/lib/server/functions/createRoom.ts"],"sourcesContent":["/* eslint-disable complexity */\nimport { AppEvents, Apps } from '@rocket.chat/apps';\nimport { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { Federation, FederationEE, License, Message, Team } from '@rocket.chat/core-services';\nimport type { ICreateRoomParams, ISubscriptionExtraData } from '@rocket.chat/core-services';\nimport type { ICreatedRoom, IUser, IRoom, RoomType } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { beforeCreateRoomCallback } from '../../../../lib/callbacks/beforeCreateRoomCallback';\nimport { getSubscriptionAutotranslateDefaultConfig } from '../../../../server/lib/getSubscriptionAutotranslateDefaultConfig';\nimport { getDefaultSubscriptionPref } from '../../../utils/lib/getDefaultSubscriptionPref';\nimport { getValidRoomName } from '../../../utils/server/lib/getValidRoomName';\nimport { notifyOnRoomChanged, notifyOnSubscriptionChangedById } from '../lib/notifyListener';\nimport { createDirectRoom } from './createDirectRoom';\n\nconst isValidName = (name: unknown): name is string => {\n\treturn typeof name === 'string' && name.trim().length > 0;\n};\n\nconst onlyUsernames = (members: unknown): members is string[] =>\n\tArray.isArray(members) && members.every((member) => typeof member === 'string');\n\nasync function createUsersSubscriptions({\n\troom,\n\tshouldBeHandledByFederation,\n\tmembers,\n\tnow,\n\towner,\n\toptions,\n}: {\n\troom: IRoom;\n\tshouldBeHandledByFederation: boolean;\n\tmembers: string[];\n\tnow: Date;\n\towner: IUser;\n\toptions?: ICreateRoomParams['options'];\n}) {\n\tif (shouldBeHandledByFederation) {\n\t\tconst extra: Partial<ISubscriptionExtraData> = {\n\t\t\t...options?.subscriptionExtra,\n\t\t\topen: true,\n\t\t\tls: now,\n\t\t\troles: ['owner'],\n\t\t\t...(room.prid && { prid: room.prid }),\n\t\t\t...getDefaultSubscriptionPref(owner),\n\t\t};\n\n\t\tconst { insertedId } = await Subscriptions.createWithRoomAndUser(room, owner, extra);\n\n\t\tif (insertedId) {\n\t\t\tawait notifyOnRoomChanged(room, 'inserted');\n\t\t}\n\n\t\treturn;\n\t}\n\n\tconst subs = [];\n\n\tconst memberIds = [];\n\n\tconst membersCursor = Users.findUsersByUsernames<Pick<IUser, '_id' | 'username' | 'settings' | 'federated' | 'roles'>>(members, {\n\t\tprojection: { 'username': 1, 'settings.preferences': 1, 'federated': 1, 'roles': 1 },\n\t});\n\n\tfor await (const member of membersCursor) {\n\t\ttry {\n\t\t\tawait callbacks.run('federation.beforeAddUserToARoom', { user: member, inviter: owner }, room);\n\t\t\tawait callbacks.run('beforeAddedToRoom', { user: member, inviter: owner });\n\t\t} catch (error) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmemberIds.push(member._id);\n\n\t\tconst extra: Partial<ISubscriptionExtraData> = options?.subscriptionExtra || {};\n\n\t\textra.open = true;\n\n\t\tif (room.prid) {\n\t\t\textra.prid = room.prid;\n\t\t}\n\n\t\tif (member.username === owner.username) {\n\t\t\textra.ls = now;\n\t\t\textra.roles = ['owner'];\n\t\t}\n\n\t\tconst autoTranslateConfig = getSubscriptionAutotranslateDefaultConfig(member);\n\n\t\tsubs.push({\n\t\t\tuser: member,\n\t\t\textraData: {\n\t\t\t\t...extra,\n\t\t\t\t...autoTranslateConfig,\n\t\t\t},\n\t\t});\n\t}\n\n\tif (!['d', 'l'].includes(room.t)) {\n\t\tawait Users.addRoomByUserIds(memberIds, room._id);\n\t}\n\n\tconst { insertedIds } = await Subscriptions.createWithRoomAndManyUsers(room, subs);\n\n\tObject.values(insertedIds).forEach((subId) => notifyOnSubscriptionChangedById(subId, 'inserted'));\n\n\tawait Rooms.incUsersCountById(room._id, subs.length);\n}\n\nexport const createRoom = async <T extends RoomType>(\n\ttype: T,\n\tname: T extends 'd' ? undefined : string,\n\towner: T extends 'd' ? IUser | undefined : IUser,\n\tmembers: T extends 'd' ? IUser[] : string[] = [],\n\texcludeSelf?: boolean,\n\treadOnly?: boolean,\n\troomExtraData?: Partial<IRoom>,\n\toptions?: ICreateRoomParams['options'],\n\tsidepanel?: ICreateRoomParams['sidepanel'],\n): Promise<\n\tICreatedRoom & {\n\t\trid: string;\n\t}\n> => {\n\tconst { teamId, ...extraData } = roomExtraData || ({} as IRoom);\n\n\tawait beforeCreateRoomCallback.run({\n\t\ttype,\n\t\t// name,\n\t\t// owner: ownerUsername,\n\t\t// members,\n\t\t// readOnly,\n\t\textraData,\n\t\t// options,\n\t});\n\n\tif (type === 'd') {\n\t\treturn createDirectRoom(members as IUser[], extraData, { ...options, creator: options?.creator || owner?.username });\n\t}\n\n\tif (!onlyUsernames(members)) {\n\t\tthrow new Meteor.Error(\n\t\t\t'error-invalid-members',\n\t\t\t'members should be an array of usernames if provided for rooms other than direct messages',\n\t\t);\n\t}\n\n\tif (!isValidName(name)) {\n\t\tthrow new Meteor.Error('error-invalid-name', 'Invalid name', {\n\t\t\tfunction: 'RocketChat.createRoom',\n\t\t});\n\t}\n\n\tif (!owner) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tfunction: 'RocketChat.createRoom',\n\t\t});\n\t}\n\n\tif (!owner?.username) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tfunction: 'RocketChat.createRoom',\n\t\t});\n\t}\n\n\tif (!excludeSelf && owner.username && !members.includes(owner.username)) {\n\t\tmembers.push(owner.username);\n\t}\n\n\tif (extraData.broadcast) {\n\t\treadOnly = true;\n\t\tdelete extraData.reactWhenReadOnly;\n\t}\n\n\t// this might not be the best way to check if the room is a discussion, we may need a specific field for that\n\tconst isDiscussion = 'prid' in extraData && extraData.prid !== '';\n\n\tconst now = new Date();\n\n\tconst roomProps: Omit<IRoom, '_id' | '_updatedAt'> = {\n\t\tfname: name,\n\t\t_updatedAt: now,\n\t\t...extraData,\n\t\tname: isDiscussion ? name : await getValidRoomName(name.trim(), undefined),\n\t\tt: type,\n\t\tmsgs: 0,\n\t\tusersCount: 0,\n\t\tu: {\n\t\t\t_id: owner._id,\n\t\t\tusername: owner.username,\n\t\t\tname: owner.name,\n\t\t},\n\t\tts: now,\n\t\tro: readOnly === true,\n\t\tsidepanel,\n\t};\n\n\tif (teamId) {\n\t\tconst team = await Team.getOneById(teamId, { projection: { _id: 1 } });\n\t\tif (team) {\n\t\t\troomProps.teamId = team._id;\n\t\t}\n\t}\n\n\tconst tmp = {\n\t\t...roomProps,\n\t\t_USERNAMES: members,\n\t};\n\n\tconst prevent = await Apps.self?.triggerEvent(AppEvents.IPreRoomCreatePrevent, tmp).catch((error) => {\n\t\tif (error.name === AppsEngineException.name) {\n\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t}\n\n\t\tthrow error;\n\t});\n\n\tif (prevent) {\n\t\tthrow new Meteor.Error('error-app-prevented', 'A Rocket.Chat App prevented the room creation.');\n\t}\n\n\tconst eventResult = await Apps.self?.triggerEvent(\n\t\tAppEvents.IPreRoomCreateModify,\n\t\tawait Apps.triggerEvent(AppEvents.IPreRoomCreateExtend, tmp),\n\t);\n\n\tif (eventResult && typeof eventResult === 'object' && delete eventResult._USERNAMES) {\n\t\tObject.assign(roomProps, eventResult);\n\t}\n\n\tconst shouldBeHandledByFederation = roomProps.federated === true || owner.username.includes(':');\n\n\tif (shouldBeHandledByFederation) {\n\t\tconst federation = (await License.hasValidLicense()) ? FederationEE : Federation;\n\t\tawait federation.beforeCreateRoom(roomProps);\n\t}\n\n\tif (type === 'c') {\n\t\tawait callbacks.run('beforeCreateChannel', owner, roomProps);\n\t}\n\n\tconst room = await Rooms.createWithFullRoomData(roomProps);\n\n\tvoid notifyOnRoomChanged(room, 'inserted');\n\n\tawait createUsersSubscriptions({ room, members, now, owner, options, shouldBeHandledByFederation });\n\n\tif (type === 'c') {\n\t\tif (room.teamId) {\n\t\t\tconst team = await Team.getOneById(room.teamId);\n\t\t\tif (team) {\n\t\t\t\tawait Message.saveSystemMessage('user-added-room-to-team', team.roomId, room.name || '', owner);\n\t\t\t}\n\t\t}\n\t\tcallbacks.runAsync('afterCreateChannel', owner, room);\n\t} else if (type === 'p') {\n\t\tcallbacks.runAsync('afterCreatePrivateGroup', owner, room);\n\t}\n\tcallbacks.runAsync('afterCreateRoom', owner, room);\n\tif (shouldBeHandledByFederation) {\n\t\tcallbacks.runAsync('federation.afterCreateFederatedRoom', room, { owner, originalMemberList: members });\n\t}\n\n\tvoid Apps.self?.triggerEvent(AppEvents.IPostRoomCreate, room);\n\treturn {\n\t\trid: room._id, // backwards compatible\n\t\tinserted: true,\n\t\t...room,\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"83433e514e5fa0e94da92bb60912e514f24d65b4"}
