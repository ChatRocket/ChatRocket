{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/useUpdateAvatar.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/hooks/useUpdateAvatar.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/useUpdateAvatar.ts","inputSourceMap":{"version":3,"file":"client/hooks/useUpdateAvatar.ts","sourceRoot":"","sources":["client/hooks/useUpdateAvatar.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AvatarObject, AvatarServiceObject, AvatarReset, AvatarUrlObj, IUser } from '@rocket.chat/core-typings';\nimport { useToastMessageDispatch, useMethod } from '@rocket.chat/ui-contexts';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useEndpointAction } from './useEndpointAction';\nimport { useEndpointUpload } from './useEndpointUpload';\n\nconst isAvatarReset = (avatarObj: AvatarObject): avatarObj is AvatarReset => avatarObj === 'reset';\nconst isServiceObject = (avatarObj: AvatarObject): avatarObj is AvatarServiceObject =>\n\t!isAvatarReset(avatarObj) && typeof avatarObj === 'object' && 'service' in avatarObj;\nconst isAvatarUrl = (avatarObj: AvatarObject): avatarObj is AvatarUrlObj =>\n\t!isAvatarReset(avatarObj) && typeof avatarObj === 'object' && 'service' && 'avatarUrl' in avatarObj;\n\nexport const useUpdateAvatar = (\n\tavatarObj: AvatarObject,\n\tuserId: IUser['_id'],\n): (() => Promise<{ success: boolean } | null | undefined>) => {\n\tconst { t } = useTranslation();\n\tconst avatarUrl = isAvatarUrl(avatarObj) ? avatarObj.avatarUrl : '';\n\n\tconst successMessage = t('Avatar_changed_successfully');\n\tconst setAvatarFromService = useMethod('setAvatarFromService');\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst saveAvatarAction = useEndpointUpload('/v1/users.setAvatar', successMessage);\n\tconst saveAvatarUrlAction = useEndpointAction('POST', '/v1/users.setAvatar', { successMessage });\n\tconst resetAvatarAction = useEndpointAction('POST', '/v1/users.resetAvatar', { successMessage });\n\n\tconst updateAvatar = useCallback(async () => {\n\t\tif (isAvatarReset(avatarObj)) {\n\t\t\treturn resetAvatarAction({\n\t\t\t\tuserId,\n\t\t\t});\n\t\t}\n\t\tif (isAvatarUrl(avatarObj)) {\n\t\t\treturn saveAvatarUrlAction({\n\t\t\t\tuserId,\n\t\t\t\t...(avatarUrl && { avatarUrl }),\n\t\t\t});\n\t\t}\n\t\tif (isServiceObject(avatarObj)) {\n\t\t\tconst { blob, contentType, service } = avatarObj;\n\t\t\ttry {\n\t\t\t\tawait setAvatarFromService(blob, contentType, service);\n\t\t\t\tdispatchToastMessage({ type: 'success', message: successMessage });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (avatarObj instanceof FormData) {\n\t\t\tavatarObj.set('userId', userId);\n\t\t\treturn saveAvatarAction(avatarObj);\n\t\t}\n\t}, [\n\t\tavatarObj,\n\t\tavatarUrl,\n\t\tdispatchToastMessage,\n\t\tresetAvatarAction,\n\t\tsaveAvatarAction,\n\t\tsaveAvatarUrlAction,\n\t\tsetAvatarFromService,\n\t\tsuccessMessage,\n\t\tuserId,\n\t]);\n\n\treturn updateAvatar;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/useUpdateAvatar.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/hooks/useUpdateAvatar.ts","inputSourceMap":{"version":3,"file":"client/hooks/useUpdateAvatar.ts","sourceRoot":"","sources":["client/hooks/useUpdateAvatar.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AvatarObject, AvatarServiceObject, AvatarReset, AvatarUrlObj, IUser } from '@rocket.chat/core-typings';\nimport { useToastMessageDispatch, useMethod } from '@rocket.chat/ui-contexts';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useEndpointAction } from './useEndpointAction';\nimport { useEndpointUpload } from './useEndpointUpload';\n\nconst isAvatarReset = (avatarObj: AvatarObject): avatarObj is AvatarReset => avatarObj === 'reset';\nconst isServiceObject = (avatarObj: AvatarObject): avatarObj is AvatarServiceObject =>\n\t!isAvatarReset(avatarObj) && typeof avatarObj === 'object' && 'service' in avatarObj;\nconst isAvatarUrl = (avatarObj: AvatarObject): avatarObj is AvatarUrlObj =>\n\t!isAvatarReset(avatarObj) && typeof avatarObj === 'object' && 'service' && 'avatarUrl' in avatarObj;\n\nexport const useUpdateAvatar = (\n\tavatarObj: AvatarObject,\n\tuserId: IUser['_id'],\n): (() => Promise<{ success: boolean } | null | undefined>) => {\n\tconst { t } = useTranslation();\n\tconst avatarUrl = isAvatarUrl(avatarObj) ? avatarObj.avatarUrl : '';\n\n\tconst successMessage = t('Avatar_changed_successfully');\n\tconst setAvatarFromService = useMethod('setAvatarFromService');\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst saveAvatarAction = useEndpointUpload('/v1/users.setAvatar', successMessage);\n\tconst saveAvatarUrlAction = useEndpointAction('POST', '/v1/users.setAvatar', { successMessage });\n\tconst resetAvatarAction = useEndpointAction('POST', '/v1/users.resetAvatar', { successMessage });\n\n\tconst updateAvatar = useCallback(async () => {\n\t\tif (isAvatarReset(avatarObj)) {\n\t\t\treturn resetAvatarAction({\n\t\t\t\tuserId,\n\t\t\t});\n\t\t}\n\t\tif (isAvatarUrl(avatarObj)) {\n\t\t\treturn saveAvatarUrlAction({\n\t\t\t\tuserId,\n\t\t\t\t...(avatarUrl && { avatarUrl }),\n\t\t\t});\n\t\t}\n\t\tif (isServiceObject(avatarObj)) {\n\t\t\tconst { blob, contentType, service } = avatarObj;\n\t\t\ttry {\n\t\t\t\tawait setAvatarFromService(blob, contentType, service);\n\t\t\t\tdispatchToastMessage({ type: 'success', message: successMessage });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (avatarObj instanceof FormData) {\n\t\t\tavatarObj.set('userId', userId);\n\t\t\treturn saveAvatarAction(avatarObj);\n\t\t}\n\t}, [\n\t\tavatarObj,\n\t\tavatarUrl,\n\t\tdispatchToastMessage,\n\t\tresetAvatarAction,\n\t\tsaveAvatarAction,\n\t\tsaveAvatarUrlAction,\n\t\tsetAvatarFromService,\n\t\tsuccessMessage,\n\t\tuserId,\n\t]);\n\n\treturn updateAvatar;\n};\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  useUpdateAvatar: () => useUpdateAvatar\n});\nlet useToastMessageDispatch, useMethod;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  },\n  useMethod(v) {\n    useMethod = v;\n  }\n}, 0);\nlet useCallback;\nmodule.link(\"react\", {\n  useCallback(v) {\n    useCallback = v;\n  }\n}, 1);\nlet useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 2);\nlet useEndpointAction;\nmodule.link(\"./useEndpointAction\", {\n  useEndpointAction(v) {\n    useEndpointAction = v;\n  }\n}, 3);\nlet useEndpointUpload;\nmodule.link(\"./useEndpointUpload\", {\n  useEndpointUpload(v) {\n    useEndpointUpload = v;\n  }\n}, 4);\nconst isAvatarReset = avatarObj => avatarObj === 'reset';\nconst isServiceObject = avatarObj => !isAvatarReset(avatarObj) && typeof avatarObj === 'object' && 'service' in avatarObj;\nconst isAvatarUrl = avatarObj => !isAvatarReset(avatarObj) && typeof avatarObj === 'object' && 'service' && 'avatarUrl' in avatarObj;\nconst useUpdateAvatar = (avatarObj, userId) => {\n  const {\n    t\n  } = useTranslation();\n  const avatarUrl = isAvatarUrl(avatarObj) ? avatarObj.avatarUrl : '';\n  const successMessage = t('Avatar_changed_successfully');\n  const setAvatarFromService = useMethod('setAvatarFromService');\n  const dispatchToastMessage = useToastMessageDispatch();\n  const saveAvatarAction = useEndpointUpload('/v1/users.setAvatar', successMessage);\n  const saveAvatarUrlAction = useEndpointAction('POST', '/v1/users.setAvatar', {\n    successMessage\n  });\n  const resetAvatarAction = useEndpointAction('POST', '/v1/users.resetAvatar', {\n    successMessage\n  });\n  const updateAvatar = useCallback(async () => {\n    if (isAvatarReset(avatarObj)) {\n      return resetAvatarAction({\n        userId\n      });\n    }\n    if (isAvatarUrl(avatarObj)) {\n      return saveAvatarUrlAction(_objectSpread({\n        userId\n      }, avatarUrl && {\n        avatarUrl\n      }));\n    }\n    if (isServiceObject(avatarObj)) {\n      const {\n        blob,\n        contentType,\n        service\n      } = avatarObj;\n      try {\n        await setAvatarFromService(blob, contentType, service);\n        dispatchToastMessage({\n          type: 'success',\n          message: successMessage\n        });\n      } catch (error) {\n        dispatchToastMessage({\n          type: 'error',\n          message: error\n        });\n      }\n      return;\n    }\n    if (avatarObj instanceof FormData) {\n      avatarObj.set('userId', userId);\n      return saveAvatarAction(avatarObj);\n    }\n  }, [avatarObj, avatarUrl, dispatchToastMessage, resetAvatarAction, saveAvatarAction, saveAvatarUrlAction, setAvatarFromService, successMessage, userId]);\n  return updateAvatar;\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","useUpdateAvatar","useToastMessageDispatch","useMethod","useCallback","useTranslation","useEndpointAction","useEndpointUpload","isAvatarReset","avatarObj","isServiceObject","isAvatarUrl","userId","t","avatarUrl","successMessage","setAvatarFromService","dispatchToastMessage","saveAvatarAction","saveAvatarUrlAction","resetAvatarAction","updateAvatar","blob","contentType","service","type","message","error","FormData","set"],"sources":["client/hooks/useUpdateAvatar.ts"],"sourcesContent":["import type { AvatarObject, AvatarServiceObject, AvatarReset, AvatarUrlObj, IUser } from '@rocket.chat/core-typings';\nimport { useToastMessageDispatch, useMethod } from '@rocket.chat/ui-contexts';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useEndpointAction } from './useEndpointAction';\nimport { useEndpointUpload } from './useEndpointUpload';\n\nconst isAvatarReset = (avatarObj: AvatarObject): avatarObj is AvatarReset => avatarObj === 'reset';\nconst isServiceObject = (avatarObj: AvatarObject): avatarObj is AvatarServiceObject =>\n\t!isAvatarReset(avatarObj) && typeof avatarObj === 'object' && 'service' in avatarObj;\nconst isAvatarUrl = (avatarObj: AvatarObject): avatarObj is AvatarUrlObj =>\n\t!isAvatarReset(avatarObj) && typeof avatarObj === 'object' && 'service' && 'avatarUrl' in avatarObj;\n\nexport const useUpdateAvatar = (\n\tavatarObj: AvatarObject,\n\tuserId: IUser['_id'],\n): (() => Promise<{ success: boolean } | null | undefined>) => {\n\tconst { t } = useTranslation();\n\tconst avatarUrl = isAvatarUrl(avatarObj) ? avatarObj.avatarUrl : '';\n\n\tconst successMessage = t('Avatar_changed_successfully');\n\tconst setAvatarFromService = useMethod('setAvatarFromService');\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst saveAvatarAction = useEndpointUpload('/v1/users.setAvatar', successMessage);\n\tconst saveAvatarUrlAction = useEndpointAction('POST', '/v1/users.setAvatar', { successMessage });\n\tconst resetAvatarAction = useEndpointAction('POST', '/v1/users.resetAvatar', { successMessage });\n\n\tconst updateAvatar = useCallback(async () => {\n\t\tif (isAvatarReset(avatarObj)) {\n\t\t\treturn resetAvatarAction({\n\t\t\t\tuserId,\n\t\t\t});\n\t\t}\n\t\tif (isAvatarUrl(avatarObj)) {\n\t\t\treturn saveAvatarUrlAction({\n\t\t\t\tuserId,\n\t\t\t\t...(avatarUrl && { avatarUrl }),\n\t\t\t});\n\t\t}\n\t\tif (isServiceObject(avatarObj)) {\n\t\t\tconst { blob, contentType, service } = avatarObj;\n\t\t\ttry {\n\t\t\t\tawait setAvatarFromService(blob, contentType, service);\n\t\t\t\tdispatchToastMessage({ type: 'success', message: successMessage });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (avatarObj instanceof FormData) {\n\t\t\tavatarObj.set('userId', userId);\n\t\t\treturn saveAvatarAction(avatarObj);\n\t\t}\n\t}, [\n\t\tavatarObj,\n\t\tavatarUrl,\n\t\tdispatchToastMessage,\n\t\tresetAvatarAction,\n\t\tsaveAvatarAction,\n\t\tsaveAvatarUrlAction,\n\t\tsetAvatarFromService,\n\t\tsuccessMessage,\n\t\tuserId,\n\t]);\n\n\treturn updateAvatar;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d82d0d5f67104adca875474ad8bb7c1291e73339"}
