{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/account/preferences/useAccountPreferencesValues.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/account/preferences/useAccountPreferencesValues.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/account/preferences/useAccountPreferencesValues.ts","inputSourceMap":{"version":3,"file":"client/views/account/preferences/useAccountPreferencesValues.ts","sourceRoot":"","sources":["client/views/account/preferences/useAccountPreferencesValues.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAwC7D,MAAM,CAAC,MAAM,2BAA2B,GAAG,GAA2B,EAAE;IACvE,MAAM,QAAQ,GAAG,iBAAiB,CAAS,UAAU,CAAC,IAAI,EAAE,CAAC;IAC7D,MAAM,oBAAoB,GAAG,iBAAiB,CAAsC,kBAAkB,CAAC,IAAI,EAAE,CAAC;IAC9G,MAAM,gBAAgB,GAAG,oBAAoB,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;IAC1E,MAAM,cAAc,GAAG,iBAAiB,CAAU,gBAAgB,CAAC,CAAC;IACpE,MAAM,aAAa,GAAG,iBAAiB,CAAS,eAAe,CAAC,CAAC;IAEjE,MAAM,qCAAqC,GAAG,iBAAiB,CAAU,uCAAuC,CAAC,CAAC;IAClH,MAAM,oBAAoB,GAAG,iBAAiB,CAAS,sBAAsB,CAAC,CAAC;IAC/E,MAAM,iBAAiB,GAAG,iBAAiB,CAAS,mBAAmB,CAAC,CAAC;IACzE,MAAM,qBAAqB,GAAG,iBAAiB,CAAS,uBAAuB,CAAC,CAAC;IACjF,MAAM,0BAA0B,GAAG,iBAAiB,CAAU,4BAA4B,CAAC,CAAC;IAC5F,MAAM,oBAAoB,GAAG,iBAAiB,CAAU,sBAAsB,CAAC,CAAC;IAChF,MAAM,mBAAmB,GAAG,iBAAiB,CAAU,qBAAqB,CAAC,CAAC;IAE9E,MAAM,WAAW,GAAG,iBAAiB,CAAU,aAAa,CAAC,CAAC;IAC9D,MAAM,wBAAwB,GAAG,iBAAiB,CAAU,0BAA0B,CAAC,CAAC;IACxF,MAAM,uBAAuB,GAAG,iBAAiB,CAAiC,yBAAyB,CAAC,CAAC;IAC7G,MAAM,SAAS,GAAG,iBAAiB,CAAU,WAAW,CAAC,CAAC;IAC1D,MAAM,iBAAiB,GAAG,iBAAiB,CAAU,mBAAmB,CAAC,CAAC;IAC1E,MAAM,aAAa,GAAG,iBAAiB,CAAU,eAAe,CAAC,CAAC;IAClE,MAAM,mBAAmB,GAAG,iBAAiB,CAAU,qBAAqB,CAAC,CAAC;IAC9E,MAAM,sBAAsB,GAAG,iBAAiB,CAAU,wBAAwB,CAAC,CAAC;IACpF,MAAM,WAAW,GAAG,iBAAiB,CAAU,aAAa,CAAC,CAAC;IAC9D,MAAM,WAAW,GAAG,iBAAiB,CAAuC,aAAa,CAAC,CAAC;IAC3F,MAAM,cAAc,GAAG,iBAAiB,CAAU,gBAAgB,CAAC,CAAC;IAEpE,MAAM,UAAU,GAAG,iBAAiB,CAAW,YAAY,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAEhF,MAAM,mBAAmB,GAAG,iBAAiB,CAAS,qBAAqB,CAAC,CAAC;IAC7E,MAAM,sBAAsB,GAAG,iBAAiB,CAAS,wBAAwB,CAAC,CAAC;IACnF,MAAM,wBAAwB,GAAG,iBAAiB,CAAU,0BAA0B,CAAC,CAAC;IACxF,MAAM,wBAAwB,GAAG,iBAAiB,CAAS,0BAA0B,CAAC,CAAC;IAEvF,OAAO;QACN,QAAQ;QACR,gBAAgB;QAChB,cAAc;QACd,aAAa;QACb,qCAAqC;QACrC,oBAAoB;QACpB,iBAAiB;QACjB,qBAAqB;QACrB,0BAA0B;QAC1B,oBAAoB;QACpB,mBAAmB;QACnB,WAAW;QACX,wBAAwB;QACxB,uBAAuB;QACvB,SAAS;QACT,iBAAiB;QACjB,aAAa;QACb,mBAAmB;QACnB,sBAAsB;QACtB,WAAW;QACX,WAAW;QACX,cAAc;QACd,UAAU;QACV,mBAAmB;QACnB,sBAAsB;QACtB,wBAAwB;QACxB,wBAAwB;KACxB,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { useUserPreference } from '@rocket.chat/ui-contexts';\n\nexport type AccountPreferencesData = {\n\tlanguage?: string;\n\tdontAskAgainList?: string[];\n\tenableAutoAway?: boolean;\n\tidleTimeLimit?: number;\n\tdesktopNotificationRequireInteraction?: boolean;\n\tdesktopNotifications?: string;\n\tpushNotifications?: string;\n\temailNotificationMode?: string;\n\treceiveLoginDetectionEmail?: boolean;\n\tnotifyCalendarEvents?: boolean;\n\tenableMobileRinging?: boolean;\n\tunreadAlert?: boolean;\n\tshowThreadsInMainChannel?: boolean;\n\talsoSendThreadToChannel?: 'default' | 'always' | 'never';\n\tuseEmojis?: boolean;\n\tconvertAsciiEmoji?: boolean;\n\tautoImageLoad?: boolean;\n\tsaveMobileBandwidth?: boolean;\n\tcollapseMediaByDefault?: boolean;\n\thideFlexTab?: boolean;\n\tsendOnEnter?: 'normal' | 'alternative' | 'desktop';\n\thighlights?: string;\n\tnewRoomNotification?: string;\n\tnewMessageNotification?: string;\n\tmuteFocusedConversations?: boolean;\n\n\tenableNewMessageTemplate?: boolean;\n\tdisplayAvatars?: boolean;\n\tsidebarShowFavorites?: boolean;\n\tsidebarShowUnread?: boolean;\n\tsidebarSortby?: string;\n\tsidebarViewMode?: string;\n\tsidebarDisplayAvatar?: boolean;\n\tsidebarGroupByType?: boolean;\n\tnotificationsSoundVolume?: number;\n};\n\nexport const useAccountPreferencesValues = (): AccountPreferencesData => {\n\tconst language = useUserPreference<string>('language') || '';\n\tconst userDontAskAgainList = useUserPreference<{ action: string; label: string }[]>('dontAskAgainList') || [];\n\tconst dontAskAgainList = userDontAskAgainList.map(({ action }) => action);\n\tconst enableAutoAway = useUserPreference<boolean>('enableAutoAway');\n\tconst idleTimeLimit = useUserPreference<number>('idleTimeLimit');\n\n\tconst desktopNotificationRequireInteraction = useUserPreference<boolean>('desktopNotificationRequireInteraction');\n\tconst desktopNotifications = useUserPreference<string>('desktopNotifications');\n\tconst pushNotifications = useUserPreference<string>('pushNotifications');\n\tconst emailNotificationMode = useUserPreference<string>('emailNotificationMode');\n\tconst receiveLoginDetectionEmail = useUserPreference<boolean>('receiveLoginDetectionEmail');\n\tconst notifyCalendarEvents = useUserPreference<boolean>('notifyCalendarEvents');\n\tconst enableMobileRinging = useUserPreference<boolean>('enableMobileRinging');\n\n\tconst unreadAlert = useUserPreference<boolean>('unreadAlert');\n\tconst showThreadsInMainChannel = useUserPreference<boolean>('showThreadsInMainChannel');\n\tconst alsoSendThreadToChannel = useUserPreference<'default' | 'always' | 'never'>('alsoSendThreadToChannel');\n\tconst useEmojis = useUserPreference<boolean>('useEmojis');\n\tconst convertAsciiEmoji = useUserPreference<boolean>('convertAsciiEmoji');\n\tconst autoImageLoad = useUserPreference<boolean>('autoImageLoad');\n\tconst saveMobileBandwidth = useUserPreference<boolean>('saveMobileBandwidth');\n\tconst collapseMediaByDefault = useUserPreference<boolean>('collapseMediaByDefault');\n\tconst hideFlexTab = useUserPreference<boolean>('hideFlexTab');\n\tconst sendOnEnter = useUserPreference<'normal' | 'alternative' | 'desktop'>('sendOnEnter');\n\tconst displayAvatars = useUserPreference<boolean>('displayAvatars');\n\n\tconst highlights = useUserPreference<string[]>('highlights')?.join(',\\n') ?? '';\n\n\tconst newRoomNotification = useUserPreference<string>('newRoomNotification');\n\tconst newMessageNotification = useUserPreference<string>('newMessageNotification');\n\tconst muteFocusedConversations = useUserPreference<boolean>('muteFocusedConversations');\n\tconst notificationsSoundVolume = useUserPreference<number>('notificationsSoundVolume');\n\n\treturn {\n\t\tlanguage,\n\t\tdontAskAgainList,\n\t\tenableAutoAway,\n\t\tidleTimeLimit,\n\t\tdesktopNotificationRequireInteraction,\n\t\tdesktopNotifications,\n\t\tpushNotifications,\n\t\temailNotificationMode,\n\t\treceiveLoginDetectionEmail,\n\t\tnotifyCalendarEvents,\n\t\tenableMobileRinging,\n\t\tunreadAlert,\n\t\tshowThreadsInMainChannel,\n\t\talsoSendThreadToChannel,\n\t\tuseEmojis,\n\t\tconvertAsciiEmoji,\n\t\tautoImageLoad,\n\t\tsaveMobileBandwidth,\n\t\tcollapseMediaByDefault,\n\t\thideFlexTab,\n\t\tsendOnEnter,\n\t\tdisplayAvatars,\n\t\thighlights,\n\t\tnewRoomNotification,\n\t\tnewMessageNotification,\n\t\tmuteFocusedConversations,\n\t\tnotificationsSoundVolume,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/account/preferences/useAccountPreferencesValues.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/account/preferences/useAccountPreferencesValues.ts","inputSourceMap":{"version":3,"file":"client/views/account/preferences/useAccountPreferencesValues.ts","sourceRoot":"","sources":["client/views/account/preferences/useAccountPreferencesValues.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAwC7D,MAAM,CAAC,MAAM,2BAA2B,GAAG,GAA2B,EAAE;IACvE,MAAM,QAAQ,GAAG,iBAAiB,CAAS,UAAU,CAAC,IAAI,EAAE,CAAC;IAC7D,MAAM,oBAAoB,GAAG,iBAAiB,CAAsC,kBAAkB,CAAC,IAAI,EAAE,CAAC;IAC9G,MAAM,gBAAgB,GAAG,oBAAoB,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;IAC1E,MAAM,cAAc,GAAG,iBAAiB,CAAU,gBAAgB,CAAC,CAAC;IACpE,MAAM,aAAa,GAAG,iBAAiB,CAAS,eAAe,CAAC,CAAC;IAEjE,MAAM,qCAAqC,GAAG,iBAAiB,CAAU,uCAAuC,CAAC,CAAC;IAClH,MAAM,oBAAoB,GAAG,iBAAiB,CAAS,sBAAsB,CAAC,CAAC;IAC/E,MAAM,iBAAiB,GAAG,iBAAiB,CAAS,mBAAmB,CAAC,CAAC;IACzE,MAAM,qBAAqB,GAAG,iBAAiB,CAAS,uBAAuB,CAAC,CAAC;IACjF,MAAM,0BAA0B,GAAG,iBAAiB,CAAU,4BAA4B,CAAC,CAAC;IAC5F,MAAM,oBAAoB,GAAG,iBAAiB,CAAU,sBAAsB,CAAC,CAAC;IAChF,MAAM,mBAAmB,GAAG,iBAAiB,CAAU,qBAAqB,CAAC,CAAC;IAE9E,MAAM,WAAW,GAAG,iBAAiB,CAAU,aAAa,CAAC,CAAC;IAC9D,MAAM,wBAAwB,GAAG,iBAAiB,CAAU,0BAA0B,CAAC,CAAC;IACxF,MAAM,uBAAuB,GAAG,iBAAiB,CAAiC,yBAAyB,CAAC,CAAC;IAC7G,MAAM,SAAS,GAAG,iBAAiB,CAAU,WAAW,CAAC,CAAC;IAC1D,MAAM,iBAAiB,GAAG,iBAAiB,CAAU,mBAAmB,CAAC,CAAC;IAC1E,MAAM,aAAa,GAAG,iBAAiB,CAAU,eAAe,CAAC,CAAC;IAClE,MAAM,mBAAmB,GAAG,iBAAiB,CAAU,qBAAqB,CAAC,CAAC;IAC9E,MAAM,sBAAsB,GAAG,iBAAiB,CAAU,wBAAwB,CAAC,CAAC;IACpF,MAAM,WAAW,GAAG,iBAAiB,CAAU,aAAa,CAAC,CAAC;IAC9D,MAAM,WAAW,GAAG,iBAAiB,CAAuC,aAAa,CAAC,CAAC;IAC3F,MAAM,cAAc,GAAG,iBAAiB,CAAU,gBAAgB,CAAC,CAAC;IAEpE,MAAM,UAAU,GAAG,iBAAiB,CAAW,YAAY,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAEhF,MAAM,mBAAmB,GAAG,iBAAiB,CAAS,qBAAqB,CAAC,CAAC;IAC7E,MAAM,sBAAsB,GAAG,iBAAiB,CAAS,wBAAwB,CAAC,CAAC;IACnF,MAAM,wBAAwB,GAAG,iBAAiB,CAAU,0BAA0B,CAAC,CAAC;IACxF,MAAM,wBAAwB,GAAG,iBAAiB,CAAS,0BAA0B,CAAC,CAAC;IAEvF,OAAO;QACN,QAAQ;QACR,gBAAgB;QAChB,cAAc;QACd,aAAa;QACb,qCAAqC;QACrC,oBAAoB;QACpB,iBAAiB;QACjB,qBAAqB;QACrB,0BAA0B;QAC1B,oBAAoB;QACpB,mBAAmB;QACnB,WAAW;QACX,wBAAwB;QACxB,uBAAuB;QACvB,SAAS;QACT,iBAAiB;QACjB,aAAa;QACb,mBAAmB;QACnB,sBAAsB;QACtB,WAAW;QACX,WAAW;QACX,cAAc;QACd,UAAU;QACV,mBAAmB;QACnB,sBAAsB;QACtB,wBAAwB;QACxB,wBAAwB;KACxB,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { useUserPreference } from '@rocket.chat/ui-contexts';\n\nexport type AccountPreferencesData = {\n\tlanguage?: string;\n\tdontAskAgainList?: string[];\n\tenableAutoAway?: boolean;\n\tidleTimeLimit?: number;\n\tdesktopNotificationRequireInteraction?: boolean;\n\tdesktopNotifications?: string;\n\tpushNotifications?: string;\n\temailNotificationMode?: string;\n\treceiveLoginDetectionEmail?: boolean;\n\tnotifyCalendarEvents?: boolean;\n\tenableMobileRinging?: boolean;\n\tunreadAlert?: boolean;\n\tshowThreadsInMainChannel?: boolean;\n\talsoSendThreadToChannel?: 'default' | 'always' | 'never';\n\tuseEmojis?: boolean;\n\tconvertAsciiEmoji?: boolean;\n\tautoImageLoad?: boolean;\n\tsaveMobileBandwidth?: boolean;\n\tcollapseMediaByDefault?: boolean;\n\thideFlexTab?: boolean;\n\tsendOnEnter?: 'normal' | 'alternative' | 'desktop';\n\thighlights?: string;\n\tnewRoomNotification?: string;\n\tnewMessageNotification?: string;\n\tmuteFocusedConversations?: boolean;\n\n\tenableNewMessageTemplate?: boolean;\n\tdisplayAvatars?: boolean;\n\tsidebarShowFavorites?: boolean;\n\tsidebarShowUnread?: boolean;\n\tsidebarSortby?: string;\n\tsidebarViewMode?: string;\n\tsidebarDisplayAvatar?: boolean;\n\tsidebarGroupByType?: boolean;\n\tnotificationsSoundVolume?: number;\n};\n\nexport const useAccountPreferencesValues = (): AccountPreferencesData => {\n\tconst language = useUserPreference<string>('language') || '';\n\tconst userDontAskAgainList = useUserPreference<{ action: string; label: string }[]>('dontAskAgainList') || [];\n\tconst dontAskAgainList = userDontAskAgainList.map(({ action }) => action);\n\tconst enableAutoAway = useUserPreference<boolean>('enableAutoAway');\n\tconst idleTimeLimit = useUserPreference<number>('idleTimeLimit');\n\n\tconst desktopNotificationRequireInteraction = useUserPreference<boolean>('desktopNotificationRequireInteraction');\n\tconst desktopNotifications = useUserPreference<string>('desktopNotifications');\n\tconst pushNotifications = useUserPreference<string>('pushNotifications');\n\tconst emailNotificationMode = useUserPreference<string>('emailNotificationMode');\n\tconst receiveLoginDetectionEmail = useUserPreference<boolean>('receiveLoginDetectionEmail');\n\tconst notifyCalendarEvents = useUserPreference<boolean>('notifyCalendarEvents');\n\tconst enableMobileRinging = useUserPreference<boolean>('enableMobileRinging');\n\n\tconst unreadAlert = useUserPreference<boolean>('unreadAlert');\n\tconst showThreadsInMainChannel = useUserPreference<boolean>('showThreadsInMainChannel');\n\tconst alsoSendThreadToChannel = useUserPreference<'default' | 'always' | 'never'>('alsoSendThreadToChannel');\n\tconst useEmojis = useUserPreference<boolean>('useEmojis');\n\tconst convertAsciiEmoji = useUserPreference<boolean>('convertAsciiEmoji');\n\tconst autoImageLoad = useUserPreference<boolean>('autoImageLoad');\n\tconst saveMobileBandwidth = useUserPreference<boolean>('saveMobileBandwidth');\n\tconst collapseMediaByDefault = useUserPreference<boolean>('collapseMediaByDefault');\n\tconst hideFlexTab = useUserPreference<boolean>('hideFlexTab');\n\tconst sendOnEnter = useUserPreference<'normal' | 'alternative' | 'desktop'>('sendOnEnter');\n\tconst displayAvatars = useUserPreference<boolean>('displayAvatars');\n\n\tconst highlights = useUserPreference<string[]>('highlights')?.join(',\\n') ?? '';\n\n\tconst newRoomNotification = useUserPreference<string>('newRoomNotification');\n\tconst newMessageNotification = useUserPreference<string>('newMessageNotification');\n\tconst muteFocusedConversations = useUserPreference<boolean>('muteFocusedConversations');\n\tconst notificationsSoundVolume = useUserPreference<number>('notificationsSoundVolume');\n\n\treturn {\n\t\tlanguage,\n\t\tdontAskAgainList,\n\t\tenableAutoAway,\n\t\tidleTimeLimit,\n\t\tdesktopNotificationRequireInteraction,\n\t\tdesktopNotifications,\n\t\tpushNotifications,\n\t\temailNotificationMode,\n\t\treceiveLoginDetectionEmail,\n\t\tnotifyCalendarEvents,\n\t\tenableMobileRinging,\n\t\tunreadAlert,\n\t\tshowThreadsInMainChannel,\n\t\talsoSendThreadToChannel,\n\t\tuseEmojis,\n\t\tconvertAsciiEmoji,\n\t\tautoImageLoad,\n\t\tsaveMobileBandwidth,\n\t\tcollapseMediaByDefault,\n\t\thideFlexTab,\n\t\tsendOnEnter,\n\t\tdisplayAvatars,\n\t\thighlights,\n\t\tnewRoomNotification,\n\t\tnewMessageNotification,\n\t\tmuteFocusedConversations,\n\t\tnotificationsSoundVolume,\n\t};\n};\n"]}}},"code":"module.export({\n  useAccountPreferencesValues: function () {\n    return useAccountPreferencesValues;\n  }\n});\nvar useUserPreference;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useUserPreference: function (v) {\n    useUserPreference = v;\n  }\n}, 0);\nvar useAccountPreferencesValues = function () {\n  var _useUserPreference$jo, _useUserPreference;\n  var language = useUserPreference('language') || '';\n  var userDontAskAgainList = useUserPreference('dontAskAgainList') || [];\n  var dontAskAgainList = userDontAskAgainList.map(function (_ref) {\n    var action = _ref.action;\n    return action;\n  });\n  var enableAutoAway = useUserPreference('enableAutoAway');\n  var idleTimeLimit = useUserPreference('idleTimeLimit');\n  var desktopNotificationRequireInteraction = useUserPreference('desktopNotificationRequireInteraction');\n  var desktopNotifications = useUserPreference('desktopNotifications');\n  var pushNotifications = useUserPreference('pushNotifications');\n  var emailNotificationMode = useUserPreference('emailNotificationMode');\n  var receiveLoginDetectionEmail = useUserPreference('receiveLoginDetectionEmail');\n  var notifyCalendarEvents = useUserPreference('notifyCalendarEvents');\n  var enableMobileRinging = useUserPreference('enableMobileRinging');\n  var unreadAlert = useUserPreference('unreadAlert');\n  var showThreadsInMainChannel = useUserPreference('showThreadsInMainChannel');\n  var alsoSendThreadToChannel = useUserPreference('alsoSendThreadToChannel');\n  var useEmojis = useUserPreference('useEmojis');\n  var convertAsciiEmoji = useUserPreference('convertAsciiEmoji');\n  var autoImageLoad = useUserPreference('autoImageLoad');\n  var saveMobileBandwidth = useUserPreference('saveMobileBandwidth');\n  var collapseMediaByDefault = useUserPreference('collapseMediaByDefault');\n  var hideFlexTab = useUserPreference('hideFlexTab');\n  var sendOnEnter = useUserPreference('sendOnEnter');\n  var displayAvatars = useUserPreference('displayAvatars');\n  var highlights = (_useUserPreference$jo = (_useUserPreference = useUserPreference('highlights')) === null || _useUserPreference === void 0 ? void 0 : _useUserPreference.join(',\\n')) !== null && _useUserPreference$jo !== void 0 ? _useUserPreference$jo : '';\n  var newRoomNotification = useUserPreference('newRoomNotification');\n  var newMessageNotification = useUserPreference('newMessageNotification');\n  var muteFocusedConversations = useUserPreference('muteFocusedConversations');\n  var notificationsSoundVolume = useUserPreference('notificationsSoundVolume');\n  return {\n    language: language,\n    dontAskAgainList: dontAskAgainList,\n    enableAutoAway: enableAutoAway,\n    idleTimeLimit: idleTimeLimit,\n    desktopNotificationRequireInteraction: desktopNotificationRequireInteraction,\n    desktopNotifications: desktopNotifications,\n    pushNotifications: pushNotifications,\n    emailNotificationMode: emailNotificationMode,\n    receiveLoginDetectionEmail: receiveLoginDetectionEmail,\n    notifyCalendarEvents: notifyCalendarEvents,\n    enableMobileRinging: enableMobileRinging,\n    unreadAlert: unreadAlert,\n    showThreadsInMainChannel: showThreadsInMainChannel,\n    alsoSendThreadToChannel: alsoSendThreadToChannel,\n    useEmojis: useEmojis,\n    convertAsciiEmoji: convertAsciiEmoji,\n    autoImageLoad: autoImageLoad,\n    saveMobileBandwidth: saveMobileBandwidth,\n    collapseMediaByDefault: collapseMediaByDefault,\n    hideFlexTab: hideFlexTab,\n    sendOnEnter: sendOnEnter,\n    displayAvatars: displayAvatars,\n    highlights: highlights,\n    newRoomNotification: newRoomNotification,\n    newMessageNotification: newMessageNotification,\n    muteFocusedConversations: muteFocusedConversations,\n    notificationsSoundVolume: notificationsSoundVolume\n  };\n};","map":{"version":3,"names":["module","export","useAccountPreferencesValues","useUserPreference","link","v","_useUserPreference$jo","_useUserPreference","language","userDontAskAgainList","dontAskAgainList","map","_ref","action","enableAutoAway","idleTimeLimit","desktopNotificationRequireInteraction","desktopNotifications","pushNotifications","emailNotificationMode","receiveLoginDetectionEmail","notifyCalendarEvents","enableMobileRinging","unreadAlert","showThreadsInMainChannel","alsoSendThreadToChannel","useEmojis","convertAsciiEmoji","autoImageLoad","saveMobileBandwidth","collapseMediaByDefault","hideFlexTab","sendOnEnter","displayAvatars","highlights","join","newRoomNotification","newMessageNotification","muteFocusedConversations","notificationsSoundVolume"],"sources":["client/views/account/preferences/useAccountPreferencesValues.ts"],"sourcesContent":["import { useUserPreference } from '@rocket.chat/ui-contexts';\n\nexport type AccountPreferencesData = {\n\tlanguage?: string;\n\tdontAskAgainList?: string[];\n\tenableAutoAway?: boolean;\n\tidleTimeLimit?: number;\n\tdesktopNotificationRequireInteraction?: boolean;\n\tdesktopNotifications?: string;\n\tpushNotifications?: string;\n\temailNotificationMode?: string;\n\treceiveLoginDetectionEmail?: boolean;\n\tnotifyCalendarEvents?: boolean;\n\tenableMobileRinging?: boolean;\n\tunreadAlert?: boolean;\n\tshowThreadsInMainChannel?: boolean;\n\talsoSendThreadToChannel?: 'default' | 'always' | 'never';\n\tuseEmojis?: boolean;\n\tconvertAsciiEmoji?: boolean;\n\tautoImageLoad?: boolean;\n\tsaveMobileBandwidth?: boolean;\n\tcollapseMediaByDefault?: boolean;\n\thideFlexTab?: boolean;\n\tsendOnEnter?: 'normal' | 'alternative' | 'desktop';\n\thighlights?: string;\n\tnewRoomNotification?: string;\n\tnewMessageNotification?: string;\n\tmuteFocusedConversations?: boolean;\n\n\tenableNewMessageTemplate?: boolean;\n\tdisplayAvatars?: boolean;\n\tsidebarShowFavorites?: boolean;\n\tsidebarShowUnread?: boolean;\n\tsidebarSortby?: string;\n\tsidebarViewMode?: string;\n\tsidebarDisplayAvatar?: boolean;\n\tsidebarGroupByType?: boolean;\n\tnotificationsSoundVolume?: number;\n};\n\nexport const useAccountPreferencesValues = (): AccountPreferencesData => {\n\tconst language = useUserPreference<string>('language') || '';\n\tconst userDontAskAgainList = useUserPreference<{ action: string; label: string }[]>('dontAskAgainList') || [];\n\tconst dontAskAgainList = userDontAskAgainList.map(({ action }) => action);\n\tconst enableAutoAway = useUserPreference<boolean>('enableAutoAway');\n\tconst idleTimeLimit = useUserPreference<number>('idleTimeLimit');\n\n\tconst desktopNotificationRequireInteraction = useUserPreference<boolean>('desktopNotificationRequireInteraction');\n\tconst desktopNotifications = useUserPreference<string>('desktopNotifications');\n\tconst pushNotifications = useUserPreference<string>('pushNotifications');\n\tconst emailNotificationMode = useUserPreference<string>('emailNotificationMode');\n\tconst receiveLoginDetectionEmail = useUserPreference<boolean>('receiveLoginDetectionEmail');\n\tconst notifyCalendarEvents = useUserPreference<boolean>('notifyCalendarEvents');\n\tconst enableMobileRinging = useUserPreference<boolean>('enableMobileRinging');\n\n\tconst unreadAlert = useUserPreference<boolean>('unreadAlert');\n\tconst showThreadsInMainChannel = useUserPreference<boolean>('showThreadsInMainChannel');\n\tconst alsoSendThreadToChannel = useUserPreference<'default' | 'always' | 'never'>('alsoSendThreadToChannel');\n\tconst useEmojis = useUserPreference<boolean>('useEmojis');\n\tconst convertAsciiEmoji = useUserPreference<boolean>('convertAsciiEmoji');\n\tconst autoImageLoad = useUserPreference<boolean>('autoImageLoad');\n\tconst saveMobileBandwidth = useUserPreference<boolean>('saveMobileBandwidth');\n\tconst collapseMediaByDefault = useUserPreference<boolean>('collapseMediaByDefault');\n\tconst hideFlexTab = useUserPreference<boolean>('hideFlexTab');\n\tconst sendOnEnter = useUserPreference<'normal' | 'alternative' | 'desktop'>('sendOnEnter');\n\tconst displayAvatars = useUserPreference<boolean>('displayAvatars');\n\n\tconst highlights = useUserPreference<string[]>('highlights')?.join(',\\n') ?? '';\n\n\tconst newRoomNotification = useUserPreference<string>('newRoomNotification');\n\tconst newMessageNotification = useUserPreference<string>('newMessageNotification');\n\tconst muteFocusedConversations = useUserPreference<boolean>('muteFocusedConversations');\n\tconst notificationsSoundVolume = useUserPreference<number>('notificationsSoundVolume');\n\n\treturn {\n\t\tlanguage,\n\t\tdontAskAgainList,\n\t\tenableAutoAway,\n\t\tidleTimeLimit,\n\t\tdesktopNotificationRequireInteraction,\n\t\tdesktopNotifications,\n\t\tpushNotifications,\n\t\temailNotificationMode,\n\t\treceiveLoginDetectionEmail,\n\t\tnotifyCalendarEvents,\n\t\tenableMobileRinging,\n\t\tunreadAlert,\n\t\tshowThreadsInMainChannel,\n\t\talsoSendThreadToChannel,\n\t\tuseEmojis,\n\t\tconvertAsciiEmoji,\n\t\tautoImageLoad,\n\t\tsaveMobileBandwidth,\n\t\tcollapseMediaByDefault,\n\t\thideFlexTab,\n\t\tsendOnEnter,\n\t\tdisplayAvatars,\n\t\thighlights,\n\t\tnewRoomNotification,\n\t\tnewMessageNotification,\n\t\tmuteFocusedConversations,\n\t\tnotificationsSoundVolume,\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ca392a9433738bd7cbdc41934496865a73c03d77"}
