{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/createDirectMessage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/createDirectMessage.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/createDirectMessage.ts","inputSourceMap":{"version":3,"file":"server/methods/createDirectMessage.ts","sourceRoot":"","sources":["server/methods/createDirectMessage.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AACnD,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,wDAAwD,CAAC;AAC5F,OAAO,EAAE,OAAO,EAAE,MAAM,+CAA+C,CAAC;AACxE,OAAO,EAAE,UAAU,EAAE,MAAM,2CAA2C,CAAC;AACvE,OAAO,EAAE,gBAAgB,IAAI,WAAW,EAAE,MAAM,sCAAsC,CAAC;AACvF,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAC;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAEhD,MAAM,CAAC,KAAK,UAAU,mBAAmB,CACxC,SAA8B,EAC9B,MAA2B,EAC3B,WAAW,GAAG,KAAK;IAEnB,KAAK,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3B,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACtB,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IAE5C,IAAI,CAAC,MAAM,EAAE,CAAC;QACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;YAC5D,MAAM,EAAE,qBAAqB;SAC7B,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,EAAE,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACrF,IAAI,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC;QACnB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;YAC5D,MAAM,EAAE,qBAAqB;SAC7B,CAAC,CAAC;IACJ,CAAC;IAED,IAAI,QAAQ,CAAC,GAAG,CAAC,uCAAuC,CAAC,KAAK,KAAK,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/H,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;YAC5D,MAAM,EAAE,qBAAqB;SAC7B,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,GAAG,CAC9B,SAAS;SACP,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,KAAK,EAAE,CAAC,QAAQ,CAAC;SAC9C,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE;QACvB,IAAI,EAAE,GAAiB,MAAM,KAAK,CAAC,6BAA6B,CAAC,QAAQ,CAAC,CAAC;QAE3E,mFAAmF;QACnF,IAAI,CAAC,EAAE,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;YACnC,IAAI,CAAC;gBACJ,EAAE,GAAG,MAAM,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC9B,CAAC;YAAC,MAAM,CAAC;gBACR,QAAQ;YACT,CAAC;YACD,IAAI,CAAC,EAAE,EAAE,CAAC;gBACT,OAAO,QAAQ,CAAC;YACjB,CAAC;QACF,CAAC;QAED,IAAI,CAAC,EAAE,EAAE,CAAC;YACT,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;gBAC5D,MAAM,EAAE,qBAAqB;aAC7B,CAAC,CAAC;QACJ,CAAC;QACD,OAAO,EAAE,CAAC;IACX,CAAC,CAAC,CACH,CAAC;IACF,MAAM,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC;IAEvD,iBAAiB;IACjB,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,OAAO,SAAS,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC;QAC7H,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;YAC5D,MAAM,EAAE,qBAAqB;SAC7B,CAAC,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC;QACrD,oEAAoE;QACpE,IAAI,CAAC,MAAM,kBAAkB,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,EAAE,CAAC;YAC3H,0DAA0D;YAC1D,MAAM,IAAI,GAAI,SAAqB,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;YACjE,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,qCAAqC,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YACjG,IAAI,IAAI,EAAE,CAAC;gBACV,OAAO;oBACN,GAAG,IAAI;oBACP,CAAC,EAAE,GAAG;oBACN,GAAG,EAAE,IAAI,CAAC,GAAG;iBACb,CAAC;YACH,CAAC;QACF,CAAC;QAED,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,aAAa,EAAE;YAC1D,MAAM,EAAE,qBAAqB;SAC7B,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,OAAO,GAAqD,EAAE,OAAO,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC;IACtF,IAAI,WAAW,IAAI,CAAC,MAAM,kBAAkB,CAAC,MAAM,EAAE,0BAA0B,CAAC,CAAC,EAAE,CAAC;QACnF,OAAO,CAAC,iBAAiB,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IAC5C,CAAC;IACD,IAAI,CAAC;QACJ,MAAM,SAAS,CAAC,GAAG,CAAC,sCAAsC,EAAE,SAAS,CAAC,CAAC;IACxE,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QAChB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAE,KAAa,EAAE,OAAO,CAAC,CAAC;IACjD,CAAC;IACD,MAAM,EACL,GAAG,EAAE,GAAG,EACR,QAAQ,EACR,GAAG,IAAI,EACP,GAAG,MAAM,UAAU,CAAM,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,SAAoB,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;IAE1G,OAAO;QACN,kFAAkF;QAClF,CAAC,EAAE,GAAG;QACN,4EAA4E;QAC5E,GAAG;QACH,GAAG,IAAI;KACP,CAAC;AACH,CAAC;AASD,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,mBAAmB,CAAC,GAAG,SAAS;QACrC,OAAO,mBAAmB,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;IACxD,CAAC;CACD,CAAC,CAAC;AAEH,WAAW,CAAC,WAAW,CAAC,qBAAqB,EAAE,EAAE,EAAE,KAAK,EAAE;IACzD,KAAK,CAAC,MAAM,CAAC,MAAoB;QAChC,OAAO,CAAC,CAAC,MAAM,kBAAkB,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC,CAAC;IAClE,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { ICreateRoomParams } from '@rocket.chat/core-services';\nimport type { ICreatedRoom, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Users } from '@rocket.chat/models';\nimport { check, Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../app/authorization/server/functions/hasPermission';\nimport { addUser } from '../../app/federation/server/functions/addUser';\nimport { createRoom } from '../../app/lib/server/functions/createRoom';\nimport { RateLimiterClass as RateLimiter } from '../../app/lib/server/lib/RateLimiter';\nimport { settings } from '../../app/settings/server';\nimport { callbacks } from '../../lib/callbacks';\n\nexport async function createDirectMessage(\n\tusernames: IUser['username'][],\n\tuserId: IUser['_id'] | null,\n\texcludeSelf = false,\n): Promise<Omit<ICreatedRoom, '_id' | 'inserted'>> {\n\tcheck(usernames, [String]);\n\tcheck(userId, String);\n\tcheck(excludeSelf, Match.Optional(Boolean));\n\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tconst me = await Users.findOneById(userId, { projection: { username: 1, name: 1 } });\n\tif (!me?.username) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tif (settings.get('Message_AllowDirectMessagesToYourself') === false && usernames.length === 1 && me.username === usernames[0]) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tconst users = await Promise.all(\n\t\tusernames\n\t\t\t.filter((username) => username !== me.username)\n\t\t\t.map(async (username) => {\n\t\t\t\tlet to: IUser | null = await Users.findOneByUsernameIgnoringCase(username);\n\n\t\t\t\t// If the username does have an `@`, but does not exist locally, we create it first\n\t\t\t\tif (!to && username.includes('@')) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tto = await addUser(username);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// no-op\n\t\t\t\t\t}\n\t\t\t\t\tif (!to) {\n\t\t\t\t\t\treturn username;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!to) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\t\t\tmethod: 'createDirectMessage',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn to;\n\t\t\t}),\n\t);\n\tconst roomUsers = excludeSelf ? users : [me, ...users];\n\n\t// allow self-DMs\n\tif (roomUsers.length === 1 && roomUsers[0] !== undefined && typeof roomUsers[0] !== 'string' && roomUsers[0]._id !== me._id) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tif (!(await hasPermissionAsync(userId, 'create-d'))) {\n\t\t// If the user can't create DMs but can access already existing ones\n\t\tif ((await hasPermissionAsync(userId, 'view-d-room')) && !Object.keys(roomUsers).some((user) => typeof user === 'string')) {\n\t\t\t// Check if the direct room already exists, then return it\n\t\t\tconst uids = (roomUsers as IUser[]).map(({ _id }) => _id).sort();\n\t\t\tconst room = await Rooms.findOneDirectRoomContainingAllUserIDs(uids, { projection: { _id: 1 } });\n\t\t\tif (room) {\n\t\t\t\treturn {\n\t\t\t\t\t...room,\n\t\t\t\t\tt: 'd',\n\t\t\t\t\trid: room._id,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tconst options: Exclude<ICreateRoomParams['options'], undefined> = { creator: me._id };\n\tif (excludeSelf && (await hasPermissionAsync(userId, 'view-room-administration'))) {\n\t\toptions.subscriptionExtra = { open: true };\n\t}\n\ttry {\n\t\tawait callbacks.run('federation.beforeCreateDirectMessage', roomUsers);\n\t} catch (error) {\n\t\tthrow new Meteor.Error((error as any)?.message);\n\t}\n\tconst {\n\t\t_id: rid,\n\t\tinserted,\n\t\t...room\n\t} = await createRoom<'d'>('d', undefined, undefined, roomUsers as IUser[], false, undefined, {}, options);\n\n\treturn {\n\t\t// @ts-expect-error - room type is already defined in the `createRoom` return type\n\t\tt: 'd',\n\t\t// @ts-expect-error - room id is not defined in the `createRoom` return type\n\t\trid,\n\t\t...room,\n\t};\n}\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tcreateDirectMessage(...usernames: Exclude<IUser['username'], undefined>[]): Omit<ICreatedRoom, '_id' | 'inserted'>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync createDirectMessage(...usernames) {\n\t\treturn createDirectMessage(usernames, Meteor.userId());\n\t},\n});\n\nRateLimiter.limitMethod('createDirectMessage', 10, 60000, {\n\tasync userId(userId: IUser['_id']) {\n\t\treturn !(await hasPermissionAsync(userId, 'send-many-messages'));\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/createDirectMessage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/createDirectMessage.ts","inputSourceMap":{"version":3,"file":"server/methods/createDirectMessage.ts","sourceRoot":"","sources":["server/methods/createDirectMessage.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ICreateRoomParams } from '@rocket.chat/core-services';\nimport type { ICreatedRoom, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Users } from '@rocket.chat/models';\nimport { check, Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../app/authorization/server/functions/hasPermission';\nimport { addUser } from '../../app/federation/server/functions/addUser';\nimport { createRoom } from '../../app/lib/server/functions/createRoom';\nimport { RateLimiterClass as RateLimiter } from '../../app/lib/server/lib/RateLimiter';\nimport { settings } from '../../app/settings/server';\nimport { callbacks } from '../../lib/callbacks';\n\nexport async function createDirectMessage(\n\tusernames: IUser['username'][],\n\tuserId: IUser['_id'] | null,\n\texcludeSelf = false,\n): Promise<Omit<ICreatedRoom, '_id' | 'inserted'>> {\n\tcheck(usernames, [String]);\n\tcheck(userId, String);\n\tcheck(excludeSelf, Match.Optional(Boolean));\n\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tconst me = await Users.findOneById(userId, { projection: { username: 1, name: 1 } });\n\tif (!me?.username) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tif (settings.get('Message_AllowDirectMessagesToYourself') === false && usernames.length === 1 && me.username === usernames[0]) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tconst users = await Promise.all(\n\t\tusernames\n\t\t\t.filter((username) => username !== me.username)\n\t\t\t.map(async (username) => {\n\t\t\t\tlet to: IUser | null = await Users.findOneByUsernameIgnoringCase(username);\n\n\t\t\t\t// If the username does have an `@`, but does not exist locally, we create it first\n\t\t\t\tif (!to && username.includes('@')) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tto = await addUser(username);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// no-op\n\t\t\t\t\t}\n\t\t\t\t\tif (!to) {\n\t\t\t\t\t\treturn username;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!to) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\t\t\tmethod: 'createDirectMessage',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn to;\n\t\t\t}),\n\t);\n\tconst roomUsers = excludeSelf ? users : [me, ...users];\n\n\t// allow self-DMs\n\tif (roomUsers.length === 1 && roomUsers[0] !== undefined && typeof roomUsers[0] !== 'string' && roomUsers[0]._id !== me._id) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tif (!(await hasPermissionAsync(userId, 'create-d'))) {\n\t\t// If the user can't create DMs but can access already existing ones\n\t\tif ((await hasPermissionAsync(userId, 'view-d-room')) && !Object.keys(roomUsers).some((user) => typeof user === 'string')) {\n\t\t\t// Check if the direct room already exists, then return it\n\t\t\tconst uids = (roomUsers as IUser[]).map(({ _id }) => _id).sort();\n\t\t\tconst room = await Rooms.findOneDirectRoomContainingAllUserIDs(uids, { projection: { _id: 1 } });\n\t\t\tif (room) {\n\t\t\t\treturn {\n\t\t\t\t\t...room,\n\t\t\t\t\tt: 'd',\n\t\t\t\t\trid: room._id,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tconst options: Exclude<ICreateRoomParams['options'], undefined> = { creator: me._id };\n\tif (excludeSelf && (await hasPermissionAsync(userId, 'view-room-administration'))) {\n\t\toptions.subscriptionExtra = { open: true };\n\t}\n\ttry {\n\t\tawait callbacks.run('federation.beforeCreateDirectMessage', roomUsers);\n\t} catch (error) {\n\t\tthrow new Meteor.Error((error as any)?.message);\n\t}\n\tconst {\n\t\t_id: rid,\n\t\tinserted,\n\t\t...room\n\t} = await createRoom<'d'>('d', undefined, undefined, roomUsers as IUser[], false, undefined, {}, options);\n\n\treturn {\n\t\t// @ts-expect-error - room type is already defined in the `createRoom` return type\n\t\tt: 'd',\n\t\t// @ts-expect-error - room id is not defined in the `createRoom` return type\n\t\trid,\n\t\t...room,\n\t};\n}\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tcreateDirectMessage(...usernames: Exclude<IUser['username'], undefined>[]): Omit<ICreatedRoom, '_id' | 'inserted'>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync createDirectMessage(...usernames) {\n\t\treturn createDirectMessage(usernames, Meteor.userId());\n\t},\n});\n\nRateLimiter.limitMethod('createDirectMessage', 10, 60000, {\n\tasync userId(userId: IUser['_id']) {\n\t\treturn !(await hasPermissionAsync(userId, 'send-many-messages'));\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectWithoutProperties;\n    module.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n      default(v) {\n        _objectWithoutProperties = v;\n      }\n    }, 0);\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 1);\n    const _excluded = [\"_id\", \"inserted\"];\n    module.export({\n      createDirectMessage: () => createDirectMessage\n    });\n    let Rooms, Users;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let check, Match;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      },\n      Match(v) {\n        Match = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let hasPermissionAsync;\n    module.link(\"../../app/authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 3);\n    let addUser;\n    module.link(\"../../app/federation/server/functions/addUser\", {\n      addUser(v) {\n        addUser = v;\n      }\n    }, 4);\n    let createRoom;\n    module.link(\"../../app/lib/server/functions/createRoom\", {\n      createRoom(v) {\n        createRoom = v;\n      }\n    }, 5);\n    let RateLimiter;\n    module.link(\"../../app/lib/server/lib/RateLimiter\", {\n      RateLimiterClass(v) {\n        RateLimiter = v;\n      }\n    }, 6);\n    let settings;\n    module.link(\"../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 7);\n    let callbacks;\n    module.link(\"../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function createDirectMessage(usernames, userId) {\n      let excludeSelf = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      check(usernames, [String]);\n      check(userId, String);\n      check(excludeSelf, Match.Optional(Boolean));\n      if (!userId) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'createDirectMessage'\n        });\n      }\n      const me = await Users.findOneById(userId, {\n        projection: {\n          username: 1,\n          name: 1\n        }\n      });\n      if (!(me !== null && me !== void 0 && me.username)) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'createDirectMessage'\n        });\n      }\n      if (settings.get('Message_AllowDirectMessagesToYourself') === false && usernames.length === 1 && me.username === usernames[0]) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'createDirectMessage'\n        });\n      }\n      const users = await Promise.all(usernames.filter(username => username !== me.username).map(async username => {\n        let to = await Users.findOneByUsernameIgnoringCase(username);\n        // If the username does have an `@`, but does not exist locally, we create it first\n        if (!to && username.includes('@')) {\n          try {\n            to = await addUser(username);\n          } catch (_unused) {\n            // no-op\n          }\n          if (!to) {\n            return username;\n          }\n        }\n        if (!to) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'createDirectMessage'\n          });\n        }\n        return to;\n      }));\n      const roomUsers = excludeSelf ? users : [me, ...users];\n      // allow self-DMs\n      if (roomUsers.length === 1 && roomUsers[0] !== undefined && typeof roomUsers[0] !== 'string' && roomUsers[0]._id !== me._id) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'createDirectMessage'\n        });\n      }\n      if (!(await hasPermissionAsync(userId, 'create-d'))) {\n        // If the user can't create DMs but can access already existing ones\n        if ((await hasPermissionAsync(userId, 'view-d-room')) && !Object.keys(roomUsers).some(user => typeof user === 'string')) {\n          // Check if the direct room already exists, then return it\n          const uids = roomUsers.map(_ref => {\n            let {\n              _id\n            } = _ref;\n            return _id;\n          }).sort();\n          const room = await Rooms.findOneDirectRoomContainingAllUserIDs(uids, {\n            projection: {\n              _id: 1\n            }\n          });\n          if (room) {\n            return _objectSpread(_objectSpread({}, room), {}, {\n              t: 'd',\n              rid: room._id\n            });\n          }\n        }\n        throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n          method: 'createDirectMessage'\n        });\n      }\n      const options = {\n        creator: me._id\n      };\n      if (excludeSelf && (await hasPermissionAsync(userId, 'view-room-administration'))) {\n        options.subscriptionExtra = {\n          open: true\n        };\n      }\n      try {\n        await callbacks.run('federation.beforeCreateDirectMessage', roomUsers);\n      } catch (error) {\n        throw new Meteor.Error(error === null || error === void 0 ? void 0 : error.message);\n      }\n      const _await$createRoom = await createRoom('d', undefined, undefined, roomUsers, false, undefined, {}, options),\n        {\n          _id: rid,\n          inserted\n        } = _await$createRoom,\n        room = _objectWithoutProperties(_await$createRoom, _excluded);\n      return _objectSpread({\n        // @ts-expect-error - room type is already defined in the `createRoom` return type\n        t: 'd',\n        // @ts-expect-error - room id is not defined in the `createRoom` return type\n        rid\n      }, room);\n    }\n    Meteor.methods({\n      async createDirectMessage() {\n        for (var _len = arguments.length, usernames = new Array(_len), _key = 0; _key < _len; _key++) {\n          usernames[_key] = arguments[_key];\n        }\n        return createDirectMessage(usernames, Meteor.userId());\n      }\n    });\n    RateLimiter.limitMethod('createDirectMessage', 10, 60000, {\n      async userId(userId) {\n        return !(await hasPermissionAsync(userId, 'send-many-messages'));\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectWithoutProperties","module","link","default","v","_objectSpread","_excluded","export","createDirectMessage","Rooms","Users","check","Match","Meteor","hasPermissionAsync","addUser","createRoom","RateLimiter","RateLimiterClass","settings","callbacks","__reifyWaitForDeps__","usernames","userId","excludeSelf","arguments","length","undefined","String","Optional","Boolean","Error","method","me","findOneById","projection","username","name","get","users","Promise","all","filter","map","to","findOneByUsernameIgnoringCase","includes","_unused","roomUsers","_id","Object","keys","some","user","uids","_ref","sort","room","findOneDirectRoomContainingAllUserIDs","t","rid","options","creator","subscriptionExtra","open","run","error","message","_await$createRoom","inserted","methods","_len","Array","_key","limitMethod","__reify_async_result__","_reifyError","self","async"],"sources":["server/methods/createDirectMessage.ts"],"sourcesContent":["import type { ICreateRoomParams } from '@rocket.chat/core-services';\nimport type { ICreatedRoom, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Users } from '@rocket.chat/models';\nimport { check, Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../app/authorization/server/functions/hasPermission';\nimport { addUser } from '../../app/federation/server/functions/addUser';\nimport { createRoom } from '../../app/lib/server/functions/createRoom';\nimport { RateLimiterClass as RateLimiter } from '../../app/lib/server/lib/RateLimiter';\nimport { settings } from '../../app/settings/server';\nimport { callbacks } from '../../lib/callbacks';\n\nexport async function createDirectMessage(\n\tusernames: IUser['username'][],\n\tuserId: IUser['_id'] | null,\n\texcludeSelf = false,\n): Promise<Omit<ICreatedRoom, '_id' | 'inserted'>> {\n\tcheck(usernames, [String]);\n\tcheck(userId, String);\n\tcheck(excludeSelf, Match.Optional(Boolean));\n\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tconst me = await Users.findOneById(userId, { projection: { username: 1, name: 1 } });\n\tif (!me?.username) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tif (settings.get('Message_AllowDirectMessagesToYourself') === false && usernames.length === 1 && me.username === usernames[0]) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tconst users = await Promise.all(\n\t\tusernames\n\t\t\t.filter((username) => username !== me.username)\n\t\t\t.map(async (username) => {\n\t\t\t\tlet to: IUser | null = await Users.findOneByUsernameIgnoringCase(username);\n\n\t\t\t\t// If the username does have an `@`, but does not exist locally, we create it first\n\t\t\t\tif (!to && username.includes('@')) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tto = await addUser(username);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// no-op\n\t\t\t\t\t}\n\t\t\t\t\tif (!to) {\n\t\t\t\t\t\treturn username;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!to) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\t\t\tmethod: 'createDirectMessage',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn to;\n\t\t\t}),\n\t);\n\tconst roomUsers = excludeSelf ? users : [me, ...users];\n\n\t// allow self-DMs\n\tif (roomUsers.length === 1 && roomUsers[0] !== undefined && typeof roomUsers[0] !== 'string' && roomUsers[0]._id !== me._id) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tif (!(await hasPermissionAsync(userId, 'create-d'))) {\n\t\t// If the user can't create DMs but can access already existing ones\n\t\tif ((await hasPermissionAsync(userId, 'view-d-room')) && !Object.keys(roomUsers).some((user) => typeof user === 'string')) {\n\t\t\t// Check if the direct room already exists, then return it\n\t\t\tconst uids = (roomUsers as IUser[]).map(({ _id }) => _id).sort();\n\t\t\tconst room = await Rooms.findOneDirectRoomContainingAllUserIDs(uids, { projection: { _id: 1 } });\n\t\t\tif (room) {\n\t\t\t\treturn {\n\t\t\t\t\t...room,\n\t\t\t\t\tt: 'd',\n\t\t\t\t\trid: room._id,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tconst options: Exclude<ICreateRoomParams['options'], undefined> = { creator: me._id };\n\tif (excludeSelf && (await hasPermissionAsync(userId, 'view-room-administration'))) {\n\t\toptions.subscriptionExtra = { open: true };\n\t}\n\ttry {\n\t\tawait callbacks.run('federation.beforeCreateDirectMessage', roomUsers);\n\t} catch (error) {\n\t\tthrow new Meteor.Error((error as any)?.message);\n\t}\n\tconst {\n\t\t_id: rid,\n\t\tinserted,\n\t\t...room\n\t} = await createRoom<'d'>('d', undefined, undefined, roomUsers as IUser[], false, undefined, {}, options);\n\n\treturn {\n\t\t// @ts-expect-error - room type is already defined in the `createRoom` return type\n\t\tt: 'd',\n\t\t// @ts-expect-error - room id is not defined in the `createRoom` return type\n\t\trid,\n\t\t...room,\n\t};\n}\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tcreateDirectMessage(...usernames: Exclude<IUser['username'], undefined>[]): Omit<ICreatedRoom, '_id' | 'inserted'>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync createDirectMessage(...usernames) {\n\t\treturn createDirectMessage(usernames, Meteor.userId());\n\t},\n});\n\nRateLimiter.limitMethod('createDirectMessage', 10, 60000, {\n\tasync userId(userId: IUser['_id']) {\n\t\treturn !(await hasPermissionAsync(userId, 'send-many-messages'));\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f7aec2437c5c71ab4d66b1c2ed825ed83b14ca6e"}
