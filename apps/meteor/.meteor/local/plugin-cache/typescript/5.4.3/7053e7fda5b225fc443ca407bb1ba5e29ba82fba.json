{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/imports/server/rest/rooms.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/imports/server/rest/rooms.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/imports/server/rest/rooms.ts","inputSourceMap":{"version":3,"file":"app/livechat/imports/server/rest/rooms.ts","sourceRoot":"","sources":["app/livechat/imports/server/rest/rooms.ts"],"names":[],"mappings":"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","sourcesContent":["import { LivechatRooms } from '@rocket.chat/models';\nimport { isGETLivechatRoomsParams } from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../api/server';\nimport { getPaginationItems } from '../../../../api/server/helpers/getPaginationItems';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { findRooms } from '../../../server/api/lib/rooms';\n\nconst validateDateParams = (property: string, date?: string) => {\n\tlet parsedDate: { start?: string; end?: string } | undefined = undefined;\n\tif (date) {\n\t\tparsedDate = JSON.parse(date) as { start?: string; end?: string };\n\t}\n\n\tif (parsedDate?.start && isNaN(Date.parse(parsedDate.start))) {\n\t\tthrow new Error(`The \"${property}.start\" query parameter must be a valid date.`);\n\t}\n\tif (parsedDate?.end && isNaN(Date.parse(parsedDate.end))) {\n\t\tthrow new Error(`The \"${property}.end\" query parameter must be a valid date.`);\n\t}\n\treturn parsedDate;\n};\n\nconst isBoolean = (value?: string | boolean): boolean => value === 'true' || value === 'false' || typeof value === 'boolean';\n\nAPI.v1.addRoute(\n\t'livechat/rooms',\n\t{ authRequired: true, validateParams: isGETLivechatRoomsParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, fields } = await this.parseJsonQuery();\n\t\t\tconst { agents, departmentId, open, tags, roomName, onhold, queued } = this.queryParams;\n\t\t\tconst { createdAt, customFields, closedAt } = this.queryParams;\n\n\t\t\tconst createdAtParam = validateDateParams('createdAt', createdAt);\n\t\t\tconst closedAtParam = validateDateParams('closedAt', closedAt);\n\n\t\t\tconst hasAdminAccess = await hasPermissionAsync(this.userId, 'view-livechat-rooms');\n\t\t\tconst hasAgentAccess =\n\t\t\t\t(await hasPermissionAsync(this.userId, 'view-l-room')) && agents?.includes(this.userId) && agents?.length === 1;\n\t\t\tif (!hasAdminAccess && !hasAgentAccess) {\n\t\t\t\treturn API.v1.forbidden();\n\t\t\t}\n\n\t\t\tlet parsedCf: { [key: string]: string } | undefined = undefined;\n\t\t\tif (customFields) {\n\t\t\t\ttry {\n\t\t\t\t\tconst parsedCustomFields = JSON.parse(customFields) as { [key: string]: string };\n\t\t\t\t\tif (typeof parsedCustomFields !== 'object' || Array.isArray(parsedCustomFields) || parsedCustomFields === null) {\n\t\t\t\t\t\tthrow new Error('Invalid custom fields');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Model's already checking for the keys, so we don't need to do it here.\n\t\t\t\t\tparsedCf = parsedCustomFields;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error('The \"customFields\" query parameter must be a valid JSON.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findRooms({\n\t\t\t\t\tagents,\n\t\t\t\t\troomName,\n\t\t\t\t\tdepartmentId,\n\t\t\t\t\t...(isBoolean(open) && { open: open === 'true' }),\n\t\t\t\t\tcreatedAt: createdAtParam,\n\t\t\t\t\tclosedAt: closedAtParam,\n\t\t\t\t\ttags,\n\t\t\t\t\tcustomFields: parsedCf,\n\t\t\t\t\tonhold,\n\t\t\t\t\tqueued,\n\t\t\t\t\toptions: { offset, count, sort, fields },\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/rooms/filters',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'] },\n\t{\n\t\tasync get() {\n\t\t\treturn API.v1.success({\n\t\t\t\tfilters: (await LivechatRooms.findAvailableSources().toArray())[0].fullTypes,\n\t\t\t});\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/imports/server/rest/rooms.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/imports/server/rest/rooms.ts","inputSourceMap":{"version":3,"file":"app/livechat/imports/server/rest/rooms.ts","sourceRoot":"","sources":["app/livechat/imports/server/rest/rooms.ts"],"names":[],"mappings":"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","sourcesContent":["import { LivechatRooms } from '@rocket.chat/models';\nimport { isGETLivechatRoomsParams } from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../api/server';\nimport { getPaginationItems } from '../../../../api/server/helpers/getPaginationItems';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { findRooms } from '../../../server/api/lib/rooms';\n\nconst validateDateParams = (property: string, date?: string) => {\n\tlet parsedDate: { start?: string; end?: string } | undefined = undefined;\n\tif (date) {\n\t\tparsedDate = JSON.parse(date) as { start?: string; end?: string };\n\t}\n\n\tif (parsedDate?.start && isNaN(Date.parse(parsedDate.start))) {\n\t\tthrow new Error(`The \"${property}.start\" query parameter must be a valid date.`);\n\t}\n\tif (parsedDate?.end && isNaN(Date.parse(parsedDate.end))) {\n\t\tthrow new Error(`The \"${property}.end\" query parameter must be a valid date.`);\n\t}\n\treturn parsedDate;\n};\n\nconst isBoolean = (value?: string | boolean): boolean => value === 'true' || value === 'false' || typeof value === 'boolean';\n\nAPI.v1.addRoute(\n\t'livechat/rooms',\n\t{ authRequired: true, validateParams: isGETLivechatRoomsParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, fields } = await this.parseJsonQuery();\n\t\t\tconst { agents, departmentId, open, tags, roomName, onhold, queued } = this.queryParams;\n\t\t\tconst { createdAt, customFields, closedAt } = this.queryParams;\n\n\t\t\tconst createdAtParam = validateDateParams('createdAt', createdAt);\n\t\t\tconst closedAtParam = validateDateParams('closedAt', closedAt);\n\n\t\t\tconst hasAdminAccess = await hasPermissionAsync(this.userId, 'view-livechat-rooms');\n\t\t\tconst hasAgentAccess =\n\t\t\t\t(await hasPermissionAsync(this.userId, 'view-l-room')) && agents?.includes(this.userId) && agents?.length === 1;\n\t\t\tif (!hasAdminAccess && !hasAgentAccess) {\n\t\t\t\treturn API.v1.forbidden();\n\t\t\t}\n\n\t\t\tlet parsedCf: { [key: string]: string } | undefined = undefined;\n\t\t\tif (customFields) {\n\t\t\t\ttry {\n\t\t\t\t\tconst parsedCustomFields = JSON.parse(customFields) as { [key: string]: string };\n\t\t\t\t\tif (typeof parsedCustomFields !== 'object' || Array.isArray(parsedCustomFields) || parsedCustomFields === null) {\n\t\t\t\t\t\tthrow new Error('Invalid custom fields');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Model's already checking for the keys, so we don't need to do it here.\n\t\t\t\t\tparsedCf = parsedCustomFields;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error('The \"customFields\" query parameter must be a valid JSON.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findRooms({\n\t\t\t\t\tagents,\n\t\t\t\t\troomName,\n\t\t\t\t\tdepartmentId,\n\t\t\t\t\t...(isBoolean(open) && { open: open === 'true' }),\n\t\t\t\t\tcreatedAt: createdAtParam,\n\t\t\t\t\tclosedAt: closedAtParam,\n\t\t\t\t\ttags,\n\t\t\t\t\tcustomFields: parsedCf,\n\t\t\t\t\tonhold,\n\t\t\t\t\tqueued,\n\t\t\t\t\toptions: { offset, count, sort, fields },\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/rooms/filters',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'] },\n\t{\n\t\tasync get() {\n\t\t\treturn API.v1.success({\n\t\t\t\tfilters: (await LivechatRooms.findAvailableSources().toArray())[0].fullTypes,\n\t\t\t});\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let LivechatRooms;\n    module.link(\"@rocket.chat/models\", {\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      }\n    }, 0);\n    let isGETLivechatRoomsParams;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isGETLivechatRoomsParams(v) {\n        isGETLivechatRoomsParams = v;\n      }\n    }, 1);\n    let API;\n    module.link(\"../../../../api/server\", {\n      API(v) {\n        API = v;\n      }\n    }, 2);\n    let getPaginationItems;\n    module.link(\"../../../../api/server/helpers/getPaginationItems\", {\n      getPaginationItems(v) {\n        getPaginationItems = v;\n      }\n    }, 3);\n    let hasPermissionAsync;\n    module.link(\"../../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 4);\n    let findRooms;\n    module.link(\"../../../server/api/lib/rooms\", {\n      findRooms(v) {\n        findRooms = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const validateDateParams = (property, date) => {\n      var _parsedDate, _parsedDate2;\n      let parsedDate = undefined;\n      if (date) {\n        parsedDate = JSON.parse(date);\n      }\n      if ((_parsedDate = parsedDate) !== null && _parsedDate !== void 0 && _parsedDate.start && isNaN(Date.parse(parsedDate.start))) {\n        throw new Error(\"The \\\"\".concat(property, \".start\\\" query parameter must be a valid date.\"));\n      }\n      if ((_parsedDate2 = parsedDate) !== null && _parsedDate2 !== void 0 && _parsedDate2.end && isNaN(Date.parse(parsedDate.end))) {\n        throw new Error(\"The \\\"\".concat(property, \".end\\\" query parameter must be a valid date.\"));\n      }\n      return parsedDate;\n    };\n    const isBoolean = value => value === 'true' || value === 'false' || typeof value === 'boolean';\n    API.v1.addRoute('livechat/rooms', {\n      authRequired: true,\n      validateParams: isGETLivechatRoomsParams\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort,\n          fields\n        } = await this.parseJsonQuery();\n        const {\n          agents,\n          departmentId,\n          open,\n          tags,\n          roomName,\n          onhold,\n          queued\n        } = this.queryParams;\n        const {\n          createdAt,\n          customFields,\n          closedAt\n        } = this.queryParams;\n        const createdAtParam = validateDateParams('createdAt', createdAt);\n        const closedAtParam = validateDateParams('closedAt', closedAt);\n        const hasAdminAccess = await hasPermissionAsync(this.userId, 'view-livechat-rooms');\n        const hasAgentAccess = (await hasPermissionAsync(this.userId, 'view-l-room')) && (agents === null || agents === void 0 ? void 0 : agents.includes(this.userId)) && (agents === null || agents === void 0 ? void 0 : agents.length) === 1;\n        if (!hasAdminAccess && !hasAgentAccess) {\n          return API.v1.forbidden();\n        }\n        let parsedCf = undefined;\n        if (customFields) {\n          try {\n            const parsedCustomFields = JSON.parse(customFields);\n            if (typeof parsedCustomFields !== 'object' || Array.isArray(parsedCustomFields) || parsedCustomFields === null) {\n              throw new Error('Invalid custom fields');\n            }\n            // Model's already checking for the keys, so we don't need to do it here.\n            parsedCf = parsedCustomFields;\n          } catch (e) {\n            throw new Error('The \"customFields\" query parameter must be a valid JSON.');\n          }\n        }\n        return API.v1.success(await findRooms(_objectSpread(_objectSpread({\n          agents,\n          roomName,\n          departmentId\n        }, isBoolean(open) && {\n          open: open === 'true'\n        }), {}, {\n          createdAt: createdAtParam,\n          closedAt: closedAtParam,\n          tags,\n          customFields: parsedCf,\n          onhold,\n          queued,\n          options: {\n            offset,\n            count,\n            sort,\n            fields\n          }\n        })));\n      }\n    });\n    API.v1.addRoute('livechat/rooms/filters', {\n      authRequired: true,\n      permissionsRequired: ['view-l-room']\n    }, {\n      async get() {\n        return API.v1.success({\n          filters: (await LivechatRooms.findAvailableSources().toArray())[0].fullTypes\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","LivechatRooms","isGETLivechatRoomsParams","API","getPaginationItems","hasPermissionAsync","findRooms","__reifyWaitForDeps__","validateDateParams","property","date","_parsedDate","_parsedDate2","parsedDate","undefined","JSON","parse","start","isNaN","Date","Error","concat","end","isBoolean","value","v1","addRoute","authRequired","validateParams","get","offset","count","queryParams","sort","fields","parseJsonQuery","agents","departmentId","open","tags","roomName","onhold","queued","createdAt","customFields","closedAt","createdAtParam","closedAtParam","hasAdminAccess","userId","hasAgentAccess","includes","length","forbidden","parsedCf","parsedCustomFields","Array","isArray","e","success","options","permissionsRequired","filters","findAvailableSources","toArray","fullTypes","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/imports/server/rest/rooms.ts"],"sourcesContent":["import { LivechatRooms } from '@rocket.chat/models';\nimport { isGETLivechatRoomsParams } from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../api/server';\nimport { getPaginationItems } from '../../../../api/server/helpers/getPaginationItems';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { findRooms } from '../../../server/api/lib/rooms';\n\nconst validateDateParams = (property: string, date?: string) => {\n\tlet parsedDate: { start?: string; end?: string } | undefined = undefined;\n\tif (date) {\n\t\tparsedDate = JSON.parse(date) as { start?: string; end?: string };\n\t}\n\n\tif (parsedDate?.start && isNaN(Date.parse(parsedDate.start))) {\n\t\tthrow new Error(`The \"${property}.start\" query parameter must be a valid date.`);\n\t}\n\tif (parsedDate?.end && isNaN(Date.parse(parsedDate.end))) {\n\t\tthrow new Error(`The \"${property}.end\" query parameter must be a valid date.`);\n\t}\n\treturn parsedDate;\n};\n\nconst isBoolean = (value?: string | boolean): boolean => value === 'true' || value === 'false' || typeof value === 'boolean';\n\nAPI.v1.addRoute(\n\t'livechat/rooms',\n\t{ authRequired: true, validateParams: isGETLivechatRoomsParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, fields } = await this.parseJsonQuery();\n\t\t\tconst { agents, departmentId, open, tags, roomName, onhold, queued } = this.queryParams;\n\t\t\tconst { createdAt, customFields, closedAt } = this.queryParams;\n\n\t\t\tconst createdAtParam = validateDateParams('createdAt', createdAt);\n\t\t\tconst closedAtParam = validateDateParams('closedAt', closedAt);\n\n\t\t\tconst hasAdminAccess = await hasPermissionAsync(this.userId, 'view-livechat-rooms');\n\t\t\tconst hasAgentAccess =\n\t\t\t\t(await hasPermissionAsync(this.userId, 'view-l-room')) && agents?.includes(this.userId) && agents?.length === 1;\n\t\t\tif (!hasAdminAccess && !hasAgentAccess) {\n\t\t\t\treturn API.v1.forbidden();\n\t\t\t}\n\n\t\t\tlet parsedCf: { [key: string]: string } | undefined = undefined;\n\t\t\tif (customFields) {\n\t\t\t\ttry {\n\t\t\t\t\tconst parsedCustomFields = JSON.parse(customFields) as { [key: string]: string };\n\t\t\t\t\tif (typeof parsedCustomFields !== 'object' || Array.isArray(parsedCustomFields) || parsedCustomFields === null) {\n\t\t\t\t\t\tthrow new Error('Invalid custom fields');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Model's already checking for the keys, so we don't need to do it here.\n\t\t\t\t\tparsedCf = parsedCustomFields;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error('The \"customFields\" query parameter must be a valid JSON.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findRooms({\n\t\t\t\t\tagents,\n\t\t\t\t\troomName,\n\t\t\t\t\tdepartmentId,\n\t\t\t\t\t...(isBoolean(open) && { open: open === 'true' }),\n\t\t\t\t\tcreatedAt: createdAtParam,\n\t\t\t\t\tclosedAt: closedAtParam,\n\t\t\t\t\ttags,\n\t\t\t\t\tcustomFields: parsedCf,\n\t\t\t\t\tonhold,\n\t\t\t\t\tqueued,\n\t\t\t\t\toptions: { offset, count, sort, fields },\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/rooms/filters',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'] },\n\t{\n\t\tasync get() {\n\t\t\treturn API.v1.success({\n\t\t\t\tfilters: (await LivechatRooms.findAvailableSources().toArray())[0].fullTypes,\n\t\t\t});\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"7053e7fda5b225fc443ca407bb1ba5e29ba82fba"}
