{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/getUsernameSuggestion.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/getUsernameSuggestion.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/getUsernameSuggestion.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/getUsernameSuggestion.ts","sourceRoot":"","sources":["app/lib/server/functions/getUsernameSuggestion.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport limax from 'limax';\n\nimport { settings } from '../../../settings/server';\n\nfunction slug(text: string): string {\n\treturn limax(text, { replacement: '.' }).replace(/[^0-9a-z-_.]/g, '');\n}\n\nasync function usernameIsAvailable(username: string): Promise<boolean> {\n\tif (username.length === 0) {\n\t\treturn false;\n\t}\n\n\tif (username === 'all') {\n\t\treturn false;\n\t}\n\n\treturn !(await Users.findOneByUsernameIgnoringCase(username, {}));\n}\n\nconst name = (username: string): string => (settings.get('UTF8_Names_Slugify') ? slug(username) : username);\n\nexport async function generateUsernameSuggestion(user: Pick<IUser, 'name' | 'emails' | 'services'>): Promise<string | undefined> {\n\tlet usernames = [];\n\n\tif (user.name) {\n\t\tusernames.push(name(user.name));\n\n\t\tconst nameParts = user.name.split(' ');\n\n\t\tif (nameParts.length > 1) {\n\t\t\tconst [first] = nameParts;\n\t\t\tconst last = nameParts[nameParts.length - 1];\n\t\t\tusernames.push(name(first[0] + last));\n\t\t\tusernames.push(name(first + last[0]));\n\t\t}\n\t}\n\n\tif (user?.name) {\n\t\tusernames.push(name(user.name));\n\t}\n\n\tif (Array.isArray(user.services)) {\n\t\tconst services = [\n\t\t\t...new Set(user.services.flatMap(({ name, username, firstName, lastName }) => [name, username, firstName, lastName])),\n\t\t];\n\t\tusernames.push(...services.map(name));\n\t}\n\n\tif (user.emails && user.emails.length > 0) {\n\t\tfor (const email of user.emails) {\n\t\t\tif (email.address && email.verified === true) {\n\t\t\t\tusernames.push(slug(email.address.replace(/@.+$/, '')));\n\t\t\t\tusernames.push(slug(email.address.replace(/(.+)@(\\w+).+/, '$1.$2')));\n\t\t\t}\n\t\t}\n\t}\n\n\tusernames = usernames.filter((e) => e);\n\n\tfor await (const item of usernames) {\n\t\tif (await usernameIsAvailable(item)) {\n\t\t\treturn item;\n\t\t}\n\t}\n\n\tusernames.push(settings.get('Accounts_DefaultUsernamePrefixSuggestion'));\n\n\tlet index = await Users.col.countDocuments({ username: new RegExp(`^${usernames[0]}-[0-9]+`) });\n\tconst username = '';\n\twhile (!username) {\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tif (await usernameIsAvailable(`${usernames[0]}-${index}`)) {\n\t\t\treturn `${usernames[0]}-${index}`;\n\t\t}\n\t\tindex++;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/getUsernameSuggestion.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/getUsernameSuggestion.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/getUsernameSuggestion.ts","sourceRoot":"","sources":["app/lib/server/functions/getUsernameSuggestion.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport limax from 'limax';\n\nimport { settings } from '../../../settings/server';\n\nfunction slug(text: string): string {\n\treturn limax(text, { replacement: '.' }).replace(/[^0-9a-z-_.]/g, '');\n}\n\nasync function usernameIsAvailable(username: string): Promise<boolean> {\n\tif (username.length === 0) {\n\t\treturn false;\n\t}\n\n\tif (username === 'all') {\n\t\treturn false;\n\t}\n\n\treturn !(await Users.findOneByUsernameIgnoringCase(username, {}));\n}\n\nconst name = (username: string): string => (settings.get('UTF8_Names_Slugify') ? slug(username) : username);\n\nexport async function generateUsernameSuggestion(user: Pick<IUser, 'name' | 'emails' | 'services'>): Promise<string | undefined> {\n\tlet usernames = [];\n\n\tif (user.name) {\n\t\tusernames.push(name(user.name));\n\n\t\tconst nameParts = user.name.split(' ');\n\n\t\tif (nameParts.length > 1) {\n\t\t\tconst [first] = nameParts;\n\t\t\tconst last = nameParts[nameParts.length - 1];\n\t\t\tusernames.push(name(first[0] + last));\n\t\t\tusernames.push(name(first + last[0]));\n\t\t}\n\t}\n\n\tif (user?.name) {\n\t\tusernames.push(name(user.name));\n\t}\n\n\tif (Array.isArray(user.services)) {\n\t\tconst services = [\n\t\t\t...new Set(user.services.flatMap(({ name, username, firstName, lastName }) => [name, username, firstName, lastName])),\n\t\t];\n\t\tusernames.push(...services.map(name));\n\t}\n\n\tif (user.emails && user.emails.length > 0) {\n\t\tfor (const email of user.emails) {\n\t\t\tif (email.address && email.verified === true) {\n\t\t\t\tusernames.push(slug(email.address.replace(/@.+$/, '')));\n\t\t\t\tusernames.push(slug(email.address.replace(/(.+)@(\\w+).+/, '$1.$2')));\n\t\t\t}\n\t\t}\n\t}\n\n\tusernames = usernames.filter((e) => e);\n\n\tfor await (const item of usernames) {\n\t\tif (await usernameIsAvailable(item)) {\n\t\t\treturn item;\n\t\t}\n\t}\n\n\tusernames.push(settings.get('Accounts_DefaultUsernamePrefixSuggestion'));\n\n\tlet index = await Users.col.countDocuments({ username: new RegExp(`^${usernames[0]}-[0-9]+`) });\n\tconst username = '';\n\twhile (!username) {\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tif (await usernameIsAvailable(`${usernames[0]}-${index}`)) {\n\t\t\treturn `${usernames[0]}-${index}`;\n\t\t}\n\t\tindex++;\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      generateUsernameSuggestion: () => generateUsernameSuggestion\n    });\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let limax;\n    module.link(\"limax\", {\n      default(v) {\n        limax = v;\n      }\n    }, 1);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    function slug(text) {\n      return limax(text, {\n        replacement: '.'\n      }).replace(/[^0-9a-z-_.]/g, '');\n    }\n    async function usernameIsAvailable(username) {\n      if (username.length === 0) {\n        return false;\n      }\n      if (username === 'all') {\n        return false;\n      }\n      return !(await Users.findOneByUsernameIgnoringCase(username, {}));\n    }\n    const name = username => settings.get('UTF8_Names_Slugify') ? slug(username) : username;\n    async function generateUsernameSuggestion(user) {\n      let usernames = [];\n      if (user.name) {\n        usernames.push(name(user.name));\n        const nameParts = user.name.split(' ');\n        if (nameParts.length > 1) {\n          const [first] = nameParts;\n          const last = nameParts[nameParts.length - 1];\n          usernames.push(name(first[0] + last));\n          usernames.push(name(first + last[0]));\n        }\n      }\n      if (user !== null && user !== void 0 && user.name) {\n        usernames.push(name(user.name));\n      }\n      if (Array.isArray(user.services)) {\n        const services = [...new Set(user.services.flatMap(_ref => {\n          let {\n            name,\n            username,\n            firstName,\n            lastName\n          } = _ref;\n          return [name, username, firstName, lastName];\n        }))];\n        usernames.push(...services.map(name));\n      }\n      if (user.emails && user.emails.length > 0) {\n        for (const email of user.emails) {\n          if (email.address && email.verified === true) {\n            usernames.push(slug(email.address.replace(/@.+$/, '')));\n            usernames.push(slug(email.address.replace(/(.+)@(\\w+).+/, '$1.$2')));\n          }\n        }\n      }\n      usernames = usernames.filter(e => e);\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(usernames), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const item = _step.value;\n          {\n            if (await usernameIsAvailable(item)) {\n              return item;\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      usernames.push(settings.get('Accounts_DefaultUsernamePrefixSuggestion'));\n      let index = await Users.col.countDocuments({\n        username: new RegExp(\"^\".concat(usernames[0], \"-[0-9]+\"))\n      });\n      const username = '';\n      while (!username) {\n        // eslint-disable-next-line no-await-in-loop\n        if (await usernameIsAvailable(\"\".concat(usernames[0], \"-\").concat(index))) {\n          return \"\".concat(usernames[0], \"-\").concat(index);\n        }\n        index++;\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","generateUsernameSuggestion","Users","limax","settings","__reifyWaitForDeps__","slug","text","replacement","replace","usernameIsAvailable","username","length","findOneByUsernameIgnoringCase","name","get","user","usernames","push","nameParts","split","first","last","Array","isArray","services","Set","flatMap","_ref","firstName","lastName","map","emails","email","address","verified","filter","e","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","item","value","err","return","index","col","countDocuments","RegExp","concat","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/getUsernameSuggestion.ts"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport limax from 'limax';\n\nimport { settings } from '../../../settings/server';\n\nfunction slug(text: string): string {\n\treturn limax(text, { replacement: '.' }).replace(/[^0-9a-z-_.]/g, '');\n}\n\nasync function usernameIsAvailable(username: string): Promise<boolean> {\n\tif (username.length === 0) {\n\t\treturn false;\n\t}\n\n\tif (username === 'all') {\n\t\treturn false;\n\t}\n\n\treturn !(await Users.findOneByUsernameIgnoringCase(username, {}));\n}\n\nconst name = (username: string): string => (settings.get('UTF8_Names_Slugify') ? slug(username) : username);\n\nexport async function generateUsernameSuggestion(user: Pick<IUser, 'name' | 'emails' | 'services'>): Promise<string | undefined> {\n\tlet usernames = [];\n\n\tif (user.name) {\n\t\tusernames.push(name(user.name));\n\n\t\tconst nameParts = user.name.split(' ');\n\n\t\tif (nameParts.length > 1) {\n\t\t\tconst [first] = nameParts;\n\t\t\tconst last = nameParts[nameParts.length - 1];\n\t\t\tusernames.push(name(first[0] + last));\n\t\t\tusernames.push(name(first + last[0]));\n\t\t}\n\t}\n\n\tif (user?.name) {\n\t\tusernames.push(name(user.name));\n\t}\n\n\tif (Array.isArray(user.services)) {\n\t\tconst services = [\n\t\t\t...new Set(user.services.flatMap(({ name, username, firstName, lastName }) => [name, username, firstName, lastName])),\n\t\t];\n\t\tusernames.push(...services.map(name));\n\t}\n\n\tif (user.emails && user.emails.length > 0) {\n\t\tfor (const email of user.emails) {\n\t\t\tif (email.address && email.verified === true) {\n\t\t\t\tusernames.push(slug(email.address.replace(/@.+$/, '')));\n\t\t\t\tusernames.push(slug(email.address.replace(/(.+)@(\\w+).+/, '$1.$2')));\n\t\t\t}\n\t\t}\n\t}\n\n\tusernames = usernames.filter((e) => e);\n\n\tfor await (const item of usernames) {\n\t\tif (await usernameIsAvailable(item)) {\n\t\t\treturn item;\n\t\t}\n\t}\n\n\tusernames.push(settings.get('Accounts_DefaultUsernamePrefixSuggestion'));\n\n\tlet index = await Users.col.countDocuments({ username: new RegExp(`^${usernames[0]}-[0-9]+`) });\n\tconst username = '';\n\twhile (!username) {\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tif (await usernameIsAvailable(`${usernames[0]}-${index}`)) {\n\t\t\treturn `${usernames[0]}-${index}`;\n\t\t}\n\t\tindex++;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"92c0956f272f92bcfc9b583c736abf4e66a957e0"}
