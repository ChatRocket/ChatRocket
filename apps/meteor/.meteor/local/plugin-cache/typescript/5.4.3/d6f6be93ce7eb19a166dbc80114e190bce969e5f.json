{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Settings.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/Settings.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Settings.ts","inputSourceMap":{"version":3,"file":"server/models/raw/Settings.ts","sourceRoot":"","sources":["server/models/raw/Settings.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISetting, ISettingColor, ISettingSelectOption, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { ISettingsModel } from '@rocket.chat/model-typings';\nimport type {\n\tCollection,\n\tFindCursor,\n\tDb,\n\tFilter,\n\tUpdateFilter,\n\tUpdateResult,\n\tDocument,\n\tFindOptions,\n\tFindOneAndUpdateOptions,\n\tModifyResult,\n\tUpdateOptions,\n} from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class SettingsRaw extends BaseRaw<ISetting> implements ISettingsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ISetting>>) {\n\t\tsuper(db, 'settings', trash);\n\t}\n\n\tasync getValueById(_id: string): Promise<ISetting['value'] | undefined> {\n\t\tconst setting = await this.findOne<Pick<ISetting, 'value'>>({ _id }, { projection: { value: 1 } });\n\n\t\treturn setting?.value;\n\t}\n\n\tfindNotHidden({ updatedAfter }: { updatedAfter?: Date } = {}): FindCursor<ISetting> {\n\t\tconst query: Filter<ISetting> = {\n\t\t\thidden: { $ne: true },\n\t\t};\n\n\t\tif (updatedAfter) {\n\t\t\tquery._updatedAt = { $gt: updatedAfter };\n\t\t}\n\n\t\treturn this.find(query);\n\t}\n\n\tfindOneNotHiddenById(_id: string): Promise<ISetting | null> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\thidden: { $ne: true },\n\t\t};\n\n\t\treturn this.findOne(query);\n\t}\n\n\tfindByIds(_id: string[] | string = [], options?: FindOptions<ISetting>): FindCursor<ISetting> {\n\t\tif (typeof _id === 'string') {\n\t\t\t_id = [_id];\n\t\t}\n\n\t\tconst query = {\n\t\t\t_id: {\n\t\t\t\t$in: _id,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tupdateValueById(\n\t\t_id: string,\n\t\tvalue: (ISetting['value'] extends undefined ? never : ISetting['value']) | null,\n\t\toptions?: UpdateOptions,\n\t): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\tvalue: { $ne: value },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne(query, update, options);\n\t}\n\n\tasync resetValueById(\n\t\t_id: string,\n\t\tvalue?: (ISetting['value'] extends undefined ? never : ISetting['value']) | null,\n\t): Promise<Document | UpdateResult | undefined> {\n\t\tif (value == null) {\n\t\t\tconst record = await this.findOneById(_id);\n\t\t\tif (record) {\n\t\t\t\tconst prop = record.valueSource || 'packageValue';\n\t\t\t\tvalue = record[prop];\n\t\t\t}\n\t\t}\n\n\t\tif (value == null) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.updateValueById(_id, value);\n\t}\n\n\tasync incrementValueById(\n\t\t_id: ISetting['_id'],\n\t\tvalue?: ISetting['value'],\n\t\toptions?: FindOneAndUpdateOptions,\n\t): Promise<ModifyResult<ISetting>> {\n\t\treturn this.findOneAndUpdate(\n\t\t\t{\n\t\t\t\tblocked: { $ne: true },\n\t\t\t\t_id,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$inc: {\n\t\t\t\t\tvalue: value || 1,\n\t\t\t\t},\n\t\t\t} as unknown as UpdateFilter<ISetting>,\n\t\t\toptions,\n\t\t);\n\t}\n\n\tupdateOptionsById<T extends ISetting = ISetting>(\n\t\t_id: ISetting['_id'],\n\t\toptions: UpdateFilter<T>['$set'],\n\t): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = { $set: options };\n\n\t\treturn this.updateOne(query, update);\n\t}\n\n\tupdateValueNotHiddenById<T extends ISetting['value'] = ISetting['value']>(\n\t\t_id: ISetting['_id'],\n\t\tvalue: T,\n\t): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\thidden: { $ne: true },\n\t\t\tblocked: { $ne: true },\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne(query, update);\n\t}\n\n\tupdateValueAndEditorById<T extends ISetting['value'] = ISetting['value']>(\n\t\t_id: ISetting['_id'],\n\t\tvalue: T,\n\t\teditor: ISettingColor['editor'],\n\t): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\tvalue: { $ne: value },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t\teditor,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne(query, update);\n\t}\n\n\tfindNotHiddenPublic<T extends ISetting = ISetting>(\n\t\tids: ISetting['_id'][] = [],\n\t): FindCursor<\n\t\tT extends ISettingColor\n\t\t\t? Pick<T, '_id' | 'value' | 'editor' | 'enterprise' | 'invalidValue' | 'modules' | 'requiredOnWizard'>\n\t\t\t: Pick<T, '_id' | 'value' | 'enterprise' | 'invalidValue' | 'modules' | 'requiredOnWizard'>\n\t> {\n\t\tconst filter: Filter<ISetting> = {\n\t\t\thidden: { $ne: true },\n\t\t\tpublic: true,\n\t\t};\n\n\t\tif (ids.length > 0) {\n\t\t\tfilter._id = { $in: ids };\n\t\t}\n\n\t\treturn this.find(filter, {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tvalue: 1,\n\t\t\t\teditor: 1,\n\t\t\t\tenterprise: 1,\n\t\t\t\tinvalidValue: 1,\n\t\t\t\tmodules: 1,\n\t\t\t\trequiredOnWizard: 1,\n\t\t\t},\n\t\t});\n\t}\n\n\tfindSetupWizardSettings(): FindCursor<ISetting> {\n\t\treturn this.find({ wizard: { $exists: true } });\n\t}\n\n\taddOptionValueById(_id: ISetting['_id'], option: ISettingSelectOption): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\t_id,\n\t\t};\n\n\t\tconst { key, i18nLabel } = option;\n\t\tconst update = {\n\t\t\t$addToSet: {\n\t\t\t\tvalues: {\n\t\t\t\t\tkey,\n\t\t\t\t\ti18nLabel,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne(query, update);\n\t}\n\n\tfindNotHiddenPublicUpdatedAfter(updatedAt: Date): FindCursor<ISetting> {\n\t\tconst filter = {\n\t\t\thidden: { $ne: true },\n\t\t\tpublic: true,\n\t\t\t_updatedAt: {\n\t\t\t\t$gt: updatedAt,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(filter, {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tvalue: 1,\n\t\t\t\teditor: 1,\n\t\t\t\tenterprise: 1,\n\t\t\t\tinvalidValue: 1,\n\t\t\t\tmodules: 1,\n\t\t\t\trequiredOnWizard: 1,\n\t\t\t},\n\t\t});\n\t}\n\n\tfindEnterpriseSettings(): FindCursor<ISetting> {\n\t\treturn this.find({ enterprise: true });\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Settings.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/Settings.ts","inputSourceMap":{"version":3,"file":"server/models/raw/Settings.ts","sourceRoot":"","sources":["server/models/raw/Settings.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISetting, ISettingColor, ISettingSelectOption, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { ISettingsModel } from '@rocket.chat/model-typings';\nimport type {\n\tCollection,\n\tFindCursor,\n\tDb,\n\tFilter,\n\tUpdateFilter,\n\tUpdateResult,\n\tDocument,\n\tFindOptions,\n\tFindOneAndUpdateOptions,\n\tModifyResult,\n\tUpdateOptions,\n} from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class SettingsRaw extends BaseRaw<ISetting> implements ISettingsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ISetting>>) {\n\t\tsuper(db, 'settings', trash);\n\t}\n\n\tasync getValueById(_id: string): Promise<ISetting['value'] | undefined> {\n\t\tconst setting = await this.findOne<Pick<ISetting, 'value'>>({ _id }, { projection: { value: 1 } });\n\n\t\treturn setting?.value;\n\t}\n\n\tfindNotHidden({ updatedAfter }: { updatedAfter?: Date } = {}): FindCursor<ISetting> {\n\t\tconst query: Filter<ISetting> = {\n\t\t\thidden: { $ne: true },\n\t\t};\n\n\t\tif (updatedAfter) {\n\t\t\tquery._updatedAt = { $gt: updatedAfter };\n\t\t}\n\n\t\treturn this.find(query);\n\t}\n\n\tfindOneNotHiddenById(_id: string): Promise<ISetting | null> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\thidden: { $ne: true },\n\t\t};\n\n\t\treturn this.findOne(query);\n\t}\n\n\tfindByIds(_id: string[] | string = [], options?: FindOptions<ISetting>): FindCursor<ISetting> {\n\t\tif (typeof _id === 'string') {\n\t\t\t_id = [_id];\n\t\t}\n\n\t\tconst query = {\n\t\t\t_id: {\n\t\t\t\t$in: _id,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tupdateValueById(\n\t\t_id: string,\n\t\tvalue: (ISetting['value'] extends undefined ? never : ISetting['value']) | null,\n\t\toptions?: UpdateOptions,\n\t): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\tvalue: { $ne: value },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne(query, update, options);\n\t}\n\n\tasync resetValueById(\n\t\t_id: string,\n\t\tvalue?: (ISetting['value'] extends undefined ? never : ISetting['value']) | null,\n\t): Promise<Document | UpdateResult | undefined> {\n\t\tif (value == null) {\n\t\t\tconst record = await this.findOneById(_id);\n\t\t\tif (record) {\n\t\t\t\tconst prop = record.valueSource || 'packageValue';\n\t\t\t\tvalue = record[prop];\n\t\t\t}\n\t\t}\n\n\t\tif (value == null) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.updateValueById(_id, value);\n\t}\n\n\tasync incrementValueById(\n\t\t_id: ISetting['_id'],\n\t\tvalue?: ISetting['value'],\n\t\toptions?: FindOneAndUpdateOptions,\n\t): Promise<ModifyResult<ISetting>> {\n\t\treturn this.findOneAndUpdate(\n\t\t\t{\n\t\t\t\tblocked: { $ne: true },\n\t\t\t\t_id,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$inc: {\n\t\t\t\t\tvalue: value || 1,\n\t\t\t\t},\n\t\t\t} as unknown as UpdateFilter<ISetting>,\n\t\t\toptions,\n\t\t);\n\t}\n\n\tupdateOptionsById<T extends ISetting = ISetting>(\n\t\t_id: ISetting['_id'],\n\t\toptions: UpdateFilter<T>['$set'],\n\t): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = { $set: options };\n\n\t\treturn this.updateOne(query, update);\n\t}\n\n\tupdateValueNotHiddenById<T extends ISetting['value'] = ISetting['value']>(\n\t\t_id: ISetting['_id'],\n\t\tvalue: T,\n\t): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\thidden: { $ne: true },\n\t\t\tblocked: { $ne: true },\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne(query, update);\n\t}\n\n\tupdateValueAndEditorById<T extends ISetting['value'] = ISetting['value']>(\n\t\t_id: ISetting['_id'],\n\t\tvalue: T,\n\t\teditor: ISettingColor['editor'],\n\t): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\tvalue: { $ne: value },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t\teditor,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne(query, update);\n\t}\n\n\tfindNotHiddenPublic<T extends ISetting = ISetting>(\n\t\tids: ISetting['_id'][] = [],\n\t): FindCursor<\n\t\tT extends ISettingColor\n\t\t\t? Pick<T, '_id' | 'value' | 'editor' | 'enterprise' | 'invalidValue' | 'modules' | 'requiredOnWizard'>\n\t\t\t: Pick<T, '_id' | 'value' | 'enterprise' | 'invalidValue' | 'modules' | 'requiredOnWizard'>\n\t> {\n\t\tconst filter: Filter<ISetting> = {\n\t\t\thidden: { $ne: true },\n\t\t\tpublic: true,\n\t\t};\n\n\t\tif (ids.length > 0) {\n\t\t\tfilter._id = { $in: ids };\n\t\t}\n\n\t\treturn this.find(filter, {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tvalue: 1,\n\t\t\t\teditor: 1,\n\t\t\t\tenterprise: 1,\n\t\t\t\tinvalidValue: 1,\n\t\t\t\tmodules: 1,\n\t\t\t\trequiredOnWizard: 1,\n\t\t\t},\n\t\t});\n\t}\n\n\tfindSetupWizardSettings(): FindCursor<ISetting> {\n\t\treturn this.find({ wizard: { $exists: true } });\n\t}\n\n\taddOptionValueById(_id: ISetting['_id'], option: ISettingSelectOption): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\t_id,\n\t\t};\n\n\t\tconst { key, i18nLabel } = option;\n\t\tconst update = {\n\t\t\t$addToSet: {\n\t\t\t\tvalues: {\n\t\t\t\t\tkey,\n\t\t\t\t\ti18nLabel,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne(query, update);\n\t}\n\n\tfindNotHiddenPublicUpdatedAfter(updatedAt: Date): FindCursor<ISetting> {\n\t\tconst filter = {\n\t\t\thidden: { $ne: true },\n\t\t\tpublic: true,\n\t\t\t_updatedAt: {\n\t\t\t\t$gt: updatedAt,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(filter, {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tvalue: 1,\n\t\t\t\teditor: 1,\n\t\t\t\tenterprise: 1,\n\t\t\t\tinvalidValue: 1,\n\t\t\t\tmodules: 1,\n\t\t\t\trequiredOnWizard: 1,\n\t\t\t},\n\t\t});\n\t}\n\n\tfindEnterpriseSettings(): FindCursor<ISetting> {\n\t\treturn this.find({ enterprise: true });\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      SettingsRaw: () => SettingsRaw\n    });\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class SettingsRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'settings', trash);\n      }\n      async getValueById(_id) {\n        const setting = await this.findOne({\n          _id\n        }, {\n          projection: {\n            value: 1\n          }\n        });\n        return setting === null || setting === void 0 ? void 0 : setting.value;\n      }\n      findNotHidden() {\n        let {\n          updatedAfter\n        } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const query = {\n          hidden: {\n            $ne: true\n          }\n        };\n        if (updatedAfter) {\n          query._updatedAt = {\n            $gt: updatedAfter\n          };\n        }\n        return this.find(query);\n      }\n      findOneNotHiddenById(_id) {\n        const query = {\n          _id,\n          hidden: {\n            $ne: true\n          }\n        };\n        return this.findOne(query);\n      }\n      findByIds() {\n        let _id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        let options = arguments.length > 1 ? arguments[1] : undefined;\n        if (typeof _id === 'string') {\n          _id = [_id];\n        }\n        const query = {\n          _id: {\n            $in: _id\n          }\n        };\n        return this.find(query, options);\n      }\n      updateValueById(_id, value, options) {\n        const query = {\n          blocked: {\n            $ne: true\n          },\n          value: {\n            $ne: value\n          },\n          _id\n        };\n        const update = {\n          $set: {\n            value\n          }\n        };\n        return this.updateOne(query, update, options);\n      }\n      async resetValueById(_id, value) {\n        if (value == null) {\n          const record = await this.findOneById(_id);\n          if (record) {\n            const prop = record.valueSource || 'packageValue';\n            value = record[prop];\n          }\n        }\n        if (value == null) {\n          return;\n        }\n        return this.updateValueById(_id, value);\n      }\n      async incrementValueById(_id, value, options) {\n        return this.findOneAndUpdate({\n          blocked: {\n            $ne: true\n          },\n          _id\n        }, {\n          $inc: {\n            value: value || 1\n          }\n        }, options);\n      }\n      updateOptionsById(_id, options) {\n        const query = {\n          blocked: {\n            $ne: true\n          },\n          _id\n        };\n        const update = {\n          $set: options\n        };\n        return this.updateOne(query, update);\n      }\n      updateValueNotHiddenById(_id, value) {\n        const query = {\n          _id,\n          hidden: {\n            $ne: true\n          },\n          blocked: {\n            $ne: true\n          }\n        };\n        const update = {\n          $set: {\n            value\n          }\n        };\n        return this.updateOne(query, update);\n      }\n      updateValueAndEditorById(_id, value, editor) {\n        const query = {\n          blocked: {\n            $ne: true\n          },\n          value: {\n            $ne: value\n          },\n          _id\n        };\n        const update = {\n          $set: {\n            value,\n            editor\n          }\n        };\n        return this.updateOne(query, update);\n      }\n      findNotHiddenPublic() {\n        let ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        const filter = {\n          hidden: {\n            $ne: true\n          },\n          public: true\n        };\n        if (ids.length > 0) {\n          filter._id = {\n            $in: ids\n          };\n        }\n        return this.find(filter, {\n          projection: {\n            _id: 1,\n            value: 1,\n            editor: 1,\n            enterprise: 1,\n            invalidValue: 1,\n            modules: 1,\n            requiredOnWizard: 1\n          }\n        });\n      }\n      findSetupWizardSettings() {\n        return this.find({\n          wizard: {\n            $exists: true\n          }\n        });\n      }\n      addOptionValueById(_id, option) {\n        const query = {\n          blocked: {\n            $ne: true\n          },\n          _id\n        };\n        const {\n          key,\n          i18nLabel\n        } = option;\n        const update = {\n          $addToSet: {\n            values: {\n              key,\n              i18nLabel\n            }\n          }\n        };\n        return this.updateOne(query, update);\n      }\n      findNotHiddenPublicUpdatedAfter(updatedAt) {\n        const filter = {\n          hidden: {\n            $ne: true\n          },\n          public: true,\n          _updatedAt: {\n            $gt: updatedAt\n          }\n        };\n        return this.find(filter, {\n          projection: {\n            _id: 1,\n            value: 1,\n            editor: 1,\n            enterprise: 1,\n            invalidValue: 1,\n            modules: 1,\n            requiredOnWizard: 1\n          }\n        });\n      }\n      findEnterpriseSettings() {\n        return this.find({\n          enterprise: true\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","SettingsRaw","BaseRaw","link","v","__reifyWaitForDeps__","constructor","db","trash","getValueById","_id","setting","findOne","projection","value","findNotHidden","updatedAfter","arguments","length","undefined","query","hidden","$ne","_updatedAt","$gt","find","findOneNotHiddenById","findByIds","options","$in","updateValueById","blocked","update","$set","updateOne","resetValueById","record","findOneById","prop","valueSource","incrementValueById","findOneAndUpdate","$inc","updateOptionsById","updateValueNotHiddenById","updateValueAndEditorById","editor","findNotHiddenPublic","ids","filter","public","enterprise","invalidValue","modules","requiredOnWizard","findSetupWizardSettings","wizard","$exists","addOptionValueById","option","key","i18nLabel","$addToSet","values","findNotHiddenPublicUpdatedAfter","updatedAt","findEnterpriseSettings","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/Settings.ts"],"sourcesContent":["import type { ISetting, ISettingColor, ISettingSelectOption, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { ISettingsModel } from '@rocket.chat/model-typings';\nimport type {\n\tCollection,\n\tFindCursor,\n\tDb,\n\tFilter,\n\tUpdateFilter,\n\tUpdateResult,\n\tDocument,\n\tFindOptions,\n\tFindOneAndUpdateOptions,\n\tModifyResult,\n\tUpdateOptions,\n} from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class SettingsRaw extends BaseRaw<ISetting> implements ISettingsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ISetting>>) {\n\t\tsuper(db, 'settings', trash);\n\t}\n\n\tasync getValueById(_id: string): Promise<ISetting['value'] | undefined> {\n\t\tconst setting = await this.findOne<Pick<ISetting, 'value'>>({ _id }, { projection: { value: 1 } });\n\n\t\treturn setting?.value;\n\t}\n\n\tfindNotHidden({ updatedAfter }: { updatedAfter?: Date } = {}): FindCursor<ISetting> {\n\t\tconst query: Filter<ISetting> = {\n\t\t\thidden: { $ne: true },\n\t\t};\n\n\t\tif (updatedAfter) {\n\t\t\tquery._updatedAt = { $gt: updatedAfter };\n\t\t}\n\n\t\treturn this.find(query);\n\t}\n\n\tfindOneNotHiddenById(_id: string): Promise<ISetting | null> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\thidden: { $ne: true },\n\t\t};\n\n\t\treturn this.findOne(query);\n\t}\n\n\tfindByIds(_id: string[] | string = [], options?: FindOptions<ISetting>): FindCursor<ISetting> {\n\t\tif (typeof _id === 'string') {\n\t\t\t_id = [_id];\n\t\t}\n\n\t\tconst query = {\n\t\t\t_id: {\n\t\t\t\t$in: _id,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tupdateValueById(\n\t\t_id: string,\n\t\tvalue: (ISetting['value'] extends undefined ? never : ISetting['value']) | null,\n\t\toptions?: UpdateOptions,\n\t): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\tvalue: { $ne: value },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne(query, update, options);\n\t}\n\n\tasync resetValueById(\n\t\t_id: string,\n\t\tvalue?: (ISetting['value'] extends undefined ? never : ISetting['value']) | null,\n\t): Promise<Document | UpdateResult | undefined> {\n\t\tif (value == null) {\n\t\t\tconst record = await this.findOneById(_id);\n\t\t\tif (record) {\n\t\t\t\tconst prop = record.valueSource || 'packageValue';\n\t\t\t\tvalue = record[prop];\n\t\t\t}\n\t\t}\n\n\t\tif (value == null) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.updateValueById(_id, value);\n\t}\n\n\tasync incrementValueById(\n\t\t_id: ISetting['_id'],\n\t\tvalue?: ISetting['value'],\n\t\toptions?: FindOneAndUpdateOptions,\n\t): Promise<ModifyResult<ISetting>> {\n\t\treturn this.findOneAndUpdate(\n\t\t\t{\n\t\t\t\tblocked: { $ne: true },\n\t\t\t\t_id,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$inc: {\n\t\t\t\t\tvalue: value || 1,\n\t\t\t\t},\n\t\t\t} as unknown as UpdateFilter<ISetting>,\n\t\t\toptions,\n\t\t);\n\t}\n\n\tupdateOptionsById<T extends ISetting = ISetting>(\n\t\t_id: ISetting['_id'],\n\t\toptions: UpdateFilter<T>['$set'],\n\t): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = { $set: options };\n\n\t\treturn this.updateOne(query, update);\n\t}\n\n\tupdateValueNotHiddenById<T extends ISetting['value'] = ISetting['value']>(\n\t\t_id: ISetting['_id'],\n\t\tvalue: T,\n\t): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\thidden: { $ne: true },\n\t\t\tblocked: { $ne: true },\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne(query, update);\n\t}\n\n\tupdateValueAndEditorById<T extends ISetting['value'] = ISetting['value']>(\n\t\t_id: ISetting['_id'],\n\t\tvalue: T,\n\t\teditor: ISettingColor['editor'],\n\t): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\tvalue: { $ne: value },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t\teditor,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne(query, update);\n\t}\n\n\tfindNotHiddenPublic<T extends ISetting = ISetting>(\n\t\tids: ISetting['_id'][] = [],\n\t): FindCursor<\n\t\tT extends ISettingColor\n\t\t\t? Pick<T, '_id' | 'value' | 'editor' | 'enterprise' | 'invalidValue' | 'modules' | 'requiredOnWizard'>\n\t\t\t: Pick<T, '_id' | 'value' | 'enterprise' | 'invalidValue' | 'modules' | 'requiredOnWizard'>\n\t> {\n\t\tconst filter: Filter<ISetting> = {\n\t\t\thidden: { $ne: true },\n\t\t\tpublic: true,\n\t\t};\n\n\t\tif (ids.length > 0) {\n\t\t\tfilter._id = { $in: ids };\n\t\t}\n\n\t\treturn this.find(filter, {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tvalue: 1,\n\t\t\t\teditor: 1,\n\t\t\t\tenterprise: 1,\n\t\t\t\tinvalidValue: 1,\n\t\t\t\tmodules: 1,\n\t\t\t\trequiredOnWizard: 1,\n\t\t\t},\n\t\t});\n\t}\n\n\tfindSetupWizardSettings(): FindCursor<ISetting> {\n\t\treturn this.find({ wizard: { $exists: true } });\n\t}\n\n\taddOptionValueById(_id: ISetting['_id'], option: ISettingSelectOption): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\t_id,\n\t\t};\n\n\t\tconst { key, i18nLabel } = option;\n\t\tconst update = {\n\t\t\t$addToSet: {\n\t\t\t\tvalues: {\n\t\t\t\t\tkey,\n\t\t\t\t\ti18nLabel,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne(query, update);\n\t}\n\n\tfindNotHiddenPublicUpdatedAfter(updatedAt: Date): FindCursor<ISetting> {\n\t\tconst filter = {\n\t\t\thidden: { $ne: true },\n\t\t\tpublic: true,\n\t\t\t_updatedAt: {\n\t\t\t\t$gt: updatedAt,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(filter, {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tvalue: 1,\n\t\t\t\teditor: 1,\n\t\t\t\tenterprise: 1,\n\t\t\t\tinvalidValue: 1,\n\t\t\t\tmodules: 1,\n\t\t\t\trequiredOnWizard: 1,\n\t\t\t},\n\t\t});\n\t}\n\n\tfindEnterpriseSettings(): FindCursor<ISetting> {\n\t\treturn this.find({ enterprise: true });\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d6f6be93ce7eb19a166dbc80114e190bce969e5f"}
