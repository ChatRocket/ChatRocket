{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/models/raw/LivechatUnit.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/models/raw/LivechatUnit.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/models/raw/LivechatUnit.ts","inputSourceMap":{"version":3,"file":"ee/server/models/raw/LivechatUnit.ts","sourceRoot":"","sources":["ee/server/models/raw/LivechatUnit.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IOmnichannelBusinessUnit, ILivechatDepartment } from '@rocket.chat/core-typings';\nimport type { FindPaginated, ILivechatUnitModel } from '@rocket.chat/model-typings';\nimport { LivechatUnitMonitors, LivechatDepartment, LivechatRooms } from '@rocket.chat/models';\nimport type { FindOptions, Filter, FindCursor, Db, FilterOperators, UpdateResult, DeleteResult, Document, UpdateFilter } from 'mongodb';\n\nimport { BaseRaw } from '../../../../server/models/raw/BaseRaw';\nimport { getUnitsFromUser } from '../../../app/livechat-enterprise/server/lib/units';\n\nconst addQueryRestrictions = async (originalQuery: Filter<IOmnichannelBusinessUnit> = {}) => {\n\tconst query: FilterOperators<IOmnichannelBusinessUnit> = { ...originalQuery, type: 'u' };\n\n\tconst units = await getUnitsFromUser();\n\tif (Array.isArray(units)) {\n\t\tconst expressions = query.$and || [];\n\t\tconst condition = { $or: [{ ancestors: { $in: units } }, { _id: { $in: units } }] };\n\t\tquery.$and = [condition, ...expressions];\n\t}\n\n\treturn query;\n};\n\n// We don't actually need Units to extends from Departments\nexport class LivechatUnitRaw extends BaseRaw<IOmnichannelBusinessUnit> implements ILivechatUnitModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'livechat_department');\n\t}\n\n\tfindPaginatedUnits(\n\t\tquery: Filter<IOmnichannelBusinessUnit>,\n\t\toptions?: FindOptions<IOmnichannelBusinessUnit>,\n\t): FindPaginated<FindCursor<IOmnichannelBusinessUnit>> {\n\t\treturn super.findPaginated({ ...query, type: 'u' }, options);\n\t}\n\n\t// @ts-expect-error - Overriding base types :)\n\tasync find(\n\t\toriginalQuery: Filter<IOmnichannelBusinessUnit>,\n\t\toptions: FindOptions<IOmnichannelBusinessUnit>,\n\t): Promise<FindCursor<IOmnichannelBusinessUnit>> {\n\t\tconst query = await addQueryRestrictions(originalQuery);\n\t\treturn this.col.find(query, options) as FindCursor<IOmnichannelBusinessUnit>;\n\t}\n\n\t// @ts-expect-error - Overriding base types :)\n\tasync findOne(\n\t\toriginalQuery: Filter<IOmnichannelBusinessUnit>,\n\t\toptions: FindOptions<IOmnichannelBusinessUnit>,\n\t): Promise<IOmnichannelBusinessUnit | null> {\n\t\tconst query = await addQueryRestrictions(originalQuery);\n\t\treturn this.col.findOne(query, options);\n\t}\n\n\tremove(query: Filter<IOmnichannelBusinessUnit>): Promise<DeleteResult> {\n\t\treturn this.deleteMany(query);\n\t}\n\n\tasync createOrUpdateUnit(\n\t\t_id: string | null,\n\t\t{ name, visibility }: { name: string; visibility: IOmnichannelBusinessUnit['visibility'] },\n\t\tancestors: string[],\n\t\tmonitors: { monitorId: string; username: string }[],\n\t\tdepartments: { departmentId: string }[],\n\t): Promise<Omit<IOmnichannelBusinessUnit, '_updatedAt'>> {\n\t\tmonitors = ([] as { monitorId: string; username: string }[]).concat(monitors || []);\n\t\tancestors = ([] as string[]).concat(ancestors || []);\n\n\t\tconst record = {\n\t\t\tname,\n\t\t\tvisibility,\n\t\t\ttype: 'u',\n\t\t\tnumMonitors: monitors.length,\n\t\t\tnumDepartments: departments.length,\n\t\t};\n\n\t\tif (_id) {\n\t\t\tawait this.updateOne({ _id }, { $set: record });\n\t\t} else {\n\t\t\t_id = (await this.insertOne(record)).insertedId;\n\t\t}\n\n\t\tif (!_id) {\n\t\t\tthrow new Error('Error creating/updating unit');\n\t\t}\n\n\t\tancestors.splice(0, 0, _id);\n\n\t\tconst savedMonitors = (await LivechatUnitMonitors.findByUnitId(_id).toArray()).map(({ monitorId }) => monitorId);\n\t\tconst monitorsToSave = monitors.map(({ monitorId }) => monitorId);\n\n\t\t// remove other monitors\n\t\tfor await (const monitorId of savedMonitors) {\n\t\t\tif (!monitorsToSave.includes(monitorId)) {\n\t\t\t\tawait LivechatUnitMonitors.removeByUnitIdAndMonitorId(_id, monitorId);\n\t\t\t}\n\t\t}\n\n\t\tfor await (const monitor of monitors) {\n\t\t\tawait LivechatUnitMonitors.saveMonitor({\n\t\t\t\tmonitorId: monitor.monitorId,\n\t\t\t\tunitId: _id,\n\t\t\t\tusername: monitor.username,\n\t\t\t});\n\t\t}\n\n\t\tconst savedDepartments = (await LivechatDepartment.findByParentId(_id, { projection: { _id: 1 } }).toArray()).map(({ _id }) => _id);\n\t\tconst departmentsToSave = departments.map(({ departmentId }) => departmentId);\n\n\t\t// remove other departments\n\t\tfor await (const departmentId of savedDepartments) {\n\t\t\tif (!departmentsToSave.includes(departmentId)) {\n\t\t\t\tawait LivechatDepartment.removeDepartmentFromUnit(departmentId);\n\t\t\t}\n\t\t}\n\n\t\tfor await (const departmentId of departmentsToSave) {\n\t\t\tawait LivechatDepartment.addDepartmentToUnit(departmentId, _id, ancestors);\n\t\t}\n\n\t\tawait LivechatRooms.associateRoomsWithDepartmentToUnit(departmentsToSave, _id);\n\n\t\treturn {\n\t\t\t...record,\n\t\t\t_id,\n\t\t};\n\t}\n\n\tremoveParentAndAncestorById(parentId: string): Promise<UpdateResult | Document> {\n\t\tconst query = {\n\t\t\tparentId,\n\t\t};\n\n\t\tconst update: UpdateFilter<IOmnichannelBusinessUnit> = {\n\t\t\t$unset: { parentId: 1 },\n\t\t\t$pull: { ancestors: parentId },\n\t\t};\n\n\t\treturn this.updateMany(query, update);\n\t}\n\n\tincrementDepartmentsCount(_id: string): Promise<UpdateResult | Document> {\n\t\treturn this.updateOne({ _id }, { $inc: { numDepartments: 1 } });\n\t}\n\n\tdecrementDepartmentsCount(_id: string): Promise<UpdateResult | Document> {\n\t\treturn this.updateOne({ _id }, { $inc: { numDepartments: -1 } });\n\t}\n\n\tasync removeById(_id: string): Promise<DeleteResult> {\n\t\tawait LivechatUnitMonitors.removeByUnitId(_id);\n\t\tawait this.removeParentAndAncestorById(_id);\n\t\tawait LivechatRooms.removeUnitAssociationFromRooms(_id);\n\n\t\tconst query = { _id };\n\t\treturn this.deleteOne(query);\n\t}\n\n\tfindOneByIdOrName(_idOrName: string, options: FindOptions<IOmnichannelBusinessUnit>): Promise<IOmnichannelBusinessUnit | null> {\n\t\tconst query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: _idOrName,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: _idOrName,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tasync findByMonitorId(monitorId: string): Promise<string[]> {\n\t\tconst monitoredUnits = await LivechatUnitMonitors.findByMonitorId(monitorId).toArray();\n\t\tif (monitoredUnits.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn monitoredUnits.map((u) => u.unitId);\n\t}\n\n\tasync findMonitoredDepartmentsByMonitorId(monitorId: string, includeDisabled: boolean): Promise<ILivechatDepartment[]> {\n\t\tconst monitoredUnits = await this.findByMonitorId(monitorId);\n\n\t\tif (includeDisabled) {\n\t\t\treturn LivechatDepartment.findByUnitIds(monitoredUnits, {}).toArray();\n\t\t}\n\t\treturn LivechatDepartment.findActiveByUnitIds(monitoredUnits, {}).toArray();\n\t}\n\n\tcountUnits(): Promise<number> {\n\t\treturn this.col.countDocuments({ type: 'u' });\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/models/raw/LivechatUnit.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/models/raw/LivechatUnit.ts","inputSourceMap":{"version":3,"file":"ee/server/models/raw/LivechatUnit.ts","sourceRoot":"","sources":["ee/server/models/raw/LivechatUnit.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IOmnichannelBusinessUnit, ILivechatDepartment } from '@rocket.chat/core-typings';\nimport type { FindPaginated, ILivechatUnitModel } from '@rocket.chat/model-typings';\nimport { LivechatUnitMonitors, LivechatDepartment, LivechatRooms } from '@rocket.chat/models';\nimport type { FindOptions, Filter, FindCursor, Db, FilterOperators, UpdateResult, DeleteResult, Document, UpdateFilter } from 'mongodb';\n\nimport { BaseRaw } from '../../../../server/models/raw/BaseRaw';\nimport { getUnitsFromUser } from '../../../app/livechat-enterprise/server/lib/units';\n\nconst addQueryRestrictions = async (originalQuery: Filter<IOmnichannelBusinessUnit> = {}) => {\n\tconst query: FilterOperators<IOmnichannelBusinessUnit> = { ...originalQuery, type: 'u' };\n\n\tconst units = await getUnitsFromUser();\n\tif (Array.isArray(units)) {\n\t\tconst expressions = query.$and || [];\n\t\tconst condition = { $or: [{ ancestors: { $in: units } }, { _id: { $in: units } }] };\n\t\tquery.$and = [condition, ...expressions];\n\t}\n\n\treturn query;\n};\n\n// We don't actually need Units to extends from Departments\nexport class LivechatUnitRaw extends BaseRaw<IOmnichannelBusinessUnit> implements ILivechatUnitModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'livechat_department');\n\t}\n\n\tfindPaginatedUnits(\n\t\tquery: Filter<IOmnichannelBusinessUnit>,\n\t\toptions?: FindOptions<IOmnichannelBusinessUnit>,\n\t): FindPaginated<FindCursor<IOmnichannelBusinessUnit>> {\n\t\treturn super.findPaginated({ ...query, type: 'u' }, options);\n\t}\n\n\t// @ts-expect-error - Overriding base types :)\n\tasync find(\n\t\toriginalQuery: Filter<IOmnichannelBusinessUnit>,\n\t\toptions: FindOptions<IOmnichannelBusinessUnit>,\n\t): Promise<FindCursor<IOmnichannelBusinessUnit>> {\n\t\tconst query = await addQueryRestrictions(originalQuery);\n\t\treturn this.col.find(query, options) as FindCursor<IOmnichannelBusinessUnit>;\n\t}\n\n\t// @ts-expect-error - Overriding base types :)\n\tasync findOne(\n\t\toriginalQuery: Filter<IOmnichannelBusinessUnit>,\n\t\toptions: FindOptions<IOmnichannelBusinessUnit>,\n\t): Promise<IOmnichannelBusinessUnit | null> {\n\t\tconst query = await addQueryRestrictions(originalQuery);\n\t\treturn this.col.findOne(query, options);\n\t}\n\n\tremove(query: Filter<IOmnichannelBusinessUnit>): Promise<DeleteResult> {\n\t\treturn this.deleteMany(query);\n\t}\n\n\tasync createOrUpdateUnit(\n\t\t_id: string | null,\n\t\t{ name, visibility }: { name: string; visibility: IOmnichannelBusinessUnit['visibility'] },\n\t\tancestors: string[],\n\t\tmonitors: { monitorId: string; username: string }[],\n\t\tdepartments: { departmentId: string }[],\n\t): Promise<Omit<IOmnichannelBusinessUnit, '_updatedAt'>> {\n\t\tmonitors = ([] as { monitorId: string; username: string }[]).concat(monitors || []);\n\t\tancestors = ([] as string[]).concat(ancestors || []);\n\n\t\tconst record = {\n\t\t\tname,\n\t\t\tvisibility,\n\t\t\ttype: 'u',\n\t\t\tnumMonitors: monitors.length,\n\t\t\tnumDepartments: departments.length,\n\t\t};\n\n\t\tif (_id) {\n\t\t\tawait this.updateOne({ _id }, { $set: record });\n\t\t} else {\n\t\t\t_id = (await this.insertOne(record)).insertedId;\n\t\t}\n\n\t\tif (!_id) {\n\t\t\tthrow new Error('Error creating/updating unit');\n\t\t}\n\n\t\tancestors.splice(0, 0, _id);\n\n\t\tconst savedMonitors = (await LivechatUnitMonitors.findByUnitId(_id).toArray()).map(({ monitorId }) => monitorId);\n\t\tconst monitorsToSave = monitors.map(({ monitorId }) => monitorId);\n\n\t\t// remove other monitors\n\t\tfor await (const monitorId of savedMonitors) {\n\t\t\tif (!monitorsToSave.includes(monitorId)) {\n\t\t\t\tawait LivechatUnitMonitors.removeByUnitIdAndMonitorId(_id, monitorId);\n\t\t\t}\n\t\t}\n\n\t\tfor await (const monitor of monitors) {\n\t\t\tawait LivechatUnitMonitors.saveMonitor({\n\t\t\t\tmonitorId: monitor.monitorId,\n\t\t\t\tunitId: _id,\n\t\t\t\tusername: monitor.username,\n\t\t\t});\n\t\t}\n\n\t\tconst savedDepartments = (await LivechatDepartment.findByParentId(_id, { projection: { _id: 1 } }).toArray()).map(({ _id }) => _id);\n\t\tconst departmentsToSave = departments.map(({ departmentId }) => departmentId);\n\n\t\t// remove other departments\n\t\tfor await (const departmentId of savedDepartments) {\n\t\t\tif (!departmentsToSave.includes(departmentId)) {\n\t\t\t\tawait LivechatDepartment.removeDepartmentFromUnit(departmentId);\n\t\t\t}\n\t\t}\n\n\t\tfor await (const departmentId of departmentsToSave) {\n\t\t\tawait LivechatDepartment.addDepartmentToUnit(departmentId, _id, ancestors);\n\t\t}\n\n\t\tawait LivechatRooms.associateRoomsWithDepartmentToUnit(departmentsToSave, _id);\n\n\t\treturn {\n\t\t\t...record,\n\t\t\t_id,\n\t\t};\n\t}\n\n\tremoveParentAndAncestorById(parentId: string): Promise<UpdateResult | Document> {\n\t\tconst query = {\n\t\t\tparentId,\n\t\t};\n\n\t\tconst update: UpdateFilter<IOmnichannelBusinessUnit> = {\n\t\t\t$unset: { parentId: 1 },\n\t\t\t$pull: { ancestors: parentId },\n\t\t};\n\n\t\treturn this.updateMany(query, update);\n\t}\n\n\tincrementDepartmentsCount(_id: string): Promise<UpdateResult | Document> {\n\t\treturn this.updateOne({ _id }, { $inc: { numDepartments: 1 } });\n\t}\n\n\tdecrementDepartmentsCount(_id: string): Promise<UpdateResult | Document> {\n\t\treturn this.updateOne({ _id }, { $inc: { numDepartments: -1 } });\n\t}\n\n\tasync removeById(_id: string): Promise<DeleteResult> {\n\t\tawait LivechatUnitMonitors.removeByUnitId(_id);\n\t\tawait this.removeParentAndAncestorById(_id);\n\t\tawait LivechatRooms.removeUnitAssociationFromRooms(_id);\n\n\t\tconst query = { _id };\n\t\treturn this.deleteOne(query);\n\t}\n\n\tfindOneByIdOrName(_idOrName: string, options: FindOptions<IOmnichannelBusinessUnit>): Promise<IOmnichannelBusinessUnit | null> {\n\t\tconst query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: _idOrName,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: _idOrName,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tasync findByMonitorId(monitorId: string): Promise<string[]> {\n\t\tconst monitoredUnits = await LivechatUnitMonitors.findByMonitorId(monitorId).toArray();\n\t\tif (monitoredUnits.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn monitoredUnits.map((u) => u.unitId);\n\t}\n\n\tasync findMonitoredDepartmentsByMonitorId(monitorId: string, includeDisabled: boolean): Promise<ILivechatDepartment[]> {\n\t\tconst monitoredUnits = await this.findByMonitorId(monitorId);\n\n\t\tif (includeDisabled) {\n\t\t\treturn LivechatDepartment.findByUnitIds(monitoredUnits, {}).toArray();\n\t\t}\n\t\treturn LivechatDepartment.findActiveByUnitIds(monitoredUnits, {}).toArray();\n\t}\n\n\tcountUnits(): Promise<number> {\n\t\treturn this.col.countDocuments({ type: 'u' });\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      LivechatUnitRaw: () => LivechatUnitRaw\n    });\n    let LivechatUnitMonitors, LivechatDepartment, LivechatRooms;\n    module.link(\"@rocket.chat/models\", {\n      LivechatUnitMonitors(v) {\n        LivechatUnitMonitors = v;\n      },\n      LivechatDepartment(v) {\n        LivechatDepartment = v;\n      },\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      }\n    }, 0);\n    let BaseRaw;\n    module.link(\"../../../../server/models/raw/BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 1);\n    let getUnitsFromUser;\n    module.link(\"../../../app/livechat-enterprise/server/lib/units\", {\n      getUnitsFromUser(v) {\n        getUnitsFromUser = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const addQueryRestrictions = async function () {\n      let originalQuery = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const query = _objectSpread(_objectSpread({}, originalQuery), {}, {\n        type: 'u'\n      });\n      const units = await getUnitsFromUser();\n      if (Array.isArray(units)) {\n        const expressions = query.$and || [];\n        const condition = {\n          $or: [{\n            ancestors: {\n              $in: units\n            }\n          }, {\n            _id: {\n              $in: units\n            }\n          }]\n        };\n        query.$and = [condition, ...expressions];\n      }\n      return query;\n    };\n    // We don't actually need Units to extends from Departments\n    class LivechatUnitRaw extends BaseRaw {\n      constructor(db) {\n        super(db, 'livechat_department');\n      }\n      findPaginatedUnits(query, options) {\n        return super.findPaginated(_objectSpread(_objectSpread({}, query), {}, {\n          type: 'u'\n        }), options);\n      }\n      // @ts-expect-error - Overriding base types :)\n      async find(originalQuery, options) {\n        const query = await addQueryRestrictions(originalQuery);\n        return this.col.find(query, options);\n      }\n      // @ts-expect-error - Overriding base types :)\n      async findOne(originalQuery, options) {\n        const query = await addQueryRestrictions(originalQuery);\n        return this.col.findOne(query, options);\n      }\n      remove(query) {\n        return this.deleteMany(query);\n      }\n      async createOrUpdateUnit(_id, _ref, ancestors, monitors, departments) {\n        let {\n          name,\n          visibility\n        } = _ref;\n        monitors = [].concat(monitors || []);\n        ancestors = [].concat(ancestors || []);\n        const record = {\n          name,\n          visibility,\n          type: 'u',\n          numMonitors: monitors.length,\n          numDepartments: departments.length\n        };\n        if (_id) {\n          await this.updateOne({\n            _id\n          }, {\n            $set: record\n          });\n        } else {\n          _id = (await this.insertOne(record)).insertedId;\n        }\n        if (!_id) {\n          throw new Error('Error creating/updating unit');\n        }\n        ancestors.splice(0, 0, _id);\n        const savedMonitors = (await LivechatUnitMonitors.findByUnitId(_id).toArray()).map(_ref2 => {\n          let {\n            monitorId\n          } = _ref2;\n          return monitorId;\n        });\n        const monitorsToSave = monitors.map(_ref3 => {\n          let {\n            monitorId\n          } = _ref3;\n          return monitorId;\n        });\n        // remove other monitors\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(savedMonitors), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const monitorId = _step.value;\n            {\n              if (!monitorsToSave.includes(monitorId)) {\n                await LivechatUnitMonitors.removeByUnitIdAndMonitorId(_id, monitorId);\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n        var _iteratorAbruptCompletion2 = false;\n        var _didIteratorError2 = false;\n        var _iteratorError2;\n        try {\n          for (var _iterator2 = _asyncIterator(monitors), _step2; _iteratorAbruptCompletion2 = !(_step2 = await _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n            const monitor = _step2.value;\n            {\n              await LivechatUnitMonitors.saveMonitor({\n                monitorId: monitor.monitorId,\n                unitId: _id,\n                username: monitor.username\n              });\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n              await _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n        const savedDepartments = (await LivechatDepartment.findByParentId(_id, {\n          projection: {\n            _id: 1\n          }\n        }).toArray()).map(_ref4 => {\n          let {\n            _id\n          } = _ref4;\n          return _id;\n        });\n        const departmentsToSave = departments.map(_ref5 => {\n          let {\n            departmentId\n          } = _ref5;\n          return departmentId;\n        });\n        // remove other departments\n        var _iteratorAbruptCompletion3 = false;\n        var _didIteratorError3 = false;\n        var _iteratorError3;\n        try {\n          for (var _iterator3 = _asyncIterator(savedDepartments), _step3; _iteratorAbruptCompletion3 = !(_step3 = await _iterator3.next()).done; _iteratorAbruptCompletion3 = false) {\n            const departmentId = _step3.value;\n            {\n              if (!departmentsToSave.includes(departmentId)) {\n                await LivechatDepartment.removeDepartmentFromUnit(departmentId);\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion3 && _iterator3.return != null) {\n              await _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n        var _iteratorAbruptCompletion4 = false;\n        var _didIteratorError4 = false;\n        var _iteratorError4;\n        try {\n          for (var _iterator4 = _asyncIterator(departmentsToSave), _step4; _iteratorAbruptCompletion4 = !(_step4 = await _iterator4.next()).done; _iteratorAbruptCompletion4 = false) {\n            const departmentId = _step4.value;\n            {\n              await LivechatDepartment.addDepartmentToUnit(departmentId, _id, ancestors);\n            }\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion4 && _iterator4.return != null) {\n              await _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n        await LivechatRooms.associateRoomsWithDepartmentToUnit(departmentsToSave, _id);\n        return _objectSpread(_objectSpread({}, record), {}, {\n          _id\n        });\n      }\n      removeParentAndAncestorById(parentId) {\n        const query = {\n          parentId\n        };\n        const update = {\n          $unset: {\n            parentId: 1\n          },\n          $pull: {\n            ancestors: parentId\n          }\n        };\n        return this.updateMany(query, update);\n      }\n      incrementDepartmentsCount(_id) {\n        return this.updateOne({\n          _id\n        }, {\n          $inc: {\n            numDepartments: 1\n          }\n        });\n      }\n      decrementDepartmentsCount(_id) {\n        return this.updateOne({\n          _id\n        }, {\n          $inc: {\n            numDepartments: -1\n          }\n        });\n      }\n      async removeById(_id) {\n        await LivechatUnitMonitors.removeByUnitId(_id);\n        await this.removeParentAndAncestorById(_id);\n        await LivechatRooms.removeUnitAssociationFromRooms(_id);\n        const query = {\n          _id\n        };\n        return this.deleteOne(query);\n      }\n      findOneByIdOrName(_idOrName, options) {\n        const query = {\n          $or: [{\n            _id: _idOrName\n          }, {\n            name: _idOrName\n          }]\n        };\n        return this.findOne(query, options);\n      }\n      async findByMonitorId(monitorId) {\n        const monitoredUnits = await LivechatUnitMonitors.findByMonitorId(monitorId).toArray();\n        if (monitoredUnits.length === 0) {\n          return [];\n        }\n        return monitoredUnits.map(u => u.unitId);\n      }\n      async findMonitoredDepartmentsByMonitorId(monitorId, includeDisabled) {\n        const monitoredUnits = await this.findByMonitorId(monitorId);\n        if (includeDisabled) {\n          return LivechatDepartment.findByUnitIds(monitoredUnits, {}).toArray();\n        }\n        return LivechatDepartment.findActiveByUnitIds(monitoredUnits, {}).toArray();\n      }\n      countUnits() {\n        return this.col.countDocuments({\n          type: 'u'\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","LivechatUnitRaw","LivechatUnitMonitors","LivechatDepartment","LivechatRooms","BaseRaw","getUnitsFromUser","__reifyWaitForDeps__","addQueryRestrictions","originalQuery","arguments","length","undefined","query","type","units","Array","isArray","expressions","$and","condition","$or","ancestors","$in","_id","constructor","db","findPaginatedUnits","options","findPaginated","find","col","findOne","remove","deleteMany","createOrUpdateUnit","_ref","monitors","departments","name","visibility","concat","record","numMonitors","numDepartments","updateOne","$set","insertOne","insertedId","Error","splice","savedMonitors","findByUnitId","toArray","map","_ref2","monitorId","monitorsToSave","_ref3","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","value","includes","removeByUnitIdAndMonitorId","err","return","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","monitor","saveMonitor","unitId","username","savedDepartments","findByParentId","projection","_ref4","departmentsToSave","_ref5","departmentId","_iteratorAbruptCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","removeDepartmentFromUnit","_iteratorAbruptCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","addDepartmentToUnit","associateRoomsWithDepartmentToUnit","removeParentAndAncestorById","parentId","update","$unset","$pull","updateMany","incrementDepartmentsCount","$inc","decrementDepartmentsCount","removeById","removeByUnitId","removeUnitAssociationFromRooms","deleteOne","findOneByIdOrName","_idOrName","findByMonitorId","monitoredUnits","u","findMonitoredDepartmentsByMonitorId","includeDisabled","findByUnitIds","findActiveByUnitIds","countUnits","countDocuments","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/models/raw/LivechatUnit.ts"],"sourcesContent":["import type { IOmnichannelBusinessUnit, ILivechatDepartment } from '@rocket.chat/core-typings';\nimport type { FindPaginated, ILivechatUnitModel } from '@rocket.chat/model-typings';\nimport { LivechatUnitMonitors, LivechatDepartment, LivechatRooms } from '@rocket.chat/models';\nimport type { FindOptions, Filter, FindCursor, Db, FilterOperators, UpdateResult, DeleteResult, Document, UpdateFilter } from 'mongodb';\n\nimport { BaseRaw } from '../../../../server/models/raw/BaseRaw';\nimport { getUnitsFromUser } from '../../../app/livechat-enterprise/server/lib/units';\n\nconst addQueryRestrictions = async (originalQuery: Filter<IOmnichannelBusinessUnit> = {}) => {\n\tconst query: FilterOperators<IOmnichannelBusinessUnit> = { ...originalQuery, type: 'u' };\n\n\tconst units = await getUnitsFromUser();\n\tif (Array.isArray(units)) {\n\t\tconst expressions = query.$and || [];\n\t\tconst condition = { $or: [{ ancestors: { $in: units } }, { _id: { $in: units } }] };\n\t\tquery.$and = [condition, ...expressions];\n\t}\n\n\treturn query;\n};\n\n// We don't actually need Units to extends from Departments\nexport class LivechatUnitRaw extends BaseRaw<IOmnichannelBusinessUnit> implements ILivechatUnitModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'livechat_department');\n\t}\n\n\tfindPaginatedUnits(\n\t\tquery: Filter<IOmnichannelBusinessUnit>,\n\t\toptions?: FindOptions<IOmnichannelBusinessUnit>,\n\t): FindPaginated<FindCursor<IOmnichannelBusinessUnit>> {\n\t\treturn super.findPaginated({ ...query, type: 'u' }, options);\n\t}\n\n\t// @ts-expect-error - Overriding base types :)\n\tasync find(\n\t\toriginalQuery: Filter<IOmnichannelBusinessUnit>,\n\t\toptions: FindOptions<IOmnichannelBusinessUnit>,\n\t): Promise<FindCursor<IOmnichannelBusinessUnit>> {\n\t\tconst query = await addQueryRestrictions(originalQuery);\n\t\treturn this.col.find(query, options) as FindCursor<IOmnichannelBusinessUnit>;\n\t}\n\n\t// @ts-expect-error - Overriding base types :)\n\tasync findOne(\n\t\toriginalQuery: Filter<IOmnichannelBusinessUnit>,\n\t\toptions: FindOptions<IOmnichannelBusinessUnit>,\n\t): Promise<IOmnichannelBusinessUnit | null> {\n\t\tconst query = await addQueryRestrictions(originalQuery);\n\t\treturn this.col.findOne(query, options);\n\t}\n\n\tremove(query: Filter<IOmnichannelBusinessUnit>): Promise<DeleteResult> {\n\t\treturn this.deleteMany(query);\n\t}\n\n\tasync createOrUpdateUnit(\n\t\t_id: string | null,\n\t\t{ name, visibility }: { name: string; visibility: IOmnichannelBusinessUnit['visibility'] },\n\t\tancestors: string[],\n\t\tmonitors: { monitorId: string; username: string }[],\n\t\tdepartments: { departmentId: string }[],\n\t): Promise<Omit<IOmnichannelBusinessUnit, '_updatedAt'>> {\n\t\tmonitors = ([] as { monitorId: string; username: string }[]).concat(monitors || []);\n\t\tancestors = ([] as string[]).concat(ancestors || []);\n\n\t\tconst record = {\n\t\t\tname,\n\t\t\tvisibility,\n\t\t\ttype: 'u',\n\t\t\tnumMonitors: monitors.length,\n\t\t\tnumDepartments: departments.length,\n\t\t};\n\n\t\tif (_id) {\n\t\t\tawait this.updateOne({ _id }, { $set: record });\n\t\t} else {\n\t\t\t_id = (await this.insertOne(record)).insertedId;\n\t\t}\n\n\t\tif (!_id) {\n\t\t\tthrow new Error('Error creating/updating unit');\n\t\t}\n\n\t\tancestors.splice(0, 0, _id);\n\n\t\tconst savedMonitors = (await LivechatUnitMonitors.findByUnitId(_id).toArray()).map(({ monitorId }) => monitorId);\n\t\tconst monitorsToSave = monitors.map(({ monitorId }) => monitorId);\n\n\t\t// remove other monitors\n\t\tfor await (const monitorId of savedMonitors) {\n\t\t\tif (!monitorsToSave.includes(monitorId)) {\n\t\t\t\tawait LivechatUnitMonitors.removeByUnitIdAndMonitorId(_id, monitorId);\n\t\t\t}\n\t\t}\n\n\t\tfor await (const monitor of monitors) {\n\t\t\tawait LivechatUnitMonitors.saveMonitor({\n\t\t\t\tmonitorId: monitor.monitorId,\n\t\t\t\tunitId: _id,\n\t\t\t\tusername: monitor.username,\n\t\t\t});\n\t\t}\n\n\t\tconst savedDepartments = (await LivechatDepartment.findByParentId(_id, { projection: { _id: 1 } }).toArray()).map(({ _id }) => _id);\n\t\tconst departmentsToSave = departments.map(({ departmentId }) => departmentId);\n\n\t\t// remove other departments\n\t\tfor await (const departmentId of savedDepartments) {\n\t\t\tif (!departmentsToSave.includes(departmentId)) {\n\t\t\t\tawait LivechatDepartment.removeDepartmentFromUnit(departmentId);\n\t\t\t}\n\t\t}\n\n\t\tfor await (const departmentId of departmentsToSave) {\n\t\t\tawait LivechatDepartment.addDepartmentToUnit(departmentId, _id, ancestors);\n\t\t}\n\n\t\tawait LivechatRooms.associateRoomsWithDepartmentToUnit(departmentsToSave, _id);\n\n\t\treturn {\n\t\t\t...record,\n\t\t\t_id,\n\t\t};\n\t}\n\n\tremoveParentAndAncestorById(parentId: string): Promise<UpdateResult | Document> {\n\t\tconst query = {\n\t\t\tparentId,\n\t\t};\n\n\t\tconst update: UpdateFilter<IOmnichannelBusinessUnit> = {\n\t\t\t$unset: { parentId: 1 },\n\t\t\t$pull: { ancestors: parentId },\n\t\t};\n\n\t\treturn this.updateMany(query, update);\n\t}\n\n\tincrementDepartmentsCount(_id: string): Promise<UpdateResult | Document> {\n\t\treturn this.updateOne({ _id }, { $inc: { numDepartments: 1 } });\n\t}\n\n\tdecrementDepartmentsCount(_id: string): Promise<UpdateResult | Document> {\n\t\treturn this.updateOne({ _id }, { $inc: { numDepartments: -1 } });\n\t}\n\n\tasync removeById(_id: string): Promise<DeleteResult> {\n\t\tawait LivechatUnitMonitors.removeByUnitId(_id);\n\t\tawait this.removeParentAndAncestorById(_id);\n\t\tawait LivechatRooms.removeUnitAssociationFromRooms(_id);\n\n\t\tconst query = { _id };\n\t\treturn this.deleteOne(query);\n\t}\n\n\tfindOneByIdOrName(_idOrName: string, options: FindOptions<IOmnichannelBusinessUnit>): Promise<IOmnichannelBusinessUnit | null> {\n\t\tconst query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: _idOrName,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: _idOrName,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tasync findByMonitorId(monitorId: string): Promise<string[]> {\n\t\tconst monitoredUnits = await LivechatUnitMonitors.findByMonitorId(monitorId).toArray();\n\t\tif (monitoredUnits.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn monitoredUnits.map((u) => u.unitId);\n\t}\n\n\tasync findMonitoredDepartmentsByMonitorId(monitorId: string, includeDisabled: boolean): Promise<ILivechatDepartment[]> {\n\t\tconst monitoredUnits = await this.findByMonitorId(monitorId);\n\n\t\tif (includeDisabled) {\n\t\t\treturn LivechatDepartment.findByUnitIds(monitoredUnits, {}).toArray();\n\t\t}\n\t\treturn LivechatDepartment.findActiveByUnitIds(monitoredUnits, {}).toArray();\n\t}\n\n\tcountUnits(): Promise<number> {\n\t\treturn this.col.countDocuments({ type: 'u' });\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d38184c4083c2cd584077cf6a27b56434ca4369a"}
