{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/chats/flows/processTooLongMessage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/chats/flows/processTooLongMessage.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/chats/flows/processTooLongMessage.ts","inputSourceMap":{"version":3,"file":"client/lib/chats/flows/processTooLongMessage.ts","sourceRoot":"","sources":["client/lib/chats/flows/processTooLongMessage.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,QAAQ,EAAE,MAAM,iCAAiC,CAAC;AAC3D,OAAO,EAAE,CAAC,EAAE,MAAM,gCAAgC,CAAC;AACnD,OAAO,YAAY,MAAM,kCAAkC,CAAC;AAC5D,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AACxD,OAAO,EAAE,oBAAoB,EAAE,MAAM,aAAa,CAAC;AAGnD,MAAM,CAAC,MAAM,qBAAqB,GAAG,KAAK,EAAE,IAAa,EAAE,EAAE,GAAG,EAAyB,EAAoB,EAAE;IAC9G,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IAE9D,IAAI,GAAG,CAAC,MAAM,IAAI,cAAc,EAAE,CAAC;QAClC,OAAO,KAAK,CAAC;IACd,CAAC;IACD,MAAM,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IAC9D,MAAM,+BAA+B,GAAG,QAAQ,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;IAErG,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,kBAAkB,IAAI,CAAC,+BAA+B,EAAE,CAAC;QACpF,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC;QACnF,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC;IACb,CAAC;IAED,MAAM,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,EAAE;QACnC,MAAM,SAAS,GAAG,KAAK,IAAmB,EAAE;YAC3C,MAAM,WAAW,GAAG,YAAY,CAAC;YACjC,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;YAC3D,MAAM,QAAQ,GAAG,GAAG,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,IAAI,WAAW,MAAM,IAAI,IAAI,EAAE,MAAM,CAAC,CAAC,qCAAqC;YACvH,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE;gBAC9C,IAAI,EAAE,WAAW;gBACjB,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE;aACxB,CAAC,CAAC;YAEH,eAAe,CAAC,KAAK,EAAE,CAAC;YACxB,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAErC,OAAO,EAAE,CAAC;QACX,CAAC,CAAC;QAEF,MAAM,OAAO,GAAG,GAAS,EAAE;YAC1B,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;YAE5B,eAAe,CAAC,KAAK,EAAE,CAAC;YACxB,OAAO,EAAE,CAAC;QACX,CAAC,CAAC;QAEF,eAAe,CAAC,IAAI,CAAC;YACpB,SAAS,EAAE,YAAY;YACvB,KAAK,EAAE;gBACN,KAAK,EAAE,CAAC,CAAC,kBAAkB,CAAC;gBAC5B,QAAQ,EAAE,CAAC,CAAC,wCAAwC,CAAC;gBACrD,SAAS;gBACT,OAAO;gBACP,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,SAAS;aAClB;SACD,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AACb,CAAC,CAAC","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\n\nimport { settings } from '../../../../app/settings/client';\nimport { t } from '../../../../app/utils/lib/i18n';\nimport GenericModal from '../../../components/GenericModal';\nimport { imperativeModal } from '../../imperativeModal';\nimport { dispatchToastMessage } from '../../toast';\nimport type { ChatAPI } from '../ChatAPI';\n\nexport const processTooLongMessage = async (chat: ChatAPI, { msg }: Pick<IMessage, 'msg'>): Promise<boolean> => {\n\tconst maxAllowedSize = settings.get('Message_MaxAllowedSize');\n\n\tif (msg.length <= maxAllowedSize) {\n\t\treturn false;\n\t}\n\tconst fileUploadsEnabled = settings.get('FileUpload_Enabled');\n\tconst convertLongMessagesToAttachment = settings.get('Message_AllowConvertLongMessagesToAttachment');\n\n\tif (chat.currentEditing || !fileUploadsEnabled || !convertLongMessagesToAttachment) {\n\t\tdispatchToastMessage({ type: 'error', message: new Error(t('Message_too_long')) });\n\t\tchat.composer?.setText(msg);\n\t\treturn true;\n\t}\n\n\tawait new Promise<void>((resolve) => {\n\t\tconst onConfirm = async (): Promise<void> => {\n\t\t\tconst contentType = 'text/plain';\n\t\t\tconst messageBlob = new Blob([msg], { type: contentType });\n\t\t\tconst fileName = `${Meteor.user()?.username ?? 'anonymous'} - ${new Date()}.txt`; // TODO: proper naming and formatting\n\t\t\tconst file = new File([messageBlob], fileName, {\n\t\t\t\ttype: contentType,\n\t\t\t\tlastModified: Date.now(),\n\t\t\t});\n\n\t\t\timperativeModal.close();\n\t\t\tawait chat.flows.uploadFiles([file]);\n\n\t\t\tresolve();\n\t\t};\n\n\t\tconst onClose = (): void => {\n\t\t\tchat.composer?.setText(msg);\n\n\t\t\timperativeModal.close();\n\t\t\tresolve();\n\t\t};\n\n\t\timperativeModal.open({\n\t\t\tcomponent: GenericModal,\n\t\t\tprops: {\n\t\t\t\ttitle: t('Message_too_long'),\n\t\t\t\tchildren: t('Send_it_as_attachment_instead_question'),\n\t\t\t\tonConfirm,\n\t\t\t\tonClose,\n\t\t\t\tonCancel: onClose,\n\t\t\t\tvariant: 'warning',\n\t\t\t},\n\t\t});\n\t});\n\n\treturn true;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/chats/flows/processTooLongMessage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/chats/flows/processTooLongMessage.ts","inputSourceMap":{"version":3,"file":"client/lib/chats/flows/processTooLongMessage.ts","sourceRoot":"","sources":["client/lib/chats/flows/processTooLongMessage.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,QAAQ,EAAE,MAAM,iCAAiC,CAAC;AAC3D,OAAO,EAAE,CAAC,EAAE,MAAM,gCAAgC,CAAC;AACnD,OAAO,YAAY,MAAM,kCAAkC,CAAC;AAC5D,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AACxD,OAAO,EAAE,oBAAoB,EAAE,MAAM,aAAa,CAAC;AAGnD,MAAM,CAAC,MAAM,qBAAqB,GAAG,KAAK,EAAE,IAAa,EAAE,EAAE,GAAG,EAAyB,EAAoB,EAAE;IAC9G,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IAE9D,IAAI,GAAG,CAAC,MAAM,IAAI,cAAc,EAAE,CAAC;QAClC,OAAO,KAAK,CAAC;IACd,CAAC;IACD,MAAM,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IAC9D,MAAM,+BAA+B,GAAG,QAAQ,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;IAErG,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,kBAAkB,IAAI,CAAC,+BAA+B,EAAE,CAAC;QACpF,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC;QACnF,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC;IACb,CAAC;IAED,MAAM,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,EAAE;QACnC,MAAM,SAAS,GAAG,KAAK,IAAmB,EAAE;YAC3C,MAAM,WAAW,GAAG,YAAY,CAAC;YACjC,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;YAC3D,MAAM,QAAQ,GAAG,GAAG,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,IAAI,WAAW,MAAM,IAAI,IAAI,EAAE,MAAM,CAAC,CAAC,qCAAqC;YACvH,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE;gBAC9C,IAAI,EAAE,WAAW;gBACjB,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE;aACxB,CAAC,CAAC;YAEH,eAAe,CAAC,KAAK,EAAE,CAAC;YACxB,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAErC,OAAO,EAAE,CAAC;QACX,CAAC,CAAC;QAEF,MAAM,OAAO,GAAG,GAAS,EAAE;YAC1B,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;YAE5B,eAAe,CAAC,KAAK,EAAE,CAAC;YACxB,OAAO,EAAE,CAAC;QACX,CAAC,CAAC;QAEF,eAAe,CAAC,IAAI,CAAC;YACpB,SAAS,EAAE,YAAY;YACvB,KAAK,EAAE;gBACN,KAAK,EAAE,CAAC,CAAC,kBAAkB,CAAC;gBAC5B,QAAQ,EAAE,CAAC,CAAC,wCAAwC,CAAC;gBACrD,SAAS;gBACT,OAAO;gBACP,QAAQ,EAAE,OAAO;gBACjB,OAAO,EAAE,SAAS;aAClB;SACD,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AACb,CAAC,CAAC","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\n\nimport { settings } from '../../../../app/settings/client';\nimport { t } from '../../../../app/utils/lib/i18n';\nimport GenericModal from '../../../components/GenericModal';\nimport { imperativeModal } from '../../imperativeModal';\nimport { dispatchToastMessage } from '../../toast';\nimport type { ChatAPI } from '../ChatAPI';\n\nexport const processTooLongMessage = async (chat: ChatAPI, { msg }: Pick<IMessage, 'msg'>): Promise<boolean> => {\n\tconst maxAllowedSize = settings.get('Message_MaxAllowedSize');\n\n\tif (msg.length <= maxAllowedSize) {\n\t\treturn false;\n\t}\n\tconst fileUploadsEnabled = settings.get('FileUpload_Enabled');\n\tconst convertLongMessagesToAttachment = settings.get('Message_AllowConvertLongMessagesToAttachment');\n\n\tif (chat.currentEditing || !fileUploadsEnabled || !convertLongMessagesToAttachment) {\n\t\tdispatchToastMessage({ type: 'error', message: new Error(t('Message_too_long')) });\n\t\tchat.composer?.setText(msg);\n\t\treturn true;\n\t}\n\n\tawait new Promise<void>((resolve) => {\n\t\tconst onConfirm = async (): Promise<void> => {\n\t\t\tconst contentType = 'text/plain';\n\t\t\tconst messageBlob = new Blob([msg], { type: contentType });\n\t\t\tconst fileName = `${Meteor.user()?.username ?? 'anonymous'} - ${new Date()}.txt`; // TODO: proper naming and formatting\n\t\t\tconst file = new File([messageBlob], fileName, {\n\t\t\t\ttype: contentType,\n\t\t\t\tlastModified: Date.now(),\n\t\t\t});\n\n\t\t\timperativeModal.close();\n\t\t\tawait chat.flows.uploadFiles([file]);\n\n\t\t\tresolve();\n\t\t};\n\n\t\tconst onClose = (): void => {\n\t\t\tchat.composer?.setText(msg);\n\n\t\t\timperativeModal.close();\n\t\t\tresolve();\n\t\t};\n\n\t\timperativeModal.open({\n\t\t\tcomponent: GenericModal,\n\t\t\tprops: {\n\t\t\t\ttitle: t('Message_too_long'),\n\t\t\t\tchildren: t('Send_it_as_attachment_instead_question'),\n\t\t\t\tonConfirm,\n\t\t\t\tonClose,\n\t\t\t\tonCancel: onClose,\n\t\t\t\tvariant: 'warning',\n\t\t\t},\n\t\t});\n\t});\n\n\treturn true;\n};\n"]}}},"code":"module.export({\n  processTooLongMessage: () => processTooLongMessage\n});\nlet settings;\nmodule.link(\"../../../../app/settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n}, 0);\nlet t;\nmodule.link(\"../../../../app/utils/lib/i18n\", {\n  t(v) {\n    t = v;\n  }\n}, 1);\nlet GenericModal;\nmodule.link(\"../../../components/GenericModal\", {\n  default(v) {\n    GenericModal = v;\n  }\n}, 2);\nlet imperativeModal;\nmodule.link(\"../../imperativeModal\", {\n  imperativeModal(v) {\n    imperativeModal = v;\n  }\n}, 3);\nlet dispatchToastMessage;\nmodule.link(\"../../toast\", {\n  dispatchToastMessage(v) {\n    dispatchToastMessage = v;\n  }\n}, 4);\nconst processTooLongMessage = async (chat, _ref) => {\n  let {\n    msg\n  } = _ref;\n  const maxAllowedSize = settings.get('Message_MaxAllowedSize');\n  if (msg.length <= maxAllowedSize) {\n    return false;\n  }\n  const fileUploadsEnabled = settings.get('FileUpload_Enabled');\n  const convertLongMessagesToAttachment = settings.get('Message_AllowConvertLongMessagesToAttachment');\n  if (chat.currentEditing || !fileUploadsEnabled || !convertLongMessagesToAttachment) {\n    var _chat$composer;\n    dispatchToastMessage({\n      type: 'error',\n      message: new Error(t('Message_too_long'))\n    });\n    (_chat$composer = chat.composer) === null || _chat$composer === void 0 ? void 0 : _chat$composer.setText(msg);\n    return true;\n  }\n  await new Promise(resolve => {\n    const onConfirm = async () => {\n      var _Meteor$user$username, _Meteor$user;\n      const contentType = 'text/plain';\n      const messageBlob = new Blob([msg], {\n        type: contentType\n      });\n      const fileName = \"\".concat((_Meteor$user$username = (_Meteor$user = Meteor.user()) === null || _Meteor$user === void 0 ? void 0 : _Meteor$user.username) !== null && _Meteor$user$username !== void 0 ? _Meteor$user$username : 'anonymous', \" - \").concat(new Date(), \".txt\"); // TODO: proper naming and formatting\n      const file = new File([messageBlob], fileName, {\n        type: contentType,\n        lastModified: Date.now()\n      });\n      imperativeModal.close();\n      await chat.flows.uploadFiles([file]);\n      resolve();\n    };\n    const onClose = () => {\n      var _chat$composer2;\n      (_chat$composer2 = chat.composer) === null || _chat$composer2 === void 0 ? void 0 : _chat$composer2.setText(msg);\n      imperativeModal.close();\n      resolve();\n    };\n    imperativeModal.open({\n      component: GenericModal,\n      props: {\n        title: t('Message_too_long'),\n        children: t('Send_it_as_attachment_instead_question'),\n        onConfirm,\n        onClose,\n        onCancel: onClose,\n        variant: 'warning'\n      }\n    });\n  });\n  return true;\n};","map":{"version":3,"names":["module","export","processTooLongMessage","settings","link","v","t","GenericModal","default","imperativeModal","dispatchToastMessage","chat","_ref","msg","maxAllowedSize","get","length","fileUploadsEnabled","convertLongMessagesToAttachment","currentEditing","_chat$composer","type","message","Error","composer","setText","Promise","resolve","onConfirm","_Meteor$user$username","_Meteor$user","contentType","messageBlob","Blob","fileName","concat","Meteor","user","username","Date","file","File","lastModified","now","close","flows","uploadFiles","onClose","_chat$composer2","open","component","props","title","children","onCancel","variant"],"sources":["client/lib/chats/flows/processTooLongMessage.ts"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\n\nimport { settings } from '../../../../app/settings/client';\nimport { t } from '../../../../app/utils/lib/i18n';\nimport GenericModal from '../../../components/GenericModal';\nimport { imperativeModal } from '../../imperativeModal';\nimport { dispatchToastMessage } from '../../toast';\nimport type { ChatAPI } from '../ChatAPI';\n\nexport const processTooLongMessage = async (chat: ChatAPI, { msg }: Pick<IMessage, 'msg'>): Promise<boolean> => {\n\tconst maxAllowedSize = settings.get('Message_MaxAllowedSize');\n\n\tif (msg.length <= maxAllowedSize) {\n\t\treturn false;\n\t}\n\tconst fileUploadsEnabled = settings.get('FileUpload_Enabled');\n\tconst convertLongMessagesToAttachment = settings.get('Message_AllowConvertLongMessagesToAttachment');\n\n\tif (chat.currentEditing || !fileUploadsEnabled || !convertLongMessagesToAttachment) {\n\t\tdispatchToastMessage({ type: 'error', message: new Error(t('Message_too_long')) });\n\t\tchat.composer?.setText(msg);\n\t\treturn true;\n\t}\n\n\tawait new Promise<void>((resolve) => {\n\t\tconst onConfirm = async (): Promise<void> => {\n\t\t\tconst contentType = 'text/plain';\n\t\t\tconst messageBlob = new Blob([msg], { type: contentType });\n\t\t\tconst fileName = `${Meteor.user()?.username ?? 'anonymous'} - ${new Date()}.txt`; // TODO: proper naming and formatting\n\t\t\tconst file = new File([messageBlob], fileName, {\n\t\t\t\ttype: contentType,\n\t\t\t\tlastModified: Date.now(),\n\t\t\t});\n\n\t\t\timperativeModal.close();\n\t\t\tawait chat.flows.uploadFiles([file]);\n\n\t\t\tresolve();\n\t\t};\n\n\t\tconst onClose = (): void => {\n\t\t\tchat.composer?.setText(msg);\n\n\t\t\timperativeModal.close();\n\t\t\tresolve();\n\t\t};\n\n\t\timperativeModal.open({\n\t\t\tcomponent: GenericModal,\n\t\t\tprops: {\n\t\t\t\ttitle: t('Message_too_long'),\n\t\t\t\tchildren: t('Send_it_as_attachment_instead_question'),\n\t\t\t\tonConfirm,\n\t\t\t\tonClose,\n\t\t\t\tonCancel: onClose,\n\t\t\t\tvariant: 'warning',\n\t\t\t},\n\t\t});\n\t});\n\n\treturn true;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"bd07bbb854ed5fdabb02329676e2c4d766f0f803"}
