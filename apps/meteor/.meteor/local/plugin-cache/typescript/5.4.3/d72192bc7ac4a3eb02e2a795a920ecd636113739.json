{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/startup/presence.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/startup/presence.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/startup/presence.ts","inputSourceMap":{"version":3,"file":"ee/server/startup/presence.ts","sourceRoot":"","sources":["ee/server/startup/presence.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAC;AAC9D,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAEtC,4CAA4C;AAC5C,MAAM,WAAW,GAAG,QAAQ,CAAC,SAAS,YAAY;IACjD,KAAK,cAAc,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACpE,CAAC,EAAE,KAAK,CAAC,CAAC;AAEV,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;IACnB,MAAM,MAAM,GAAG,cAAc,CAAC,EAAE,EAAE,CAAC;IAEnC,MAAM,CAAC,YAAY,CAAC,CAAC,UAAU,EAAE,EAAE;QAClC,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAE1D,UAAU,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;YAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;gBACd,OAAO;YACR,CAAC;YAED,MAAM,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YACvE,WAAW,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,KAAK,IAAI,EAAE;QAC7B,MAAM,QAAQ,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAU,EAAQ,EAAE;QACrC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC;YAC1B,OAAO;QACR,CAAC;QAED,2DAA2D;QAC3D,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,OAAO;QACR,CAAC;QAED,KAAK,CAAC,KAAK;YACV,MAAM,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAC1E,WAAW,EAAE,CAAC;QACf,CAAC,CAAC,EAAE,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAQ,EAAE;QACjC,KAAK,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QAE7E,WAAW,EAAE,CAAC;IACf,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { Presence } from '@rocket.chat/core-services';\nimport { InstanceStatus } from '@rocket.chat/instance-status';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport { throttle } from 'underscore';\n\n// update connections count every 30 seconds\nconst updateConns = throttle(function _updateConns() {\n\tvoid InstanceStatus.updateConnections(Meteor.server.sessions.size);\n}, 30000);\n\nMeteor.startup(() => {\n\tconst nodeId = InstanceStatus.id();\n\n\tMeteor.onConnection((connection) => {\n\t\tconst session = Meteor.server.sessions.get(connection.id);\n\n\t\tconnection.onClose(async () => {\n\t\t\tif (!session) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Presence.removeConnection(session.userId, connection.id, nodeId);\n\t\t\tupdateConns();\n\t\t});\n\t});\n\n\tprocess.on('exit', async () => {\n\t\tawait Presence.removeLostConnections(nodeId);\n\t});\n\n\tAccounts.onLogin((login: any): void => {\n\t\tif (!login.connection.id) {\n\t\t\treturn;\n\t\t}\n\n\t\t// validate if it is a real WS connection and is still open\n\t\tconst session = Meteor.server.sessions.get(login.connection.id);\n\t\tif (!session) {\n\t\t\treturn;\n\t\t}\n\n\t\tvoid (async function () {\n\t\t\tawait Presence.newConnection(login.user._id, login.connection.id, nodeId);\n\t\t\tupdateConns();\n\t\t})();\n\t});\n\n\tAccounts.onLogout((login): void => {\n\t\tvoid Presence.removeConnection(login.user?._id, login.connection.id, nodeId);\n\n\t\tupdateConns();\n\t});\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/startup/presence.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/startup/presence.ts","inputSourceMap":{"version":3,"file":"ee/server/startup/presence.ts","sourceRoot":"","sources":["ee/server/startup/presence.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAC;AAC9D,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAEtC,4CAA4C;AAC5C,MAAM,WAAW,GAAG,QAAQ,CAAC,SAAS,YAAY;IACjD,KAAK,cAAc,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACpE,CAAC,EAAE,KAAK,CAAC,CAAC;AAEV,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;IACnB,MAAM,MAAM,GAAG,cAAc,CAAC,EAAE,EAAE,CAAC;IAEnC,MAAM,CAAC,YAAY,CAAC,CAAC,UAAU,EAAE,EAAE;QAClC,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAE1D,UAAU,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;YAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;gBACd,OAAO;YACR,CAAC;YAED,MAAM,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YACvE,WAAW,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,KAAK,IAAI,EAAE;QAC7B,MAAM,QAAQ,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAU,EAAQ,EAAE;QACrC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC;YAC1B,OAAO;QACR,CAAC;QAED,2DAA2D;QAC3D,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,OAAO;QACR,CAAC;QAED,KAAK,CAAC,KAAK;YACV,MAAM,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAC1E,WAAW,EAAE,CAAC;QACf,CAAC,CAAC,EAAE,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAQ,EAAE;QACjC,KAAK,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QAE7E,WAAW,EAAE,CAAC;IACf,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { Presence } from '@rocket.chat/core-services';\nimport { InstanceStatus } from '@rocket.chat/instance-status';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport { throttle } from 'underscore';\n\n// update connections count every 30 seconds\nconst updateConns = throttle(function _updateConns() {\n\tvoid InstanceStatus.updateConnections(Meteor.server.sessions.size);\n}, 30000);\n\nMeteor.startup(() => {\n\tconst nodeId = InstanceStatus.id();\n\n\tMeteor.onConnection((connection) => {\n\t\tconst session = Meteor.server.sessions.get(connection.id);\n\n\t\tconnection.onClose(async () => {\n\t\t\tif (!session) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Presence.removeConnection(session.userId, connection.id, nodeId);\n\t\t\tupdateConns();\n\t\t});\n\t});\n\n\tprocess.on('exit', async () => {\n\t\tawait Presence.removeLostConnections(nodeId);\n\t});\n\n\tAccounts.onLogin((login: any): void => {\n\t\tif (!login.connection.id) {\n\t\t\treturn;\n\t\t}\n\n\t\t// validate if it is a real WS connection and is still open\n\t\tconst session = Meteor.server.sessions.get(login.connection.id);\n\t\tif (!session) {\n\t\t\treturn;\n\t\t}\n\n\t\tvoid (async function () {\n\t\t\tawait Presence.newConnection(login.user._id, login.connection.id, nodeId);\n\t\t\tupdateConns();\n\t\t})();\n\t});\n\n\tAccounts.onLogout((login): void => {\n\t\tvoid Presence.removeConnection(login.user?._id, login.connection.id, nodeId);\n\n\t\tupdateConns();\n\t});\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Presence;\n    module.link(\"@rocket.chat/core-services\", {\n      Presence(v) {\n        Presence = v;\n      }\n    }, 0);\n    let InstanceStatus;\n    module.link(\"@rocket.chat/instance-status\", {\n      InstanceStatus(v) {\n        InstanceStatus = v;\n      }\n    }, 1);\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let throttle;\n    module.link(\"underscore\", {\n      throttle(v) {\n        throttle = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    // update connections count every 30 seconds\n    const updateConns = throttle(function _updateConns() {\n      void InstanceStatus.updateConnections(Meteor.server.sessions.size);\n    }, 30000);\n    Meteor.startup(() => {\n      const nodeId = InstanceStatus.id();\n      Meteor.onConnection(connection => {\n        const session = Meteor.server.sessions.get(connection.id);\n        connection.onClose(async () => {\n          if (!session) {\n            return;\n          }\n          await Presence.removeConnection(session.userId, connection.id, nodeId);\n          updateConns();\n        });\n      });\n      process.on('exit', async () => {\n        await Presence.removeLostConnections(nodeId);\n      });\n      Accounts.onLogin(login => {\n        if (!login.connection.id) {\n          return;\n        }\n        // validate if it is a real WS connection and is still open\n        const session = Meteor.server.sessions.get(login.connection.id);\n        if (!session) {\n          return;\n        }\n        void async function () {\n          await Presence.newConnection(login.user._id, login.connection.id, nodeId);\n          updateConns();\n        }();\n      });\n      Accounts.onLogout(login => {\n        var _login$user;\n        void Presence.removeConnection((_login$user = login.user) === null || _login$user === void 0 ? void 0 : _login$user._id, login.connection.id, nodeId);\n        updateConns();\n      });\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Presence","module","link","v","InstanceStatus","Accounts","Meteor","throttle","__reifyWaitForDeps__","updateConns","_updateConns","updateConnections","server","sessions","size","startup","nodeId","id","onConnection","connection","session","get","onClose","removeConnection","userId","process","on","removeLostConnections","onLogin","login","newConnection","user","_id","onLogout","_login$user","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/startup/presence.ts"],"sourcesContent":["import { Presence } from '@rocket.chat/core-services';\nimport { InstanceStatus } from '@rocket.chat/instance-status';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport { throttle } from 'underscore';\n\n// update connections count every 30 seconds\nconst updateConns = throttle(function _updateConns() {\n\tvoid InstanceStatus.updateConnections(Meteor.server.sessions.size);\n}, 30000);\n\nMeteor.startup(() => {\n\tconst nodeId = InstanceStatus.id();\n\n\tMeteor.onConnection((connection) => {\n\t\tconst session = Meteor.server.sessions.get(connection.id);\n\n\t\tconnection.onClose(async () => {\n\t\t\tif (!session) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Presence.removeConnection(session.userId, connection.id, nodeId);\n\t\t\tupdateConns();\n\t\t});\n\t});\n\n\tprocess.on('exit', async () => {\n\t\tawait Presence.removeLostConnections(nodeId);\n\t});\n\n\tAccounts.onLogin((login: any): void => {\n\t\tif (!login.connection.id) {\n\t\t\treturn;\n\t\t}\n\n\t\t// validate if it is a real WS connection and is still open\n\t\tconst session = Meteor.server.sessions.get(login.connection.id);\n\t\tif (!session) {\n\t\t\treturn;\n\t\t}\n\n\t\tvoid (async function () {\n\t\t\tawait Presence.newConnection(login.user._id, login.connection.id, nodeId);\n\t\t\tupdateConns();\n\t\t})();\n\t});\n\n\tAccounts.onLogout((login): void => {\n\t\tvoid Presence.removeConnection(login.user?._id, login.connection.id, nodeId);\n\n\t\tupdateConns();\n\t});\n});\n"],"mappings":";;;IAAA,IAAAA,QAAS;IAAAC,MAAU,CAAAC,IAAA,CAAM,4BAA4B,EAAC;MAAAF,SAAAG,CAAA;QAAAH,QAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,cAAA;IAAAH,MAAA,CAAAC,IAAA;MAAAE,eAAAD,CAAA;QAAAC,cAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,QAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAG,SAAAF,CAAA;QAAAE,QAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,MAAA;IAAAL,MAAA,CAAAC,IAAA;MAAAI,OAAAH,CAAA;QAAAG,MAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,QAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,SAAAJ,CAAA;QAAAI,QAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,oBAAA,WAAAA,oBAAA;IAMtD;IACA,MAAMC,WAAW,GAAGF,QAAQ,CAAC,SAASG,YAAYA,CAAA;MACjD,KAAKN,cAAc,CAACO,iBAAiB,CAACL,MAAM,CAACM,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC;IACnE,CAAC,EAAE,KAAK,CAAC;IAETR,MAAM,CAACS,OAAO,CAAC,MAAK;MACnB,MAAMC,MAAM,GAAGZ,cAAc,CAACa,EAAE,EAAE;MAElCX,MAAM,CAACY,YAAY,CAAEC,UAAU,IAAI;QAClC,MAAMC,OAAO,GAAGd,MAAM,CAACM,MAAM,CAACC,QAAQ,CAACQ,GAAG,CAACF,UAAU,CAACF,EAAE,CAAC;QAEzDE,UAAU,CAACG,OAAO,CAAC,YAAW;UAC7B,IAAI,CAACF,OAAO,EAAE;YACb;UACD;UAEA,MAAMpB,QAAQ,CAACuB,gBAAgB,CAACH,OAAO,CAACI,MAAM,EAAEL,UAAU,CAACF,EAAE,EAAED,MAAM,CAAC;UACtEP,WAAW,EAAE;QACd,CAAC,CAAC;MACH,CAAC,CAAC;MAEFgB,OAAO,CAACC,EAAE,CAAC,MAAM,EAAE,YAAW;QAC7B,MAAM1B,QAAQ,CAAC2B,qBAAqB,CAACX,MAAM,CAAC;MAC7C,CAAC,CAAC;MAEFX,QAAQ,CAACuB,OAAO,CAAEC,KAAU,IAAU;QACrC,IAAI,CAACA,KAAK,CAACV,UAAU,CAACF,EAAE,EAAE;UACzB;QACD;QAEA;QACA,MAAMG,OAAO,GAAGd,MAAM,CAACM,MAAM,CAACC,QAAQ,CAACQ,GAAG,CAACQ,KAAK,CAACV,UAAU,CAACF,EAAE,CAAC;QAC/D,IAAI,CAACG,OAAO,EAAE;UACb;QACD;QAEA,KAAM,kBAAK;UACV,MAAMpB,QAAQ,CAAC8B,aAAa,CAACD,KAAK,CAACE,IAAI,CAACC,GAAG,EAAEH,KAAK,CAACV,UAAU,CAACF,EAAE,EAAED,MAAM,CAAC;UACzEP,WAAW,EAAE;QACd,CAAC,CAAC,CAAE;MACL,CAAC,CAAC;MAEFJ,QAAQ,CAAC4B,QAAQ,CAAEJ,KAAK,IAAU;QAAA,IAAAK,WAAA;QACjC,KAAKlC,QAAQ,CAACuB,gBAAgB,EAAAW,WAAA,GAACL,KAAK,CAACE,IAAI,cAAAG,WAAA,uBAAVA,WAAA,CAAYF,GAAG,EAAEH,KAAK,CAACV,UAAU,CAACF,EAAE,EAAED,MAAM,CAAC;QAE5EP,WAAW,EAAE;MACd,CAAC,CAAC;IACH,CAAC,CAAC;IAAC0B,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d72192bc7ac4a3eb02e2a795a920ecd636113739"}
