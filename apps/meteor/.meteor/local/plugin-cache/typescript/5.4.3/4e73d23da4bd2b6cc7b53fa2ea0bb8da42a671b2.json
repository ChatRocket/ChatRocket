{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/business-hour/Helper.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/business-hour/Helper.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/business-hour/Helper.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/business-hour/Helper.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/business-hour/Helper.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,yBAAyB,EAAE,MAAM,2BAA2B,CAAC;AACtE,OAAO,EAAE,kBAAkB,EAAE,wBAAwB,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE1F,OAAO,EACN,wCAAwC,EACxC,yBAAyB,GACzB,MAAM,yDAAyD,CAAC;AACjE,OAAO,EAAE,0BAA0B,EAAE,MAAM,6EAA6E,CAAC;AACzH,OAAO,EAAE,kBAAkB,EAAE,MAAM,+CAA+C,CAAC;AAEnF,MAAM,CAAC,MAAM,mBAAmB,GAAG,KAAK,EAAE,YAAyD,EAAqB,EAAE;IACzH,IAAI,YAAY,CAAC,IAAI,KAAK,yBAAyB,CAAC,OAAO,EAAE,CAAC;QAC7D,OAAO,0BAA0B,EAAE,CAAC;IACrC,CAAC;IACD,MAAM,aAAa,GAAG,CACrB,MAAM,kBAAkB,CAAC,2BAA2B,CAAC,YAAY,CAAC,GAAG,EAAE;QACtE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE;KACtB,CAAC,CAAC,OAAO,EAAE,CACZ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1B,OAAO,CACN,MAAM,wBAAwB,CAAC,mBAAmB,CAAC,aAAa,EAAE;QACjE,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE;KAC1B,CAAC,CAAC,OAAO,EAAE,CACZ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC/B,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG,KAAK,EACpC,YAAyD,EACzD,oBAAoB,GAAG,IAAI,EACX,EAAE;IAClB,MAAM,QAAQ,GAAG,MAAM,mBAAmB,CAAC,YAAY,CAAC,CAAC;IACzD,kBAAkB,CAAC,KAAK,CAAC;QACxB,GAAG,EAAE,uBAAuB;QAC5B,YAAY,EAAE,YAAY,CAAC,GAAG;QAC9B,WAAW,EAAE,QAAQ,CAAC,MAAM;QAC5B,aAAa,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;KACpC,CAAC,CAAC;IACH,MAAM,KAAK,CAAC,yBAAyB,CAAC,QAAQ,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC;IAClE,MAAM,yBAAyB,CAAC,QAAQ,CAAC,CAAC;IAE1C,IAAI,oBAAoB,EAAE,CAAC;QAC1B,MAAM,wCAAwC,EAAE,CAAC;IAClD,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,4BAA4B,GAAG,KAAK,EAAE,QAAkB,EAAE,cAAsB,EAAiB,EAAE;IAC/G,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACtB,OAAO;IACR,CAAC;IACD,MAAM,KAAK,CAAC,4BAA4B,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;IACnE,MAAM,wCAAwC,EAAE,CAAC;AAClD,CAAC,CAAC","sourcesContent":["import type { ILivechatBusinessHour } from '@rocket.chat/core-typings';\nimport { LivechatBusinessHourTypes } from '@rocket.chat/core-typings';\nimport { LivechatDepartment, LivechatDepartmentAgents, Users } from '@rocket.chat/models';\n\nimport {\n\tmakeAgentsUnavailableBasedOnBusinessHour,\n\tmakeOnlineAgentsAvailable,\n} from '../../../../../app/livechat/server/business-hour/Helper';\nimport { getAgentIdsForBusinessHour } from '../../../../../app/livechat/server/business-hour/getAgentIdsForBusinessHour';\nimport { businessHourLogger } from '../../../../../app/livechat/server/lib/logger';\n\nexport const getAgentIdsToHandle = async (businessHour: Pick<ILivechatBusinessHour, '_id' | 'type'>): Promise<string[]> => {\n\tif (businessHour.type === LivechatBusinessHourTypes.DEFAULT) {\n\t\treturn getAgentIdsForBusinessHour();\n\t}\n\tconst departmentIds = (\n\t\tawait LivechatDepartment.findEnabledByBusinessHourId(businessHour._id, {\n\t\t\tprojection: { _id: 1 },\n\t\t}).toArray()\n\t).map((dept) => dept._id);\n\treturn (\n\t\tawait LivechatDepartmentAgents.findByDepartmentIds(departmentIds, {\n\t\t\tprojection: { agentId: 1 },\n\t\t}).toArray()\n\t).map((dept) => dept.agentId);\n};\n\nexport const openBusinessHour = async (\n\tbusinessHour: Pick<ILivechatBusinessHour, '_id' | 'type'>,\n\tupdateLivechatStatus = true,\n): Promise<void> => {\n\tconst agentIds = await getAgentIdsToHandle(businessHour);\n\tbusinessHourLogger.debug({\n\t\tmsg: 'Opening business hour',\n\t\tbusinessHour: businessHour._id,\n\t\ttotalAgents: agentIds.length,\n\t\ttop10AgentIds: agentIds.slice(0, 10),\n\t});\n\tawait Users.addBusinessHourByAgentIds(agentIds, businessHour._id);\n\tawait makeOnlineAgentsAvailable(agentIds);\n\n\tif (updateLivechatStatus) {\n\t\tawait makeAgentsUnavailableBasedOnBusinessHour();\n\t}\n};\n\nexport const removeBusinessHourByAgentIds = async (agentIds: string[], businessHourId: string): Promise<void> => {\n\tif (!agentIds.length) {\n\t\treturn;\n\t}\n\tawait Users.removeBusinessHourByAgentIds(agentIds, businessHourId);\n\tawait makeAgentsUnavailableBasedOnBusinessHour();\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/business-hour/Helper.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/business-hour/Helper.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/business-hour/Helper.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/business-hour/Helper.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,yBAAyB,EAAE,MAAM,2BAA2B,CAAC;AACtE,OAAO,EAAE,kBAAkB,EAAE,wBAAwB,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE1F,OAAO,EACN,wCAAwC,EACxC,yBAAyB,GACzB,MAAM,yDAAyD,CAAC;AACjE,OAAO,EAAE,0BAA0B,EAAE,MAAM,6EAA6E,CAAC;AACzH,OAAO,EAAE,kBAAkB,EAAE,MAAM,+CAA+C,CAAC;AAEnF,MAAM,CAAC,MAAM,mBAAmB,GAAG,KAAK,EAAE,YAAyD,EAAqB,EAAE;IACzH,IAAI,YAAY,CAAC,IAAI,KAAK,yBAAyB,CAAC,OAAO,EAAE,CAAC;QAC7D,OAAO,0BAA0B,EAAE,CAAC;IACrC,CAAC;IACD,MAAM,aAAa,GAAG,CACrB,MAAM,kBAAkB,CAAC,2BAA2B,CAAC,YAAY,CAAC,GAAG,EAAE;QACtE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE;KACtB,CAAC,CAAC,OAAO,EAAE,CACZ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1B,OAAO,CACN,MAAM,wBAAwB,CAAC,mBAAmB,CAAC,aAAa,EAAE;QACjE,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE;KAC1B,CAAC,CAAC,OAAO,EAAE,CACZ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC/B,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG,KAAK,EACpC,YAAyD,EACzD,oBAAoB,GAAG,IAAI,EACX,EAAE;IAClB,MAAM,QAAQ,GAAG,MAAM,mBAAmB,CAAC,YAAY,CAAC,CAAC;IACzD,kBAAkB,CAAC,KAAK,CAAC;QACxB,GAAG,EAAE,uBAAuB;QAC5B,YAAY,EAAE,YAAY,CAAC,GAAG;QAC9B,WAAW,EAAE,QAAQ,CAAC,MAAM;QAC5B,aAAa,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;KACpC,CAAC,CAAC;IACH,MAAM,KAAK,CAAC,yBAAyB,CAAC,QAAQ,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC;IAClE,MAAM,yBAAyB,CAAC,QAAQ,CAAC,CAAC;IAE1C,IAAI,oBAAoB,EAAE,CAAC;QAC1B,MAAM,wCAAwC,EAAE,CAAC;IAClD,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,4BAA4B,GAAG,KAAK,EAAE,QAAkB,EAAE,cAAsB,EAAiB,EAAE;IAC/G,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACtB,OAAO;IACR,CAAC;IACD,MAAM,KAAK,CAAC,4BAA4B,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;IACnE,MAAM,wCAAwC,EAAE,CAAC;AAClD,CAAC,CAAC","sourcesContent":["import type { ILivechatBusinessHour } from '@rocket.chat/core-typings';\nimport { LivechatBusinessHourTypes } from '@rocket.chat/core-typings';\nimport { LivechatDepartment, LivechatDepartmentAgents, Users } from '@rocket.chat/models';\n\nimport {\n\tmakeAgentsUnavailableBasedOnBusinessHour,\n\tmakeOnlineAgentsAvailable,\n} from '../../../../../app/livechat/server/business-hour/Helper';\nimport { getAgentIdsForBusinessHour } from '../../../../../app/livechat/server/business-hour/getAgentIdsForBusinessHour';\nimport { businessHourLogger } from '../../../../../app/livechat/server/lib/logger';\n\nexport const getAgentIdsToHandle = async (businessHour: Pick<ILivechatBusinessHour, '_id' | 'type'>): Promise<string[]> => {\n\tif (businessHour.type === LivechatBusinessHourTypes.DEFAULT) {\n\t\treturn getAgentIdsForBusinessHour();\n\t}\n\tconst departmentIds = (\n\t\tawait LivechatDepartment.findEnabledByBusinessHourId(businessHour._id, {\n\t\t\tprojection: { _id: 1 },\n\t\t}).toArray()\n\t).map((dept) => dept._id);\n\treturn (\n\t\tawait LivechatDepartmentAgents.findByDepartmentIds(departmentIds, {\n\t\t\tprojection: { agentId: 1 },\n\t\t}).toArray()\n\t).map((dept) => dept.agentId);\n};\n\nexport const openBusinessHour = async (\n\tbusinessHour: Pick<ILivechatBusinessHour, '_id' | 'type'>,\n\tupdateLivechatStatus = true,\n): Promise<void> => {\n\tconst agentIds = await getAgentIdsToHandle(businessHour);\n\tbusinessHourLogger.debug({\n\t\tmsg: 'Opening business hour',\n\t\tbusinessHour: businessHour._id,\n\t\ttotalAgents: agentIds.length,\n\t\ttop10AgentIds: agentIds.slice(0, 10),\n\t});\n\tawait Users.addBusinessHourByAgentIds(agentIds, businessHour._id);\n\tawait makeOnlineAgentsAvailable(agentIds);\n\n\tif (updateLivechatStatus) {\n\t\tawait makeAgentsUnavailableBasedOnBusinessHour();\n\t}\n};\n\nexport const removeBusinessHourByAgentIds = async (agentIds: string[], businessHourId: string): Promise<void> => {\n\tif (!agentIds.length) {\n\t\treturn;\n\t}\n\tawait Users.removeBusinessHourByAgentIds(agentIds, businessHourId);\n\tawait makeAgentsUnavailableBasedOnBusinessHour();\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      getAgentIdsToHandle: () => getAgentIdsToHandle,\n      openBusinessHour: () => openBusinessHour,\n      removeBusinessHourByAgentIds: () => removeBusinessHourByAgentIds\n    });\n    let LivechatBusinessHourTypes;\n    module.link(\"@rocket.chat/core-typings\", {\n      LivechatBusinessHourTypes(v) {\n        LivechatBusinessHourTypes = v;\n      }\n    }, 0);\n    let LivechatDepartment, LivechatDepartmentAgents, Users;\n    module.link(\"@rocket.chat/models\", {\n      LivechatDepartment(v) {\n        LivechatDepartment = v;\n      },\n      LivechatDepartmentAgents(v) {\n        LivechatDepartmentAgents = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let makeAgentsUnavailableBasedOnBusinessHour, makeOnlineAgentsAvailable;\n    module.link(\"../../../../../app/livechat/server/business-hour/Helper\", {\n      makeAgentsUnavailableBasedOnBusinessHour(v) {\n        makeAgentsUnavailableBasedOnBusinessHour = v;\n      },\n      makeOnlineAgentsAvailable(v) {\n        makeOnlineAgentsAvailable = v;\n      }\n    }, 2);\n    let getAgentIdsForBusinessHour;\n    module.link(\"../../../../../app/livechat/server/business-hour/getAgentIdsForBusinessHour\", {\n      getAgentIdsForBusinessHour(v) {\n        getAgentIdsForBusinessHour = v;\n      }\n    }, 3);\n    let businessHourLogger;\n    module.link(\"../../../../../app/livechat/server/lib/logger\", {\n      businessHourLogger(v) {\n        businessHourLogger = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const getAgentIdsToHandle = async businessHour => {\n      if (businessHour.type === LivechatBusinessHourTypes.DEFAULT) {\n        return getAgentIdsForBusinessHour();\n      }\n      const departmentIds = (await LivechatDepartment.findEnabledByBusinessHourId(businessHour._id, {\n        projection: {\n          _id: 1\n        }\n      }).toArray()).map(dept => dept._id);\n      return (await LivechatDepartmentAgents.findByDepartmentIds(departmentIds, {\n        projection: {\n          agentId: 1\n        }\n      }).toArray()).map(dept => dept.agentId);\n    };\n    const openBusinessHour = async function (businessHour) {\n      let updateLivechatStatus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      const agentIds = await getAgentIdsToHandle(businessHour);\n      businessHourLogger.debug({\n        msg: 'Opening business hour',\n        businessHour: businessHour._id,\n        totalAgents: agentIds.length,\n        top10AgentIds: agentIds.slice(0, 10)\n      });\n      await Users.addBusinessHourByAgentIds(agentIds, businessHour._id);\n      await makeOnlineAgentsAvailable(agentIds);\n      if (updateLivechatStatus) {\n        await makeAgentsUnavailableBasedOnBusinessHour();\n      }\n    };\n    const removeBusinessHourByAgentIds = async (agentIds, businessHourId) => {\n      if (!agentIds.length) {\n        return;\n      }\n      await Users.removeBusinessHourByAgentIds(agentIds, businessHourId);\n      await makeAgentsUnavailableBasedOnBusinessHour();\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","getAgentIdsToHandle","openBusinessHour","removeBusinessHourByAgentIds","LivechatBusinessHourTypes","link","v","LivechatDepartment","LivechatDepartmentAgents","Users","makeAgentsUnavailableBasedOnBusinessHour","makeOnlineAgentsAvailable","getAgentIdsForBusinessHour","businessHourLogger","__reifyWaitForDeps__","businessHour","type","DEFAULT","departmentIds","findEnabledByBusinessHourId","_id","projection","toArray","map","dept","findByDepartmentIds","agentId","updateLivechatStatus","arguments","length","undefined","agentIds","debug","msg","totalAgents","top10AgentIds","slice","addBusinessHourByAgentIds","businessHourId","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/livechat-enterprise/server/business-hour/Helper.ts"],"sourcesContent":["import type { ILivechatBusinessHour } from '@rocket.chat/core-typings';\nimport { LivechatBusinessHourTypes } from '@rocket.chat/core-typings';\nimport { LivechatDepartment, LivechatDepartmentAgents, Users } from '@rocket.chat/models';\n\nimport {\n\tmakeAgentsUnavailableBasedOnBusinessHour,\n\tmakeOnlineAgentsAvailable,\n} from '../../../../../app/livechat/server/business-hour/Helper';\nimport { getAgentIdsForBusinessHour } from '../../../../../app/livechat/server/business-hour/getAgentIdsForBusinessHour';\nimport { businessHourLogger } from '../../../../../app/livechat/server/lib/logger';\n\nexport const getAgentIdsToHandle = async (businessHour: Pick<ILivechatBusinessHour, '_id' | 'type'>): Promise<string[]> => {\n\tif (businessHour.type === LivechatBusinessHourTypes.DEFAULT) {\n\t\treturn getAgentIdsForBusinessHour();\n\t}\n\tconst departmentIds = (\n\t\tawait LivechatDepartment.findEnabledByBusinessHourId(businessHour._id, {\n\t\t\tprojection: { _id: 1 },\n\t\t}).toArray()\n\t).map((dept) => dept._id);\n\treturn (\n\t\tawait LivechatDepartmentAgents.findByDepartmentIds(departmentIds, {\n\t\t\tprojection: { agentId: 1 },\n\t\t}).toArray()\n\t).map((dept) => dept.agentId);\n};\n\nexport const openBusinessHour = async (\n\tbusinessHour: Pick<ILivechatBusinessHour, '_id' | 'type'>,\n\tupdateLivechatStatus = true,\n): Promise<void> => {\n\tconst agentIds = await getAgentIdsToHandle(businessHour);\n\tbusinessHourLogger.debug({\n\t\tmsg: 'Opening business hour',\n\t\tbusinessHour: businessHour._id,\n\t\ttotalAgents: agentIds.length,\n\t\ttop10AgentIds: agentIds.slice(0, 10),\n\t});\n\tawait Users.addBusinessHourByAgentIds(agentIds, businessHour._id);\n\tawait makeOnlineAgentsAvailable(agentIds);\n\n\tif (updateLivechatStatus) {\n\t\tawait makeAgentsUnavailableBasedOnBusinessHour();\n\t}\n};\n\nexport const removeBusinessHourByAgentIds = async (agentIds: string[], businessHourId: string): Promise<void> => {\n\tif (!agentIds.length) {\n\t\treturn;\n\t}\n\tawait Users.removeBusinessHourByAgentIds(agentIds, businessHourId);\n\tawait makeAgentsUnavailableBasedOnBusinessHour();\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"4e73d23da4bd2b6cc7b53fa2ea0bb8da42a671b2"}
