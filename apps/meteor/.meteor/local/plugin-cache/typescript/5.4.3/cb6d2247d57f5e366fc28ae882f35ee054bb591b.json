{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/v1/videoCall.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/api/v1/videoCall.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/v1/videoCall.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/v1/videoCall.ts","sourceRoot":"","sources":["app/livechat/server/api/v1/videoCall.ts"],"names":[],"mappings":"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","sourcesContent":["import { Message, Omnichannel } from '@rocket.chat/core-services';\nimport type { IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { Messages, Settings, Rooms } from '@rocket.chat/models';\nimport { isGETWebRTCCall, isPUTWebRTCCallId } from '@rocket.chat/rest-typings';\n\nimport { i18n } from '../../../../../server/lib/i18n';\nimport { API } from '../../../../api/server';\nimport { canSendMessageAsync } from '../../../../authorization/server/functions/canSendMessage';\nimport { notifyOnRoomChangedById, notifyOnSettingChanged } from '../../../../lib/server/lib/notifyListener';\nimport { settings as rcSettings } from '../../../../settings/server';\nimport { Livechat } from '../../lib/LivechatTyped';\nimport { settings } from '../lib/livechat';\n\nAPI.v1.addRoute(\n\t'livechat/webrtc.call',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETWebRTCCall },\n\t{\n\t\tasync get() {\n\t\t\tconst room = await canSendMessageAsync(\n\t\t\t\tthis.queryParams.rid,\n\t\t\t\t{\n\t\t\t\t\tuid: this.userId,\n\t\t\t\t\tusername: this.user.username,\n\t\t\t\t\ttype: this.user.type,\n\t\t\t\t},\n\t\t\t\t{},\n\t\t\t);\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('invalid-room');\n\t\t\t}\n\n\t\t\tif (!(await Omnichannel.isWithinMACLimit(room as IOmnichannelRoom))) {\n\t\t\t\tthrow new Error('error-mac-limit-reached');\n\t\t\t}\n\n\t\t\tconst webrtcCallingAllowed = rcSettings.get('WebRTC_Enabled') === true && rcSettings.get('Omnichannel_call_provider') === 'WebRTC';\n\t\t\tif (!webrtcCallingAllowed) {\n\t\t\t\tthrow new Error('webRTC calling not enabled');\n\t\t\t}\n\n\t\t\tconst config = await settings();\n\t\t\tif (!config.theme?.actionLinks?.webrtc) {\n\t\t\t\tthrow new Error('invalid-livechat-config');\n\t\t\t}\n\n\t\t\tlet { callStatus } = room;\n\n\t\t\tif (!callStatus || callStatus === 'ended' || callStatus === 'declined') {\n\t\t\t\tconst { value } = await Settings.incrementValueById('WebRTC_Calls_Count', 1, { returnDocument: 'after' });\n\t\t\t\tif (value) {\n\t\t\t\t\tvoid notifyOnSettingChanged(value);\n\t\t\t\t}\n\n\t\t\t\tcallStatus = 'ringing';\n\n\t\t\t\t(await Rooms.setCallStatusAndCallStartTime(room._id, callStatus)).modifiedCount && void notifyOnRoomChangedById(room._id);\n\n\t\t\t\tawait Message.saveSystemMessage('livechat_webrtc_video_call', room._id, i18n.t('Join_my_room_to_start_the_video_call'), this.user, {\n\t\t\t\t\tactionLinks: config.theme.actionLinks.webrtc,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst videoCall = {\n\t\t\t\trid: room._id,\n\t\t\t\tprovider: 'webrtc',\n\t\t\t\tcallStatus,\n\t\t\t};\n\t\t\treturn API.v1.success({ videoCall });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/webrtc.call/:callId',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isPUTWebRTCCallId },\n\t{\n\t\tasync put() {\n\t\t\tconst { callId } = this.urlParams;\n\t\t\tconst { rid, status } = this.bodyParams;\n\n\t\t\tconst room = await canSendMessageAsync(\n\t\t\t\trid,\n\t\t\t\t{\n\t\t\t\t\tuid: this.userId,\n\t\t\t\t\tusername: this.user.username,\n\t\t\t\t\ttype: this.user.type,\n\t\t\t\t},\n\t\t\t\t{},\n\t\t\t);\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('invalid-room');\n\t\t\t}\n\n\t\t\tif (!(await Omnichannel.isWithinMACLimit(room as IOmnichannelRoom))) {\n\t\t\t\tthrow new Error('error-mac-limit-reached');\n\t\t\t}\n\n\t\t\tconst call = await Messages.findOneById(callId);\n\t\t\tif (!call || call.t !== 'livechat_webrtc_video_call') {\n\t\t\t\tthrow new Error('invalid-callId');\n\t\t\t}\n\n\t\t\tawait Livechat.updateCallStatus(callId, rid, status, this.user);\n\n\t\t\treturn API.v1.success({ status });\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/v1/videoCall.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/api/v1/videoCall.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/v1/videoCall.ts","sourceRoot":"","sources":["app/livechat/server/api/v1/videoCall.ts"],"names":[],"mappings":"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","sourcesContent":["import { Message, Omnichannel } from '@rocket.chat/core-services';\nimport type { IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { Messages, Settings, Rooms } from '@rocket.chat/models';\nimport { isGETWebRTCCall, isPUTWebRTCCallId } from '@rocket.chat/rest-typings';\n\nimport { i18n } from '../../../../../server/lib/i18n';\nimport { API } from '../../../../api/server';\nimport { canSendMessageAsync } from '../../../../authorization/server/functions/canSendMessage';\nimport { notifyOnRoomChangedById, notifyOnSettingChanged } from '../../../../lib/server/lib/notifyListener';\nimport { settings as rcSettings } from '../../../../settings/server';\nimport { Livechat } from '../../lib/LivechatTyped';\nimport { settings } from '../lib/livechat';\n\nAPI.v1.addRoute(\n\t'livechat/webrtc.call',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETWebRTCCall },\n\t{\n\t\tasync get() {\n\t\t\tconst room = await canSendMessageAsync(\n\t\t\t\tthis.queryParams.rid,\n\t\t\t\t{\n\t\t\t\t\tuid: this.userId,\n\t\t\t\t\tusername: this.user.username,\n\t\t\t\t\ttype: this.user.type,\n\t\t\t\t},\n\t\t\t\t{},\n\t\t\t);\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('invalid-room');\n\t\t\t}\n\n\t\t\tif (!(await Omnichannel.isWithinMACLimit(room as IOmnichannelRoom))) {\n\t\t\t\tthrow new Error('error-mac-limit-reached');\n\t\t\t}\n\n\t\t\tconst webrtcCallingAllowed = rcSettings.get('WebRTC_Enabled') === true && rcSettings.get('Omnichannel_call_provider') === 'WebRTC';\n\t\t\tif (!webrtcCallingAllowed) {\n\t\t\t\tthrow new Error('webRTC calling not enabled');\n\t\t\t}\n\n\t\t\tconst config = await settings();\n\t\t\tif (!config.theme?.actionLinks?.webrtc) {\n\t\t\t\tthrow new Error('invalid-livechat-config');\n\t\t\t}\n\n\t\t\tlet { callStatus } = room;\n\n\t\t\tif (!callStatus || callStatus === 'ended' || callStatus === 'declined') {\n\t\t\t\tconst { value } = await Settings.incrementValueById('WebRTC_Calls_Count', 1, { returnDocument: 'after' });\n\t\t\t\tif (value) {\n\t\t\t\t\tvoid notifyOnSettingChanged(value);\n\t\t\t\t}\n\n\t\t\t\tcallStatus = 'ringing';\n\n\t\t\t\t(await Rooms.setCallStatusAndCallStartTime(room._id, callStatus)).modifiedCount && void notifyOnRoomChangedById(room._id);\n\n\t\t\t\tawait Message.saveSystemMessage('livechat_webrtc_video_call', room._id, i18n.t('Join_my_room_to_start_the_video_call'), this.user, {\n\t\t\t\t\tactionLinks: config.theme.actionLinks.webrtc,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst videoCall = {\n\t\t\t\trid: room._id,\n\t\t\t\tprovider: 'webrtc',\n\t\t\t\tcallStatus,\n\t\t\t};\n\t\t\treturn API.v1.success({ videoCall });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/webrtc.call/:callId',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isPUTWebRTCCallId },\n\t{\n\t\tasync put() {\n\t\t\tconst { callId } = this.urlParams;\n\t\t\tconst { rid, status } = this.bodyParams;\n\n\t\t\tconst room = await canSendMessageAsync(\n\t\t\t\trid,\n\t\t\t\t{\n\t\t\t\t\tuid: this.userId,\n\t\t\t\t\tusername: this.user.username,\n\t\t\t\t\ttype: this.user.type,\n\t\t\t\t},\n\t\t\t\t{},\n\t\t\t);\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('invalid-room');\n\t\t\t}\n\n\t\t\tif (!(await Omnichannel.isWithinMACLimit(room as IOmnichannelRoom))) {\n\t\t\t\tthrow new Error('error-mac-limit-reached');\n\t\t\t}\n\n\t\t\tconst call = await Messages.findOneById(callId);\n\t\t\tif (!call || call.t !== 'livechat_webrtc_video_call') {\n\t\t\t\tthrow new Error('invalid-callId');\n\t\t\t}\n\n\t\t\tawait Livechat.updateCallStatus(callId, rid, status, this.user);\n\n\t\t\treturn API.v1.success({ status });\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Message, Omnichannel;\n    module.link(\"@rocket.chat/core-services\", {\n      Message(v) {\n        Message = v;\n      },\n      Omnichannel(v) {\n        Omnichannel = v;\n      }\n    }, 0);\n    let Messages, Settings, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      },\n      Settings(v) {\n        Settings = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 1);\n    let isGETWebRTCCall, isPUTWebRTCCallId;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isGETWebRTCCall(v) {\n        isGETWebRTCCall = v;\n      },\n      isPUTWebRTCCallId(v) {\n        isPUTWebRTCCallId = v;\n      }\n    }, 2);\n    let i18n;\n    module.link(\"../../../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 3);\n    let API;\n    module.link(\"../../../../api/server\", {\n      API(v) {\n        API = v;\n      }\n    }, 4);\n    let canSendMessageAsync;\n    module.link(\"../../../../authorization/server/functions/canSendMessage\", {\n      canSendMessageAsync(v) {\n        canSendMessageAsync = v;\n      }\n    }, 5);\n    let notifyOnRoomChangedById, notifyOnSettingChanged;\n    module.link(\"../../../../lib/server/lib/notifyListener\", {\n      notifyOnRoomChangedById(v) {\n        notifyOnRoomChangedById = v;\n      },\n      notifyOnSettingChanged(v) {\n        notifyOnSettingChanged = v;\n      }\n    }, 6);\n    let rcSettings;\n    module.link(\"../../../../settings/server\", {\n      settings(v) {\n        rcSettings = v;\n      }\n    }, 7);\n    let Livechat;\n    module.link(\"../../lib/LivechatTyped\", {\n      Livechat(v) {\n        Livechat = v;\n      }\n    }, 8);\n    let settings;\n    module.link(\"../lib/livechat\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 9);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('livechat/webrtc.call', {\n      authRequired: true,\n      permissionsRequired: ['view-l-room'],\n      validateParams: isGETWebRTCCall\n    }, {\n      async get() {\n        var _config$theme, _config$theme$actionL;\n        const room = await canSendMessageAsync(this.queryParams.rid, {\n          uid: this.userId,\n          username: this.user.username,\n          type: this.user.type\n        }, {});\n        if (!room) {\n          throw new Error('invalid-room');\n        }\n        if (!(await Omnichannel.isWithinMACLimit(room))) {\n          throw new Error('error-mac-limit-reached');\n        }\n        const webrtcCallingAllowed = rcSettings.get('WebRTC_Enabled') === true && rcSettings.get('Omnichannel_call_provider') === 'WebRTC';\n        if (!webrtcCallingAllowed) {\n          throw new Error('webRTC calling not enabled');\n        }\n        const config = await settings();\n        if (!((_config$theme = config.theme) !== null && _config$theme !== void 0 && (_config$theme$actionL = _config$theme.actionLinks) !== null && _config$theme$actionL !== void 0 && _config$theme$actionL.webrtc)) {\n          throw new Error('invalid-livechat-config');\n        }\n        let {\n          callStatus\n        } = room;\n        if (!callStatus || callStatus === 'ended' || callStatus === 'declined') {\n          const {\n            value\n          } = await Settings.incrementValueById('WebRTC_Calls_Count', 1, {\n            returnDocument: 'after'\n          });\n          if (value) {\n            void notifyOnSettingChanged(value);\n          }\n          callStatus = 'ringing';\n          (await Rooms.setCallStatusAndCallStartTime(room._id, callStatus)).modifiedCount && void notifyOnRoomChangedById(room._id);\n          await Message.saveSystemMessage('livechat_webrtc_video_call', room._id, i18n.t('Join_my_room_to_start_the_video_call'), this.user, {\n            actionLinks: config.theme.actionLinks.webrtc\n          });\n        }\n        const videoCall = {\n          rid: room._id,\n          provider: 'webrtc',\n          callStatus\n        };\n        return API.v1.success({\n          videoCall\n        });\n      }\n    });\n    API.v1.addRoute('livechat/webrtc.call/:callId', {\n      authRequired: true,\n      permissionsRequired: ['view-l-room'],\n      validateParams: isPUTWebRTCCallId\n    }, {\n      async put() {\n        const {\n          callId\n        } = this.urlParams;\n        const {\n          rid,\n          status\n        } = this.bodyParams;\n        const room = await canSendMessageAsync(rid, {\n          uid: this.userId,\n          username: this.user.username,\n          type: this.user.type\n        }, {});\n        if (!room) {\n          throw new Error('invalid-room');\n        }\n        if (!(await Omnichannel.isWithinMACLimit(room))) {\n          throw new Error('error-mac-limit-reached');\n        }\n        const call = await Messages.findOneById(callId);\n        if (!call || call.t !== 'livechat_webrtc_video_call') {\n          throw new Error('invalid-callId');\n        }\n        await Livechat.updateCallStatus(callId, rid, status, this.user);\n        return API.v1.success({\n          status\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Message","Omnichannel","module","link","v","Messages","Settings","Rooms","isGETWebRTCCall","isPUTWebRTCCallId","i18n","API","canSendMessageAsync","notifyOnRoomChangedById","notifyOnSettingChanged","rcSettings","settings","Livechat","__reifyWaitForDeps__","v1","addRoute","authRequired","permissionsRequired","validateParams","get","_config$theme","_config$theme$actionL","room","queryParams","rid","uid","userId","username","user","type","Error","isWithinMACLimit","webrtcCallingAllowed","config","theme","actionLinks","webrtc","callStatus","value","incrementValueById","returnDocument","setCallStatusAndCallStartTime","_id","modifiedCount","saveSystemMessage","t","videoCall","provider","success","put","callId","urlParams","status","bodyParams","call","findOneById","updateCallStatus","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/api/v1/videoCall.ts"],"sourcesContent":["import { Message, Omnichannel } from '@rocket.chat/core-services';\nimport type { IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { Messages, Settings, Rooms } from '@rocket.chat/models';\nimport { isGETWebRTCCall, isPUTWebRTCCallId } from '@rocket.chat/rest-typings';\n\nimport { i18n } from '../../../../../server/lib/i18n';\nimport { API } from '../../../../api/server';\nimport { canSendMessageAsync } from '../../../../authorization/server/functions/canSendMessage';\nimport { notifyOnRoomChangedById, notifyOnSettingChanged } from '../../../../lib/server/lib/notifyListener';\nimport { settings as rcSettings } from '../../../../settings/server';\nimport { Livechat } from '../../lib/LivechatTyped';\nimport { settings } from '../lib/livechat';\n\nAPI.v1.addRoute(\n\t'livechat/webrtc.call',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETWebRTCCall },\n\t{\n\t\tasync get() {\n\t\t\tconst room = await canSendMessageAsync(\n\t\t\t\tthis.queryParams.rid,\n\t\t\t\t{\n\t\t\t\t\tuid: this.userId,\n\t\t\t\t\tusername: this.user.username,\n\t\t\t\t\ttype: this.user.type,\n\t\t\t\t},\n\t\t\t\t{},\n\t\t\t);\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('invalid-room');\n\t\t\t}\n\n\t\t\tif (!(await Omnichannel.isWithinMACLimit(room as IOmnichannelRoom))) {\n\t\t\t\tthrow new Error('error-mac-limit-reached');\n\t\t\t}\n\n\t\t\tconst webrtcCallingAllowed = rcSettings.get('WebRTC_Enabled') === true && rcSettings.get('Omnichannel_call_provider') === 'WebRTC';\n\t\t\tif (!webrtcCallingAllowed) {\n\t\t\t\tthrow new Error('webRTC calling not enabled');\n\t\t\t}\n\n\t\t\tconst config = await settings();\n\t\t\tif (!config.theme?.actionLinks?.webrtc) {\n\t\t\t\tthrow new Error('invalid-livechat-config');\n\t\t\t}\n\n\t\t\tlet { callStatus } = room;\n\n\t\t\tif (!callStatus || callStatus === 'ended' || callStatus === 'declined') {\n\t\t\t\tconst { value } = await Settings.incrementValueById('WebRTC_Calls_Count', 1, { returnDocument: 'after' });\n\t\t\t\tif (value) {\n\t\t\t\t\tvoid notifyOnSettingChanged(value);\n\t\t\t\t}\n\n\t\t\t\tcallStatus = 'ringing';\n\n\t\t\t\t(await Rooms.setCallStatusAndCallStartTime(room._id, callStatus)).modifiedCount && void notifyOnRoomChangedById(room._id);\n\n\t\t\t\tawait Message.saveSystemMessage('livechat_webrtc_video_call', room._id, i18n.t('Join_my_room_to_start_the_video_call'), this.user, {\n\t\t\t\t\tactionLinks: config.theme.actionLinks.webrtc,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst videoCall = {\n\t\t\t\trid: room._id,\n\t\t\t\tprovider: 'webrtc',\n\t\t\t\tcallStatus,\n\t\t\t};\n\t\t\treturn API.v1.success({ videoCall });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/webrtc.call/:callId',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isPUTWebRTCCallId },\n\t{\n\t\tasync put() {\n\t\t\tconst { callId } = this.urlParams;\n\t\t\tconst { rid, status } = this.bodyParams;\n\n\t\t\tconst room = await canSendMessageAsync(\n\t\t\t\trid,\n\t\t\t\t{\n\t\t\t\t\tuid: this.userId,\n\t\t\t\t\tusername: this.user.username,\n\t\t\t\t\ttype: this.user.type,\n\t\t\t\t},\n\t\t\t\t{},\n\t\t\t);\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('invalid-room');\n\t\t\t}\n\n\t\t\tif (!(await Omnichannel.isWithinMACLimit(room as IOmnichannelRoom))) {\n\t\t\t\tthrow new Error('error-mac-limit-reached');\n\t\t\t}\n\n\t\t\tconst call = await Messages.findOneById(callId);\n\t\t\tif (!call || call.t !== 'livechat_webrtc_video_call') {\n\t\t\t\tthrow new Error('invalid-callId');\n\t\t\t}\n\n\t\t\tawait Livechat.updateCallStatus(callId, rid, status, this.user);\n\n\t\t\treturn API.v1.success({ status });\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"cb6d2247d57f5e366fc28ae882f35ee054bb591b"}
