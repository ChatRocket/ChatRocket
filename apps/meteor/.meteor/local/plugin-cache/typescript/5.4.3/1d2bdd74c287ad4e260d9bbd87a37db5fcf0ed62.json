{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Imports.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/Imports.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Imports.ts","inputSourceMap":{"version":3,"file":"server/models/raw/Imports.ts","sourceRoot":"","sources":["server/models/raw/Imports.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,WAAW,EAAE,MAAM,+BAA+B,CAAC;AAC5D,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,YAAa,SAAQ,OAAgB;IACjD,YAAY,EAAM;QACjB,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IACrB,CAAC;IAES,YAAY;QACrB,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,KAAK,CAAC,cAAc;QACnB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QAE9E,OAAO,OAAO,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,yBAAyB,CAAC,aAAkC;QACjE,OAAO,OAAO,CACb,MAAM,IAAI,CAAC,OAAO,CACjB;YACC,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE;YACrB,MAAM,EAAE,EAAE,GAAG,EAAE,aAAa,EAAE;SAC9B,EACD,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAC1B,CACD,CAAC;IACH,CAAC;IAED,uBAAuB;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IAC/E,CAAC;IAED,4BAA4B,CAAC,EAAU;QACtC,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IACjG,CAAC;IAED,+BAA+B,CAAC,MAA+C;QAC9E,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IACtH,CAAC;IAED,wBAAwB,CAAC,UAAgC,EAAE;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;IAC5C,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,EAAU,EAAE,UAA6C,EAAE,UAAU,GAAG,CAAC;QACjG,OAAO,IAAI,CAAC,SAAS,CACpB,EAAE,GAAG,EAAE,EAAE,EAAE,EACX;YACC,IAAI,EAAE;gBACL,aAAa,EAAE,UAAU;gBACzB,CAAC,SAAS,UAAU,EAAE,CAAC,EAAE,UAAU;aACnC;SACD,CACD,CAAC;IACH,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,EAAU,EAAE,MAAyB;QAC7D,OAAO,IAAI,CAAC,SAAS,CACpB,EAAE,GAAG,EAAE,EAAE,EAAE,EACX;YACC,IAAI,EAAE;gBACL,MAAM;aACN;SACD,CACD,CAAC;IACH,CAAC;CACD","sourcesContent":["import type { IImport } from '@rocket.chat/core-typings';\nimport type { IImportsModel } from '@rocket.chat/model-typings';\nimport type { Db, Document, FindCursor, FindOptions, UpdateResult, IndexDescription } from 'mongodb';\n\nimport { ensureArray } from '../../../lib/utils/arrayUtils';\nimport { BaseRaw } from './BaseRaw';\n\nexport class ImportsModel extends BaseRaw<IImport> implements IImportsModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'import');\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { ts: -1 } }, { key: { valid: 1 } }];\n\t}\n\n\tasync findLastImport(): Promise<IImport | undefined> {\n\t\tconst imports = await this.find({}, { sort: { ts: -1 }, limit: 1 }).toArray();\n\n\t\treturn imports.shift();\n\t}\n\n\tasync hasValidOperationInStatus(allowedStatus: IImport['status'][]): Promise<boolean> {\n\t\treturn Boolean(\n\t\t\tawait this.findOne(\n\t\t\t\t{\n\t\t\t\t\tvalid: { $ne: false },\n\t\t\t\t\tstatus: { $in: allowedStatus },\n\t\t\t\t},\n\t\t\t\t{ projection: { _id: 1 } },\n\t\t\t),\n\t\t);\n\t}\n\n\tinvalidateAllOperations(): Promise<UpdateResult | Document> {\n\t\treturn this.updateMany({ valid: { $ne: false } }, { $set: { valid: false } });\n\t}\n\n\tinvalidateOperationsExceptId(id: string): Promise<UpdateResult | Document> {\n\t\treturn this.updateMany({ valid: { $ne: false }, _id: { $ne: id } }, { $set: { valid: false } });\n\t}\n\n\tinvalidateOperationsNotInStatus(status: IImport['status'] | IImport['status'][]): Promise<UpdateResult | Document> {\n\t\treturn this.updateMany({ valid: { $ne: false }, status: { $nin: ensureArray(status) } }, { $set: { valid: false } });\n\t}\n\n\tfindAllPendingOperations(options: FindOptions<IImport> = {}): FindCursor<IImport> {\n\t\treturn this.find({ valid: true }, options);\n\t}\n\n\tasync increaseTotalCount(id: string, recordType: 'users' | 'channels' | 'messages', increaseBy = 1): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{ _id: id },\n\t\t\t{\n\t\t\t\t$inc: {\n\t\t\t\t\t'count.total': increaseBy,\n\t\t\t\t\t[`count.${recordType}`]: increaseBy,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tasync setOperationStatus(id: string, status: IImport['status']): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{ _id: id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tstatus,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Imports.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/Imports.ts","inputSourceMap":{"version":3,"file":"server/models/raw/Imports.ts","sourceRoot":"","sources":["server/models/raw/Imports.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,WAAW,EAAE,MAAM,+BAA+B,CAAC;AAC5D,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,YAAa,SAAQ,OAAgB;IACjD,YAAY,EAAM;QACjB,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IACrB,CAAC;IAES,YAAY;QACrB,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,KAAK,CAAC,cAAc;QACnB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QAE9E,OAAO,OAAO,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,yBAAyB,CAAC,aAAkC;QACjE,OAAO,OAAO,CACb,MAAM,IAAI,CAAC,OAAO,CACjB;YACC,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE;YACrB,MAAM,EAAE,EAAE,GAAG,EAAE,aAAa,EAAE;SAC9B,EACD,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAC1B,CACD,CAAC;IACH,CAAC;IAED,uBAAuB;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IAC/E,CAAC;IAED,4BAA4B,CAAC,EAAU;QACtC,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IACjG,CAAC;IAED,+BAA+B,CAAC,MAA+C;QAC9E,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IACtH,CAAC;IAED,wBAAwB,CAAC,UAAgC,EAAE;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;IAC5C,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,EAAU,EAAE,UAA6C,EAAE,UAAU,GAAG,CAAC;QACjG,OAAO,IAAI,CAAC,SAAS,CACpB,EAAE,GAAG,EAAE,EAAE,EAAE,EACX;YACC,IAAI,EAAE;gBACL,aAAa,EAAE,UAAU;gBACzB,CAAC,SAAS,UAAU,EAAE,CAAC,EAAE,UAAU;aACnC;SACD,CACD,CAAC;IACH,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,EAAU,EAAE,MAAyB;QAC7D,OAAO,IAAI,CAAC,SAAS,CACpB,EAAE,GAAG,EAAE,EAAE,EAAE,EACX;YACC,IAAI,EAAE;gBACL,MAAM;aACN;SACD,CACD,CAAC;IACH,CAAC;CACD","sourcesContent":["import type { IImport } from '@rocket.chat/core-typings';\nimport type { IImportsModel } from '@rocket.chat/model-typings';\nimport type { Db, Document, FindCursor, FindOptions, UpdateResult, IndexDescription } from 'mongodb';\n\nimport { ensureArray } from '../../../lib/utils/arrayUtils';\nimport { BaseRaw } from './BaseRaw';\n\nexport class ImportsModel extends BaseRaw<IImport> implements IImportsModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'import');\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { ts: -1 } }, { key: { valid: 1 } }];\n\t}\n\n\tasync findLastImport(): Promise<IImport | undefined> {\n\t\tconst imports = await this.find({}, { sort: { ts: -1 }, limit: 1 }).toArray();\n\n\t\treturn imports.shift();\n\t}\n\n\tasync hasValidOperationInStatus(allowedStatus: IImport['status'][]): Promise<boolean> {\n\t\treturn Boolean(\n\t\t\tawait this.findOne(\n\t\t\t\t{\n\t\t\t\t\tvalid: { $ne: false },\n\t\t\t\t\tstatus: { $in: allowedStatus },\n\t\t\t\t},\n\t\t\t\t{ projection: { _id: 1 } },\n\t\t\t),\n\t\t);\n\t}\n\n\tinvalidateAllOperations(): Promise<UpdateResult | Document> {\n\t\treturn this.updateMany({ valid: { $ne: false } }, { $set: { valid: false } });\n\t}\n\n\tinvalidateOperationsExceptId(id: string): Promise<UpdateResult | Document> {\n\t\treturn this.updateMany({ valid: { $ne: false }, _id: { $ne: id } }, { $set: { valid: false } });\n\t}\n\n\tinvalidateOperationsNotInStatus(status: IImport['status'] | IImport['status'][]): Promise<UpdateResult | Document> {\n\t\treturn this.updateMany({ valid: { $ne: false }, status: { $nin: ensureArray(status) } }, { $set: { valid: false } });\n\t}\n\n\tfindAllPendingOperations(options: FindOptions<IImport> = {}): FindCursor<IImport> {\n\t\treturn this.find({ valid: true }, options);\n\t}\n\n\tasync increaseTotalCount(id: string, recordType: 'users' | 'channels' | 'messages', increaseBy = 1): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{ _id: id },\n\t\t\t{\n\t\t\t\t$inc: {\n\t\t\t\t\t'count.total': increaseBy,\n\t\t\t\t\t[`count.${recordType}`]: increaseBy,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tasync setOperationStatus(id: string, status: IImport['status']): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{ _id: id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tstatus,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      ImportsModel: () => ImportsModel\n    });\n    let ensureArray;\n    module.link(\"../../../lib/utils/arrayUtils\", {\n      ensureArray(v) {\n        ensureArray = v;\n      }\n    }, 0);\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class ImportsModel extends BaseRaw {\n      constructor(db) {\n        super(db, 'import');\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            ts: -1\n          }\n        }, {\n          key: {\n            valid: 1\n          }\n        }];\n      }\n      async findLastImport() {\n        const imports = await this.find({}, {\n          sort: {\n            ts: -1\n          },\n          limit: 1\n        }).toArray();\n        return imports.shift();\n      }\n      async hasValidOperationInStatus(allowedStatus) {\n        return Boolean(await this.findOne({\n          valid: {\n            $ne: false\n          },\n          status: {\n            $in: allowedStatus\n          }\n        }, {\n          projection: {\n            _id: 1\n          }\n        }));\n      }\n      invalidateAllOperations() {\n        return this.updateMany({\n          valid: {\n            $ne: false\n          }\n        }, {\n          $set: {\n            valid: false\n          }\n        });\n      }\n      invalidateOperationsExceptId(id) {\n        return this.updateMany({\n          valid: {\n            $ne: false\n          },\n          _id: {\n            $ne: id\n          }\n        }, {\n          $set: {\n            valid: false\n          }\n        });\n      }\n      invalidateOperationsNotInStatus(status) {\n        return this.updateMany({\n          valid: {\n            $ne: false\n          },\n          status: {\n            $nin: ensureArray(status)\n          }\n        }, {\n          $set: {\n            valid: false\n          }\n        });\n      }\n      findAllPendingOperations() {\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return this.find({\n          valid: true\n        }, options);\n      }\n      async increaseTotalCount(id, recordType) {\n        let increaseBy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        return this.updateOne({\n          _id: id\n        }, {\n          $inc: {\n            'count.total': increaseBy,\n            [\"count.\".concat(recordType)]: increaseBy\n          }\n        });\n      }\n      async setOperationStatus(id, status) {\n        return this.updateOne({\n          _id: id\n        }, {\n          $set: {\n            status\n          }\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","ImportsModel","ensureArray","link","v","BaseRaw","__reifyWaitForDeps__","constructor","db","modelIndexes","key","ts","valid","findLastImport","imports","find","sort","limit","toArray","shift","hasValidOperationInStatus","allowedStatus","Boolean","findOne","$ne","status","$in","projection","_id","invalidateAllOperations","updateMany","$set","invalidateOperationsExceptId","id","invalidateOperationsNotInStatus","$nin","findAllPendingOperations","options","arguments","length","undefined","increaseTotalCount","recordType","increaseBy","updateOne","$inc","concat","setOperationStatus","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/Imports.ts"],"sourcesContent":["import type { IImport } from '@rocket.chat/core-typings';\nimport type { IImportsModel } from '@rocket.chat/model-typings';\nimport type { Db, Document, FindCursor, FindOptions, UpdateResult, IndexDescription } from 'mongodb';\n\nimport { ensureArray } from '../../../lib/utils/arrayUtils';\nimport { BaseRaw } from './BaseRaw';\n\nexport class ImportsModel extends BaseRaw<IImport> implements IImportsModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'import');\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { ts: -1 } }, { key: { valid: 1 } }];\n\t}\n\n\tasync findLastImport(): Promise<IImport | undefined> {\n\t\tconst imports = await this.find({}, { sort: { ts: -1 }, limit: 1 }).toArray();\n\n\t\treturn imports.shift();\n\t}\n\n\tasync hasValidOperationInStatus(allowedStatus: IImport['status'][]): Promise<boolean> {\n\t\treturn Boolean(\n\t\t\tawait this.findOne(\n\t\t\t\t{\n\t\t\t\t\tvalid: { $ne: false },\n\t\t\t\t\tstatus: { $in: allowedStatus },\n\t\t\t\t},\n\t\t\t\t{ projection: { _id: 1 } },\n\t\t\t),\n\t\t);\n\t}\n\n\tinvalidateAllOperations(): Promise<UpdateResult | Document> {\n\t\treturn this.updateMany({ valid: { $ne: false } }, { $set: { valid: false } });\n\t}\n\n\tinvalidateOperationsExceptId(id: string): Promise<UpdateResult | Document> {\n\t\treturn this.updateMany({ valid: { $ne: false }, _id: { $ne: id } }, { $set: { valid: false } });\n\t}\n\n\tinvalidateOperationsNotInStatus(status: IImport['status'] | IImport['status'][]): Promise<UpdateResult | Document> {\n\t\treturn this.updateMany({ valid: { $ne: false }, status: { $nin: ensureArray(status) } }, { $set: { valid: false } });\n\t}\n\n\tfindAllPendingOperations(options: FindOptions<IImport> = {}): FindCursor<IImport> {\n\t\treturn this.find({ valid: true }, options);\n\t}\n\n\tasync increaseTotalCount(id: string, recordType: 'users' | 'channels' | 'messages', increaseBy = 1): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{ _id: id },\n\t\t\t{\n\t\t\t\t$inc: {\n\t\t\t\t\t'count.total': increaseBy,\n\t\t\t\t\t[`count.${recordType}`]: increaseBy,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tasync setOperationStatus(id: string, status: IImport['status']): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{ _id: id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tstatus,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"1d2bdd74c287ad4e260d9bbd87a37db5fcf0ed62"}
