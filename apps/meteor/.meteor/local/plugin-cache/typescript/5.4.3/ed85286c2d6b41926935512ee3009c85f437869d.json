{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.tsx","inputSourceMap":{"version":3,"file":"client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.tsx","sourceRoot":"","sources":["client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatVisitor, Serialized } from '@rocket.chat/core-typings';\nimport { Field, FieldLabel, FieldRow, FieldError, TextInput, ButtonGroup, Button, ContextualbarContent } from '@rocket.chat/fuselage';\nimport { CustomFieldsForm } from '@rocket.chat/ui-client';\nimport { useToastMessageDispatch, useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQueryClient } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\n\nimport { hasAtLeastOnePermission } from '../../../../../../app/authorization/client';\nimport { validateEmail } from '../../../../../../lib/emailValidator';\nimport { ContextualbarScrollableContent, ContextualbarFooter } from '../../../../../components/Contextualbar';\nimport { createToken } from '../../../../../lib/utils/createToken';\nimport { ContactManager as ContactManagerForm } from '../../../additionalForms';\nimport { FormSkeleton } from '../../components/FormSkeleton';\nimport { useCustomFieldsMetadata } from '../../hooks/useCustomFieldsMetadata';\n\ntype ContactNewEditProps = {\n\tid: string;\n\tdata?: { contact: Serialized<ILivechatVisitor> | null };\n\tclose(): void;\n};\n\ntype ContactFormData = {\n\ttoken: string;\n\tname: string;\n\temail: string;\n\tphone: string;\n\tusername: string;\n\tcustomFields: Record<any, any>;\n};\n\nconst DEFAULT_VALUES = {\n\ttoken: '',\n\tname: '',\n\temail: '',\n\tphone: '',\n\tusername: '',\n\tcustomFields: {},\n};\n\nconst getInitialValues = (data: ContactNewEditProps['data']): ContactFormData => {\n\tif (!data) {\n\t\treturn DEFAULT_VALUES;\n\t}\n\n\tconst { name, token, phone, visitorEmails, livechatData, contactManager } = data.contact ?? {};\n\n\treturn {\n\t\ttoken: token ?? '',\n\t\tname: name ?? '',\n\t\temail: visitorEmails ? visitorEmails[0].address : '',\n\t\tphone: phone ? phone[0].phoneNumber : '',\n\t\tcustomFields: livechatData ?? {},\n\t\tusername: contactManager?.username ?? '',\n\t};\n};\n\nconst ContactNewEdit = ({ id, data, close }: ContactNewEditProps): ReactElement => {\n\tconst { t } = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst queryClient = useQueryClient();\n\n\tconst canViewCustomFields = (): boolean =>\n\t\thasAtLeastOnePermission(['view-livechat-room-customfields', 'edit-livechat-room-customfields']);\n\n\tconst [userId, setUserId] = useState('no-agent-selected');\n\tconst saveContact = useEndpoint('POST', '/v1/omnichannel/contact');\n\tconst getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n\tconst getUserData = useEndpoint('GET', '/v1/users.info');\n\n\tconst { data: customFieldsMetadata = [], isInitialLoading: isLoadingCustomFields } = useCustomFieldsMetadata({\n\t\tscope: 'visitor',\n\t\tenabled: canViewCustomFields(),\n\t});\n\n\tconst initialValue = getInitialValues(data);\n\tconst { username: initialUsername } = initialValue;\n\n\tconst {\n\t\tregister,\n\t\tformState: { errors, isValid, isDirty, isSubmitting },\n\t\tcontrol,\n\t\tsetValue,\n\t\thandleSubmit,\n\t\tsetError,\n\t} = useForm<ContactFormData>({\n\t\tmode: 'onChange',\n\t\treValidateMode: 'onChange',\n\t\tdefaultValues: initialValue,\n\t});\n\n\tuseEffect(() => {\n\t\tif (!initialUsername) {\n\t\t\treturn;\n\t\t}\n\n\t\tgetUserData({ username: initialUsername }).then(({ user }) => {\n\t\t\tsetUserId(user._id);\n\t\t});\n\t}, [getUserData, initialUsername]);\n\n\tconst validateEmailFormat = (email: string): boolean | string => {\n\t\tif (!email || email === initialValue.email) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!validateEmail(email)) {\n\t\t\treturn t('error-invalid-email-address');\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst validateContactField = async (name: 'phone' | 'email', value: string, optional = true) => {\n\t\tif ((optional && !value) || value === initialValue[name]) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst query = { [name]: value } as Record<'phone' | 'email', string>;\n\t\tconst { contact } = await getContactBy(query);\n\t\treturn !contact || contact._id === id;\n\t};\n\n\tconst validateName = (v: string): string | boolean => (!v.trim() ? t('Required_field', { field: t('Name') }) : true);\n\n\tconst handleContactManagerChange = async (userId: string): Promise<void> => {\n\t\tsetUserId(userId);\n\n\t\tif (userId === 'no-agent-selected') {\n\t\t\tsetValue('username', '', { shouldDirty: true });\n\t\t\treturn;\n\t\t}\n\n\t\tconst { user } = await getUserData({ userId });\n\t\tsetValue('username', user.username || '', { shouldDirty: true });\n\t};\n\n\tconst validateAsync = async ({ phone = '', email = '' } = {}) => {\n\t\tconst isEmailValid = await validateContactField('email', email);\n\t\tconst isPhoneValid = await validateContactField('phone', phone);\n\n\t\t!isEmailValid && setError('email', { message: t('Email_already_exists') });\n\t\t!isPhoneValid && setError('phone', { message: t('Phone_already_exists') });\n\n\t\treturn isEmailValid && isPhoneValid;\n\t};\n\n\tconst handleSave = async (data: ContactFormData): Promise<void> => {\n\t\tif (!(await validateAsync(data))) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { name, phone, email, customFields, username, token } = data;\n\n\t\tconst payload = {\n\t\t\tname,\n\t\t\tphone,\n\t\t\temail,\n\t\t\tcustomFields,\n\t\t\ttoken: token || createToken(),\n\t\t\t...(username && { contactManager: { username } }),\n\t\t\t...(id && { _id: id }),\n\t\t};\n\n\t\ttry {\n\t\t\tawait saveContact(payload);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Saved') });\n\t\t\tawait queryClient.invalidateQueries({ queryKey: ['current-contacts'] });\n\t\t\tclose();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tif (isLoadingCustomFields) {\n\t\treturn (\n\t\t\t<ContextualbarContent>\n\t\t\t\t<FormSkeleton />\n\t\t\t</ContextualbarContent>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ContextualbarScrollableContent is='form' onSubmit={handleSubmit(handleSave)}>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Name')}*</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput {...register('name', { validate: validateName })} error={errors.name?.message} flexGrow={1} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t<FieldError>{errors.name?.message}</FieldError>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Email')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput {...register('email', { validate: validateEmailFormat })} error={errors.email?.message} flexGrow={1} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t<FieldError>{errors.email?.message}</FieldError>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Phone')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput {...register('phone')} error={errors.phone?.message} flexGrow={1} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t<FieldError>{errors.phone?.message}</FieldError>\n\t\t\t\t</Field>\n\t\t\t\t{canViewCustomFields() && <CustomFieldsForm formName='customFields' formControl={control} metadata={customFieldsMetadata} />}\n\t\t\t\t<ContactManagerForm value={userId} handler={handleContactManagerChange} />\n\t\t\t</ContextualbarScrollableContent>\n\t\t\t<ContextualbarFooter>\n\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t<Button flexGrow={1} onClick={close}>\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tmie='none'\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tonClick={handleSubmit(handleSave)}\n\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\tloading={isSubmitting}\n\t\t\t\t\t\tdisabled={!isValid || !isDirty}\n\t\t\t\t\t\tprimary\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</ContextualbarFooter>\n\t\t</>\n\t);\n};\n\nexport default ContactNewEdit;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.tsx","inputSourceMap":{"version":3,"file":"client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.tsx","sourceRoot":"","sources":["client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatVisitor, Serialized } from '@rocket.chat/core-typings';\nimport { Field, FieldLabel, FieldRow, FieldError, TextInput, ButtonGroup, Button, ContextualbarContent } from '@rocket.chat/fuselage';\nimport { CustomFieldsForm } from '@rocket.chat/ui-client';\nimport { useToastMessageDispatch, useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQueryClient } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\n\nimport { hasAtLeastOnePermission } from '../../../../../../app/authorization/client';\nimport { validateEmail } from '../../../../../../lib/emailValidator';\nimport { ContextualbarScrollableContent, ContextualbarFooter } from '../../../../../components/Contextualbar';\nimport { createToken } from '../../../../../lib/utils/createToken';\nimport { ContactManager as ContactManagerForm } from '../../../additionalForms';\nimport { FormSkeleton } from '../../components/FormSkeleton';\nimport { useCustomFieldsMetadata } from '../../hooks/useCustomFieldsMetadata';\n\ntype ContactNewEditProps = {\n\tid: string;\n\tdata?: { contact: Serialized<ILivechatVisitor> | null };\n\tclose(): void;\n};\n\ntype ContactFormData = {\n\ttoken: string;\n\tname: string;\n\temail: string;\n\tphone: string;\n\tusername: string;\n\tcustomFields: Record<any, any>;\n};\n\nconst DEFAULT_VALUES = {\n\ttoken: '',\n\tname: '',\n\temail: '',\n\tphone: '',\n\tusername: '',\n\tcustomFields: {},\n};\n\nconst getInitialValues = (data: ContactNewEditProps['data']): ContactFormData => {\n\tif (!data) {\n\t\treturn DEFAULT_VALUES;\n\t}\n\n\tconst { name, token, phone, visitorEmails, livechatData, contactManager } = data.contact ?? {};\n\n\treturn {\n\t\ttoken: token ?? '',\n\t\tname: name ?? '',\n\t\temail: visitorEmails ? visitorEmails[0].address : '',\n\t\tphone: phone ? phone[0].phoneNumber : '',\n\t\tcustomFields: livechatData ?? {},\n\t\tusername: contactManager?.username ?? '',\n\t};\n};\n\nconst ContactNewEdit = ({ id, data, close }: ContactNewEditProps): ReactElement => {\n\tconst { t } = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst queryClient = useQueryClient();\n\n\tconst canViewCustomFields = (): boolean =>\n\t\thasAtLeastOnePermission(['view-livechat-room-customfields', 'edit-livechat-room-customfields']);\n\n\tconst [userId, setUserId] = useState('no-agent-selected');\n\tconst saveContact = useEndpoint('POST', '/v1/omnichannel/contact');\n\tconst getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n\tconst getUserData = useEndpoint('GET', '/v1/users.info');\n\n\tconst { data: customFieldsMetadata = [], isInitialLoading: isLoadingCustomFields } = useCustomFieldsMetadata({\n\t\tscope: 'visitor',\n\t\tenabled: canViewCustomFields(),\n\t});\n\n\tconst initialValue = getInitialValues(data);\n\tconst { username: initialUsername } = initialValue;\n\n\tconst {\n\t\tregister,\n\t\tformState: { errors, isValid, isDirty, isSubmitting },\n\t\tcontrol,\n\t\tsetValue,\n\t\thandleSubmit,\n\t\tsetError,\n\t} = useForm<ContactFormData>({\n\t\tmode: 'onChange',\n\t\treValidateMode: 'onChange',\n\t\tdefaultValues: initialValue,\n\t});\n\n\tuseEffect(() => {\n\t\tif (!initialUsername) {\n\t\t\treturn;\n\t\t}\n\n\t\tgetUserData({ username: initialUsername }).then(({ user }) => {\n\t\t\tsetUserId(user._id);\n\t\t});\n\t}, [getUserData, initialUsername]);\n\n\tconst validateEmailFormat = (email: string): boolean | string => {\n\t\tif (!email || email === initialValue.email) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!validateEmail(email)) {\n\t\t\treturn t('error-invalid-email-address');\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst validateContactField = async (name: 'phone' | 'email', value: string, optional = true) => {\n\t\tif ((optional && !value) || value === initialValue[name]) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst query = { [name]: value } as Record<'phone' | 'email', string>;\n\t\tconst { contact } = await getContactBy(query);\n\t\treturn !contact || contact._id === id;\n\t};\n\n\tconst validateName = (v: string): string | boolean => (!v.trim() ? t('Required_field', { field: t('Name') }) : true);\n\n\tconst handleContactManagerChange = async (userId: string): Promise<void> => {\n\t\tsetUserId(userId);\n\n\t\tif (userId === 'no-agent-selected') {\n\t\t\tsetValue('username', '', { shouldDirty: true });\n\t\t\treturn;\n\t\t}\n\n\t\tconst { user } = await getUserData({ userId });\n\t\tsetValue('username', user.username || '', { shouldDirty: true });\n\t};\n\n\tconst validateAsync = async ({ phone = '', email = '' } = {}) => {\n\t\tconst isEmailValid = await validateContactField('email', email);\n\t\tconst isPhoneValid = await validateContactField('phone', phone);\n\n\t\t!isEmailValid && setError('email', { message: t('Email_already_exists') });\n\t\t!isPhoneValid && setError('phone', { message: t('Phone_already_exists') });\n\n\t\treturn isEmailValid && isPhoneValid;\n\t};\n\n\tconst handleSave = async (data: ContactFormData): Promise<void> => {\n\t\tif (!(await validateAsync(data))) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { name, phone, email, customFields, username, token } = data;\n\n\t\tconst payload = {\n\t\t\tname,\n\t\t\tphone,\n\t\t\temail,\n\t\t\tcustomFields,\n\t\t\ttoken: token || createToken(),\n\t\t\t...(username && { contactManager: { username } }),\n\t\t\t...(id && { _id: id }),\n\t\t};\n\n\t\ttry {\n\t\t\tawait saveContact(payload);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Saved') });\n\t\t\tawait queryClient.invalidateQueries({ queryKey: ['current-contacts'] });\n\t\t\tclose();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tif (isLoadingCustomFields) {\n\t\treturn (\n\t\t\t<ContextualbarContent>\n\t\t\t\t<FormSkeleton />\n\t\t\t</ContextualbarContent>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ContextualbarScrollableContent is='form' onSubmit={handleSubmit(handleSave)}>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Name')}*</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput {...register('name', { validate: validateName })} error={errors.name?.message} flexGrow={1} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t<FieldError>{errors.name?.message}</FieldError>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Email')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput {...register('email', { validate: validateEmailFormat })} error={errors.email?.message} flexGrow={1} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t<FieldError>{errors.email?.message}</FieldError>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Phone')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput {...register('phone')} error={errors.phone?.message} flexGrow={1} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t<FieldError>{errors.phone?.message}</FieldError>\n\t\t\t\t</Field>\n\t\t\t\t{canViewCustomFields() && <CustomFieldsForm formName='customFields' formControl={control} metadata={customFieldsMetadata} />}\n\t\t\t\t<ContactManagerForm value={userId} handler={handleContactManagerChange} />\n\t\t\t</ContextualbarScrollableContent>\n\t\t\t<ContextualbarFooter>\n\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t<Button flexGrow={1} onClick={close}>\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tmie='none'\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tonClick={handleSubmit(handleSave)}\n\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\tloading={isSubmitting}\n\t\t\t\t\t\tdisabled={!isValid || !isDirty}\n\t\t\t\t\t\tprimary\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</ContextualbarFooter>\n\t\t</>\n\t);\n};\n\nexport default ContactNewEdit;\n"]}}},"code":"let _extends;\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n}, 0);\nlet _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 1);\nlet Field, FieldLabel, FieldRow, FieldError, TextInput, ButtonGroup, Button, ContextualbarContent;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Field(v) {\n    Field = v;\n  },\n  FieldLabel(v) {\n    FieldLabel = v;\n  },\n  FieldRow(v) {\n    FieldRow = v;\n  },\n  FieldError(v) {\n    FieldError = v;\n  },\n  TextInput(v) {\n    TextInput = v;\n  },\n  ButtonGroup(v) {\n    ButtonGroup = v;\n  },\n  Button(v) {\n    Button = v;\n  },\n  ContextualbarContent(v) {\n    ContextualbarContent = v;\n  }\n}, 0);\nlet CustomFieldsForm;\nmodule.link(\"@rocket.chat/ui-client\", {\n  CustomFieldsForm(v) {\n    CustomFieldsForm = v;\n  }\n}, 1);\nlet useToastMessageDispatch, useEndpoint;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  },\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n}, 2);\nlet useQueryClient;\nmodule.link(\"@tanstack/react-query\", {\n  useQueryClient(v) {\n    useQueryClient = v;\n  }\n}, 3);\nlet React, useState, useEffect;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useState(v) {\n    useState = v;\n  },\n  useEffect(v) {\n    useEffect = v;\n  }\n}, 4);\nlet useForm;\nmodule.link(\"react-hook-form\", {\n  useForm(v) {\n    useForm = v;\n  }\n}, 5);\nlet useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 6);\nlet hasAtLeastOnePermission;\nmodule.link(\"../../../../../../app/authorization/client\", {\n  hasAtLeastOnePermission(v) {\n    hasAtLeastOnePermission = v;\n  }\n}, 7);\nlet validateEmail;\nmodule.link(\"../../../../../../lib/emailValidator\", {\n  validateEmail(v) {\n    validateEmail = v;\n  }\n}, 8);\nlet ContextualbarScrollableContent, ContextualbarFooter;\nmodule.link(\"../../../../../components/Contextualbar\", {\n  ContextualbarScrollableContent(v) {\n    ContextualbarScrollableContent = v;\n  },\n  ContextualbarFooter(v) {\n    ContextualbarFooter = v;\n  }\n}, 9);\nlet createToken;\nmodule.link(\"../../../../../lib/utils/createToken\", {\n  createToken(v) {\n    createToken = v;\n  }\n}, 10);\nlet ContactManagerForm;\nmodule.link(\"../../../additionalForms\", {\n  ContactManager(v) {\n    ContactManagerForm = v;\n  }\n}, 11);\nlet FormSkeleton;\nmodule.link(\"../../components/FormSkeleton\", {\n  FormSkeleton(v) {\n    FormSkeleton = v;\n  }\n}, 12);\nlet useCustomFieldsMetadata;\nmodule.link(\"../../hooks/useCustomFieldsMetadata\", {\n  useCustomFieldsMetadata(v) {\n    useCustomFieldsMetadata = v;\n  }\n}, 13);\nconst DEFAULT_VALUES = {\n  token: '',\n  name: '',\n  email: '',\n  phone: '',\n  username: '',\n  customFields: {}\n};\nconst getInitialValues = data => {\n  var _data$contact, _contactManager$usern;\n  if (!data) {\n    return DEFAULT_VALUES;\n  }\n  const {\n    name,\n    token,\n    phone,\n    visitorEmails,\n    livechatData,\n    contactManager\n  } = (_data$contact = data.contact) !== null && _data$contact !== void 0 ? _data$contact : {};\n  return {\n    token: token !== null && token !== void 0 ? token : '',\n    name: name !== null && name !== void 0 ? name : '',\n    email: visitorEmails ? visitorEmails[0].address : '',\n    phone: phone ? phone[0].phoneNumber : '',\n    customFields: livechatData !== null && livechatData !== void 0 ? livechatData : {},\n    username: (_contactManager$usern = contactManager === null || contactManager === void 0 ? void 0 : contactManager.username) !== null && _contactManager$usern !== void 0 ? _contactManager$usern : ''\n  };\n};\nconst ContactNewEdit = _ref => {\n  var _errors$name, _errors$name2, _errors$email, _errors$email2, _errors$phone, _errors$phone2;\n  let {\n    id,\n    data,\n    close\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const dispatchToastMessage = useToastMessageDispatch();\n  const queryClient = useQueryClient();\n  const canViewCustomFields = () => hasAtLeastOnePermission(['view-livechat-room-customfields', 'edit-livechat-room-customfields']);\n  const [userId, setUserId] = useState('no-agent-selected');\n  const saveContact = useEndpoint('POST', '/v1/omnichannel/contact');\n  const getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n  const getUserData = useEndpoint('GET', '/v1/users.info');\n  const {\n    data: customFieldsMetadata = [],\n    isInitialLoading: isLoadingCustomFields\n  } = useCustomFieldsMetadata({\n    scope: 'visitor',\n    enabled: canViewCustomFields()\n  });\n  const initialValue = getInitialValues(data);\n  const {\n    username: initialUsername\n  } = initialValue;\n  const {\n    register,\n    formState: {\n      errors,\n      isValid,\n      isDirty,\n      isSubmitting\n    },\n    control,\n    setValue,\n    handleSubmit,\n    setError\n  } = useForm({\n    mode: 'onChange',\n    reValidateMode: 'onChange',\n    defaultValues: initialValue\n  });\n  useEffect(() => {\n    if (!initialUsername) {\n      return;\n    }\n    getUserData({\n      username: initialUsername\n    }).then(_ref2 => {\n      let {\n        user\n      } = _ref2;\n      setUserId(user._id);\n    });\n  }, [getUserData, initialUsername]);\n  const validateEmailFormat = email => {\n    if (!email || email === initialValue.email) {\n      return true;\n    }\n    if (!validateEmail(email)) {\n      return t('error-invalid-email-address');\n    }\n    return true;\n  };\n  const validateContactField = async function (name, value) {\n    let optional = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    if (optional && !value || value === initialValue[name]) {\n      return true;\n    }\n    const query = {\n      [name]: value\n    };\n    const {\n      contact\n    } = await getContactBy(query);\n    return !contact || contact._id === id;\n  };\n  const validateName = v => !v.trim() ? t('Required_field', {\n    field: t('Name')\n  }) : true;\n  const handleContactManagerChange = async userId => {\n    setUserId(userId);\n    if (userId === 'no-agent-selected') {\n      setValue('username', '', {\n        shouldDirty: true\n      });\n      return;\n    }\n    const {\n      user\n    } = await getUserData({\n      userId\n    });\n    setValue('username', user.username || '', {\n      shouldDirty: true\n    });\n  };\n  const validateAsync = async function () {\n    let {\n      phone = '',\n      email = ''\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const isEmailValid = await validateContactField('email', email);\n    const isPhoneValid = await validateContactField('phone', phone);\n    !isEmailValid && setError('email', {\n      message: t('Email_already_exists')\n    });\n    !isPhoneValid && setError('phone', {\n      message: t('Phone_already_exists')\n    });\n    return isEmailValid && isPhoneValid;\n  };\n  const handleSave = async data => {\n    if (!(await validateAsync(data))) {\n      return;\n    }\n    const {\n      name,\n      phone,\n      email,\n      customFields,\n      username,\n      token\n    } = data;\n    const payload = _objectSpread(_objectSpread({\n      name,\n      phone,\n      email,\n      customFields,\n      token: token || createToken()\n    }, username && {\n      contactManager: {\n        username\n      }\n    }), id && {\n      _id: id\n    });\n    try {\n      await saveContact(payload);\n      dispatchToastMessage({\n        type: 'success',\n        message: t('Saved')\n      });\n      await queryClient.invalidateQueries({\n        queryKey: ['current-contacts']\n      });\n      close();\n    } catch (error) {\n      dispatchToastMessage({\n        type: 'error',\n        message: error\n      });\n    }\n  };\n  if (isLoadingCustomFields) {\n    return /*#__PURE__*/React.createElement(ContextualbarContent, null, /*#__PURE__*/React.createElement(FormSkeleton, null));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ContextualbarScrollableContent, {\n    is: \"form\",\n    onSubmit: handleSubmit(handleSave)\n  }, /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, null, t('Name'), \"*\"), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(TextInput, _extends({}, register('name', {\n    validate: validateName\n  }), {\n    error: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message,\n    flexGrow: 1\n  }))), /*#__PURE__*/React.createElement(FieldError, null, (_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, null, t('Email')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(TextInput, _extends({}, register('email', {\n    validate: validateEmailFormat\n  }), {\n    error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n    flexGrow: 1\n  }))), /*#__PURE__*/React.createElement(FieldError, null, (_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, null, t('Phone')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(TextInput, _extends({}, register('phone'), {\n    error: (_errors$phone = errors.phone) === null || _errors$phone === void 0 ? void 0 : _errors$phone.message,\n    flexGrow: 1\n  }))), /*#__PURE__*/React.createElement(FieldError, null, (_errors$phone2 = errors.phone) === null || _errors$phone2 === void 0 ? void 0 : _errors$phone2.message)), canViewCustomFields() && /*#__PURE__*/React.createElement(CustomFieldsForm, {\n    formName: \"customFields\",\n    formControl: control,\n    metadata: customFieldsMetadata\n  }), /*#__PURE__*/React.createElement(ContactManagerForm, {\n    value: userId,\n    handler: handleContactManagerChange\n  })), /*#__PURE__*/React.createElement(ContextualbarFooter, null, /*#__PURE__*/React.createElement(ButtonGroup, {\n    stretch: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    flexGrow: 1,\n    onClick: close\n  }, t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    mie: \"none\",\n    type: \"submit\",\n    onClick: handleSubmit(handleSave),\n    flexGrow: 1,\n    loading: isSubmitting,\n    disabled: !isValid || !isDirty,\n    primary: true\n  }, t('Save')))));\n};\nmodule.exportDefault(ContactNewEdit);","map":{"version":3,"names":["_extends","module","link","default","v","_objectSpread","Field","FieldLabel","FieldRow","FieldError","TextInput","ButtonGroup","Button","ContextualbarContent","CustomFieldsForm","useToastMessageDispatch","useEndpoint","useQueryClient","React","useState","useEffect","useForm","useTranslation","hasAtLeastOnePermission","validateEmail","ContextualbarScrollableContent","ContextualbarFooter","createToken","ContactManagerForm","ContactManager","FormSkeleton","useCustomFieldsMetadata","DEFAULT_VALUES","token","name","email","phone","username","customFields","getInitialValues","data","_data$contact","_contactManager$usern","visitorEmails","livechatData","contactManager","contact","address","phoneNumber","ContactNewEdit","_ref","_errors$name","_errors$name2","_errors$email","_errors$email2","_errors$phone","_errors$phone2","id","close","t","dispatchToastMessage","queryClient","canViewCustomFields","userId","setUserId","saveContact","getContactBy","getUserData","customFieldsMetadata","isInitialLoading","isLoadingCustomFields","scope","enabled","initialValue","initialUsername","register","formState","errors","isValid","isDirty","isSubmitting","control","setValue","handleSubmit","setError","mode","reValidateMode","defaultValues","then","_ref2","user","_id","validateEmailFormat","validateContactField","value","optional","arguments","length","undefined","query","validateName","trim","field","handleContactManagerChange","shouldDirty","validateAsync","isEmailValid","isPhoneValid","message","handleSave","payload","type","invalidateQueries","queryKey","error","createElement","Fragment","is","onSubmit","validate","flexGrow","formName","formControl","metadata","handler","stretch","onClick","mie","loading","disabled","primary","exportDefault"],"sources":["client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.tsx"],"sourcesContent":["import type { ILivechatVisitor, Serialized } from '@rocket.chat/core-typings';\nimport { Field, FieldLabel, FieldRow, FieldError, TextInput, ButtonGroup, Button, ContextualbarContent } from '@rocket.chat/fuselage';\nimport { CustomFieldsForm } from '@rocket.chat/ui-client';\nimport { useToastMessageDispatch, useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQueryClient } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\n\nimport { hasAtLeastOnePermission } from '../../../../../../app/authorization/client';\nimport { validateEmail } from '../../../../../../lib/emailValidator';\nimport { ContextualbarScrollableContent, ContextualbarFooter } from '../../../../../components/Contextualbar';\nimport { createToken } from '../../../../../lib/utils/createToken';\nimport { ContactManager as ContactManagerForm } from '../../../additionalForms';\nimport { FormSkeleton } from '../../components/FormSkeleton';\nimport { useCustomFieldsMetadata } from '../../hooks/useCustomFieldsMetadata';\n\ntype ContactNewEditProps = {\n\tid: string;\n\tdata?: { contact: Serialized<ILivechatVisitor> | null };\n\tclose(): void;\n};\n\ntype ContactFormData = {\n\ttoken: string;\n\tname: string;\n\temail: string;\n\tphone: string;\n\tusername: string;\n\tcustomFields: Record<any, any>;\n};\n\nconst DEFAULT_VALUES = {\n\ttoken: '',\n\tname: '',\n\temail: '',\n\tphone: '',\n\tusername: '',\n\tcustomFields: {},\n};\n\nconst getInitialValues = (data: ContactNewEditProps['data']): ContactFormData => {\n\tif (!data) {\n\t\treturn DEFAULT_VALUES;\n\t}\n\n\tconst { name, token, phone, visitorEmails, livechatData, contactManager } = data.contact ?? {};\n\n\treturn {\n\t\ttoken: token ?? '',\n\t\tname: name ?? '',\n\t\temail: visitorEmails ? visitorEmails[0].address : '',\n\t\tphone: phone ? phone[0].phoneNumber : '',\n\t\tcustomFields: livechatData ?? {},\n\t\tusername: contactManager?.username ?? '',\n\t};\n};\n\nconst ContactNewEdit = ({ id, data, close }: ContactNewEditProps): ReactElement => {\n\tconst { t } = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst queryClient = useQueryClient();\n\n\tconst canViewCustomFields = (): boolean =>\n\t\thasAtLeastOnePermission(['view-livechat-room-customfields', 'edit-livechat-room-customfields']);\n\n\tconst [userId, setUserId] = useState('no-agent-selected');\n\tconst saveContact = useEndpoint('POST', '/v1/omnichannel/contact');\n\tconst getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n\tconst getUserData = useEndpoint('GET', '/v1/users.info');\n\n\tconst { data: customFieldsMetadata = [], isInitialLoading: isLoadingCustomFields } = useCustomFieldsMetadata({\n\t\tscope: 'visitor',\n\t\tenabled: canViewCustomFields(),\n\t});\n\n\tconst initialValue = getInitialValues(data);\n\tconst { username: initialUsername } = initialValue;\n\n\tconst {\n\t\tregister,\n\t\tformState: { errors, isValid, isDirty, isSubmitting },\n\t\tcontrol,\n\t\tsetValue,\n\t\thandleSubmit,\n\t\tsetError,\n\t} = useForm<ContactFormData>({\n\t\tmode: 'onChange',\n\t\treValidateMode: 'onChange',\n\t\tdefaultValues: initialValue,\n\t});\n\n\tuseEffect(() => {\n\t\tif (!initialUsername) {\n\t\t\treturn;\n\t\t}\n\n\t\tgetUserData({ username: initialUsername }).then(({ user }) => {\n\t\t\tsetUserId(user._id);\n\t\t});\n\t}, [getUserData, initialUsername]);\n\n\tconst validateEmailFormat = (email: string): boolean | string => {\n\t\tif (!email || email === initialValue.email) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!validateEmail(email)) {\n\t\t\treturn t('error-invalid-email-address');\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst validateContactField = async (name: 'phone' | 'email', value: string, optional = true) => {\n\t\tif ((optional && !value) || value === initialValue[name]) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst query = { [name]: value } as Record<'phone' | 'email', string>;\n\t\tconst { contact } = await getContactBy(query);\n\t\treturn !contact || contact._id === id;\n\t};\n\n\tconst validateName = (v: string): string | boolean => (!v.trim() ? t('Required_field', { field: t('Name') }) : true);\n\n\tconst handleContactManagerChange = async (userId: string): Promise<void> => {\n\t\tsetUserId(userId);\n\n\t\tif (userId === 'no-agent-selected') {\n\t\t\tsetValue('username', '', { shouldDirty: true });\n\t\t\treturn;\n\t\t}\n\n\t\tconst { user } = await getUserData({ userId });\n\t\tsetValue('username', user.username || '', { shouldDirty: true });\n\t};\n\n\tconst validateAsync = async ({ phone = '', email = '' } = {}) => {\n\t\tconst isEmailValid = await validateContactField('email', email);\n\t\tconst isPhoneValid = await validateContactField('phone', phone);\n\n\t\t!isEmailValid && setError('email', { message: t('Email_already_exists') });\n\t\t!isPhoneValid && setError('phone', { message: t('Phone_already_exists') });\n\n\t\treturn isEmailValid && isPhoneValid;\n\t};\n\n\tconst handleSave = async (data: ContactFormData): Promise<void> => {\n\t\tif (!(await validateAsync(data))) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { name, phone, email, customFields, username, token } = data;\n\n\t\tconst payload = {\n\t\t\tname,\n\t\t\tphone,\n\t\t\temail,\n\t\t\tcustomFields,\n\t\t\ttoken: token || createToken(),\n\t\t\t...(username && { contactManager: { username } }),\n\t\t\t...(id && { _id: id }),\n\t\t};\n\n\t\ttry {\n\t\t\tawait saveContact(payload);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Saved') });\n\t\t\tawait queryClient.invalidateQueries({ queryKey: ['current-contacts'] });\n\t\t\tclose();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tif (isLoadingCustomFields) {\n\t\treturn (\n\t\t\t<ContextualbarContent>\n\t\t\t\t<FormSkeleton />\n\t\t\t</ContextualbarContent>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ContextualbarScrollableContent is='form' onSubmit={handleSubmit(handleSave)}>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Name')}*</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput {...register('name', { validate: validateName })} error={errors.name?.message} flexGrow={1} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t<FieldError>{errors.name?.message}</FieldError>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Email')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput {...register('email', { validate: validateEmailFormat })} error={errors.email?.message} flexGrow={1} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t<FieldError>{errors.email?.message}</FieldError>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Phone')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput {...register('phone')} error={errors.phone?.message} flexGrow={1} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t<FieldError>{errors.phone?.message}</FieldError>\n\t\t\t\t</Field>\n\t\t\t\t{canViewCustomFields() && <CustomFieldsForm formName='customFields' formControl={control} metadata={customFieldsMetadata} />}\n\t\t\t\t<ContactManagerForm value={userId} handler={handleContactManagerChange} />\n\t\t\t</ContextualbarScrollableContent>\n\t\t\t<ContextualbarFooter>\n\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t<Button flexGrow={1} onClick={close}>\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tmie='none'\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tonClick={handleSubmit(handleSave)}\n\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\tloading={isSubmitting}\n\t\t\t\t\t\tdisabled={!isValid || !isDirty}\n\t\t\t\t\t\tprimary\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</ContextualbarFooter>\n\t\t</>\n\t);\n};\n\nexport default ContactNewEdit;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ed85286c2d6b41926935512ee3009c85f437869d"}
