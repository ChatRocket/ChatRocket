{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveUser/validateUserData.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/saveUser/validateUserData.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveUser/validateUserData.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/saveUser/validateUserData.ts","sourceRoot":"","sources":["app/lib/server/functions/saveUser/validateUserData.ts"],"names":[],"mappings":"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","sourcesContent":["import { MeteorError } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { makeFunction } from '@rocket.chat/patch-injection';\nimport escape from 'lodash.escape';\n\nimport { trim } from '../../../../../lib/utils/stringUtils';\nimport { getRoleIds } from '../../../../authorization/server/functions/getRoles';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../../settings/server';\nimport { checkEmailAvailability } from '../checkEmailAvailability';\nimport { checkUsernameAvailability } from '../checkUsernameAvailability';\nimport type { SaveUserData } from './saveUser';\n\nexport const validateUserData = makeFunction(async (userId: IUser['_id'], userData: SaveUserData): Promise<void> => {\n\tconst existingRoles = await getRoleIds();\n\n\tif (userData.verified && userData._id && userId === userData._id) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Editing email verification is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Editing_user',\n\t\t});\n\t}\n\n\tif (userData._id && userId !== userData._id && !(await hasPermissionAsync(userId, 'edit-other-user-info'))) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Editing user is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Editing_user',\n\t\t});\n\t}\n\n\tif (!userData._id && !(await hasPermissionAsync(userId, 'create-user'))) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Adding user is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Adding_user',\n\t\t});\n\t}\n\n\tif (userData.roles) {\n\t\tconst newRoles = userData.roles.filter((roleId) => !existingRoles.includes(roleId));\n\t\tif (newRoles.length > 0) {\n\t\t\tthrow new MeteorError('error-action-not-allowed', 'The field Roles consist invalid role id', {\n\t\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\t\taction: 'Assign_role',\n\t\t\t});\n\t\t}\n\t}\n\n\tif (userData.roles?.includes('admin') && !(await hasPermissionAsync(userId, 'assign-admin-role'))) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Assigning admin is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Assign_admin',\n\t\t});\n\t}\n\n\tif (settings.get('Accounts_RequireNameForSignUp') && !userData._id && !trim(userData.name)) {\n\t\tthrow new MeteorError('error-the-field-is-required', 'The field Name is required', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tfield: 'Name',\n\t\t});\n\t}\n\n\tif (!userData._id && !trim(userData.username)) {\n\t\tthrow new MeteorError('error-the-field-is-required', 'The field Username is required', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tfield: 'Username',\n\t\t});\n\t}\n\n\tlet nameValidation;\n\n\ttry {\n\t\tnameValidation = new RegExp(`^${settings.get('UTF8_User_Names_Validation')}$`);\n\t} catch (e) {\n\t\tnameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n\t}\n\n\tif (userData.username && !nameValidation.test(userData.username)) {\n\t\tthrow new MeteorError('error-input-is-not-a-valid-field', `${escape(userData.username)} is not a valid username`, {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tinput: userData.username,\n\t\t\tfield: 'Username',\n\t\t});\n\t}\n\n\tif (!userData._id && !userData.password && !userData.setRandomPassword) {\n\t\tthrow new MeteorError('error-the-field-is-required', 'The field Password is required', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tfield: 'Password',\n\t\t});\n\t}\n\n\tif (!userData._id) {\n\t\tif (userData.username && !(await checkUsernameAvailability(userData.username))) {\n\t\t\tthrow new MeteorError('error-field-unavailable', `${escape(userData.username)} is already in use :(`, {\n\t\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\t\tfield: userData.username,\n\t\t\t});\n\t\t}\n\n\t\tif (userData.email && !(await checkEmailAvailability(userData.email))) {\n\t\t\tthrow new MeteorError('error-field-unavailable', `${escape(userData.email)} is already in use :(`, {\n\t\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\t\tfield: userData.email,\n\t\t\t});\n\t\t}\n\t}\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveUser/validateUserData.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/saveUser/validateUserData.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/saveUser/validateUserData.ts","sourceRoot":"","sources":["app/lib/server/functions/saveUser/validateUserData.ts"],"names":[],"mappings":"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","sourcesContent":["import { MeteorError } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { makeFunction } from '@rocket.chat/patch-injection';\nimport escape from 'lodash.escape';\n\nimport { trim } from '../../../../../lib/utils/stringUtils';\nimport { getRoleIds } from '../../../../authorization/server/functions/getRoles';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../../settings/server';\nimport { checkEmailAvailability } from '../checkEmailAvailability';\nimport { checkUsernameAvailability } from '../checkUsernameAvailability';\nimport type { SaveUserData } from './saveUser';\n\nexport const validateUserData = makeFunction(async (userId: IUser['_id'], userData: SaveUserData): Promise<void> => {\n\tconst existingRoles = await getRoleIds();\n\n\tif (userData.verified && userData._id && userId === userData._id) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Editing email verification is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Editing_user',\n\t\t});\n\t}\n\n\tif (userData._id && userId !== userData._id && !(await hasPermissionAsync(userId, 'edit-other-user-info'))) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Editing user is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Editing_user',\n\t\t});\n\t}\n\n\tif (!userData._id && !(await hasPermissionAsync(userId, 'create-user'))) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Adding user is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Adding_user',\n\t\t});\n\t}\n\n\tif (userData.roles) {\n\t\tconst newRoles = userData.roles.filter((roleId) => !existingRoles.includes(roleId));\n\t\tif (newRoles.length > 0) {\n\t\t\tthrow new MeteorError('error-action-not-allowed', 'The field Roles consist invalid role id', {\n\t\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\t\taction: 'Assign_role',\n\t\t\t});\n\t\t}\n\t}\n\n\tif (userData.roles?.includes('admin') && !(await hasPermissionAsync(userId, 'assign-admin-role'))) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Assigning admin is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Assign_admin',\n\t\t});\n\t}\n\n\tif (settings.get('Accounts_RequireNameForSignUp') && !userData._id && !trim(userData.name)) {\n\t\tthrow new MeteorError('error-the-field-is-required', 'The field Name is required', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tfield: 'Name',\n\t\t});\n\t}\n\n\tif (!userData._id && !trim(userData.username)) {\n\t\tthrow new MeteorError('error-the-field-is-required', 'The field Username is required', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tfield: 'Username',\n\t\t});\n\t}\n\n\tlet nameValidation;\n\n\ttry {\n\t\tnameValidation = new RegExp(`^${settings.get('UTF8_User_Names_Validation')}$`);\n\t} catch (e) {\n\t\tnameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n\t}\n\n\tif (userData.username && !nameValidation.test(userData.username)) {\n\t\tthrow new MeteorError('error-input-is-not-a-valid-field', `${escape(userData.username)} is not a valid username`, {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tinput: userData.username,\n\t\t\tfield: 'Username',\n\t\t});\n\t}\n\n\tif (!userData._id && !userData.password && !userData.setRandomPassword) {\n\t\tthrow new MeteorError('error-the-field-is-required', 'The field Password is required', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tfield: 'Password',\n\t\t});\n\t}\n\n\tif (!userData._id) {\n\t\tif (userData.username && !(await checkUsernameAvailability(userData.username))) {\n\t\t\tthrow new MeteorError('error-field-unavailable', `${escape(userData.username)} is already in use :(`, {\n\t\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\t\tfield: userData.username,\n\t\t\t});\n\t\t}\n\n\t\tif (userData.email && !(await checkEmailAvailability(userData.email))) {\n\t\t\tthrow new MeteorError('error-field-unavailable', `${escape(userData.email)} is already in use :(`, {\n\t\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\t\tfield: userData.email,\n\t\t\t});\n\t\t}\n\t}\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      validateUserData: () => validateUserData\n    });\n    let MeteorError;\n    module.link(\"@rocket.chat/core-services\", {\n      MeteorError(v) {\n        MeteorError = v;\n      }\n    }, 0);\n    let makeFunction;\n    module.link(\"@rocket.chat/patch-injection\", {\n      makeFunction(v) {\n        makeFunction = v;\n      }\n    }, 1);\n    let escape;\n    module.link(\"lodash.escape\", {\n      default(v) {\n        escape = v;\n      }\n    }, 2);\n    let trim;\n    module.link(\"../../../../../lib/utils/stringUtils\", {\n      trim(v) {\n        trim = v;\n      }\n    }, 3);\n    let getRoleIds;\n    module.link(\"../../../../authorization/server/functions/getRoles\", {\n      getRoleIds(v) {\n        getRoleIds = v;\n      }\n    }, 4);\n    let hasPermissionAsync;\n    module.link(\"../../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 5);\n    let settings;\n    module.link(\"../../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 6);\n    let checkEmailAvailability;\n    module.link(\"../checkEmailAvailability\", {\n      checkEmailAvailability(v) {\n        checkEmailAvailability = v;\n      }\n    }, 7);\n    let checkUsernameAvailability;\n    module.link(\"../checkUsernameAvailability\", {\n      checkUsernameAvailability(v) {\n        checkUsernameAvailability = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const validateUserData = makeFunction(async (userId, userData) => {\n      var _userData$roles;\n      const existingRoles = await getRoleIds();\n      if (userData.verified && userData._id && userId === userData._id) {\n        throw new MeteorError('error-action-not-allowed', 'Editing email verification is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Editing_user'\n        });\n      }\n      if (userData._id && userId !== userData._id && !(await hasPermissionAsync(userId, 'edit-other-user-info'))) {\n        throw new MeteorError('error-action-not-allowed', 'Editing user is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Editing_user'\n        });\n      }\n      if (!userData._id && !(await hasPermissionAsync(userId, 'create-user'))) {\n        throw new MeteorError('error-action-not-allowed', 'Adding user is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Adding_user'\n        });\n      }\n      if (userData.roles) {\n        const newRoles = userData.roles.filter(roleId => !existingRoles.includes(roleId));\n        if (newRoles.length > 0) {\n          throw new MeteorError('error-action-not-allowed', 'The field Roles consist invalid role id', {\n            method: 'insertOrUpdateUser',\n            action: 'Assign_role'\n          });\n        }\n      }\n      if ((_userData$roles = userData.roles) !== null && _userData$roles !== void 0 && _userData$roles.includes('admin') && !(await hasPermissionAsync(userId, 'assign-admin-role'))) {\n        throw new MeteorError('error-action-not-allowed', 'Assigning admin is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Assign_admin'\n        });\n      }\n      if (settings.get('Accounts_RequireNameForSignUp') && !userData._id && !trim(userData.name)) {\n        throw new MeteorError('error-the-field-is-required', 'The field Name is required', {\n          method: 'insertOrUpdateUser',\n          field: 'Name'\n        });\n      }\n      if (!userData._id && !trim(userData.username)) {\n        throw new MeteorError('error-the-field-is-required', 'The field Username is required', {\n          method: 'insertOrUpdateUser',\n          field: 'Username'\n        });\n      }\n      let nameValidation;\n      try {\n        nameValidation = new RegExp(\"^\".concat(settings.get('UTF8_User_Names_Validation'), \"$\"));\n      } catch (e) {\n        nameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n      }\n      if (userData.username && !nameValidation.test(userData.username)) {\n        throw new MeteorError('error-input-is-not-a-valid-field', \"\".concat(escape(userData.username), \" is not a valid username\"), {\n          method: 'insertOrUpdateUser',\n          input: userData.username,\n          field: 'Username'\n        });\n      }\n      if (!userData._id && !userData.password && !userData.setRandomPassword) {\n        throw new MeteorError('error-the-field-is-required', 'The field Password is required', {\n          method: 'insertOrUpdateUser',\n          field: 'Password'\n        });\n      }\n      if (!userData._id) {\n        if (userData.username && !(await checkUsernameAvailability(userData.username))) {\n          throw new MeteorError('error-field-unavailable', \"\".concat(escape(userData.username), \" is already in use :(\"), {\n            method: 'insertOrUpdateUser',\n            field: userData.username\n          });\n        }\n        if (userData.email && !(await checkEmailAvailability(userData.email))) {\n          throw new MeteorError('error-field-unavailable', \"\".concat(escape(userData.email), \" is already in use :(\"), {\n            method: 'insertOrUpdateUser',\n            field: userData.email\n          });\n        }\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","validateUserData","MeteorError","link","v","makeFunction","escape","default","trim","getRoleIds","hasPermissionAsync","settings","checkEmailAvailability","checkUsernameAvailability","__reifyWaitForDeps__","userId","userData","_userData$roles","existingRoles","verified","_id","method","action","roles","newRoles","filter","roleId","includes","length","get","name","field","username","nameValidation","RegExp","concat","e","test","input","password","setRandomPassword","email","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/saveUser/validateUserData.ts"],"sourcesContent":["import { MeteorError } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { makeFunction } from '@rocket.chat/patch-injection';\nimport escape from 'lodash.escape';\n\nimport { trim } from '../../../../../lib/utils/stringUtils';\nimport { getRoleIds } from '../../../../authorization/server/functions/getRoles';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../../settings/server';\nimport { checkEmailAvailability } from '../checkEmailAvailability';\nimport { checkUsernameAvailability } from '../checkUsernameAvailability';\nimport type { SaveUserData } from './saveUser';\n\nexport const validateUserData = makeFunction(async (userId: IUser['_id'], userData: SaveUserData): Promise<void> => {\n\tconst existingRoles = await getRoleIds();\n\n\tif (userData.verified && userData._id && userId === userData._id) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Editing email verification is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Editing_user',\n\t\t});\n\t}\n\n\tif (userData._id && userId !== userData._id && !(await hasPermissionAsync(userId, 'edit-other-user-info'))) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Editing user is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Editing_user',\n\t\t});\n\t}\n\n\tif (!userData._id && !(await hasPermissionAsync(userId, 'create-user'))) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Adding user is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Adding_user',\n\t\t});\n\t}\n\n\tif (userData.roles) {\n\t\tconst newRoles = userData.roles.filter((roleId) => !existingRoles.includes(roleId));\n\t\tif (newRoles.length > 0) {\n\t\t\tthrow new MeteorError('error-action-not-allowed', 'The field Roles consist invalid role id', {\n\t\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\t\taction: 'Assign_role',\n\t\t\t});\n\t\t}\n\t}\n\n\tif (userData.roles?.includes('admin') && !(await hasPermissionAsync(userId, 'assign-admin-role'))) {\n\t\tthrow new MeteorError('error-action-not-allowed', 'Assigning admin is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Assign_admin',\n\t\t});\n\t}\n\n\tif (settings.get('Accounts_RequireNameForSignUp') && !userData._id && !trim(userData.name)) {\n\t\tthrow new MeteorError('error-the-field-is-required', 'The field Name is required', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tfield: 'Name',\n\t\t});\n\t}\n\n\tif (!userData._id && !trim(userData.username)) {\n\t\tthrow new MeteorError('error-the-field-is-required', 'The field Username is required', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tfield: 'Username',\n\t\t});\n\t}\n\n\tlet nameValidation;\n\n\ttry {\n\t\tnameValidation = new RegExp(`^${settings.get('UTF8_User_Names_Validation')}$`);\n\t} catch (e) {\n\t\tnameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n\t}\n\n\tif (userData.username && !nameValidation.test(userData.username)) {\n\t\tthrow new MeteorError('error-input-is-not-a-valid-field', `${escape(userData.username)} is not a valid username`, {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tinput: userData.username,\n\t\t\tfield: 'Username',\n\t\t});\n\t}\n\n\tif (!userData._id && !userData.password && !userData.setRandomPassword) {\n\t\tthrow new MeteorError('error-the-field-is-required', 'The field Password is required', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tfield: 'Password',\n\t\t});\n\t}\n\n\tif (!userData._id) {\n\t\tif (userData.username && !(await checkUsernameAvailability(userData.username))) {\n\t\t\tthrow new MeteorError('error-field-unavailable', `${escape(userData.username)} is already in use :(`, {\n\t\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\t\tfield: userData.username,\n\t\t\t});\n\t\t}\n\n\t\tif (userData.email && !(await checkEmailAvailability(userData.email))) {\n\t\t\tthrow new MeteorError('error-field-unavailable', `${escape(userData.email)} is already in use :(`, {\n\t\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\t\tfield: userData.email,\n\t\t\t});\n\t\t}\n\t}\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"199c33a4a694c3a073e462f940b66bf6c6a7c967"}
