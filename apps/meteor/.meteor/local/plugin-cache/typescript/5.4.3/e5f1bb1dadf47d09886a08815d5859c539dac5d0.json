{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/ldap.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/ldap.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/ldap.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/ldap.ts","sourceRoot":"","sources":["app/api/server/v1/ldap.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,4BAA4B,CAAC;AAClD,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAE5C,OAAO,EAAE,YAAY,EAAE,MAAM,sCAAsC,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAE7B,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,qBAAqB,EACrB,EAAE,YAAY,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC,oBAAoB,CAAC,EAAE,EACnE;IACC,KAAK,CAAC,IAAI;QACT,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;QACvC,CAAC;QAED,IAAI,QAAQ,CAAC,GAAG,CAAU,aAAa,CAAC,KAAK,IAAI,EAAE,CAAC;YACnD,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,CAAC;YACJ,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC7B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC1B,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;QACtC,CAAC;QAED,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,OAAO,EAAE,4BAAqC;SAC9C,CAAC,CAAC;IACJ,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,iBAAiB,EACjB,EAAE,YAAY,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC,oBAAoB,CAAC,EAAE,EACnE;IACC,KAAK,CAAC,IAAI;QACT,KAAK,CACJ,IAAI,CAAC,UAAU,EACf,KAAK,CAAC,eAAe,CAAC;YACrB,QAAQ,EAAE,MAAM;SAChB,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;QACvC,CAAC;QAED,IAAI,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE,CAAC;YAC1C,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QAClC,CAAC;QAED,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAEhD,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,OAAO,EAAE,iBAA0B;SACnC,CAAC,CAAC;IACJ,CAAC;CACD,CACD,CAAC","sourcesContent":["import { LDAP } from '@rocket.chat/core-services';\nimport { Match, check } from 'meteor/check';\n\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { settings } from '../../../settings/server';\nimport { API } from '../api';\n\nAPI.v1.addRoute(\n\t'ldap.testConnection',\n\t{ authRequired: true, permissionsRequired: ['test-admin-options'] },\n\t{\n\t\tasync post() {\n\t\t\tif (!this.userId) {\n\t\t\t\tthrow new Error('error-invalid-user');\n\t\t\t}\n\n\t\t\tif (settings.get<boolean>('LDAP_Enable') !== true) {\n\t\t\t\tthrow new Error('LDAP_disabled');\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait LDAP.testConnection();\n\t\t\t} catch (error) {\n\t\t\t\tSystemLogger.error(error);\n\t\t\t\tthrow new Error('Connection_failed');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\tmessage: 'LDAP_Connection_successful' as const,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'ldap.testSearch',\n\t{ authRequired: true, permissionsRequired: ['test-admin-options'] },\n\t{\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tusername: String,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tif (!this.userId) {\n\t\t\t\tthrow new Error('error-invalid-user');\n\t\t\t}\n\n\t\t\tif (settings.get('LDAP_Enable') !== true) {\n\t\t\t\tthrow new Error('LDAP_disabled');\n\t\t\t}\n\n\t\t\tawait LDAP.testSearch(this.bodyParams.username);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tmessage: 'LDAP_User_Found' as const,\n\t\t\t});\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/ldap.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/ldap.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/ldap.ts","sourceRoot":"","sources":["app/api/server/v1/ldap.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,4BAA4B,CAAC;AAClD,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAE5C,OAAO,EAAE,YAAY,EAAE,MAAM,sCAAsC,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAE7B,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,qBAAqB,EACrB,EAAE,YAAY,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC,oBAAoB,CAAC,EAAE,EACnE;IACC,KAAK,CAAC,IAAI;QACT,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;QACvC,CAAC;QAED,IAAI,QAAQ,CAAC,GAAG,CAAU,aAAa,CAAC,KAAK,IAAI,EAAE,CAAC;YACnD,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,CAAC;YACJ,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC7B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC1B,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;QACtC,CAAC;QAED,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,OAAO,EAAE,4BAAqC;SAC9C,CAAC,CAAC;IACJ,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,iBAAiB,EACjB,EAAE,YAAY,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC,oBAAoB,CAAC,EAAE,EACnE;IACC,KAAK,CAAC,IAAI;QACT,KAAK,CACJ,IAAI,CAAC,UAAU,EACf,KAAK,CAAC,eAAe,CAAC;YACrB,QAAQ,EAAE,MAAM;SAChB,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;QACvC,CAAC;QAED,IAAI,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE,CAAC;YAC1C,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QAClC,CAAC;QAED,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAEhD,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,OAAO,EAAE,iBAA0B;SACnC,CAAC,CAAC;IACJ,CAAC;CACD,CACD,CAAC","sourcesContent":["import { LDAP } from '@rocket.chat/core-services';\nimport { Match, check } from 'meteor/check';\n\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { settings } from '../../../settings/server';\nimport { API } from '../api';\n\nAPI.v1.addRoute(\n\t'ldap.testConnection',\n\t{ authRequired: true, permissionsRequired: ['test-admin-options'] },\n\t{\n\t\tasync post() {\n\t\t\tif (!this.userId) {\n\t\t\t\tthrow new Error('error-invalid-user');\n\t\t\t}\n\n\t\t\tif (settings.get<boolean>('LDAP_Enable') !== true) {\n\t\t\t\tthrow new Error('LDAP_disabled');\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait LDAP.testConnection();\n\t\t\t} catch (error) {\n\t\t\t\tSystemLogger.error(error);\n\t\t\t\tthrow new Error('Connection_failed');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\tmessage: 'LDAP_Connection_successful' as const,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'ldap.testSearch',\n\t{ authRequired: true, permissionsRequired: ['test-admin-options'] },\n\t{\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tusername: String,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tif (!this.userId) {\n\t\t\t\tthrow new Error('error-invalid-user');\n\t\t\t}\n\n\t\t\tif (settings.get('LDAP_Enable') !== true) {\n\t\t\t\tthrow new Error('LDAP_disabled');\n\t\t\t}\n\n\t\t\tawait LDAP.testSearch(this.bodyParams.username);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tmessage: 'LDAP_User_Found' as const,\n\t\t\t});\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let LDAP;\n    module.link(\"@rocket.chat/core-services\", {\n      LDAP(v) {\n        LDAP = v;\n      }\n    }, 0);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 1);\n    let SystemLogger;\n    module.link(\"../../../../server/lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    let API;\n    module.link(\"../api\", {\n      API(v) {\n        API = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('ldap.testConnection', {\n      authRequired: true,\n      permissionsRequired: ['test-admin-options']\n    }, {\n      async post() {\n        if (!this.userId) {\n          throw new Error('error-invalid-user');\n        }\n        if (settings.get('LDAP_Enable') !== true) {\n          throw new Error('LDAP_disabled');\n        }\n        try {\n          await LDAP.testConnection();\n        } catch (error) {\n          SystemLogger.error(error);\n          throw new Error('Connection_failed');\n        }\n        return API.v1.success({\n          message: 'LDAP_Connection_successful'\n        });\n      }\n    });\n    API.v1.addRoute('ldap.testSearch', {\n      authRequired: true,\n      permissionsRequired: ['test-admin-options']\n    }, {\n      async post() {\n        check(this.bodyParams, Match.ObjectIncluding({\n          username: String\n        }));\n        if (!this.userId) {\n          throw new Error('error-invalid-user');\n        }\n        if (settings.get('LDAP_Enable') !== true) {\n          throw new Error('LDAP_disabled');\n        }\n        await LDAP.testSearch(this.bodyParams.username);\n        return API.v1.success({\n          message: 'LDAP_User_Found'\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["LDAP","module","link","v","Match","check","SystemLogger","settings","API","__reifyWaitForDeps__","v1","addRoute","authRequired","permissionsRequired","post","userId","Error","get","testConnection","error","success","message","bodyParams","ObjectIncluding","username","String","testSearch","__reify_async_result__","_reifyError","self","async"],"sources":["app/api/server/v1/ldap.ts"],"sourcesContent":["import { LDAP } from '@rocket.chat/core-services';\nimport { Match, check } from 'meteor/check';\n\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { settings } from '../../../settings/server';\nimport { API } from '../api';\n\nAPI.v1.addRoute(\n\t'ldap.testConnection',\n\t{ authRequired: true, permissionsRequired: ['test-admin-options'] },\n\t{\n\t\tasync post() {\n\t\t\tif (!this.userId) {\n\t\t\t\tthrow new Error('error-invalid-user');\n\t\t\t}\n\n\t\t\tif (settings.get<boolean>('LDAP_Enable') !== true) {\n\t\t\t\tthrow new Error('LDAP_disabled');\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait LDAP.testConnection();\n\t\t\t} catch (error) {\n\t\t\t\tSystemLogger.error(error);\n\t\t\t\tthrow new Error('Connection_failed');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\tmessage: 'LDAP_Connection_successful' as const,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'ldap.testSearch',\n\t{ authRequired: true, permissionsRequired: ['test-admin-options'] },\n\t{\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tusername: String,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tif (!this.userId) {\n\t\t\t\tthrow new Error('error-invalid-user');\n\t\t\t}\n\n\t\t\tif (settings.get('LDAP_Enable') !== true) {\n\t\t\t\tthrow new Error('LDAP_disabled');\n\t\t\t}\n\n\t\t\tawait LDAP.testSearch(this.bodyParams.username);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tmessage: 'LDAP_User_Found' as const,\n\t\t\t});\n\t\t},\n\t},\n);\n"],"mappings":";;;IAAA,IAAAA,IAAO;IAAEC,MAAM,CAAAC,IAAA,CAAM,4BAA4B,EAAC;MAAAF,KAAAG,CAAA;QAAAH,IAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,KAAA,EAAAC,KAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAE,MAAAD,CAAA;QAAAC,KAAA,GAAAD,CAAA;MAAA;MAAAE,MAAAF,CAAA;QAAAE,KAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,YAAA;IAAAL,MAAA,CAAAC,IAAA;MAAAI,aAAAH,CAAA;QAAAG,YAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,QAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,SAAAJ,CAAA;QAAAI,QAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,GAAA;IAAAP,MAAA,CAAAC,IAAA;MAAAM,IAAAL,CAAA;QAAAK,GAAA,GAAAL,CAAA;MAAA;IAAA;IAAA,IAAAM,oBAAA,WAAAA,oBAAA;IAOlDD,GAAG,CAACE,EAAE,CAACC,QAAQ,CACd,qBAAqB,EACrB;MAAEC,YAAY,EAAE,IAAI;MAAEC,mBAAmB,EAAE,CAAC,oBAAoB;IAAC,CAAE,EACnE;MACC,MAAMC,IAAIA,CAAA;QACT,IAAI,CAAC,IAAI,CAACC,MAAM,EAAE;UACjB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;QACtC;QAEA,IAAIT,QAAQ,CAACU,GAAG,CAAU,aAAa,CAAC,KAAK,IAAI,EAAE;UAClD,MAAM,IAAID,KAAK,CAAC,eAAe,CAAC;QACjC;QAEA,IAAI;UACH,MAAMhB,IAAI,CAACkB,cAAc,EAAE;QAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;UACfb,YAAY,CAACa,KAAK,CAACA,KAAK,CAAC;UACzB,MAAM,IAAIH,KAAK,CAAC,mBAAmB,CAAC;QACrC;QAEA,OAAOR,GAAG,CAACE,EAAE,CAACU,OAAO,CAAC;UACrBC,OAAO,EAAE;SACT,CAAC;MACH;KACA,CACD;IAEDb,GAAG,CAACE,EAAE,CAACC,QAAQ,CACd,iBAAiB,EACjB;MAAEC,YAAY,EAAE,IAAI;MAAEC,mBAAmB,EAAE,CAAC,oBAAoB;IAAC,CAAE,EACnE;MACC,MAAMC,IAAIA,CAAA;QACTT,KAAK,CACJ,IAAI,CAACiB,UAAU,EACflB,KAAK,CAACmB,eAAe,CAAC;UACrBC,QAAQ,EAAEC;SACV,CAAC,CACF;QAED,IAAI,CAAC,IAAI,CAACV,MAAM,EAAE;UACjB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;QACtC;QAEA,IAAIT,QAAQ,CAACU,GAAG,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE;UACzC,MAAM,IAAID,KAAK,CAAC,eAAe,CAAC;QACjC;QAEA,MAAMhB,IAAI,CAAC0B,UAAU,CAAC,IAAI,CAACJ,UAAU,CAACE,QAAQ,CAAC;QAE/C,OAAOhB,GAAG,CAACE,EAAE,CAACU,OAAO,CAAC;UACrBC,OAAO,EAAE;SACT,CAAC;MACH;KACA,CACD;IAACM,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e5f1bb1dadf47d09886a08815d5859c539dac5d0"}
