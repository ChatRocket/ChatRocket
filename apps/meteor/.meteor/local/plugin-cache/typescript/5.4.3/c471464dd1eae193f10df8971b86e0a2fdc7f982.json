{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/dummy/BaseDummy.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/dummy/BaseDummy.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/dummy/BaseDummy.ts","inputSourceMap":{"version":3,"file":"server/models/dummy/BaseDummy.ts","sourceRoot":"","sources":["server/models/dummy/BaseDummy.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { DefaultFields, FindPaginated, IBaseModel, InsertionModel, ResultFields } from '@rocket.chat/model-typings';\nimport { getCollectionName, UpdaterImpl } from '@rocket.chat/models';\nimport type { Updater } from '@rocket.chat/models';\nimport type {\n\tBulkWriteOptions,\n\tChangeStream,\n\tCollection,\n\tDeleteOptions,\n\tDeleteResult,\n\tDocument,\n\tFilter,\n\tFindCursor,\n\tFindOptions,\n\tInsertManyResult,\n\tInsertOneOptions,\n\tInsertOneResult,\n\tModifyResult,\n\tUpdateFilter,\n\tUpdateOptions,\n\tUpdateResult,\n\tWithId,\n} from 'mongodb';\n\nexport class BaseDummy<\n\tT extends { _id: string },\n\tC extends DefaultFields<T> = undefined,\n\tTDeleted extends RocketChatRecordDeleted<T> = RocketChatRecordDeleted<T>,\n> implements IBaseModel<T, C, TDeleted>\n{\n\tpublic readonly col: Collection<T>;\n\n\tprivate collectionName: string;\n\n\tconstructor(protected name: string) {\n\t\tthis.collectionName = getCollectionName(name);\n\t\tthis.col = undefined as any;\n\t}\n\n\tpublic async createIndexes(): Promise<string[] | void> {\n\t\t// nothing to do\n\t}\n\n\tpublic getUpdater(): Updater<T> {\n\t\treturn new UpdaterImpl<T>();\n\t}\n\n\tpublic updateFromUpdater(query: Filter<T>, updater: Updater<T>): Promise<UpdateResult> {\n\t\treturn this.updateOne(query, updater);\n\t}\n\n\tgetCollectionName(): string {\n\t\treturn this.collectionName;\n\t}\n\n\tasync findOneAndDelete(): Promise<ModifyResult<T>> {\n\t\treturn {\n\t\t\tvalue: null,\n\t\t\tok: 1,\n\t\t};\n\t}\n\n\tasync findOneAndUpdate(): Promise<ModifyResult<T>> {\n\t\treturn {\n\t\t\tvalue: null,\n\t\t\tok: 1,\n\t\t};\n\t}\n\n\tfindOneById(_id: T['_id'], options?: FindOptions<T> | undefined): Promise<T | null>;\n\n\tfindOneById<P extends Document = T>(_id: T['_id'], options?: FindOptions<P>): Promise<P | null>;\n\n\tasync findOneById(_id: T['_id'], _options?: any): Promise<T | null> {\n\t\treturn null;\n\t}\n\n\tfindOne(query?: Filter<T> | T['_id'], options?: undefined): Promise<T | null>;\n\n\tfindOne<P extends Document = T>(query: Filter<T> | T['_id'], options: FindOptions<P extends T ? T : P>): Promise<P | null>;\n\n\tasync findOne<P>(_query: Filter<T> | T['_id'], _options?: any): Promise<WithId<T> | WithId<P> | null> {\n\t\treturn null;\n\t}\n\n\tfind(query?: Filter<T>): FindCursor<ResultFields<T, C>>;\n\n\tfind<P extends Document = T>(query: Filter<T>, options: FindOptions<P extends T ? T : P>): FindCursor<P>;\n\n\tfind<P extends Document>(\n\t\t_query: Filter<T> | undefined,\n\t\t_options?: FindOptions<P extends T ? T : P>,\n\t): FindCursor<WithId<P>> | FindCursor<WithId<T>> {\n\t\treturn undefined as any;\n\t}\n\n\tfindPaginated<P extends Document = T>(query: Filter<T>, options?: FindOptions<P extends T ? T : P>): FindPaginated<FindCursor<WithId<P>>>;\n\n\tfindPaginated(_query: Filter<T>, _options?: any): FindPaginated<FindCursor<WithId<T>>> {\n\t\treturn {\n\t\t\tcursor: undefined as any,\n\t\t\ttotalCount: Promise.resolve(0),\n\t\t};\n\t}\n\n\tasync update(\n\t\tfilter: Filter<T>,\n\t\tupdate: UpdateFilter<T> | Partial<T>,\n\t\toptions?: UpdateOptions & { multi?: true },\n\t): Promise<UpdateResult | Document> {\n\t\treturn this.updateOne(filter, update, options);\n\t}\n\n\tasync updateOne(_filter: Filter<T>, _update: UpdateFilter<T> | Partial<T>, _options?: UpdateOptions): Promise<UpdateResult> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tmatchedCount: 0,\n\t\t\tmodifiedCount: 0,\n\t\t\tupsertedCount: 0,\n\t\t\tupsertedId: '' as any,\n\t\t};\n\t}\n\n\tasync updateMany(filter: Filter<T>, update: UpdateFilter<T> | Partial<T>, options?: UpdateOptions): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne(filter, update, options);\n\t}\n\n\tasync insertMany(_docs: InsertionModel<T>[], _options?: BulkWriteOptions): Promise<InsertManyResult<T>> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tinsertedCount: 0,\n\t\t\tinsertedIds: {},\n\t\t};\n\t}\n\n\tasync insertOne(_doc: InsertionModel<T>, _options?: InsertOneOptions): Promise<InsertOneResult<T>> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tinsertedId: '' as any,\n\t\t};\n\t}\n\n\tasync removeById(_id: T['_id']): Promise<DeleteResult> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tdeletedCount: 0,\n\t\t};\n\t}\n\n\tasync removeByIds(_ids: T['_id'][]): Promise<DeleteResult> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tdeletedCount: 0,\n\t\t};\n\t}\n\n\tasync deleteOne(filter: Filter<T>, options?: DeleteOptions & { bypassDocumentValidation?: boolean }): Promise<DeleteResult> {\n\t\treturn this.deleteMany(filter, options);\n\t}\n\n\tasync deleteMany(_filter: Filter<T>, _options?: DeleteOptions): Promise<DeleteResult> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tdeletedCount: 0,\n\t\t};\n\t}\n\n\t// Trash\n\ttrashFind<P extends TDeleted>(\n\t\t_query: Filter<TDeleted>,\n\t\t_options?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindCursor<WithId<TDeleted>> | undefined {\n\t\treturn undefined as any;\n\t}\n\n\ttrashFindOneById(_id: TDeleted['_id']): Promise<TDeleted | null>;\n\n\ttrashFindOneById<P extends Document>(_id: TDeleted['_id'], options: FindOptions<P extends TDeleted ? TDeleted : P>): Promise<P | null>;\n\n\tasync trashFindOneById<P extends TDeleted>(\n\t\t_id: TDeleted['_id'],\n\t\t_options?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): Promise<WithId<RocketChatRecordDeleted<P> | TDeleted> | null> {\n\t\treturn null;\n\t}\n\n\ttrashFindDeletedAfter(deletedAt: Date): FindCursor<WithId<TDeleted>>;\n\n\ttrashFindDeletedAfter<P extends Document = TDeleted>(\n\t\t_deletedAt: Date,\n\t\t_query?: Filter<TDeleted>,\n\t\t_options?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindCursor<WithId<TDeleted>> {\n\t\treturn undefined as any;\n\t}\n\n\ttrashFindPaginatedDeletedAfter<P extends Document = TDeleted>(\n\t\t_deletedAt: Date,\n\t\t_query?: Filter<TDeleted>,\n\t\t_options?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindPaginated<FindCursor<WithId<TDeleted>>> {\n\t\treturn {\n\t\t\tcursor: undefined as any,\n\t\t\ttotalCount: Promise.resolve(0),\n\t\t};\n\t}\n\n\twatch(_pipeline?: object[]): ChangeStream<T> {\n\t\treturn undefined as any;\n\t}\n\n\tasync countDocuments(): Promise<number> {\n\t\treturn 0;\n\t}\n\n\tasync estimatedDocumentCount(): Promise<number> {\n\t\treturn 0;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/dummy/BaseDummy.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/dummy/BaseDummy.ts","inputSourceMap":{"version":3,"file":"server/models/dummy/BaseDummy.ts","sourceRoot":"","sources":["server/models/dummy/BaseDummy.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { DefaultFields, FindPaginated, IBaseModel, InsertionModel, ResultFields } from '@rocket.chat/model-typings';\nimport { getCollectionName, UpdaterImpl } from '@rocket.chat/models';\nimport type { Updater } from '@rocket.chat/models';\nimport type {\n\tBulkWriteOptions,\n\tChangeStream,\n\tCollection,\n\tDeleteOptions,\n\tDeleteResult,\n\tDocument,\n\tFilter,\n\tFindCursor,\n\tFindOptions,\n\tInsertManyResult,\n\tInsertOneOptions,\n\tInsertOneResult,\n\tModifyResult,\n\tUpdateFilter,\n\tUpdateOptions,\n\tUpdateResult,\n\tWithId,\n} from 'mongodb';\n\nexport class BaseDummy<\n\tT extends { _id: string },\n\tC extends DefaultFields<T> = undefined,\n\tTDeleted extends RocketChatRecordDeleted<T> = RocketChatRecordDeleted<T>,\n> implements IBaseModel<T, C, TDeleted>\n{\n\tpublic readonly col: Collection<T>;\n\n\tprivate collectionName: string;\n\n\tconstructor(protected name: string) {\n\t\tthis.collectionName = getCollectionName(name);\n\t\tthis.col = undefined as any;\n\t}\n\n\tpublic async createIndexes(): Promise<string[] | void> {\n\t\t// nothing to do\n\t}\n\n\tpublic getUpdater(): Updater<T> {\n\t\treturn new UpdaterImpl<T>();\n\t}\n\n\tpublic updateFromUpdater(query: Filter<T>, updater: Updater<T>): Promise<UpdateResult> {\n\t\treturn this.updateOne(query, updater);\n\t}\n\n\tgetCollectionName(): string {\n\t\treturn this.collectionName;\n\t}\n\n\tasync findOneAndDelete(): Promise<ModifyResult<T>> {\n\t\treturn {\n\t\t\tvalue: null,\n\t\t\tok: 1,\n\t\t};\n\t}\n\n\tasync findOneAndUpdate(): Promise<ModifyResult<T>> {\n\t\treturn {\n\t\t\tvalue: null,\n\t\t\tok: 1,\n\t\t};\n\t}\n\n\tfindOneById(_id: T['_id'], options?: FindOptions<T> | undefined): Promise<T | null>;\n\n\tfindOneById<P extends Document = T>(_id: T['_id'], options?: FindOptions<P>): Promise<P | null>;\n\n\tasync findOneById(_id: T['_id'], _options?: any): Promise<T | null> {\n\t\treturn null;\n\t}\n\n\tfindOne(query?: Filter<T> | T['_id'], options?: undefined): Promise<T | null>;\n\n\tfindOne<P extends Document = T>(query: Filter<T> | T['_id'], options: FindOptions<P extends T ? T : P>): Promise<P | null>;\n\n\tasync findOne<P>(_query: Filter<T> | T['_id'], _options?: any): Promise<WithId<T> | WithId<P> | null> {\n\t\treturn null;\n\t}\n\n\tfind(query?: Filter<T>): FindCursor<ResultFields<T, C>>;\n\n\tfind<P extends Document = T>(query: Filter<T>, options: FindOptions<P extends T ? T : P>): FindCursor<P>;\n\n\tfind<P extends Document>(\n\t\t_query: Filter<T> | undefined,\n\t\t_options?: FindOptions<P extends T ? T : P>,\n\t): FindCursor<WithId<P>> | FindCursor<WithId<T>> {\n\t\treturn undefined as any;\n\t}\n\n\tfindPaginated<P extends Document = T>(query: Filter<T>, options?: FindOptions<P extends T ? T : P>): FindPaginated<FindCursor<WithId<P>>>;\n\n\tfindPaginated(_query: Filter<T>, _options?: any): FindPaginated<FindCursor<WithId<T>>> {\n\t\treturn {\n\t\t\tcursor: undefined as any,\n\t\t\ttotalCount: Promise.resolve(0),\n\t\t};\n\t}\n\n\tasync update(\n\t\tfilter: Filter<T>,\n\t\tupdate: UpdateFilter<T> | Partial<T>,\n\t\toptions?: UpdateOptions & { multi?: true },\n\t): Promise<UpdateResult | Document> {\n\t\treturn this.updateOne(filter, update, options);\n\t}\n\n\tasync updateOne(_filter: Filter<T>, _update: UpdateFilter<T> | Partial<T>, _options?: UpdateOptions): Promise<UpdateResult> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tmatchedCount: 0,\n\t\t\tmodifiedCount: 0,\n\t\t\tupsertedCount: 0,\n\t\t\tupsertedId: '' as any,\n\t\t};\n\t}\n\n\tasync updateMany(filter: Filter<T>, update: UpdateFilter<T> | Partial<T>, options?: UpdateOptions): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne(filter, update, options);\n\t}\n\n\tasync insertMany(_docs: InsertionModel<T>[], _options?: BulkWriteOptions): Promise<InsertManyResult<T>> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tinsertedCount: 0,\n\t\t\tinsertedIds: {},\n\t\t};\n\t}\n\n\tasync insertOne(_doc: InsertionModel<T>, _options?: InsertOneOptions): Promise<InsertOneResult<T>> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tinsertedId: '' as any,\n\t\t};\n\t}\n\n\tasync removeById(_id: T['_id']): Promise<DeleteResult> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tdeletedCount: 0,\n\t\t};\n\t}\n\n\tasync removeByIds(_ids: T['_id'][]): Promise<DeleteResult> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tdeletedCount: 0,\n\t\t};\n\t}\n\n\tasync deleteOne(filter: Filter<T>, options?: DeleteOptions & { bypassDocumentValidation?: boolean }): Promise<DeleteResult> {\n\t\treturn this.deleteMany(filter, options);\n\t}\n\n\tasync deleteMany(_filter: Filter<T>, _options?: DeleteOptions): Promise<DeleteResult> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tdeletedCount: 0,\n\t\t};\n\t}\n\n\t// Trash\n\ttrashFind<P extends TDeleted>(\n\t\t_query: Filter<TDeleted>,\n\t\t_options?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindCursor<WithId<TDeleted>> | undefined {\n\t\treturn undefined as any;\n\t}\n\n\ttrashFindOneById(_id: TDeleted['_id']): Promise<TDeleted | null>;\n\n\ttrashFindOneById<P extends Document>(_id: TDeleted['_id'], options: FindOptions<P extends TDeleted ? TDeleted : P>): Promise<P | null>;\n\n\tasync trashFindOneById<P extends TDeleted>(\n\t\t_id: TDeleted['_id'],\n\t\t_options?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): Promise<WithId<RocketChatRecordDeleted<P> | TDeleted> | null> {\n\t\treturn null;\n\t}\n\n\ttrashFindDeletedAfter(deletedAt: Date): FindCursor<WithId<TDeleted>>;\n\n\ttrashFindDeletedAfter<P extends Document = TDeleted>(\n\t\t_deletedAt: Date,\n\t\t_query?: Filter<TDeleted>,\n\t\t_options?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindCursor<WithId<TDeleted>> {\n\t\treturn undefined as any;\n\t}\n\n\ttrashFindPaginatedDeletedAfter<P extends Document = TDeleted>(\n\t\t_deletedAt: Date,\n\t\t_query?: Filter<TDeleted>,\n\t\t_options?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindPaginated<FindCursor<WithId<TDeleted>>> {\n\t\treturn {\n\t\t\tcursor: undefined as any,\n\t\t\ttotalCount: Promise.resolve(0),\n\t\t};\n\t}\n\n\twatch(_pipeline?: object[]): ChangeStream<T> {\n\t\treturn undefined as any;\n\t}\n\n\tasync countDocuments(): Promise<number> {\n\t\treturn 0;\n\t}\n\n\tasync estimatedDocumentCount(): Promise<number> {\n\t\treturn 0;\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      BaseDummy: () => BaseDummy\n    });\n    let getCollectionName, UpdaterImpl;\n    module.link(\"@rocket.chat/models\", {\n      getCollectionName(v) {\n        getCollectionName = v;\n      },\n      UpdaterImpl(v) {\n        UpdaterImpl = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class BaseDummy {\n      constructor(name) {\n        this.name = void 0;\n        this.col = void 0;\n        this.collectionName = void 0;\n        this.name = name;\n        this.collectionName = getCollectionName(name);\n        this.col = undefined;\n      }\n      async createIndexes() {\n        // nothing to do\n      }\n      getUpdater() {\n        return new UpdaterImpl();\n      }\n      updateFromUpdater(query, updater) {\n        return this.updateOne(query, updater);\n      }\n      getCollectionName() {\n        return this.collectionName;\n      }\n      async findOneAndDelete() {\n        return {\n          value: null,\n          ok: 1\n        };\n      }\n      async findOneAndUpdate() {\n        return {\n          value: null,\n          ok: 1\n        };\n      }\n      async findOneById(_id, _options) {\n        return null;\n      }\n      async findOne(_query, _options) {\n        return null;\n      }\n      find(_query, _options) {\n        return undefined;\n      }\n      findPaginated(_query, _options) {\n        return {\n          cursor: undefined,\n          totalCount: Promise.resolve(0)\n        };\n      }\n      async update(filter, update, options) {\n        return this.updateOne(filter, update, options);\n      }\n      async updateOne(_filter, _update, _options) {\n        return {\n          acknowledged: true,\n          matchedCount: 0,\n          modifiedCount: 0,\n          upsertedCount: 0,\n          upsertedId: ''\n        };\n      }\n      async updateMany(filter, update, options) {\n        return this.updateOne(filter, update, options);\n      }\n      async insertMany(_docs, _options) {\n        return {\n          acknowledged: true,\n          insertedCount: 0,\n          insertedIds: {}\n        };\n      }\n      async insertOne(_doc, _options) {\n        return {\n          acknowledged: true,\n          insertedId: ''\n        };\n      }\n      async removeById(_id) {\n        return {\n          acknowledged: true,\n          deletedCount: 0\n        };\n      }\n      async removeByIds(_ids) {\n        return {\n          acknowledged: true,\n          deletedCount: 0\n        };\n      }\n      async deleteOne(filter, options) {\n        return this.deleteMany(filter, options);\n      }\n      async deleteMany(_filter, _options) {\n        return {\n          acknowledged: true,\n          deletedCount: 0\n        };\n      }\n      // Trash\n      trashFind(_query, _options) {\n        return undefined;\n      }\n      async trashFindOneById(_id, _options) {\n        return null;\n      }\n      trashFindDeletedAfter(_deletedAt, _query, _options) {\n        return undefined;\n      }\n      trashFindPaginatedDeletedAfter(_deletedAt, _query, _options) {\n        return {\n          cursor: undefined,\n          totalCount: Promise.resolve(0)\n        };\n      }\n      watch(_pipeline) {\n        return undefined;\n      }\n      async countDocuments() {\n        return 0;\n      }\n      async estimatedDocumentCount() {\n        return 0;\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","BaseDummy","getCollectionName","UpdaterImpl","link","v","__reifyWaitForDeps__","constructor","name","col","collectionName","undefined","createIndexes","getUpdater","updateFromUpdater","query","updater","updateOne","findOneAndDelete","value","ok","findOneAndUpdate","findOneById","_id","_options","findOne","_query","find","findPaginated","cursor","totalCount","Promise","resolve","update","filter","options","_filter","_update","acknowledged","matchedCount","modifiedCount","upsertedCount","upsertedId","updateMany","insertMany","_docs","insertedCount","insertedIds","insertOne","_doc","insertedId","removeById","deletedCount","removeByIds","_ids","deleteOne","deleteMany","trashFind","trashFindOneById","trashFindDeletedAfter","_deletedAt","trashFindPaginatedDeletedAfter","watch","_pipeline","countDocuments","estimatedDocumentCount","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/dummy/BaseDummy.ts"],"sourcesContent":["import type { RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { DefaultFields, FindPaginated, IBaseModel, InsertionModel, ResultFields } from '@rocket.chat/model-typings';\nimport { getCollectionName, UpdaterImpl } from '@rocket.chat/models';\nimport type { Updater } from '@rocket.chat/models';\nimport type {\n\tBulkWriteOptions,\n\tChangeStream,\n\tCollection,\n\tDeleteOptions,\n\tDeleteResult,\n\tDocument,\n\tFilter,\n\tFindCursor,\n\tFindOptions,\n\tInsertManyResult,\n\tInsertOneOptions,\n\tInsertOneResult,\n\tModifyResult,\n\tUpdateFilter,\n\tUpdateOptions,\n\tUpdateResult,\n\tWithId,\n} from 'mongodb';\n\nexport class BaseDummy<\n\tT extends { _id: string },\n\tC extends DefaultFields<T> = undefined,\n\tTDeleted extends RocketChatRecordDeleted<T> = RocketChatRecordDeleted<T>,\n> implements IBaseModel<T, C, TDeleted>\n{\n\tpublic readonly col: Collection<T>;\n\n\tprivate collectionName: string;\n\n\tconstructor(protected name: string) {\n\t\tthis.collectionName = getCollectionName(name);\n\t\tthis.col = undefined as any;\n\t}\n\n\tpublic async createIndexes(): Promise<string[] | void> {\n\t\t// nothing to do\n\t}\n\n\tpublic getUpdater(): Updater<T> {\n\t\treturn new UpdaterImpl<T>();\n\t}\n\n\tpublic updateFromUpdater(query: Filter<T>, updater: Updater<T>): Promise<UpdateResult> {\n\t\treturn this.updateOne(query, updater);\n\t}\n\n\tgetCollectionName(): string {\n\t\treturn this.collectionName;\n\t}\n\n\tasync findOneAndDelete(): Promise<ModifyResult<T>> {\n\t\treturn {\n\t\t\tvalue: null,\n\t\t\tok: 1,\n\t\t};\n\t}\n\n\tasync findOneAndUpdate(): Promise<ModifyResult<T>> {\n\t\treturn {\n\t\t\tvalue: null,\n\t\t\tok: 1,\n\t\t};\n\t}\n\n\tfindOneById(_id: T['_id'], options?: FindOptions<T> | undefined): Promise<T | null>;\n\n\tfindOneById<P extends Document = T>(_id: T['_id'], options?: FindOptions<P>): Promise<P | null>;\n\n\tasync findOneById(_id: T['_id'], _options?: any): Promise<T | null> {\n\t\treturn null;\n\t}\n\n\tfindOne(query?: Filter<T> | T['_id'], options?: undefined): Promise<T | null>;\n\n\tfindOne<P extends Document = T>(query: Filter<T> | T['_id'], options: FindOptions<P extends T ? T : P>): Promise<P | null>;\n\n\tasync findOne<P>(_query: Filter<T> | T['_id'], _options?: any): Promise<WithId<T> | WithId<P> | null> {\n\t\treturn null;\n\t}\n\n\tfind(query?: Filter<T>): FindCursor<ResultFields<T, C>>;\n\n\tfind<P extends Document = T>(query: Filter<T>, options: FindOptions<P extends T ? T : P>): FindCursor<P>;\n\n\tfind<P extends Document>(\n\t\t_query: Filter<T> | undefined,\n\t\t_options?: FindOptions<P extends T ? T : P>,\n\t): FindCursor<WithId<P>> | FindCursor<WithId<T>> {\n\t\treturn undefined as any;\n\t}\n\n\tfindPaginated<P extends Document = T>(query: Filter<T>, options?: FindOptions<P extends T ? T : P>): FindPaginated<FindCursor<WithId<P>>>;\n\n\tfindPaginated(_query: Filter<T>, _options?: any): FindPaginated<FindCursor<WithId<T>>> {\n\t\treturn {\n\t\t\tcursor: undefined as any,\n\t\t\ttotalCount: Promise.resolve(0),\n\t\t};\n\t}\n\n\tasync update(\n\t\tfilter: Filter<T>,\n\t\tupdate: UpdateFilter<T> | Partial<T>,\n\t\toptions?: UpdateOptions & { multi?: true },\n\t): Promise<UpdateResult | Document> {\n\t\treturn this.updateOne(filter, update, options);\n\t}\n\n\tasync updateOne(_filter: Filter<T>, _update: UpdateFilter<T> | Partial<T>, _options?: UpdateOptions): Promise<UpdateResult> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tmatchedCount: 0,\n\t\t\tmodifiedCount: 0,\n\t\t\tupsertedCount: 0,\n\t\t\tupsertedId: '' as any,\n\t\t};\n\t}\n\n\tasync updateMany(filter: Filter<T>, update: UpdateFilter<T> | Partial<T>, options?: UpdateOptions): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne(filter, update, options);\n\t}\n\n\tasync insertMany(_docs: InsertionModel<T>[], _options?: BulkWriteOptions): Promise<InsertManyResult<T>> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tinsertedCount: 0,\n\t\t\tinsertedIds: {},\n\t\t};\n\t}\n\n\tasync insertOne(_doc: InsertionModel<T>, _options?: InsertOneOptions): Promise<InsertOneResult<T>> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tinsertedId: '' as any,\n\t\t};\n\t}\n\n\tasync removeById(_id: T['_id']): Promise<DeleteResult> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tdeletedCount: 0,\n\t\t};\n\t}\n\n\tasync removeByIds(_ids: T['_id'][]): Promise<DeleteResult> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tdeletedCount: 0,\n\t\t};\n\t}\n\n\tasync deleteOne(filter: Filter<T>, options?: DeleteOptions & { bypassDocumentValidation?: boolean }): Promise<DeleteResult> {\n\t\treturn this.deleteMany(filter, options);\n\t}\n\n\tasync deleteMany(_filter: Filter<T>, _options?: DeleteOptions): Promise<DeleteResult> {\n\t\treturn {\n\t\t\tacknowledged: true,\n\t\t\tdeletedCount: 0,\n\t\t};\n\t}\n\n\t// Trash\n\ttrashFind<P extends TDeleted>(\n\t\t_query: Filter<TDeleted>,\n\t\t_options?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindCursor<WithId<TDeleted>> | undefined {\n\t\treturn undefined as any;\n\t}\n\n\ttrashFindOneById(_id: TDeleted['_id']): Promise<TDeleted | null>;\n\n\ttrashFindOneById<P extends Document>(_id: TDeleted['_id'], options: FindOptions<P extends TDeleted ? TDeleted : P>): Promise<P | null>;\n\n\tasync trashFindOneById<P extends TDeleted>(\n\t\t_id: TDeleted['_id'],\n\t\t_options?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): Promise<WithId<RocketChatRecordDeleted<P> | TDeleted> | null> {\n\t\treturn null;\n\t}\n\n\ttrashFindDeletedAfter(deletedAt: Date): FindCursor<WithId<TDeleted>>;\n\n\ttrashFindDeletedAfter<P extends Document = TDeleted>(\n\t\t_deletedAt: Date,\n\t\t_query?: Filter<TDeleted>,\n\t\t_options?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindCursor<WithId<TDeleted>> {\n\t\treturn undefined as any;\n\t}\n\n\ttrashFindPaginatedDeletedAfter<P extends Document = TDeleted>(\n\t\t_deletedAt: Date,\n\t\t_query?: Filter<TDeleted>,\n\t\t_options?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindPaginated<FindCursor<WithId<TDeleted>>> {\n\t\treturn {\n\t\t\tcursor: undefined as any,\n\t\t\ttotalCount: Promise.resolve(0),\n\t\t};\n\t}\n\n\twatch(_pipeline?: object[]): ChangeStream<T> {\n\t\treturn undefined as any;\n\t}\n\n\tasync countDocuments(): Promise<number> {\n\t\treturn 0;\n\t}\n\n\tasync estimatedDocumentCount(): Promise<number> {\n\t\treturn 0;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c471464dd1eae193f10df8971b86e0a2fdc7f982"}
