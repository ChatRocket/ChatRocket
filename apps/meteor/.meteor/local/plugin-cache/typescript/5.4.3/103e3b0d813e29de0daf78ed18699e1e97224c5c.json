{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/application/user/receiver/UserServiceReceiver.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/federation/application/user/receiver/UserServiceReceiver.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/application/user/receiver/UserServiceReceiver.ts","inputSourceMap":{"version":3,"file":"server/services/federation/application/user/receiver/UserServiceReceiver.ts","sourceRoot":"","sources":["server/services/federation/application/user/receiver/UserServiceReceiver.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IFederationBridge } from '../../../domain/IFederationBridge';\nimport type { RocketChatFileAdapter } from '../../../infrastructure/rocket-chat/adapters/File';\nimport type { RocketChatNotificationAdapter } from '../../../infrastructure/rocket-chat/adapters/Notification';\nimport type { RocketChatRoomAdapter } from '../../../infrastructure/rocket-chat/adapters/Room';\nimport type { RocketChatSettingsAdapter } from '../../../infrastructure/rocket-chat/adapters/Settings';\nimport type { RocketChatUserAdapter } from '../../../infrastructure/rocket-chat/adapters/User';\nimport { AbstractFederationApplicationService } from '../../AbstractFederationApplicationService';\nimport type { FederationUserTypingStatusEventDto } from '../../room/input/UserReceiverDto';\n\nexport class FederationUserServiceReceiver extends AbstractFederationApplicationService {\n\tprivate usersTypingByRoomIdCache: Map<string, Record<string, string>[]> = new Map();\n\n\tconstructor(\n\t\tprotected internalRoomAdapter: RocketChatRoomAdapter,\n\t\tprotected internalUserAdapter: RocketChatUserAdapter,\n\t\tprotected internalFileAdapter: RocketChatFileAdapter,\n\t\tprotected internalNotificationAdapter: RocketChatNotificationAdapter,\n\t\tprotected internalSettingsAdapter: RocketChatSettingsAdapter,\n\t\tprotected bridge: IFederationBridge,\n\t) {\n\t\tsuper(bridge, internalUserAdapter, internalFileAdapter, internalSettingsAdapter);\n\t}\n\n\tprivate handleUsersWhoStoppedTyping(externalRoomId: string, internalRoomId: string, externalUserIdsTyping: string[]): void {\n\t\tconst isTyping = false;\n\t\tconst notTypingAnymore = this.usersTypingByRoomIdCache\n\t\t\t.get(externalRoomId)\n\t\t\t?.filter((user) => !externalUserIdsTyping.includes(user.externalUserId));\n\n\t\tconst stillTyping = this.usersTypingByRoomIdCache\n\t\t\t.get(externalRoomId)\n\t\t\t?.filter((user) => externalUserIdsTyping.includes(user.externalUserId));\n\n\t\tnotTypingAnymore?.forEach((user) => this.internalNotificationAdapter.notifyUserTypingOnRoom(internalRoomId, user.username, isTyping));\n\t\tthis.usersTypingByRoomIdCache.set(externalRoomId, stillTyping || []);\n\t}\n\n\tpublic async onUserTyping(userTypingInput: FederationUserTypingStatusEventDto): Promise<void> {\n\t\tconst { externalUserIdsTyping, externalRoomId } = userTypingInput;\n\t\tconst federatedRoom = await this.internalRoomAdapter.getFederatedRoomByExternalId(externalRoomId);\n\t\tif (!federatedRoom) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.usersTypingByRoomIdCache.has(externalRoomId)) {\n\t\t\tthis.handleUsersWhoStoppedTyping(externalRoomId, federatedRoom.getInternalId(), externalUserIdsTyping);\n\t\t}\n\n\t\tif (externalUserIdsTyping.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst federatedUsers = await this.internalUserAdapter.getFederatedUsersByExternalIds(externalUserIdsTyping);\n\t\tif (federatedUsers.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isTyping = true;\n\n\t\tthis.usersTypingByRoomIdCache.set(\n\t\t\texternalRoomId,\n\t\t\tfederatedUsers.map((federatedUser) => {\n\t\t\t\tvoid this.internalNotificationAdapter.notifyUserTypingOnRoom(\n\t\t\t\t\tfederatedRoom.getInternalId(),\n\t\t\t\t\tfederatedUser.getUsername() as string,\n\t\t\t\t\tisTyping,\n\t\t\t\t);\n\n\t\t\t\treturn {\n\t\t\t\t\texternalUserId: federatedUser.getInternalId(),\n\t\t\t\t\tusername: federatedUser.getUsername() as string,\n\t\t\t\t};\n\t\t\t}),\n\t\t);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/application/user/receiver/UserServiceReceiver.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/federation/application/user/receiver/UserServiceReceiver.ts","inputSourceMap":{"version":3,"file":"server/services/federation/application/user/receiver/UserServiceReceiver.ts","sourceRoot":"","sources":["server/services/federation/application/user/receiver/UserServiceReceiver.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IFederationBridge } from '../../../domain/IFederationBridge';\nimport type { RocketChatFileAdapter } from '../../../infrastructure/rocket-chat/adapters/File';\nimport type { RocketChatNotificationAdapter } from '../../../infrastructure/rocket-chat/adapters/Notification';\nimport type { RocketChatRoomAdapter } from '../../../infrastructure/rocket-chat/adapters/Room';\nimport type { RocketChatSettingsAdapter } from '../../../infrastructure/rocket-chat/adapters/Settings';\nimport type { RocketChatUserAdapter } from '../../../infrastructure/rocket-chat/adapters/User';\nimport { AbstractFederationApplicationService } from '../../AbstractFederationApplicationService';\nimport type { FederationUserTypingStatusEventDto } from '../../room/input/UserReceiverDto';\n\nexport class FederationUserServiceReceiver extends AbstractFederationApplicationService {\n\tprivate usersTypingByRoomIdCache: Map<string, Record<string, string>[]> = new Map();\n\n\tconstructor(\n\t\tprotected internalRoomAdapter: RocketChatRoomAdapter,\n\t\tprotected internalUserAdapter: RocketChatUserAdapter,\n\t\tprotected internalFileAdapter: RocketChatFileAdapter,\n\t\tprotected internalNotificationAdapter: RocketChatNotificationAdapter,\n\t\tprotected internalSettingsAdapter: RocketChatSettingsAdapter,\n\t\tprotected bridge: IFederationBridge,\n\t) {\n\t\tsuper(bridge, internalUserAdapter, internalFileAdapter, internalSettingsAdapter);\n\t}\n\n\tprivate handleUsersWhoStoppedTyping(externalRoomId: string, internalRoomId: string, externalUserIdsTyping: string[]): void {\n\t\tconst isTyping = false;\n\t\tconst notTypingAnymore = this.usersTypingByRoomIdCache\n\t\t\t.get(externalRoomId)\n\t\t\t?.filter((user) => !externalUserIdsTyping.includes(user.externalUserId));\n\n\t\tconst stillTyping = this.usersTypingByRoomIdCache\n\t\t\t.get(externalRoomId)\n\t\t\t?.filter((user) => externalUserIdsTyping.includes(user.externalUserId));\n\n\t\tnotTypingAnymore?.forEach((user) => this.internalNotificationAdapter.notifyUserTypingOnRoom(internalRoomId, user.username, isTyping));\n\t\tthis.usersTypingByRoomIdCache.set(externalRoomId, stillTyping || []);\n\t}\n\n\tpublic async onUserTyping(userTypingInput: FederationUserTypingStatusEventDto): Promise<void> {\n\t\tconst { externalUserIdsTyping, externalRoomId } = userTypingInput;\n\t\tconst federatedRoom = await this.internalRoomAdapter.getFederatedRoomByExternalId(externalRoomId);\n\t\tif (!federatedRoom) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.usersTypingByRoomIdCache.has(externalRoomId)) {\n\t\t\tthis.handleUsersWhoStoppedTyping(externalRoomId, federatedRoom.getInternalId(), externalUserIdsTyping);\n\t\t}\n\n\t\tif (externalUserIdsTyping.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst federatedUsers = await this.internalUserAdapter.getFederatedUsersByExternalIds(externalUserIdsTyping);\n\t\tif (federatedUsers.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isTyping = true;\n\n\t\tthis.usersTypingByRoomIdCache.set(\n\t\t\texternalRoomId,\n\t\t\tfederatedUsers.map((federatedUser) => {\n\t\t\t\tvoid this.internalNotificationAdapter.notifyUserTypingOnRoom(\n\t\t\t\t\tfederatedRoom.getInternalId(),\n\t\t\t\t\tfederatedUser.getUsername() as string,\n\t\t\t\t\tisTyping,\n\t\t\t\t);\n\n\t\t\t\treturn {\n\t\t\t\t\texternalUserId: federatedUser.getInternalId(),\n\t\t\t\t\tusername: federatedUser.getUsername() as string,\n\t\t\t\t};\n\t\t\t}),\n\t\t);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      FederationUserServiceReceiver: () => FederationUserServiceReceiver\n    });\n    let AbstractFederationApplicationService;\n    module.link(\"../../AbstractFederationApplicationService\", {\n      AbstractFederationApplicationService(v) {\n        AbstractFederationApplicationService = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class FederationUserServiceReceiver extends AbstractFederationApplicationService {\n      constructor(internalRoomAdapter, internalUserAdapter, internalFileAdapter, internalNotificationAdapter, internalSettingsAdapter, bridge) {\n        super(bridge, internalUserAdapter, internalFileAdapter, internalSettingsAdapter);\n        this.internalRoomAdapter = void 0;\n        this.internalUserAdapter = void 0;\n        this.internalFileAdapter = void 0;\n        this.internalNotificationAdapter = void 0;\n        this.internalSettingsAdapter = void 0;\n        this.bridge = void 0;\n        this.usersTypingByRoomIdCache = new Map();\n        this.internalRoomAdapter = internalRoomAdapter;\n        this.internalUserAdapter = internalUserAdapter;\n        this.internalFileAdapter = internalFileAdapter;\n        this.internalNotificationAdapter = internalNotificationAdapter;\n        this.internalSettingsAdapter = internalSettingsAdapter;\n        this.bridge = bridge;\n      }\n      handleUsersWhoStoppedTyping(externalRoomId, internalRoomId, externalUserIdsTyping) {\n        var _this$usersTypingByRo, _this$usersTypingByRo2;\n        const isTyping = false;\n        const notTypingAnymore = (_this$usersTypingByRo = this.usersTypingByRoomIdCache.get(externalRoomId)) === null || _this$usersTypingByRo === void 0 ? void 0 : _this$usersTypingByRo.filter(user => !externalUserIdsTyping.includes(user.externalUserId));\n        const stillTyping = (_this$usersTypingByRo2 = this.usersTypingByRoomIdCache.get(externalRoomId)) === null || _this$usersTypingByRo2 === void 0 ? void 0 : _this$usersTypingByRo2.filter(user => externalUserIdsTyping.includes(user.externalUserId));\n        notTypingAnymore === null || notTypingAnymore === void 0 ? void 0 : notTypingAnymore.forEach(user => this.internalNotificationAdapter.notifyUserTypingOnRoom(internalRoomId, user.username, isTyping));\n        this.usersTypingByRoomIdCache.set(externalRoomId, stillTyping || []);\n      }\n      async onUserTyping(userTypingInput) {\n        const {\n          externalUserIdsTyping,\n          externalRoomId\n        } = userTypingInput;\n        const federatedRoom = await this.internalRoomAdapter.getFederatedRoomByExternalId(externalRoomId);\n        if (!federatedRoom) {\n          return;\n        }\n        if (this.usersTypingByRoomIdCache.has(externalRoomId)) {\n          this.handleUsersWhoStoppedTyping(externalRoomId, federatedRoom.getInternalId(), externalUserIdsTyping);\n        }\n        if (externalUserIdsTyping.length === 0) {\n          return;\n        }\n        const federatedUsers = await this.internalUserAdapter.getFederatedUsersByExternalIds(externalUserIdsTyping);\n        if (federatedUsers.length === 0) {\n          return;\n        }\n        const isTyping = true;\n        this.usersTypingByRoomIdCache.set(externalRoomId, federatedUsers.map(federatedUser => {\n          void this.internalNotificationAdapter.notifyUserTypingOnRoom(federatedRoom.getInternalId(), federatedUser.getUsername(), isTyping);\n          return {\n            externalUserId: federatedUser.getInternalId(),\n            username: federatedUser.getUsername()\n          };\n        }));\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","FederationUserServiceReceiver","AbstractFederationApplicationService","link","v","__reifyWaitForDeps__","constructor","internalRoomAdapter","internalUserAdapter","internalFileAdapter","internalNotificationAdapter","internalSettingsAdapter","bridge","usersTypingByRoomIdCache","Map","handleUsersWhoStoppedTyping","externalRoomId","internalRoomId","externalUserIdsTyping","_this$usersTypingByRo","_this$usersTypingByRo2","isTyping","notTypingAnymore","get","filter","user","includes","externalUserId","stillTyping","forEach","notifyUserTypingOnRoom","username","set","onUserTyping","userTypingInput","federatedRoom","getFederatedRoomByExternalId","has","getInternalId","length","federatedUsers","getFederatedUsersByExternalIds","map","federatedUser","getUsername","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/federation/application/user/receiver/UserServiceReceiver.ts"],"sourcesContent":["import type { IFederationBridge } from '../../../domain/IFederationBridge';\nimport type { RocketChatFileAdapter } from '../../../infrastructure/rocket-chat/adapters/File';\nimport type { RocketChatNotificationAdapter } from '../../../infrastructure/rocket-chat/adapters/Notification';\nimport type { RocketChatRoomAdapter } from '../../../infrastructure/rocket-chat/adapters/Room';\nimport type { RocketChatSettingsAdapter } from '../../../infrastructure/rocket-chat/adapters/Settings';\nimport type { RocketChatUserAdapter } from '../../../infrastructure/rocket-chat/adapters/User';\nimport { AbstractFederationApplicationService } from '../../AbstractFederationApplicationService';\nimport type { FederationUserTypingStatusEventDto } from '../../room/input/UserReceiverDto';\n\nexport class FederationUserServiceReceiver extends AbstractFederationApplicationService {\n\tprivate usersTypingByRoomIdCache: Map<string, Record<string, string>[]> = new Map();\n\n\tconstructor(\n\t\tprotected internalRoomAdapter: RocketChatRoomAdapter,\n\t\tprotected internalUserAdapter: RocketChatUserAdapter,\n\t\tprotected internalFileAdapter: RocketChatFileAdapter,\n\t\tprotected internalNotificationAdapter: RocketChatNotificationAdapter,\n\t\tprotected internalSettingsAdapter: RocketChatSettingsAdapter,\n\t\tprotected bridge: IFederationBridge,\n\t) {\n\t\tsuper(bridge, internalUserAdapter, internalFileAdapter, internalSettingsAdapter);\n\t}\n\n\tprivate handleUsersWhoStoppedTyping(externalRoomId: string, internalRoomId: string, externalUserIdsTyping: string[]): void {\n\t\tconst isTyping = false;\n\t\tconst notTypingAnymore = this.usersTypingByRoomIdCache\n\t\t\t.get(externalRoomId)\n\t\t\t?.filter((user) => !externalUserIdsTyping.includes(user.externalUserId));\n\n\t\tconst stillTyping = this.usersTypingByRoomIdCache\n\t\t\t.get(externalRoomId)\n\t\t\t?.filter((user) => externalUserIdsTyping.includes(user.externalUserId));\n\n\t\tnotTypingAnymore?.forEach((user) => this.internalNotificationAdapter.notifyUserTypingOnRoom(internalRoomId, user.username, isTyping));\n\t\tthis.usersTypingByRoomIdCache.set(externalRoomId, stillTyping || []);\n\t}\n\n\tpublic async onUserTyping(userTypingInput: FederationUserTypingStatusEventDto): Promise<void> {\n\t\tconst { externalUserIdsTyping, externalRoomId } = userTypingInput;\n\t\tconst federatedRoom = await this.internalRoomAdapter.getFederatedRoomByExternalId(externalRoomId);\n\t\tif (!federatedRoom) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.usersTypingByRoomIdCache.has(externalRoomId)) {\n\t\t\tthis.handleUsersWhoStoppedTyping(externalRoomId, federatedRoom.getInternalId(), externalUserIdsTyping);\n\t\t}\n\n\t\tif (externalUserIdsTyping.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst federatedUsers = await this.internalUserAdapter.getFederatedUsersByExternalIds(externalUserIdsTyping);\n\t\tif (federatedUsers.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isTyping = true;\n\n\t\tthis.usersTypingByRoomIdCache.set(\n\t\t\texternalRoomId,\n\t\t\tfederatedUsers.map((federatedUser) => {\n\t\t\t\tvoid this.internalNotificationAdapter.notifyUserTypingOnRoom(\n\t\t\t\t\tfederatedRoom.getInternalId(),\n\t\t\t\t\tfederatedUser.getUsername() as string,\n\t\t\t\t\tisTyping,\n\t\t\t\t);\n\n\t\t\t\treturn {\n\t\t\t\t\texternalUserId: federatedUser.getInternalId(),\n\t\t\t\t\tusername: federatedUser.getUsername() as string,\n\t\t\t\t};\n\t\t\t}),\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"103e3b0d813e29de0daf78ed18699e1e97224c5c"}
