{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/nps/getAndCreateNpsSurvey.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/nps/getAndCreateNpsSurvey.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/nps/getAndCreateNpsSurvey.ts","inputSourceMap":{"version":3,"file":"server/services/nps/getAndCreateNpsSurvey.ts","sourceRoot":"","sources":["server/services/nps/getAndCreateNpsSurvey.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,4BAA4B,CAAC;AAEpD,OAAO,EAAE,WAAW,IAAI,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAGjE,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AAYvD,MAAM,CAAC,MAAM,qBAAqB,GAAG,KAAK,UAAU,YAAY,CAAC,KAAa;IAC7E,MAAM,KAAK,GAAG,MAAM,uBAAuB,EAAE,CAAC;IAC9C,IAAI,CAAC,KAAK,EAAE,CAAC;QACZ,OAAO,KAAK,CAAC;IACd,CAAC;IAED,MAAM,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IAEtD,IAAI,CAAC,UAAU,EAAE,CAAC;QACjB,OAAO,KAAK,CAAC;IACd,CAAC;IAED,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAEvC,IAAI,CAAC;QACJ,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,GAAG,MAAM,eAAe,KAAK,EAAE,EAAE;YAC3D,OAAO,EAAE;gBACR,aAAa,EAAE,UAAU,KAAK,EAAE;aAChC;SACD,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;YAChB,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,wCAAwC,EAAE,MAAM,EAAE,CAAC,CAAC;YAC9E,OAAO;QACR,CAAC;QAED,MAAM,UAAU,GAAG,CAAC,MAAM,MAAM,CAAC,IAAI,EAAE,CAAkB,CAAC;QAE1D,MAAM,MAAM,GAAY;YACvB,GAAG,EAAE,KAAK;YACV,QAAQ,EAAE,UAAU,CAAC,QAAQ;YAC7B,SAAS,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;YACzC,QAAQ,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YACvC,OAAO,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YACrC,UAAU,EAAE,IAAI,IAAI,EAAE,EAAE,4CAA4C;YACpE,KAAK,EAAE,UAAU,CAAC,KAAK;YACvB,SAAS,EAAE;gBACV,GAAG,EAAE,YAAY;gBACjB,QAAQ,EAAE,YAAY;aACtB;YACD,IAAI,EAAE,UAAU,CAAC,MAAM;YACvB,OAAO,EAAE,QAAQ;SACjB,CAAC;QAEF,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACZ,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,OAAO,KAAK,CAAC;IACd,CAAC;AACF,CAAC,CAAC","sourcesContent":["import { Banner } from '@rocket.chat/core-services';\nimport type { IBanner, BannerPlatform } from '@rocket.chat/core-typings';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\nimport type * as UiKit from '@rocket.chat/ui-kit';\n\nimport { getWorkspaceAccessToken } from '../../../app/cloud/server';\nimport { settings } from '../../../app/settings/server';\nimport { SystemLogger } from '../../lib/logger/system';\n\ntype NpsSurveyData = {\n\tid: string;\n\tplatform: BannerPlatform[];\n\troles: string[];\n\tsurvey: UiKit.BannerView;\n\tcreatedAt: Date;\n\tstartAt: Date;\n\texpireAt: Date;\n};\n\nexport const getAndCreateNpsSurvey = async function getNpsSurvey(npsId: string) {\n\tconst token = await getWorkspaceAccessToken();\n\tif (!token) {\n\t\treturn false;\n\t}\n\n\tconst npsEnabled = settings.get('NPS_survey_enabled');\n\n\tif (!npsEnabled) {\n\t\treturn false;\n\t}\n\n\tconst npsUrl = settings.get('Nps_Url');\n\n\ttry {\n\t\tconst result = await fetch(`${npsUrl}/v1/surveys/${npsId}`, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t});\n\n\t\tif (!result.ok) {\n\t\t\tSystemLogger.error({ msg: 'invalid response from the nps service:', result });\n\t\t\treturn;\n\t\t}\n\n\t\tconst surveyData = (await result.json()) as NpsSurveyData;\n\n\t\tconst banner: IBanner = {\n\t\t\t_id: npsId,\n\t\t\tplatform: surveyData.platform,\n\t\t\tcreatedAt: new Date(surveyData.createdAt),\n\t\t\texpireAt: new Date(surveyData.expireAt),\n\t\t\tstartAt: new Date(surveyData.startAt),\n\t\t\t_updatedAt: new Date(), // Needed by the IRocketChatRecord interface\n\t\t\troles: surveyData.roles,\n\t\t\tcreatedBy: {\n\t\t\t\t_id: 'rocket.cat',\n\t\t\t\tusername: 'rocket.cat',\n\t\t\t},\n\t\t\tview: surveyData.survey,\n\t\t\tsurface: 'banner',\n\t\t};\n\n\t\tawait Banner.create(banner);\n\t} catch (e) {\n\t\tSystemLogger.error(e);\n\t\treturn false;\n\t}\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/nps/getAndCreateNpsSurvey.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/nps/getAndCreateNpsSurvey.ts","inputSourceMap":{"version":3,"file":"server/services/nps/getAndCreateNpsSurvey.ts","sourceRoot":"","sources":["server/services/nps/getAndCreateNpsSurvey.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,4BAA4B,CAAC;AAEpD,OAAO,EAAE,WAAW,IAAI,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAGjE,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AAYvD,MAAM,CAAC,MAAM,qBAAqB,GAAG,KAAK,UAAU,YAAY,CAAC,KAAa;IAC7E,MAAM,KAAK,GAAG,MAAM,uBAAuB,EAAE,CAAC;IAC9C,IAAI,CAAC,KAAK,EAAE,CAAC;QACZ,OAAO,KAAK,CAAC;IACd,CAAC;IAED,MAAM,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IAEtD,IAAI,CAAC,UAAU,EAAE,CAAC;QACjB,OAAO,KAAK,CAAC;IACd,CAAC;IAED,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAEvC,IAAI,CAAC;QACJ,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,GAAG,MAAM,eAAe,KAAK,EAAE,EAAE;YAC3D,OAAO,EAAE;gBACR,aAAa,EAAE,UAAU,KAAK,EAAE;aAChC;SACD,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;YAChB,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,wCAAwC,EAAE,MAAM,EAAE,CAAC,CAAC;YAC9E,OAAO;QACR,CAAC;QAED,MAAM,UAAU,GAAG,CAAC,MAAM,MAAM,CAAC,IAAI,EAAE,CAAkB,CAAC;QAE1D,MAAM,MAAM,GAAY;YACvB,GAAG,EAAE,KAAK;YACV,QAAQ,EAAE,UAAU,CAAC,QAAQ;YAC7B,SAAS,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;YACzC,QAAQ,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YACvC,OAAO,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YACrC,UAAU,EAAE,IAAI,IAAI,EAAE,EAAE,4CAA4C;YACpE,KAAK,EAAE,UAAU,CAAC,KAAK;YACvB,SAAS,EAAE;gBACV,GAAG,EAAE,YAAY;gBACjB,QAAQ,EAAE,YAAY;aACtB;YACD,IAAI,EAAE,UAAU,CAAC,MAAM;YACvB,OAAO,EAAE,QAAQ;SACjB,CAAC;QAEF,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACZ,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,OAAO,KAAK,CAAC;IACd,CAAC;AACF,CAAC,CAAC","sourcesContent":["import { Banner } from '@rocket.chat/core-services';\nimport type { IBanner, BannerPlatform } from '@rocket.chat/core-typings';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\nimport type * as UiKit from '@rocket.chat/ui-kit';\n\nimport { getWorkspaceAccessToken } from '../../../app/cloud/server';\nimport { settings } from '../../../app/settings/server';\nimport { SystemLogger } from '../../lib/logger/system';\n\ntype NpsSurveyData = {\n\tid: string;\n\tplatform: BannerPlatform[];\n\troles: string[];\n\tsurvey: UiKit.BannerView;\n\tcreatedAt: Date;\n\tstartAt: Date;\n\texpireAt: Date;\n};\n\nexport const getAndCreateNpsSurvey = async function getNpsSurvey(npsId: string) {\n\tconst token = await getWorkspaceAccessToken();\n\tif (!token) {\n\t\treturn false;\n\t}\n\n\tconst npsEnabled = settings.get('NPS_survey_enabled');\n\n\tif (!npsEnabled) {\n\t\treturn false;\n\t}\n\n\tconst npsUrl = settings.get('Nps_Url');\n\n\ttry {\n\t\tconst result = await fetch(`${npsUrl}/v1/surveys/${npsId}`, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t});\n\n\t\tif (!result.ok) {\n\t\t\tSystemLogger.error({ msg: 'invalid response from the nps service:', result });\n\t\t\treturn;\n\t\t}\n\n\t\tconst surveyData = (await result.json()) as NpsSurveyData;\n\n\t\tconst banner: IBanner = {\n\t\t\t_id: npsId,\n\t\t\tplatform: surveyData.platform,\n\t\t\tcreatedAt: new Date(surveyData.createdAt),\n\t\t\texpireAt: new Date(surveyData.expireAt),\n\t\t\tstartAt: new Date(surveyData.startAt),\n\t\t\t_updatedAt: new Date(), // Needed by the IRocketChatRecord interface\n\t\t\troles: surveyData.roles,\n\t\t\tcreatedBy: {\n\t\t\t\t_id: 'rocket.cat',\n\t\t\t\tusername: 'rocket.cat',\n\t\t\t},\n\t\t\tview: surveyData.survey,\n\t\t\tsurface: 'banner',\n\t\t};\n\n\t\tawait Banner.create(banner);\n\t} catch (e) {\n\t\tSystemLogger.error(e);\n\t\treturn false;\n\t}\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      getAndCreateNpsSurvey: () => getAndCreateNpsSurvey\n    });\n    let Banner;\n    module.link(\"@rocket.chat/core-services\", {\n      Banner(v) {\n        Banner = v;\n      }\n    }, 0);\n    let fetch;\n    module.link(\"@rocket.chat/server-fetch\", {\n      serverFetch(v) {\n        fetch = v;\n      }\n    }, 1);\n    let getWorkspaceAccessToken;\n    module.link(\"../../../app/cloud/server\", {\n      getWorkspaceAccessToken(v) {\n        getWorkspaceAccessToken = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    let SystemLogger;\n    module.link(\"../../lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const getAndCreateNpsSurvey = async function getNpsSurvey(npsId) {\n      const token = await getWorkspaceAccessToken();\n      if (!token) {\n        return false;\n      }\n      const npsEnabled = settings.get('NPS_survey_enabled');\n      if (!npsEnabled) {\n        return false;\n      }\n      const npsUrl = settings.get('Nps_Url');\n      try {\n        const result = await fetch(\"\".concat(npsUrl, \"/v1/surveys/\").concat(npsId), {\n          headers: {\n            Authorization: \"Bearer \".concat(token)\n          }\n        });\n        if (!result.ok) {\n          SystemLogger.error({\n            msg: 'invalid response from the nps service:',\n            result\n          });\n          return;\n        }\n        const surveyData = await result.json();\n        const banner = {\n          _id: npsId,\n          platform: surveyData.platform,\n          createdAt: new Date(surveyData.createdAt),\n          expireAt: new Date(surveyData.expireAt),\n          startAt: new Date(surveyData.startAt),\n          _updatedAt: new Date(),\n          // Needed by the IRocketChatRecord interface\n          roles: surveyData.roles,\n          createdBy: {\n            _id: 'rocket.cat',\n            username: 'rocket.cat'\n          },\n          view: surveyData.survey,\n          surface: 'banner'\n        };\n        await Banner.create(banner);\n      } catch (e) {\n        SystemLogger.error(e);\n        return false;\n      }\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","getAndCreateNpsSurvey","Banner","link","v","fetch","serverFetch","getWorkspaceAccessToken","settings","SystemLogger","__reifyWaitForDeps__","getNpsSurvey","npsId","token","npsEnabled","get","npsUrl","result","concat","headers","Authorization","ok","error","msg","surveyData","json","banner","_id","platform","createdAt","Date","expireAt","startAt","_updatedAt","roles","createdBy","username","view","survey","surface","create","e","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/nps/getAndCreateNpsSurvey.ts"],"sourcesContent":["import { Banner } from '@rocket.chat/core-services';\nimport type { IBanner, BannerPlatform } from '@rocket.chat/core-typings';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\nimport type * as UiKit from '@rocket.chat/ui-kit';\n\nimport { getWorkspaceAccessToken } from '../../../app/cloud/server';\nimport { settings } from '../../../app/settings/server';\nimport { SystemLogger } from '../../lib/logger/system';\n\ntype NpsSurveyData = {\n\tid: string;\n\tplatform: BannerPlatform[];\n\troles: string[];\n\tsurvey: UiKit.BannerView;\n\tcreatedAt: Date;\n\tstartAt: Date;\n\texpireAt: Date;\n};\n\nexport const getAndCreateNpsSurvey = async function getNpsSurvey(npsId: string) {\n\tconst token = await getWorkspaceAccessToken();\n\tif (!token) {\n\t\treturn false;\n\t}\n\n\tconst npsEnabled = settings.get('NPS_survey_enabled');\n\n\tif (!npsEnabled) {\n\t\treturn false;\n\t}\n\n\tconst npsUrl = settings.get('Nps_Url');\n\n\ttry {\n\t\tconst result = await fetch(`${npsUrl}/v1/surveys/${npsId}`, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t});\n\n\t\tif (!result.ok) {\n\t\t\tSystemLogger.error({ msg: 'invalid response from the nps service:', result });\n\t\t\treturn;\n\t\t}\n\n\t\tconst surveyData = (await result.json()) as NpsSurveyData;\n\n\t\tconst banner: IBanner = {\n\t\t\t_id: npsId,\n\t\t\tplatform: surveyData.platform,\n\t\t\tcreatedAt: new Date(surveyData.createdAt),\n\t\t\texpireAt: new Date(surveyData.expireAt),\n\t\t\tstartAt: new Date(surveyData.startAt),\n\t\t\t_updatedAt: new Date(), // Needed by the IRocketChatRecord interface\n\t\t\troles: surveyData.roles,\n\t\t\tcreatedBy: {\n\t\t\t\t_id: 'rocket.cat',\n\t\t\t\tusername: 'rocket.cat',\n\t\t\t},\n\t\t\tview: surveyData.survey,\n\t\t\tsurface: 'banner',\n\t\t};\n\n\t\tawait Banner.create(banner);\n\t} catch (e) {\n\t\tSystemLogger.error(e);\n\t\treturn false;\n\t}\n};\n"],"mappings":";;;IAAAA,MAAA,CAAOC,MAAE;MAAMC,qBAAQ,EAAAA,CAAA,KAAAA;IAA6B;IAAA,IAAAC,MAAA;IAAAH,MAAA,CAAAI,IAAA;MAAAD,OAAAE,CAAA;QAAAF,MAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,KAAA;IAAAN,MAAA,CAAAI,IAAA;MAAAG,YAAAF,CAAA;QAAAC,KAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAG,uBAAA;IAAAR,MAAA,CAAAI,IAAA;MAAAI,wBAAAH,CAAA;QAAAG,uBAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,QAAA;IAAAT,MAAA,CAAAI,IAAA;MAAAK,SAAAJ,CAAA;QAAAI,QAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,YAAA;IAAAV,MAAA,CAAAI,IAAA;MAAAM,aAAAL,CAAA;QAAAK,YAAA,GAAAL,CAAA;MAAA;IAAA;IAAA,IAAAM,oBAAA,WAAAA,oBAAA;IAmB7C,MAAMT,qBAAqB,GAAG,eAAeU,YAAYA,CAACC,KAAa;MAC7E,MAAMC,KAAK,GAAG,MAAMN,uBAAuB,EAAE;MAC7C,IAAI,CAACM,KAAK,EAAE;QACX,OAAO,KAAK;MACb;MAEA,MAAMC,UAAU,GAAGN,QAAQ,CAACO,GAAG,CAAC,oBAAoB,CAAC;MAErD,IAAI,CAACD,UAAU,EAAE;QAChB,OAAO,KAAK;MACb;MAEA,MAAME,MAAM,GAAGR,QAAQ,CAACO,GAAG,CAAC,SAAS,CAAC;MAEtC,IAAI;QACH,MAAME,MAAM,GAAG,MAAMZ,KAAK,IAAAa,MAAA,CAAIF,MAAM,kBAAAE,MAAA,CAAeN,KAAK,GAAI;UAC3DO,OAAO,EAAE;YACRC,aAAa,YAAAF,MAAA,CAAYL,KAAK;;SAE/B,CAAC;QAEF,IAAI,CAACI,MAAM,CAACI,EAAE,EAAE;UACfZ,YAAY,CAACa,KAAK,CAAC;YAAEC,GAAG,EAAE,wCAAwC;YAAEN;UAAM,CAAE,CAAC;UAC7E;QACD;QAEA,MAAMO,UAAU,GAAI,MAAMP,MAAM,CAACQ,IAAI,EAAoB;QAEzD,MAAMC,MAAM,GAAY;UACvBC,GAAG,EAAEf,KAAK;UACVgB,QAAQ,EAAEJ,UAAU,CAACI,QAAQ;UAC7BC,SAAS,EAAE,IAAIC,IAAI,CAACN,UAAU,CAACK,SAAS,CAAC;UACzCE,QAAQ,EAAE,IAAID,IAAI,CAACN,UAAU,CAACO,QAAQ,CAAC;UACvCC,OAAO,EAAE,IAAIF,IAAI,CAACN,UAAU,CAACQ,OAAO,CAAC;UACrCC,UAAU,EAAE,IAAIH,IAAI,EAAE;UAAE;UACxBI,KAAK,EAAEV,UAAU,CAACU,KAAK;UACvBC,SAAS,EAAE;YACVR,GAAG,EAAE,YAAY;YACjBS,QAAQ,EAAE;WACV;UACDC,IAAI,EAAEb,UAAU,CAACc,MAAM;UACvBC,OAAO,EAAE;SACT;QAED,MAAMrC,MAAM,CAACsC,MAAM,CAACd,MAAM,CAAC;MAC5B,CAAC,CAAC,OAAOe,CAAC,EAAE;QACXhC,YAAY,CAACa,KAAK,CAACmB,CAAC,CAAC;QACrB,OAAO,KAAK;MACb;IACD,CAAC;IAACC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"88489447122177f8e7e9b2573ae728451122fd93"}
