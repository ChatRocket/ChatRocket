{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/message/StatusIndicators.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/message/StatusIndicators.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/message/StatusIndicators.tsx","inputSourceMap":{"version":3,"file":"client/components/message/StatusIndicators.tsx","sourceRoot":"","sources":["client/components/message/StatusIndicators.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, ITranslatedMessage } from '@rocket.chat/core-typings';\nimport { isEditedMessage, isE2EEMessage, isOTRMessage, isOTRAckMessage, isE2EEPinnedMessage } from '@rocket.chat/core-typings';\nimport { MessageStatusIndicator, MessageStatusIndicatorItem } from '@rocket.chat/fuselage';\nimport { useUserId } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useMessageDateFormatter, useShowStarred, useShowTranslated, useShowFollowing } from './list/MessageListContext';\n\ntype StatusIndicatorsProps = {\n\tmessage: IMessage & Partial<ITranslatedMessage>;\n};\n\nconst StatusIndicators = ({ message }: StatusIndicatorsProps): ReactElement => {\n\tconst { t } = useTranslation();\n\tconst translated = useShowTranslated(message);\n\tconst starred = useShowStarred({ message });\n\tconst following = useShowFollowing({ message });\n\n\tconst isEncryptedMessage = isE2EEMessage(message) || isE2EEPinnedMessage(message);\n\tconst isOtrMessage = isOTRMessage(message) || isOTRAckMessage(message);\n\n\tconst uid = useUserId();\n\n\tconst formatter = useMessageDateFormatter();\n\n\treturn (\n\t\t<MessageStatusIndicator>\n\t\t\t{translated && <MessageStatusIndicatorItem name='language' title={t('Translated')} />}\n\n\t\t\t{following && <MessageStatusIndicatorItem name='bell' title={t('Following')} />}\n\n\t\t\t{message.sentByEmail && <MessageStatusIndicatorItem name='mail' title={t('Message_sent_by_email')} />}\n\t\t\t{isEditedMessage(message) && (\n\t\t\t\t<MessageStatusIndicatorItem\n\t\t\t\t\tname='edit'\n\t\t\t\t\tcolor={message.u._id !== message.editedBy._id ? 'danger' : undefined}\n\t\t\t\t\ttitle={\n\t\t\t\t\t\tmessage.editedBy._id === uid\n\t\t\t\t\t\t\t? t('Message_has_been_edited_at', { date: formatter(message.editedAt) })\n\t\t\t\t\t\t\t: t('Message_has_been_edited_by_at', {\n\t\t\t\t\t\t\t\t\tusername: message.editedBy.username || '?',\n\t\t\t\t\t\t\t\t\tdate: formatter(message.editedAt),\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{message.pinned && <MessageStatusIndicatorItem name='pin' title={t('Message_has_been_pinned')} />}\n\n\t\t\t{isEncryptedMessage && <MessageStatusIndicatorItem name='key' />}\n\n\t\t\t{isOtrMessage && <MessageStatusIndicatorItem name='stopwatch' />}\n\n\t\t\t{starred && <MessageStatusIndicatorItem name='star-filled' title={t('Message_has_been_starred')} />}\n\t\t</MessageStatusIndicator>\n\t);\n};\n\nexport default StatusIndicators;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/message/StatusIndicators.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/message/StatusIndicators.tsx","inputSourceMap":{"version":3,"file":"client/components/message/StatusIndicators.tsx","sourceRoot":"","sources":["client/components/message/StatusIndicators.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, ITranslatedMessage } from '@rocket.chat/core-typings';\nimport { isEditedMessage, isE2EEMessage, isOTRMessage, isOTRAckMessage, isE2EEPinnedMessage } from '@rocket.chat/core-typings';\nimport { MessageStatusIndicator, MessageStatusIndicatorItem } from '@rocket.chat/fuselage';\nimport { useUserId } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useMessageDateFormatter, useShowStarred, useShowTranslated, useShowFollowing } from './list/MessageListContext';\n\ntype StatusIndicatorsProps = {\n\tmessage: IMessage & Partial<ITranslatedMessage>;\n};\n\nconst StatusIndicators = ({ message }: StatusIndicatorsProps): ReactElement => {\n\tconst { t } = useTranslation();\n\tconst translated = useShowTranslated(message);\n\tconst starred = useShowStarred({ message });\n\tconst following = useShowFollowing({ message });\n\n\tconst isEncryptedMessage = isE2EEMessage(message) || isE2EEPinnedMessage(message);\n\tconst isOtrMessage = isOTRMessage(message) || isOTRAckMessage(message);\n\n\tconst uid = useUserId();\n\n\tconst formatter = useMessageDateFormatter();\n\n\treturn (\n\t\t<MessageStatusIndicator>\n\t\t\t{translated && <MessageStatusIndicatorItem name='language' title={t('Translated')} />}\n\n\t\t\t{following && <MessageStatusIndicatorItem name='bell' title={t('Following')} />}\n\n\t\t\t{message.sentByEmail && <MessageStatusIndicatorItem name='mail' title={t('Message_sent_by_email')} />}\n\t\t\t{isEditedMessage(message) && (\n\t\t\t\t<MessageStatusIndicatorItem\n\t\t\t\t\tname='edit'\n\t\t\t\t\tcolor={message.u._id !== message.editedBy._id ? 'danger' : undefined}\n\t\t\t\t\ttitle={\n\t\t\t\t\t\tmessage.editedBy._id === uid\n\t\t\t\t\t\t\t? t('Message_has_been_edited_at', { date: formatter(message.editedAt) })\n\t\t\t\t\t\t\t: t('Message_has_been_edited_by_at', {\n\t\t\t\t\t\t\t\t\tusername: message.editedBy.username || '?',\n\t\t\t\t\t\t\t\t\tdate: formatter(message.editedAt),\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{message.pinned && <MessageStatusIndicatorItem name='pin' title={t('Message_has_been_pinned')} />}\n\n\t\t\t{isEncryptedMessage && <MessageStatusIndicatorItem name='key' />}\n\n\t\t\t{isOtrMessage && <MessageStatusIndicatorItem name='stopwatch' />}\n\n\t\t\t{starred && <MessageStatusIndicatorItem name='star-filled' title={t('Message_has_been_starred')} />}\n\t\t</MessageStatusIndicator>\n\t);\n};\n\nexport default StatusIndicators;\n"]}}},"code":"let isEditedMessage, isE2EEMessage, isOTRMessage, isOTRAckMessage, isE2EEPinnedMessage;\nmodule.link(\"@rocket.chat/core-typings\", {\n  isEditedMessage(v) {\n    isEditedMessage = v;\n  },\n  isE2EEMessage(v) {\n    isE2EEMessage = v;\n  },\n  isOTRMessage(v) {\n    isOTRMessage = v;\n  },\n  isOTRAckMessage(v) {\n    isOTRAckMessage = v;\n  },\n  isE2EEPinnedMessage(v) {\n    isE2EEPinnedMessage = v;\n  }\n}, 0);\nlet MessageStatusIndicator, MessageStatusIndicatorItem;\nmodule.link(\"@rocket.chat/fuselage\", {\n  MessageStatusIndicator(v) {\n    MessageStatusIndicator = v;\n  },\n  MessageStatusIndicatorItem(v) {\n    MessageStatusIndicatorItem = v;\n  }\n}, 1);\nlet useUserId;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useUserId(v) {\n    useUserId = v;\n  }\n}, 2);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n}, 3);\nlet useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 4);\nlet useMessageDateFormatter, useShowStarred, useShowTranslated, useShowFollowing;\nmodule.link(\"./list/MessageListContext\", {\n  useMessageDateFormatter(v) {\n    useMessageDateFormatter = v;\n  },\n  useShowStarred(v) {\n    useShowStarred = v;\n  },\n  useShowTranslated(v) {\n    useShowTranslated = v;\n  },\n  useShowFollowing(v) {\n    useShowFollowing = v;\n  }\n}, 5);\nconst StatusIndicators = _ref => {\n  let {\n    message\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const translated = useShowTranslated(message);\n  const starred = useShowStarred({\n    message\n  });\n  const following = useShowFollowing({\n    message\n  });\n  const isEncryptedMessage = isE2EEMessage(message) || isE2EEPinnedMessage(message);\n  const isOtrMessage = isOTRMessage(message) || isOTRAckMessage(message);\n  const uid = useUserId();\n  const formatter = useMessageDateFormatter();\n  return /*#__PURE__*/React.createElement(MessageStatusIndicator, null, translated && /*#__PURE__*/React.createElement(MessageStatusIndicatorItem, {\n    name: \"language\",\n    title: t('Translated')\n  }), following && /*#__PURE__*/React.createElement(MessageStatusIndicatorItem, {\n    name: \"bell\",\n    title: t('Following')\n  }), message.sentByEmail && /*#__PURE__*/React.createElement(MessageStatusIndicatorItem, {\n    name: \"mail\",\n    title: t('Message_sent_by_email')\n  }), isEditedMessage(message) && /*#__PURE__*/React.createElement(MessageStatusIndicatorItem, {\n    name: \"edit\",\n    color: message.u._id !== message.editedBy._id ? 'danger' : undefined,\n    title: message.editedBy._id === uid ? t('Message_has_been_edited_at', {\n      date: formatter(message.editedAt)\n    }) : t('Message_has_been_edited_by_at', {\n      username: message.editedBy.username || '?',\n      date: formatter(message.editedAt)\n    })\n  }), message.pinned && /*#__PURE__*/React.createElement(MessageStatusIndicatorItem, {\n    name: \"pin\",\n    title: t('Message_has_been_pinned')\n  }), isEncryptedMessage && /*#__PURE__*/React.createElement(MessageStatusIndicatorItem, {\n    name: \"key\"\n  }), isOtrMessage && /*#__PURE__*/React.createElement(MessageStatusIndicatorItem, {\n    name: \"stopwatch\"\n  }), starred && /*#__PURE__*/React.createElement(MessageStatusIndicatorItem, {\n    name: \"star-filled\",\n    title: t('Message_has_been_starred')\n  }));\n};\nmodule.exportDefault(StatusIndicators);","map":{"version":3,"names":["isEditedMessage","isE2EEMessage","isOTRMessage","isOTRAckMessage","isE2EEPinnedMessage","module","link","v","MessageStatusIndicator","MessageStatusIndicatorItem","useUserId","React","default","useTranslation","useMessageDateFormatter","useShowStarred","useShowTranslated","useShowFollowing","StatusIndicators","_ref","message","t","translated","starred","following","isEncryptedMessage","isOtrMessage","uid","formatter","createElement","name","title","sentByEmail","color","u","_id","editedBy","undefined","date","editedAt","username","pinned","exportDefault"],"sources":["client/components/message/StatusIndicators.tsx"],"sourcesContent":["import type { IMessage, ITranslatedMessage } from '@rocket.chat/core-typings';\nimport { isEditedMessage, isE2EEMessage, isOTRMessage, isOTRAckMessage, isE2EEPinnedMessage } from '@rocket.chat/core-typings';\nimport { MessageStatusIndicator, MessageStatusIndicatorItem } from '@rocket.chat/fuselage';\nimport { useUserId } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useMessageDateFormatter, useShowStarred, useShowTranslated, useShowFollowing } from './list/MessageListContext';\n\ntype StatusIndicatorsProps = {\n\tmessage: IMessage & Partial<ITranslatedMessage>;\n};\n\nconst StatusIndicators = ({ message }: StatusIndicatorsProps): ReactElement => {\n\tconst { t } = useTranslation();\n\tconst translated = useShowTranslated(message);\n\tconst starred = useShowStarred({ message });\n\tconst following = useShowFollowing({ message });\n\n\tconst isEncryptedMessage = isE2EEMessage(message) || isE2EEPinnedMessage(message);\n\tconst isOtrMessage = isOTRMessage(message) || isOTRAckMessage(message);\n\n\tconst uid = useUserId();\n\n\tconst formatter = useMessageDateFormatter();\n\n\treturn (\n\t\t<MessageStatusIndicator>\n\t\t\t{translated && <MessageStatusIndicatorItem name='language' title={t('Translated')} />}\n\n\t\t\t{following && <MessageStatusIndicatorItem name='bell' title={t('Following')} />}\n\n\t\t\t{message.sentByEmail && <MessageStatusIndicatorItem name='mail' title={t('Message_sent_by_email')} />}\n\t\t\t{isEditedMessage(message) && (\n\t\t\t\t<MessageStatusIndicatorItem\n\t\t\t\t\tname='edit'\n\t\t\t\t\tcolor={message.u._id !== message.editedBy._id ? 'danger' : undefined}\n\t\t\t\t\ttitle={\n\t\t\t\t\t\tmessage.editedBy._id === uid\n\t\t\t\t\t\t\t? t('Message_has_been_edited_at', { date: formatter(message.editedAt) })\n\t\t\t\t\t\t\t: t('Message_has_been_edited_by_at', {\n\t\t\t\t\t\t\t\t\tusername: message.editedBy.username || '?',\n\t\t\t\t\t\t\t\t\tdate: formatter(message.editedAt),\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{message.pinned && <MessageStatusIndicatorItem name='pin' title={t('Message_has_been_pinned')} />}\n\n\t\t\t{isEncryptedMessage && <MessageStatusIndicatorItem name='key' />}\n\n\t\t\t{isOtrMessage && <MessageStatusIndicatorItem name='stopwatch' />}\n\n\t\t\t{starred && <MessageStatusIndicatorItem name='star-filled' title={t('Message_has_been_starred')} />}\n\t\t</MessageStatusIndicator>\n\t);\n};\n\nexport default StatusIndicators;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c14b40b855c3e868625a58c9e5ac603662af3fe3"}
