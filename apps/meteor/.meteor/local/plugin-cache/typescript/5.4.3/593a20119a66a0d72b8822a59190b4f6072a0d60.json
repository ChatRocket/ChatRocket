{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts","inputSourceMap":{"version":3,"file":"client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts","sourceRoot":"","sources":["client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AAE7E,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAO3C,MAAM,CAAC,MAAM,iCAAiC,GAAG,CAAC,EAAE,OAAO,GAAG,IAAI,EAAE,GAAG,OAAO,KAA+C,EAAE,EAAE,EAAE;IAClI,MAAM,GAAG,GAAG,SAAS,EAAE,CAAC;IAExB,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,sBAAsB,CAAU,EAAE,EAAE,CAAC,CAAC;IAEhF,MAAM,aAAa,GAAG,WAAW,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;IAErE,MAAM,iBAAiB,GAAG,QAAQ,CAAC;QAClC,QAAQ;QACR,OAAO,EAAE,KAAK,IAA0C,EAAE;YACzD,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,aAAa,EAAE,CAAC;YAC3C,OAAO,QAAQ,CAAC;QACjB,CAAC;QACD,OAAO,EAAE,CAAC,CAAC,GAAG,IAAI,OAAO;QACzB,SAAS,EAAE,QAAQ;QACnB,GAAG,OAAO;KACV,CAAC,CAAC;IAEH,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;IAErC,MAAM,qBAAqB,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;IAEvD,SAAS,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YACtB,OAAO;QACR,CAAC;QAED,OAAO,qBAAqB,CAAC,GAAG,GAAG,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;YACnE,QAAQ,IAAI,EAAE,CAAC;gBACd,KAAK,SAAS;oBACb,WAAW,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;oBACxC,MAAM;gBAEP,KAAK,SAAS;oBACb,WAAW,CAAC,YAAY,CAA8B,QAAQ,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE;wBAC5E,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC;oBACnE,CAAC,CAAC,CAAC;oBACH,MAAM;YACR,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,EAAE,qBAAqB,CAAC,CAAC,CAAC;IAEjE,OAAO,iBAAiB,CAAC;AAC1B,CAAC,CAAC","sourcesContent":["import type { IWebdavAccountIntegration } from '@rocket.chat/core-typings';\nimport { useUserId, useEndpoint, useStream } from '@rocket.chat/ui-contexts';\nimport type { UseQueryOptions } from '@tanstack/react-query';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useEffect, useMemo } from 'react';\n\ntype UseWebDAVAccountIntegrationsQueryOptions = Omit<\n\tUseQueryOptions<IWebdavAccountIntegration[], unknown, IWebdavAccountIntegration[], readonly ['webdav', 'account-integrations']>,\n\t'queryKey' | 'queryFn'\n>;\n\nexport const useWebDAVAccountIntegrationsQuery = ({ enabled = true, ...options }: UseWebDAVAccountIntegrationsQueryOptions = {}) => {\n\tconst uid = useUserId();\n\n\tconst queryKey = useMemo(() => ['webdav', 'account-integrations'] as const, []);\n\n\tconst getMyAccounts = useEndpoint('GET', '/v1/webdav.getMyAccounts');\n\n\tconst integrationsQuery = useQuery({\n\t\tqueryKey,\n\t\tqueryFn: async (): Promise<IWebdavAccountIntegration[]> => {\n\t\t\tconst { accounts } = await getMyAccounts();\n\t\t\treturn accounts;\n\t\t},\n\t\tenabled: !!uid && enabled,\n\t\tstaleTime: Infinity,\n\t\t...options,\n\t});\n\n\tconst queryClient = useQueryClient();\n\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\n\tuseEffect(() => {\n\t\tif (!uid || !enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn subscribeToNotifyUser(`${uid}/webdav`, ({ type, account }) => {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'changed':\n\t\t\t\t\tqueryClient.invalidateQueries(queryKey);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'removed':\n\t\t\t\t\tqueryClient.setQueryData<IWebdavAccountIntegration[]>(queryKey, (old = []) => {\n\t\t\t\t\t\treturn old.filter((oldAccount) => oldAccount._id !== account._id);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}, [enabled, queryClient, queryKey, uid, subscribeToNotifyUser]);\n\n\treturn integrationsQuery;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts","inputSourceMap":{"version":3,"file":"client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts","sourceRoot":"","sources":["client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AAE7E,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAO3C,MAAM,CAAC,MAAM,iCAAiC,GAAG,CAAC,EAAE,OAAO,GAAG,IAAI,EAAE,GAAG,OAAO,KAA+C,EAAE,EAAE,EAAE;IAClI,MAAM,GAAG,GAAG,SAAS,EAAE,CAAC;IAExB,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,sBAAsB,CAAU,EAAE,EAAE,CAAC,CAAC;IAEhF,MAAM,aAAa,GAAG,WAAW,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;IAErE,MAAM,iBAAiB,GAAG,QAAQ,CAAC;QAClC,QAAQ;QACR,OAAO,EAAE,KAAK,IAA0C,EAAE;YACzD,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,aAAa,EAAE,CAAC;YAC3C,OAAO,QAAQ,CAAC;QACjB,CAAC;QACD,OAAO,EAAE,CAAC,CAAC,GAAG,IAAI,OAAO;QACzB,SAAS,EAAE,QAAQ;QACnB,GAAG,OAAO;KACV,CAAC,CAAC;IAEH,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;IAErC,MAAM,qBAAqB,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;IAEvD,SAAS,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YACtB,OAAO;QACR,CAAC;QAED,OAAO,qBAAqB,CAAC,GAAG,GAAG,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;YACnE,QAAQ,IAAI,EAAE,CAAC;gBACd,KAAK,SAAS;oBACb,WAAW,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;oBACxC,MAAM;gBAEP,KAAK,SAAS;oBACb,WAAW,CAAC,YAAY,CAA8B,QAAQ,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE;wBAC5E,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC;oBACnE,CAAC,CAAC,CAAC;oBACH,MAAM;YACR,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,EAAE,qBAAqB,CAAC,CAAC,CAAC;IAEjE,OAAO,iBAAiB,CAAC;AAC1B,CAAC,CAAC","sourcesContent":["import type { IWebdavAccountIntegration } from '@rocket.chat/core-typings';\nimport { useUserId, useEndpoint, useStream } from '@rocket.chat/ui-contexts';\nimport type { UseQueryOptions } from '@tanstack/react-query';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useEffect, useMemo } from 'react';\n\ntype UseWebDAVAccountIntegrationsQueryOptions = Omit<\n\tUseQueryOptions<IWebdavAccountIntegration[], unknown, IWebdavAccountIntegration[], readonly ['webdav', 'account-integrations']>,\n\t'queryKey' | 'queryFn'\n>;\n\nexport const useWebDAVAccountIntegrationsQuery = ({ enabled = true, ...options }: UseWebDAVAccountIntegrationsQueryOptions = {}) => {\n\tconst uid = useUserId();\n\n\tconst queryKey = useMemo(() => ['webdav', 'account-integrations'] as const, []);\n\n\tconst getMyAccounts = useEndpoint('GET', '/v1/webdav.getMyAccounts');\n\n\tconst integrationsQuery = useQuery({\n\t\tqueryKey,\n\t\tqueryFn: async (): Promise<IWebdavAccountIntegration[]> => {\n\t\t\tconst { accounts } = await getMyAccounts();\n\t\t\treturn accounts;\n\t\t},\n\t\tenabled: !!uid && enabled,\n\t\tstaleTime: Infinity,\n\t\t...options,\n\t});\n\n\tconst queryClient = useQueryClient();\n\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\n\tuseEffect(() => {\n\t\tif (!uid || !enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn subscribeToNotifyUser(`${uid}/webdav`, ({ type, account }) => {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'changed':\n\t\t\t\t\tqueryClient.invalidateQueries(queryKey);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'removed':\n\t\t\t\t\tqueryClient.setQueryData<IWebdavAccountIntegration[]>(queryKey, (old = []) => {\n\t\t\t\t\t\treturn old.filter((oldAccount) => oldAccount._id !== account._id);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}, [enabled, queryClient, queryKey, uid, subscribeToNotifyUser]);\n\n\treturn integrationsQuery;\n};\n"]}}},"code":"var _excluded = [\"enabled\"];\nvar _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 1);\nvar _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 2);\nmodule.export({\n  useWebDAVAccountIntegrationsQuery: function () {\n    return useWebDAVAccountIntegrationsQuery;\n  }\n});\nvar useUserId, useEndpoint, useStream;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useUserId: function (v) {\n    useUserId = v;\n  },\n  useEndpoint: function (v) {\n    useEndpoint = v;\n  },\n  useStream: function (v) {\n    useStream = v;\n  }\n}, 0);\nvar useQuery, useQueryClient;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery: function (v) {\n    useQuery = v;\n  },\n  useQueryClient: function (v) {\n    useQueryClient = v;\n  }\n}, 1);\nvar useEffect, useMemo;\nmodule.link(\"react\", {\n  useEffect: function (v) {\n    useEffect = v;\n  },\n  useMemo: function (v) {\n    useMemo = v;\n  }\n}, 2);\nvar useWebDAVAccountIntegrationsQuery = function () {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _ref$enabled = _ref.enabled,\n    enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n    options = _objectWithoutProperties(_ref, _excluded);\n  var uid = useUserId();\n  var queryKey = useMemo(function () {\n    return ['webdav', 'account-integrations'];\n  }, []);\n  var getMyAccounts = useEndpoint('GET', '/v1/webdav.getMyAccounts');\n  var integrationsQuery = useQuery(_objectSpread({\n    queryKey: queryKey,\n    queryFn: function () {\n      function _callee() {\n        var _await$getMyAccounts, accounts;\n        return _regeneratorRuntime.async(function () {\n          function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(getMyAccounts());\n              case 2:\n                _await$getMyAccounts = _context.sent;\n                accounts = _await$getMyAccounts.accounts;\n                return _context.abrupt(\"return\", accounts);\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n          return _callee$;\n        }(), null, null, null, Promise);\n      }\n      return _callee;\n    }(),\n    enabled: !!uid && enabled,\n    staleTime: Infinity\n  }, options));\n  var queryClient = useQueryClient();\n  var subscribeToNotifyUser = useStream('notify-user');\n  useEffect(function () {\n    if (!uid || !enabled) {\n      return;\n    }\n    return subscribeToNotifyUser(uid + \"/webdav\", function (_ref2) {\n      var type = _ref2.type,\n        account = _ref2.account;\n      switch (type) {\n        case 'changed':\n          queryClient.invalidateQueries(queryKey);\n          break;\n        case 'removed':\n          queryClient.setQueryData(queryKey, function () {\n            var old = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            return old.filter(function (oldAccount) {\n              return oldAccount._id !== account._id;\n            });\n          });\n          break;\n      }\n    });\n  }, [enabled, queryClient, queryKey, uid, subscribeToNotifyUser]);\n  return integrationsQuery;\n};","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","_objectSpread","_objectWithoutProperties","export","useWebDAVAccountIntegrationsQuery","useUserId","useEndpoint","useStream","useQuery","useQueryClient","useEffect","useMemo","_ref","arguments","length","undefined","_ref$enabled","enabled","options","_excluded","uid","queryKey","getMyAccounts","integrationsQuery","queryFn","_callee","_await$getMyAccounts","accounts","async","_callee$","_context","prev","next","awrap","sent","abrupt","stop","Promise","staleTime","Infinity","queryClient","subscribeToNotifyUser","_ref2","type","account","invalidateQueries","setQueryData","old","filter","oldAccount","_id"],"sources":["client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts"],"sourcesContent":["import type { IWebdavAccountIntegration } from '@rocket.chat/core-typings';\nimport { useUserId, useEndpoint, useStream } from '@rocket.chat/ui-contexts';\nimport type { UseQueryOptions } from '@tanstack/react-query';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useEffect, useMemo } from 'react';\n\ntype UseWebDAVAccountIntegrationsQueryOptions = Omit<\n\tUseQueryOptions<IWebdavAccountIntegration[], unknown, IWebdavAccountIntegration[], readonly ['webdav', 'account-integrations']>,\n\t'queryKey' | 'queryFn'\n>;\n\nexport const useWebDAVAccountIntegrationsQuery = ({ enabled = true, ...options }: UseWebDAVAccountIntegrationsQueryOptions = {}) => {\n\tconst uid = useUserId();\n\n\tconst queryKey = useMemo(() => ['webdav', 'account-integrations'] as const, []);\n\n\tconst getMyAccounts = useEndpoint('GET', '/v1/webdav.getMyAccounts');\n\n\tconst integrationsQuery = useQuery({\n\t\tqueryKey,\n\t\tqueryFn: async (): Promise<IWebdavAccountIntegration[]> => {\n\t\t\tconst { accounts } = await getMyAccounts();\n\t\t\treturn accounts;\n\t\t},\n\t\tenabled: !!uid && enabled,\n\t\tstaleTime: Infinity,\n\t\t...options,\n\t});\n\n\tconst queryClient = useQueryClient();\n\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\n\tuseEffect(() => {\n\t\tif (!uid || !enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn subscribeToNotifyUser(`${uid}/webdav`, ({ type, account }) => {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'changed':\n\t\t\t\t\tqueryClient.invalidateQueries(queryKey);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'removed':\n\t\t\t\t\tqueryClient.setQueryData<IWebdavAccountIntegration[]>(queryKey, (old = []) => {\n\t\t\t\t\t\treturn old.filter((oldAccount) => oldAccount._id !== account._id);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}, [enabled, queryClient, queryKey, uid, subscribeToNotifyUser]);\n\n\treturn integrationsQuery;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"593a20119a66a0d72b8822a59190b4f6072a0d60"}
