{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/omnichannel/reports/hooks/useChannelsSection.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/omnichannel/reports/hooks/useChannelsSection.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/omnichannel/reports/hooks/useChannelsSection.tsx","inputSourceMap":{"version":3,"file":"client/omnichannel/reports/hooks/useChannelsSection.tsx","sourceRoot":"","sources":["client/omnichannel/reports/hooks/useChannelsSection.tsx"],"names":[],"mappings":"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","sourcesContent":["import { capitalize } from '@rocket.chat/string-helpers';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { TFunction } from 'i18next';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { getPeriodRange } from '../../../components/dashboards/periods';\nimport { usePeriodSelectorStorage } from '../../../components/dashboards/usePeriodSelectorStorage';\nimport { PERIOD_OPTIONS } from '../components/constants';\nimport { formatPeriodDescription } from '../utils/formatPeriodDescription';\nimport { getTop } from '../utils/getTop';\nimport { round } from '../utils/round';\nimport { useDefaultDownload } from './useDefaultDownload';\n\ntype DataItem = { label: string; value: number; id: string; rawLabel: string };\n\nconst TYPE_LABEL: Record<string, TranslationKey> = {\n\t'widget': 'Livechat',\n\t'email-inbox': 'Email',\n\t'twilio': 'SMS',\n\t'api': 'Custom_Integration',\n};\n\nconst formatItem = (item: { label: string; value: number }, total: number, t: TFunction): DataItem => {\n\tconst percentage = total > 0 ? round((item.value / total) * 100) : 0;\n\tconst label = `${t(TYPE_LABEL[item.label]) || capitalize(item.label)}`;\n\treturn {\n\t\t...item,\n\t\tlabel: `${label} ${item.value} (${percentage}%)`,\n\t\trawLabel: label,\n\t\tid: item.label,\n\t};\n};\n\nconst formatChartData = (data: { label: string; value: number }[] | undefined = [], total = 0, t: TFunction) => {\n\treturn data.map((item) => formatItem(item, total, t));\n};\n\nexport const useChannelsSection = () => {\n\tconst { t } = useTranslation();\n\tconst [period, periodSelectorProps] = usePeriodSelectorStorage('reports-channels-period', PERIOD_OPTIONS);\n\tconst getConversationsBySource = useEndpoint('GET', '/v1/livechat/analytics/dashboards/conversations-by-source');\n\n\tconst {\n\t\tdata: { data, rawData, total } = { data: [], rawData: [], total: 0 },\n\t\trefetch,\n\t\tisLoading,\n\t\tisError,\n\t\tisSuccess,\n\t} = useQuery(\n\t\t['omnichannel-reports', 'conversations-by-source', period],\n\t\tasync () => {\n\t\t\tconst { start, end } = getPeriodRange(period);\n\t\t\tconst response = await getConversationsBySource({ start: start.toISOString(), end: end.toISOString() });\n\t\t\tconst data = formatChartData(response.data, response.total, t);\n\t\t\tconst displayData: DataItem[] = getTop<DataItem>(5, data, (value) => formatItem({ label: t('Others'), value }, response.total, t));\n\t\t\treturn { ...response, data: displayData, rawData: data };\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 5 * 60 * 1000,\n\t\t},\n\t);\n\n\tconst title = t('Conversations_by_channel');\n\tconst subtitle = t('__count__conversations__period__', {\n\t\tcount: total ?? 0,\n\t\tperiod: formatPeriodDescription(period, t),\n\t});\n\tconst emptyStateSubtitle = t('Omnichannel_Reports_Channels_Empty_Subtitle');\n\n\tconst downloadProps = useDefaultDownload({ columnName: t('Channel'), title, data: rawData, period });\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: 'conversations-by-channel',\n\t\t\ttitle,\n\t\t\tsubtitle,\n\t\t\temptyStateSubtitle,\n\t\t\tdata,\n\t\t\ttotal,\n\t\t\tisLoading,\n\t\t\tisError,\n\t\t\tisDataFound: isSuccess && data.length > 0,\n\t\t\tperiodSelectorProps,\n\t\t\tperiod,\n\t\t\tdownloadProps,\n\t\t\tonRetry: refetch,\n\t\t}),\n\t\t[title, subtitle, emptyStateSubtitle, data, total, isLoading, isError, isSuccess, periodSelectorProps, period, downloadProps, refetch],\n\t);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/omnichannel/reports/hooks/useChannelsSection.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/omnichannel/reports/hooks/useChannelsSection.tsx","inputSourceMap":{"version":3,"file":"client/omnichannel/reports/hooks/useChannelsSection.tsx","sourceRoot":"","sources":["client/omnichannel/reports/hooks/useChannelsSection.tsx"],"names":[],"mappings":"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","sourcesContent":["import { capitalize } from '@rocket.chat/string-helpers';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { TFunction } from 'i18next';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { getPeriodRange } from '../../../components/dashboards/periods';\nimport { usePeriodSelectorStorage } from '../../../components/dashboards/usePeriodSelectorStorage';\nimport { PERIOD_OPTIONS } from '../components/constants';\nimport { formatPeriodDescription } from '../utils/formatPeriodDescription';\nimport { getTop } from '../utils/getTop';\nimport { round } from '../utils/round';\nimport { useDefaultDownload } from './useDefaultDownload';\n\ntype DataItem = { label: string; value: number; id: string; rawLabel: string };\n\nconst TYPE_LABEL: Record<string, TranslationKey> = {\n\t'widget': 'Livechat',\n\t'email-inbox': 'Email',\n\t'twilio': 'SMS',\n\t'api': 'Custom_Integration',\n};\n\nconst formatItem = (item: { label: string; value: number }, total: number, t: TFunction): DataItem => {\n\tconst percentage = total > 0 ? round((item.value / total) * 100) : 0;\n\tconst label = `${t(TYPE_LABEL[item.label]) || capitalize(item.label)}`;\n\treturn {\n\t\t...item,\n\t\tlabel: `${label} ${item.value} (${percentage}%)`,\n\t\trawLabel: label,\n\t\tid: item.label,\n\t};\n};\n\nconst formatChartData = (data: { label: string; value: number }[] | undefined = [], total = 0, t: TFunction) => {\n\treturn data.map((item) => formatItem(item, total, t));\n};\n\nexport const useChannelsSection = () => {\n\tconst { t } = useTranslation();\n\tconst [period, periodSelectorProps] = usePeriodSelectorStorage('reports-channels-period', PERIOD_OPTIONS);\n\tconst getConversationsBySource = useEndpoint('GET', '/v1/livechat/analytics/dashboards/conversations-by-source');\n\n\tconst {\n\t\tdata: { data, rawData, total } = { data: [], rawData: [], total: 0 },\n\t\trefetch,\n\t\tisLoading,\n\t\tisError,\n\t\tisSuccess,\n\t} = useQuery(\n\t\t['omnichannel-reports', 'conversations-by-source', period],\n\t\tasync () => {\n\t\t\tconst { start, end } = getPeriodRange(period);\n\t\t\tconst response = await getConversationsBySource({ start: start.toISOString(), end: end.toISOString() });\n\t\t\tconst data = formatChartData(response.data, response.total, t);\n\t\t\tconst displayData: DataItem[] = getTop<DataItem>(5, data, (value) => formatItem({ label: t('Others'), value }, response.total, t));\n\t\t\treturn { ...response, data: displayData, rawData: data };\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 5 * 60 * 1000,\n\t\t},\n\t);\n\n\tconst title = t('Conversations_by_channel');\n\tconst subtitle = t('__count__conversations__period__', {\n\t\tcount: total ?? 0,\n\t\tperiod: formatPeriodDescription(period, t),\n\t});\n\tconst emptyStateSubtitle = t('Omnichannel_Reports_Channels_Empty_Subtitle');\n\n\tconst downloadProps = useDefaultDownload({ columnName: t('Channel'), title, data: rawData, period });\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: 'conversations-by-channel',\n\t\t\ttitle,\n\t\t\tsubtitle,\n\t\t\temptyStateSubtitle,\n\t\t\tdata,\n\t\t\ttotal,\n\t\t\tisLoading,\n\t\t\tisError,\n\t\t\tisDataFound: isSuccess && data.length > 0,\n\t\t\tperiodSelectorProps,\n\t\t\tperiod,\n\t\t\tdownloadProps,\n\t\t\tonRetry: refetch,\n\t\t}),\n\t\t[title, subtitle, emptyStateSubtitle, data, total, isLoading, isError, isSuccess, periodSelectorProps, period, downloadProps, refetch],\n\t);\n};\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  useChannelsSection: () => useChannelsSection\n});\nlet capitalize;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  capitalize(v) {\n    capitalize = v;\n  }\n}, 0);\nlet useEndpoint;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n}, 1);\nlet useQuery;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery(v) {\n    useQuery = v;\n  }\n}, 2);\nlet useMemo;\nmodule.link(\"react\", {\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 3);\nlet useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 4);\nlet getPeriodRange;\nmodule.link(\"../../../components/dashboards/periods\", {\n  getPeriodRange(v) {\n    getPeriodRange = v;\n  }\n}, 5);\nlet usePeriodSelectorStorage;\nmodule.link(\"../../../components/dashboards/usePeriodSelectorStorage\", {\n  usePeriodSelectorStorage(v) {\n    usePeriodSelectorStorage = v;\n  }\n}, 6);\nlet PERIOD_OPTIONS;\nmodule.link(\"../components/constants\", {\n  PERIOD_OPTIONS(v) {\n    PERIOD_OPTIONS = v;\n  }\n}, 7);\nlet formatPeriodDescription;\nmodule.link(\"../utils/formatPeriodDescription\", {\n  formatPeriodDescription(v) {\n    formatPeriodDescription = v;\n  }\n}, 8);\nlet getTop;\nmodule.link(\"../utils/getTop\", {\n  getTop(v) {\n    getTop = v;\n  }\n}, 9);\nlet round;\nmodule.link(\"../utils/round\", {\n  round(v) {\n    round = v;\n  }\n}, 10);\nlet useDefaultDownload;\nmodule.link(\"./useDefaultDownload\", {\n  useDefaultDownload(v) {\n    useDefaultDownload = v;\n  }\n}, 11);\nconst TYPE_LABEL = {\n  'widget': 'Livechat',\n  'email-inbox': 'Email',\n  'twilio': 'SMS',\n  'api': 'Custom_Integration'\n};\nconst formatItem = (item, total, t) => {\n  const percentage = total > 0 ? round(item.value / total * 100) : 0;\n  const label = \"\".concat(t(TYPE_LABEL[item.label]) || capitalize(item.label));\n  return _objectSpread(_objectSpread({}, item), {}, {\n    label: \"\".concat(label, \" \").concat(item.value, \" (\").concat(percentage, \"%)\"),\n    rawLabel: label,\n    id: item.label\n  });\n};\nconst formatChartData = function () {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let total = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let t = arguments.length > 2 ? arguments[2] : undefined;\n  return data.map(item => formatItem(item, total, t));\n};\nconst useChannelsSection = () => {\n  const {\n    t\n  } = useTranslation();\n  const [period, periodSelectorProps] = usePeriodSelectorStorage('reports-channels-period', PERIOD_OPTIONS);\n  const getConversationsBySource = useEndpoint('GET', '/v1/livechat/analytics/dashboards/conversations-by-source');\n  const {\n    data: {\n      data,\n      rawData,\n      total\n    } = {\n      data: [],\n      rawData: [],\n      total: 0\n    },\n    refetch,\n    isLoading,\n    isError,\n    isSuccess\n  } = useQuery(['omnichannel-reports', 'conversations-by-source', period], async () => {\n    const {\n      start,\n      end\n    } = getPeriodRange(period);\n    const response = await getConversationsBySource({\n      start: start.toISOString(),\n      end: end.toISOString()\n    });\n    const data = formatChartData(response.data, response.total, t);\n    const displayData = getTop(5, data, value => formatItem({\n      label: t('Others'),\n      value\n    }, response.total, t));\n    return _objectSpread(_objectSpread({}, response), {}, {\n      data: displayData,\n      rawData: data\n    });\n  }, {\n    refetchInterval: 5 * 60 * 1000\n  });\n  const title = t('Conversations_by_channel');\n  const subtitle = t('__count__conversations__period__', {\n    count: total !== null && total !== void 0 ? total : 0,\n    period: formatPeriodDescription(period, t)\n  });\n  const emptyStateSubtitle = t('Omnichannel_Reports_Channels_Empty_Subtitle');\n  const downloadProps = useDefaultDownload({\n    columnName: t('Channel'),\n    title,\n    data: rawData,\n    period\n  });\n  return useMemo(() => ({\n    id: 'conversations-by-channel',\n    title,\n    subtitle,\n    emptyStateSubtitle,\n    data,\n    total,\n    isLoading,\n    isError,\n    isDataFound: isSuccess && data.length > 0,\n    periodSelectorProps,\n    period,\n    downloadProps,\n    onRetry: refetch\n  }), [title, subtitle, emptyStateSubtitle, data, total, isLoading, isError, isSuccess, periodSelectorProps, period, downloadProps, refetch]);\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","useChannelsSection","capitalize","useEndpoint","useQuery","useMemo","useTranslation","getPeriodRange","usePeriodSelectorStorage","PERIOD_OPTIONS","formatPeriodDescription","getTop","round","useDefaultDownload","TYPE_LABEL","formatItem","item","total","t","percentage","value","label","concat","rawLabel","id","formatChartData","data","arguments","length","undefined","map","period","periodSelectorProps","getConversationsBySource","rawData","refetch","isLoading","isError","isSuccess","start","end","response","toISOString","displayData","refetchInterval","title","subtitle","count","emptyStateSubtitle","downloadProps","columnName","isDataFound","onRetry"],"sources":["client/omnichannel/reports/hooks/useChannelsSection.tsx"],"sourcesContent":["import { capitalize } from '@rocket.chat/string-helpers';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { TFunction } from 'i18next';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { getPeriodRange } from '../../../components/dashboards/periods';\nimport { usePeriodSelectorStorage } from '../../../components/dashboards/usePeriodSelectorStorage';\nimport { PERIOD_OPTIONS } from '../components/constants';\nimport { formatPeriodDescription } from '../utils/formatPeriodDescription';\nimport { getTop } from '../utils/getTop';\nimport { round } from '../utils/round';\nimport { useDefaultDownload } from './useDefaultDownload';\n\ntype DataItem = { label: string; value: number; id: string; rawLabel: string };\n\nconst TYPE_LABEL: Record<string, TranslationKey> = {\n\t'widget': 'Livechat',\n\t'email-inbox': 'Email',\n\t'twilio': 'SMS',\n\t'api': 'Custom_Integration',\n};\n\nconst formatItem = (item: { label: string; value: number }, total: number, t: TFunction): DataItem => {\n\tconst percentage = total > 0 ? round((item.value / total) * 100) : 0;\n\tconst label = `${t(TYPE_LABEL[item.label]) || capitalize(item.label)}`;\n\treturn {\n\t\t...item,\n\t\tlabel: `${label} ${item.value} (${percentage}%)`,\n\t\trawLabel: label,\n\t\tid: item.label,\n\t};\n};\n\nconst formatChartData = (data: { label: string; value: number }[] | undefined = [], total = 0, t: TFunction) => {\n\treturn data.map((item) => formatItem(item, total, t));\n};\n\nexport const useChannelsSection = () => {\n\tconst { t } = useTranslation();\n\tconst [period, periodSelectorProps] = usePeriodSelectorStorage('reports-channels-period', PERIOD_OPTIONS);\n\tconst getConversationsBySource = useEndpoint('GET', '/v1/livechat/analytics/dashboards/conversations-by-source');\n\n\tconst {\n\t\tdata: { data, rawData, total } = { data: [], rawData: [], total: 0 },\n\t\trefetch,\n\t\tisLoading,\n\t\tisError,\n\t\tisSuccess,\n\t} = useQuery(\n\t\t['omnichannel-reports', 'conversations-by-source', period],\n\t\tasync () => {\n\t\t\tconst { start, end } = getPeriodRange(period);\n\t\t\tconst response = await getConversationsBySource({ start: start.toISOString(), end: end.toISOString() });\n\t\t\tconst data = formatChartData(response.data, response.total, t);\n\t\t\tconst displayData: DataItem[] = getTop<DataItem>(5, data, (value) => formatItem({ label: t('Others'), value }, response.total, t));\n\t\t\treturn { ...response, data: displayData, rawData: data };\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 5 * 60 * 1000,\n\t\t},\n\t);\n\n\tconst title = t('Conversations_by_channel');\n\tconst subtitle = t('__count__conversations__period__', {\n\t\tcount: total ?? 0,\n\t\tperiod: formatPeriodDescription(period, t),\n\t});\n\tconst emptyStateSubtitle = t('Omnichannel_Reports_Channels_Empty_Subtitle');\n\n\tconst downloadProps = useDefaultDownload({ columnName: t('Channel'), title, data: rawData, period });\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: 'conversations-by-channel',\n\t\t\ttitle,\n\t\t\tsubtitle,\n\t\t\temptyStateSubtitle,\n\t\t\tdata,\n\t\t\ttotal,\n\t\t\tisLoading,\n\t\t\tisError,\n\t\t\tisDataFound: isSuccess && data.length > 0,\n\t\t\tperiodSelectorProps,\n\t\t\tperiod,\n\t\t\tdownloadProps,\n\t\t\tonRetry: refetch,\n\t\t}),\n\t\t[title, subtitle, emptyStateSubtitle, data, total, isLoading, isError, isSuccess, periodSelectorProps, period, downloadProps, refetch],\n\t);\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"6d12a894ee3ba47dbec8af83ef3eac325788f41a"}
