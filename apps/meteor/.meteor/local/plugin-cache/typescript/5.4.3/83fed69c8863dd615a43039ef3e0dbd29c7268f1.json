{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/modals/FileUploadModal/FilePreview.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/modals/FileUploadModal/FilePreview.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/modals/FileUploadModal/FilePreview.tsx","inputSourceMap":{"version":3,"file":"client/views/room/modals/FileUploadModal/FilePreview.tsx","sourceRoot":"","sources":["client/views/room/modals/FileUploadModal/FilePreview.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAC9C,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,MAAM,EAAE,MAAM,8BAA8B,CAAC;AAEtD,MAAM,CAAN,IAAY,eAIX;AAJD,WAAY,eAAe;IAC1B,kCAAe,CAAA;IACf,kCAAe,CAAA;IACf,kCAAe,CAAA;AAChB,CAAC,EAJW,eAAe,KAAf,eAAe,QAI1B;AAED,MAAM,WAAW,GAAG,CAAC,QAAsB,EAA+B,EAAE;IAC3E,IAAI,CAAC,QAAQ,EAAE,CAAC;QACf,OAAO;IACR,CAAC;IACD,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC;QACnD,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YACjC,OAAO,IAAI,CAAC;QACb,CAAC;IACF,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,sBAAsB,GAAG,CAAC,IAAU,EAAE,QAAqC,EAAW,EAAE;IAC7F,IAAI,CAAC,QAAQ,EAAE,CAAC;QACf,OAAO,KAAK,CAAC;IACd,CAAC;IACD,IAAI,MAAM,EAAE,CAAC;QACZ,OAAO,KAAK,CAAC;IACd,CAAC;IACD,8CAA8C;IAC9C,IAAI,IAAI,CAAC,IAAI,GAAG,QAAQ,EAAE,CAAC;QAC1B,OAAO,KAAK,CAAC;IACd,CAAC;IACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;QACxD,OAAO,KAAK,CAAC;IACd,CAAC;IACD,OAAO,IAAI,CAAC;AACb,CAAC,CAAC;AAMF,MAAM,WAAW,GAAG,CAAC,EAAE,IAAI,EAAoB,EAAgB,EAAE;IAChE,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAExC,IAAI,sBAAsB,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC;QAC5C,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,QAA2B,CAAC,EAAG,CAAC;IAC5E,CAAC;IAED,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAG,CAAC;AACvC,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import type { ReactElement } from 'react';\nimport React from 'react';\n\nimport GenericPreview from './GenericPreview';\nimport MediaPreview from './MediaPreview';\nimport { isIE11 } from '../../../../lib/utils/isIE11';\n\nexport enum FilePreviewType {\n\tIMAGE = 'image',\n\tAUDIO = 'audio',\n\tVIDEO = 'video',\n}\n\nconst getFileType = (fileType: File['type']): FilePreviewType | undefined => {\n\tif (!fileType) {\n\t\treturn;\n\t}\n\tfor (const type of Object.values(FilePreviewType)) {\n\t\tif (fileType.indexOf(type) > -1) {\n\t\t\treturn type;\n\t\t}\n\t}\n};\n\nconst shouldShowMediaPreview = (file: File, fileType: FilePreviewType | undefined): boolean => {\n\tif (!fileType) {\n\t\treturn false;\n\t}\n\tif (isIE11) {\n\t\treturn false;\n\t}\n\t// Avoid preview if file size bigger than 10mb\n\tif (file.size > 10000000) {\n\t\treturn false;\n\t}\n\tif (!Object.values(FilePreviewType).includes(fileType)) {\n\t\treturn false;\n\t}\n\treturn true;\n};\n\ntype FilePreviewProps = {\n\tfile: File;\n};\n\nconst FilePreview = ({ file }: FilePreviewProps): ReactElement => {\n\tconst fileType = getFileType(file.type);\n\n\tif (shouldShowMediaPreview(file, fileType)) {\n\t\treturn <MediaPreview file={file} fileType={fileType as FilePreviewType} />;\n\t}\n\n\treturn <GenericPreview file={file} />;\n};\n\nexport default FilePreview;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/modals/FileUploadModal/FilePreview.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/modals/FileUploadModal/FilePreview.tsx","inputSourceMap":{"version":3,"file":"client/views/room/modals/FileUploadModal/FilePreview.tsx","sourceRoot":"","sources":["client/views/room/modals/FileUploadModal/FilePreview.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAC9C,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,MAAM,EAAE,MAAM,8BAA8B,CAAC;AAEtD,MAAM,CAAN,IAAY,eAIX;AAJD,WAAY,eAAe;IAC1B,kCAAe,CAAA;IACf,kCAAe,CAAA;IACf,kCAAe,CAAA;AAChB,CAAC,EAJW,eAAe,KAAf,eAAe,QAI1B;AAED,MAAM,WAAW,GAAG,CAAC,QAAsB,EAA+B,EAAE;IAC3E,IAAI,CAAC,QAAQ,EAAE,CAAC;QACf,OAAO;IACR,CAAC;IACD,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC;QACnD,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YACjC,OAAO,IAAI,CAAC;QACb,CAAC;IACF,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,sBAAsB,GAAG,CAAC,IAAU,EAAE,QAAqC,EAAW,EAAE;IAC7F,IAAI,CAAC,QAAQ,EAAE,CAAC;QACf,OAAO,KAAK,CAAC;IACd,CAAC;IACD,IAAI,MAAM,EAAE,CAAC;QACZ,OAAO,KAAK,CAAC;IACd,CAAC;IACD,8CAA8C;IAC9C,IAAI,IAAI,CAAC,IAAI,GAAG,QAAQ,EAAE,CAAC;QAC1B,OAAO,KAAK,CAAC;IACd,CAAC;IACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;QACxD,OAAO,KAAK,CAAC;IACd,CAAC;IACD,OAAO,IAAI,CAAC;AACb,CAAC,CAAC;AAMF,MAAM,WAAW,GAAG,CAAC,EAAE,IAAI,EAAoB,EAAgB,EAAE;IAChE,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAExC,IAAI,sBAAsB,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC;QAC5C,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,QAA2B,CAAC,EAAG,CAAC;IAC5E,CAAC;IAED,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAG,CAAC;AACvC,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import type { ReactElement } from 'react';\nimport React from 'react';\n\nimport GenericPreview from './GenericPreview';\nimport MediaPreview from './MediaPreview';\nimport { isIE11 } from '../../../../lib/utils/isIE11';\n\nexport enum FilePreviewType {\n\tIMAGE = 'image',\n\tAUDIO = 'audio',\n\tVIDEO = 'video',\n}\n\nconst getFileType = (fileType: File['type']): FilePreviewType | undefined => {\n\tif (!fileType) {\n\t\treturn;\n\t}\n\tfor (const type of Object.values(FilePreviewType)) {\n\t\tif (fileType.indexOf(type) > -1) {\n\t\t\treturn type;\n\t\t}\n\t}\n};\n\nconst shouldShowMediaPreview = (file: File, fileType: FilePreviewType | undefined): boolean => {\n\tif (!fileType) {\n\t\treturn false;\n\t}\n\tif (isIE11) {\n\t\treturn false;\n\t}\n\t// Avoid preview if file size bigger than 10mb\n\tif (file.size > 10000000) {\n\t\treturn false;\n\t}\n\tif (!Object.values(FilePreviewType).includes(fileType)) {\n\t\treturn false;\n\t}\n\treturn true;\n};\n\ntype FilePreviewProps = {\n\tfile: File;\n};\n\nconst FilePreview = ({ file }: FilePreviewProps): ReactElement => {\n\tconst fileType = getFileType(file.type);\n\n\tif (shouldShowMediaPreview(file, fileType)) {\n\t\treturn <MediaPreview file={file} fileType={fileType as FilePreviewType} />;\n\t}\n\n\treturn <GenericPreview file={file} />;\n};\n\nexport default FilePreview;\n"]}}},"code":"module.export({\n  FilePreviewType: () => FilePreviewType\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n}, 0);\nlet GenericPreview;\nmodule.link(\"./GenericPreview\", {\n  default(v) {\n    GenericPreview = v;\n  }\n}, 1);\nlet MediaPreview;\nmodule.link(\"./MediaPreview\", {\n  default(v) {\n    MediaPreview = v;\n  }\n}, 2);\nlet isIE11;\nmodule.link(\"../../../../lib/utils/isIE11\", {\n  isIE11(v) {\n    isIE11 = v;\n  }\n}, 3);\nvar FilePreviewType;\n(function (FilePreviewType) {\n  FilePreviewType[\"IMAGE\"] = \"image\";\n  FilePreviewType[\"AUDIO\"] = \"audio\";\n  FilePreviewType[\"VIDEO\"] = \"video\";\n})(FilePreviewType || module.runSetters(FilePreviewType = {}, [\"FilePreviewType\"]));\nconst getFileType = fileType => {\n  if (!fileType) {\n    return;\n  }\n  for (const type of Object.values(FilePreviewType)) {\n    if (fileType.indexOf(type) > -1) {\n      return type;\n    }\n  }\n};\nconst shouldShowMediaPreview = (file, fileType) => {\n  if (!fileType) {\n    return false;\n  }\n  if (isIE11) {\n    return false;\n  }\n  // Avoid preview if file size bigger than 10mb\n  if (file.size > 10000000) {\n    return false;\n  }\n  if (!Object.values(FilePreviewType).includes(fileType)) {\n    return false;\n  }\n  return true;\n};\nconst FilePreview = _ref => {\n  let {\n    file\n  } = _ref;\n  const fileType = getFileType(file.type);\n  if (shouldShowMediaPreview(file, fileType)) {\n    return /*#__PURE__*/React.createElement(MediaPreview, {\n      file: file,\n      fileType: fileType\n    });\n  }\n  return /*#__PURE__*/React.createElement(GenericPreview, {\n    file: file\n  });\n};\nmodule.exportDefault(FilePreview);","map":{"version":3,"names":["module","export","FilePreviewType","React","link","default","v","GenericPreview","MediaPreview","isIE11","runSetters","getFileType","fileType","type","Object","values","indexOf","shouldShowMediaPreview","file","size","includes","FilePreview","_ref","createElement","exportDefault"],"sources":["client/views/room/modals/FileUploadModal/FilePreview.tsx"],"sourcesContent":["import type { ReactElement } from 'react';\nimport React from 'react';\n\nimport GenericPreview from './GenericPreview';\nimport MediaPreview from './MediaPreview';\nimport { isIE11 } from '../../../../lib/utils/isIE11';\n\nexport enum FilePreviewType {\n\tIMAGE = 'image',\n\tAUDIO = 'audio',\n\tVIDEO = 'video',\n}\n\nconst getFileType = (fileType: File['type']): FilePreviewType | undefined => {\n\tif (!fileType) {\n\t\treturn;\n\t}\n\tfor (const type of Object.values(FilePreviewType)) {\n\t\tif (fileType.indexOf(type) > -1) {\n\t\t\treturn type;\n\t\t}\n\t}\n};\n\nconst shouldShowMediaPreview = (file: File, fileType: FilePreviewType | undefined): boolean => {\n\tif (!fileType) {\n\t\treturn false;\n\t}\n\tif (isIE11) {\n\t\treturn false;\n\t}\n\t// Avoid preview if file size bigger than 10mb\n\tif (file.size > 10000000) {\n\t\treturn false;\n\t}\n\tif (!Object.values(FilePreviewType).includes(fileType)) {\n\t\treturn false;\n\t}\n\treturn true;\n};\n\ntype FilePreviewProps = {\n\tfile: File;\n};\n\nconst FilePreview = ({ file }: FilePreviewProps): ReactElement => {\n\tconst fileType = getFileType(file.type);\n\n\tif (shouldShowMediaPreview(file, fileType)) {\n\t\treturn <MediaPreview file={file} fileType={fileType as FilePreviewType} />;\n\t}\n\n\treturn <GenericPreview file={file} />;\n};\n\nexport default FilePreview;\n"],"mappings":"AACAA,MAAA,CAAOC,MAAK;EAAAC,eAAc,EAAAA,CAAA,KAAAA;AAAA;AAAA,IAAAC,KAAA;AAAAH,MAAA,CAAAI,IAAA;EAAAC,QAAAC,CAAA;IAAAH,KAAA,GAAAG,CAAA;EAAA;AAAA;AAAA,IAAAC,cAAA;AAAAP,MAAA,CAAAI,IAAA;EAAAC,QAAAC,CAAA;IAAAC,cAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,YAAA;AAAAR,MAAA,CAAAI,IAAA;EAAAC,QAAAC,CAAA;IAAAE,YAAA,GAAAF,CAAA;EAAA;AAAA;AAAA,IAAAG,MAAA;AAAAT,MAAA,CAAAI,IAAA;EAAAK,OAAAH,CAAA;IAAAG,MAAA,GAAAH,CAAA;EAAA;AAAA;AAM1B,IAAYJ,eAIX;AAJD,WAAYA,eAAe;EAC1BA,eAAA,mBAAe;EACfA,eAAA,mBAAe;EACfA,eAAA,mBAAe;AAChB,CAAC,EAJWA,eAAe,IAAAF,MAAA,CAAAU,UAAA,CAAfR,eAAe;AAM3B,MAAMS,WAAW,GAAIC,QAAsB,IAAiC;EAC3E,IAAI,CAACA,QAAQ,EAAE;IACd;EACD;EACA,KAAK,MAAMC,IAAI,IAAIC,MAAM,CAACC,MAAM,CAACb,eAAe,CAAC,EAAE;IAClD,IAAIU,QAAQ,CAACI,OAAO,CAACH,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;MAChC,OAAOA,IAAI;IACZ;EACD;AACD,CAAC;AAED,MAAMI,sBAAsB,GAAGA,CAACC,IAAU,EAAEN,QAAqC,KAAa;EAC7F,IAAI,CAACA,QAAQ,EAAE;IACd,OAAO,KAAK;EACb;EACA,IAAIH,MAAM,EAAE;IACX,OAAO,KAAK;EACb;EACA;EACA,IAAIS,IAAI,CAACC,IAAI,GAAG,QAAQ,EAAE;IACzB,OAAO,KAAK;EACb;EACA,IAAI,CAACL,MAAM,CAACC,MAAM,CAACb,eAAe,CAAC,CAACkB,QAAQ,CAACR,QAAQ,CAAC,EAAE;IACvD,OAAO,KAAK;EACb;EACA,OAAO,IAAI;AACZ,CAAC;AAMD,MAAMS,WAAW,GAAGC,IAAA,IAA6C;EAAA,IAA5C;IAAEJ;EAAI,CAAoB,GAAAI,IAAA;EAC9C,MAAMV,QAAQ,GAAGD,WAAW,CAACO,IAAI,CAACL,IAAI,CAAC;EAEvC,IAAII,sBAAsB,CAACC,IAAI,EAAEN,QAAQ,CAAC,EAAE;IAC3C,oBAAOT,KAAA,CAAAoB,aAAA,CAACf,YAAY;MAACU,IAAI,EAAEA,IAAK;MAACN,QAAQ,EAAEA;IAA4B,EAAG;EAC3E;EAEA,oBAAOT,KAAA,CAAAoB,aAAA,CAAChB,cAAc;IAACW,IAAI,EAAEA;EAAK,EAAG;AACtC,CAAC;AApDDlB,MAAA,CAAOwB,aAAW,CAsDHH,WAtDG,CAAO","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"83fed69c8863dd615a43039ef3e0dbd29c7268f1"}
