{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/apps/appRequestsCron.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/apps/appRequestsCron.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/apps/appRequestsCron.ts","inputSourceMap":{"version":3,"file":"ee/server/apps/appRequestsCron.ts","sourceRoot":"","sources":["ee/server/apps/appRequestsCron.ts"],"names":[],"mappings":"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","sourcesContent":["import { cronJobs } from '@rocket.chat/cron';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\n\nimport { getWorkspaceAccessToken } from '../../../app/cloud/server';\nimport { settings } from '../../../app/settings/server';\nimport { appRequestNotififyForUsers } from './marketplace/appRequestNotifyUsers';\nimport { Apps } from './orchestrator';\n\nconst appsNotifyAppRequests = async function _appsNotifyAppRequests() {\n\ttry {\n\t\tconst installedApps = await Apps.installedApps({ enabled: true });\n\t\tif (!installedApps || installedApps.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst workspaceUrl = settings.get<string>('Site_Url');\n\t\tconst token = await getWorkspaceAccessToken();\n\n\t\tif (!token) {\n\t\t\tApps.debugLog(`could not load workspace token to send app requests notifications`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst baseUrl = Apps.getMarketplaceUrl();\n\t\tif (!baseUrl) {\n\t\t\tApps.debugLog(`could not load marketplace base url to send app requests notifications`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst options = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\n\t\tconst pendingSentUrl = `${baseUrl}/v1/app-request/sent/pending`;\n\t\tconst result = await fetch(pendingSentUrl, options);\n\t\tconst { data } = await result.json();\n\t\tconst filtered = installedApps.filter((app) => data.indexOf(app.getID()) !== -1);\n\n\t\tfor await (const app of filtered) {\n\t\t\tconst appId = app.getID();\n\t\t\tconst appName = app.getName();\n\n\t\t\tconst usersNotified = await appRequestNotififyForUsers(baseUrl, workspaceUrl, appId, appName)\n\t\t\t\t.then(async (response) => {\n\t\t\t\t\t// Mark all app requests as sent\n\t\t\t\t\tawait fetch(`${baseUrl}/v1/app-request/markAsSent/${appId}`, { ...options, method: 'POST' });\n\t\t\t\t\treturn response;\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tApps.debugLog(`could not send app request notifications for app ${appId}. Error: ${err}`);\n\t\t\t\t\treturn err;\n\t\t\t\t});\n\n\t\t\tconst errors = (usersNotified as (string | Error)[]).filter((batch) => batch instanceof Error);\n\t\t\tif (errors.length > 0) {\n\t\t\t\tApps.debugLog(`Some batches of users could not be notified for app ${appId}. Errors: ${errors}`);\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\tApps.debugLog(err);\n\t}\n};\n\nawait cronJobs.add('Apps-Request-End-Users:notify', '0 */12 * * *', async () => appsNotifyAppRequests());\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/apps/appRequestsCron.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/apps/appRequestsCron.ts","inputSourceMap":{"version":3,"file":"ee/server/apps/appRequestsCron.ts","sourceRoot":"","sources":["ee/server/apps/appRequestsCron.ts"],"names":[],"mappings":"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","sourcesContent":["import { cronJobs } from '@rocket.chat/cron';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\n\nimport { getWorkspaceAccessToken } from '../../../app/cloud/server';\nimport { settings } from '../../../app/settings/server';\nimport { appRequestNotififyForUsers } from './marketplace/appRequestNotifyUsers';\nimport { Apps } from './orchestrator';\n\nconst appsNotifyAppRequests = async function _appsNotifyAppRequests() {\n\ttry {\n\t\tconst installedApps = await Apps.installedApps({ enabled: true });\n\t\tif (!installedApps || installedApps.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst workspaceUrl = settings.get<string>('Site_Url');\n\t\tconst token = await getWorkspaceAccessToken();\n\n\t\tif (!token) {\n\t\t\tApps.debugLog(`could not load workspace token to send app requests notifications`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst baseUrl = Apps.getMarketplaceUrl();\n\t\tif (!baseUrl) {\n\t\t\tApps.debugLog(`could not load marketplace base url to send app requests notifications`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst options = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\n\t\tconst pendingSentUrl = `${baseUrl}/v1/app-request/sent/pending`;\n\t\tconst result = await fetch(pendingSentUrl, options);\n\t\tconst { data } = await result.json();\n\t\tconst filtered = installedApps.filter((app) => data.indexOf(app.getID()) !== -1);\n\n\t\tfor await (const app of filtered) {\n\t\t\tconst appId = app.getID();\n\t\t\tconst appName = app.getName();\n\n\t\t\tconst usersNotified = await appRequestNotififyForUsers(baseUrl, workspaceUrl, appId, appName)\n\t\t\t\t.then(async (response) => {\n\t\t\t\t\t// Mark all app requests as sent\n\t\t\t\t\tawait fetch(`${baseUrl}/v1/app-request/markAsSent/${appId}`, { ...options, method: 'POST' });\n\t\t\t\t\treturn response;\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tApps.debugLog(`could not send app request notifications for app ${appId}. Error: ${err}`);\n\t\t\t\t\treturn err;\n\t\t\t\t});\n\n\t\t\tconst errors = (usersNotified as (string | Error)[]).filter((batch) => batch instanceof Error);\n\t\t\tif (errors.length > 0) {\n\t\t\t\tApps.debugLog(`Some batches of users could not be notified for app ${appId}. Errors: ${errors}`);\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\tApps.debugLog(err);\n\t}\n};\n\nawait cronJobs.add('Apps-Request-End-Users:notify', '0 */12 * * *', async () => appsNotifyAppRequests());\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    let cronJobs;\n    module.link(\"@rocket.chat/cron\", {\n      cronJobs(v) {\n        cronJobs = v;\n      }\n    }, 0);\n    let fetch;\n    module.link(\"@rocket.chat/server-fetch\", {\n      serverFetch(v) {\n        fetch = v;\n      }\n    }, 1);\n    let getWorkspaceAccessToken;\n    module.link(\"../../../app/cloud/server\", {\n      getWorkspaceAccessToken(v) {\n        getWorkspaceAccessToken = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    let appRequestNotififyForUsers;\n    module.link(\"./marketplace/appRequestNotifyUsers\", {\n      appRequestNotififyForUsers(v) {\n        appRequestNotififyForUsers = v;\n      }\n    }, 4);\n    let Apps;\n    module.link(\"./orchestrator\", {\n      Apps(v) {\n        Apps = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const appsNotifyAppRequests = async function _appsNotifyAppRequests() {\n      try {\n        const installedApps = await Apps.installedApps({\n          enabled: true\n        });\n        if (!installedApps || installedApps.length === 0) {\n          return;\n        }\n        const workspaceUrl = settings.get('Site_Url');\n        const token = await getWorkspaceAccessToken();\n        if (!token) {\n          Apps.debugLog(\"could not load workspace token to send app requests notifications\");\n          return;\n        }\n        const baseUrl = Apps.getMarketplaceUrl();\n        if (!baseUrl) {\n          Apps.debugLog(\"could not load marketplace base url to send app requests notifications\");\n          return;\n        }\n        const options = {\n          headers: {\n            Authorization: \"Bearer \".concat(token)\n          }\n        };\n        const pendingSentUrl = \"\".concat(baseUrl, \"/v1/app-request/sent/pending\");\n        const result = await fetch(pendingSentUrl, options);\n        const {\n          data\n        } = await result.json();\n        const filtered = installedApps.filter(app => data.indexOf(app.getID()) !== -1);\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(filtered), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const app = _step.value;\n            {\n              const appId = app.getID();\n              const appName = app.getName();\n              const usersNotified = await appRequestNotififyForUsers(baseUrl, workspaceUrl, appId, appName).then(async response => {\n                // Mark all app requests as sent\n                await fetch(\"\".concat(baseUrl, \"/v1/app-request/markAsSent/\").concat(appId), _objectSpread(_objectSpread({}, options), {}, {\n                  method: 'POST'\n                }));\n                return response;\n              }).catch(err => {\n                Apps.debugLog(\"could not send app request notifications for app \".concat(appId, \". Error: \").concat(err));\n                return err;\n              });\n              const errors = usersNotified.filter(batch => batch instanceof Error);\n              if (errors.length > 0) {\n                Apps.debugLog(\"Some batches of users could not be notified for app \".concat(appId, \". Errors: \").concat(errors));\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } catch (err) {\n        Apps.debugLog(err);\n      }\n    };\n    await cronJobs.add('Apps-Request-End-Users:notify', '0 */12 * * *', async () => appsNotifyAppRequests());\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: true\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","cronJobs","fetch","serverFetch","getWorkspaceAccessToken","settings","appRequestNotififyForUsers","Apps","__reifyWaitForDeps__","appsNotifyAppRequests","_appsNotifyAppRequests","installedApps","enabled","length","workspaceUrl","get","token","debugLog","baseUrl","getMarketplaceUrl","options","headers","Authorization","concat","pendingSentUrl","result","data","json","filtered","filter","app","indexOf","getID","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","value","appId","appName","getName","usersNotified","then","response","method","catch","err","errors","batch","Error","return","add","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/apps/appRequestsCron.ts"],"sourcesContent":["import { cronJobs } from '@rocket.chat/cron';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\n\nimport { getWorkspaceAccessToken } from '../../../app/cloud/server';\nimport { settings } from '../../../app/settings/server';\nimport { appRequestNotififyForUsers } from './marketplace/appRequestNotifyUsers';\nimport { Apps } from './orchestrator';\n\nconst appsNotifyAppRequests = async function _appsNotifyAppRequests() {\n\ttry {\n\t\tconst installedApps = await Apps.installedApps({ enabled: true });\n\t\tif (!installedApps || installedApps.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst workspaceUrl = settings.get<string>('Site_Url');\n\t\tconst token = await getWorkspaceAccessToken();\n\n\t\tif (!token) {\n\t\t\tApps.debugLog(`could not load workspace token to send app requests notifications`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst baseUrl = Apps.getMarketplaceUrl();\n\t\tif (!baseUrl) {\n\t\t\tApps.debugLog(`could not load marketplace base url to send app requests notifications`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst options = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\n\t\tconst pendingSentUrl = `${baseUrl}/v1/app-request/sent/pending`;\n\t\tconst result = await fetch(pendingSentUrl, options);\n\t\tconst { data } = await result.json();\n\t\tconst filtered = installedApps.filter((app) => data.indexOf(app.getID()) !== -1);\n\n\t\tfor await (const app of filtered) {\n\t\t\tconst appId = app.getID();\n\t\t\tconst appName = app.getName();\n\n\t\t\tconst usersNotified = await appRequestNotififyForUsers(baseUrl, workspaceUrl, appId, appName)\n\t\t\t\t.then(async (response) => {\n\t\t\t\t\t// Mark all app requests as sent\n\t\t\t\t\tawait fetch(`${baseUrl}/v1/app-request/markAsSent/${appId}`, { ...options, method: 'POST' });\n\t\t\t\t\treturn response;\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tApps.debugLog(`could not send app request notifications for app ${appId}. Error: ${err}`);\n\t\t\t\t\treturn err;\n\t\t\t\t});\n\n\t\t\tconst errors = (usersNotified as (string | Error)[]).filter((batch) => batch instanceof Error);\n\t\t\tif (errors.length > 0) {\n\t\t\t\tApps.debugLog(`Some batches of users could not be notified for app ${appId}. Errors: ${errors}`);\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\tApps.debugLog(err);\n\t}\n};\n\nawait cronJobs.add('Apps-Request-End-Users:notify', '0 */12 * * *', async () => appsNotifyAppRequests());\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"7d7b55dcc154388dc5e45eb406e368873720e7ff"}
