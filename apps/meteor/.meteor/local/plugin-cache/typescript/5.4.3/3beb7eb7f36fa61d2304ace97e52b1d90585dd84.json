{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/imports/server/rest/departments.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/imports/server/rest/departments.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/imports/server/rest/departments.ts","inputSourceMap":{"version":3,"file":"app/livechat/imports/server/rest/departments.ts","sourceRoot":"","sources":["app/livechat/imports/server/rest/departments.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatDepartment } from '@rocket.chat/core-typings';\nimport { LivechatDepartment, LivechatDepartmentAgents } from '@rocket.chat/models';\nimport { isGETLivechatDepartmentProps, isPOSTLivechatDepartmentProps } from '@rocket.chat/rest-typings';\nimport { Match, check } from 'meteor/check';\n\nimport { API } from '../../../../api/server';\nimport { getPaginationItems } from '../../../../api/server/helpers/getPaginationItems';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport {\n\tfindDepartments,\n\tfindDepartmentById,\n\tfindDepartmentsToAutocomplete,\n\tfindDepartmentsBetweenIds,\n\tfindDepartmentAgents,\n\tfindArchivedDepartments,\n} from '../../../server/api/lib/departments';\nimport {\n\tsaveDepartment,\n\tarchiveDepartment,\n\tunarchiveDepartment,\n\tsaveDepartmentAgents,\n\tremoveDepartment,\n} from '../../../server/lib/departmentsLib';\nimport { isDepartmentCreationAvailable } from '../../../server/lib/isDepartmentCreationAvailable';\n\nAPI.v1.addRoute(\n\t'livechat/department',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: { GET: isGETLivechatDepartmentProps, POST: isPOSTLivechatDepartmentProps },\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' },\n\t\t\tPOST: { permissions: ['manage-livechat-departments'], operation: 'hasAll' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\n\t\t\tconst { text, enabled, onlyMyDepartments, excludeDepartmentId, showArchived } = this.queryParams;\n\n\t\t\tconst { departments, total } = await findDepartments({\n\t\t\t\tuserId: this.userId,\n\t\t\t\ttext,\n\t\t\t\tenabled: enabled === 'true',\n\t\t\t\tshowArchived: showArchived === 'true',\n\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t\texcludeDepartmentId,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\t// IMO, sort type shouldn't be record, but a generic of the model we're trying to sort\n\t\t\t\t\t// or the form { [k: keyof T]: number | string }\n\t\t\t\t\tsort: sort as any,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success({ departments, count: departments.length, offset, total });\n\t\t},\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tdepartment: Object,\n\t\t\t\tagents: Match.Maybe(Array),\n\t\t\t\tdepartmentUnit: Match.Maybe({ _id: Match.Optional(String) }),\n\t\t\t});\n\n\t\t\tconst agents = this.bodyParams.agents ? { upsert: this.bodyParams.agents } : {};\n\t\t\tconst { departmentUnit } = this.bodyParams;\n\t\t\tconst department = await saveDepartment(\n\t\t\t\tthis.userId,\n\t\t\t\tnull,\n\t\t\t\tthis.bodyParams.department as ILivechatDepartment,\n\t\t\t\tagents,\n\t\t\t\tdepartmentUnit || {},\n\t\t\t);\n\n\t\t\tif (department) {\n\t\t\t\treturn API.v1.success({\n\t\t\t\t\tdepartment,\n\t\t\t\t\tagents: await LivechatDepartmentAgents.find({ departmentId: department._id }).toArray(),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn API.v1.failure();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department/:_id',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' },\n\t\t\tPUT: { permissions: ['manage-livechat-departments', 'add-livechat-department-agents'], operation: 'hasAny' },\n\t\t\tDELETE: { permissions: ['manage-livechat-departments', 'remove-livechat-department'], operation: 'hasAny' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { onlyMyDepartments } = this.queryParams;\n\n\t\t\tconst { department, agents } = await findDepartmentById({\n\t\t\t\tuserId: this.userId,\n\t\t\t\tdepartmentId: this.urlParams._id,\n\t\t\t\tincludeAgents: this.queryParams.includeAgents && this.queryParams.includeAgents === 'true',\n\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t});\n\n\t\t\t// TODO: return 404 when department is not found\n\t\t\t// Currently, FE relies on the fact that this endpoint returns an empty payload\n\t\t\t// to show the \"new\" view. Returning 404 breaks it\n\n\t\t\treturn API.v1.success({ department, agents });\n\t\t},\n\t\tasync put() {\n\t\t\tconst permissionToSave = await hasPermissionAsync(this.userId, 'manage-livechat-departments');\n\t\t\tconst permissionToAddAgents = await hasPermissionAsync(this.userId, 'add-livechat-department-agents');\n\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tdepartment: Object,\n\t\t\t\tagents: Match.Maybe(Array),\n\t\t\t\tdepartmentUnit: Match.Maybe({ _id: Match.Optional(String) }),\n\t\t\t});\n\n\t\t\tconst { _id } = this.urlParams;\n\t\t\tconst { department, agents, departmentUnit } = this.bodyParams;\n\n\t\t\tif (!permissionToSave) {\n\t\t\t\tthrow new Error('error-not-allowed');\n\t\t\t}\n\n\t\t\tconst agentParam = permissionToAddAgents && agents ? { upsert: agents } : {};\n\t\t\tawait saveDepartment(this.userId, _id, department, agentParam, departmentUnit || {});\n\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartment: await LivechatDepartment.findOneById(_id),\n\t\t\t\tagents: await LivechatDepartmentAgents.findByDepartmentId(_id).toArray(),\n\t\t\t});\n\t\t},\n\t\tasync delete() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tawait removeDepartment(this.urlParams._id);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/departments/archived',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: { GET: isGETLivechatDepartmentProps },\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\n\t\t\tconst { text, onlyMyDepartments, excludeDepartmentId } = this.queryParams;\n\n\t\t\tconst { departments, total } = await findArchivedDepartments({\n\t\t\t\tuserId: this.userId,\n\t\t\t\ttext,\n\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t\texcludeDepartmentId,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort: sort as any,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success({ departments, count: departments.length, offset, total });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department/:_id/archive',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['manage-livechat-departments'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tawait archiveDepartment(this.urlParams._id);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department/:_id/unarchive',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['manage-livechat-departments'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tawait unarchiveDepartment(this.urlParams._id);\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department.autocomplete',\n\t{ authRequired: true, permissionsRequired: { GET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' } } },\n\t{\n\t\tasync get() {\n\t\t\tconst { selector, onlyMyDepartments, showArchived } = this.queryParams;\n\t\t\tif (!selector) {\n\t\t\t\treturn API.v1.failure(\"The 'selector' param is required\");\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findDepartmentsToAutocomplete({\n\t\t\t\t\tuid: this.userId,\n\t\t\t\t\tselector: JSON.parse(selector),\n\t\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t\t\tshowArchived: showArchived === 'true',\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department/:_id/agents',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' },\n\t\t\tPOST: { permissions: ['manage-livechat-departments', 'add-livechat-department-agents'], operation: 'hasAny' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\n\t\t\tconst agents = await findDepartmentAgents({\n\t\t\t\tuserId: this.userId,\n\t\t\t\tdepartmentId: this.urlParams._id,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success(agents);\n\t\t},\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tupsert: Array,\n\t\t\t\t\tremove: Array,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tawait saveDepartmentAgents(this.urlParams._id, this.bodyParams);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department.listByIds',\n\t{ authRequired: true, permissionsRequired: { GET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' } } },\n\t{\n\t\tasync get() {\n\t\t\tconst { ids } = this.queryParams;\n\t\t\tconst { fields } = await this.parseJsonQuery();\n\t\t\tif (!ids) {\n\t\t\t\treturn API.v1.failure(\"The 'ids' param is required\");\n\t\t\t}\n\t\t\tif (!Array.isArray(ids)) {\n\t\t\t\treturn API.v1.failure(\"The 'ids' param must be an array\");\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findDepartmentsBetweenIds({\n\t\t\t\t\tids,\n\t\t\t\t\tfields,\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\nAPI.v1.addRoute(\n\t'livechat/department/isDepartmentCreationAvailable',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-livechat-departments', 'manage-livechat-departments'], operation: 'hasAny' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst available = await isDepartmentCreationAvailable();\n\t\t\treturn API.v1.success({ isDepartmentCreationAvailable: available });\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/imports/server/rest/departments.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/imports/server/rest/departments.ts","inputSourceMap":{"version":3,"file":"app/livechat/imports/server/rest/departments.ts","sourceRoot":"","sources":["app/livechat/imports/server/rest/departments.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatDepartment } from '@rocket.chat/core-typings';\nimport { LivechatDepartment, LivechatDepartmentAgents } from '@rocket.chat/models';\nimport { isGETLivechatDepartmentProps, isPOSTLivechatDepartmentProps } from '@rocket.chat/rest-typings';\nimport { Match, check } from 'meteor/check';\n\nimport { API } from '../../../../api/server';\nimport { getPaginationItems } from '../../../../api/server/helpers/getPaginationItems';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport {\n\tfindDepartments,\n\tfindDepartmentById,\n\tfindDepartmentsToAutocomplete,\n\tfindDepartmentsBetweenIds,\n\tfindDepartmentAgents,\n\tfindArchivedDepartments,\n} from '../../../server/api/lib/departments';\nimport {\n\tsaveDepartment,\n\tarchiveDepartment,\n\tunarchiveDepartment,\n\tsaveDepartmentAgents,\n\tremoveDepartment,\n} from '../../../server/lib/departmentsLib';\nimport { isDepartmentCreationAvailable } from '../../../server/lib/isDepartmentCreationAvailable';\n\nAPI.v1.addRoute(\n\t'livechat/department',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: { GET: isGETLivechatDepartmentProps, POST: isPOSTLivechatDepartmentProps },\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' },\n\t\t\tPOST: { permissions: ['manage-livechat-departments'], operation: 'hasAll' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\n\t\t\tconst { text, enabled, onlyMyDepartments, excludeDepartmentId, showArchived } = this.queryParams;\n\n\t\t\tconst { departments, total } = await findDepartments({\n\t\t\t\tuserId: this.userId,\n\t\t\t\ttext,\n\t\t\t\tenabled: enabled === 'true',\n\t\t\t\tshowArchived: showArchived === 'true',\n\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t\texcludeDepartmentId,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\t// IMO, sort type shouldn't be record, but a generic of the model we're trying to sort\n\t\t\t\t\t// or the form { [k: keyof T]: number | string }\n\t\t\t\t\tsort: sort as any,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success({ departments, count: departments.length, offset, total });\n\t\t},\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tdepartment: Object,\n\t\t\t\tagents: Match.Maybe(Array),\n\t\t\t\tdepartmentUnit: Match.Maybe({ _id: Match.Optional(String) }),\n\t\t\t});\n\n\t\t\tconst agents = this.bodyParams.agents ? { upsert: this.bodyParams.agents } : {};\n\t\t\tconst { departmentUnit } = this.bodyParams;\n\t\t\tconst department = await saveDepartment(\n\t\t\t\tthis.userId,\n\t\t\t\tnull,\n\t\t\t\tthis.bodyParams.department as ILivechatDepartment,\n\t\t\t\tagents,\n\t\t\t\tdepartmentUnit || {},\n\t\t\t);\n\n\t\t\tif (department) {\n\t\t\t\treturn API.v1.success({\n\t\t\t\t\tdepartment,\n\t\t\t\t\tagents: await LivechatDepartmentAgents.find({ departmentId: department._id }).toArray(),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn API.v1.failure();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department/:_id',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' },\n\t\t\tPUT: { permissions: ['manage-livechat-departments', 'add-livechat-department-agents'], operation: 'hasAny' },\n\t\t\tDELETE: { permissions: ['manage-livechat-departments', 'remove-livechat-department'], operation: 'hasAny' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { onlyMyDepartments } = this.queryParams;\n\n\t\t\tconst { department, agents } = await findDepartmentById({\n\t\t\t\tuserId: this.userId,\n\t\t\t\tdepartmentId: this.urlParams._id,\n\t\t\t\tincludeAgents: this.queryParams.includeAgents && this.queryParams.includeAgents === 'true',\n\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t});\n\n\t\t\t// TODO: return 404 when department is not found\n\t\t\t// Currently, FE relies on the fact that this endpoint returns an empty payload\n\t\t\t// to show the \"new\" view. Returning 404 breaks it\n\n\t\t\treturn API.v1.success({ department, agents });\n\t\t},\n\t\tasync put() {\n\t\t\tconst permissionToSave = await hasPermissionAsync(this.userId, 'manage-livechat-departments');\n\t\t\tconst permissionToAddAgents = await hasPermissionAsync(this.userId, 'add-livechat-department-agents');\n\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tdepartment: Object,\n\t\t\t\tagents: Match.Maybe(Array),\n\t\t\t\tdepartmentUnit: Match.Maybe({ _id: Match.Optional(String) }),\n\t\t\t});\n\n\t\t\tconst { _id } = this.urlParams;\n\t\t\tconst { department, agents, departmentUnit } = this.bodyParams;\n\n\t\t\tif (!permissionToSave) {\n\t\t\t\tthrow new Error('error-not-allowed');\n\t\t\t}\n\n\t\t\tconst agentParam = permissionToAddAgents && agents ? { upsert: agents } : {};\n\t\t\tawait saveDepartment(this.userId, _id, department, agentParam, departmentUnit || {});\n\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartment: await LivechatDepartment.findOneById(_id),\n\t\t\t\tagents: await LivechatDepartmentAgents.findByDepartmentId(_id).toArray(),\n\t\t\t});\n\t\t},\n\t\tasync delete() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tawait removeDepartment(this.urlParams._id);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/departments/archived',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: { GET: isGETLivechatDepartmentProps },\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\n\t\t\tconst { text, onlyMyDepartments, excludeDepartmentId } = this.queryParams;\n\n\t\t\tconst { departments, total } = await findArchivedDepartments({\n\t\t\t\tuserId: this.userId,\n\t\t\t\ttext,\n\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t\texcludeDepartmentId,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort: sort as any,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success({ departments, count: departments.length, offset, total });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department/:_id/archive',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['manage-livechat-departments'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tawait archiveDepartment(this.urlParams._id);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department/:_id/unarchive',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['manage-livechat-departments'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tawait unarchiveDepartment(this.urlParams._id);\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department.autocomplete',\n\t{ authRequired: true, permissionsRequired: { GET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' } } },\n\t{\n\t\tasync get() {\n\t\t\tconst { selector, onlyMyDepartments, showArchived } = this.queryParams;\n\t\t\tif (!selector) {\n\t\t\t\treturn API.v1.failure(\"The 'selector' param is required\");\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findDepartmentsToAutocomplete({\n\t\t\t\t\tuid: this.userId,\n\t\t\t\t\tselector: JSON.parse(selector),\n\t\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t\t\tshowArchived: showArchived === 'true',\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department/:_id/agents',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' },\n\t\t\tPOST: { permissions: ['manage-livechat-departments', 'add-livechat-department-agents'], operation: 'hasAny' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\n\t\t\tconst agents = await findDepartmentAgents({\n\t\t\t\tuserId: this.userId,\n\t\t\t\tdepartmentId: this.urlParams._id,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success(agents);\n\t\t},\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tupsert: Array,\n\t\t\t\t\tremove: Array,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tawait saveDepartmentAgents(this.urlParams._id, this.bodyParams);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department.listByIds',\n\t{ authRequired: true, permissionsRequired: { GET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' } } },\n\t{\n\t\tasync get() {\n\t\t\tconst { ids } = this.queryParams;\n\t\t\tconst { fields } = await this.parseJsonQuery();\n\t\t\tif (!ids) {\n\t\t\t\treturn API.v1.failure(\"The 'ids' param is required\");\n\t\t\t}\n\t\t\tif (!Array.isArray(ids)) {\n\t\t\t\treturn API.v1.failure(\"The 'ids' param must be an array\");\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findDepartmentsBetweenIds({\n\t\t\t\t\tids,\n\t\t\t\t\tfields,\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\nAPI.v1.addRoute(\n\t'livechat/department/isDepartmentCreationAvailable',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-livechat-departments', 'manage-livechat-departments'], operation: 'hasAny' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst available = await isDepartmentCreationAvailable();\n\t\t\treturn API.v1.success({ isDepartmentCreationAvailable: available });\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let LivechatDepartment, LivechatDepartmentAgents;\n    module.link(\"@rocket.chat/models\", {\n      LivechatDepartment(v) {\n        LivechatDepartment = v;\n      },\n      LivechatDepartmentAgents(v) {\n        LivechatDepartmentAgents = v;\n      }\n    }, 0);\n    let isGETLivechatDepartmentProps, isPOSTLivechatDepartmentProps;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isGETLivechatDepartmentProps(v) {\n        isGETLivechatDepartmentProps = v;\n      },\n      isPOSTLivechatDepartmentProps(v) {\n        isPOSTLivechatDepartmentProps = v;\n      }\n    }, 1);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 2);\n    let API;\n    module.link(\"../../../../api/server\", {\n      API(v) {\n        API = v;\n      }\n    }, 3);\n    let getPaginationItems;\n    module.link(\"../../../../api/server/helpers/getPaginationItems\", {\n      getPaginationItems(v) {\n        getPaginationItems = v;\n      }\n    }, 4);\n    let hasPermissionAsync;\n    module.link(\"../../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 5);\n    let findDepartments, findDepartmentById, findDepartmentsToAutocomplete, findDepartmentsBetweenIds, findDepartmentAgents, findArchivedDepartments;\n    module.link(\"../../../server/api/lib/departments\", {\n      findDepartments(v) {\n        findDepartments = v;\n      },\n      findDepartmentById(v) {\n        findDepartmentById = v;\n      },\n      findDepartmentsToAutocomplete(v) {\n        findDepartmentsToAutocomplete = v;\n      },\n      findDepartmentsBetweenIds(v) {\n        findDepartmentsBetweenIds = v;\n      },\n      findDepartmentAgents(v) {\n        findDepartmentAgents = v;\n      },\n      findArchivedDepartments(v) {\n        findArchivedDepartments = v;\n      }\n    }, 6);\n    let saveDepartment, archiveDepartment, unarchiveDepartment, saveDepartmentAgents, removeDepartment;\n    module.link(\"../../../server/lib/departmentsLib\", {\n      saveDepartment(v) {\n        saveDepartment = v;\n      },\n      archiveDepartment(v) {\n        archiveDepartment = v;\n      },\n      unarchiveDepartment(v) {\n        unarchiveDepartment = v;\n      },\n      saveDepartmentAgents(v) {\n        saveDepartmentAgents = v;\n      },\n      removeDepartment(v) {\n        removeDepartment = v;\n      }\n    }, 7);\n    let isDepartmentCreationAvailable;\n    module.link(\"../../../server/lib/isDepartmentCreationAvailable\", {\n      isDepartmentCreationAvailable(v) {\n        isDepartmentCreationAvailable = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('livechat/department', {\n      authRequired: true,\n      validateParams: {\n        GET: isGETLivechatDepartmentProps,\n        POST: isPOSTLivechatDepartmentProps\n      },\n      permissionsRequired: {\n        GET: {\n          permissions: ['view-livechat-departments', 'view-l-room'],\n          operation: 'hasAny'\n        },\n        POST: {\n          permissions: ['manage-livechat-departments'],\n          operation: 'hasAll'\n        }\n      }\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort\n        } = await this.parseJsonQuery();\n        const {\n          text,\n          enabled,\n          onlyMyDepartments,\n          excludeDepartmentId,\n          showArchived\n        } = this.queryParams;\n        const {\n          departments,\n          total\n        } = await findDepartments({\n          userId: this.userId,\n          text,\n          enabled: enabled === 'true',\n          showArchived: showArchived === 'true',\n          onlyMyDepartments: onlyMyDepartments === 'true',\n          excludeDepartmentId,\n          pagination: {\n            offset,\n            count,\n            // IMO, sort type shouldn't be record, but a generic of the model we're trying to sort\n            // or the form { [k: keyof T]: number | string }\n            sort: sort\n          }\n        });\n        return API.v1.success({\n          departments,\n          count: departments.length,\n          offset,\n          total\n        });\n      },\n      async post() {\n        check(this.bodyParams, {\n          department: Object,\n          agents: Match.Maybe(Array),\n          departmentUnit: Match.Maybe({\n            _id: Match.Optional(String)\n          })\n        });\n        const agents = this.bodyParams.agents ? {\n          upsert: this.bodyParams.agents\n        } : {};\n        const {\n          departmentUnit\n        } = this.bodyParams;\n        const department = await saveDepartment(this.userId, null, this.bodyParams.department, agents, departmentUnit || {});\n        if (department) {\n          return API.v1.success({\n            department,\n            agents: await LivechatDepartmentAgents.find({\n              departmentId: department._id\n            }).toArray()\n          });\n        }\n        return API.v1.failure();\n      }\n    });\n    API.v1.addRoute('livechat/department/:_id', {\n      authRequired: true,\n      permissionsRequired: {\n        GET: {\n          permissions: ['view-livechat-departments', 'view-l-room'],\n          operation: 'hasAny'\n        },\n        PUT: {\n          permissions: ['manage-livechat-departments', 'add-livechat-department-agents'],\n          operation: 'hasAny'\n        },\n        DELETE: {\n          permissions: ['manage-livechat-departments', 'remove-livechat-department'],\n          operation: 'hasAny'\n        }\n      }\n    }, {\n      async get() {\n        check(this.urlParams, {\n          _id: String\n        });\n        const {\n          onlyMyDepartments\n        } = this.queryParams;\n        const {\n          department,\n          agents\n        } = await findDepartmentById({\n          userId: this.userId,\n          departmentId: this.urlParams._id,\n          includeAgents: this.queryParams.includeAgents && this.queryParams.includeAgents === 'true',\n          onlyMyDepartments: onlyMyDepartments === 'true'\n        });\n        // TODO: return 404 when department is not found\n        // Currently, FE relies on the fact that this endpoint returns an empty payload\n        // to show the \"new\" view. Returning 404 breaks it\n        return API.v1.success({\n          department,\n          agents\n        });\n      },\n      async put() {\n        const permissionToSave = await hasPermissionAsync(this.userId, 'manage-livechat-departments');\n        const permissionToAddAgents = await hasPermissionAsync(this.userId, 'add-livechat-department-agents');\n        check(this.bodyParams, {\n          department: Object,\n          agents: Match.Maybe(Array),\n          departmentUnit: Match.Maybe({\n            _id: Match.Optional(String)\n          })\n        });\n        const {\n          _id\n        } = this.urlParams;\n        const {\n          department,\n          agents,\n          departmentUnit\n        } = this.bodyParams;\n        if (!permissionToSave) {\n          throw new Error('error-not-allowed');\n        }\n        const agentParam = permissionToAddAgents && agents ? {\n          upsert: agents\n        } : {};\n        await saveDepartment(this.userId, _id, department, agentParam, departmentUnit || {});\n        return API.v1.success({\n          department: await LivechatDepartment.findOneById(_id),\n          agents: await LivechatDepartmentAgents.findByDepartmentId(_id).toArray()\n        });\n      },\n      async delete() {\n        check(this.urlParams, {\n          _id: String\n        });\n        await removeDepartment(this.urlParams._id);\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('livechat/departments/archived', {\n      authRequired: true,\n      validateParams: {\n        GET: isGETLivechatDepartmentProps\n      },\n      permissionsRequired: {\n        GET: {\n          permissions: ['view-livechat-departments', 'view-l-room'],\n          operation: 'hasAny'\n        }\n      }\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort\n        } = await this.parseJsonQuery();\n        const {\n          text,\n          onlyMyDepartments,\n          excludeDepartmentId\n        } = this.queryParams;\n        const {\n          departments,\n          total\n        } = await findArchivedDepartments({\n          userId: this.userId,\n          text,\n          onlyMyDepartments: onlyMyDepartments === 'true',\n          excludeDepartmentId,\n          pagination: {\n            offset,\n            count,\n            sort: sort\n          }\n        });\n        return API.v1.success({\n          departments,\n          count: departments.length,\n          offset,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('livechat/department/:_id/archive', {\n      authRequired: true,\n      permissionsRequired: ['manage-livechat-departments']\n    }, {\n      async post() {\n        await archiveDepartment(this.urlParams._id);\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('livechat/department/:_id/unarchive', {\n      authRequired: true,\n      permissionsRequired: ['manage-livechat-departments']\n    }, {\n      async post() {\n        await unarchiveDepartment(this.urlParams._id);\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('livechat/department.autocomplete', {\n      authRequired: true,\n      permissionsRequired: {\n        GET: {\n          permissions: ['view-livechat-departments', 'view-l-room'],\n          operation: 'hasAny'\n        }\n      }\n    }, {\n      async get() {\n        const {\n          selector,\n          onlyMyDepartments,\n          showArchived\n        } = this.queryParams;\n        if (!selector) {\n          return API.v1.failure(\"The 'selector' param is required\");\n        }\n        return API.v1.success(await findDepartmentsToAutocomplete({\n          uid: this.userId,\n          selector: JSON.parse(selector),\n          onlyMyDepartments: onlyMyDepartments === 'true',\n          showArchived: showArchived === 'true'\n        }));\n      }\n    });\n    API.v1.addRoute('livechat/department/:_id/agents', {\n      authRequired: true,\n      permissionsRequired: {\n        GET: {\n          permissions: ['view-livechat-departments', 'view-l-room'],\n          operation: 'hasAny'\n        },\n        POST: {\n          permissions: ['manage-livechat-departments', 'add-livechat-department-agents'],\n          operation: 'hasAny'\n        }\n      }\n    }, {\n      async get() {\n        check(this.urlParams, {\n          _id: String\n        });\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort\n        } = await this.parseJsonQuery();\n        const agents = await findDepartmentAgents({\n          userId: this.userId,\n          departmentId: this.urlParams._id,\n          pagination: {\n            offset,\n            count,\n            sort\n          }\n        });\n        return API.v1.success(agents);\n      },\n      async post() {\n        check(this.bodyParams, Match.ObjectIncluding({\n          upsert: Array,\n          remove: Array\n        }));\n        await saveDepartmentAgents(this.urlParams._id, this.bodyParams);\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('livechat/department.listByIds', {\n      authRequired: true,\n      permissionsRequired: {\n        GET: {\n          permissions: ['view-livechat-departments', 'view-l-room'],\n          operation: 'hasAny'\n        }\n      }\n    }, {\n      async get() {\n        const {\n          ids\n        } = this.queryParams;\n        const {\n          fields\n        } = await this.parseJsonQuery();\n        if (!ids) {\n          return API.v1.failure(\"The 'ids' param is required\");\n        }\n        if (!Array.isArray(ids)) {\n          return API.v1.failure(\"The 'ids' param must be an array\");\n        }\n        return API.v1.success(await findDepartmentsBetweenIds({\n          ids,\n          fields\n        }));\n      }\n    });\n    API.v1.addRoute('livechat/department/isDepartmentCreationAvailable', {\n      authRequired: true,\n      permissionsRequired: {\n        GET: {\n          permissions: ['view-livechat-departments', 'manage-livechat-departments'],\n          operation: 'hasAny'\n        }\n      }\n    }, {\n      async get() {\n        const available = await isDepartmentCreationAvailable();\n        return API.v1.success({\n          isDepartmentCreationAvailable: available\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["LivechatDepartment","LivechatDepartmentAgents","module","link","v","isGETLivechatDepartmentProps","isPOSTLivechatDepartmentProps","Match","check","API","getPaginationItems","hasPermissionAsync","findDepartments","findDepartmentById","findDepartmentsToAutocomplete","findDepartmentsBetweenIds","findDepartmentAgents","findArchivedDepartments","saveDepartment","archiveDepartment","unarchiveDepartment","saveDepartmentAgents","removeDepartment","isDepartmentCreationAvailable","__reifyWaitForDeps__","v1","addRoute","authRequired","validateParams","GET","POST","permissionsRequired","permissions","operation","get","offset","count","queryParams","sort","parseJsonQuery","text","enabled","onlyMyDepartments","excludeDepartmentId","showArchived","departments","total","userId","pagination","success","length","post","bodyParams","department","Object","agents","Maybe","Array","departmentUnit","_id","Optional","String","upsert","find","departmentId","toArray","failure","PUT","DELETE","urlParams","includeAgents","put","permissionToSave","permissionToAddAgents","Error","agentParam","findOneById","findByDepartmentId","delete","selector","uid","JSON","parse","ObjectIncluding","remove","ids","fields","isArray","available","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/imports/server/rest/departments.ts"],"sourcesContent":["import type { ILivechatDepartment } from '@rocket.chat/core-typings';\nimport { LivechatDepartment, LivechatDepartmentAgents } from '@rocket.chat/models';\nimport { isGETLivechatDepartmentProps, isPOSTLivechatDepartmentProps } from '@rocket.chat/rest-typings';\nimport { Match, check } from 'meteor/check';\n\nimport { API } from '../../../../api/server';\nimport { getPaginationItems } from '../../../../api/server/helpers/getPaginationItems';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport {\n\tfindDepartments,\n\tfindDepartmentById,\n\tfindDepartmentsToAutocomplete,\n\tfindDepartmentsBetweenIds,\n\tfindDepartmentAgents,\n\tfindArchivedDepartments,\n} from '../../../server/api/lib/departments';\nimport {\n\tsaveDepartment,\n\tarchiveDepartment,\n\tunarchiveDepartment,\n\tsaveDepartmentAgents,\n\tremoveDepartment,\n} from '../../../server/lib/departmentsLib';\nimport { isDepartmentCreationAvailable } from '../../../server/lib/isDepartmentCreationAvailable';\n\nAPI.v1.addRoute(\n\t'livechat/department',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: { GET: isGETLivechatDepartmentProps, POST: isPOSTLivechatDepartmentProps },\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' },\n\t\t\tPOST: { permissions: ['manage-livechat-departments'], operation: 'hasAll' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\n\t\t\tconst { text, enabled, onlyMyDepartments, excludeDepartmentId, showArchived } = this.queryParams;\n\n\t\t\tconst { departments, total } = await findDepartments({\n\t\t\t\tuserId: this.userId,\n\t\t\t\ttext,\n\t\t\t\tenabled: enabled === 'true',\n\t\t\t\tshowArchived: showArchived === 'true',\n\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t\texcludeDepartmentId,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\t// IMO, sort type shouldn't be record, but a generic of the model we're trying to sort\n\t\t\t\t\t// or the form { [k: keyof T]: number | string }\n\t\t\t\t\tsort: sort as any,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success({ departments, count: departments.length, offset, total });\n\t\t},\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tdepartment: Object,\n\t\t\t\tagents: Match.Maybe(Array),\n\t\t\t\tdepartmentUnit: Match.Maybe({ _id: Match.Optional(String) }),\n\t\t\t});\n\n\t\t\tconst agents = this.bodyParams.agents ? { upsert: this.bodyParams.agents } : {};\n\t\t\tconst { departmentUnit } = this.bodyParams;\n\t\t\tconst department = await saveDepartment(\n\t\t\t\tthis.userId,\n\t\t\t\tnull,\n\t\t\t\tthis.bodyParams.department as ILivechatDepartment,\n\t\t\t\tagents,\n\t\t\t\tdepartmentUnit || {},\n\t\t\t);\n\n\t\t\tif (department) {\n\t\t\t\treturn API.v1.success({\n\t\t\t\t\tdepartment,\n\t\t\t\t\tagents: await LivechatDepartmentAgents.find({ departmentId: department._id }).toArray(),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn API.v1.failure();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department/:_id',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' },\n\t\t\tPUT: { permissions: ['manage-livechat-departments', 'add-livechat-department-agents'], operation: 'hasAny' },\n\t\t\tDELETE: { permissions: ['manage-livechat-departments', 'remove-livechat-department'], operation: 'hasAny' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { onlyMyDepartments } = this.queryParams;\n\n\t\t\tconst { department, agents } = await findDepartmentById({\n\t\t\t\tuserId: this.userId,\n\t\t\t\tdepartmentId: this.urlParams._id,\n\t\t\t\tincludeAgents: this.queryParams.includeAgents && this.queryParams.includeAgents === 'true',\n\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t});\n\n\t\t\t// TODO: return 404 when department is not found\n\t\t\t// Currently, FE relies on the fact that this endpoint returns an empty payload\n\t\t\t// to show the \"new\" view. Returning 404 breaks it\n\n\t\t\treturn API.v1.success({ department, agents });\n\t\t},\n\t\tasync put() {\n\t\t\tconst permissionToSave = await hasPermissionAsync(this.userId, 'manage-livechat-departments');\n\t\t\tconst permissionToAddAgents = await hasPermissionAsync(this.userId, 'add-livechat-department-agents');\n\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tdepartment: Object,\n\t\t\t\tagents: Match.Maybe(Array),\n\t\t\t\tdepartmentUnit: Match.Maybe({ _id: Match.Optional(String) }),\n\t\t\t});\n\n\t\t\tconst { _id } = this.urlParams;\n\t\t\tconst { department, agents, departmentUnit } = this.bodyParams;\n\n\t\t\tif (!permissionToSave) {\n\t\t\t\tthrow new Error('error-not-allowed');\n\t\t\t}\n\n\t\t\tconst agentParam = permissionToAddAgents && agents ? { upsert: agents } : {};\n\t\t\tawait saveDepartment(this.userId, _id, department, agentParam, departmentUnit || {});\n\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartment: await LivechatDepartment.findOneById(_id),\n\t\t\t\tagents: await LivechatDepartmentAgents.findByDepartmentId(_id).toArray(),\n\t\t\t});\n\t\t},\n\t\tasync delete() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tawait removeDepartment(this.urlParams._id);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/departments/archived',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: { GET: isGETLivechatDepartmentProps },\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\n\t\t\tconst { text, onlyMyDepartments, excludeDepartmentId } = this.queryParams;\n\n\t\t\tconst { departments, total } = await findArchivedDepartments({\n\t\t\t\tuserId: this.userId,\n\t\t\t\ttext,\n\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t\texcludeDepartmentId,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort: sort as any,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success({ departments, count: departments.length, offset, total });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department/:_id/archive',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['manage-livechat-departments'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tawait archiveDepartment(this.urlParams._id);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department/:_id/unarchive',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['manage-livechat-departments'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tawait unarchiveDepartment(this.urlParams._id);\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department.autocomplete',\n\t{ authRequired: true, permissionsRequired: { GET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' } } },\n\t{\n\t\tasync get() {\n\t\t\tconst { selector, onlyMyDepartments, showArchived } = this.queryParams;\n\t\t\tif (!selector) {\n\t\t\t\treturn API.v1.failure(\"The 'selector' param is required\");\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findDepartmentsToAutocomplete({\n\t\t\t\t\tuid: this.userId,\n\t\t\t\t\tselector: JSON.parse(selector),\n\t\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t\t\tshowArchived: showArchived === 'true',\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department/:_id/agents',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' },\n\t\t\tPOST: { permissions: ['manage-livechat-departments', 'add-livechat-department-agents'], operation: 'hasAny' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\n\t\t\tconst agents = await findDepartmentAgents({\n\t\t\t\tuserId: this.userId,\n\t\t\t\tdepartmentId: this.urlParams._id,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success(agents);\n\t\t},\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tupsert: Array,\n\t\t\t\t\tremove: Array,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tawait saveDepartmentAgents(this.urlParams._id, this.bodyParams);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department.listByIds',\n\t{ authRequired: true, permissionsRequired: { GET: { permissions: ['view-livechat-departments', 'view-l-room'], operation: 'hasAny' } } },\n\t{\n\t\tasync get() {\n\t\t\tconst { ids } = this.queryParams;\n\t\t\tconst { fields } = await this.parseJsonQuery();\n\t\t\tif (!ids) {\n\t\t\t\treturn API.v1.failure(\"The 'ids' param is required\");\n\t\t\t}\n\t\t\tif (!Array.isArray(ids)) {\n\t\t\t\treturn API.v1.failure(\"The 'ids' param must be an array\");\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findDepartmentsBetweenIds({\n\t\t\t\t\tids,\n\t\t\t\t\tfields,\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\nAPI.v1.addRoute(\n\t'livechat/department/isDepartmentCreationAvailable',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-livechat-departments', 'manage-livechat-departments'], operation: 'hasAny' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst available = await isDepartmentCreationAvailable();\n\t\t\treturn API.v1.success({ isDepartmentCreationAvailable: available });\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"3beb7eb7f36fa61d2304ace97e52b1d90585dd84"}
