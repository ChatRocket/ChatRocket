{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/ServerEvents.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/ServerEvents.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/ServerEvents.ts","inputSourceMap":{"version":3,"file":"server/models/raw/ServerEvents.ts","sourceRoot":"","sources":["server/models/raw/ServerEvents.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n\tExtractDataToParams,\n\tIAuditServerActor,\n\tIServerEvent,\n\tIServerEvents,\n\tRocketChatRecordDeleted,\n} from '@rocket.chat/core-typings';\nimport { ServerEventType } from '@rocket.chat/core-typings';\nimport type { IServerEventsModel } from '@rocket.chat/model-typings';\nimport type { Collection, Db, IndexDescription } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class ServerEventsRaw extends BaseRaw<IServerEvent> implements IServerEventsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IServerEvent>>) {\n\t\tsuper(db, 'server_events', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { t: 1, ip: 1, ts: -1 } }, { key: { 't': 1, 'u.username': 1, 'ts': -1 } }];\n\t}\n\n\tasync findLastFailedAttemptByIp(ip: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\tip,\n\t\t\t\tt: ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync findLastFailedAttemptByUsername(username: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\t'u.username': username,\n\t\t\t\t't': ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync findLastSuccessfulAttemptByIp(ip: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\tip,\n\t\t\t\tt: ServerEventType.LOGIN,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync findLastSuccessfulAttemptByUsername(username: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\t'u.username': username,\n\t\t\t\t't': ServerEventType.LOGIN,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync countFailedAttemptsByUsernameSince(username: string, since: Date): Promise<number> {\n\t\treturn this.countDocuments({\n\t\t\t'u.username': username,\n\t\t\t't': ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\t'ts': {\n\t\t\t\t$gte: since,\n\t\t\t},\n\t\t});\n\t}\n\n\tcountFailedAttemptsByIpSince(ip: string, since: Date): Promise<number> {\n\t\treturn this.countDocuments({\n\t\t\tip,\n\t\t\tt: ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\tts: {\n\t\t\t\t$gte: since,\n\t\t\t},\n\t\t});\n\t}\n\n\tcountFailedAttemptsByIp(ip: string): Promise<number> {\n\t\treturn this.countDocuments({\n\t\t\tip,\n\t\t\tt: ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t});\n\t}\n\n\tcountFailedAttemptsByUsername(username: string): Promise<number> {\n\t\treturn this.countDocuments({\n\t\t\t'u.username': username,\n\t\t\t't': ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t});\n\t}\n\n\tasync createAuditServerEvent<K extends keyof IServerEvents, E extends IServerEvents[K]>(\n\t\tkey: K,\n\t\tdata: ExtractDataToParams<E>,\n\t\tactor: IAuditServerActor,\n\t): Promise<void> {\n\t\tawait this.insertOne({\n\t\t\tt: key,\n\t\t\tts: new Date(),\n\t\t\tactor,\n\t\t\tdata: Object.entries(data).map(([key, value]) => ({ key, value })) as E['data'],\n\t\t\t// deprecated just to keep backward compatibility\n\t\t\tip: '0.0.0.0',\n\t\t\t...(actor.type === 'user' && { ip: actor?.ip || '0.0.0.0', u: { _id: actor._id, username: actor.username } }),\n\t\t});\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/ServerEvents.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/ServerEvents.ts","inputSourceMap":{"version":3,"file":"server/models/raw/ServerEvents.ts","sourceRoot":"","sources":["server/models/raw/ServerEvents.ts"],"names":[],"mappings":"AAOA,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAI5D,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,eAAgB,SAAQ,OAAqB;IACzD,YAAY,EAAM,EAAE,KAAyD;QAC5E,KAAK,CAAC,EAAE,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;IACnC,CAAC;IAES,YAAY;QACrB,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC3F,CAAC;IAED,KAAK,CAAC,yBAAyB,CAAC,EAAU;QACzC,OAAO,IAAI,CAAC,OAAO,CAClB;YACC,EAAE;YACF,CAAC,EAAE,eAAe,CAAC,oBAAoB;SACvC,EACD,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CACpB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,+BAA+B,CAAC,QAAgB;QACrD,OAAO,IAAI,CAAC,OAAO,CAClB;YACC,YAAY,EAAE,QAAQ;YACtB,GAAG,EAAE,eAAe,CAAC,oBAAoB;SACzC,EACD,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CACpB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,6BAA6B,CAAC,EAAU;QAC7C,OAAO,IAAI,CAAC,OAAO,CAClB;YACC,EAAE;YACF,CAAC,EAAE,eAAe,CAAC,KAAK;SACxB,EACD,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CACpB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,mCAAmC,CAAC,QAAgB;QACzD,OAAO,IAAI,CAAC,OAAO,CAClB;YACC,YAAY,EAAE,QAAQ;YACtB,GAAG,EAAE,eAAe,CAAC,KAAK;SAC1B,EACD,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CACpB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,kCAAkC,CAAC,QAAgB,EAAE,KAAW;QACrE,OAAO,IAAI,CAAC,cAAc,CAAC;YAC1B,YAAY,EAAE,QAAQ;YACtB,GAAG,EAAE,eAAe,CAAC,oBAAoB;YACzC,IAAI,EAAE;gBACL,IAAI,EAAE,KAAK;aACX;SACD,CAAC,CAAC;IACJ,CAAC;IAED,4BAA4B,CAAC,EAAU,EAAE,KAAW;QACnD,OAAO,IAAI,CAAC,cAAc,CAAC;YAC1B,EAAE;YACF,CAAC,EAAE,eAAe,CAAC,oBAAoB;YACvC,EAAE,EAAE;gBACH,IAAI,EAAE,KAAK;aACX;SACD,CAAC,CAAC;IACJ,CAAC;IAED,uBAAuB,CAAC,EAAU;QACjC,OAAO,IAAI,CAAC,cAAc,CAAC;YAC1B,EAAE;YACF,CAAC,EAAE,eAAe,CAAC,oBAAoB;SACvC,CAAC,CAAC;IACJ,CAAC;IAED,6BAA6B,CAAC,QAAgB;QAC7C,OAAO,IAAI,CAAC,cAAc,CAAC;YAC1B,YAAY,EAAE,QAAQ;YACtB,GAAG,EAAE,eAAe,CAAC,oBAAoB;SACzC,CAAC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,sBAAsB,CAC3B,GAAM,EACN,IAA4B,EAC5B,KAAwB;QAExB,MAAM,IAAI,CAAC,SAAS,CAAC;YACpB,CAAC,EAAE,GAAG;YACN,EAAE,EAAE,IAAI,IAAI,EAAE;YACd,KAAK;YACL,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAc;YAC/E,iDAAiD;YACjD,EAAE,EAAE,SAAS;YACb,GAAG,CAAC,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,IAAI,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC;SAC7G,CAAC,CAAC;IACJ,CAAC;CACD","sourcesContent":["import type {\n\tExtractDataToParams,\n\tIAuditServerActor,\n\tIServerEvent,\n\tIServerEvents,\n\tRocketChatRecordDeleted,\n} from '@rocket.chat/core-typings';\nimport { ServerEventType } from '@rocket.chat/core-typings';\nimport type { IServerEventsModel } from '@rocket.chat/model-typings';\nimport type { Collection, Db, IndexDescription } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class ServerEventsRaw extends BaseRaw<IServerEvent> implements IServerEventsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IServerEvent>>) {\n\t\tsuper(db, 'server_events', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { t: 1, ip: 1, ts: -1 } }, { key: { 't': 1, 'u.username': 1, 'ts': -1 } }];\n\t}\n\n\tasync findLastFailedAttemptByIp(ip: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\tip,\n\t\t\t\tt: ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync findLastFailedAttemptByUsername(username: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\t'u.username': username,\n\t\t\t\t't': ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync findLastSuccessfulAttemptByIp(ip: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\tip,\n\t\t\t\tt: ServerEventType.LOGIN,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync findLastSuccessfulAttemptByUsername(username: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\t'u.username': username,\n\t\t\t\t't': ServerEventType.LOGIN,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync countFailedAttemptsByUsernameSince(username: string, since: Date): Promise<number> {\n\t\treturn this.countDocuments({\n\t\t\t'u.username': username,\n\t\t\t't': ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\t'ts': {\n\t\t\t\t$gte: since,\n\t\t\t},\n\t\t});\n\t}\n\n\tcountFailedAttemptsByIpSince(ip: string, since: Date): Promise<number> {\n\t\treturn this.countDocuments({\n\t\t\tip,\n\t\t\tt: ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\tts: {\n\t\t\t\t$gte: since,\n\t\t\t},\n\t\t});\n\t}\n\n\tcountFailedAttemptsByIp(ip: string): Promise<number> {\n\t\treturn this.countDocuments({\n\t\t\tip,\n\t\t\tt: ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t});\n\t}\n\n\tcountFailedAttemptsByUsername(username: string): Promise<number> {\n\t\treturn this.countDocuments({\n\t\t\t'u.username': username,\n\t\t\t't': ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t});\n\t}\n\n\tasync createAuditServerEvent<K extends keyof IServerEvents, E extends IServerEvents[K]>(\n\t\tkey: K,\n\t\tdata: ExtractDataToParams<E>,\n\t\tactor: IAuditServerActor,\n\t): Promise<void> {\n\t\tawait this.insertOne({\n\t\t\tt: key,\n\t\t\tts: new Date(),\n\t\t\tactor,\n\t\t\tdata: Object.entries(data).map(([key, value]) => ({ key, value })) as E['data'],\n\t\t\t// deprecated just to keep backward compatibility\n\t\t\tip: '0.0.0.0',\n\t\t\t...(actor.type === 'user' && { ip: actor?.ip || '0.0.0.0', u: { _id: actor._id, username: actor.username } }),\n\t\t});\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      ServerEventsRaw: () => ServerEventsRaw\n    });\n    let ServerEventType;\n    module.link(\"@rocket.chat/core-typings\", {\n      ServerEventType(v) {\n        ServerEventType = v;\n      }\n    }, 0);\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class ServerEventsRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'server_events', trash);\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            t: 1,\n            ip: 1,\n            ts: -1\n          }\n        }, {\n          key: {\n            't': 1,\n            'u.username': 1,\n            'ts': -1\n          }\n        }];\n      }\n      async findLastFailedAttemptByIp(ip) {\n        return this.findOne({\n          ip,\n          t: ServerEventType.FAILED_LOGIN_ATTEMPT\n        }, {\n          sort: {\n            ts: -1\n          }\n        });\n      }\n      async findLastFailedAttemptByUsername(username) {\n        return this.findOne({\n          'u.username': username,\n          't': ServerEventType.FAILED_LOGIN_ATTEMPT\n        }, {\n          sort: {\n            ts: -1\n          }\n        });\n      }\n      async findLastSuccessfulAttemptByIp(ip) {\n        return this.findOne({\n          ip,\n          t: ServerEventType.LOGIN\n        }, {\n          sort: {\n            ts: -1\n          }\n        });\n      }\n      async findLastSuccessfulAttemptByUsername(username) {\n        return this.findOne({\n          'u.username': username,\n          't': ServerEventType.LOGIN\n        }, {\n          sort: {\n            ts: -1\n          }\n        });\n      }\n      async countFailedAttemptsByUsernameSince(username, since) {\n        return this.countDocuments({\n          'u.username': username,\n          't': ServerEventType.FAILED_LOGIN_ATTEMPT,\n          'ts': {\n            $gte: since\n          }\n        });\n      }\n      countFailedAttemptsByIpSince(ip, since) {\n        return this.countDocuments({\n          ip,\n          t: ServerEventType.FAILED_LOGIN_ATTEMPT,\n          ts: {\n            $gte: since\n          }\n        });\n      }\n      countFailedAttemptsByIp(ip) {\n        return this.countDocuments({\n          ip,\n          t: ServerEventType.FAILED_LOGIN_ATTEMPT\n        });\n      }\n      countFailedAttemptsByUsername(username) {\n        return this.countDocuments({\n          'u.username': username,\n          't': ServerEventType.FAILED_LOGIN_ATTEMPT\n        });\n      }\n      async createAuditServerEvent(key, data, actor) {\n        await this.insertOne(_objectSpread({\n          t: key,\n          ts: new Date(),\n          actor,\n          data: Object.entries(data).map(_ref => {\n            let [key, value] = _ref;\n            return {\n              key,\n              value\n            };\n          }),\n          // deprecated just to keep backward compatibility\n          ip: '0.0.0.0'\n        }, actor.type === 'user' && {\n          ip: (actor === null || actor === void 0 ? void 0 : actor.ip) || '0.0.0.0',\n          u: {\n            _id: actor._id,\n            username: actor.username\n          }\n        }));\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","ServerEventsRaw","ServerEventType","BaseRaw","__reifyWaitForDeps__","constructor","db","trash","modelIndexes","key","t","ip","ts","findLastFailedAttemptByIp","findOne","FAILED_LOGIN_ATTEMPT","sort","findLastFailedAttemptByUsername","username","findLastSuccessfulAttemptByIp","LOGIN","findLastSuccessfulAttemptByUsername","countFailedAttemptsByUsernameSince","since","countDocuments","$gte","countFailedAttemptsByIpSince","countFailedAttemptsByIp","countFailedAttemptsByUsername","createAuditServerEvent","data","actor","insertOne","Date","Object","entries","map","_ref","value","type","u","_id","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/ServerEvents.ts"],"sourcesContent":["import type {\n\tExtractDataToParams,\n\tIAuditServerActor,\n\tIServerEvent,\n\tIServerEvents,\n\tRocketChatRecordDeleted,\n} from '@rocket.chat/core-typings';\nimport { ServerEventType } from '@rocket.chat/core-typings';\nimport type { IServerEventsModel } from '@rocket.chat/model-typings';\nimport type { Collection, Db, IndexDescription } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class ServerEventsRaw extends BaseRaw<IServerEvent> implements IServerEventsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IServerEvent>>) {\n\t\tsuper(db, 'server_events', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { t: 1, ip: 1, ts: -1 } }, { key: { 't': 1, 'u.username': 1, 'ts': -1 } }];\n\t}\n\n\tasync findLastFailedAttemptByIp(ip: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\tip,\n\t\t\t\tt: ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync findLastFailedAttemptByUsername(username: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\t'u.username': username,\n\t\t\t\t't': ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync findLastSuccessfulAttemptByIp(ip: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\tip,\n\t\t\t\tt: ServerEventType.LOGIN,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync findLastSuccessfulAttemptByUsername(username: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\t'u.username': username,\n\t\t\t\t't': ServerEventType.LOGIN,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync countFailedAttemptsByUsernameSince(username: string, since: Date): Promise<number> {\n\t\treturn this.countDocuments({\n\t\t\t'u.username': username,\n\t\t\t't': ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\t'ts': {\n\t\t\t\t$gte: since,\n\t\t\t},\n\t\t});\n\t}\n\n\tcountFailedAttemptsByIpSince(ip: string, since: Date): Promise<number> {\n\t\treturn this.countDocuments({\n\t\t\tip,\n\t\t\tt: ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\tts: {\n\t\t\t\t$gte: since,\n\t\t\t},\n\t\t});\n\t}\n\n\tcountFailedAttemptsByIp(ip: string): Promise<number> {\n\t\treturn this.countDocuments({\n\t\t\tip,\n\t\t\tt: ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t});\n\t}\n\n\tcountFailedAttemptsByUsername(username: string): Promise<number> {\n\t\treturn this.countDocuments({\n\t\t\t'u.username': username,\n\t\t\t't': ServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t});\n\t}\n\n\tasync createAuditServerEvent<K extends keyof IServerEvents, E extends IServerEvents[K]>(\n\t\tkey: K,\n\t\tdata: ExtractDataToParams<E>,\n\t\tactor: IAuditServerActor,\n\t): Promise<void> {\n\t\tawait this.insertOne({\n\t\t\tt: key,\n\t\t\tts: new Date(),\n\t\t\tactor,\n\t\t\tdata: Object.entries(data).map(([key, value]) => ({ key, value })) as E['data'],\n\t\t\t// deprecated just to keep backward compatibility\n\t\t\tip: '0.0.0.0',\n\t\t\t...(actor.type === 'user' && { ip: actor?.ip || '0.0.0.0', u: { _id: actor._id, username: actor.username } }),\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"82fbec0179df4780e4475bfdccbe80fecc4bc3cb"}
