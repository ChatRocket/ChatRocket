{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/lib/dashboards.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/api/lib/dashboards.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/lib/dashboards.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/lib/dashboards.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/lib/dashboards.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ReportResult, ReportWithUnmatchingElements, IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { LivechatRooms } from '@rocket.chat/models';\nimport mem from 'memoize';\nimport type { Filter } from 'mongodb';\n\ntype AggParams = { start: Date; end: Date; sort: Record<string, 1 | -1>; extraQuery: Filter<IOmnichannelRoom> };\n\nconst defaultValue = { data: [], total: 0 };\nexport const findAllConversationsBySource = async ({ start, end, extraQuery }: Omit<AggParams, 'sort'>): Promise<ReportResult> => {\n\treturn (await LivechatRooms.getConversationsBySource(start, end, extraQuery).toArray())[0] || defaultValue;\n};\n\nexport const findAllConversationsByStatus = async ({ start, end, extraQuery }: Omit<AggParams, 'sort'>): Promise<ReportResult> => {\n\treturn (await LivechatRooms.getConversationsByStatus(start, end, extraQuery).toArray())[0] || defaultValue;\n};\n\nexport const findAllConversationsByDepartment = async ({\n\tstart,\n\tend,\n\tsort,\n\textraQuery,\n}: AggParams): Promise<ReportWithUnmatchingElements> => {\n\tconst [result, total] = await Promise.all([\n\t\tLivechatRooms.getConversationsByDepartment(start, end, sort, extraQuery).toArray(),\n\t\tLivechatRooms.getTotalConversationsWithoutDepartmentBetweenDates(start, end, extraQuery),\n\t]);\n\n\treturn {\n\t\t...(result?.[0] || defaultValue),\n\t\tunspecified: total || 0,\n\t};\n};\n\nexport const findAllConversationsByTags = async ({ start, end, sort, extraQuery }: AggParams): Promise<ReportWithUnmatchingElements> => {\n\tconst [result, total] = await Promise.all([\n\t\tLivechatRooms.getConversationsByTags(start, end, sort, extraQuery).toArray(),\n\t\tLivechatRooms.getConversationsWithoutTagsBetweenDate(start, end, extraQuery),\n\t]);\n\n\treturn {\n\t\t...(result?.[0] || defaultValue),\n\t\tunspecified: total || 0,\n\t};\n};\n\nexport const findAllConversationsByAgents = async ({ start, end, sort, extraQuery }: AggParams): Promise<ReportWithUnmatchingElements> => {\n\tconst [result, total] = await Promise.all([\n\t\tLivechatRooms.getConversationsByAgents(start, end, sort, extraQuery).toArray(),\n\t\tLivechatRooms.getTotalConversationsWithoutAgentsBetweenDate(start, end, extraQuery),\n\t]);\n\n\treturn {\n\t\t...(result?.[0] || defaultValue),\n\t\tunspecified: total || 0,\n\t};\n};\n\nexport const findAllConversationsBySourceCached = mem(findAllConversationsBySource, { maxAge: 60000, cacheKey: JSON.stringify });\nexport const findAllConversationsByStatusCached = mem(findAllConversationsByStatus, { maxAge: 60000, cacheKey: JSON.stringify });\nexport const findAllConversationsByDepartmentCached = mem(findAllConversationsByDepartment, { maxAge: 60000, cacheKey: JSON.stringify });\nexport const findAllConversationsByTagsCached = mem(findAllConversationsByTags, { maxAge: 60000, cacheKey: JSON.stringify });\nexport const findAllConversationsByAgentsCached = mem(findAllConversationsByAgents, { maxAge: 60000, cacheKey: JSON.stringify });\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/lib/dashboards.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/api/lib/dashboards.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/lib/dashboards.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/lib/dashboards.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ReportResult, ReportWithUnmatchingElements, IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { LivechatRooms } from '@rocket.chat/models';\nimport mem from 'memoize';\nimport type { Filter } from 'mongodb';\n\ntype AggParams = { start: Date; end: Date; sort: Record<string, 1 | -1>; extraQuery: Filter<IOmnichannelRoom> };\n\nconst defaultValue = { data: [], total: 0 };\nexport const findAllConversationsBySource = async ({ start, end, extraQuery }: Omit<AggParams, 'sort'>): Promise<ReportResult> => {\n\treturn (await LivechatRooms.getConversationsBySource(start, end, extraQuery).toArray())[0] || defaultValue;\n};\n\nexport const findAllConversationsByStatus = async ({ start, end, extraQuery }: Omit<AggParams, 'sort'>): Promise<ReportResult> => {\n\treturn (await LivechatRooms.getConversationsByStatus(start, end, extraQuery).toArray())[0] || defaultValue;\n};\n\nexport const findAllConversationsByDepartment = async ({\n\tstart,\n\tend,\n\tsort,\n\textraQuery,\n}: AggParams): Promise<ReportWithUnmatchingElements> => {\n\tconst [result, total] = await Promise.all([\n\t\tLivechatRooms.getConversationsByDepartment(start, end, sort, extraQuery).toArray(),\n\t\tLivechatRooms.getTotalConversationsWithoutDepartmentBetweenDates(start, end, extraQuery),\n\t]);\n\n\treturn {\n\t\t...(result?.[0] || defaultValue),\n\t\tunspecified: total || 0,\n\t};\n};\n\nexport const findAllConversationsByTags = async ({ start, end, sort, extraQuery }: AggParams): Promise<ReportWithUnmatchingElements> => {\n\tconst [result, total] = await Promise.all([\n\t\tLivechatRooms.getConversationsByTags(start, end, sort, extraQuery).toArray(),\n\t\tLivechatRooms.getConversationsWithoutTagsBetweenDate(start, end, extraQuery),\n\t]);\n\n\treturn {\n\t\t...(result?.[0] || defaultValue),\n\t\tunspecified: total || 0,\n\t};\n};\n\nexport const findAllConversationsByAgents = async ({ start, end, sort, extraQuery }: AggParams): Promise<ReportWithUnmatchingElements> => {\n\tconst [result, total] = await Promise.all([\n\t\tLivechatRooms.getConversationsByAgents(start, end, sort, extraQuery).toArray(),\n\t\tLivechatRooms.getTotalConversationsWithoutAgentsBetweenDate(start, end, extraQuery),\n\t]);\n\n\treturn {\n\t\t...(result?.[0] || defaultValue),\n\t\tunspecified: total || 0,\n\t};\n};\n\nexport const findAllConversationsBySourceCached = mem(findAllConversationsBySource, { maxAge: 60000, cacheKey: JSON.stringify });\nexport const findAllConversationsByStatusCached = mem(findAllConversationsByStatus, { maxAge: 60000, cacheKey: JSON.stringify });\nexport const findAllConversationsByDepartmentCached = mem(findAllConversationsByDepartment, { maxAge: 60000, cacheKey: JSON.stringify });\nexport const findAllConversationsByTagsCached = mem(findAllConversationsByTags, { maxAge: 60000, cacheKey: JSON.stringify });\nexport const findAllConversationsByAgentsCached = mem(findAllConversationsByAgents, { maxAge: 60000, cacheKey: JSON.stringify });\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      findAllConversationsBySource: () => findAllConversationsBySource,\n      findAllConversationsByStatus: () => findAllConversationsByStatus,\n      findAllConversationsByDepartment: () => findAllConversationsByDepartment,\n      findAllConversationsByTags: () => findAllConversationsByTags,\n      findAllConversationsByAgents: () => findAllConversationsByAgents,\n      findAllConversationsBySourceCached: () => findAllConversationsBySourceCached,\n      findAllConversationsByStatusCached: () => findAllConversationsByStatusCached,\n      findAllConversationsByDepartmentCached: () => findAllConversationsByDepartmentCached,\n      findAllConversationsByTagsCached: () => findAllConversationsByTagsCached,\n      findAllConversationsByAgentsCached: () => findAllConversationsByAgentsCached\n    });\n    let LivechatRooms;\n    module.link(\"@rocket.chat/models\", {\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      }\n    }, 0);\n    let mem;\n    module.link(\"memoize\", {\n      default(v) {\n        mem = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const defaultValue = {\n      data: [],\n      total: 0\n    };\n    const findAllConversationsBySource = async _ref => {\n      let {\n        start,\n        end,\n        extraQuery\n      } = _ref;\n      return (await LivechatRooms.getConversationsBySource(start, end, extraQuery).toArray())[0] || defaultValue;\n    };\n    const findAllConversationsByStatus = async _ref2 => {\n      let {\n        start,\n        end,\n        extraQuery\n      } = _ref2;\n      return (await LivechatRooms.getConversationsByStatus(start, end, extraQuery).toArray())[0] || defaultValue;\n    };\n    const findAllConversationsByDepartment = async _ref3 => {\n      let {\n        start,\n        end,\n        sort,\n        extraQuery\n      } = _ref3;\n      const [result, total] = await Promise.all([LivechatRooms.getConversationsByDepartment(start, end, sort, extraQuery).toArray(), LivechatRooms.getTotalConversationsWithoutDepartmentBetweenDates(start, end, extraQuery)]);\n      return _objectSpread(_objectSpread({}, (result === null || result === void 0 ? void 0 : result[0]) || defaultValue), {}, {\n        unspecified: total || 0\n      });\n    };\n    const findAllConversationsByTags = async _ref4 => {\n      let {\n        start,\n        end,\n        sort,\n        extraQuery\n      } = _ref4;\n      const [result, total] = await Promise.all([LivechatRooms.getConversationsByTags(start, end, sort, extraQuery).toArray(), LivechatRooms.getConversationsWithoutTagsBetweenDate(start, end, extraQuery)]);\n      return _objectSpread(_objectSpread({}, (result === null || result === void 0 ? void 0 : result[0]) || defaultValue), {}, {\n        unspecified: total || 0\n      });\n    };\n    const findAllConversationsByAgents = async _ref5 => {\n      let {\n        start,\n        end,\n        sort,\n        extraQuery\n      } = _ref5;\n      const [result, total] = await Promise.all([LivechatRooms.getConversationsByAgents(start, end, sort, extraQuery).toArray(), LivechatRooms.getTotalConversationsWithoutAgentsBetweenDate(start, end, extraQuery)]);\n      return _objectSpread(_objectSpread({}, (result === null || result === void 0 ? void 0 : result[0]) || defaultValue), {}, {\n        unspecified: total || 0\n      });\n    };\n    const findAllConversationsBySourceCached = mem(findAllConversationsBySource, {\n      maxAge: 60000,\n      cacheKey: JSON.stringify\n    });\n    const findAllConversationsByStatusCached = mem(findAllConversationsByStatus, {\n      maxAge: 60000,\n      cacheKey: JSON.stringify\n    });\n    const findAllConversationsByDepartmentCached = mem(findAllConversationsByDepartment, {\n      maxAge: 60000,\n      cacheKey: JSON.stringify\n    });\n    const findAllConversationsByTagsCached = mem(findAllConversationsByTags, {\n      maxAge: 60000,\n      cacheKey: JSON.stringify\n    });\n    const findAllConversationsByAgentsCached = mem(findAllConversationsByAgents, {\n      maxAge: 60000,\n      cacheKey: JSON.stringify\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","findAllConversationsBySource","findAllConversationsByStatus","findAllConversationsByDepartment","findAllConversationsByTags","findAllConversationsByAgents","findAllConversationsBySourceCached","findAllConversationsByStatusCached","findAllConversationsByDepartmentCached","findAllConversationsByTagsCached","findAllConversationsByAgentsCached","LivechatRooms","mem","__reifyWaitForDeps__","defaultValue","data","total","_ref","start","end","extraQuery","getConversationsBySource","toArray","_ref2","getConversationsByStatus","_ref3","sort","result","Promise","all","getConversationsByDepartment","getTotalConversationsWithoutDepartmentBetweenDates","unspecified","_ref4","getConversationsByTags","getConversationsWithoutTagsBetweenDate","_ref5","getConversationsByAgents","getTotalConversationsWithoutAgentsBetweenDate","maxAge","cacheKey","JSON","stringify","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/livechat-enterprise/server/api/lib/dashboards.ts"],"sourcesContent":["import type { ReportResult, ReportWithUnmatchingElements, IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { LivechatRooms } from '@rocket.chat/models';\nimport mem from 'memoize';\nimport type { Filter } from 'mongodb';\n\ntype AggParams = { start: Date; end: Date; sort: Record<string, 1 | -1>; extraQuery: Filter<IOmnichannelRoom> };\n\nconst defaultValue = { data: [], total: 0 };\nexport const findAllConversationsBySource = async ({ start, end, extraQuery }: Omit<AggParams, 'sort'>): Promise<ReportResult> => {\n\treturn (await LivechatRooms.getConversationsBySource(start, end, extraQuery).toArray())[0] || defaultValue;\n};\n\nexport const findAllConversationsByStatus = async ({ start, end, extraQuery }: Omit<AggParams, 'sort'>): Promise<ReportResult> => {\n\treturn (await LivechatRooms.getConversationsByStatus(start, end, extraQuery).toArray())[0] || defaultValue;\n};\n\nexport const findAllConversationsByDepartment = async ({\n\tstart,\n\tend,\n\tsort,\n\textraQuery,\n}: AggParams): Promise<ReportWithUnmatchingElements> => {\n\tconst [result, total] = await Promise.all([\n\t\tLivechatRooms.getConversationsByDepartment(start, end, sort, extraQuery).toArray(),\n\t\tLivechatRooms.getTotalConversationsWithoutDepartmentBetweenDates(start, end, extraQuery),\n\t]);\n\n\treturn {\n\t\t...(result?.[0] || defaultValue),\n\t\tunspecified: total || 0,\n\t};\n};\n\nexport const findAllConversationsByTags = async ({ start, end, sort, extraQuery }: AggParams): Promise<ReportWithUnmatchingElements> => {\n\tconst [result, total] = await Promise.all([\n\t\tLivechatRooms.getConversationsByTags(start, end, sort, extraQuery).toArray(),\n\t\tLivechatRooms.getConversationsWithoutTagsBetweenDate(start, end, extraQuery),\n\t]);\n\n\treturn {\n\t\t...(result?.[0] || defaultValue),\n\t\tunspecified: total || 0,\n\t};\n};\n\nexport const findAllConversationsByAgents = async ({ start, end, sort, extraQuery }: AggParams): Promise<ReportWithUnmatchingElements> => {\n\tconst [result, total] = await Promise.all([\n\t\tLivechatRooms.getConversationsByAgents(start, end, sort, extraQuery).toArray(),\n\t\tLivechatRooms.getTotalConversationsWithoutAgentsBetweenDate(start, end, extraQuery),\n\t]);\n\n\treturn {\n\t\t...(result?.[0] || defaultValue),\n\t\tunspecified: total || 0,\n\t};\n};\n\nexport const findAllConversationsBySourceCached = mem(findAllConversationsBySource, { maxAge: 60000, cacheKey: JSON.stringify });\nexport const findAllConversationsByStatusCached = mem(findAllConversationsByStatus, { maxAge: 60000, cacheKey: JSON.stringify });\nexport const findAllConversationsByDepartmentCached = mem(findAllConversationsByDepartment, { maxAge: 60000, cacheKey: JSON.stringify });\nexport const findAllConversationsByTagsCached = mem(findAllConversationsByTags, { maxAge: 60000, cacheKey: JSON.stringify });\nexport const findAllConversationsByAgentsCached = mem(findAllConversationsByAgents, { maxAge: 60000, cacheKey: JSON.stringify });\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"2a3dca792fcbab3268c174fbcd682e32b9ebcb35"}
