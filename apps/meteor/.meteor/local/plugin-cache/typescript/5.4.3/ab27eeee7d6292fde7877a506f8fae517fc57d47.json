{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/startup/loadMissedMessages.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/startup/loadMissedMessages.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/startup/loadMissedMessages.ts","inputSourceMap":{"version":3,"file":"client/startup/loadMissedMessages.ts","sourceRoot":"","sources":["client/startup/loadMissedMessages.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEzC,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AACxE,OAAO,EAAE,iBAAiB,EAAE,aAAa,EAAE,MAAM,2BAA2B,CAAC;AAC7E,OAAO,EAAE,qBAAqB,EAAE,MAAM,oCAAoC,CAAC;AAE3E,MAAM,kBAAkB,GAAG,KAAK,WAAW,GAAiB;IAC3D,MAAM,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IAEnI,IAAI,CAAC,WAAW,EAAE,CAAC;QAClB,OAAO;IACR,CAAC;IAED,IAAI,CAAC;QACJ,MAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,oBAAoB,EAAE,GAAG,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;QACtF,IAAI,MAAM,EAAE,CAAC;YACZ,MAAM,YAAY,GAAG,gBAAgB,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;YACvD,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,aAAa,CAAC,EAAE,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1F,CAAC;IACF,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QAChB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;IACnB,IAAI,mBAAmB,GAAG,IAAI,CAAC;IAC/B,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE;QACpB,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;QAEjD,IAAI,SAAS,KAAK,IAAI,IAAI,mBAAmB,KAAK,KAAK,IAAI,iBAAiB,CAAC,WAAW,EAAE,CAAC;YAC1F,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC1D,MAAM,KAAK,GAAG,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBACjD,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC;oBACf,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC/B,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QACD,mBAAmB,GAAG,SAAS,CAAC;IACjC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { ChatMessage, ChatSubscription } from '../../app/models/client';\nimport { LegacyRoomManager, upsertMessage } from '../../app/ui-utils/client';\nimport { callWithErrorHandling } from '../lib/utils/callWithErrorHandling';\n\nconst loadMissedMessages = async function (rid: IRoom['_id']): Promise<void> {\n\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true }, temp: { $exists: false } }, { sort: { ts: -1 }, limit: 1 });\n\n\tif (!lastMessage) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst result = await callWithErrorHandling('loadMissedMessages', rid, lastMessage.ts);\n\t\tif (result) {\n\t\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\t\tawait Promise.all(Array.from(result).map((msg) => upsertMessage({ msg, subscription })));\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n};\n\nMeteor.startup(() => {\n\tlet connectionWasOnline = true;\n\tTracker.autorun(() => {\n\t\tconst { connected } = Meteor.connection.status();\n\n\t\tif (connected === true && connectionWasOnline === false && LegacyRoomManager.openedRooms) {\n\t\t\tObject.keys(LegacyRoomManager.openedRooms).forEach((key) => {\n\t\t\t\tconst value = LegacyRoomManager.openedRooms[key];\n\t\t\t\tif (value.rid) {\n\t\t\t\t\tloadMissedMessages(value.rid);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tconnectionWasOnline = connected;\n\t});\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/startup/loadMissedMessages.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/startup/loadMissedMessages.ts","inputSourceMap":{"version":3,"file":"client/startup/loadMissedMessages.ts","sourceRoot":"","sources":["client/startup/loadMissedMessages.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEzC,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AACxE,OAAO,EAAE,iBAAiB,EAAE,aAAa,EAAE,MAAM,2BAA2B,CAAC;AAC7E,OAAO,EAAE,qBAAqB,EAAE,MAAM,oCAAoC,CAAC;AAE3E,MAAM,kBAAkB,GAAG,KAAK,WAAW,GAAiB;IAC3D,MAAM,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IAEnI,IAAI,CAAC,WAAW,EAAE,CAAC;QAClB,OAAO;IACR,CAAC;IAED,IAAI,CAAC;QACJ,MAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,oBAAoB,EAAE,GAAG,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;QACtF,IAAI,MAAM,EAAE,CAAC;YACZ,MAAM,YAAY,GAAG,gBAAgB,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;YACvD,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,aAAa,CAAC,EAAE,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1F,CAAC;IACF,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QAChB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;IACnB,IAAI,mBAAmB,GAAG,IAAI,CAAC;IAC/B,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE;QACpB,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;QAEjD,IAAI,SAAS,KAAK,IAAI,IAAI,mBAAmB,KAAK,KAAK,IAAI,iBAAiB,CAAC,WAAW,EAAE,CAAC;YAC1F,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC1D,MAAM,KAAK,GAAG,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBACjD,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC;oBACf,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC/B,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QACD,mBAAmB,GAAG,SAAS,CAAC;IACjC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { ChatMessage, ChatSubscription } from '../../app/models/client';\nimport { LegacyRoomManager, upsertMessage } from '../../app/ui-utils/client';\nimport { callWithErrorHandling } from '../lib/utils/callWithErrorHandling';\n\nconst loadMissedMessages = async function (rid: IRoom['_id']): Promise<void> {\n\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true }, temp: { $exists: false } }, { sort: { ts: -1 }, limit: 1 });\n\n\tif (!lastMessage) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst result = await callWithErrorHandling('loadMissedMessages', rid, lastMessage.ts);\n\t\tif (result) {\n\t\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\t\tawait Promise.all(Array.from(result).map((msg) => upsertMessage({ msg, subscription })));\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n};\n\nMeteor.startup(() => {\n\tlet connectionWasOnline = true;\n\tTracker.autorun(() => {\n\t\tconst { connected } = Meteor.connection.status();\n\n\t\tif (connected === true && connectionWasOnline === false && LegacyRoomManager.openedRooms) {\n\t\t\tObject.keys(LegacyRoomManager.openedRooms).forEach((key) => {\n\t\t\t\tconst value = LegacyRoomManager.openedRooms[key];\n\t\t\t\tif (value.rid) {\n\t\t\t\t\tloadMissedMessages(value.rid);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tconnectionWasOnline = connected;\n\t});\n});\n"]}}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 0);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n}, 1);\nlet ChatMessage, ChatSubscription;\nmodule.link(\"../../app/models/client\", {\n  ChatMessage(v) {\n    ChatMessage = v;\n  },\n  ChatSubscription(v) {\n    ChatSubscription = v;\n  }\n}, 2);\nlet LegacyRoomManager, upsertMessage;\nmodule.link(\"../../app/ui-utils/client\", {\n  LegacyRoomManager(v) {\n    LegacyRoomManager = v;\n  },\n  upsertMessage(v) {\n    upsertMessage = v;\n  }\n}, 3);\nlet callWithErrorHandling;\nmodule.link(\"../lib/utils/callWithErrorHandling\", {\n  callWithErrorHandling(v) {\n    callWithErrorHandling = v;\n  }\n}, 4);\nconst loadMissedMessages = async function (rid) {\n  const lastMessage = ChatMessage.findOne({\n    rid,\n    _hidden: {\n      $ne: true\n    },\n    temp: {\n      $exists: false\n    }\n  }, {\n    sort: {\n      ts: -1\n    },\n    limit: 1\n  });\n  if (!lastMessage) {\n    return;\n  }\n  try {\n    const result = await callWithErrorHandling('loadMissedMessages', rid, lastMessage.ts);\n    if (result) {\n      const subscription = ChatSubscription.findOne({\n        rid\n      });\n      await Promise.all(Array.from(result).map(msg => upsertMessage({\n        msg,\n        subscription\n      })));\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\nMeteor.startup(() => {\n  let connectionWasOnline = true;\n  Tracker.autorun(() => {\n    const {\n      connected\n    } = Meteor.connection.status();\n    if (connected === true && connectionWasOnline === false && LegacyRoomManager.openedRooms) {\n      Object.keys(LegacyRoomManager.openedRooms).forEach(key => {\n        const value = LegacyRoomManager.openedRooms[key];\n        if (value.rid) {\n          loadMissedMessages(value.rid);\n        }\n      });\n    }\n    connectionWasOnline = connected;\n  });\n});","map":{"version":3,"names":["Meteor","module","link","v","Tracker","ChatMessage","ChatSubscription","LegacyRoomManager","upsertMessage","callWithErrorHandling","loadMissedMessages","rid","lastMessage","findOne","_hidden","$ne","temp","$exists","sort","ts","limit","result","subscription","Promise","all","Array","from","map","msg","error","console","startup","connectionWasOnline","autorun","connected","connection","status","openedRooms","Object","keys","forEach","key","value"],"sources":["client/startup/loadMissedMessages.ts"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { ChatMessage, ChatSubscription } from '../../app/models/client';\nimport { LegacyRoomManager, upsertMessage } from '../../app/ui-utils/client';\nimport { callWithErrorHandling } from '../lib/utils/callWithErrorHandling';\n\nconst loadMissedMessages = async function (rid: IRoom['_id']): Promise<void> {\n\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true }, temp: { $exists: false } }, { sort: { ts: -1 }, limit: 1 });\n\n\tif (!lastMessage) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst result = await callWithErrorHandling('loadMissedMessages', rid, lastMessage.ts);\n\t\tif (result) {\n\t\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\t\tawait Promise.all(Array.from(result).map((msg) => upsertMessage({ msg, subscription })));\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n};\n\nMeteor.startup(() => {\n\tlet connectionWasOnline = true;\n\tTracker.autorun(() => {\n\t\tconst { connected } = Meteor.connection.status();\n\n\t\tif (connected === true && connectionWasOnline === false && LegacyRoomManager.openedRooms) {\n\t\t\tObject.keys(LegacyRoomManager.openedRooms).forEach((key) => {\n\t\t\t\tconst value = LegacyRoomManager.openedRooms[key];\n\t\t\t\tif (value.rid) {\n\t\t\t\t\tloadMissedMessages(value.rid);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tconnectionWasOnline = connected;\n\t});\n});\n"],"mappings":"AACA,IAAAA,MAAS;AAAAC,MAAQ,CAAAC,IAAA,CAAM,eAAe,EAAC;EAAAF,OAAAG,CAAA;IAAAH,MAAA,GAAAG,CAAA;EAAA;AAAA;AAAA,IAAAC,OAAA;AAAAH,MAAA,CAAAC,IAAA;EAAAE,QAAAD,CAAA;IAAAC,OAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,WAAA,EAAAC,gBAAA;AAAAL,MAAA,CAAAC,IAAA;EAAAG,YAAAF,CAAA;IAAAE,WAAA,GAAAF,CAAA;EAAA;EAAAG,iBAAAH,CAAA;IAAAG,gBAAA,GAAAH,CAAA;EAAA;AAAA;AAAA,IAAAI,iBAAA,EAAAC,aAAA;AAAAP,MAAA,CAAAC,IAAA;EAAAK,kBAAAJ,CAAA;IAAAI,iBAAA,GAAAJ,CAAA;EAAA;EAAAK,cAAAL,CAAA;IAAAK,aAAA,GAAAL,CAAA;EAAA;AAAA;AAAA,IAAAM,qBAAA;AAAAR,MAAA,CAAAC,IAAA;EAAAO,sBAAAN,CAAA;IAAAM,qBAAA,GAAAN,CAAA;EAAA;AAAA;AAOvC,MAAMO,kBAAkB,GAAG,eAAAA,CAAgBC,GAAiB;EAC3D,MAAMC,WAAW,GAAGP,WAAW,CAACQ,OAAO,CAAC;IAAEF,GAAG;IAAEG,OAAO,EAAE;MAAEC,GAAG,EAAE;IAAI,CAAE;IAAEC,IAAI,EAAE;MAAEC,OAAO,EAAE;IAAK;EAAE,CAAE,EAAE;IAAEC,IAAI,EAAE;MAAEC,EAAE,EAAE,CAAC;IAAC,CAAE;IAAEC,KAAK,EAAE;EAAC,CAAE,CAAC;EAElI,IAAI,CAACR,WAAW,EAAE;IACjB;EACD;EAEA,IAAI;IACH,MAAMS,MAAM,GAAG,MAAMZ,qBAAqB,CAAC,oBAAoB,EAAEE,GAAG,EAAEC,WAAW,CAACO,EAAE,CAAC;IACrF,IAAIE,MAAM,EAAE;MACX,MAAMC,YAAY,GAAGhB,gBAAgB,CAACO,OAAO,CAAC;QAAEF;MAAG,CAAE,CAAC;MACtD,MAAMY,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,IAAI,CAACL,MAAM,CAAC,CAACM,GAAG,CAAEC,GAAG,IAAKpB,aAAa,CAAC;QAAEoB,GAAG;QAAEN;MAAY,CAAE,CAAC,CAAC,CAAC;IACzF;EACD,CAAC,CAAC,OAAOO,KAAK,EAAE;IACfC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACrB;AACD,CAAC;AAED7B,MAAM,CAAC+B,OAAO,CAAC,MAAK;EACnB,IAAIC,mBAAmB,GAAG,IAAI;EAC9B5B,OAAO,CAAC6B,OAAO,CAAC,MAAK;IACpB,MAAM;MAAEC;IAAS,CAAE,GAAGlC,MAAM,CAACmC,UAAU,CAACC,MAAM,EAAE;IAEhD,IAAIF,SAAS,KAAK,IAAI,IAAIF,mBAAmB,KAAK,KAAK,IAAIzB,iBAAiB,CAAC8B,WAAW,EAAE;MACzFC,MAAM,CAACC,IAAI,CAAChC,iBAAiB,CAAC8B,WAAW,CAAC,CAACG,OAAO,CAAEC,GAAG,IAAI;QAC1D,MAAMC,KAAK,GAAGnC,iBAAiB,CAAC8B,WAAW,CAACI,GAAG,CAAC;QAChD,IAAIC,KAAK,CAAC/B,GAAG,EAAE;UACdD,kBAAkB,CAACgC,KAAK,CAAC/B,GAAG,CAAC;QAC9B;MACD,CAAC,CAAC;IACH;IACAqB,mBAAmB,GAAGE,SAAS;EAChC,CAAC,CAAC;AACH,CAAC,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ab27eeee7d6292fde7877a506f8fae517fc57d47"}
