{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/saveUserProfile.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/saveUserProfile.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/saveUserProfile.ts","inputSourceMap":{"version":3,"file":"server/methods/saveUserProfile.ts","sourceRoot":"","sources":["server/methods/saveUserProfile.ts"],"names":[],"mappings":"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","sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport type { UserStatus } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Users } from '@rocket.chat/models';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { twoFactorRequired } from '../../app/2fa/server/twoFactorRequired';\nimport { saveCustomFields } from '../../app/lib/server/functions/saveCustomFields';\nimport { validateUserEditing } from '../../app/lib/server/functions/saveUser';\nimport { saveUserIdentity } from '../../app/lib/server/functions/saveUserIdentity';\nimport { passwordPolicy } from '../../app/lib/server/lib/passwordPolicy';\nimport { settings as rcSettings } from '../../app/settings/server';\nimport { setUserStatusMethod } from '../../app/user-status/server/methods/setUserStatus';\nimport { compareUserPassword } from '../lib/compareUserPassword';\nimport { compareUserPasswordHistory } from '../lib/compareUserPasswordHistory';\n\nconst MAX_BIO_LENGTH = 260;\nconst MAX_NICKNAME_LENGTH = 120;\n\nasync function saveUserProfile(\n\tthis: Meteor.MethodThisType,\n\tsettings: {\n\t\temail?: string;\n\t\tusername?: string;\n\t\trealname?: string;\n\t\tnewPassword?: string;\n\t\tstatusText?: string;\n\t\tstatusType?: string;\n\t\tbio?: string;\n\t\tnickname?: string;\n\t},\n\tcustomFields: Record<string, unknown>,\n\t..._: unknown[]\n) {\n\tif (!rcSettings.get<boolean>('Accounts_AllowUserProfileChange')) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\tmethod: 'saveUserProfile',\n\t\t});\n\t}\n\n\tif (!this.userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'saveUserProfile',\n\t\t});\n\t}\n\n\tawait validateUserEditing(this.userId, {\n\t\t_id: this.userId,\n\t\temail: settings.email,\n\t\tusername: settings.username,\n\t\tname: settings.realname,\n\t\tpassword: settings.newPassword,\n\t\tstatusText: settings.statusText,\n\t});\n\n\tconst user = await Users.findOneById(this.userId);\n\n\tif (settings.realname || settings.username) {\n\t\tif (\n\t\t\t!(await saveUserIdentity({\n\t\t\t\t_id: this.userId,\n\t\t\t\tname: settings.realname,\n\t\t\t\tusername: settings.username,\n\t\t\t}))\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-could-not-save-identity', 'Could not save user identity', {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t}\n\n\tif (settings.statusText || settings.statusText === '') {\n\t\tawait setUserStatusMethod(this.userId, undefined, settings.statusText);\n\t}\n\n\tif (settings.statusType) {\n\t\tawait setUserStatusMethod(this.userId, settings.statusType as UserStatus, undefined);\n\t}\n\n\tif (user && settings.bio) {\n\t\tif (typeof settings.bio !== 'string') {\n\t\t\tthrow new Meteor.Error('error-invalid-field', 'bio', {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tif (settings.bio.length > MAX_BIO_LENGTH) {\n\t\t\tthrow new Meteor.Error('error-bio-size-exceeded', `Bio size exceeds ${MAX_BIO_LENGTH} characters`, {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tawait Users.setBio(user._id, settings.bio.trim());\n\t}\n\n\tif (user && settings.nickname) {\n\t\tif (typeof settings.nickname !== 'string') {\n\t\t\tthrow new Meteor.Error('error-invalid-field', 'nickname', {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tif (settings.nickname.length > MAX_NICKNAME_LENGTH) {\n\t\t\tthrow new Meteor.Error('error-nickname-size-exceeded', `Nickname size exceeds ${MAX_NICKNAME_LENGTH} characters`, {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tawait Users.setNickname(user._id, settings.nickname.trim());\n\t}\n\n\tif (settings.email) {\n\t\tawait Meteor.callAsync('setEmail', settings.email);\n\t}\n\n\tconst canChangePasswordForOAuth = rcSettings.get<boolean>('Accounts_AllowPasswordChangeForOAuthUsers');\n\tif (canChangePasswordForOAuth || user?.services?.password) {\n\t\t// Should be the last check to prevent error when trying to check password for users without password\n\t\tif (settings.newPassword && rcSettings.get<boolean>('Accounts_AllowPasswordChange') === true && user?.services?.password?.bcrypt) {\n\t\t\t// don't let user change to same password\n\t\t\tif (user && (await compareUserPassword(user, { plain: settings.newPassword }))) {\n\t\t\t\tthrow new Meteor.Error('error-password-same-as-current', 'Entered password same as current password', {\n\t\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (user?.services?.passwordHistory && !(await compareUserPasswordHistory(user, { plain: settings.newPassword }))) {\n\t\t\t\tthrow new Meteor.Error('error-password-in-history', 'Entered password has been previously used', {\n\t\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tpasswordPolicy.validate(settings.newPassword);\n\n\t\t\tawait Accounts.setPasswordAsync(this.userId, settings.newPassword, {\n\t\t\t\tlogout: false,\n\t\t\t});\n\n\t\t\tawait Users.addPasswordToHistory(\n\t\t\t\tthis.userId,\n\t\t\t\tuser.services?.password.bcrypt,\n\t\t\t\trcSettings.get<number>('Accounts_Password_History_Amount'),\n\t\t\t);\n\n\t\t\ttry {\n\t\t\t\tawait Meteor.callAsync('removeOtherTokens');\n\t\t\t} catch (e) {\n\t\t\t\tAccounts._clearAllLoginTokens(this.userId);\n\t\t\t}\n\t\t}\n\t}\n\n\tawait Users.setProfile(this.userId, {});\n\n\tif (customFields && Object.keys(customFields).length) {\n\t\tawait saveCustomFields(this.userId, customFields);\n\t}\n\n\t// App IPostUserUpdated event hook\n\tconst updatedUser = await Users.findOneById(this.userId);\n\tawait Apps.self?.triggerEvent(AppEvents.IPostUserUpdated, { user: updatedUser, previousUser: user });\n\n\treturn true;\n}\n\nconst saveUserProfileWithTwoFactor = twoFactorRequired(saveUserProfile, {\n\trequireSecondFactor: true,\n});\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsaveUserProfile(\n\t\t\tsettings: {\n\t\t\t\temail?: string;\n\t\t\t\tusername?: string;\n\t\t\t\trealname?: string;\n\t\t\t\tnewPassword?: string;\n\t\t\t\tstatusText?: string;\n\t\t\t\tstatusType?: string;\n\t\t\t\tbio?: string;\n\t\t\t\tnickname?: string;\n\t\t\t},\n\t\t\tcustomFields: Record<string, any>,\n\t\t\t...args: unknown[]\n\t\t): boolean;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync saveUserProfile(settings, customFields, ...args) {\n\t\tcheck(settings, Object);\n\t\tcheck(customFields, Match.Maybe(Object));\n\n\t\tif (settings.email || settings.newPassword) {\n\t\t\treturn saveUserProfileWithTwoFactor.call(this, settings, customFields, ...args);\n\t\t}\n\n\t\treturn saveUserProfile.call(this, settings, customFields, ...args);\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/saveUserProfile.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/saveUserProfile.ts","inputSourceMap":{"version":3,"file":"server/methods/saveUserProfile.ts","sourceRoot":"","sources":["server/methods/saveUserProfile.ts"],"names":[],"mappings":"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","sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport type { UserStatus } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Users } from '@rocket.chat/models';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { twoFactorRequired } from '../../app/2fa/server/twoFactorRequired';\nimport { saveCustomFields } from '../../app/lib/server/functions/saveCustomFields';\nimport { validateUserEditing } from '../../app/lib/server/functions/saveUser';\nimport { saveUserIdentity } from '../../app/lib/server/functions/saveUserIdentity';\nimport { passwordPolicy } from '../../app/lib/server/lib/passwordPolicy';\nimport { settings as rcSettings } from '../../app/settings/server';\nimport { setUserStatusMethod } from '../../app/user-status/server/methods/setUserStatus';\nimport { compareUserPassword } from '../lib/compareUserPassword';\nimport { compareUserPasswordHistory } from '../lib/compareUserPasswordHistory';\n\nconst MAX_BIO_LENGTH = 260;\nconst MAX_NICKNAME_LENGTH = 120;\n\nasync function saveUserProfile(\n\tthis: Meteor.MethodThisType,\n\tsettings: {\n\t\temail?: string;\n\t\tusername?: string;\n\t\trealname?: string;\n\t\tnewPassword?: string;\n\t\tstatusText?: string;\n\t\tstatusType?: string;\n\t\tbio?: string;\n\t\tnickname?: string;\n\t},\n\tcustomFields: Record<string, unknown>,\n\t..._: unknown[]\n) {\n\tif (!rcSettings.get<boolean>('Accounts_AllowUserProfileChange')) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\tmethod: 'saveUserProfile',\n\t\t});\n\t}\n\n\tif (!this.userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'saveUserProfile',\n\t\t});\n\t}\n\n\tawait validateUserEditing(this.userId, {\n\t\t_id: this.userId,\n\t\temail: settings.email,\n\t\tusername: settings.username,\n\t\tname: settings.realname,\n\t\tpassword: settings.newPassword,\n\t\tstatusText: settings.statusText,\n\t});\n\n\tconst user = await Users.findOneById(this.userId);\n\n\tif (settings.realname || settings.username) {\n\t\tif (\n\t\t\t!(await saveUserIdentity({\n\t\t\t\t_id: this.userId,\n\t\t\t\tname: settings.realname,\n\t\t\t\tusername: settings.username,\n\t\t\t}))\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-could-not-save-identity', 'Could not save user identity', {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t}\n\n\tif (settings.statusText || settings.statusText === '') {\n\t\tawait setUserStatusMethod(this.userId, undefined, settings.statusText);\n\t}\n\n\tif (settings.statusType) {\n\t\tawait setUserStatusMethod(this.userId, settings.statusType as UserStatus, undefined);\n\t}\n\n\tif (user && settings.bio) {\n\t\tif (typeof settings.bio !== 'string') {\n\t\t\tthrow new Meteor.Error('error-invalid-field', 'bio', {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tif (settings.bio.length > MAX_BIO_LENGTH) {\n\t\t\tthrow new Meteor.Error('error-bio-size-exceeded', `Bio size exceeds ${MAX_BIO_LENGTH} characters`, {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tawait Users.setBio(user._id, settings.bio.trim());\n\t}\n\n\tif (user && settings.nickname) {\n\t\tif (typeof settings.nickname !== 'string') {\n\t\t\tthrow new Meteor.Error('error-invalid-field', 'nickname', {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tif (settings.nickname.length > MAX_NICKNAME_LENGTH) {\n\t\t\tthrow new Meteor.Error('error-nickname-size-exceeded', `Nickname size exceeds ${MAX_NICKNAME_LENGTH} characters`, {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tawait Users.setNickname(user._id, settings.nickname.trim());\n\t}\n\n\tif (settings.email) {\n\t\tawait Meteor.callAsync('setEmail', settings.email);\n\t}\n\n\tconst canChangePasswordForOAuth = rcSettings.get<boolean>('Accounts_AllowPasswordChangeForOAuthUsers');\n\tif (canChangePasswordForOAuth || user?.services?.password) {\n\t\t// Should be the last check to prevent error when trying to check password for users without password\n\t\tif (settings.newPassword && rcSettings.get<boolean>('Accounts_AllowPasswordChange') === true && user?.services?.password?.bcrypt) {\n\t\t\t// don't let user change to same password\n\t\t\tif (user && (await compareUserPassword(user, { plain: settings.newPassword }))) {\n\t\t\t\tthrow new Meteor.Error('error-password-same-as-current', 'Entered password same as current password', {\n\t\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (user?.services?.passwordHistory && !(await compareUserPasswordHistory(user, { plain: settings.newPassword }))) {\n\t\t\t\tthrow new Meteor.Error('error-password-in-history', 'Entered password has been previously used', {\n\t\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tpasswordPolicy.validate(settings.newPassword);\n\n\t\t\tawait Accounts.setPasswordAsync(this.userId, settings.newPassword, {\n\t\t\t\tlogout: false,\n\t\t\t});\n\n\t\t\tawait Users.addPasswordToHistory(\n\t\t\t\tthis.userId,\n\t\t\t\tuser.services?.password.bcrypt,\n\t\t\t\trcSettings.get<number>('Accounts_Password_History_Amount'),\n\t\t\t);\n\n\t\t\ttry {\n\t\t\t\tawait Meteor.callAsync('removeOtherTokens');\n\t\t\t} catch (e) {\n\t\t\t\tAccounts._clearAllLoginTokens(this.userId);\n\t\t\t}\n\t\t}\n\t}\n\n\tawait Users.setProfile(this.userId, {});\n\n\tif (customFields && Object.keys(customFields).length) {\n\t\tawait saveCustomFields(this.userId, customFields);\n\t}\n\n\t// App IPostUserUpdated event hook\n\tconst updatedUser = await Users.findOneById(this.userId);\n\tawait Apps.self?.triggerEvent(AppEvents.IPostUserUpdated, { user: updatedUser, previousUser: user });\n\n\treturn true;\n}\n\nconst saveUserProfileWithTwoFactor = twoFactorRequired(saveUserProfile, {\n\trequireSecondFactor: true,\n});\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsaveUserProfile(\n\t\t\tsettings: {\n\t\t\t\temail?: string;\n\t\t\t\tusername?: string;\n\t\t\t\trealname?: string;\n\t\t\t\tnewPassword?: string;\n\t\t\t\tstatusText?: string;\n\t\t\t\tstatusType?: string;\n\t\t\t\tbio?: string;\n\t\t\t\tnickname?: string;\n\t\t\t},\n\t\t\tcustomFields: Record<string, any>,\n\t\t\t...args: unknown[]\n\t\t): boolean;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync saveUserProfile(settings, customFields, ...args) {\n\t\tcheck(settings, Object);\n\t\tcheck(customFields, Match.Maybe(Object));\n\n\t\tif (settings.email || settings.newPassword) {\n\t\t\treturn saveUserProfileWithTwoFactor.call(this, settings, customFields, ...args);\n\t\t}\n\n\t\treturn saveUserProfile.call(this, settings, customFields, ...args);\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Apps, AppEvents;\n    module.link(\"@rocket.chat/apps\", {\n      Apps(v) {\n        Apps = v;\n      },\n      AppEvents(v) {\n        AppEvents = v;\n      }\n    }, 0);\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 2);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 3);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 4);\n    let twoFactorRequired;\n    module.link(\"../../app/2fa/server/twoFactorRequired\", {\n      twoFactorRequired(v) {\n        twoFactorRequired = v;\n      }\n    }, 5);\n    let saveCustomFields;\n    module.link(\"../../app/lib/server/functions/saveCustomFields\", {\n      saveCustomFields(v) {\n        saveCustomFields = v;\n      }\n    }, 6);\n    let validateUserEditing;\n    module.link(\"../../app/lib/server/functions/saveUser\", {\n      validateUserEditing(v) {\n        validateUserEditing = v;\n      }\n    }, 7);\n    let saveUserIdentity;\n    module.link(\"../../app/lib/server/functions/saveUserIdentity\", {\n      saveUserIdentity(v) {\n        saveUserIdentity = v;\n      }\n    }, 8);\n    let passwordPolicy;\n    module.link(\"../../app/lib/server/lib/passwordPolicy\", {\n      passwordPolicy(v) {\n        passwordPolicy = v;\n      }\n    }, 9);\n    let rcSettings;\n    module.link(\"../../app/settings/server\", {\n      settings(v) {\n        rcSettings = v;\n      }\n    }, 10);\n    let setUserStatusMethod;\n    module.link(\"../../app/user-status/server/methods/setUserStatus\", {\n      setUserStatusMethod(v) {\n        setUserStatusMethod = v;\n      }\n    }, 11);\n    let compareUserPassword;\n    module.link(\"../lib/compareUserPassword\", {\n      compareUserPassword(v) {\n        compareUserPassword = v;\n      }\n    }, 12);\n    let compareUserPasswordHistory;\n    module.link(\"../lib/compareUserPasswordHistory\", {\n      compareUserPasswordHistory(v) {\n        compareUserPasswordHistory = v;\n      }\n    }, 13);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const MAX_BIO_LENGTH = 260;\n    const MAX_NICKNAME_LENGTH = 120;\n    async function saveUserProfile(settings, customFields) {\n      var _user$services, _Apps$self;\n      if (!rcSettings.get('Accounts_AllowUserProfileChange')) {\n        throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n          method: 'saveUserProfile'\n        });\n      }\n      if (!this.userId) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'saveUserProfile'\n        });\n      }\n      await validateUserEditing(this.userId, {\n        _id: this.userId,\n        email: settings.email,\n        username: settings.username,\n        name: settings.realname,\n        password: settings.newPassword,\n        statusText: settings.statusText\n      });\n      const user = await Users.findOneById(this.userId);\n      if (settings.realname || settings.username) {\n        if (!(await saveUserIdentity({\n          _id: this.userId,\n          name: settings.realname,\n          username: settings.username\n        }))) {\n          throw new Meteor.Error('error-could-not-save-identity', 'Could not save user identity', {\n            method: 'saveUserProfile'\n          });\n        }\n      }\n      if (settings.statusText || settings.statusText === '') {\n        await setUserStatusMethod(this.userId, undefined, settings.statusText);\n      }\n      if (settings.statusType) {\n        await setUserStatusMethod(this.userId, settings.statusType, undefined);\n      }\n      if (user && settings.bio) {\n        if (typeof settings.bio !== 'string') {\n          throw new Meteor.Error('error-invalid-field', 'bio', {\n            method: 'saveUserProfile'\n          });\n        }\n        if (settings.bio.length > MAX_BIO_LENGTH) {\n          throw new Meteor.Error('error-bio-size-exceeded', \"Bio size exceeds \".concat(MAX_BIO_LENGTH, \" characters\"), {\n            method: 'saveUserProfile'\n          });\n        }\n        await Users.setBio(user._id, settings.bio.trim());\n      }\n      if (user && settings.nickname) {\n        if (typeof settings.nickname !== 'string') {\n          throw new Meteor.Error('error-invalid-field', 'nickname', {\n            method: 'saveUserProfile'\n          });\n        }\n        if (settings.nickname.length > MAX_NICKNAME_LENGTH) {\n          throw new Meteor.Error('error-nickname-size-exceeded', \"Nickname size exceeds \".concat(MAX_NICKNAME_LENGTH, \" characters\"), {\n            method: 'saveUserProfile'\n          });\n        }\n        await Users.setNickname(user._id, settings.nickname.trim());\n      }\n      if (settings.email) {\n        await Meteor.callAsync('setEmail', settings.email);\n      }\n      const canChangePasswordForOAuth = rcSettings.get('Accounts_AllowPasswordChangeForOAuthUsers');\n      if (canChangePasswordForOAuth || user !== null && user !== void 0 && (_user$services = user.services) !== null && _user$services !== void 0 && _user$services.password) {\n        var _user$services2, _user$services2$passw;\n        // Should be the last check to prevent error when trying to check password for users without password\n        if (settings.newPassword && rcSettings.get('Accounts_AllowPasswordChange') === true && user !== null && user !== void 0 && (_user$services2 = user.services) !== null && _user$services2 !== void 0 && (_user$services2$passw = _user$services2.password) !== null && _user$services2$passw !== void 0 && _user$services2$passw.bcrypt) {\n          var _user$services3, _user$services4;\n          // don't let user change to same password\n          if (user && (await compareUserPassword(user, {\n            plain: settings.newPassword\n          }))) {\n            throw new Meteor.Error('error-password-same-as-current', 'Entered password same as current password', {\n              method: 'saveUserProfile'\n            });\n          }\n          if (user !== null && user !== void 0 && (_user$services3 = user.services) !== null && _user$services3 !== void 0 && _user$services3.passwordHistory && !(await compareUserPasswordHistory(user, {\n            plain: settings.newPassword\n          }))) {\n            throw new Meteor.Error('error-password-in-history', 'Entered password has been previously used', {\n              method: 'saveUserProfile'\n            });\n          }\n          passwordPolicy.validate(settings.newPassword);\n          await Accounts.setPasswordAsync(this.userId, settings.newPassword, {\n            logout: false\n          });\n          await Users.addPasswordToHistory(this.userId, (_user$services4 = user.services) === null || _user$services4 === void 0 ? void 0 : _user$services4.password.bcrypt, rcSettings.get('Accounts_Password_History_Amount'));\n          try {\n            await Meteor.callAsync('removeOtherTokens');\n          } catch (e) {\n            Accounts._clearAllLoginTokens(this.userId);\n          }\n        }\n      }\n      await Users.setProfile(this.userId, {});\n      if (customFields && Object.keys(customFields).length) {\n        await saveCustomFields(this.userId, customFields);\n      }\n      // App IPostUserUpdated event hook\n      const updatedUser = await Users.findOneById(this.userId);\n      await ((_Apps$self = Apps.self) === null || _Apps$self === void 0 ? void 0 : _Apps$self.triggerEvent(AppEvents.IPostUserUpdated, {\n        user: updatedUser,\n        previousUser: user\n      }));\n      return true;\n    }\n    const saveUserProfileWithTwoFactor = twoFactorRequired(saveUserProfile, {\n      requireSecondFactor: true\n    });\n    Meteor.methods({\n      async saveUserProfile(settings, customFields) {\n        check(settings, Object);\n        check(customFields, Match.Maybe(Object));\n        for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n          args[_key - 2] = arguments[_key];\n        }\n        if (settings.email || settings.newPassword) {\n          return saveUserProfileWithTwoFactor.call(this, settings, customFields, ...args);\n        }\n        return saveUserProfile.call(this, settings, customFields, ...args);\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Apps","AppEvents","module","link","v","Users","Accounts","Match","check","Meteor","twoFactorRequired","saveCustomFields","validateUserEditing","saveUserIdentity","passwordPolicy","rcSettings","settings","setUserStatusMethod","compareUserPassword","compareUserPasswordHistory","__reifyWaitForDeps__","MAX_BIO_LENGTH","MAX_NICKNAME_LENGTH","saveUserProfile","customFields","_user$services","_Apps$self","get","Error","method","userId","_id","email","username","name","realname","password","newPassword","statusText","user","findOneById","undefined","statusType","bio","length","concat","setBio","trim","nickname","setNickname","callAsync","canChangePasswordForOAuth","services","_user$services2","_user$services2$passw","bcrypt","_user$services3","_user$services4","plain","passwordHistory","validate","setPasswordAsync","logout","addPasswordToHistory","e","_clearAllLoginTokens","setProfile","Object","keys","updatedUser","self","triggerEvent","IPostUserUpdated","previousUser","saveUserProfileWithTwoFactor","requireSecondFactor","methods","Maybe","_len","arguments","args","Array","_key","call","__reify_async_result__","_reifyError","async"],"sources":["server/methods/saveUserProfile.ts"],"sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport type { UserStatus } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Users } from '@rocket.chat/models';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { twoFactorRequired } from '../../app/2fa/server/twoFactorRequired';\nimport { saveCustomFields } from '../../app/lib/server/functions/saveCustomFields';\nimport { validateUserEditing } from '../../app/lib/server/functions/saveUser';\nimport { saveUserIdentity } from '../../app/lib/server/functions/saveUserIdentity';\nimport { passwordPolicy } from '../../app/lib/server/lib/passwordPolicy';\nimport { settings as rcSettings } from '../../app/settings/server';\nimport { setUserStatusMethod } from '../../app/user-status/server/methods/setUserStatus';\nimport { compareUserPassword } from '../lib/compareUserPassword';\nimport { compareUserPasswordHistory } from '../lib/compareUserPasswordHistory';\n\nconst MAX_BIO_LENGTH = 260;\nconst MAX_NICKNAME_LENGTH = 120;\n\nasync function saveUserProfile(\n\tthis: Meteor.MethodThisType,\n\tsettings: {\n\t\temail?: string;\n\t\tusername?: string;\n\t\trealname?: string;\n\t\tnewPassword?: string;\n\t\tstatusText?: string;\n\t\tstatusType?: string;\n\t\tbio?: string;\n\t\tnickname?: string;\n\t},\n\tcustomFields: Record<string, unknown>,\n\t..._: unknown[]\n) {\n\tif (!rcSettings.get<boolean>('Accounts_AllowUserProfileChange')) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\tmethod: 'saveUserProfile',\n\t\t});\n\t}\n\n\tif (!this.userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'saveUserProfile',\n\t\t});\n\t}\n\n\tawait validateUserEditing(this.userId, {\n\t\t_id: this.userId,\n\t\temail: settings.email,\n\t\tusername: settings.username,\n\t\tname: settings.realname,\n\t\tpassword: settings.newPassword,\n\t\tstatusText: settings.statusText,\n\t});\n\n\tconst user = await Users.findOneById(this.userId);\n\n\tif (settings.realname || settings.username) {\n\t\tif (\n\t\t\t!(await saveUserIdentity({\n\t\t\t\t_id: this.userId,\n\t\t\t\tname: settings.realname,\n\t\t\t\tusername: settings.username,\n\t\t\t}))\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-could-not-save-identity', 'Could not save user identity', {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t}\n\n\tif (settings.statusText || settings.statusText === '') {\n\t\tawait setUserStatusMethod(this.userId, undefined, settings.statusText);\n\t}\n\n\tif (settings.statusType) {\n\t\tawait setUserStatusMethod(this.userId, settings.statusType as UserStatus, undefined);\n\t}\n\n\tif (user && settings.bio) {\n\t\tif (typeof settings.bio !== 'string') {\n\t\t\tthrow new Meteor.Error('error-invalid-field', 'bio', {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tif (settings.bio.length > MAX_BIO_LENGTH) {\n\t\t\tthrow new Meteor.Error('error-bio-size-exceeded', `Bio size exceeds ${MAX_BIO_LENGTH} characters`, {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tawait Users.setBio(user._id, settings.bio.trim());\n\t}\n\n\tif (user && settings.nickname) {\n\t\tif (typeof settings.nickname !== 'string') {\n\t\t\tthrow new Meteor.Error('error-invalid-field', 'nickname', {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tif (settings.nickname.length > MAX_NICKNAME_LENGTH) {\n\t\t\tthrow new Meteor.Error('error-nickname-size-exceeded', `Nickname size exceeds ${MAX_NICKNAME_LENGTH} characters`, {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tawait Users.setNickname(user._id, settings.nickname.trim());\n\t}\n\n\tif (settings.email) {\n\t\tawait Meteor.callAsync('setEmail', settings.email);\n\t}\n\n\tconst canChangePasswordForOAuth = rcSettings.get<boolean>('Accounts_AllowPasswordChangeForOAuthUsers');\n\tif (canChangePasswordForOAuth || user?.services?.password) {\n\t\t// Should be the last check to prevent error when trying to check password for users without password\n\t\tif (settings.newPassword && rcSettings.get<boolean>('Accounts_AllowPasswordChange') === true && user?.services?.password?.bcrypt) {\n\t\t\t// don't let user change to same password\n\t\t\tif (user && (await compareUserPassword(user, { plain: settings.newPassword }))) {\n\t\t\t\tthrow new Meteor.Error('error-password-same-as-current', 'Entered password same as current password', {\n\t\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (user?.services?.passwordHistory && !(await compareUserPasswordHistory(user, { plain: settings.newPassword }))) {\n\t\t\t\tthrow new Meteor.Error('error-password-in-history', 'Entered password has been previously used', {\n\t\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tpasswordPolicy.validate(settings.newPassword);\n\n\t\t\tawait Accounts.setPasswordAsync(this.userId, settings.newPassword, {\n\t\t\t\tlogout: false,\n\t\t\t});\n\n\t\t\tawait Users.addPasswordToHistory(\n\t\t\t\tthis.userId,\n\t\t\t\tuser.services?.password.bcrypt,\n\t\t\t\trcSettings.get<number>('Accounts_Password_History_Amount'),\n\t\t\t);\n\n\t\t\ttry {\n\t\t\t\tawait Meteor.callAsync('removeOtherTokens');\n\t\t\t} catch (e) {\n\t\t\t\tAccounts._clearAllLoginTokens(this.userId);\n\t\t\t}\n\t\t}\n\t}\n\n\tawait Users.setProfile(this.userId, {});\n\n\tif (customFields && Object.keys(customFields).length) {\n\t\tawait saveCustomFields(this.userId, customFields);\n\t}\n\n\t// App IPostUserUpdated event hook\n\tconst updatedUser = await Users.findOneById(this.userId);\n\tawait Apps.self?.triggerEvent(AppEvents.IPostUserUpdated, { user: updatedUser, previousUser: user });\n\n\treturn true;\n}\n\nconst saveUserProfileWithTwoFactor = twoFactorRequired(saveUserProfile, {\n\trequireSecondFactor: true,\n});\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsaveUserProfile(\n\t\t\tsettings: {\n\t\t\t\temail?: string;\n\t\t\t\tusername?: string;\n\t\t\t\trealname?: string;\n\t\t\t\tnewPassword?: string;\n\t\t\t\tstatusText?: string;\n\t\t\t\tstatusType?: string;\n\t\t\t\tbio?: string;\n\t\t\t\tnickname?: string;\n\t\t\t},\n\t\t\tcustomFields: Record<string, any>,\n\t\t\t...args: unknown[]\n\t\t): boolean;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync saveUserProfile(settings, customFields, ...args) {\n\t\tcheck(settings, Object);\n\t\tcheck(customFields, Match.Maybe(Object));\n\n\t\tif (settings.email || settings.newPassword) {\n\t\t\treturn saveUserProfileWithTwoFactor.call(this, settings, customFields, ...args);\n\t\t}\n\n\t\treturn saveUserProfile.call(this, settings, customFields, ...args);\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ec51622a9d2c4df4720023af8cc810ff88949f2d"}
