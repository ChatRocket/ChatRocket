{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebarv2/hooks/useRoomList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/sidebarv2/hooks/useRoomList.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebarv2/hooks/useRoomList.ts","inputSourceMap":{"version":3,"file":"client/sidebarv2/hooks/useRoomList.ts","sourceRoot":"","sources":["client/sidebarv2/hooks/useRoomList.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatInquiryRecord, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { useDebouncedValue, useLocalStorage } from '@rocket.chat/fuselage-hooks';\nimport type { TranslationKey, SubscriptionWithRoom } from '@rocket.chat/ui-contexts';\nimport { useUserPreference, useUserSubscriptions, useSetting } from '@rocket.chat/ui-contexts';\nimport { useCallback, useMemo } from 'react';\n\nimport { useVideoConfIncomingCalls } from '../../contexts/VideoConfContext';\nimport { useOmnichannelEnabled } from '../../hooks/omnichannel/useOmnichannelEnabled';\nimport { useQueuedInquiries } from '../../hooks/omnichannel/useQueuedInquiries';\nimport { useQueryOptions } from './useQueryOptions';\n\nconst query = { open: { $ne: false } };\n\nconst emptyQueue: ILivechatInquiryRecord[] = [];\n\nconst order = [\n\t'Incoming_Calls',\n\t'Incoming_Livechats',\n\t'Open_Livechats',\n\t'On_Hold_Chats',\n\t'Unread',\n\t'Favorites',\n\t'Teams',\n\t'Discussions',\n\t'Channels',\n\t'Direct_Messages',\n\t'Conversations',\n] as const;\n\nconst CATEGORIES = {\n\tIncoming_Calls: 'Incoming_Calls',\n\tIncoming_Livechats: 'Incoming_Livechats',\n\tOpen_Livechats: 'Open_Livechats',\n\tOn_Hold_Chats: 'On_Hold_Chats',\n\tUnread: 'Unread',\n\tFavorites: 'Favorites',\n\tTeams: 'Teams',\n\tDiscussions: 'Discussions',\n\tChannels: 'Channels',\n\tDirect_Messages: 'Direct_Messages',\n\tConversations: 'Conversations',\n};\n\nconst getGroupsCount = (rooms: Array<ISubscription & IRoom>) => {\n\treturn rooms\n\t\t.reduce((acc, item, index) => {\n\t\t\tif (typeof item === 'string') {\n\t\t\t\tacc.push(index);\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, [] as number[])\n\t\t.map((item, index, arr) => (arr[index + 1] ? arr[index + 1] : rooms.length) - item - 1);\n};\n\nexport const useRoomList = (): {\n\tflatList: Array<ISubscription & IRoom>;\n\troomList: Array<ISubscription & IRoom>;\n\tgroupsCount: number[];\n\tgroupsList: TranslationKey[];\n\thandleCollapsedGroups: (groupTitle: string) => void;\n\tcollapsedGroups: string[];\n} => {\n\tconst [collapsedGroups, setCollapsedGroups] = useLocalStorage<string[]>('sidebarGroups', []);\n\n\tconst showOmnichannel = useOmnichannelEnabled();\n\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\n\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\n\tconst sidebarOrder = useUserPreference<typeof order>('sidebarSectionsOrder') ?? order;\n\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\n\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\n\n\tconst options = useQueryOptions();\n\n\tconst rooms = useUserSubscriptions(query, options);\n\n\tconst inquiries = useQueuedInquiries();\n\n\tconst incomingCalls = useVideoConfIncomingCalls();\n\n\tlet queue = emptyQueue;\n\tif (inquiries.enabled) {\n\t\tqueue = inquiries.queue;\n\t}\n\n\tconst { flatRoomList, groupsCount, groupsList, roomList } = useDebouncedValue(\n\t\tuseMemo(() => {\n\t\t\tconst isCollapsed = (groupTitle: string) => collapsedGroups.includes(groupTitle);\n\t\t\tconst shouldAddUnread = (room: SubscriptionWithRoom) =>\n\t\t\t\t!(sidebarShowUnread && isCollapsed(CATEGORIES.Unread) && (room.alert || room.unread));\n\n\t\t\tconst incomingCall = new Set();\n\t\t\tconst favorite = new Set();\n\t\t\tconst team = new Set();\n\t\t\tconst omnichannel = new Set();\n\t\t\tconst unread = new Set();\n\t\t\tconst channels = new Set();\n\t\t\tconst direct = new Set();\n\t\t\tconst discussion = new Set();\n\t\t\tconst conversation = new Set();\n\t\t\tconst onHold = new Set();\n\n\t\t\trooms.forEach((room) => {\n\t\t\t\tif (room.archived) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (incomingCalls.find((call) => call.rid === room.rid)) {\n\t\t\t\t\treturn incomingCall.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarShowUnread && (room.alert || room.unread)) {\n\t\t\t\t\treturn unread.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (favoritesEnabled && room.f) {\n\t\t\t\t\treturn shouldAddUnread(room) && favorite.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && room.teamMain) {\n\t\t\t\t\treturn shouldAddUnread(room) && team.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n\t\t\t\t\treturn shouldAddUnread(room) && discussion.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'c' || room.t === 'p') {\n\t\t\t\t\tshouldAddUnread(room) && channels.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l' && room.onHold) {\n\t\t\t\t\treturn showOmnichannel && shouldAddUnread(room) && onHold.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l') {\n\t\t\t\t\treturn showOmnichannel && shouldAddUnread(room) && omnichannel.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'd') {\n\t\t\t\t\tshouldAddUnread(room) && direct.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (shouldAddUnread(room)) {\n\t\t\t\t\tconversation.add(room);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst groups = new Map();\n\t\t\tincomingCall.size && groups.set('Incoming_Calls', incomingCall);\n\n\t\t\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', queue);\n\t\t\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n\t\t\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n\n\t\t\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\n\n\t\t\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n\n\t\t\tsidebarGroupByType && team.size && groups.set('Teams', team);\n\n\t\t\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n\n\t\t\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\n\n\t\t\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n\n\t\t\t!sidebarGroupByType && groups.set('Conversations', conversation);\n\n\t\t\tconst groupsList: TranslationKey[] = [];\n\t\t\tconst roomList: Array<ISubscription & IRoom> = [];\n\n\t\t\tconst flatRoomList = sidebarOrder\n\t\t\t\t.map((key) => {\n\t\t\t\t\tconst group = groups.get(key);\n\t\t\t\t\tif (!group) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\tgroupsList.push(key);\n\t\t\t\t\tif (isCollapsed(key)) {\n\t\t\t\t\t\treturn [key];\n\t\t\t\t\t}\n\n\t\t\t\t\troomList.push(...group);\n\n\t\t\t\t\treturn [key, ...group];\n\t\t\t\t})\n\t\t\t\t.flat();\n\n\t\t\treturn { flatRoomList, groupsCount: getGroupsCount([...flatRoomList]), groupsList, roomList };\n\t\t}, [\n\t\t\trooms,\n\t\t\tshowOmnichannel,\n\t\t\tincomingCalls,\n\t\t\tinquiries.enabled,\n\t\t\tqueue,\n\t\t\tsidebarShowUnread,\n\t\t\tfavoritesEnabled,\n\t\t\tsidebarGroupByType,\n\t\t\tisDiscussionEnabled,\n\t\t\tsidebarOrder,\n\t\t\tcollapsedGroups,\n\t\t]),\n\t\t50,\n\t);\n\n\tconst handleCollapsedGroups = useCallback(\n\t\t(group: string) => {\n\t\t\tif (collapsedGroups.includes(group)) {\n\t\t\t\tsetCollapsedGroups(collapsedGroups.filter((item) => item !== group));\n\t\t\t} else {\n\t\t\t\tsetCollapsedGroups([...collapsedGroups, group]);\n\t\t\t}\n\t\t},\n\t\t[collapsedGroups, setCollapsedGroups],\n\t);\n\n\treturn {\n\t\tflatList: flatRoomList,\n\t\troomList,\n\t\tgroupsCount,\n\t\tgroupsList,\n\t\thandleCollapsedGroups,\n\t\tcollapsedGroups,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebarv2/hooks/useRoomList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/sidebarv2/hooks/useRoomList.ts","inputSourceMap":{"version":3,"file":"client/sidebarv2/hooks/useRoomList.ts","sourceRoot":"","sources":["client/sidebarv2/hooks/useRoomList.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatInquiryRecord, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { useDebouncedValue, useLocalStorage } from '@rocket.chat/fuselage-hooks';\nimport type { TranslationKey, SubscriptionWithRoom } from '@rocket.chat/ui-contexts';\nimport { useUserPreference, useUserSubscriptions, useSetting } from '@rocket.chat/ui-contexts';\nimport { useCallback, useMemo } from 'react';\n\nimport { useVideoConfIncomingCalls } from '../../contexts/VideoConfContext';\nimport { useOmnichannelEnabled } from '../../hooks/omnichannel/useOmnichannelEnabled';\nimport { useQueuedInquiries } from '../../hooks/omnichannel/useQueuedInquiries';\nimport { useQueryOptions } from './useQueryOptions';\n\nconst query = { open: { $ne: false } };\n\nconst emptyQueue: ILivechatInquiryRecord[] = [];\n\nconst order = [\n\t'Incoming_Calls',\n\t'Incoming_Livechats',\n\t'Open_Livechats',\n\t'On_Hold_Chats',\n\t'Unread',\n\t'Favorites',\n\t'Teams',\n\t'Discussions',\n\t'Channels',\n\t'Direct_Messages',\n\t'Conversations',\n] as const;\n\nconst CATEGORIES = {\n\tIncoming_Calls: 'Incoming_Calls',\n\tIncoming_Livechats: 'Incoming_Livechats',\n\tOpen_Livechats: 'Open_Livechats',\n\tOn_Hold_Chats: 'On_Hold_Chats',\n\tUnread: 'Unread',\n\tFavorites: 'Favorites',\n\tTeams: 'Teams',\n\tDiscussions: 'Discussions',\n\tChannels: 'Channels',\n\tDirect_Messages: 'Direct_Messages',\n\tConversations: 'Conversations',\n};\n\nconst getGroupsCount = (rooms: Array<ISubscription & IRoom>) => {\n\treturn rooms\n\t\t.reduce((acc, item, index) => {\n\t\t\tif (typeof item === 'string') {\n\t\t\t\tacc.push(index);\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, [] as number[])\n\t\t.map((item, index, arr) => (arr[index + 1] ? arr[index + 1] : rooms.length) - item - 1);\n};\n\nexport const useRoomList = (): {\n\tflatList: Array<ISubscription & IRoom>;\n\troomList: Array<ISubscription & IRoom>;\n\tgroupsCount: number[];\n\tgroupsList: TranslationKey[];\n\thandleCollapsedGroups: (groupTitle: string) => void;\n\tcollapsedGroups: string[];\n} => {\n\tconst [collapsedGroups, setCollapsedGroups] = useLocalStorage<string[]>('sidebarGroups', []);\n\n\tconst showOmnichannel = useOmnichannelEnabled();\n\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\n\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\n\tconst sidebarOrder = useUserPreference<typeof order>('sidebarSectionsOrder') ?? order;\n\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\n\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\n\n\tconst options = useQueryOptions();\n\n\tconst rooms = useUserSubscriptions(query, options);\n\n\tconst inquiries = useQueuedInquiries();\n\n\tconst incomingCalls = useVideoConfIncomingCalls();\n\n\tlet queue = emptyQueue;\n\tif (inquiries.enabled) {\n\t\tqueue = inquiries.queue;\n\t}\n\n\tconst { flatRoomList, groupsCount, groupsList, roomList } = useDebouncedValue(\n\t\tuseMemo(() => {\n\t\t\tconst isCollapsed = (groupTitle: string) => collapsedGroups.includes(groupTitle);\n\t\t\tconst shouldAddUnread = (room: SubscriptionWithRoom) =>\n\t\t\t\t!(sidebarShowUnread && isCollapsed(CATEGORIES.Unread) && (room.alert || room.unread));\n\n\t\t\tconst incomingCall = new Set();\n\t\t\tconst favorite = new Set();\n\t\t\tconst team = new Set();\n\t\t\tconst omnichannel = new Set();\n\t\t\tconst unread = new Set();\n\t\t\tconst channels = new Set();\n\t\t\tconst direct = new Set();\n\t\t\tconst discussion = new Set();\n\t\t\tconst conversation = new Set();\n\t\t\tconst onHold = new Set();\n\n\t\t\trooms.forEach((room) => {\n\t\t\t\tif (room.archived) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (incomingCalls.find((call) => call.rid === room.rid)) {\n\t\t\t\t\treturn incomingCall.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarShowUnread && (room.alert || room.unread)) {\n\t\t\t\t\treturn unread.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (favoritesEnabled && room.f) {\n\t\t\t\t\treturn shouldAddUnread(room) && favorite.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && room.teamMain) {\n\t\t\t\t\treturn shouldAddUnread(room) && team.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n\t\t\t\t\treturn shouldAddUnread(room) && discussion.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'c' || room.t === 'p') {\n\t\t\t\t\tshouldAddUnread(room) && channels.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l' && room.onHold) {\n\t\t\t\t\treturn showOmnichannel && shouldAddUnread(room) && onHold.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l') {\n\t\t\t\t\treturn showOmnichannel && shouldAddUnread(room) && omnichannel.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'd') {\n\t\t\t\t\tshouldAddUnread(room) && direct.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (shouldAddUnread(room)) {\n\t\t\t\t\tconversation.add(room);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst groups = new Map();\n\t\t\tincomingCall.size && groups.set('Incoming_Calls', incomingCall);\n\n\t\t\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', queue);\n\t\t\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n\t\t\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n\n\t\t\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\n\n\t\t\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n\n\t\t\tsidebarGroupByType && team.size && groups.set('Teams', team);\n\n\t\t\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n\n\t\t\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\n\n\t\t\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n\n\t\t\t!sidebarGroupByType && groups.set('Conversations', conversation);\n\n\t\t\tconst groupsList: TranslationKey[] = [];\n\t\t\tconst roomList: Array<ISubscription & IRoom> = [];\n\n\t\t\tconst flatRoomList = sidebarOrder\n\t\t\t\t.map((key) => {\n\t\t\t\t\tconst group = groups.get(key);\n\t\t\t\t\tif (!group) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\tgroupsList.push(key);\n\t\t\t\t\tif (isCollapsed(key)) {\n\t\t\t\t\t\treturn [key];\n\t\t\t\t\t}\n\n\t\t\t\t\troomList.push(...group);\n\n\t\t\t\t\treturn [key, ...group];\n\t\t\t\t})\n\t\t\t\t.flat();\n\n\t\t\treturn { flatRoomList, groupsCount: getGroupsCount([...flatRoomList]), groupsList, roomList };\n\t\t}, [\n\t\t\trooms,\n\t\t\tshowOmnichannel,\n\t\t\tincomingCalls,\n\t\t\tinquiries.enabled,\n\t\t\tqueue,\n\t\t\tsidebarShowUnread,\n\t\t\tfavoritesEnabled,\n\t\t\tsidebarGroupByType,\n\t\t\tisDiscussionEnabled,\n\t\t\tsidebarOrder,\n\t\t\tcollapsedGroups,\n\t\t]),\n\t\t50,\n\t);\n\n\tconst handleCollapsedGroups = useCallback(\n\t\t(group: string) => {\n\t\t\tif (collapsedGroups.includes(group)) {\n\t\t\t\tsetCollapsedGroups(collapsedGroups.filter((item) => item !== group));\n\t\t\t} else {\n\t\t\t\tsetCollapsedGroups([...collapsedGroups, group]);\n\t\t\t}\n\t\t},\n\t\t[collapsedGroups, setCollapsedGroups],\n\t);\n\n\treturn {\n\t\tflatList: flatRoomList,\n\t\troomList,\n\t\tgroupsCount,\n\t\tgroupsList,\n\t\thandleCollapsedGroups,\n\t\tcollapsedGroups,\n\t};\n};\n"]}}},"code":"module.export({\n  useRoomList: () => useRoomList\n});\nlet useDebouncedValue, useLocalStorage;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useDebouncedValue(v) {\n    useDebouncedValue = v;\n  },\n  useLocalStorage(v) {\n    useLocalStorage = v;\n  }\n}, 0);\nlet useUserPreference, useUserSubscriptions, useSetting;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useUserPreference(v) {\n    useUserPreference = v;\n  },\n  useUserSubscriptions(v) {\n    useUserSubscriptions = v;\n  },\n  useSetting(v) {\n    useSetting = v;\n  }\n}, 1);\nlet useCallback, useMemo;\nmodule.link(\"react\", {\n  useCallback(v) {\n    useCallback = v;\n  },\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 2);\nlet useVideoConfIncomingCalls;\nmodule.link(\"../../contexts/VideoConfContext\", {\n  useVideoConfIncomingCalls(v) {\n    useVideoConfIncomingCalls = v;\n  }\n}, 3);\nlet useOmnichannelEnabled;\nmodule.link(\"../../hooks/omnichannel/useOmnichannelEnabled\", {\n  useOmnichannelEnabled(v) {\n    useOmnichannelEnabled = v;\n  }\n}, 4);\nlet useQueuedInquiries;\nmodule.link(\"../../hooks/omnichannel/useQueuedInquiries\", {\n  useQueuedInquiries(v) {\n    useQueuedInquiries = v;\n  }\n}, 5);\nlet useQueryOptions;\nmodule.link(\"./useQueryOptions\", {\n  useQueryOptions(v) {\n    useQueryOptions = v;\n  }\n}, 6);\nconst query = {\n  open: {\n    $ne: false\n  }\n};\nconst emptyQueue = [];\nconst order = ['Incoming_Calls', 'Incoming_Livechats', 'Open_Livechats', 'On_Hold_Chats', 'Unread', 'Favorites', 'Teams', 'Discussions', 'Channels', 'Direct_Messages', 'Conversations'];\nconst CATEGORIES = {\n  Incoming_Calls: 'Incoming_Calls',\n  Incoming_Livechats: 'Incoming_Livechats',\n  Open_Livechats: 'Open_Livechats',\n  On_Hold_Chats: 'On_Hold_Chats',\n  Unread: 'Unread',\n  Favorites: 'Favorites',\n  Teams: 'Teams',\n  Discussions: 'Discussions',\n  Channels: 'Channels',\n  Direct_Messages: 'Direct_Messages',\n  Conversations: 'Conversations'\n};\nconst getGroupsCount = rooms => {\n  return rooms.reduce((acc, item, index) => {\n    if (typeof item === 'string') {\n      acc.push(index);\n    }\n    return acc;\n  }, []).map((item, index, arr) => (arr[index + 1] ? arr[index + 1] : rooms.length) - item - 1);\n};\nconst useRoomList = () => {\n  var _useUserPreference;\n  const [collapsedGroups, setCollapsedGroups] = useLocalStorage('sidebarGroups', []);\n  const showOmnichannel = useOmnichannelEnabled();\n  const sidebarGroupByType = useUserPreference('sidebarGroupByType');\n  const favoritesEnabled = useUserPreference('sidebarShowFavorites');\n  const sidebarOrder = (_useUserPreference = useUserPreference('sidebarSectionsOrder')) !== null && _useUserPreference !== void 0 ? _useUserPreference : order;\n  const isDiscussionEnabled = useSetting('Discussion_enabled');\n  const sidebarShowUnread = useUserPreference('sidebarShowUnread');\n  const options = useQueryOptions();\n  const rooms = useUserSubscriptions(query, options);\n  const inquiries = useQueuedInquiries();\n  const incomingCalls = useVideoConfIncomingCalls();\n  let queue = emptyQueue;\n  if (inquiries.enabled) {\n    queue = inquiries.queue;\n  }\n  const {\n    flatRoomList,\n    groupsCount,\n    groupsList,\n    roomList\n  } = useDebouncedValue(useMemo(() => {\n    const isCollapsed = groupTitle => collapsedGroups.includes(groupTitle);\n    const shouldAddUnread = room => !(sidebarShowUnread && isCollapsed(CATEGORIES.Unread) && (room.alert || room.unread));\n    const incomingCall = new Set();\n    const favorite = new Set();\n    const team = new Set();\n    const omnichannel = new Set();\n    const unread = new Set();\n    const channels = new Set();\n    const direct = new Set();\n    const discussion = new Set();\n    const conversation = new Set();\n    const onHold = new Set();\n    rooms.forEach(room => {\n      if (room.archived) {\n        return;\n      }\n      if (incomingCalls.find(call => call.rid === room.rid)) {\n        return incomingCall.add(room);\n      }\n      if (sidebarShowUnread && (room.alert || room.unread)) {\n        return unread.add(room);\n      }\n      if (favoritesEnabled && room.f) {\n        return shouldAddUnread(room) && favorite.add(room);\n      }\n      if (sidebarGroupByType && room.teamMain) {\n        return shouldAddUnread(room) && team.add(room);\n      }\n      if (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n        return shouldAddUnread(room) && discussion.add(room);\n      }\n      if (room.t === 'c' || room.t === 'p') {\n        shouldAddUnread(room) && channels.add(room);\n      }\n      if (room.t === 'l' && room.onHold) {\n        return showOmnichannel && shouldAddUnread(room) && onHold.add(room);\n      }\n      if (room.t === 'l') {\n        return showOmnichannel && shouldAddUnread(room) && omnichannel.add(room);\n      }\n      if (room.t === 'd') {\n        shouldAddUnread(room) && direct.add(room);\n      }\n      if (shouldAddUnread(room)) {\n        conversation.add(room);\n      }\n    });\n    const groups = new Map();\n    incomingCall.size && groups.set('Incoming_Calls', incomingCall);\n    showOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', queue);\n    showOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n    showOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n    sidebarShowUnread && unread.size && groups.set('Unread', unread);\n    favoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n    sidebarGroupByType && team.size && groups.set('Teams', team);\n    sidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n    sidebarGroupByType && channels.size && groups.set('Channels', channels);\n    sidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n    !sidebarGroupByType && groups.set('Conversations', conversation);\n    const groupsList = [];\n    const roomList = [];\n    const flatRoomList = sidebarOrder.map(key => {\n      const group = groups.get(key);\n      if (!group) {\n        return [];\n      }\n      groupsList.push(key);\n      if (isCollapsed(key)) {\n        return [key];\n      }\n      roomList.push(...group);\n      return [key, ...group];\n    }).flat();\n    return {\n      flatRoomList,\n      groupsCount: getGroupsCount([...flatRoomList]),\n      groupsList,\n      roomList\n    };\n  }, [rooms, showOmnichannel, incomingCalls, inquiries.enabled, queue, sidebarShowUnread, favoritesEnabled, sidebarGroupByType, isDiscussionEnabled, sidebarOrder, collapsedGroups]), 50);\n  const handleCollapsedGroups = useCallback(group => {\n    if (collapsedGroups.includes(group)) {\n      setCollapsedGroups(collapsedGroups.filter(item => item !== group));\n    } else {\n      setCollapsedGroups([...collapsedGroups, group]);\n    }\n  }, [collapsedGroups, setCollapsedGroups]);\n  return {\n    flatList: flatRoomList,\n    roomList,\n    groupsCount,\n    groupsList,\n    handleCollapsedGroups,\n    collapsedGroups\n  };\n};","map":{"version":3,"names":["module","export","useRoomList","useDebouncedValue","useLocalStorage","link","v","useUserPreference","useUserSubscriptions","useSetting","useCallback","useMemo","useVideoConfIncomingCalls","useOmnichannelEnabled","useQueuedInquiries","useQueryOptions","query","open","$ne","emptyQueue","order","CATEGORIES","Incoming_Calls","Incoming_Livechats","Open_Livechats","On_Hold_Chats","Unread","Favorites","Teams","Discussions","Channels","Direct_Messages","Conversations","getGroupsCount","rooms","reduce","acc","item","index","push","map","arr","length","_useUserPreference","collapsedGroups","setCollapsedGroups","showOmnichannel","sidebarGroupByType","favoritesEnabled","sidebarOrder","isDiscussionEnabled","sidebarShowUnread","options","inquiries","incomingCalls","queue","enabled","flatRoomList","groupsCount","groupsList","roomList","isCollapsed","groupTitle","includes","shouldAddUnread","room","alert","unread","incomingCall","Set","favorite","team","omnichannel","channels","direct","discussion","conversation","onHold","forEach","archived","find","call","rid","add","f","teamMain","prid","t","groups","Map","size","set","key","group","get","flat","handleCollapsedGroups","filter","flatList"],"sources":["client/sidebarv2/hooks/useRoomList.ts"],"sourcesContent":["import type { ILivechatInquiryRecord, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { useDebouncedValue, useLocalStorage } from '@rocket.chat/fuselage-hooks';\nimport type { TranslationKey, SubscriptionWithRoom } from '@rocket.chat/ui-contexts';\nimport { useUserPreference, useUserSubscriptions, useSetting } from '@rocket.chat/ui-contexts';\nimport { useCallback, useMemo } from 'react';\n\nimport { useVideoConfIncomingCalls } from '../../contexts/VideoConfContext';\nimport { useOmnichannelEnabled } from '../../hooks/omnichannel/useOmnichannelEnabled';\nimport { useQueuedInquiries } from '../../hooks/omnichannel/useQueuedInquiries';\nimport { useQueryOptions } from './useQueryOptions';\n\nconst query = { open: { $ne: false } };\n\nconst emptyQueue: ILivechatInquiryRecord[] = [];\n\nconst order = [\n\t'Incoming_Calls',\n\t'Incoming_Livechats',\n\t'Open_Livechats',\n\t'On_Hold_Chats',\n\t'Unread',\n\t'Favorites',\n\t'Teams',\n\t'Discussions',\n\t'Channels',\n\t'Direct_Messages',\n\t'Conversations',\n] as const;\n\nconst CATEGORIES = {\n\tIncoming_Calls: 'Incoming_Calls',\n\tIncoming_Livechats: 'Incoming_Livechats',\n\tOpen_Livechats: 'Open_Livechats',\n\tOn_Hold_Chats: 'On_Hold_Chats',\n\tUnread: 'Unread',\n\tFavorites: 'Favorites',\n\tTeams: 'Teams',\n\tDiscussions: 'Discussions',\n\tChannels: 'Channels',\n\tDirect_Messages: 'Direct_Messages',\n\tConversations: 'Conversations',\n};\n\nconst getGroupsCount = (rooms: Array<ISubscription & IRoom>) => {\n\treturn rooms\n\t\t.reduce((acc, item, index) => {\n\t\t\tif (typeof item === 'string') {\n\t\t\t\tacc.push(index);\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, [] as number[])\n\t\t.map((item, index, arr) => (arr[index + 1] ? arr[index + 1] : rooms.length) - item - 1);\n};\n\nexport const useRoomList = (): {\n\tflatList: Array<ISubscription & IRoom>;\n\troomList: Array<ISubscription & IRoom>;\n\tgroupsCount: number[];\n\tgroupsList: TranslationKey[];\n\thandleCollapsedGroups: (groupTitle: string) => void;\n\tcollapsedGroups: string[];\n} => {\n\tconst [collapsedGroups, setCollapsedGroups] = useLocalStorage<string[]>('sidebarGroups', []);\n\n\tconst showOmnichannel = useOmnichannelEnabled();\n\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\n\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\n\tconst sidebarOrder = useUserPreference<typeof order>('sidebarSectionsOrder') ?? order;\n\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\n\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\n\n\tconst options = useQueryOptions();\n\n\tconst rooms = useUserSubscriptions(query, options);\n\n\tconst inquiries = useQueuedInquiries();\n\n\tconst incomingCalls = useVideoConfIncomingCalls();\n\n\tlet queue = emptyQueue;\n\tif (inquiries.enabled) {\n\t\tqueue = inquiries.queue;\n\t}\n\n\tconst { flatRoomList, groupsCount, groupsList, roomList } = useDebouncedValue(\n\t\tuseMemo(() => {\n\t\t\tconst isCollapsed = (groupTitle: string) => collapsedGroups.includes(groupTitle);\n\t\t\tconst shouldAddUnread = (room: SubscriptionWithRoom) =>\n\t\t\t\t!(sidebarShowUnread && isCollapsed(CATEGORIES.Unread) && (room.alert || room.unread));\n\n\t\t\tconst incomingCall = new Set();\n\t\t\tconst favorite = new Set();\n\t\t\tconst team = new Set();\n\t\t\tconst omnichannel = new Set();\n\t\t\tconst unread = new Set();\n\t\t\tconst channels = new Set();\n\t\t\tconst direct = new Set();\n\t\t\tconst discussion = new Set();\n\t\t\tconst conversation = new Set();\n\t\t\tconst onHold = new Set();\n\n\t\t\trooms.forEach((room) => {\n\t\t\t\tif (room.archived) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (incomingCalls.find((call) => call.rid === room.rid)) {\n\t\t\t\t\treturn incomingCall.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarShowUnread && (room.alert || room.unread)) {\n\t\t\t\t\treturn unread.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (favoritesEnabled && room.f) {\n\t\t\t\t\treturn shouldAddUnread(room) && favorite.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && room.teamMain) {\n\t\t\t\t\treturn shouldAddUnread(room) && team.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n\t\t\t\t\treturn shouldAddUnread(room) && discussion.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'c' || room.t === 'p') {\n\t\t\t\t\tshouldAddUnread(room) && channels.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l' && room.onHold) {\n\t\t\t\t\treturn showOmnichannel && shouldAddUnread(room) && onHold.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l') {\n\t\t\t\t\treturn showOmnichannel && shouldAddUnread(room) && omnichannel.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'd') {\n\t\t\t\t\tshouldAddUnread(room) && direct.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (shouldAddUnread(room)) {\n\t\t\t\t\tconversation.add(room);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst groups = new Map();\n\t\t\tincomingCall.size && groups.set('Incoming_Calls', incomingCall);\n\n\t\t\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', queue);\n\t\t\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n\t\t\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n\n\t\t\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\n\n\t\t\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n\n\t\t\tsidebarGroupByType && team.size && groups.set('Teams', team);\n\n\t\t\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n\n\t\t\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\n\n\t\t\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n\n\t\t\t!sidebarGroupByType && groups.set('Conversations', conversation);\n\n\t\t\tconst groupsList: TranslationKey[] = [];\n\t\t\tconst roomList: Array<ISubscription & IRoom> = [];\n\n\t\t\tconst flatRoomList = sidebarOrder\n\t\t\t\t.map((key) => {\n\t\t\t\t\tconst group = groups.get(key);\n\t\t\t\t\tif (!group) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\tgroupsList.push(key);\n\t\t\t\t\tif (isCollapsed(key)) {\n\t\t\t\t\t\treturn [key];\n\t\t\t\t\t}\n\n\t\t\t\t\troomList.push(...group);\n\n\t\t\t\t\treturn [key, ...group];\n\t\t\t\t})\n\t\t\t\t.flat();\n\n\t\t\treturn { flatRoomList, groupsCount: getGroupsCount([...flatRoomList]), groupsList, roomList };\n\t\t}, [\n\t\t\trooms,\n\t\t\tshowOmnichannel,\n\t\t\tincomingCalls,\n\t\t\tinquiries.enabled,\n\t\t\tqueue,\n\t\t\tsidebarShowUnread,\n\t\t\tfavoritesEnabled,\n\t\t\tsidebarGroupByType,\n\t\t\tisDiscussionEnabled,\n\t\t\tsidebarOrder,\n\t\t\tcollapsedGroups,\n\t\t]),\n\t\t50,\n\t);\n\n\tconst handleCollapsedGroups = useCallback(\n\t\t(group: string) => {\n\t\t\tif (collapsedGroups.includes(group)) {\n\t\t\t\tsetCollapsedGroups(collapsedGroups.filter((item) => item !== group));\n\t\t\t} else {\n\t\t\t\tsetCollapsedGroups([...collapsedGroups, group]);\n\t\t\t}\n\t\t},\n\t\t[collapsedGroups, setCollapsedGroups],\n\t);\n\n\treturn {\n\t\tflatList: flatRoomList,\n\t\troomList,\n\t\tgroupsCount,\n\t\tgroupsList,\n\t\thandleCollapsedGroups,\n\t\tcollapsedGroups,\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"7324a393f3c777e07d5108ec9613574d755fc38f"}
