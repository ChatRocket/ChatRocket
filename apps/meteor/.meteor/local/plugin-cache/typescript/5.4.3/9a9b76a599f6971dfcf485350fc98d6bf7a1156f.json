{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/cloud/server/functions/buildRegistrationData.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/cloud/server/functions/buildRegistrationData.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/cloud/server/functions/buildRegistrationData.ts","inputSourceMap":{"version":3,"file":"app/cloud/server/functions/buildRegistrationData.ts","sourceRoot":"","sources":["app/cloud/server/functions/buildRegistrationData.ts"],"names":[],"mappings":"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","sourcesContent":["import { LivechatRooms, Statistics, Users } from '@rocket.chat/models';\nimport moment from 'moment';\n\nimport { settings } from '../../../settings/server';\nimport { statistics } from '../../../statistics/server';\nimport { Info } from '../../../utils/rocketchat.info';\nimport { LICENSE_VERSION } from '../license';\n\nexport type WorkspaceRegistrationData<T> = {\n\tuniqueId: string;\n\tdeploymentFingerprintHash: string;\n\tdeploymentFingerprintVerified: boolean;\n\tworkspaceId: string;\n\taddress: string;\n\tcontactName: string;\n\tcontactEmail: T;\n\tseats: number;\n\n\torganizationType: string;\n\tindustry: string;\n\torgSize: string;\n\tcountry: string;\n\tlanguage: string;\n\tallowMarketing: string;\n\taccountName: string;\n\tagreePrivacyTerms: string;\n\twebsite: string;\n\tsiteName: string;\n\tworkspaceType: unknown;\n\tdeploymentMethod: string;\n\tdeploymentPlatform: string;\n\tversion: string;\n\tlicenseVersion: number;\n\tlicense?: string;\n\tenterpriseReady: boolean;\n\tsetupComplete: boolean;\n\tconnectionDisable: boolean;\n\tnpsEnabled: string;\n\t// TODO: Evaluate naming\n\tMAC: number;\n\t// activeContactsBillingMonth: number;\n\t// activeContactsYesterday: number;\n\tstatsToken?: string;\n};\n\nexport async function buildWorkspaceRegistrationData<T extends string | undefined>(contactEmail: T): Promise<WorkspaceRegistrationData<T>> {\n\tconst stats = (await Statistics.findLast()) || (await statistics.get());\n\n\tconst address = settings.get<string>('Site_Url');\n\tconst siteName = settings.get<string>('Site_Name');\n\tconst workspaceId = settings.get<string>('Cloud_Workspace_Id');\n\tconst allowMarketing = settings.get<string>('Allow_Marketing_Emails');\n\tconst accountName = settings.get<string>('Organization_Name');\n\tconst website = settings.get<string>('Website');\n\tconst npsEnabled = settings.get<string>('NPS_survey_enabled');\n\tconst agreePrivacyTerms = settings.get<string>('Cloud_Service_Agree_PrivacyTerms');\n\tconst setupWizardState = settings.get<string>('Show_Setup_Wizard');\n\tconst deploymentFingerprintHash = settings.get<string>('Deployment_FingerPrint_Hash');\n\tconst deploymentFingerprintVerified = settings.get<boolean>('Deployment_FingerPrint_Verified');\n\n\tconst firstUser = await Users.getOldest({ projection: { name: 1, emails: 1 } });\n\tconst contactName = firstUser?.name || '';\n\n\tconst country = settings.get<string>('Country');\n\tconst language = settings.get<string>('Language');\n\tconst organizationType = settings.get<string>('Organization_Type');\n\tconst industry = settings.get<string>('Industry');\n\tconst orgSize = settings.get<string>('Size');\n\tconst workspaceType = settings.get<string>('Server_Type');\n\n\tconst seats = await Users.getActiveLocalUserCount();\n\tconst [macs] = await LivechatRooms.getMACStatisticsForPeriod(moment.utc().format('YYYY-MM'));\n\n\tconst license = settings.get<string>('Enterprise_License');\n\n\treturn {\n\t\tuniqueId: stats.uniqueId,\n\t\tdeploymentFingerprintHash,\n\t\tdeploymentFingerprintVerified,\n\t\tworkspaceId,\n\t\taddress,\n\t\tcontactName,\n\t\tcontactEmail,\n\t\tseats,\n\t\tallowMarketing,\n\t\taccountName,\n\t\torganizationType: String(organizationType),\n\t\tindustry: String(industry),\n\t\torgSize: String(orgSize),\n\t\tcountry: String(country),\n\t\tlanguage: String(language),\n\t\tagreePrivacyTerms,\n\t\twebsite,\n\t\tsiteName,\n\t\tworkspaceType: String(workspaceType),\n\t\tdeploymentMethod: stats.deploy.method,\n\t\tdeploymentPlatform: stats.deploy.platform,\n\t\tversion: stats.version ?? Info.version,\n\t\tlicenseVersion: LICENSE_VERSION,\n\t\t...(license && { license }),\n\t\tenterpriseReady: true,\n\t\tsetupComplete: setupWizardState === 'completed',\n\t\tconnectionDisable: false,\n\t\tnpsEnabled,\n\t\tMAC: macs?.contactsCount ?? 0,\n\t\t// activeContactsBillingMonth: stats.omnichannelContactsBySource.contactsCount,\n\t\t// activeContactsYesterday: stats.uniqueContactsOfYesterday.contactsCount,\n\t\tstatsToken: stats.statsToken,\n\t};\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/cloud/server/functions/buildRegistrationData.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/cloud/server/functions/buildRegistrationData.ts","inputSourceMap":{"version":3,"file":"app/cloud/server/functions/buildRegistrationData.ts","sourceRoot":"","sources":["app/cloud/server/functions/buildRegistrationData.ts"],"names":[],"mappings":"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","sourcesContent":["import { LivechatRooms, Statistics, Users } from '@rocket.chat/models';\nimport moment from 'moment';\n\nimport { settings } from '../../../settings/server';\nimport { statistics } from '../../../statistics/server';\nimport { Info } from '../../../utils/rocketchat.info';\nimport { LICENSE_VERSION } from '../license';\n\nexport type WorkspaceRegistrationData<T> = {\n\tuniqueId: string;\n\tdeploymentFingerprintHash: string;\n\tdeploymentFingerprintVerified: boolean;\n\tworkspaceId: string;\n\taddress: string;\n\tcontactName: string;\n\tcontactEmail: T;\n\tseats: number;\n\n\torganizationType: string;\n\tindustry: string;\n\torgSize: string;\n\tcountry: string;\n\tlanguage: string;\n\tallowMarketing: string;\n\taccountName: string;\n\tagreePrivacyTerms: string;\n\twebsite: string;\n\tsiteName: string;\n\tworkspaceType: unknown;\n\tdeploymentMethod: string;\n\tdeploymentPlatform: string;\n\tversion: string;\n\tlicenseVersion: number;\n\tlicense?: string;\n\tenterpriseReady: boolean;\n\tsetupComplete: boolean;\n\tconnectionDisable: boolean;\n\tnpsEnabled: string;\n\t// TODO: Evaluate naming\n\tMAC: number;\n\t// activeContactsBillingMonth: number;\n\t// activeContactsYesterday: number;\n\tstatsToken?: string;\n};\n\nexport async function buildWorkspaceRegistrationData<T extends string | undefined>(contactEmail: T): Promise<WorkspaceRegistrationData<T>> {\n\tconst stats = (await Statistics.findLast()) || (await statistics.get());\n\n\tconst address = settings.get<string>('Site_Url');\n\tconst siteName = settings.get<string>('Site_Name');\n\tconst workspaceId = settings.get<string>('Cloud_Workspace_Id');\n\tconst allowMarketing = settings.get<string>('Allow_Marketing_Emails');\n\tconst accountName = settings.get<string>('Organization_Name');\n\tconst website = settings.get<string>('Website');\n\tconst npsEnabled = settings.get<string>('NPS_survey_enabled');\n\tconst agreePrivacyTerms = settings.get<string>('Cloud_Service_Agree_PrivacyTerms');\n\tconst setupWizardState = settings.get<string>('Show_Setup_Wizard');\n\tconst deploymentFingerprintHash = settings.get<string>('Deployment_FingerPrint_Hash');\n\tconst deploymentFingerprintVerified = settings.get<boolean>('Deployment_FingerPrint_Verified');\n\n\tconst firstUser = await Users.getOldest({ projection: { name: 1, emails: 1 } });\n\tconst contactName = firstUser?.name || '';\n\n\tconst country = settings.get<string>('Country');\n\tconst language = settings.get<string>('Language');\n\tconst organizationType = settings.get<string>('Organization_Type');\n\tconst industry = settings.get<string>('Industry');\n\tconst orgSize = settings.get<string>('Size');\n\tconst workspaceType = settings.get<string>('Server_Type');\n\n\tconst seats = await Users.getActiveLocalUserCount();\n\tconst [macs] = await LivechatRooms.getMACStatisticsForPeriod(moment.utc().format('YYYY-MM'));\n\n\tconst license = settings.get<string>('Enterprise_License');\n\n\treturn {\n\t\tuniqueId: stats.uniqueId,\n\t\tdeploymentFingerprintHash,\n\t\tdeploymentFingerprintVerified,\n\t\tworkspaceId,\n\t\taddress,\n\t\tcontactName,\n\t\tcontactEmail,\n\t\tseats,\n\t\tallowMarketing,\n\t\taccountName,\n\t\torganizationType: String(organizationType),\n\t\tindustry: String(industry),\n\t\torgSize: String(orgSize),\n\t\tcountry: String(country),\n\t\tlanguage: String(language),\n\t\tagreePrivacyTerms,\n\t\twebsite,\n\t\tsiteName,\n\t\tworkspaceType: String(workspaceType),\n\t\tdeploymentMethod: stats.deploy.method,\n\t\tdeploymentPlatform: stats.deploy.platform,\n\t\tversion: stats.version ?? Info.version,\n\t\tlicenseVersion: LICENSE_VERSION,\n\t\t...(license && { license }),\n\t\tenterpriseReady: true,\n\t\tsetupComplete: setupWizardState === 'completed',\n\t\tconnectionDisable: false,\n\t\tnpsEnabled,\n\t\tMAC: macs?.contactsCount ?? 0,\n\t\t// activeContactsBillingMonth: stats.omnichannelContactsBySource.contactsCount,\n\t\t// activeContactsYesterday: stats.uniqueContactsOfYesterday.contactsCount,\n\t\tstatsToken: stats.statsToken,\n\t};\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      buildWorkspaceRegistrationData: () => buildWorkspaceRegistrationData\n    });\n    let LivechatRooms, Statistics, Users;\n    module.link(\"@rocket.chat/models\", {\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      },\n      Statistics(v) {\n        Statistics = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let moment;\n    module.link(\"moment\", {\n      default(v) {\n        moment = v;\n      }\n    }, 1);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 2);\n    let statistics;\n    module.link(\"../../../statistics/server\", {\n      statistics(v) {\n        statistics = v;\n      }\n    }, 3);\n    let Info;\n    module.link(\"../../../utils/rocketchat.info\", {\n      Info(v) {\n        Info = v;\n      }\n    }, 4);\n    let LICENSE_VERSION;\n    module.link(\"../license\", {\n      LICENSE_VERSION(v) {\n        LICENSE_VERSION = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function buildWorkspaceRegistrationData(contactEmail) {\n      var _stats$version, _macs$contactsCount;\n      const stats = (await Statistics.findLast()) || (await statistics.get());\n      const address = settings.get('Site_Url');\n      const siteName = settings.get('Site_Name');\n      const workspaceId = settings.get('Cloud_Workspace_Id');\n      const allowMarketing = settings.get('Allow_Marketing_Emails');\n      const accountName = settings.get('Organization_Name');\n      const website = settings.get('Website');\n      const npsEnabled = settings.get('NPS_survey_enabled');\n      const agreePrivacyTerms = settings.get('Cloud_Service_Agree_PrivacyTerms');\n      const setupWizardState = settings.get('Show_Setup_Wizard');\n      const deploymentFingerprintHash = settings.get('Deployment_FingerPrint_Hash');\n      const deploymentFingerprintVerified = settings.get('Deployment_FingerPrint_Verified');\n      const firstUser = await Users.getOldest({\n        projection: {\n          name: 1,\n          emails: 1\n        }\n      });\n      const contactName = (firstUser === null || firstUser === void 0 ? void 0 : firstUser.name) || '';\n      const country = settings.get('Country');\n      const language = settings.get('Language');\n      const organizationType = settings.get('Organization_Type');\n      const industry = settings.get('Industry');\n      const orgSize = settings.get('Size');\n      const workspaceType = settings.get('Server_Type');\n      const seats = await Users.getActiveLocalUserCount();\n      const [macs] = await LivechatRooms.getMACStatisticsForPeriod(moment.utc().format('YYYY-MM'));\n      const license = settings.get('Enterprise_License');\n      return _objectSpread(_objectSpread({\n        uniqueId: stats.uniqueId,\n        deploymentFingerprintHash,\n        deploymentFingerprintVerified,\n        workspaceId,\n        address,\n        contactName,\n        contactEmail,\n        seats,\n        allowMarketing,\n        accountName,\n        organizationType: String(organizationType),\n        industry: String(industry),\n        orgSize: String(orgSize),\n        country: String(country),\n        language: String(language),\n        agreePrivacyTerms,\n        website,\n        siteName,\n        workspaceType: String(workspaceType),\n        deploymentMethod: stats.deploy.method,\n        deploymentPlatform: stats.deploy.platform,\n        version: (_stats$version = stats.version) !== null && _stats$version !== void 0 ? _stats$version : Info.version,\n        licenseVersion: LICENSE_VERSION\n      }, license && {\n        license\n      }), {}, {\n        enterpriseReady: true,\n        setupComplete: setupWizardState === 'completed',\n        connectionDisable: false,\n        npsEnabled,\n        MAC: (_macs$contactsCount = macs === null || macs === void 0 ? void 0 : macs.contactsCount) !== null && _macs$contactsCount !== void 0 ? _macs$contactsCount : 0,\n        // activeContactsBillingMonth: stats.omnichannelContactsBySource.contactsCount,\n        // activeContactsYesterday: stats.uniqueContactsOfYesterday.contactsCount,\n        statsToken: stats.statsToken\n      });\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","buildWorkspaceRegistrationData","LivechatRooms","Statistics","Users","moment","settings","statistics","Info","LICENSE_VERSION","__reifyWaitForDeps__","contactEmail","_stats$version","_macs$contactsCount","stats","findLast","get","address","siteName","workspaceId","allowMarketing","accountName","website","npsEnabled","agreePrivacyTerms","setupWizardState","deploymentFingerprintHash","deploymentFingerprintVerified","firstUser","getOldest","projection","name","emails","contactName","country","language","organizationType","industry","orgSize","workspaceType","seats","getActiveLocalUserCount","macs","getMACStatisticsForPeriod","utc","format","license","uniqueId","String","deploymentMethod","deploy","method","deploymentPlatform","platform","version","licenseVersion","enterpriseReady","setupComplete","connectionDisable","MAC","contactsCount","statsToken","__reify_async_result__","_reifyError","self","async"],"sources":["app/cloud/server/functions/buildRegistrationData.ts"],"sourcesContent":["import { LivechatRooms, Statistics, Users } from '@rocket.chat/models';\nimport moment from 'moment';\n\nimport { settings } from '../../../settings/server';\nimport { statistics } from '../../../statistics/server';\nimport { Info } from '../../../utils/rocketchat.info';\nimport { LICENSE_VERSION } from '../license';\n\nexport type WorkspaceRegistrationData<T> = {\n\tuniqueId: string;\n\tdeploymentFingerprintHash: string;\n\tdeploymentFingerprintVerified: boolean;\n\tworkspaceId: string;\n\taddress: string;\n\tcontactName: string;\n\tcontactEmail: T;\n\tseats: number;\n\n\torganizationType: string;\n\tindustry: string;\n\torgSize: string;\n\tcountry: string;\n\tlanguage: string;\n\tallowMarketing: string;\n\taccountName: string;\n\tagreePrivacyTerms: string;\n\twebsite: string;\n\tsiteName: string;\n\tworkspaceType: unknown;\n\tdeploymentMethod: string;\n\tdeploymentPlatform: string;\n\tversion: string;\n\tlicenseVersion: number;\n\tlicense?: string;\n\tenterpriseReady: boolean;\n\tsetupComplete: boolean;\n\tconnectionDisable: boolean;\n\tnpsEnabled: string;\n\t// TODO: Evaluate naming\n\tMAC: number;\n\t// activeContactsBillingMonth: number;\n\t// activeContactsYesterday: number;\n\tstatsToken?: string;\n};\n\nexport async function buildWorkspaceRegistrationData<T extends string | undefined>(contactEmail: T): Promise<WorkspaceRegistrationData<T>> {\n\tconst stats = (await Statistics.findLast()) || (await statistics.get());\n\n\tconst address = settings.get<string>('Site_Url');\n\tconst siteName = settings.get<string>('Site_Name');\n\tconst workspaceId = settings.get<string>('Cloud_Workspace_Id');\n\tconst allowMarketing = settings.get<string>('Allow_Marketing_Emails');\n\tconst accountName = settings.get<string>('Organization_Name');\n\tconst website = settings.get<string>('Website');\n\tconst npsEnabled = settings.get<string>('NPS_survey_enabled');\n\tconst agreePrivacyTerms = settings.get<string>('Cloud_Service_Agree_PrivacyTerms');\n\tconst setupWizardState = settings.get<string>('Show_Setup_Wizard');\n\tconst deploymentFingerprintHash = settings.get<string>('Deployment_FingerPrint_Hash');\n\tconst deploymentFingerprintVerified = settings.get<boolean>('Deployment_FingerPrint_Verified');\n\n\tconst firstUser = await Users.getOldest({ projection: { name: 1, emails: 1 } });\n\tconst contactName = firstUser?.name || '';\n\n\tconst country = settings.get<string>('Country');\n\tconst language = settings.get<string>('Language');\n\tconst organizationType = settings.get<string>('Organization_Type');\n\tconst industry = settings.get<string>('Industry');\n\tconst orgSize = settings.get<string>('Size');\n\tconst workspaceType = settings.get<string>('Server_Type');\n\n\tconst seats = await Users.getActiveLocalUserCount();\n\tconst [macs] = await LivechatRooms.getMACStatisticsForPeriod(moment.utc().format('YYYY-MM'));\n\n\tconst license = settings.get<string>('Enterprise_License');\n\n\treturn {\n\t\tuniqueId: stats.uniqueId,\n\t\tdeploymentFingerprintHash,\n\t\tdeploymentFingerprintVerified,\n\t\tworkspaceId,\n\t\taddress,\n\t\tcontactName,\n\t\tcontactEmail,\n\t\tseats,\n\t\tallowMarketing,\n\t\taccountName,\n\t\torganizationType: String(organizationType),\n\t\tindustry: String(industry),\n\t\torgSize: String(orgSize),\n\t\tcountry: String(country),\n\t\tlanguage: String(language),\n\t\tagreePrivacyTerms,\n\t\twebsite,\n\t\tsiteName,\n\t\tworkspaceType: String(workspaceType),\n\t\tdeploymentMethod: stats.deploy.method,\n\t\tdeploymentPlatform: stats.deploy.platform,\n\t\tversion: stats.version ?? Info.version,\n\t\tlicenseVersion: LICENSE_VERSION,\n\t\t...(license && { license }),\n\t\tenterpriseReady: true,\n\t\tsetupComplete: setupWizardState === 'completed',\n\t\tconnectionDisable: false,\n\t\tnpsEnabled,\n\t\tMAC: macs?.contactsCount ?? 0,\n\t\t// activeContactsBillingMonth: stats.omnichannelContactsBySource.contactsCount,\n\t\t// activeContactsYesterday: stats.uniqueContactsOfYesterday.contactsCount,\n\t\tstatsToken: stats.statsToken,\n\t};\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"9a9b76a599f6971dfcf485350fc98d6bf7a1156f"}
