{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/room/service.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/room/service.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/room/service.ts","inputSourceMap":{"version":3,"file":"server/services/room/service.ts","sourceRoot":"","sources":["server/services/room/service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oBAAoB,EAAE,aAAa,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AAE9F,OAAO,EAAwC,kBAAkB,EAAE,MAAM,2BAA2B,CAAC;AACrG,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAEnD,OAAO,EAAE,aAAa,EAAE,MAAM,8DAA8D,CAAC;AAC7F,OAAO,EAAE,aAAa,EAAE,MAAM,iDAAiD,CAAC;AAChF,OAAO,EAAE,UAAU,EAAE,MAAM,8CAA8C,CAAC,CAAC,0BAA0B;AACrG,OAAO,EAAE,kBAAkB,EAAE,MAAM,sDAAsD,CAAC;AAC1F,OAAO,EAAE,gBAAgB,EAAE,MAAM,gDAAgD,CAAC;AAClF,OAAO,EAAE,iBAAiB,EAAE,MAAM,qCAAqC,CAAC;AACxE,OAAO,EAAE,eAAe,EAAE,MAAM,iCAAiC,CAAC;AAClE,OAAO,EAAE,mBAAmB,EAAE,MAAM,mCAAmC,CAAC;AACxE,OAAO,EAAE,iBAAiB,EAAE,MAAM,iCAAiC,CAAC;AAEpE,MAAM,OAAO,WAAY,SAAQ,oBAAoB;IAC1C,IAAI,GAAG,MAAM,CAAC;IAExB,KAAK,CAAC,MAAM,CAAC,GAAW,EAAE,MAAyB;QAClD,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,GAAG,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,MAAM,CAAC;QAErF,MAAM,aAAa,GAAG,MAAM,aAAa,CAAC,aAAa,CAAC,GAAG,EAAE,UAAU,IAAI,EAAE,CAAC,CAAC;QAC/E,IAAI,CAAC,aAAa,EAAE,CAAC;YACpB,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QAClC,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACnC,CAAC;QAED,+DAA+D;QAC/D,OAAO,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,CAAqB,CAAC;IAClH,CAAC;IAED,KAAK,CAAC,mBAAmB,CAAC,EAAE,EAAE,EAAE,IAAI,EAAgC;QACnE,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;YAC5C,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC;YACtD,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;SACnD,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,EAAE,QAAQ,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpC,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;QACvC,CAAC;QACD,OAAO,IAAI,CAAC,oCAAoC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;IACnF,CAAC;IAED,KAAK,CAAC,oCAAoC,CAAC,OAAiB,EAAE,SAAiB;QAC9E,OAAO,mBAAmB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAChD,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,GAAW,EAAE,GAAW;QACvC,MAAM,aAAa,GAAG,MAAM,aAAa,CAAC,aAAa,CAAC,GAAG,EAAE,yBAAyB,EAAE,GAAG,CAAC,CAAC;QAC7F,IAAI,CAAC,aAAa,EAAE,CAAC;YACpB,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QAClC,CAAC;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IAED,KAAK,CAAC,aAAa,CAClB,MAAc,EACd,IAAiC,EACjC,OAAyC,EACzC,OAGC;QAED,OAAO,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,MAAc,EAAE,IAAW,EAAE,OAA2B;QAChF,OAAO,kBAAkB,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAClD,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,WAAmB,EAAE,MAAM,GAAG,EAAE,EAAE,UAAyC,EAAE;QACnG,OAAO,gBAAgB,CAAC,WAAW,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,aAAa,CAClB,MAAc,EACd,SAA6B,EAC7B,IAGC,EACD,WAAW,GAAG,IAAI;QAElB,MAAM,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,IAA0C;QAC5D,OAAO,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAW,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAC3F,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAgE;QAChG,IAAI,CAAC,CAAC,MAAM,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,IAAI,EAAE,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YACnH,MAAM,IAAI,WAAW,CAAC,mBAAmB,EAAE,aAAa,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;QACnF,CAAC;QAED,IAAI,CAAC,CAAC,MAAM,aAAa,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC;YACtD,MAAM,IAAI,WAAW,CAAC,mBAAmB,EAAE,aAAa,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;QACnF,CAAC;QAED,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,wBAAwB,CAAC,CAAC,EAAE,CAAC;YAC1G,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACf,MAAM,IAAI,WAAW,CAAC,qBAAqB,EAAE,eAAe,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;YACvF,CAAC;YAED,MAAM,iBAAiB,GAAG,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,sBAAsB,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE;gBACnF,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE;aACtB,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACxB,MAAM,IAAI,WAAW,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;YACrF,CAAC;QACF,CAAC;QAED,OAAO,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,IAAW;QAC5B,iBAAiB,CAAC,sCAAsC,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,IAAW;QAClC,iBAAiB,CAAC,sCAAsC,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,IAAW;QACjC,iBAAiB,CAAC,sCAAsC,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,IAAW;QAClC,iBAAiB,CAAC,sCAAsC,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC;CACD","sourcesContent":["import { ServiceClassInternal, Authorization, MeteorError } from '@rocket.chat/core-services';\nimport type { ICreateRoomParams, IRoomService } from '@rocket.chat/core-services';\nimport { type AtLeast, type IRoom, type IUser, isRoomWithJoinCode } from '@rocket.chat/core-typings';\nimport { Rooms, Users } from '@rocket.chat/models';\n\nimport { saveRoomTopic } from '../../../app/channel-settings/server/functions/saveRoomTopic';\nimport { addUserToRoom } from '../../../app/lib/server/functions/addUserToRoom';\nimport { createRoom } from '../../../app/lib/server/functions/createRoom'; // TODO remove this import\nimport { removeUserFromRoom } from '../../../app/lib/server/functions/removeUserFromRoom';\nimport { getValidRoomName } from '../../../app/utils/server/lib/getValidRoomName';\nimport { RoomMemberActions } from '../../../definition/IRoomTypeConfig';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\nimport { createDirectMessage } from '../../methods/createDirectMessage';\nimport { FederationActions } from './hooks/BeforeFederationActions';\n\nexport class RoomService extends ServiceClassInternal implements IRoomService {\n\tprotected name = 'room';\n\n\tasync create(uid: string, params: ICreateRoomParams): Promise<IRoom> {\n\t\tconst { type, name, members = [], readOnly, extraData, options, sidepanel } = params;\n\n\t\tconst hasPermission = await Authorization.hasPermission(uid, `create-${type}`);\n\t\tif (!hasPermission) {\n\t\t\tthrow new Error('no-permission');\n\t\t}\n\n\t\tconst user = await Users.findOneById(uid);\n\t\tif (!user?.username) {\n\t\t\tthrow new Error('User not found');\n\t\t}\n\n\t\t// TODO convert `createRoom` function to \"raw\" and move to here\n\t\treturn createRoom(type, name, user, members, false, readOnly, extraData, options, sidepanel) as unknown as IRoom;\n\t}\n\n\tasync createDirectMessage({ to, from }: { to: string; from: string }): Promise<{ rid: string }> {\n\t\tconst [toUser, fromUser] = await Promise.all([\n\t\t\tUsers.findOneById(to, { projection: { username: 1 } }),\n\t\t\tUsers.findOneById(from, { projection: { _id: 1 } }),\n\t\t]);\n\n\t\tif (!toUser?.username || !fromUser) {\n\t\t\tthrow new Error('error-invalid-user');\n\t\t}\n\t\treturn this.createDirectMessageWithMultipleUsers([toUser.username], fromUser._id);\n\t}\n\n\tasync createDirectMessageWithMultipleUsers(members: string[], creatorId: string): Promise<{ rid: string }> {\n\t\treturn createDirectMessage(members, creatorId);\n\t}\n\n\tasync addMember(uid: string, rid: string): Promise<boolean> {\n\t\tconst hasPermission = await Authorization.hasPermission(uid, 'add-user-to-joined-room', rid);\n\t\tif (!hasPermission) {\n\t\t\tthrow new Error('no-permission');\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync addUserToRoom(\n\t\troomId: string,\n\t\tuser: Pick<IUser, '_id'> | string,\n\t\tinviter?: Pick<IUser, '_id' | 'username'>,\n\t\toptions?: {\n\t\t\tskipSystemMessage?: boolean;\n\t\t\tskipAlertSound?: boolean;\n\t\t},\n\t): Promise<boolean | undefined> {\n\t\treturn addUserToRoom(roomId, user, inviter, options);\n\t}\n\n\tasync removeUserFromRoom(roomId: string, user: IUser, options?: { byUser: IUser }): Promise<void> {\n\t\treturn removeUserFromRoom(roomId, user, options);\n\t}\n\n\tasync getValidRoomName(displayName: string, roomId = '', options: { allowDuplicates?: boolean } = {}): Promise<string> {\n\t\treturn getValidRoomName(displayName, roomId, options);\n\t}\n\n\tasync saveRoomTopic(\n\t\troomId: string,\n\t\troomTopic: string | undefined,\n\t\tuser: {\n\t\t\tusername: string;\n\t\t\t_id: string;\n\t\t},\n\t\tsendMessage = true,\n\t): Promise<void> {\n\t\tawait saveRoomTopic(roomId, roomTopic, user, sendMessage);\n\t}\n\n\tasync getRouteLink(room: AtLeast<IRoom, '_id' | 't' | 'name'>): Promise<string | boolean> {\n\t\treturn roomCoordinator.getRouteLink(room.t as string, { rid: room._id, name: room.name });\n\t}\n\n\t/**\n\t * Method called by users to join a room.\n\t */\n\tasync join({ room, user, joinCode }: { room: IRoom; user: Pick<IUser, '_id'>; joinCode?: string }) {\n\t\tif (!(await roomCoordinator.getRoomDirectives(room.t)?.allowMemberAction(room, RoomMemberActions.JOIN, user._id))) {\n\t\t\tthrow new MeteorError('error-not-allowed', 'Not allowed', { method: 'joinRoom' });\n\t\t}\n\n\t\tif (!(await Authorization.canAccessRoom(room, user))) {\n\t\t\tthrow new MeteorError('error-not-allowed', 'Not allowed', { method: 'joinRoom' });\n\t\t}\n\n\t\tif (isRoomWithJoinCode(room) && !(await Authorization.hasPermission(user._id, 'join-without-join-code'))) {\n\t\t\tif (!joinCode) {\n\t\t\t\tthrow new MeteorError('error-code-required', 'Code required', { method: 'joinRoom' });\n\t\t\t}\n\n\t\t\tconst isCorrectJoinCode = !!(await Rooms.findOneByJoinCodeAndId(joinCode, room._id, {\n\t\t\t\tprojection: { _id: 1 },\n\t\t\t}));\n\n\t\t\tif (!isCorrectJoinCode) {\n\t\t\t\tthrow new MeteorError('error-code-invalid', 'Invalid code', { method: 'joinRoom' });\n\t\t\t}\n\t\t}\n\n\t\treturn addUserToRoom(room._id, user);\n\t}\n\n\tasync beforeLeave(room: IRoom): Promise<void> {\n\t\tFederationActions.blockIfRoomFederatedButServiceNotReady(room);\n\t}\n\n\tasync beforeUserRemoved(room: IRoom): Promise<void> {\n\t\tFederationActions.blockIfRoomFederatedButServiceNotReady(room);\n\t}\n\n\tasync beforeNameChange(room: IRoom): Promise<void> {\n\t\tFederationActions.blockIfRoomFederatedButServiceNotReady(room);\n\t}\n\n\tasync beforeTopicChange(room: IRoom): Promise<void> {\n\t\tFederationActions.blockIfRoomFederatedButServiceNotReady(room);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/room/service.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/room/service.ts","inputSourceMap":{"version":3,"file":"server/services/room/service.ts","sourceRoot":"","sources":["server/services/room/service.ts"],"names":[],"mappings":"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","sourcesContent":["import { ServiceClassInternal, Authorization, MeteorError } from '@rocket.chat/core-services';\nimport type { ICreateRoomParams, IRoomService } from '@rocket.chat/core-services';\nimport { type AtLeast, type IRoom, type IUser, isRoomWithJoinCode } from '@rocket.chat/core-typings';\nimport { Rooms, Users } from '@rocket.chat/models';\n\nimport { saveRoomTopic } from '../../../app/channel-settings/server/functions/saveRoomTopic';\nimport { addUserToRoom } from '../../../app/lib/server/functions/addUserToRoom';\nimport { createRoom } from '../../../app/lib/server/functions/createRoom'; // TODO remove this import\nimport { removeUserFromRoom } from '../../../app/lib/server/functions/removeUserFromRoom';\nimport { getValidRoomName } from '../../../app/utils/server/lib/getValidRoomName';\nimport { RoomMemberActions } from '../../../definition/IRoomTypeConfig';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\nimport { createDirectMessage } from '../../methods/createDirectMessage';\nimport { FederationActions } from './hooks/BeforeFederationActions';\n\nexport class RoomService extends ServiceClassInternal implements IRoomService {\n\tprotected name = 'room';\n\n\tasync create(uid: string, params: ICreateRoomParams): Promise<IRoom> {\n\t\tconst { type, name, members = [], readOnly, extraData, options, sidepanel } = params;\n\n\t\tconst hasPermission = await Authorization.hasPermission(uid, `create-${type}`);\n\t\tif (!hasPermission) {\n\t\t\tthrow new Error('no-permission');\n\t\t}\n\n\t\tconst user = await Users.findOneById(uid);\n\t\tif (!user?.username) {\n\t\t\tthrow new Error('User not found');\n\t\t}\n\n\t\t// TODO convert `createRoom` function to \"raw\" and move to here\n\t\treturn createRoom(type, name, user, members, false, readOnly, extraData, options, sidepanel) as unknown as IRoom;\n\t}\n\n\tasync createDirectMessage({ to, from }: { to: string; from: string }): Promise<{ rid: string }> {\n\t\tconst [toUser, fromUser] = await Promise.all([\n\t\t\tUsers.findOneById(to, { projection: { username: 1 } }),\n\t\t\tUsers.findOneById(from, { projection: { _id: 1 } }),\n\t\t]);\n\n\t\tif (!toUser?.username || !fromUser) {\n\t\t\tthrow new Error('error-invalid-user');\n\t\t}\n\t\treturn this.createDirectMessageWithMultipleUsers([toUser.username], fromUser._id);\n\t}\n\n\tasync createDirectMessageWithMultipleUsers(members: string[], creatorId: string): Promise<{ rid: string }> {\n\t\treturn createDirectMessage(members, creatorId);\n\t}\n\n\tasync addMember(uid: string, rid: string): Promise<boolean> {\n\t\tconst hasPermission = await Authorization.hasPermission(uid, 'add-user-to-joined-room', rid);\n\t\tif (!hasPermission) {\n\t\t\tthrow new Error('no-permission');\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync addUserToRoom(\n\t\troomId: string,\n\t\tuser: Pick<IUser, '_id'> | string,\n\t\tinviter?: Pick<IUser, '_id' | 'username'>,\n\t\toptions?: {\n\t\t\tskipSystemMessage?: boolean;\n\t\t\tskipAlertSound?: boolean;\n\t\t},\n\t): Promise<boolean | undefined> {\n\t\treturn addUserToRoom(roomId, user, inviter, options);\n\t}\n\n\tasync removeUserFromRoom(roomId: string, user: IUser, options?: { byUser: IUser }): Promise<void> {\n\t\treturn removeUserFromRoom(roomId, user, options);\n\t}\n\n\tasync getValidRoomName(displayName: string, roomId = '', options: { allowDuplicates?: boolean } = {}): Promise<string> {\n\t\treturn getValidRoomName(displayName, roomId, options);\n\t}\n\n\tasync saveRoomTopic(\n\t\troomId: string,\n\t\troomTopic: string | undefined,\n\t\tuser: {\n\t\t\tusername: string;\n\t\t\t_id: string;\n\t\t},\n\t\tsendMessage = true,\n\t): Promise<void> {\n\t\tawait saveRoomTopic(roomId, roomTopic, user, sendMessage);\n\t}\n\n\tasync getRouteLink(room: AtLeast<IRoom, '_id' | 't' | 'name'>): Promise<string | boolean> {\n\t\treturn roomCoordinator.getRouteLink(room.t as string, { rid: room._id, name: room.name });\n\t}\n\n\t/**\n\t * Method called by users to join a room.\n\t */\n\tasync join({ room, user, joinCode }: { room: IRoom; user: Pick<IUser, '_id'>; joinCode?: string }) {\n\t\tif (!(await roomCoordinator.getRoomDirectives(room.t)?.allowMemberAction(room, RoomMemberActions.JOIN, user._id))) {\n\t\t\tthrow new MeteorError('error-not-allowed', 'Not allowed', { method: 'joinRoom' });\n\t\t}\n\n\t\tif (!(await Authorization.canAccessRoom(room, user))) {\n\t\t\tthrow new MeteorError('error-not-allowed', 'Not allowed', { method: 'joinRoom' });\n\t\t}\n\n\t\tif (isRoomWithJoinCode(room) && !(await Authorization.hasPermission(user._id, 'join-without-join-code'))) {\n\t\t\tif (!joinCode) {\n\t\t\t\tthrow new MeteorError('error-code-required', 'Code required', { method: 'joinRoom' });\n\t\t\t}\n\n\t\t\tconst isCorrectJoinCode = !!(await Rooms.findOneByJoinCodeAndId(joinCode, room._id, {\n\t\t\t\tprojection: { _id: 1 },\n\t\t\t}));\n\n\t\t\tif (!isCorrectJoinCode) {\n\t\t\t\tthrow new MeteorError('error-code-invalid', 'Invalid code', { method: 'joinRoom' });\n\t\t\t}\n\t\t}\n\n\t\treturn addUserToRoom(room._id, user);\n\t}\n\n\tasync beforeLeave(room: IRoom): Promise<void> {\n\t\tFederationActions.blockIfRoomFederatedButServiceNotReady(room);\n\t}\n\n\tasync beforeUserRemoved(room: IRoom): Promise<void> {\n\t\tFederationActions.blockIfRoomFederatedButServiceNotReady(room);\n\t}\n\n\tasync beforeNameChange(room: IRoom): Promise<void> {\n\t\tFederationActions.blockIfRoomFederatedButServiceNotReady(room);\n\t}\n\n\tasync beforeTopicChange(room: IRoom): Promise<void> {\n\t\tFederationActions.blockIfRoomFederatedButServiceNotReady(room);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      RoomService: () => RoomService\n    });\n    let ServiceClassInternal, Authorization, MeteorError;\n    module.link(\"@rocket.chat/core-services\", {\n      ServiceClassInternal(v) {\n        ServiceClassInternal = v;\n      },\n      Authorization(v) {\n        Authorization = v;\n      },\n      MeteorError(v) {\n        MeteorError = v;\n      }\n    }, 0);\n    let isRoomWithJoinCode;\n    module.link(\"@rocket.chat/core-typings\", {\n      isRoomWithJoinCode(v) {\n        isRoomWithJoinCode = v;\n      }\n    }, 1);\n    let Rooms, Users;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 2);\n    let saveRoomTopic;\n    module.link(\"../../../app/channel-settings/server/functions/saveRoomTopic\", {\n      saveRoomTopic(v) {\n        saveRoomTopic = v;\n      }\n    }, 3);\n    let addUserToRoom;\n    module.link(\"../../../app/lib/server/functions/addUserToRoom\", {\n      addUserToRoom(v) {\n        addUserToRoom = v;\n      }\n    }, 4);\n    let createRoom;\n    module.link(\"../../../app/lib/server/functions/createRoom\", {\n      createRoom(v) {\n        createRoom = v;\n      }\n    }, 5);\n    let removeUserFromRoom;\n    module.link(\"../../../app/lib/server/functions/removeUserFromRoom\", {\n      removeUserFromRoom(v) {\n        removeUserFromRoom = v;\n      }\n    }, 6);\n    let getValidRoomName;\n    module.link(\"../../../app/utils/server/lib/getValidRoomName\", {\n      getValidRoomName(v) {\n        getValidRoomName = v;\n      }\n    }, 7);\n    let RoomMemberActions;\n    module.link(\"../../../definition/IRoomTypeConfig\", {\n      RoomMemberActions(v) {\n        RoomMemberActions = v;\n      }\n    }, 8);\n    let roomCoordinator;\n    module.link(\"../../lib/rooms/roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 9);\n    let createDirectMessage;\n    module.link(\"../../methods/createDirectMessage\", {\n      createDirectMessage(v) {\n        createDirectMessage = v;\n      }\n    }, 10);\n    let FederationActions;\n    module.link(\"./hooks/BeforeFederationActions\", {\n      FederationActions(v) {\n        FederationActions = v;\n      }\n    }, 11);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class RoomService extends ServiceClassInternal {\n      constructor() {\n        super(...arguments);\n        this.name = 'room';\n      }\n      async create(uid, params) {\n        const {\n          type,\n          name,\n          members = [],\n          readOnly,\n          extraData,\n          options,\n          sidepanel\n        } = params;\n        const hasPermission = await Authorization.hasPermission(uid, \"create-\".concat(type));\n        if (!hasPermission) {\n          throw new Error('no-permission');\n        }\n        const user = await Users.findOneById(uid);\n        if (!(user !== null && user !== void 0 && user.username)) {\n          throw new Error('User not found');\n        }\n        // TODO convert `createRoom` function to \"raw\" and move to here\n        return createRoom(type, name, user, members, false, readOnly, extraData, options, sidepanel);\n      }\n      async createDirectMessage(_ref) {\n        let {\n          to,\n          from\n        } = _ref;\n        const [toUser, fromUser] = await Promise.all([Users.findOneById(to, {\n          projection: {\n            username: 1\n          }\n        }), Users.findOneById(from, {\n          projection: {\n            _id: 1\n          }\n        })]);\n        if (!(toUser !== null && toUser !== void 0 && toUser.username) || !fromUser) {\n          throw new Error('error-invalid-user');\n        }\n        return this.createDirectMessageWithMultipleUsers([toUser.username], fromUser._id);\n      }\n      async createDirectMessageWithMultipleUsers(members, creatorId) {\n        return createDirectMessage(members, creatorId);\n      }\n      async addMember(uid, rid) {\n        const hasPermission = await Authorization.hasPermission(uid, 'add-user-to-joined-room', rid);\n        if (!hasPermission) {\n          throw new Error('no-permission');\n        }\n        return true;\n      }\n      async addUserToRoom(roomId, user, inviter, options) {\n        return addUserToRoom(roomId, user, inviter, options);\n      }\n      async removeUserFromRoom(roomId, user, options) {\n        return removeUserFromRoom(roomId, user, options);\n      }\n      async getValidRoomName(displayName) {\n        let roomId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n        let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        return getValidRoomName(displayName, roomId, options);\n      }\n      async saveRoomTopic(roomId, roomTopic, user) {\n        let sendMessage = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n        await saveRoomTopic(roomId, roomTopic, user, sendMessage);\n      }\n      async getRouteLink(room) {\n        return roomCoordinator.getRouteLink(room.t, {\n          rid: room._id,\n          name: room.name\n        });\n      }\n      /**\n       * Method called by users to join a room.\n       */\n      async join(_ref2) {\n        var _roomCoordinator$getR;\n        let {\n          room,\n          user,\n          joinCode\n        } = _ref2;\n        if (!(await ((_roomCoordinator$getR = roomCoordinator.getRoomDirectives(room.t)) === null || _roomCoordinator$getR === void 0 ? void 0 : _roomCoordinator$getR.allowMemberAction(room, RoomMemberActions.JOIN, user._id)))) {\n          throw new MeteorError('error-not-allowed', 'Not allowed', {\n            method: 'joinRoom'\n          });\n        }\n        if (!(await Authorization.canAccessRoom(room, user))) {\n          throw new MeteorError('error-not-allowed', 'Not allowed', {\n            method: 'joinRoom'\n          });\n        }\n        if (isRoomWithJoinCode(room) && !(await Authorization.hasPermission(user._id, 'join-without-join-code'))) {\n          if (!joinCode) {\n            throw new MeteorError('error-code-required', 'Code required', {\n              method: 'joinRoom'\n            });\n          }\n          const isCorrectJoinCode = !!(await Rooms.findOneByJoinCodeAndId(joinCode, room._id, {\n            projection: {\n              _id: 1\n            }\n          }));\n          if (!isCorrectJoinCode) {\n            throw new MeteorError('error-code-invalid', 'Invalid code', {\n              method: 'joinRoom'\n            });\n          }\n        }\n        return addUserToRoom(room._id, user);\n      }\n      async beforeLeave(room) {\n        FederationActions.blockIfRoomFederatedButServiceNotReady(room);\n      }\n      async beforeUserRemoved(room) {\n        FederationActions.blockIfRoomFederatedButServiceNotReady(room);\n      }\n      async beforeNameChange(room) {\n        FederationActions.blockIfRoomFederatedButServiceNotReady(room);\n      }\n      async beforeTopicChange(room) {\n        FederationActions.blockIfRoomFederatedButServiceNotReady(room);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","RoomService","ServiceClassInternal","Authorization","MeteorError","link","v","isRoomWithJoinCode","Rooms","Users","saveRoomTopic","addUserToRoom","createRoom","removeUserFromRoom","getValidRoomName","RoomMemberActions","roomCoordinator","createDirectMessage","FederationActions","__reifyWaitForDeps__","constructor","arguments","name","create","uid","params","type","members","readOnly","extraData","options","sidepanel","hasPermission","concat","Error","user","findOneById","username","_ref","to","from","toUser","fromUser","Promise","all","projection","_id","createDirectMessageWithMultipleUsers","creatorId","addMember","rid","roomId","inviter","displayName","length","undefined","roomTopic","sendMessage","getRouteLink","room","t","join","_ref2","_roomCoordinator$getR","joinCode","getRoomDirectives","allowMemberAction","JOIN","method","canAccessRoom","isCorrectJoinCode","findOneByJoinCodeAndId","beforeLeave","blockIfRoomFederatedButServiceNotReady","beforeUserRemoved","beforeNameChange","beforeTopicChange","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/room/service.ts"],"sourcesContent":["import { ServiceClassInternal, Authorization, MeteorError } from '@rocket.chat/core-services';\nimport type { ICreateRoomParams, IRoomService } from '@rocket.chat/core-services';\nimport { type AtLeast, type IRoom, type IUser, isRoomWithJoinCode } from '@rocket.chat/core-typings';\nimport { Rooms, Users } from '@rocket.chat/models';\n\nimport { saveRoomTopic } from '../../../app/channel-settings/server/functions/saveRoomTopic';\nimport { addUserToRoom } from '../../../app/lib/server/functions/addUserToRoom';\nimport { createRoom } from '../../../app/lib/server/functions/createRoom'; // TODO remove this import\nimport { removeUserFromRoom } from '../../../app/lib/server/functions/removeUserFromRoom';\nimport { getValidRoomName } from '../../../app/utils/server/lib/getValidRoomName';\nimport { RoomMemberActions } from '../../../definition/IRoomTypeConfig';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\nimport { createDirectMessage } from '../../methods/createDirectMessage';\nimport { FederationActions } from './hooks/BeforeFederationActions';\n\nexport class RoomService extends ServiceClassInternal implements IRoomService {\n\tprotected name = 'room';\n\n\tasync create(uid: string, params: ICreateRoomParams): Promise<IRoom> {\n\t\tconst { type, name, members = [], readOnly, extraData, options, sidepanel } = params;\n\n\t\tconst hasPermission = await Authorization.hasPermission(uid, `create-${type}`);\n\t\tif (!hasPermission) {\n\t\t\tthrow new Error('no-permission');\n\t\t}\n\n\t\tconst user = await Users.findOneById(uid);\n\t\tif (!user?.username) {\n\t\t\tthrow new Error('User not found');\n\t\t}\n\n\t\t// TODO convert `createRoom` function to \"raw\" and move to here\n\t\treturn createRoom(type, name, user, members, false, readOnly, extraData, options, sidepanel) as unknown as IRoom;\n\t}\n\n\tasync createDirectMessage({ to, from }: { to: string; from: string }): Promise<{ rid: string }> {\n\t\tconst [toUser, fromUser] = await Promise.all([\n\t\t\tUsers.findOneById(to, { projection: { username: 1 } }),\n\t\t\tUsers.findOneById(from, { projection: { _id: 1 } }),\n\t\t]);\n\n\t\tif (!toUser?.username || !fromUser) {\n\t\t\tthrow new Error('error-invalid-user');\n\t\t}\n\t\treturn this.createDirectMessageWithMultipleUsers([toUser.username], fromUser._id);\n\t}\n\n\tasync createDirectMessageWithMultipleUsers(members: string[], creatorId: string): Promise<{ rid: string }> {\n\t\treturn createDirectMessage(members, creatorId);\n\t}\n\n\tasync addMember(uid: string, rid: string): Promise<boolean> {\n\t\tconst hasPermission = await Authorization.hasPermission(uid, 'add-user-to-joined-room', rid);\n\t\tif (!hasPermission) {\n\t\t\tthrow new Error('no-permission');\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync addUserToRoom(\n\t\troomId: string,\n\t\tuser: Pick<IUser, '_id'> | string,\n\t\tinviter?: Pick<IUser, '_id' | 'username'>,\n\t\toptions?: {\n\t\t\tskipSystemMessage?: boolean;\n\t\t\tskipAlertSound?: boolean;\n\t\t},\n\t): Promise<boolean | undefined> {\n\t\treturn addUserToRoom(roomId, user, inviter, options);\n\t}\n\n\tasync removeUserFromRoom(roomId: string, user: IUser, options?: { byUser: IUser }): Promise<void> {\n\t\treturn removeUserFromRoom(roomId, user, options);\n\t}\n\n\tasync getValidRoomName(displayName: string, roomId = '', options: { allowDuplicates?: boolean } = {}): Promise<string> {\n\t\treturn getValidRoomName(displayName, roomId, options);\n\t}\n\n\tasync saveRoomTopic(\n\t\troomId: string,\n\t\troomTopic: string | undefined,\n\t\tuser: {\n\t\t\tusername: string;\n\t\t\t_id: string;\n\t\t},\n\t\tsendMessage = true,\n\t): Promise<void> {\n\t\tawait saveRoomTopic(roomId, roomTopic, user, sendMessage);\n\t}\n\n\tasync getRouteLink(room: AtLeast<IRoom, '_id' | 't' | 'name'>): Promise<string | boolean> {\n\t\treturn roomCoordinator.getRouteLink(room.t as string, { rid: room._id, name: room.name });\n\t}\n\n\t/**\n\t * Method called by users to join a room.\n\t */\n\tasync join({ room, user, joinCode }: { room: IRoom; user: Pick<IUser, '_id'>; joinCode?: string }) {\n\t\tif (!(await roomCoordinator.getRoomDirectives(room.t)?.allowMemberAction(room, RoomMemberActions.JOIN, user._id))) {\n\t\t\tthrow new MeteorError('error-not-allowed', 'Not allowed', { method: 'joinRoom' });\n\t\t}\n\n\t\tif (!(await Authorization.canAccessRoom(room, user))) {\n\t\t\tthrow new MeteorError('error-not-allowed', 'Not allowed', { method: 'joinRoom' });\n\t\t}\n\n\t\tif (isRoomWithJoinCode(room) && !(await Authorization.hasPermission(user._id, 'join-without-join-code'))) {\n\t\t\tif (!joinCode) {\n\t\t\t\tthrow new MeteorError('error-code-required', 'Code required', { method: 'joinRoom' });\n\t\t\t}\n\n\t\t\tconst isCorrectJoinCode = !!(await Rooms.findOneByJoinCodeAndId(joinCode, room._id, {\n\t\t\t\tprojection: { _id: 1 },\n\t\t\t}));\n\n\t\t\tif (!isCorrectJoinCode) {\n\t\t\t\tthrow new MeteorError('error-code-invalid', 'Invalid code', { method: 'joinRoom' });\n\t\t\t}\n\t\t}\n\n\t\treturn addUserToRoom(room._id, user);\n\t}\n\n\tasync beforeLeave(room: IRoom): Promise<void> {\n\t\tFederationActions.blockIfRoomFederatedButServiceNotReady(room);\n\t}\n\n\tasync beforeUserRemoved(room: IRoom): Promise<void> {\n\t\tFederationActions.blockIfRoomFederatedButServiceNotReady(room);\n\t}\n\n\tasync beforeNameChange(room: IRoom): Promise<void> {\n\t\tFederationActions.blockIfRoomFederatedButServiceNotReady(room);\n\t}\n\n\tasync beforeTopicChange(room: IRoom): Promise<void> {\n\t\tFederationActions.blockIfRoomFederatedButServiceNotReady(room);\n\t}\n}\n"],"mappings":";;;IAAAA,MAAA,CAAOC,MAAE;MAAAC,WAAA,EAAAA,CAAA,KAAsBA;IAAA,EAAa;IAAA,IAAEC,oBAAmB,EAAAC,aAAA,EAAAC,WAA6B;IAAAL,MAAA,CAAAM,IAAA;MAAAH,qBAAAI,CAAA;QAAAJ,oBAAA,GAAAI,CAAA;MAAA;MAAAH,cAAAG,CAAA;QAAAH,aAAA,GAAAG,CAAA;MAAA;MAAAF,YAAAE,CAAA;QAAAF,WAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,kBAAA;IAAAR,MAAA,CAAAM,IAAA;MAAAE,mBAAAD,CAAA;QAAAC,kBAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,KAAA,EAAAC,KAAA;IAAAV,MAAA,CAAAM,IAAA;MAAAG,MAAAF,CAAA;QAAAE,KAAA,GAAAF,CAAA;MAAA;MAAAG,MAAAH,CAAA;QAAAG,KAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,aAAA;IAAAX,MAAA,CAAAM,IAAA;MAAAK,cAAAJ,CAAA;QAAAI,aAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,aAAA;IAAAZ,MAAA,CAAAM,IAAA;MAAAM,cAAAL,CAAA;QAAAK,aAAA,GAAAL,CAAA;MAAA;IAAA;IAAA,IAAAM,UAAA;IAAAb,MAAA,CAAAM,IAAA;MAAAO,WAAAN,CAAA;QAAAM,UAAA,GAAAN,CAAA;MAAA;IAAA;IAAA,IAAAO,kBAAA;IAAAd,MAAA,CAAAM,IAAA;MAAAQ,mBAAAP,CAAA;QAAAO,kBAAA,GAAAP,CAAA;MAAA;IAAA;IAAA,IAAAQ,gBAAA;IAAAf,MAAA,CAAAM,IAAA;MAAAS,iBAAAR,CAAA;QAAAQ,gBAAA,GAAAR,CAAA;MAAA;IAAA;IAAA,IAAAS,iBAAA;IAAAhB,MAAA,CAAAM,IAAA;MAAAU,kBAAAT,CAAA;QAAAS,iBAAA,GAAAT,CAAA;MAAA;IAAA;IAAA,IAAAU,eAAA;IAAAjB,MAAA,CAAAM,IAAA;MAAAW,gBAAAV,CAAA;QAAAU,eAAA,GAAAV,CAAA;MAAA;IAAA;IAAA,IAAAW,mBAAA;IAAAlB,MAAA,CAAAM,IAAA;MAAAY,oBAAAX,CAAA;QAAAW,mBAAA,GAAAX,CAAA;MAAA;IAAA;IAAA,IAAAY,iBAAA;IAAAnB,MAAA,CAAAM,IAAA;MAAAa,kBAAAZ,CAAA;QAAAY,iBAAA,GAAAZ,CAAA;MAAA;IAAA;IAAA,IAAAa,oBAAA,WAAAA,oBAAA;IAexF,MAAOlB,WAAY,SAAQC,oBAAoB;MAAAkB,YAAA;QAAA,SAAAC,SAAA;QAAA,KAC1CC,IAAI,GAAG,MAAM;MAAA;MAEvB,MAAMC,MAAMA,CAACC,GAAW,EAAEC,MAAyB;QAClD,MAAM;UAAEC,IAAI;UAAEJ,IAAI;UAAEK,OAAO,GAAG,EAAE;UAAEC,QAAQ;UAAEC,SAAS;UAAEC,OAAO;UAAEC;QAAS,CAAE,GAAGN,MAAM;QAEpF,MAAMO,aAAa,GAAG,MAAM7B,aAAa,CAAC6B,aAAa,CAACR,GAAG,YAAAS,MAAA,CAAYP,IAAI,CAAE,CAAC;QAC9E,IAAI,CAACM,aAAa,EAAE;UACnB,MAAM,IAAIE,KAAK,CAAC,eAAe,CAAC;QACjC;QAEA,MAAMC,IAAI,GAAG,MAAM1B,KAAK,CAAC2B,WAAW,CAACZ,GAAG,CAAC;QACzC,IAAI,EAACW,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEE,QAAQ,GAAE;UACpB,MAAM,IAAIH,KAAK,CAAC,gBAAgB,CAAC;QAClC;QAEA;QACA,OAAOtB,UAAU,CAACc,IAAI,EAAEJ,IAAI,EAAEa,IAAI,EAAER,OAAO,EAAE,KAAK,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,SAAS,CAAqB;MACjH;MAEA,MAAMd,mBAAmBA,CAAAqB,IAAA,EAA2C;QAAA,IAA1C;UAAEC,EAAE;UAAEC;QAAI,CAAgC,GAAAF,IAAA;QACnE,MAAM,CAACG,MAAM,EAAEC,QAAQ,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC5CnC,KAAK,CAAC2B,WAAW,CAACG,EAAE,EAAE;UAAEM,UAAU,EAAE;YAAER,QAAQ,EAAE;UAAC;QAAE,CAAE,CAAC,EACtD5B,KAAK,CAAC2B,WAAW,CAACI,IAAI,EAAE;UAAEK,UAAU,EAAE;YAAEC,GAAG,EAAE;UAAC;QAAE,CAAE,CAAC,CACnD,CAAC;QAEF,IAAI,EAACL,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEJ,QAAQ,KAAI,CAACK,QAAQ,EAAE;UACnC,MAAM,IAAIR,KAAK,CAAC,oBAAoB,CAAC;QACtC;QACA,OAAO,IAAI,CAACa,oCAAoC,CAAC,CAACN,MAAM,CAACJ,QAAQ,CAAC,EAAEK,QAAQ,CAACI,GAAG,CAAC;MAClF;MAEA,MAAMC,oCAAoCA,CAACpB,OAAiB,EAAEqB,SAAiB;QAC9E,OAAO/B,mBAAmB,CAACU,OAAO,EAAEqB,SAAS,CAAC;MAC/C;MAEA,MAAMC,SAASA,CAACzB,GAAW,EAAE0B,GAAW;QACvC,MAAMlB,aAAa,GAAG,MAAM7B,aAAa,CAAC6B,aAAa,CAACR,GAAG,EAAE,yBAAyB,EAAE0B,GAAG,CAAC;QAC5F,IAAI,CAAClB,aAAa,EAAE;UACnB,MAAM,IAAIE,KAAK,CAAC,eAAe,CAAC;QACjC;QAEA,OAAO,IAAI;MACZ;MAEA,MAAMvB,aAAaA,CAClBwC,MAAc,EACdhB,IAAiC,EACjCiB,OAAyC,EACzCtB,OAGC;QAED,OAAOnB,aAAa,CAACwC,MAAM,EAAEhB,IAAI,EAAEiB,OAAO,EAAEtB,OAAO,CAAC;MACrD;MAEA,MAAMjB,kBAAkBA,CAACsC,MAAc,EAAEhB,IAAW,EAAEL,OAA2B;QAChF,OAAOjB,kBAAkB,CAACsC,MAAM,EAAEhB,IAAI,EAAEL,OAAO,CAAC;MACjD;MAEA,MAAMhB,gBAAgBA,CAACuC,WAAmB,EAA0D;QAAA,IAAxDF,MAAM,GAAA9B,SAAA,CAAAiC,MAAA,QAAAjC,SAAA,QAAAkC,SAAA,GAAAlC,SAAA,MAAG,EAAE;QAAA,IAAES,OAAA,GAAAT,SAAA,CAAAiC,MAAA,QAAAjC,SAAA,QAAAkC,SAAA,GAAAlC,SAAA,MAAyC,EAAE;QACnG,OAAOP,gBAAgB,CAACuC,WAAW,EAAEF,MAAM,EAAErB,OAAO,CAAC;MACtD;MAEA,MAAMpB,aAAaA,CAClByC,MAAc,EACdK,SAA6B,EAC7BrB,IAGC,EACiB;QAAA,IAAlBsB,WAAW,GAAApC,SAAA,CAAAiC,MAAA,QAAAjC,SAAA,QAAAkC,SAAA,GAAAlC,SAAA,MAAG,IAAI;QAElB,MAAMX,aAAa,CAACyC,MAAM,EAAEK,SAAS,EAAErB,IAAI,EAAEsB,WAAW,CAAC;MAC1D;MAEA,MAAMC,YAAYA,CAACC,IAA0C;QAC5D,OAAO3C,eAAe,CAAC0C,YAAY,CAACC,IAAI,CAACC,CAAW,EAAE;UAAEV,GAAG,EAAES,IAAI,CAACb,GAAG;UAAExB,IAAI,EAAEqC,IAAI,CAACrC;QAAI,CAAE,CAAC;MAC1F;MAEA;;;MAGA,MAAMuC,IAAIA,CAAAC,KAAA,EAAuF;QAAA,IAAAC,qBAAA;QAAA,IAAtF;UAAEJ,IAAI;UAAExB,IAAI;UAAE6B;QAAQ,CAAgE,GAAAF,KAAA;QAChG,IAAI,EAAE,QAAAC,qBAAA,GAAM/C,eAAe,CAACiD,iBAAiB,CAACN,IAAI,CAACC,CAAC,CAAC,cAAAG,qBAAA,uBAAzCA,qBAAA,CAA2CG,iBAAiB,CAACP,IAAI,EAAE5C,iBAAiB,CAACoD,IAAI,EAAEhC,IAAI,CAACW,GAAG,CAAC,EAAC,EAAE;UAClH,MAAM,IAAI1C,WAAW,CAAC,mBAAmB,EAAE,aAAa,EAAE;YAAEgE,MAAM,EAAE;UAAU,CAAE,CAAC;QAClF;QAEA,IAAI,EAAE,MAAMjE,aAAa,CAACkE,aAAa,CAACV,IAAI,EAAExB,IAAI,CAAC,CAAC,EAAE;UACrD,MAAM,IAAI/B,WAAW,CAAC,mBAAmB,EAAE,aAAa,EAAE;YAAEgE,MAAM,EAAE;UAAU,CAAE,CAAC;QAClF;QAEA,IAAI7D,kBAAkB,CAACoD,IAAI,CAAC,IAAI,EAAE,MAAMxD,aAAa,CAAC6B,aAAa,CAACG,IAAI,CAACW,GAAG,EAAE,wBAAwB,CAAC,CAAC,EAAE;UACzG,IAAI,CAACkB,QAAQ,EAAE;YACd,MAAM,IAAI5D,WAAW,CAAC,qBAAqB,EAAE,eAAe,EAAE;cAAEgE,MAAM,EAAE;YAAU,CAAE,CAAC;UACtF;UAEA,MAAME,iBAAiB,GAAG,CAAC,EAAE,MAAM9D,KAAK,CAAC+D,sBAAsB,CAACP,QAAQ,EAAEL,IAAI,CAACb,GAAG,EAAE;YACnFD,UAAU,EAAE;cAAEC,GAAG,EAAE;YAAC;WACpB,CAAC,CAAC;UAEH,IAAI,CAACwB,iBAAiB,EAAE;YACvB,MAAM,IAAIlE,WAAW,CAAC,oBAAoB,EAAE,cAAc,EAAE;cAAEgE,MAAM,EAAE;YAAU,CAAE,CAAC;UACpF;QACD;QAEA,OAAOzD,aAAa,CAACgD,IAAI,CAACb,GAAG,EAAEX,IAAI,CAAC;MACrC;MAEA,MAAMqC,WAAWA,CAACb,IAAW;QAC5BzC,iBAAiB,CAACuD,sCAAsC,CAACd,IAAI,CAAC;MAC/D;MAEA,MAAMe,iBAAiBA,CAACf,IAAW;QAClCzC,iBAAiB,CAACuD,sCAAsC,CAACd,IAAI,CAAC;MAC/D;MAEA,MAAMgB,gBAAgBA,CAAChB,IAAW;QACjCzC,iBAAiB,CAACuD,sCAAsC,CAACd,IAAI,CAAC;MAC/D;MAEA,MAAMiB,iBAAiBA,CAACjB,IAAW;QAClCzC,iBAAiB,CAACuD,sCAAsC,CAACd,IAAI,CAAC;MAC/D;;IACAkB,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a6150cb31ceb3a0fc90e30d91c966f47bd9c4c6d"}
