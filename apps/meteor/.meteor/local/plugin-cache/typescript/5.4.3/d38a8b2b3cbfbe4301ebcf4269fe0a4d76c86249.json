{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/models/raw/CannedResponse.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/models/raw/CannedResponse.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/models/raw/CannedResponse.ts","inputSourceMap":{"version":3,"file":"ee/server/models/raw/CannedResponse.ts","sourceRoot":"","sources":["ee/server/models/raw/CannedResponse.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,OAAO,EAAE,MAAM,uCAAuC,CAAC;AAEhE,qDAAqD;AACrD,MAAM,OAAO,iBAAkB,SAAQ,OAAmC;IACzE,YAAY,EAAM;QACjB,KAAK,CAAC,EAAE,EAAE,iBAAiB,CAAC,CAAC;IAC9B,CAAC;IAES,YAAY;QACrB,OAAO;YACN;gBACC,GAAG,EAAE;oBACJ,QAAQ,EAAE,CAAC;iBACX;gBACD,MAAM,EAAE,IAAI;aACZ;SACD,CAAC;IACH,CAAC;IAED,KAAK,CAAC,oBAAoB,CACzB,GAAW,EACX,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,SAAS,EAAyE;QAEvI,MAAM,MAAM,GAAG;YACd,QAAQ;YACR,IAAI;YACJ,KAAK;YACL,IAAI;YACJ,MAAM;YACN,YAAY;YACZ,SAAS;SACT,CAAC;QAEF,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;QAEhD,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,oBAAoB,CAAC,EAC1B,QAAQ,EACR,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,MAAM,EACN,YAAY,EACZ,SAAS,EACT,UAAU,GAC8C;QACxD,MAAM,MAAM,GAAG;YACd,QAAQ;YACR,IAAI;YACJ,KAAK;YACL,IAAI;YACJ,MAAM;YACN,YAAY;YACZ,SAAS;YACT,UAAU;SACV,CAAC;QAEF,MAAM,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC;QACtD,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;IACvC,CAAC;IAED,WAAW,CAAC,GAAW,EAAE,OAAiD;QACzE,MAAM,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;QAEtB,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,iBAAiB,CAAC,QAAgB,EAAE,OAAiD;QACpF,MAAM,KAAK,GAAG;YACb,QAAQ;SACR,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,sBAAsB,CAAC,GAAW,EAAE,OAAiD;QACpF,MAAM,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;QAEtB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,kBAAkB,CAAC,YAAoB,EAAE,OAAiD;QACzF,MAAM,KAAK,GAAG;YACb,KAAK,EAAE,YAAY;YACnB,YAAY;SACZ,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,cAAc,CAAC,QAAgB,EAAE,OAAiD;QACjF,MAAM,KAAK,GAAG,EAAE,QAAQ,EAAE,CAAC;QAE3B,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,SAAS;IACT,UAAU,CAAC,GAAW;QACrB,MAAM,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;QAEtB,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,4BAA4B,CAAC,KAAa;QACzC,MAAM,MAAM,GAA6C;YACxD,KAAK,EAAE;gBACN,IAAI,EAAE,KAAK;aACX;SACD,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC;CACD","sourcesContent":["import type { IOmnichannelCannedResponse } from '@rocket.chat/core-typings';\nimport type { ICannedResponseModel } from '@rocket.chat/model-typings';\nimport type { Db, DeleteResult, FindCursor, FindOptions, IndexDescription, UpdateFilter } from 'mongodb';\n\nimport { BaseRaw } from '../../../../server/models/raw/BaseRaw';\n\n// TODO need to define type for CannedResponse object\nexport class CannedResponseRaw extends BaseRaw<IOmnichannelCannedResponse> implements ICannedResponseModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'canned_response');\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tshortcut: 1,\n\t\t\t\t},\n\t\t\t\tunique: true,\n\t\t\t},\n\t\t];\n\t}\n\n\tasync updateCannedResponse(\n\t\t_id: string,\n\t\t{ shortcut, text, tags, scope, userId, departmentId, createdBy }: Omit<IOmnichannelCannedResponse, '_id' | '_updatedAt' | '_createdAt'>,\n\t): Promise<Omit<IOmnichannelCannedResponse, '_updatedAt' | '_createdAt'>> {\n\t\tconst record = {\n\t\t\tshortcut,\n\t\t\ttext,\n\t\t\tscope,\n\t\t\ttags,\n\t\t\tuserId,\n\t\t\tdepartmentId,\n\t\t\tcreatedBy,\n\t\t};\n\n\t\tawait this.updateOne({ _id }, { $set: record });\n\n\t\treturn Object.assign(record, { _id });\n\t}\n\n\tasync createCannedResponse({\n\t\tshortcut,\n\t\ttext,\n\t\ttags,\n\t\tscope,\n\t\tuserId,\n\t\tdepartmentId,\n\t\tcreatedBy,\n\t\t_createdAt,\n\t}: Omit<IOmnichannelCannedResponse, '_id' | '_updatedAt'>): Promise<Omit<IOmnichannelCannedResponse, '_updatedAt'>> {\n\t\tconst record = {\n\t\t\tshortcut,\n\t\t\ttext,\n\t\t\tscope,\n\t\t\ttags,\n\t\t\tuserId,\n\t\t\tdepartmentId,\n\t\t\tcreatedBy,\n\t\t\t_createdAt,\n\t\t};\n\n\t\tconst _id = (await this.insertOne(record)).insertedId;\n\t\treturn Object.assign(record, { _id });\n\t}\n\n\tfindOneById(_id: string, options?: FindOptions<IOmnichannelCannedResponse>): Promise<IOmnichannelCannedResponse | null> {\n\t\tconst query = { _id };\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindOneByShortcut(shortcut: string, options?: FindOptions<IOmnichannelCannedResponse>): Promise<IOmnichannelCannedResponse | null> {\n\t\tconst query = {\n\t\t\tshortcut,\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindByCannedResponseId(_id: string, options?: FindOptions<IOmnichannelCannedResponse>): FindCursor<IOmnichannelCannedResponse> {\n\t\tconst query = { _id };\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByDepartmentId(departmentId: string, options?: FindOptions<IOmnichannelCannedResponse>): FindCursor<IOmnichannelCannedResponse> {\n\t\tconst query = {\n\t\t\tscope: 'department',\n\t\t\tdepartmentId,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByShortcut(shortcut: string, options?: FindOptions<IOmnichannelCannedResponse>): FindCursor<IOmnichannelCannedResponse> {\n\t\tconst query = { shortcut };\n\n\t\treturn this.find(query, options);\n\t}\n\n\t// REMOVE\n\tremoveById(_id: string): Promise<DeleteResult> {\n\t\tconst query = { _id };\n\n\t\treturn this.deleteOne(query);\n\t}\n\n\tremoveTagFromCannedResponses(tagId: string) {\n\t\tconst update: UpdateFilter<IOmnichannelCannedResponse> = {\n\t\t\t$pull: {\n\t\t\t\ttags: tagId,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateMany({}, update);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/models/raw/CannedResponse.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/models/raw/CannedResponse.ts","inputSourceMap":{"version":3,"file":"ee/server/models/raw/CannedResponse.ts","sourceRoot":"","sources":["ee/server/models/raw/CannedResponse.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IOmnichannelCannedResponse } from '@rocket.chat/core-typings';\nimport type { ICannedResponseModel } from '@rocket.chat/model-typings';\nimport type { Db, DeleteResult, FindCursor, FindOptions, IndexDescription, UpdateFilter } from 'mongodb';\n\nimport { BaseRaw } from '../../../../server/models/raw/BaseRaw';\n\n// TODO need to define type for CannedResponse object\nexport class CannedResponseRaw extends BaseRaw<IOmnichannelCannedResponse> implements ICannedResponseModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'canned_response');\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tshortcut: 1,\n\t\t\t\t},\n\t\t\t\tunique: true,\n\t\t\t},\n\t\t];\n\t}\n\n\tasync updateCannedResponse(\n\t\t_id: string,\n\t\t{ shortcut, text, tags, scope, userId, departmentId, createdBy }: Omit<IOmnichannelCannedResponse, '_id' | '_updatedAt' | '_createdAt'>,\n\t): Promise<Omit<IOmnichannelCannedResponse, '_updatedAt' | '_createdAt'>> {\n\t\tconst record = {\n\t\t\tshortcut,\n\t\t\ttext,\n\t\t\tscope,\n\t\t\ttags,\n\t\t\tuserId,\n\t\t\tdepartmentId,\n\t\t\tcreatedBy,\n\t\t};\n\n\t\tawait this.updateOne({ _id }, { $set: record });\n\n\t\treturn Object.assign(record, { _id });\n\t}\n\n\tasync createCannedResponse({\n\t\tshortcut,\n\t\ttext,\n\t\ttags,\n\t\tscope,\n\t\tuserId,\n\t\tdepartmentId,\n\t\tcreatedBy,\n\t\t_createdAt,\n\t}: Omit<IOmnichannelCannedResponse, '_id' | '_updatedAt'>): Promise<Omit<IOmnichannelCannedResponse, '_updatedAt'>> {\n\t\tconst record = {\n\t\t\tshortcut,\n\t\t\ttext,\n\t\t\tscope,\n\t\t\ttags,\n\t\t\tuserId,\n\t\t\tdepartmentId,\n\t\t\tcreatedBy,\n\t\t\t_createdAt,\n\t\t};\n\n\t\tconst _id = (await this.insertOne(record)).insertedId;\n\t\treturn Object.assign(record, { _id });\n\t}\n\n\tfindOneById(_id: string, options?: FindOptions<IOmnichannelCannedResponse>): Promise<IOmnichannelCannedResponse | null> {\n\t\tconst query = { _id };\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindOneByShortcut(shortcut: string, options?: FindOptions<IOmnichannelCannedResponse>): Promise<IOmnichannelCannedResponse | null> {\n\t\tconst query = {\n\t\t\tshortcut,\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindByCannedResponseId(_id: string, options?: FindOptions<IOmnichannelCannedResponse>): FindCursor<IOmnichannelCannedResponse> {\n\t\tconst query = { _id };\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByDepartmentId(departmentId: string, options?: FindOptions<IOmnichannelCannedResponse>): FindCursor<IOmnichannelCannedResponse> {\n\t\tconst query = {\n\t\t\tscope: 'department',\n\t\t\tdepartmentId,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByShortcut(shortcut: string, options?: FindOptions<IOmnichannelCannedResponse>): FindCursor<IOmnichannelCannedResponse> {\n\t\tconst query = { shortcut };\n\n\t\treturn this.find(query, options);\n\t}\n\n\t// REMOVE\n\tremoveById(_id: string): Promise<DeleteResult> {\n\t\tconst query = { _id };\n\n\t\treturn this.deleteOne(query);\n\t}\n\n\tremoveTagFromCannedResponses(tagId: string) {\n\t\tconst update: UpdateFilter<IOmnichannelCannedResponse> = {\n\t\t\t$pull: {\n\t\t\t\ttags: tagId,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateMany({}, update);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      CannedResponseRaw: () => CannedResponseRaw\n    });\n    let BaseRaw;\n    module.link(\"../../../../server/models/raw/BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class CannedResponseRaw extends BaseRaw {\n      constructor(db) {\n        super(db, 'canned_response');\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            shortcut: 1\n          },\n          unique: true\n        }];\n      }\n      async updateCannedResponse(_id, _ref) {\n        let {\n          shortcut,\n          text,\n          tags,\n          scope,\n          userId,\n          departmentId,\n          createdBy\n        } = _ref;\n        const record = {\n          shortcut,\n          text,\n          scope,\n          tags,\n          userId,\n          departmentId,\n          createdBy\n        };\n        await this.updateOne({\n          _id\n        }, {\n          $set: record\n        });\n        return Object.assign(record, {\n          _id\n        });\n      }\n      async createCannedResponse(_ref2) {\n        let {\n          shortcut,\n          text,\n          tags,\n          scope,\n          userId,\n          departmentId,\n          createdBy,\n          _createdAt\n        } = _ref2;\n        const record = {\n          shortcut,\n          text,\n          scope,\n          tags,\n          userId,\n          departmentId,\n          createdBy,\n          _createdAt\n        };\n        const _id = (await this.insertOne(record)).insertedId;\n        return Object.assign(record, {\n          _id\n        });\n      }\n      findOneById(_id, options) {\n        const query = {\n          _id\n        };\n        return this.findOne(query, options);\n      }\n      findOneByShortcut(shortcut, options) {\n        const query = {\n          shortcut\n        };\n        return this.findOne(query, options);\n      }\n      findByCannedResponseId(_id, options) {\n        const query = {\n          _id\n        };\n        return this.find(query, options);\n      }\n      findByDepartmentId(departmentId, options) {\n        const query = {\n          scope: 'department',\n          departmentId\n        };\n        return this.find(query, options);\n      }\n      findByShortcut(shortcut, options) {\n        const query = {\n          shortcut\n        };\n        return this.find(query, options);\n      }\n      // REMOVE\n      removeById(_id) {\n        const query = {\n          _id\n        };\n        return this.deleteOne(query);\n      }\n      removeTagFromCannedResponses(tagId) {\n        const update = {\n          $pull: {\n            tags: tagId\n          }\n        };\n        return this.updateMany({}, update);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","CannedResponseRaw","BaseRaw","link","v","__reifyWaitForDeps__","constructor","db","modelIndexes","key","shortcut","unique","updateCannedResponse","_id","_ref","text","tags","scope","userId","departmentId","createdBy","record","updateOne","$set","Object","assign","createCannedResponse","_ref2","_createdAt","insertOne","insertedId","findOneById","options","query","findOne","findOneByShortcut","findByCannedResponseId","find","findByDepartmentId","findByShortcut","removeById","deleteOne","removeTagFromCannedResponses","tagId","update","$pull","updateMany","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/models/raw/CannedResponse.ts"],"sourcesContent":["import type { IOmnichannelCannedResponse } from '@rocket.chat/core-typings';\nimport type { ICannedResponseModel } from '@rocket.chat/model-typings';\nimport type { Db, DeleteResult, FindCursor, FindOptions, IndexDescription, UpdateFilter } from 'mongodb';\n\nimport { BaseRaw } from '../../../../server/models/raw/BaseRaw';\n\n// TODO need to define type for CannedResponse object\nexport class CannedResponseRaw extends BaseRaw<IOmnichannelCannedResponse> implements ICannedResponseModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'canned_response');\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tshortcut: 1,\n\t\t\t\t},\n\t\t\t\tunique: true,\n\t\t\t},\n\t\t];\n\t}\n\n\tasync updateCannedResponse(\n\t\t_id: string,\n\t\t{ shortcut, text, tags, scope, userId, departmentId, createdBy }: Omit<IOmnichannelCannedResponse, '_id' | '_updatedAt' | '_createdAt'>,\n\t): Promise<Omit<IOmnichannelCannedResponse, '_updatedAt' | '_createdAt'>> {\n\t\tconst record = {\n\t\t\tshortcut,\n\t\t\ttext,\n\t\t\tscope,\n\t\t\ttags,\n\t\t\tuserId,\n\t\t\tdepartmentId,\n\t\t\tcreatedBy,\n\t\t};\n\n\t\tawait this.updateOne({ _id }, { $set: record });\n\n\t\treturn Object.assign(record, { _id });\n\t}\n\n\tasync createCannedResponse({\n\t\tshortcut,\n\t\ttext,\n\t\ttags,\n\t\tscope,\n\t\tuserId,\n\t\tdepartmentId,\n\t\tcreatedBy,\n\t\t_createdAt,\n\t}: Omit<IOmnichannelCannedResponse, '_id' | '_updatedAt'>): Promise<Omit<IOmnichannelCannedResponse, '_updatedAt'>> {\n\t\tconst record = {\n\t\t\tshortcut,\n\t\t\ttext,\n\t\t\tscope,\n\t\t\ttags,\n\t\t\tuserId,\n\t\t\tdepartmentId,\n\t\t\tcreatedBy,\n\t\t\t_createdAt,\n\t\t};\n\n\t\tconst _id = (await this.insertOne(record)).insertedId;\n\t\treturn Object.assign(record, { _id });\n\t}\n\n\tfindOneById(_id: string, options?: FindOptions<IOmnichannelCannedResponse>): Promise<IOmnichannelCannedResponse | null> {\n\t\tconst query = { _id };\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindOneByShortcut(shortcut: string, options?: FindOptions<IOmnichannelCannedResponse>): Promise<IOmnichannelCannedResponse | null> {\n\t\tconst query = {\n\t\t\tshortcut,\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindByCannedResponseId(_id: string, options?: FindOptions<IOmnichannelCannedResponse>): FindCursor<IOmnichannelCannedResponse> {\n\t\tconst query = { _id };\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByDepartmentId(departmentId: string, options?: FindOptions<IOmnichannelCannedResponse>): FindCursor<IOmnichannelCannedResponse> {\n\t\tconst query = {\n\t\t\tscope: 'department',\n\t\t\tdepartmentId,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByShortcut(shortcut: string, options?: FindOptions<IOmnichannelCannedResponse>): FindCursor<IOmnichannelCannedResponse> {\n\t\tconst query = { shortcut };\n\n\t\treturn this.find(query, options);\n\t}\n\n\t// REMOVE\n\tremoveById(_id: string): Promise<DeleteResult> {\n\t\tconst query = { _id };\n\n\t\treturn this.deleteOne(query);\n\t}\n\n\tremoveTagFromCannedResponses(tagId: string) {\n\t\tconst update: UpdateFilter<IOmnichannelCannedResponse> = {\n\t\t\t$pull: {\n\t\t\t\ttags: tagId,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateMany({}, update);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d38a8b2b3cbfbe4301ebcf4269fe0a4d76c86249"}
