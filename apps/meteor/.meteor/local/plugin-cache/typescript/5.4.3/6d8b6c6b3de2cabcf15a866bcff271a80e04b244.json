{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/readThreads.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/readThreads.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/readThreads.ts","inputSourceMap":{"version":3,"file":"server/methods/readThreads.ts","sourceRoot":"","sources":["server/methods/readThreads.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,gCAAgC,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAC;AACrD,OAAO,EAAE,UAAU,EAAE,MAAM,oCAAoC,CAAC;AAChE,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAShD,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,WAAW,CAAC,IAAI;QACrB,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAEpB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE,CAAC;YAC1D,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,kBAAkB,EAAE;gBAC/D,MAAM,EAAE,mBAAmB;aAC3B,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,OAAO;QACR,CAAC;QAED,MAAM,IAAI,GAAG,CAAC,MAAM,MAAM,CAAC,SAAS,EAAE,CAAC,IAAI,SAAS,CAAC;QAErD,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,2BAA2B,EAAE,0BAA0B,EAAE,EAAE,MAAM,EAAE,mBAAmB,EAAE,CAAC,CAAC;QAClH,CAAC;QAED,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC;YAC7C,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,aAAa,EAAE,EAAE,MAAM,EAAE,mBAAmB,EAAE,CAAC,CAAC;QAC7F,CAAC;QAED,MAAM,SAAS,CAAC,GAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QACjE,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC;YACf,MAAM,UAAU,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;YAC9D,SAAS,CAAC,QAAQ,CAAC,mBAAmB,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5E,CAAC;IACF,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Messages, Rooms } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { canAccessRoomAsync } from '../../app/authorization/server';\nimport { settings } from '../../app/settings/server';\nimport { readThread } from '../../app/threads/server/functions';\nimport { callbacks } from '../../lib/callbacks';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\treadThreads(tmid: IMessage['_id']): void;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync readThreads(tmid) {\n\t\tcheck(tmid, String);\n\n\t\tif (!Meteor.userId() || !settings.get('Threads_enabled')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Threads Disabled', {\n\t\t\t\tmethod: 'getThreadMessages',\n\t\t\t});\n\t\t}\n\n\t\tconst thread = await Messages.findOneById(tmid);\n\t\tif (!thread) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = (await Meteor.userAsync()) ?? undefined;\n\n\t\tconst room = await Rooms.findOneById(thread.rid);\n\t\tif (!room) {\n\t\t\tthrow new Meteor.Error('error-room-does-not-exist', 'This room does not exist', { method: 'getThreadMessages' });\n\t\t}\n\n\t\tif (!(await canAccessRoomAsync(room, user))) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'getThreadMessages' });\n\t\t}\n\n\t\tawait callbacks.run('beforeReadMessages', thread.rid, user?._id);\n\t\tif (user?._id) {\n\t\t\tawait readThread({ userId: user._id, rid: thread.rid, tmid });\n\t\t\tcallbacks.runAsync('afterReadMessages', room._id, { uid: user._id, tmid });\n\t\t}\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/readThreads.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/readThreads.ts","inputSourceMap":{"version":3,"file":"server/methods/readThreads.ts","sourceRoot":"","sources":["server/methods/readThreads.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,gCAAgC,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAC;AACrD,OAAO,EAAE,UAAU,EAAE,MAAM,oCAAoC,CAAC;AAChE,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAShD,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,WAAW,CAAC,IAAI;QACrB,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAEpB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE,CAAC;YAC1D,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,kBAAkB,EAAE;gBAC/D,MAAM,EAAE,mBAAmB;aAC3B,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,OAAO;QACR,CAAC;QAED,MAAM,IAAI,GAAG,CAAC,MAAM,MAAM,CAAC,SAAS,EAAE,CAAC,IAAI,SAAS,CAAC;QAErD,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,2BAA2B,EAAE,0BAA0B,EAAE,EAAE,MAAM,EAAE,mBAAmB,EAAE,CAAC,CAAC;QAClH,CAAC;QAED,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC;YAC7C,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,aAAa,EAAE,EAAE,MAAM,EAAE,mBAAmB,EAAE,CAAC,CAAC;QAC7F,CAAC;QAED,MAAM,SAAS,CAAC,GAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QACjE,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC;YACf,MAAM,UAAU,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;YAC9D,SAAS,CAAC,QAAQ,CAAC,mBAAmB,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5E,CAAC;IACF,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Messages, Rooms } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { canAccessRoomAsync } from '../../app/authorization/server';\nimport { settings } from '../../app/settings/server';\nimport { readThread } from '../../app/threads/server/functions';\nimport { callbacks } from '../../lib/callbacks';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\treadThreads(tmid: IMessage['_id']): void;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync readThreads(tmid) {\n\t\tcheck(tmid, String);\n\n\t\tif (!Meteor.userId() || !settings.get('Threads_enabled')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Threads Disabled', {\n\t\t\t\tmethod: 'getThreadMessages',\n\t\t\t});\n\t\t}\n\n\t\tconst thread = await Messages.findOneById(tmid);\n\t\tif (!thread) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = (await Meteor.userAsync()) ?? undefined;\n\n\t\tconst room = await Rooms.findOneById(thread.rid);\n\t\tif (!room) {\n\t\t\tthrow new Meteor.Error('error-room-does-not-exist', 'This room does not exist', { method: 'getThreadMessages' });\n\t\t}\n\n\t\tif (!(await canAccessRoomAsync(room, user))) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'getThreadMessages' });\n\t\t}\n\n\t\tawait callbacks.run('beforeReadMessages', thread.rid, user?._id);\n\t\tif (user?._id) {\n\t\t\tawait readThread({ userId: user._id, rid: thread.rid, tmid });\n\t\t\tcallbacks.runAsync('afterReadMessages', room._id, { uid: user._id, tmid });\n\t\t}\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Messages, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 0);\n    let check;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let canAccessRoomAsync;\n    module.link(\"../../app/authorization/server\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      }\n    }, 3);\n    let settings;\n    module.link(\"../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 4);\n    let readThread;\n    module.link(\"../../app/threads/server/functions\", {\n      readThread(v) {\n        readThread = v;\n      }\n    }, 5);\n    let callbacks;\n    module.link(\"../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async readThreads(tmid) {\n        var _await$Meteor$userAsy;\n        check(tmid, String);\n        if (!Meteor.userId() || !settings.get('Threads_enabled')) {\n          throw new Meteor.Error('error-not-allowed', 'Threads Disabled', {\n            method: 'getThreadMessages'\n          });\n        }\n        const thread = await Messages.findOneById(tmid);\n        if (!thread) {\n          return;\n        }\n        const user = (_await$Meteor$userAsy = await Meteor.userAsync()) !== null && _await$Meteor$userAsy !== void 0 ? _await$Meteor$userAsy : undefined;\n        const room = await Rooms.findOneById(thread.rid);\n        if (!room) {\n          throw new Meteor.Error('error-room-does-not-exist', 'This room does not exist', {\n            method: 'getThreadMessages'\n          });\n        }\n        if (!(await canAccessRoomAsync(room, user))) {\n          throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n            method: 'getThreadMessages'\n          });\n        }\n        await callbacks.run('beforeReadMessages', thread.rid, user === null || user === void 0 ? void 0 : user._id);\n        if (user !== null && user !== void 0 && user._id) {\n          await readThread({\n            userId: user._id,\n            rid: thread.rid,\n            tmid\n          });\n          callbacks.runAsync('afterReadMessages', room._id, {\n            uid: user._id,\n            tmid\n          });\n        }\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Messages","Rooms","module","link","v","check","Meteor","canAccessRoomAsync","settings","readThread","callbacks","__reifyWaitForDeps__","methods","readThreads","tmid","_await$Meteor$userAsy","String","userId","get","Error","method","thread","findOneById","user","userAsync","undefined","room","rid","run","_id","runAsync","uid","__reify_async_result__","_reifyError","self","async"],"sources":["server/methods/readThreads.ts"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Messages, Rooms } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { canAccessRoomAsync } from '../../app/authorization/server';\nimport { settings } from '../../app/settings/server';\nimport { readThread } from '../../app/threads/server/functions';\nimport { callbacks } from '../../lib/callbacks';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\treadThreads(tmid: IMessage['_id']): void;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync readThreads(tmid) {\n\t\tcheck(tmid, String);\n\n\t\tif (!Meteor.userId() || !settings.get('Threads_enabled')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Threads Disabled', {\n\t\t\t\tmethod: 'getThreadMessages',\n\t\t\t});\n\t\t}\n\n\t\tconst thread = await Messages.findOneById(tmid);\n\t\tif (!thread) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = (await Meteor.userAsync()) ?? undefined;\n\n\t\tconst room = await Rooms.findOneById(thread.rid);\n\t\tif (!room) {\n\t\t\tthrow new Meteor.Error('error-room-does-not-exist', 'This room does not exist', { method: 'getThreadMessages' });\n\t\t}\n\n\t\tif (!(await canAccessRoomAsync(room, user))) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'getThreadMessages' });\n\t\t}\n\n\t\tawait callbacks.run('beforeReadMessages', thread.rid, user?._id);\n\t\tif (user?._id) {\n\t\t\tawait readThread({ userId: user._id, rid: thread.rid, tmid });\n\t\t\tcallbacks.runAsync('afterReadMessages', room._id, { uid: user._id, tmid });\n\t\t}\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"6d8b6c6b3de2cabcf15a866bcff271a80e04b244"}
