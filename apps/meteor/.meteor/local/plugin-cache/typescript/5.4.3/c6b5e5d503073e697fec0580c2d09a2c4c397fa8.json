{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/2fa/process2faReturn.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/2fa/process2faReturn.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/2fa/process2faReturn.ts","inputSourceMap":{"version":3,"file":"client/lib/2fa/process2faReturn.ts","sourceRoot":"","sources":["client/lib/2fa/process2faReturn.ts"],"names":[],"mappings":"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","sourcesContent":["import { SHA256 } from '@rocket.chat/sha256';\nimport { Meteor } from 'meteor/meteor';\nimport { lazy } from 'react';\n\nimport { imperativeModal } from '../imperativeModal';\nimport type { LoginCallback } from './overrideLoginMethod';\nimport { isTotpInvalidError, isTotpRequiredError } from './utils';\n\nconst TwoFactorModal = lazy(() => import('../../components/TwoFactorModal'));\n\nconst twoFactorMethods = ['totp', 'email', 'password'] as const;\n\ntype TwoFactorMethod = (typeof twoFactorMethods)[number];\n\nconst isTwoFactorMethod = (method: string): method is TwoFactorMethod => twoFactorMethods.includes(method as TwoFactorMethod);\n\nconst hasRequiredTwoFactorMethod = (\n\terror: Meteor.Error,\n): error is Meteor.Error & { details: { method: TwoFactorMethod; emailOrUsername?: string } } => {\n\tconst details = error.details as unknown;\n\n\treturn (\n\t\ttypeof details === 'object' &&\n\t\tdetails !== null &&\n\t\ttypeof (details as { method: unknown }).method === 'string' &&\n\t\tisTwoFactorMethod((details as { method: string }).method)\n\t);\n};\n\nfunction assertModalProps(props: {\n\tmethod: TwoFactorMethod;\n\temailOrUsername?: string;\n}): asserts props is { method: 'totp' } | { method: 'password' } | { method: 'email'; emailOrUsername: string } {\n\tif (props.method === 'email' && typeof props.emailOrUsername !== 'string') {\n\t\tthrow new Error('Invalid Two Factor method');\n\t}\n}\n\nconst getProps = (\n\tmethod: 'totp' | 'email' | 'password',\n\temailOrUsername?: { username: string } | { email: string } | { id: string } | string,\n) => {\n\tswitch (method) {\n\t\tcase 'totp':\n\t\t\treturn { method };\n\t\tcase 'email':\n\t\t\treturn {\n\t\t\t\tmethod,\n\t\t\t\temailOrUsername: typeof emailOrUsername === 'string' ? emailOrUsername : Meteor.user()?.username,\n\t\t\t};\n\t\tcase 'password':\n\t\t\treturn { method };\n\t}\n};\n\nexport async function process2faReturn({\n\terror,\n\tresult,\n\toriginalCallback,\n\tonCode,\n\temailOrUsername,\n}: {\n\terror: globalThis.Error | Meteor.Error | Meteor.TypedError | undefined;\n\tresult: unknown;\n\toriginalCallback: LoginCallback | undefined;\n\tonCode: (code: string, method: string) => void;\n\temailOrUsername: { username: string } | { email: string } | { id: string } | string | null | undefined;\n}): Promise<void> {\n\tif (!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error)) {\n\t\toriginalCallback?.(error, result);\n\t\treturn;\n\t}\n\n\tconst props = {\n\t\t...getProps(error.details.method, emailOrUsername || error.details.emailOrUsername),\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tinvalidAttempt: isTotpInvalidError(error),\n\t};\n\n\ttry {\n\t\tconst code = await invokeTwoFactorModal(props);\n\n\t\tonCode(code, props.method);\n\t} catch (error) {\n\t\tprocess2faReturn({\n\t\t\terror: error as globalThis.Error | Meteor.Error | Meteor.TypedError | undefined,\n\t\t\tresult,\n\t\t\toriginalCallback,\n\t\t\tonCode,\n\t\t\temailOrUsername,\n\t\t});\n\t}\n}\n\nexport async function process2faAsyncReturn({\n\terror,\n\tonCode,\n\temailOrUsername,\n}: {\n\terror: unknown;\n\tonCode: (code: string, method: string) => unknown | Promise<unknown>;\n\temailOrUsername: string | null | undefined;\n}): Promise<unknown> {\n\t// if the promise is rejected, we need to check if it's a 2fa error\n\t// if it's not a 2fa error, we reject the promise\n\tif (!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error)) {\n\t\tthrow error;\n\t}\n\n\tconst props = {\n\t\tmethod: error.details.method,\n\t\temailOrUsername: emailOrUsername || error.details.emailOrUsername || Meteor.user()?.username,\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tinvalidAttempt: isTotpInvalidError(error),\n\t};\n\n\tassertModalProps(props);\n\n\ttry {\n\t\tconst code = await invokeTwoFactorModal(props);\n\n\t\treturn onCode(code, props.method);\n\t} catch (error) {\n\t\treturn process2faAsyncReturn({\n\t\t\terror,\n\t\t\tonCode,\n\t\t\temailOrUsername,\n\t\t});\n\t}\n}\n\nexport const invokeTwoFactorModal = async (props: {\n\tmethod: 'totp' | 'email' | 'password';\n\temailOrUsername?: string | undefined;\n\tinvalidAttempt?: boolean;\n}) => {\n\tassertModalProps(props);\n\n\treturn new Promise<string>((resolve, reject) => {\n\t\timperativeModal.open({\n\t\t\tcomponent: TwoFactorModal,\n\t\t\tprops: {\n\t\t\t\t...props,\n\t\t\t\tonConfirm: (code: string, method: string): void => {\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t\tresolve(method === 'password' ? SHA256(code) : code);\n\t\t\t\t},\n\t\t\t\tonClose: (): void => {\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t\treject(new Meteor.Error('totp-canceled'));\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t});\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/2fa/process2faReturn.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/2fa/process2faReturn.ts","inputSourceMap":{"version":3,"file":"client/lib/2fa/process2faReturn.ts","sourceRoot":"","sources":["client/lib/2fa/process2faReturn.ts"],"names":[],"mappings":"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","sourcesContent":["import { SHA256 } from '@rocket.chat/sha256';\nimport { Meteor } from 'meteor/meteor';\nimport { lazy } from 'react';\n\nimport { imperativeModal } from '../imperativeModal';\nimport type { LoginCallback } from './overrideLoginMethod';\nimport { isTotpInvalidError, isTotpRequiredError } from './utils';\n\nconst TwoFactorModal = lazy(() => import('../../components/TwoFactorModal'));\n\nconst twoFactorMethods = ['totp', 'email', 'password'] as const;\n\ntype TwoFactorMethod = (typeof twoFactorMethods)[number];\n\nconst isTwoFactorMethod = (method: string): method is TwoFactorMethod => twoFactorMethods.includes(method as TwoFactorMethod);\n\nconst hasRequiredTwoFactorMethod = (\n\terror: Meteor.Error,\n): error is Meteor.Error & { details: { method: TwoFactorMethod; emailOrUsername?: string } } => {\n\tconst details = error.details as unknown;\n\n\treturn (\n\t\ttypeof details === 'object' &&\n\t\tdetails !== null &&\n\t\ttypeof (details as { method: unknown }).method === 'string' &&\n\t\tisTwoFactorMethod((details as { method: string }).method)\n\t);\n};\n\nfunction assertModalProps(props: {\n\tmethod: TwoFactorMethod;\n\temailOrUsername?: string;\n}): asserts props is { method: 'totp' } | { method: 'password' } | { method: 'email'; emailOrUsername: string } {\n\tif (props.method === 'email' && typeof props.emailOrUsername !== 'string') {\n\t\tthrow new Error('Invalid Two Factor method');\n\t}\n}\n\nconst getProps = (\n\tmethod: 'totp' | 'email' | 'password',\n\temailOrUsername?: { username: string } | { email: string } | { id: string } | string,\n) => {\n\tswitch (method) {\n\t\tcase 'totp':\n\t\t\treturn { method };\n\t\tcase 'email':\n\t\t\treturn {\n\t\t\t\tmethod,\n\t\t\t\temailOrUsername: typeof emailOrUsername === 'string' ? emailOrUsername : Meteor.user()?.username,\n\t\t\t};\n\t\tcase 'password':\n\t\t\treturn { method };\n\t}\n};\n\nexport async function process2faReturn({\n\terror,\n\tresult,\n\toriginalCallback,\n\tonCode,\n\temailOrUsername,\n}: {\n\terror: globalThis.Error | Meteor.Error | Meteor.TypedError | undefined;\n\tresult: unknown;\n\toriginalCallback: LoginCallback | undefined;\n\tonCode: (code: string, method: string) => void;\n\temailOrUsername: { username: string } | { email: string } | { id: string } | string | null | undefined;\n}): Promise<void> {\n\tif (!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error)) {\n\t\toriginalCallback?.(error, result);\n\t\treturn;\n\t}\n\n\tconst props = {\n\t\t...getProps(error.details.method, emailOrUsername || error.details.emailOrUsername),\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tinvalidAttempt: isTotpInvalidError(error),\n\t};\n\n\ttry {\n\t\tconst code = await invokeTwoFactorModal(props);\n\n\t\tonCode(code, props.method);\n\t} catch (error) {\n\t\tprocess2faReturn({\n\t\t\terror: error as globalThis.Error | Meteor.Error | Meteor.TypedError | undefined,\n\t\t\tresult,\n\t\t\toriginalCallback,\n\t\t\tonCode,\n\t\t\temailOrUsername,\n\t\t});\n\t}\n}\n\nexport async function process2faAsyncReturn({\n\terror,\n\tonCode,\n\temailOrUsername,\n}: {\n\terror: unknown;\n\tonCode: (code: string, method: string) => unknown | Promise<unknown>;\n\temailOrUsername: string | null | undefined;\n}): Promise<unknown> {\n\t// if the promise is rejected, we need to check if it's a 2fa error\n\t// if it's not a 2fa error, we reject the promise\n\tif (!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error)) {\n\t\tthrow error;\n\t}\n\n\tconst props = {\n\t\tmethod: error.details.method,\n\t\temailOrUsername: emailOrUsername || error.details.emailOrUsername || Meteor.user()?.username,\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tinvalidAttempt: isTotpInvalidError(error),\n\t};\n\n\tassertModalProps(props);\n\n\ttry {\n\t\tconst code = await invokeTwoFactorModal(props);\n\n\t\treturn onCode(code, props.method);\n\t} catch (error) {\n\t\treturn process2faAsyncReturn({\n\t\t\terror,\n\t\t\tonCode,\n\t\t\temailOrUsername,\n\t\t});\n\t}\n}\n\nexport const invokeTwoFactorModal = async (props: {\n\tmethod: 'totp' | 'email' | 'password';\n\temailOrUsername?: string | undefined;\n\tinvalidAttempt?: boolean;\n}) => {\n\tassertModalProps(props);\n\n\treturn new Promise<string>((resolve, reject) => {\n\t\timperativeModal.open({\n\t\t\tcomponent: TwoFactorModal,\n\t\t\tprops: {\n\t\t\t\t...props,\n\t\t\t\tonConfirm: (code: string, method: string): void => {\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t\tresolve(method === 'password' ? SHA256(code) : code);\n\t\t\t\t},\n\t\t\t\tonClose: (): void => {\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t\treject(new Meteor.Error('totp-canceled'));\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t});\n};\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 1);\nvar _typeof;\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 2);\nmodule.export({\n  process2faReturn: function () {\n    return process2faReturn;\n  },\n  process2faAsyncReturn: function () {\n    return process2faAsyncReturn;\n  },\n  invokeTwoFactorModal: function () {\n    return invokeTwoFactorModal;\n  }\n});\nvar SHA256;\nmodule.link(\"@rocket.chat/sha256\", {\n  SHA256: function (v) {\n    SHA256 = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar lazy;\nmodule.link(\"react\", {\n  lazy: function (v) {\n    lazy = v;\n  }\n}, 2);\nvar imperativeModal;\nmodule.link(\"../imperativeModal\", {\n  imperativeModal: function (v) {\n    imperativeModal = v;\n  }\n}, 3);\nvar isTotpInvalidError, isTotpRequiredError;\nmodule.link(\"./utils\", {\n  isTotpInvalidError: function (v) {\n    isTotpInvalidError = v;\n  },\n  isTotpRequiredError: function (v) {\n    isTotpRequiredError = v;\n  }\n}, 4);\nvar TwoFactorModal = /*#__PURE__*/lazy(function () {\n  return module.dynamicImport('../../components/TwoFactorModal');\n});\nvar twoFactorMethods = ['totp', 'email', 'password'];\nvar isTwoFactorMethod = function (method) {\n  return twoFactorMethods.includes(method);\n};\nvar hasRequiredTwoFactorMethod = function (error) {\n  var details = error.details;\n  return _typeof(details) === 'object' && details !== null && typeof details.method === 'string' && isTwoFactorMethod(details.method);\n};\nfunction assertModalProps(props) {\n  if (props.method === 'email' && typeof props.emailOrUsername !== 'string') {\n    throw new Error('Invalid Two Factor method');\n  }\n}\nvar getProps = function (method, emailOrUsername) {\n  var _Meteor$user;\n  switch (method) {\n    case 'totp':\n      return {\n        method: method\n      };\n    case 'email':\n      return {\n        method: method,\n        emailOrUsername: typeof emailOrUsername === 'string' ? emailOrUsername : (_Meteor$user = Meteor.user()) === null || _Meteor$user === void 0 ? void 0 : _Meteor$user.username\n      };\n    case 'password':\n      return {\n        method: method\n      };\n  }\n};\nfunction process2faReturn(_ref) {\n  var error, result, originalCallback, onCode, emailOrUsername, props, code;\n  return _regeneratorRuntime.async(function () {\n    function process2faReturn$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          error = _ref.error, result = _ref.result, originalCallback = _ref.originalCallback, onCode = _ref.onCode, emailOrUsername = _ref.emailOrUsername;\n          if (!(!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error))) {\n            _context.next = 4;\n            break;\n          }\n          originalCallback === null || originalCallback === void 0 ? void 0 : originalCallback(error, result);\n          return _context.abrupt(\"return\");\n        case 4:\n          props = _objectSpread(_objectSpread({}, getProps(error.details.method, emailOrUsername || error.details.emailOrUsername)), {}, {\n            // eslint-disable-next-line no-nested-ternary\n            invalidAttempt: isTotpInvalidError(error)\n          });\n          _context.prev = 5;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(invokeTwoFactorModal(props));\n        case 8:\n          code = _context.sent;\n          onCode(code, props.method);\n          _context.next = 15;\n          break;\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](5);\n          process2faReturn({\n            error: _context.t0,\n            result: result,\n            originalCallback: originalCallback,\n            onCode: onCode,\n            emailOrUsername: emailOrUsername\n          });\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n    return process2faReturn$;\n  }(), null, null, [[5, 12]], Promise);\n}\nfunction process2faAsyncReturn(_ref2) {\n  var _Meteor$user2;\n  var error, onCode, emailOrUsername, props, code;\n  return _regeneratorRuntime.async(function () {\n    function process2faAsyncReturn$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          error = _ref2.error, onCode = _ref2.onCode, emailOrUsername = _ref2.emailOrUsername;\n          if (!(!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error))) {\n            _context2.next = 3;\n            break;\n          }\n          throw error;\n        case 3:\n          props = {\n            method: error.details.method,\n            emailOrUsername: emailOrUsername || error.details.emailOrUsername || ((_Meteor$user2 = Meteor.user()) === null || _Meteor$user2 === void 0 ? void 0 : _Meteor$user2.username),\n            // eslint-disable-next-line no-nested-ternary\n            invalidAttempt: isTotpInvalidError(error)\n          };\n          assertModalProps(props);\n          _context2.prev = 5;\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(invokeTwoFactorModal(props));\n        case 8:\n          code = _context2.sent;\n          return _context2.abrupt(\"return\", onCode(code, props.method));\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](5);\n          return _context2.abrupt(\"return\", process2faAsyncReturn({\n            error: _context2.t0,\n            onCode: onCode,\n            emailOrUsername: emailOrUsername\n          }));\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n    return process2faAsyncReturn$;\n  }(), null, null, [[5, 12]], Promise);\n}\nvar invokeTwoFactorModal = function () {\n  function _callee(props) {\n    return _regeneratorRuntime.async(function () {\n      function _callee$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            assertModalProps(props);\n            return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n              imperativeModal.open({\n                component: TwoFactorModal,\n                props: _objectSpread(_objectSpread({}, props), {}, {\n                  onConfirm: function (code, method) {\n                    imperativeModal.close();\n                    resolve(method === 'password' ? SHA256(code) : code);\n                  },\n                  onClose: function () {\n                    imperativeModal.close();\n                    reject(new Meteor.Error('totp-canceled'));\n                  }\n                })\n              });\n            }));\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n      return _callee$;\n    }(), null, null, null, Promise);\n  }\n  return _callee;\n}();","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","_objectSpread","_typeof","export","process2faReturn","process2faAsyncReturn","invokeTwoFactorModal","SHA256","Meteor","lazy","imperativeModal","isTotpInvalidError","isTotpRequiredError","TwoFactorModal","dynamicImport","twoFactorMethods","isTwoFactorMethod","method","includes","hasRequiredTwoFactorMethod","error","details","assertModalProps","props","emailOrUsername","Error","getProps","_Meteor$user","user","username","_ref","result","originalCallback","onCode","code","async","process2faReturn$","_context","prev","next","abrupt","invalidAttempt","awrap","sent","t0","stop","Promise","_ref2","_Meteor$user2","process2faAsyncReturn$","_context2","_callee","_callee$","_context3","resolve","reject","open","component","onConfirm","close","onClose"],"sources":["client/lib/2fa/process2faReturn.ts"],"sourcesContent":["import { SHA256 } from '@rocket.chat/sha256';\nimport { Meteor } from 'meteor/meteor';\nimport { lazy } from 'react';\n\nimport { imperativeModal } from '../imperativeModal';\nimport type { LoginCallback } from './overrideLoginMethod';\nimport { isTotpInvalidError, isTotpRequiredError } from './utils';\n\nconst TwoFactorModal = lazy(() => import('../../components/TwoFactorModal'));\n\nconst twoFactorMethods = ['totp', 'email', 'password'] as const;\n\ntype TwoFactorMethod = (typeof twoFactorMethods)[number];\n\nconst isTwoFactorMethod = (method: string): method is TwoFactorMethod => twoFactorMethods.includes(method as TwoFactorMethod);\n\nconst hasRequiredTwoFactorMethod = (\n\terror: Meteor.Error,\n): error is Meteor.Error & { details: { method: TwoFactorMethod; emailOrUsername?: string } } => {\n\tconst details = error.details as unknown;\n\n\treturn (\n\t\ttypeof details === 'object' &&\n\t\tdetails !== null &&\n\t\ttypeof (details as { method: unknown }).method === 'string' &&\n\t\tisTwoFactorMethod((details as { method: string }).method)\n\t);\n};\n\nfunction assertModalProps(props: {\n\tmethod: TwoFactorMethod;\n\temailOrUsername?: string;\n}): asserts props is { method: 'totp' } | { method: 'password' } | { method: 'email'; emailOrUsername: string } {\n\tif (props.method === 'email' && typeof props.emailOrUsername !== 'string') {\n\t\tthrow new Error('Invalid Two Factor method');\n\t}\n}\n\nconst getProps = (\n\tmethod: 'totp' | 'email' | 'password',\n\temailOrUsername?: { username: string } | { email: string } | { id: string } | string,\n) => {\n\tswitch (method) {\n\t\tcase 'totp':\n\t\t\treturn { method };\n\t\tcase 'email':\n\t\t\treturn {\n\t\t\t\tmethod,\n\t\t\t\temailOrUsername: typeof emailOrUsername === 'string' ? emailOrUsername : Meteor.user()?.username,\n\t\t\t};\n\t\tcase 'password':\n\t\t\treturn { method };\n\t}\n};\n\nexport async function process2faReturn({\n\terror,\n\tresult,\n\toriginalCallback,\n\tonCode,\n\temailOrUsername,\n}: {\n\terror: globalThis.Error | Meteor.Error | Meteor.TypedError | undefined;\n\tresult: unknown;\n\toriginalCallback: LoginCallback | undefined;\n\tonCode: (code: string, method: string) => void;\n\temailOrUsername: { username: string } | { email: string } | { id: string } | string | null | undefined;\n}): Promise<void> {\n\tif (!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error)) {\n\t\toriginalCallback?.(error, result);\n\t\treturn;\n\t}\n\n\tconst props = {\n\t\t...getProps(error.details.method, emailOrUsername || error.details.emailOrUsername),\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tinvalidAttempt: isTotpInvalidError(error),\n\t};\n\n\ttry {\n\t\tconst code = await invokeTwoFactorModal(props);\n\n\t\tonCode(code, props.method);\n\t} catch (error) {\n\t\tprocess2faReturn({\n\t\t\terror: error as globalThis.Error | Meteor.Error | Meteor.TypedError | undefined,\n\t\t\tresult,\n\t\t\toriginalCallback,\n\t\t\tonCode,\n\t\t\temailOrUsername,\n\t\t});\n\t}\n}\n\nexport async function process2faAsyncReturn({\n\terror,\n\tonCode,\n\temailOrUsername,\n}: {\n\terror: unknown;\n\tonCode: (code: string, method: string) => unknown | Promise<unknown>;\n\temailOrUsername: string | null | undefined;\n}): Promise<unknown> {\n\t// if the promise is rejected, we need to check if it's a 2fa error\n\t// if it's not a 2fa error, we reject the promise\n\tif (!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error)) {\n\t\tthrow error;\n\t}\n\n\tconst props = {\n\t\tmethod: error.details.method,\n\t\temailOrUsername: emailOrUsername || error.details.emailOrUsername || Meteor.user()?.username,\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tinvalidAttempt: isTotpInvalidError(error),\n\t};\n\n\tassertModalProps(props);\n\n\ttry {\n\t\tconst code = await invokeTwoFactorModal(props);\n\n\t\treturn onCode(code, props.method);\n\t} catch (error) {\n\t\treturn process2faAsyncReturn({\n\t\t\terror,\n\t\t\tonCode,\n\t\t\temailOrUsername,\n\t\t});\n\t}\n}\n\nexport const invokeTwoFactorModal = async (props: {\n\tmethod: 'totp' | 'email' | 'password';\n\temailOrUsername?: string | undefined;\n\tinvalidAttempt?: boolean;\n}) => {\n\tassertModalProps(props);\n\n\treturn new Promise<string>((resolve, reject) => {\n\t\timperativeModal.open({\n\t\t\tcomponent: TwoFactorModal,\n\t\t\tprops: {\n\t\t\t\t...props,\n\t\t\t\tonConfirm: (code: string, method: string): void => {\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t\tresolve(method === 'password' ? SHA256(code) : code);\n\t\t\t\t},\n\t\t\t\tonClose: (): void => {\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t\treject(new Meteor.Error('totp-canceled'));\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t});\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c6b5e5d503073e697fec0580c2d09a2c4c397fa8"}
