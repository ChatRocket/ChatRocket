{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/webdav/server/lib/uploadFileToWebdav.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/webdav/server/lib/uploadFileToWebdav.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/webdav/server/lib/uploadFileToWebdav.ts","inputSourceMap":{"version":3,"file":"app/webdav/server/lib/uploadFileToWebdav.ts","sourceRoot":"","sources":["app/webdav/server/lib/uploadFileToWebdav.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AAErD,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAC9D,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAE5D,MAAM,CAAC,MAAM,kBAAkB,GAAG,KAAK,EAAE,SAAgC,EAAE,QAAyB,EAAE,IAAY,EAAiB,EAAE;IACpI,MAAM,OAAO,GAAG,MAAM,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAC5D,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;IAC1C,CAAC;IAED,MAAM,YAAY,GAAG,sBAAsB,CAAC;IAC5C,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAErC,MAAM,IAAI,GAAG,oBAAoB,CAAC,OAAO,CAAC,CAAC;IAC3C,MAAM,MAAM,GAAG,IAAI,mBAAmB,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAChE,gEAAgE;IAChE,MAAM,MAAM,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IAC3D,MAAM,MAAM,CAAC,eAAe,CAAC,GAAG,YAAY,IAAI,IAAI,EAAE,EAAE,MAAM,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACvF,CAAC,CAAC","sourcesContent":["import type { IWebdavAccount } from '@rocket.chat/core-typings';\nimport { WebdavAccounts } from '@rocket.chat/models';\n\nimport { getWebdavCredentials } from './getWebdavCredentials';\nimport { WebdavClientAdapter } from './webdavClientAdapter';\n\nexport const uploadFileToWebdav = async (accountId: IWebdavAccount['_id'], fileData: string | Buffer, name: string): Promise<void> => {\n\tconst account = await WebdavAccounts.findOneById(accountId);\n\tif (!account) {\n\t\tthrow new Error('error-invalid-account');\n\t}\n\n\tconst uploadFolder = 'Rocket.Chat Uploads/';\n\tconst buffer = Buffer.from(fileData);\n\n\tconst cred = getWebdavCredentials(account);\n\tconst client = new WebdavClientAdapter(account.serverURL, cred);\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tawait client.createDirectory(uploadFolder).catch(() => {});\n\tawait client.putFileContents(`${uploadFolder}/${name}`, buffer, { overwrite: false });\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/webdav/server/lib/uploadFileToWebdav.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/webdav/server/lib/uploadFileToWebdav.ts","inputSourceMap":{"version":3,"file":"app/webdav/server/lib/uploadFileToWebdav.ts","sourceRoot":"","sources":["app/webdav/server/lib/uploadFileToWebdav.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AAErD,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAC9D,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAE5D,MAAM,CAAC,MAAM,kBAAkB,GAAG,KAAK,EAAE,SAAgC,EAAE,QAAyB,EAAE,IAAY,EAAiB,EAAE;IACpI,MAAM,OAAO,GAAG,MAAM,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAC5D,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;IAC1C,CAAC;IAED,MAAM,YAAY,GAAG,sBAAsB,CAAC;IAC5C,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAErC,MAAM,IAAI,GAAG,oBAAoB,CAAC,OAAO,CAAC,CAAC;IAC3C,MAAM,MAAM,GAAG,IAAI,mBAAmB,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAChE,gEAAgE;IAChE,MAAM,MAAM,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IAC3D,MAAM,MAAM,CAAC,eAAe,CAAC,GAAG,YAAY,IAAI,IAAI,EAAE,EAAE,MAAM,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACvF,CAAC,CAAC","sourcesContent":["import type { IWebdavAccount } from '@rocket.chat/core-typings';\nimport { WebdavAccounts } from '@rocket.chat/models';\n\nimport { getWebdavCredentials } from './getWebdavCredentials';\nimport { WebdavClientAdapter } from './webdavClientAdapter';\n\nexport const uploadFileToWebdav = async (accountId: IWebdavAccount['_id'], fileData: string | Buffer, name: string): Promise<void> => {\n\tconst account = await WebdavAccounts.findOneById(accountId);\n\tif (!account) {\n\t\tthrow new Error('error-invalid-account');\n\t}\n\n\tconst uploadFolder = 'Rocket.Chat Uploads/';\n\tconst buffer = Buffer.from(fileData);\n\n\tconst cred = getWebdavCredentials(account);\n\tconst client = new WebdavClientAdapter(account.serverURL, cred);\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tawait client.createDirectory(uploadFolder).catch(() => {});\n\tawait client.putFileContents(`${uploadFolder}/${name}`, buffer, { overwrite: false });\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      uploadFileToWebdav: () => uploadFileToWebdav\n    });\n    let WebdavAccounts;\n    module.link(\"@rocket.chat/models\", {\n      WebdavAccounts(v) {\n        WebdavAccounts = v;\n      }\n    }, 0);\n    let getWebdavCredentials;\n    module.link(\"./getWebdavCredentials\", {\n      getWebdavCredentials(v) {\n        getWebdavCredentials = v;\n      }\n    }, 1);\n    let WebdavClientAdapter;\n    module.link(\"./webdavClientAdapter\", {\n      WebdavClientAdapter(v) {\n        WebdavClientAdapter = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const uploadFileToWebdav = async (accountId, fileData, name) => {\n      const account = await WebdavAccounts.findOneById(accountId);\n      if (!account) {\n        throw new Error('error-invalid-account');\n      }\n      const uploadFolder = 'Rocket.Chat Uploads/';\n      const buffer = Buffer.from(fileData);\n      const cred = getWebdavCredentials(account);\n      const client = new WebdavClientAdapter(account.serverURL, cred);\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      await client.createDirectory(uploadFolder).catch(() => {});\n      await client.putFileContents(\"\".concat(uploadFolder, \"/\").concat(name), buffer, {\n        overwrite: false\n      });\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","uploadFileToWebdav","WebdavAccounts","link","v","getWebdavCredentials","WebdavClientAdapter","__reifyWaitForDeps__","accountId","fileData","name","account","findOneById","Error","uploadFolder","buffer","Buffer","from","cred","client","serverURL","createDirectory","catch","putFileContents","concat","overwrite","__reify_async_result__","_reifyError","self","async"],"sources":["app/webdav/server/lib/uploadFileToWebdav.ts"],"sourcesContent":["import type { IWebdavAccount } from '@rocket.chat/core-typings';\nimport { WebdavAccounts } from '@rocket.chat/models';\n\nimport { getWebdavCredentials } from './getWebdavCredentials';\nimport { WebdavClientAdapter } from './webdavClientAdapter';\n\nexport const uploadFileToWebdav = async (accountId: IWebdavAccount['_id'], fileData: string | Buffer, name: string): Promise<void> => {\n\tconst account = await WebdavAccounts.findOneById(accountId);\n\tif (!account) {\n\t\tthrow new Error('error-invalid-account');\n\t}\n\n\tconst uploadFolder = 'Rocket.Chat Uploads/';\n\tconst buffer = Buffer.from(fileData);\n\n\tconst cred = getWebdavCredentials(account);\n\tconst client = new WebdavClientAdapter(account.serverURL, cred);\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tawait client.createDirectory(uploadFolder).catch(() => {});\n\tawait client.putFileContents(`${uploadFolder}/${name}`, buffer, { overwrite: false });\n};\n"],"mappings":";;;IACAA,MAAA,CAAOC,MAAE;MAAAC,kBAAsB,EAAAA,CAAA,KAAAA;IAAsB;IAAA,IAAAC,cAAA;IAAAH,MAAA,CAAAI,IAAA;MAAAD,eAAAE,CAAA;QAAAF,cAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,oBAAA;IAAAN,MAAA,CAAAI,IAAA;MAAAE,qBAAAD,CAAA;QAAAC,oBAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,mBAAA;IAAAP,MAAA,CAAAI,IAAA;MAAAG,oBAAAF,CAAA;QAAAE,mBAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,oBAAA,WAAAA,oBAAA;IAK9C,MAAMN,kBAAkB,GAAG,MAAAA,CAAOO,SAAgC,EAAEC,QAAyB,EAAEC,IAAY,KAAmB;MACpI,MAAMC,OAAO,GAAG,MAAMT,cAAc,CAACU,WAAW,CAACJ,SAAS,CAAC;MAC3D,IAAI,CAACG,OAAO,EAAE;QACb,MAAM,IAAIE,KAAK,CAAC,uBAAuB,CAAC;MACzC;MAEA,MAAMC,YAAY,GAAG,sBAAsB;MAC3C,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACR,QAAQ,CAAC;MAEpC,MAAMS,IAAI,GAAGb,oBAAoB,CAACM,OAAO,CAAC;MAC1C,MAAMQ,MAAM,GAAG,IAAIb,mBAAmB,CAACK,OAAO,CAACS,SAAS,EAAEF,IAAI,CAAC;MAC/D;MACA,MAAMC,MAAM,CAACE,eAAe,CAACP,YAAY,CAAC,CAACQ,KAAK,CAAC,MAAK,CAAE,CAAC,CAAC;MAC1D,MAAMH,MAAM,CAACI,eAAe,IAAAC,MAAA,CAAIV,YAAY,OAAAU,MAAA,CAAId,IAAI,GAAIK,MAAM,EAAE;QAAEU,SAAS,EAAE;MAAK,CAAE,CAAC;IACtF,CAAC;IAACC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"21983010b0115ab8e622c7f2bbf1023906d6f54c"}
