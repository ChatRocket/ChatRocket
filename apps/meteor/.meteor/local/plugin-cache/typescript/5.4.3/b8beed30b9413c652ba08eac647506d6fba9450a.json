{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file-upload/ufs/AmazonS3/server.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/file-upload/ufs/AmazonS3/server.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file-upload/ufs/AmazonS3/server.ts","inputSourceMap":{"version":3,"file":"app/file-upload/ufs/AmazonS3/server.ts","sourceRoot":"","sources":["app/file-upload/ufs/AmazonS3/server.ts"],"names":[],"mappings":"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","sourcesContent":["import stream from 'stream';\n\nimport type { IUpload } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport S3 from 'aws-sdk/clients/s3';\nimport { check } from 'meteor/check';\nimport type { OptionalId } from 'mongodb';\nimport _ from 'underscore';\n\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { UploadFS } from '../../../../server/ufs';\nimport type { StoreOptions } from '../../../../server/ufs/ufs-store';\n\nexport type S3Options = StoreOptions & {\n\tconnection: {\n\t\taccessKeyId?: string;\n\t\tsecretAccessKey?: string;\n\t\tendpoint?: string;\n\t\tsignatureVersion: string;\n\t\ts3ForcePathStyle?: boolean;\n\t\tparams: {\n\t\t\tBucket: string;\n\t\t\tACL: string;\n\t\t};\n\t\tregion: string;\n\t};\n\tURLExpiryTimeSpan: number;\n\tgetPath: (file: OptionalId<IUpload>) => string;\n};\n\nclass AmazonS3Store extends UploadFS.Store {\n\tprotected getPath: (file: IUpload) => string;\n\n\tconstructor(options: S3Options) {\n\t\t// Default options\n\t\t// options.secretAccessKey,\n\t\t// options.accessKeyId,\n\t\t// options.region,\n\t\t// options.sslEnabled // optional\n\n\t\toptions = _.extend(\n\t\t\t{\n\t\t\t\thttpOptions: {\n\t\t\t\t\ttimeout: 6000,\n\t\t\t\t\tagent: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\n\t\tsuper(options);\n\n\t\tconst classOptions = options;\n\n\t\tconst s3 = new S3(options.connection);\n\n\t\toptions.getPath =\n\t\t\toptions.getPath ||\n\t\t\tfunction (file) {\n\t\t\t\treturn file._id;\n\t\t\t};\n\n\t\tthis.getPath = function (file) {\n\t\t\tif (file.AmazonS3) {\n\t\t\t\treturn file.AmazonS3.path;\n\t\t\t}\n\t\t\t// Compatibility\n\t\t\t// TODO: Migration\n\t\t\tif (file.s3) {\n\t\t\t\treturn file.s3.path + file._id;\n\t\t\t}\n\n\t\t\treturn file._id;\n\t\t};\n\n\t\tthis.getRedirectURL = async (file, forceDownload = false) => {\n\t\t\tconst params = {\n\t\t\t\tKey: this.getPath(file),\n\t\t\t\tExpires: classOptions.URLExpiryTimeSpan,\n\t\t\t\tResponseContentDisposition: `${forceDownload ? 'attachment' : 'inline'}; filename=\"${encodeURI(file.name || '')}\"`,\n\t\t\t};\n\n\t\t\treturn s3.getSignedUrlPromise('getObject', params);\n\t\t};\n\n\t\t/**\n\t\t * Creates the file in the collection\n\t\t * @param file\n\t\t * @param callback\n\t\t * @return {string}\n\t\t */\n\t\tthis.create = async (file) => {\n\t\t\tcheck(file, Object);\n\n\t\t\tif (file._id == null) {\n\t\t\t\tfile._id = Random.id();\n\t\t\t}\n\n\t\t\tfile.AmazonS3 = {\n\t\t\t\tpath: classOptions.getPath(file),\n\t\t\t};\n\n\t\t\tfile.store = this.options.name; // assign store to file\n\n\t\t\treturn (await this.getCollection().insertOne(file)).insertedId;\n\t\t};\n\n\t\t/**\n\t\t * Removes the file\n\t\t * @param fileId\n\t\t * @param callback\n\t\t */\n\t\tthis.delete = async function (fileId) {\n\t\t\tconst file = await this.getCollection().findOne({ _id: fileId });\n\t\t\tif (!file) {\n\t\t\t\tthrow new Error('File not found');\n\t\t\t}\n\t\t\tconst params = {\n\t\t\t\tKey: this.getPath(file),\n\t\t\t\tBucket: classOptions.connection.params.Bucket,\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\treturn s3.deleteObject(params).promise();\n\t\t\t} catch (err: any) {\n\t\t\t\tSystemLogger.error(err);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Returns the file read stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getReadStream = async function (_fileId, file, options = {}) {\n\t\t\tconst params: {\n\t\t\t\tKey: string;\n\t\t\t\tBucket: string;\n\t\t\t\tRange?: string;\n\t\t\t} = {\n\t\t\t\tKey: this.getPath(file),\n\t\t\t\tBucket: classOptions.connection.params.Bucket,\n\t\t\t};\n\n\t\t\tif (options.start && options.end) {\n\t\t\t\tparams.Range = `${options.start} - ${options.end}`;\n\t\t\t}\n\n\t\t\treturn s3.getObject(params).createReadStream();\n\t\t};\n\n\t\t/**\n\t\t * Returns the file write stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getWriteStream = async function (_fileId, file /* , options*/) {\n\t\t\tconst writeStream = new stream.PassThrough();\n\t\t\t// TS does not allow but S3 requires a length property;\n\t\t\t(writeStream as unknown as any).length = file.size;\n\n\t\t\twriteStream.on('newListener', (event, listener) => {\n\t\t\t\tif (event === 'finish') {\n\t\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\t\twriteStream.removeListener(event, listener);\n\t\t\t\t\t\twriteStream.on('real_finish', listener);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\ts3.putObject(\n\t\t\t\t{\n\t\t\t\t\tKey: this.getPath(file),\n\t\t\t\t\tBody: writeStream,\n\t\t\t\t\tContentType: file.type,\n\t\t\t\t\tBucket: classOptions.connection.params.Bucket,\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tSystemLogger.error(error);\n\t\t\t\t\t}\n\n\t\t\t\t\twriteStream.emit('real_finish');\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn writeStream;\n\t\t};\n\t}\n}\n\n// Add store to UFS namespace\nUploadFS.store.AmazonS3 = AmazonS3Store;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file-upload/ufs/AmazonS3/server.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/file-upload/ufs/AmazonS3/server.ts","inputSourceMap":{"version":3,"file":"app/file-upload/ufs/AmazonS3/server.ts","sourceRoot":"","sources":["app/file-upload/ufs/AmazonS3/server.ts"],"names":[],"mappings":"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","sourcesContent":["import stream from 'stream';\n\nimport type { IUpload } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport S3 from 'aws-sdk/clients/s3';\nimport { check } from 'meteor/check';\nimport type { OptionalId } from 'mongodb';\nimport _ from 'underscore';\n\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { UploadFS } from '../../../../server/ufs';\nimport type { StoreOptions } from '../../../../server/ufs/ufs-store';\n\nexport type S3Options = StoreOptions & {\n\tconnection: {\n\t\taccessKeyId?: string;\n\t\tsecretAccessKey?: string;\n\t\tendpoint?: string;\n\t\tsignatureVersion: string;\n\t\ts3ForcePathStyle?: boolean;\n\t\tparams: {\n\t\t\tBucket: string;\n\t\t\tACL: string;\n\t\t};\n\t\tregion: string;\n\t};\n\tURLExpiryTimeSpan: number;\n\tgetPath: (file: OptionalId<IUpload>) => string;\n};\n\nclass AmazonS3Store extends UploadFS.Store {\n\tprotected getPath: (file: IUpload) => string;\n\n\tconstructor(options: S3Options) {\n\t\t// Default options\n\t\t// options.secretAccessKey,\n\t\t// options.accessKeyId,\n\t\t// options.region,\n\t\t// options.sslEnabled // optional\n\n\t\toptions = _.extend(\n\t\t\t{\n\t\t\t\thttpOptions: {\n\t\t\t\t\ttimeout: 6000,\n\t\t\t\t\tagent: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\n\t\tsuper(options);\n\n\t\tconst classOptions = options;\n\n\t\tconst s3 = new S3(options.connection);\n\n\t\toptions.getPath =\n\t\t\toptions.getPath ||\n\t\t\tfunction (file) {\n\t\t\t\treturn file._id;\n\t\t\t};\n\n\t\tthis.getPath = function (file) {\n\t\t\tif (file.AmazonS3) {\n\t\t\t\treturn file.AmazonS3.path;\n\t\t\t}\n\t\t\t// Compatibility\n\t\t\t// TODO: Migration\n\t\t\tif (file.s3) {\n\t\t\t\treturn file.s3.path + file._id;\n\t\t\t}\n\n\t\t\treturn file._id;\n\t\t};\n\n\t\tthis.getRedirectURL = async (file, forceDownload = false) => {\n\t\t\tconst params = {\n\t\t\t\tKey: this.getPath(file),\n\t\t\t\tExpires: classOptions.URLExpiryTimeSpan,\n\t\t\t\tResponseContentDisposition: `${forceDownload ? 'attachment' : 'inline'}; filename=\"${encodeURI(file.name || '')}\"`,\n\t\t\t};\n\n\t\t\treturn s3.getSignedUrlPromise('getObject', params);\n\t\t};\n\n\t\t/**\n\t\t * Creates the file in the collection\n\t\t * @param file\n\t\t * @param callback\n\t\t * @return {string}\n\t\t */\n\t\tthis.create = async (file) => {\n\t\t\tcheck(file, Object);\n\n\t\t\tif (file._id == null) {\n\t\t\t\tfile._id = Random.id();\n\t\t\t}\n\n\t\t\tfile.AmazonS3 = {\n\t\t\t\tpath: classOptions.getPath(file),\n\t\t\t};\n\n\t\t\tfile.store = this.options.name; // assign store to file\n\n\t\t\treturn (await this.getCollection().insertOne(file)).insertedId;\n\t\t};\n\n\t\t/**\n\t\t * Removes the file\n\t\t * @param fileId\n\t\t * @param callback\n\t\t */\n\t\tthis.delete = async function (fileId) {\n\t\t\tconst file = await this.getCollection().findOne({ _id: fileId });\n\t\t\tif (!file) {\n\t\t\t\tthrow new Error('File not found');\n\t\t\t}\n\t\t\tconst params = {\n\t\t\t\tKey: this.getPath(file),\n\t\t\t\tBucket: classOptions.connection.params.Bucket,\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\treturn s3.deleteObject(params).promise();\n\t\t\t} catch (err: any) {\n\t\t\t\tSystemLogger.error(err);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Returns the file read stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getReadStream = async function (_fileId, file, options = {}) {\n\t\t\tconst params: {\n\t\t\t\tKey: string;\n\t\t\t\tBucket: string;\n\t\t\t\tRange?: string;\n\t\t\t} = {\n\t\t\t\tKey: this.getPath(file),\n\t\t\t\tBucket: classOptions.connection.params.Bucket,\n\t\t\t};\n\n\t\t\tif (options.start && options.end) {\n\t\t\t\tparams.Range = `${options.start} - ${options.end}`;\n\t\t\t}\n\n\t\t\treturn s3.getObject(params).createReadStream();\n\t\t};\n\n\t\t/**\n\t\t * Returns the file write stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getWriteStream = async function (_fileId, file /* , options*/) {\n\t\t\tconst writeStream = new stream.PassThrough();\n\t\t\t// TS does not allow but S3 requires a length property;\n\t\t\t(writeStream as unknown as any).length = file.size;\n\n\t\t\twriteStream.on('newListener', (event, listener) => {\n\t\t\t\tif (event === 'finish') {\n\t\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\t\twriteStream.removeListener(event, listener);\n\t\t\t\t\t\twriteStream.on('real_finish', listener);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\ts3.putObject(\n\t\t\t\t{\n\t\t\t\t\tKey: this.getPath(file),\n\t\t\t\t\tBody: writeStream,\n\t\t\t\t\tContentType: file.type,\n\t\t\t\t\tBucket: classOptions.connection.params.Bucket,\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tSystemLogger.error(error);\n\t\t\t\t\t}\n\n\t\t\t\t\twriteStream.emit('real_finish');\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn writeStream;\n\t\t};\n\t}\n}\n\n// Add store to UFS namespace\nUploadFS.store.AmazonS3 = AmazonS3Store;\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let stream;\n    module.link(\"stream\", {\n      default(v) {\n        stream = v;\n      }\n    }, 0);\n    let Random;\n    module.link(\"@rocket.chat/random\", {\n      Random(v) {\n        Random = v;\n      }\n    }, 1);\n    let S3;\n    module.link(\"aws-sdk/clients/s3\", {\n      default(v) {\n        S3 = v;\n      }\n    }, 2);\n    let check;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      }\n    }, 3);\n    let _;\n    module.link(\"underscore\", {\n      default(v) {\n        _ = v;\n      }\n    }, 4);\n    let SystemLogger;\n    module.link(\"../../../../server/lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 5);\n    let UploadFS;\n    module.link(\"../../../../server/ufs\", {\n      UploadFS(v) {\n        UploadFS = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class AmazonS3Store extends UploadFS.Store {\n      constructor(options) {\n        var _this;\n        // Default options\n        // options.secretAccessKey,\n        // options.accessKeyId,\n        // options.region,\n        // options.sslEnabled // optional\n        options = _.extend({\n          httpOptions: {\n            timeout: 6000,\n            agent: false\n          }\n        }, options);\n        super(options);\n        _this = this;\n        this.getPath = void 0;\n        const classOptions = options;\n        const s3 = new S3(options.connection);\n        options.getPath = options.getPath || function (file) {\n          return file._id;\n        };\n        this.getPath = function (file) {\n          if (file.AmazonS3) {\n            return file.AmazonS3.path;\n          }\n          // Compatibility\n          // TODO: Migration\n          if (file.s3) {\n            return file.s3.path + file._id;\n          }\n          return file._id;\n        };\n        this.getRedirectURL = async function (file) {\n          let forceDownload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          const params = {\n            Key: _this.getPath(file),\n            Expires: classOptions.URLExpiryTimeSpan,\n            ResponseContentDisposition: \"\".concat(forceDownload ? 'attachment' : 'inline', \"; filename=\\\"\").concat(encodeURI(file.name || ''), \"\\\"\")\n          };\n          return s3.getSignedUrlPromise('getObject', params);\n        };\n        /**\n         * Creates the file in the collection\n         * @param file\n         * @param callback\n         * @return {string}\n         */\n        this.create = async file => {\n          check(file, Object);\n          if (file._id == null) {\n            file._id = Random.id();\n          }\n          file.AmazonS3 = {\n            path: classOptions.getPath(file)\n          };\n          file.store = this.options.name; // assign store to file\n          return (await this.getCollection().insertOne(file)).insertedId;\n        };\n        /**\n         * Removes the file\n         * @param fileId\n         * @param callback\n         */\n        this.delete = async function (fileId) {\n          const file = await this.getCollection().findOne({\n            _id: fileId\n          });\n          if (!file) {\n            throw new Error('File not found');\n          }\n          const params = {\n            Key: this.getPath(file),\n            Bucket: classOptions.connection.params.Bucket\n          };\n          try {\n            return s3.deleteObject(params).promise();\n          } catch (err) {\n            SystemLogger.error(err);\n          }\n        };\n        /**\n         * Returns the file read stream\n         * @param fileId\n         * @param file\n         * @param options\n         * @return {*}\n         */\n        this.getReadStream = async function (_fileId, file) {\n          let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n          const params = {\n            Key: this.getPath(file),\n            Bucket: classOptions.connection.params.Bucket\n          };\n          if (options.start && options.end) {\n            params.Range = \"\".concat(options.start, \" - \").concat(options.end);\n          }\n          return s3.getObject(params).createReadStream();\n        };\n        /**\n         * Returns the file write stream\n         * @param fileId\n         * @param file\n         * @param options\n         * @return {*}\n         */\n        this.getWriteStream = async function (_fileId, file /* , options*/) {\n          const writeStream = new stream.PassThrough();\n          // TS does not allow but S3 requires a length property;\n          writeStream.length = file.size;\n          writeStream.on('newListener', (event, listener) => {\n            if (event === 'finish') {\n              process.nextTick(() => {\n                writeStream.removeListener(event, listener);\n                writeStream.on('real_finish', listener);\n              });\n            }\n          });\n          s3.putObject({\n            Key: this.getPath(file),\n            Body: writeStream,\n            ContentType: file.type,\n            Bucket: classOptions.connection.params.Bucket\n          }, error => {\n            if (error) {\n              SystemLogger.error(error);\n            }\n            writeStream.emit('real_finish');\n          });\n          return writeStream;\n        };\n      }\n    }\n    // Add store to UFS namespace\n    UploadFS.store.AmazonS3 = AmazonS3Store;\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["stream","module","link","default","v","Random","S3","check","_","SystemLogger","UploadFS","__reifyWaitForDeps__","AmazonS3Store","Store","constructor","options","_this","extend","httpOptions","timeout","agent","this","getPath","classOptions","s3","connection","file","_id","AmazonS3","path","getRedirectURL","forceDownload","arguments","length","undefined","params","Key","Expires","URLExpiryTimeSpan","ResponseContentDisposition","concat","encodeURI","name","getSignedUrlPromise","create","Object","id","store","getCollection","insertOne","insertedId","delete","fileId","findOne","Error","Bucket","deleteObject","promise","err","error","getReadStream","_fileId","start","end","Range","getObject","createReadStream","getWriteStream","writeStream","PassThrough","size","on","event","listener","process","nextTick","removeListener","putObject","Body","ContentType","type","emit","__reify_async_result__","_reifyError","self","async"],"sources":["app/file-upload/ufs/AmazonS3/server.ts"],"sourcesContent":["import stream from 'stream';\n\nimport type { IUpload } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport S3 from 'aws-sdk/clients/s3';\nimport { check } from 'meteor/check';\nimport type { OptionalId } from 'mongodb';\nimport _ from 'underscore';\n\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { UploadFS } from '../../../../server/ufs';\nimport type { StoreOptions } from '../../../../server/ufs/ufs-store';\n\nexport type S3Options = StoreOptions & {\n\tconnection: {\n\t\taccessKeyId?: string;\n\t\tsecretAccessKey?: string;\n\t\tendpoint?: string;\n\t\tsignatureVersion: string;\n\t\ts3ForcePathStyle?: boolean;\n\t\tparams: {\n\t\t\tBucket: string;\n\t\t\tACL: string;\n\t\t};\n\t\tregion: string;\n\t};\n\tURLExpiryTimeSpan: number;\n\tgetPath: (file: OptionalId<IUpload>) => string;\n};\n\nclass AmazonS3Store extends UploadFS.Store {\n\tprotected getPath: (file: IUpload) => string;\n\n\tconstructor(options: S3Options) {\n\t\t// Default options\n\t\t// options.secretAccessKey,\n\t\t// options.accessKeyId,\n\t\t// options.region,\n\t\t// options.sslEnabled // optional\n\n\t\toptions = _.extend(\n\t\t\t{\n\t\t\t\thttpOptions: {\n\t\t\t\t\ttimeout: 6000,\n\t\t\t\t\tagent: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\n\t\tsuper(options);\n\n\t\tconst classOptions = options;\n\n\t\tconst s3 = new S3(options.connection);\n\n\t\toptions.getPath =\n\t\t\toptions.getPath ||\n\t\t\tfunction (file) {\n\t\t\t\treturn file._id;\n\t\t\t};\n\n\t\tthis.getPath = function (file) {\n\t\t\tif (file.AmazonS3) {\n\t\t\t\treturn file.AmazonS3.path;\n\t\t\t}\n\t\t\t// Compatibility\n\t\t\t// TODO: Migration\n\t\t\tif (file.s3) {\n\t\t\t\treturn file.s3.path + file._id;\n\t\t\t}\n\n\t\t\treturn file._id;\n\t\t};\n\n\t\tthis.getRedirectURL = async (file, forceDownload = false) => {\n\t\t\tconst params = {\n\t\t\t\tKey: this.getPath(file),\n\t\t\t\tExpires: classOptions.URLExpiryTimeSpan,\n\t\t\t\tResponseContentDisposition: `${forceDownload ? 'attachment' : 'inline'}; filename=\"${encodeURI(file.name || '')}\"`,\n\t\t\t};\n\n\t\t\treturn s3.getSignedUrlPromise('getObject', params);\n\t\t};\n\n\t\t/**\n\t\t * Creates the file in the collection\n\t\t * @param file\n\t\t * @param callback\n\t\t * @return {string}\n\t\t */\n\t\tthis.create = async (file) => {\n\t\t\tcheck(file, Object);\n\n\t\t\tif (file._id == null) {\n\t\t\t\tfile._id = Random.id();\n\t\t\t}\n\n\t\t\tfile.AmazonS3 = {\n\t\t\t\tpath: classOptions.getPath(file),\n\t\t\t};\n\n\t\t\tfile.store = this.options.name; // assign store to file\n\n\t\t\treturn (await this.getCollection().insertOne(file)).insertedId;\n\t\t};\n\n\t\t/**\n\t\t * Removes the file\n\t\t * @param fileId\n\t\t * @param callback\n\t\t */\n\t\tthis.delete = async function (fileId) {\n\t\t\tconst file = await this.getCollection().findOne({ _id: fileId });\n\t\t\tif (!file) {\n\t\t\t\tthrow new Error('File not found');\n\t\t\t}\n\t\t\tconst params = {\n\t\t\t\tKey: this.getPath(file),\n\t\t\t\tBucket: classOptions.connection.params.Bucket,\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\treturn s3.deleteObject(params).promise();\n\t\t\t} catch (err: any) {\n\t\t\t\tSystemLogger.error(err);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Returns the file read stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getReadStream = async function (_fileId, file, options = {}) {\n\t\t\tconst params: {\n\t\t\t\tKey: string;\n\t\t\t\tBucket: string;\n\t\t\t\tRange?: string;\n\t\t\t} = {\n\t\t\t\tKey: this.getPath(file),\n\t\t\t\tBucket: classOptions.connection.params.Bucket,\n\t\t\t};\n\n\t\t\tif (options.start && options.end) {\n\t\t\t\tparams.Range = `${options.start} - ${options.end}`;\n\t\t\t}\n\n\t\t\treturn s3.getObject(params).createReadStream();\n\t\t};\n\n\t\t/**\n\t\t * Returns the file write stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getWriteStream = async function (_fileId, file /* , options*/) {\n\t\t\tconst writeStream = new stream.PassThrough();\n\t\t\t// TS does not allow but S3 requires a length property;\n\t\t\t(writeStream as unknown as any).length = file.size;\n\n\t\t\twriteStream.on('newListener', (event, listener) => {\n\t\t\t\tif (event === 'finish') {\n\t\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\t\twriteStream.removeListener(event, listener);\n\t\t\t\t\t\twriteStream.on('real_finish', listener);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\ts3.putObject(\n\t\t\t\t{\n\t\t\t\t\tKey: this.getPath(file),\n\t\t\t\t\tBody: writeStream,\n\t\t\t\t\tContentType: file.type,\n\t\t\t\t\tBucket: classOptions.connection.params.Bucket,\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tSystemLogger.error(error);\n\t\t\t\t\t}\n\n\t\t\t\t\twriteStream.emit('real_finish');\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn writeStream;\n\t\t};\n\t}\n}\n\n// Add store to UFS namespace\nUploadFS.store.AmazonS3 = AmazonS3Store;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"b8beed30b9413c652ba08eac647506d6fba9450a"}
