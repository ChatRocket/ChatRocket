{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/lib/utils/stringUtils.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"lib/utils/stringUtils.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/lib/utils/stringUtils.ts","inputSourceMap":{"version":3,"file":"lib/utils/stringUtils.ts","sourceRoot":"","sources":["lib/utils/stringUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { sanitize } from 'dompurify';\n\nexport function truncate(str: string, length: number): string {\n\treturn str.length > length ? `${str.slice(0, length - 3)}...` : str;\n}\n\nfunction makeString(object: unknown): string {\n\tif (!object) return '';\n\treturn String(object);\n}\n\nfunction defaultToWhiteSpace(characters: unknown): string {\n\tif (!characters) return '\\\\s';\n\tif (typeof characters === 'object' && 'source' in characters) return (characters as { source: string }).source;\n\treturn `[${escapeRegExp(makeString(characters))}]`;\n}\n\nconst nativeTrim = String.prototype.trim;\nconst nativeTrimLeft = String.prototype.trimLeft;\nconst nativeTrimRight = String.prototype.trimRight;\n\nexport function trim(_str: unknown, _characters?: unknown): string {\n\tconst str = makeString(_str);\n\tif (!_characters && nativeTrim) return nativeTrim.call(str);\n\tconst characters = defaultToWhiteSpace(_characters);\n\treturn str.replace(new RegExp(`^${characters}+|${characters}+$`, 'g'), '');\n}\n\nexport function ltrim(_str: unknown, _characters: unknown): string {\n\tconst str = makeString(_str);\n\tif (!_characters && nativeTrimLeft) return nativeTrimLeft.call(str);\n\tconst characters = defaultToWhiteSpace(_characters);\n\treturn str.replace(new RegExp(`^${characters}+`), '');\n}\n\nexport function rtrim(_str: unknown, _characters: unknown): string {\n\tconst str = makeString(_str);\n\tif (!_characters && nativeTrimRight) return nativeTrimRight.call(str);\n\tconst characters = defaultToWhiteSpace(_characters);\n\treturn str.replace(new RegExp(`${characters}+$`), '');\n}\n\nexport function capitalize(_str: unknown, lowercaseRest: boolean): string {\n\tconst str = makeString(_str);\n\tconst remainingChars = !lowercaseRest ? str.slice(1) : str.slice(1).toLowerCase();\n\n\treturn str.charAt(0).toUpperCase() + remainingChars;\n}\n\nexport function stripTags(str: unknown): string {\n\treturn sanitize(makeString(str)).replace(/<\\/?[^>]+>/g, '');\n}\n\nexport function strLeft(_str: unknown, _sep: unknown): string {\n\tconst str = makeString(_str);\n\tconst sep = makeString(_sep);\n\tconst pos = !sep ? -1 : str.indexOf(sep);\n\treturn ~pos ? str.slice(0, pos) : str;\n}\n\nexport function strRight(_str: unknown, _sep: unknown): string {\n\tconst str = makeString(_str);\n\tconst sep = makeString(_sep);\n\tconst pos = !sep ? -1 : str.indexOf(sep);\n\treturn ~pos ? str.slice(pos + sep.length, str.length) : str;\n}\n\nexport function strRightBack(_str: unknown, _sep: unknown): string {\n\tconst str = makeString(_str);\n\tconst sep = makeString(_sep);\n\tconst pos = !sep ? -1 : str.lastIndexOf(sep);\n\treturn ~pos ? str.slice(pos + sep.length, str.length) : str;\n}\n\nexport function numberFormat(_number: number, dec: number, dsep?: string, tsep?: string): string {\n\tif (isNaN(_number) || _number === null || _number === undefined) return '';\n\n\tconst number = _number.toFixed(~~dec);\n\ttsep = typeof tsep === 'string' ? tsep : ',';\n\n\tconst parts = number.split('.');\n\tconst fnums = parts[0];\n\tconst decimals = parts[1] ? (dsep || '.') + parts[1] : '';\n\n\treturn fnums.replace(/(\\d)(?=(?:\\d{3})+$)/g, `$1${tsep}`) + decimals;\n}\n\nexport function pad(_str: unknown, _length: number, padStr?: string, type: 'right' | 'left' | 'both' = 'right') {\n\tconst str = makeString(_str);\n\tconst length = ~~_length;\n\n\tlet padlen = 0;\n\n\tif (!padStr) padStr = ' ';\n\telse if (padStr.length > 1) padStr = padStr.charAt(0);\n\n\tswitch (type) {\n\t\tcase 'right':\n\t\t\tpadlen = length - str.length;\n\t\t\treturn str + padStr.repeat(padlen);\n\t\tcase 'both':\n\t\t\tpadlen = length - str.length;\n\t\t\treturn padStr.repeat(Math.ceil(padlen / 2)) + str + padStr.repeat(Math.floor(padlen / 2));\n\t\tdefault: // 'left'\n\t\t\tpadlen = length - str.length;\n\t\t\treturn padStr.repeat(padlen) + str;\n\t}\n}\n\nexport function lrpad(str: unknown, length: number, padStr?: string): string {\n\treturn pad(str, length, padStr, 'both');\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/lib/utils/stringUtils.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/utils/stringUtils.ts","inputSourceMap":{"version":3,"file":"lib/utils/stringUtils.ts","sourceRoot":"","sources":["lib/utils/stringUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { sanitize } from 'dompurify';\n\nexport function truncate(str: string, length: number): string {\n\treturn str.length > length ? `${str.slice(0, length - 3)}...` : str;\n}\n\nfunction makeString(object: unknown): string {\n\tif (!object) return '';\n\treturn String(object);\n}\n\nfunction defaultToWhiteSpace(characters: unknown): string {\n\tif (!characters) return '\\\\s';\n\tif (typeof characters === 'object' && 'source' in characters) return (characters as { source: string }).source;\n\treturn `[${escapeRegExp(makeString(characters))}]`;\n}\n\nconst nativeTrim = String.prototype.trim;\nconst nativeTrimLeft = String.prototype.trimLeft;\nconst nativeTrimRight = String.prototype.trimRight;\n\nexport function trim(_str: unknown, _characters?: unknown): string {\n\tconst str = makeString(_str);\n\tif (!_characters && nativeTrim) return nativeTrim.call(str);\n\tconst characters = defaultToWhiteSpace(_characters);\n\treturn str.replace(new RegExp(`^${characters}+|${characters}+$`, 'g'), '');\n}\n\nexport function ltrim(_str: unknown, _characters: unknown): string {\n\tconst str = makeString(_str);\n\tif (!_characters && nativeTrimLeft) return nativeTrimLeft.call(str);\n\tconst characters = defaultToWhiteSpace(_characters);\n\treturn str.replace(new RegExp(`^${characters}+`), '');\n}\n\nexport function rtrim(_str: unknown, _characters: unknown): string {\n\tconst str = makeString(_str);\n\tif (!_characters && nativeTrimRight) return nativeTrimRight.call(str);\n\tconst characters = defaultToWhiteSpace(_characters);\n\treturn str.replace(new RegExp(`${characters}+$`), '');\n}\n\nexport function capitalize(_str: unknown, lowercaseRest: boolean): string {\n\tconst str = makeString(_str);\n\tconst remainingChars = !lowercaseRest ? str.slice(1) : str.slice(1).toLowerCase();\n\n\treturn str.charAt(0).toUpperCase() + remainingChars;\n}\n\nexport function stripTags(str: unknown): string {\n\treturn sanitize(makeString(str)).replace(/<\\/?[^>]+>/g, '');\n}\n\nexport function strLeft(_str: unknown, _sep: unknown): string {\n\tconst str = makeString(_str);\n\tconst sep = makeString(_sep);\n\tconst pos = !sep ? -1 : str.indexOf(sep);\n\treturn ~pos ? str.slice(0, pos) : str;\n}\n\nexport function strRight(_str: unknown, _sep: unknown): string {\n\tconst str = makeString(_str);\n\tconst sep = makeString(_sep);\n\tconst pos = !sep ? -1 : str.indexOf(sep);\n\treturn ~pos ? str.slice(pos + sep.length, str.length) : str;\n}\n\nexport function strRightBack(_str: unknown, _sep: unknown): string {\n\tconst str = makeString(_str);\n\tconst sep = makeString(_sep);\n\tconst pos = !sep ? -1 : str.lastIndexOf(sep);\n\treturn ~pos ? str.slice(pos + sep.length, str.length) : str;\n}\n\nexport function numberFormat(_number: number, dec: number, dsep?: string, tsep?: string): string {\n\tif (isNaN(_number) || _number === null || _number === undefined) return '';\n\n\tconst number = _number.toFixed(~~dec);\n\ttsep = typeof tsep === 'string' ? tsep : ',';\n\n\tconst parts = number.split('.');\n\tconst fnums = parts[0];\n\tconst decimals = parts[1] ? (dsep || '.') + parts[1] : '';\n\n\treturn fnums.replace(/(\\d)(?=(?:\\d{3})+$)/g, `$1${tsep}`) + decimals;\n}\n\nexport function pad(_str: unknown, _length: number, padStr?: string, type: 'right' | 'left' | 'both' = 'right') {\n\tconst str = makeString(_str);\n\tconst length = ~~_length;\n\n\tlet padlen = 0;\n\n\tif (!padStr) padStr = ' ';\n\telse if (padStr.length > 1) padStr = padStr.charAt(0);\n\n\tswitch (type) {\n\t\tcase 'right':\n\t\t\tpadlen = length - str.length;\n\t\t\treturn str + padStr.repeat(padlen);\n\t\tcase 'both':\n\t\t\tpadlen = length - str.length;\n\t\t\treturn padStr.repeat(Math.ceil(padlen / 2)) + str + padStr.repeat(Math.floor(padlen / 2));\n\t\tdefault: // 'left'\n\t\t\tpadlen = length - str.length;\n\t\t\treturn padStr.repeat(padlen) + str;\n\t}\n}\n\nexport function lrpad(str: unknown, length: number, padStr?: string): string {\n\treturn pad(str, length, padStr, 'both');\n}\n"]}}},"code":"module.export({\n  truncate: () => truncate,\n  trim: () => trim,\n  ltrim: () => ltrim,\n  rtrim: () => rtrim,\n  capitalize: () => capitalize,\n  stripTags: () => stripTags,\n  strLeft: () => strLeft,\n  strRight: () => strRight,\n  strRightBack: () => strRightBack,\n  numberFormat: () => numberFormat,\n  pad: () => pad,\n  lrpad: () => lrpad\n});\nlet escapeRegExp;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeRegExp(v) {\n    escapeRegExp = v;\n  }\n}, 0);\nlet sanitize;\nmodule.link(\"dompurify\", {\n  sanitize(v) {\n    sanitize = v;\n  }\n}, 1);\nfunction truncate(str, length) {\n  return str.length > length ? \"\".concat(str.slice(0, length - 3), \"...\") : str;\n}\nfunction makeString(object) {\n  if (!object) return '';\n  return String(object);\n}\nfunction defaultToWhiteSpace(characters) {\n  if (!characters) return '\\\\s';\n  if (typeof characters === 'object' && 'source' in characters) return characters.source;\n  return \"[\".concat(escapeRegExp(makeString(characters)), \"]\");\n}\nconst nativeTrim = String.prototype.trim;\nconst nativeTrimLeft = String.prototype.trimLeft;\nconst nativeTrimRight = String.prototype.trimRight;\nfunction trim(_str, _characters) {\n  const str = makeString(_str);\n  if (!_characters && nativeTrim) return nativeTrim.call(str);\n  const characters = defaultToWhiteSpace(_characters);\n  return str.replace(new RegExp(\"^\".concat(characters, \"+|\").concat(characters, \"+$\"), 'g'), '');\n}\nfunction ltrim(_str, _characters) {\n  const str = makeString(_str);\n  if (!_characters && nativeTrimLeft) return nativeTrimLeft.call(str);\n  const characters = defaultToWhiteSpace(_characters);\n  return str.replace(new RegExp(\"^\".concat(characters, \"+\")), '');\n}\nfunction rtrim(_str, _characters) {\n  const str = makeString(_str);\n  if (!_characters && nativeTrimRight) return nativeTrimRight.call(str);\n  const characters = defaultToWhiteSpace(_characters);\n  return str.replace(new RegExp(\"\".concat(characters, \"+$\")), '');\n}\nfunction capitalize(_str, lowercaseRest) {\n  const str = makeString(_str);\n  const remainingChars = !lowercaseRest ? str.slice(1) : str.slice(1).toLowerCase();\n  return str.charAt(0).toUpperCase() + remainingChars;\n}\nfunction stripTags(str) {\n  return sanitize(makeString(str)).replace(/<\\/?[^>]+>/g, '');\n}\nfunction strLeft(_str, _sep) {\n  const str = makeString(_str);\n  const sep = makeString(_sep);\n  const pos = !sep ? -1 : str.indexOf(sep);\n  return ~pos ? str.slice(0, pos) : str;\n}\nfunction strRight(_str, _sep) {\n  const str = makeString(_str);\n  const sep = makeString(_sep);\n  const pos = !sep ? -1 : str.indexOf(sep);\n  return ~pos ? str.slice(pos + sep.length, str.length) : str;\n}\nfunction strRightBack(_str, _sep) {\n  const str = makeString(_str);\n  const sep = makeString(_sep);\n  const pos = !sep ? -1 : str.lastIndexOf(sep);\n  return ~pos ? str.slice(pos + sep.length, str.length) : str;\n}\nfunction numberFormat(_number, dec, dsep, tsep) {\n  if (isNaN(_number) || _number === null || _number === undefined) return '';\n  const number = _number.toFixed(~~dec);\n  tsep = typeof tsep === 'string' ? tsep : ',';\n  const parts = number.split('.');\n  const fnums = parts[0];\n  const decimals = parts[1] ? (dsep || '.') + parts[1] : '';\n  return fnums.replace(/(\\d)(?=(?:\\d{3})+$)/g, \"$1\".concat(tsep)) + decimals;\n}\nfunction pad(_str, _length, padStr) {\n  let type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'right';\n  const str = makeString(_str);\n  const length = ~~_length;\n  let padlen = 0;\n  if (!padStr) padStr = ' ';else if (padStr.length > 1) padStr = padStr.charAt(0);\n  switch (type) {\n    case 'right':\n      padlen = length - str.length;\n      return str + padStr.repeat(padlen);\n    case 'both':\n      padlen = length - str.length;\n      return padStr.repeat(Math.ceil(padlen / 2)) + str + padStr.repeat(Math.floor(padlen / 2));\n    default:\n      // 'left'\n      padlen = length - str.length;\n      return padStr.repeat(padlen) + str;\n  }\n}\nfunction lrpad(str, length, padStr) {\n  return pad(str, length, padStr, 'both');\n}","map":{"version":3,"names":["module","export","truncate","trim","ltrim","rtrim","capitalize","stripTags","strLeft","strRight","strRightBack","numberFormat","pad","lrpad","escapeRegExp","link","v","sanitize","str","length","concat","slice","makeString","object","String","defaultToWhiteSpace","characters","source","nativeTrim","prototype","nativeTrimLeft","trimLeft","nativeTrimRight","trimRight","_str","_characters","call","replace","RegExp","lowercaseRest","remainingChars","toLowerCase","charAt","toUpperCase","_sep","sep","pos","indexOf","lastIndexOf","_number","dec","dsep","tsep","isNaN","undefined","number","toFixed","parts","split","fnums","decimals","_length","padStr","type","arguments","padlen","repeat","Math","ceil","floor"],"sources":["lib/utils/stringUtils.ts"],"sourcesContent":["import { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { sanitize } from 'dompurify';\n\nexport function truncate(str: string, length: number): string {\n\treturn str.length > length ? `${str.slice(0, length - 3)}...` : str;\n}\n\nfunction makeString(object: unknown): string {\n\tif (!object) return '';\n\treturn String(object);\n}\n\nfunction defaultToWhiteSpace(characters: unknown): string {\n\tif (!characters) return '\\\\s';\n\tif (typeof characters === 'object' && 'source' in characters) return (characters as { source: string }).source;\n\treturn `[${escapeRegExp(makeString(characters))}]`;\n}\n\nconst nativeTrim = String.prototype.trim;\nconst nativeTrimLeft = String.prototype.trimLeft;\nconst nativeTrimRight = String.prototype.trimRight;\n\nexport function trim(_str: unknown, _characters?: unknown): string {\n\tconst str = makeString(_str);\n\tif (!_characters && nativeTrim) return nativeTrim.call(str);\n\tconst characters = defaultToWhiteSpace(_characters);\n\treturn str.replace(new RegExp(`^${characters}+|${characters}+$`, 'g'), '');\n}\n\nexport function ltrim(_str: unknown, _characters: unknown): string {\n\tconst str = makeString(_str);\n\tif (!_characters && nativeTrimLeft) return nativeTrimLeft.call(str);\n\tconst characters = defaultToWhiteSpace(_characters);\n\treturn str.replace(new RegExp(`^${characters}+`), '');\n}\n\nexport function rtrim(_str: unknown, _characters: unknown): string {\n\tconst str = makeString(_str);\n\tif (!_characters && nativeTrimRight) return nativeTrimRight.call(str);\n\tconst characters = defaultToWhiteSpace(_characters);\n\treturn str.replace(new RegExp(`${characters}+$`), '');\n}\n\nexport function capitalize(_str: unknown, lowercaseRest: boolean): string {\n\tconst str = makeString(_str);\n\tconst remainingChars = !lowercaseRest ? str.slice(1) : str.slice(1).toLowerCase();\n\n\treturn str.charAt(0).toUpperCase() + remainingChars;\n}\n\nexport function stripTags(str: unknown): string {\n\treturn sanitize(makeString(str)).replace(/<\\/?[^>]+>/g, '');\n}\n\nexport function strLeft(_str: unknown, _sep: unknown): string {\n\tconst str = makeString(_str);\n\tconst sep = makeString(_sep);\n\tconst pos = !sep ? -1 : str.indexOf(sep);\n\treturn ~pos ? str.slice(0, pos) : str;\n}\n\nexport function strRight(_str: unknown, _sep: unknown): string {\n\tconst str = makeString(_str);\n\tconst sep = makeString(_sep);\n\tconst pos = !sep ? -1 : str.indexOf(sep);\n\treturn ~pos ? str.slice(pos + sep.length, str.length) : str;\n}\n\nexport function strRightBack(_str: unknown, _sep: unknown): string {\n\tconst str = makeString(_str);\n\tconst sep = makeString(_sep);\n\tconst pos = !sep ? -1 : str.lastIndexOf(sep);\n\treturn ~pos ? str.slice(pos + sep.length, str.length) : str;\n}\n\nexport function numberFormat(_number: number, dec: number, dsep?: string, tsep?: string): string {\n\tif (isNaN(_number) || _number === null || _number === undefined) return '';\n\n\tconst number = _number.toFixed(~~dec);\n\ttsep = typeof tsep === 'string' ? tsep : ',';\n\n\tconst parts = number.split('.');\n\tconst fnums = parts[0];\n\tconst decimals = parts[1] ? (dsep || '.') + parts[1] : '';\n\n\treturn fnums.replace(/(\\d)(?=(?:\\d{3})+$)/g, `$1${tsep}`) + decimals;\n}\n\nexport function pad(_str: unknown, _length: number, padStr?: string, type: 'right' | 'left' | 'both' = 'right') {\n\tconst str = makeString(_str);\n\tconst length = ~~_length;\n\n\tlet padlen = 0;\n\n\tif (!padStr) padStr = ' ';\n\telse if (padStr.length > 1) padStr = padStr.charAt(0);\n\n\tswitch (type) {\n\t\tcase 'right':\n\t\t\tpadlen = length - str.length;\n\t\t\treturn str + padStr.repeat(padlen);\n\t\tcase 'both':\n\t\t\tpadlen = length - str.length;\n\t\t\treturn padStr.repeat(Math.ceil(padlen / 2)) + str + padStr.repeat(Math.floor(padlen / 2));\n\t\tdefault: // 'left'\n\t\t\tpadlen = length - str.length;\n\t\t\treturn padStr.repeat(padlen) + str;\n\t}\n}\n\nexport function lrpad(str: unknown, length: number, padStr?: string): string {\n\treturn pad(str, length, padStr, 'both');\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"785ae677e768d95d3ab50127c9e7d7af2b99bf5b"}
