{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/business-hour/getAgentIdsForBusinessHour.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/business-hour/getAgentIdsForBusinessHour.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/business-hour/getAgentIdsForBusinessHour.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/business-hour/getAgentIdsForBusinessHour.ts","sourceRoot":"","sources":["app/livechat/server/business-hour/getAgentIdsForBusinessHour.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,wBAAwB,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE1F,MAAM,+BAA+B,GAAG,KAAK,IAAuB,EAAE;IACrE,4GAA4G;IAC5G,gEAAgE;IAEhE,MAAM,aAAa,GAAG,CAAC,MAAM,kBAAkB,CAAC,eAAe,CAAC,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IAE7H,MAAM,sBAAsB,GAAG,MAAM,wBAAwB,CAAC,yCAAyC,CAAC,aAAa,CAAC,CAAC;IAEvH,MAAM,yBAAyB,GAAG,CACjC,MAAM,KAAK,CAAC,yBAAyB,CACpC,gBAAgB,EAChB;QACC,GAAG,EAAE,EAAE,IAAI,EAAE,sBAAsB,EAAE;KACrC,EACD,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAC1B,CAAC,OAAO,EAAE,CACX,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAE1B,OAAO,yBAAyB,CAAC;AAClC,CAAC,CAAC;AAEF,MAAM,sDAAsD,GAAG,KAAK,IAAuB,EAAE;IAC5F,MAAM,oCAAoC,GAAG,CAC5C,MAAM,kBAAkB,CAAC,wCAAwC,CAAC;QACjE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE;KACtB,CAAC,CAAC,OAAO,EAAE,CACZ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAE1B,MAAM,gDAAgD,GAAG,MAAM,wBAAwB,CAAC,yCAAyC,CAChI,oCAAoC,CACpC,CAAC;IACF,OAAO,gDAAgD,CAAC;AACzD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,0BAA0B,GAAG,KAAK,IAA6B,EAAE;IAC7E,MAAM,CAAC,iBAAiB,EAAE,wCAAwC,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QACvF,+BAA+B,EAAE;QACjC,sDAAsD,EAAE;KACxD,CAAC,CAAC;IAEH,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,iBAAiB,EAAE,GAAG,wCAAwC,CAAC,CAAC,CAAC,CAAC;AAC1F,CAAC,CAAC","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { LivechatDepartment, LivechatDepartmentAgents, Users } from '@rocket.chat/models';\n\nconst getAllAgentIdsWithoutDepartment = async (): Promise<string[]> => {\n\t// Fetch departments with agents excluding archived ones (disabled ones still can be tied to business hours)\n\t// Then find the agents that are not in any of those departments\n\n\tconst departmentIds = (await LivechatDepartment.findNotArchived({ projection: { _id: 1 } }).toArray()).map(({ _id }) => _id);\n\n\tconst agentIdsWithDepartment = await LivechatDepartmentAgents.findAllAgentsConnectedToListOfDepartments(departmentIds);\n\n\tconst agentIdsWithoutDepartment = (\n\t\tawait Users.findUsersInRolesWithQuery(\n\t\t\t'livechat-agent',\n\t\t\t{\n\t\t\t\t_id: { $nin: agentIdsWithDepartment },\n\t\t\t},\n\t\t\t{ projection: { _id: 1 } },\n\t\t).toArray()\n\t).map((user) => user._id);\n\n\treturn agentIdsWithoutDepartment;\n};\n\nconst getAllAgentIdsWithDepartmentNotConnectedToBusinessHour = async (): Promise<string[]> => {\n\tconst activeDepartmentsWithoutBusinessHour = (\n\t\tawait LivechatDepartment.findActiveDepartmentsWithoutBusinessHour({\n\t\t\tprojection: { _id: 1 },\n\t\t}).toArray()\n\t).map((dept) => dept._id);\n\n\tconst agentIdsWithDepartmentNotConnectedToBusinessHour = await LivechatDepartmentAgents.findAllAgentsConnectedToListOfDepartments(\n\t\tactiveDepartmentsWithoutBusinessHour,\n\t);\n\treturn agentIdsWithDepartmentNotConnectedToBusinessHour;\n};\n\nexport const getAgentIdsForBusinessHour = async (): Promise<IUser['_id'][]> => {\n\tconst [withoutDepartment, withDepartmentNotConnectedToBusinessHour] = await Promise.all([\n\t\tgetAllAgentIdsWithoutDepartment(),\n\t\tgetAllAgentIdsWithDepartmentNotConnectedToBusinessHour(),\n\t]);\n\n\treturn [...new Set([...withoutDepartment, ...withDepartmentNotConnectedToBusinessHour])];\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/business-hour/getAgentIdsForBusinessHour.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/business-hour/getAgentIdsForBusinessHour.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/business-hour/getAgentIdsForBusinessHour.ts","sourceRoot":"","sources":["app/livechat/server/business-hour/getAgentIdsForBusinessHour.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,wBAAwB,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE1F,MAAM,+BAA+B,GAAG,KAAK,IAAuB,EAAE;IACrE,4GAA4G;IAC5G,gEAAgE;IAEhE,MAAM,aAAa,GAAG,CAAC,MAAM,kBAAkB,CAAC,eAAe,CAAC,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IAE7H,MAAM,sBAAsB,GAAG,MAAM,wBAAwB,CAAC,yCAAyC,CAAC,aAAa,CAAC,CAAC;IAEvH,MAAM,yBAAyB,GAAG,CACjC,MAAM,KAAK,CAAC,yBAAyB,CACpC,gBAAgB,EAChB;QACC,GAAG,EAAE,EAAE,IAAI,EAAE,sBAAsB,EAAE;KACrC,EACD,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAC1B,CAAC,OAAO,EAAE,CACX,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAE1B,OAAO,yBAAyB,CAAC;AAClC,CAAC,CAAC;AAEF,MAAM,sDAAsD,GAAG,KAAK,IAAuB,EAAE;IAC5F,MAAM,oCAAoC,GAAG,CAC5C,MAAM,kBAAkB,CAAC,wCAAwC,CAAC;QACjE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE;KACtB,CAAC,CAAC,OAAO,EAAE,CACZ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAE1B,MAAM,gDAAgD,GAAG,MAAM,wBAAwB,CAAC,yCAAyC,CAChI,oCAAoC,CACpC,CAAC;IACF,OAAO,gDAAgD,CAAC;AACzD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,0BAA0B,GAAG,KAAK,IAA6B,EAAE;IAC7E,MAAM,CAAC,iBAAiB,EAAE,wCAAwC,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QACvF,+BAA+B,EAAE;QACjC,sDAAsD,EAAE;KACxD,CAAC,CAAC;IAEH,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,iBAAiB,EAAE,GAAG,wCAAwC,CAAC,CAAC,CAAC,CAAC;AAC1F,CAAC,CAAC","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { LivechatDepartment, LivechatDepartmentAgents, Users } from '@rocket.chat/models';\n\nconst getAllAgentIdsWithoutDepartment = async (): Promise<string[]> => {\n\t// Fetch departments with agents excluding archived ones (disabled ones still can be tied to business hours)\n\t// Then find the agents that are not in any of those departments\n\n\tconst departmentIds = (await LivechatDepartment.findNotArchived({ projection: { _id: 1 } }).toArray()).map(({ _id }) => _id);\n\n\tconst agentIdsWithDepartment = await LivechatDepartmentAgents.findAllAgentsConnectedToListOfDepartments(departmentIds);\n\n\tconst agentIdsWithoutDepartment = (\n\t\tawait Users.findUsersInRolesWithQuery(\n\t\t\t'livechat-agent',\n\t\t\t{\n\t\t\t\t_id: { $nin: agentIdsWithDepartment },\n\t\t\t},\n\t\t\t{ projection: { _id: 1 } },\n\t\t).toArray()\n\t).map((user) => user._id);\n\n\treturn agentIdsWithoutDepartment;\n};\n\nconst getAllAgentIdsWithDepartmentNotConnectedToBusinessHour = async (): Promise<string[]> => {\n\tconst activeDepartmentsWithoutBusinessHour = (\n\t\tawait LivechatDepartment.findActiveDepartmentsWithoutBusinessHour({\n\t\t\tprojection: { _id: 1 },\n\t\t}).toArray()\n\t).map((dept) => dept._id);\n\n\tconst agentIdsWithDepartmentNotConnectedToBusinessHour = await LivechatDepartmentAgents.findAllAgentsConnectedToListOfDepartments(\n\t\tactiveDepartmentsWithoutBusinessHour,\n\t);\n\treturn agentIdsWithDepartmentNotConnectedToBusinessHour;\n};\n\nexport const getAgentIdsForBusinessHour = async (): Promise<IUser['_id'][]> => {\n\tconst [withoutDepartment, withDepartmentNotConnectedToBusinessHour] = await Promise.all([\n\t\tgetAllAgentIdsWithoutDepartment(),\n\t\tgetAllAgentIdsWithDepartmentNotConnectedToBusinessHour(),\n\t]);\n\n\treturn [...new Set([...withoutDepartment, ...withDepartmentNotConnectedToBusinessHour])];\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      getAgentIdsForBusinessHour: () => getAgentIdsForBusinessHour\n    });\n    let LivechatDepartment, LivechatDepartmentAgents, Users;\n    module.link(\"@rocket.chat/models\", {\n      LivechatDepartment(v) {\n        LivechatDepartment = v;\n      },\n      LivechatDepartmentAgents(v) {\n        LivechatDepartmentAgents = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const getAllAgentIdsWithoutDepartment = async () => {\n      // Fetch departments with agents excluding archived ones (disabled ones still can be tied to business hours)\n      // Then find the agents that are not in any of those departments\n      const departmentIds = (await LivechatDepartment.findNotArchived({\n        projection: {\n          _id: 1\n        }\n      }).toArray()).map(_ref => {\n        let {\n          _id\n        } = _ref;\n        return _id;\n      });\n      const agentIdsWithDepartment = await LivechatDepartmentAgents.findAllAgentsConnectedToListOfDepartments(departmentIds);\n      const agentIdsWithoutDepartment = (await Users.findUsersInRolesWithQuery('livechat-agent', {\n        _id: {\n          $nin: agentIdsWithDepartment\n        }\n      }, {\n        projection: {\n          _id: 1\n        }\n      }).toArray()).map(user => user._id);\n      return agentIdsWithoutDepartment;\n    };\n    const getAllAgentIdsWithDepartmentNotConnectedToBusinessHour = async () => {\n      const activeDepartmentsWithoutBusinessHour = (await LivechatDepartment.findActiveDepartmentsWithoutBusinessHour({\n        projection: {\n          _id: 1\n        }\n      }).toArray()).map(dept => dept._id);\n      const agentIdsWithDepartmentNotConnectedToBusinessHour = await LivechatDepartmentAgents.findAllAgentsConnectedToListOfDepartments(activeDepartmentsWithoutBusinessHour);\n      return agentIdsWithDepartmentNotConnectedToBusinessHour;\n    };\n    const getAgentIdsForBusinessHour = async () => {\n      const [withoutDepartment, withDepartmentNotConnectedToBusinessHour] = await Promise.all([getAllAgentIdsWithoutDepartment(), getAllAgentIdsWithDepartmentNotConnectedToBusinessHour()]);\n      return [...new Set([...withoutDepartment, ...withDepartmentNotConnectedToBusinessHour])];\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","getAgentIdsForBusinessHour","LivechatDepartment","LivechatDepartmentAgents","Users","link","v","__reifyWaitForDeps__","getAllAgentIdsWithoutDepartment","departmentIds","findNotArchived","projection","_id","toArray","map","_ref","agentIdsWithDepartment","findAllAgentsConnectedToListOfDepartments","agentIdsWithoutDepartment","findUsersInRolesWithQuery","$nin","user","getAllAgentIdsWithDepartmentNotConnectedToBusinessHour","activeDepartmentsWithoutBusinessHour","findActiveDepartmentsWithoutBusinessHour","dept","agentIdsWithDepartmentNotConnectedToBusinessHour","withoutDepartment","withDepartmentNotConnectedToBusinessHour","Promise","all","Set","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/business-hour/getAgentIdsForBusinessHour.ts"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { LivechatDepartment, LivechatDepartmentAgents, Users } from '@rocket.chat/models';\n\nconst getAllAgentIdsWithoutDepartment = async (): Promise<string[]> => {\n\t// Fetch departments with agents excluding archived ones (disabled ones still can be tied to business hours)\n\t// Then find the agents that are not in any of those departments\n\n\tconst departmentIds = (await LivechatDepartment.findNotArchived({ projection: { _id: 1 } }).toArray()).map(({ _id }) => _id);\n\n\tconst agentIdsWithDepartment = await LivechatDepartmentAgents.findAllAgentsConnectedToListOfDepartments(departmentIds);\n\n\tconst agentIdsWithoutDepartment = (\n\t\tawait Users.findUsersInRolesWithQuery(\n\t\t\t'livechat-agent',\n\t\t\t{\n\t\t\t\t_id: { $nin: agentIdsWithDepartment },\n\t\t\t},\n\t\t\t{ projection: { _id: 1 } },\n\t\t).toArray()\n\t).map((user) => user._id);\n\n\treturn agentIdsWithoutDepartment;\n};\n\nconst getAllAgentIdsWithDepartmentNotConnectedToBusinessHour = async (): Promise<string[]> => {\n\tconst activeDepartmentsWithoutBusinessHour = (\n\t\tawait LivechatDepartment.findActiveDepartmentsWithoutBusinessHour({\n\t\t\tprojection: { _id: 1 },\n\t\t}).toArray()\n\t).map((dept) => dept._id);\n\n\tconst agentIdsWithDepartmentNotConnectedToBusinessHour = await LivechatDepartmentAgents.findAllAgentsConnectedToListOfDepartments(\n\t\tactiveDepartmentsWithoutBusinessHour,\n\t);\n\treturn agentIdsWithDepartmentNotConnectedToBusinessHour;\n};\n\nexport const getAgentIdsForBusinessHour = async (): Promise<IUser['_id'][]> => {\n\tconst [withoutDepartment, withDepartmentNotConnectedToBusinessHour] = await Promise.all([\n\t\tgetAllAgentIdsWithoutDepartment(),\n\t\tgetAllAgentIdsWithDepartmentNotConnectedToBusinessHour(),\n\t]);\n\n\treturn [...new Set([...withoutDepartment, ...withDepartmentNotConnectedToBusinessHour])];\n};\n"],"mappings":";;;IACAA,MAAA,CAAOC,MAAE;MAAAC,0BAAoB,EAAAA,CAAA,KAAAA;IAAuC;IAAA,IAAAC,kBAAsB,EAAAC,wBAAA,EAAAC,KAAA;IAAAL,MAAA,CAAAM,IAAA;MAAAH,mBAAAI,CAAA;QAAAJ,kBAAA,GAAAI,CAAA;MAAA;MAAAH,yBAAAG,CAAA;QAAAH,wBAAA,GAAAG,CAAA;MAAA;MAAAF,MAAAE,CAAA;QAAAF,KAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,oBAAA,WAAAA,oBAAA;IAE1F,MAAMC,+BAA+B,GAAG,MAAAA,CAAA,KAA8B;MACrE;MACA;MAEA,MAAMC,aAAa,GAAG,CAAC,MAAMP,kBAAkB,CAACQ,eAAe,CAAC;QAAEC,UAAU,EAAE;UAAEC,GAAG,EAAE;QAAC;MAAE,CAAE,CAAC,CAACC,OAAO,EAAE,EAAEC,GAAG,CAACC,IAAA;QAAA,IAAC;UAAEH;QAAG,CAAE,GAAAG,IAAA;QAAA,OAAKH,GAAG;MAAA,EAAC;MAE5H,MAAMI,sBAAsB,GAAG,MAAMb,wBAAwB,CAACc,yCAAyC,CAACR,aAAa,CAAC;MAEtH,MAAMS,yBAAyB,GAAG,CACjC,MAAMd,KAAK,CAACe,yBAAyB,CACpC,gBAAgB,EAChB;QACCP,GAAG,EAAE;UAAEQ,IAAI,EAAEJ;QAAsB;OACnC,EACD;QAAEL,UAAU,EAAE;UAAEC,GAAG,EAAE;QAAC;MAAE,CAAE,CAC1B,CAACC,OAAO,EAAE,EACVC,GAAG,CAAEO,IAAI,IAAKA,IAAI,CAACT,GAAG,CAAC;MAEzB,OAAOM,yBAAyB;IACjC,CAAC;IAED,MAAMI,sDAAsD,GAAG,MAAAA,CAAA,KAA8B;MAC5F,MAAMC,oCAAoC,GAAG,CAC5C,MAAMrB,kBAAkB,CAACsB,wCAAwC,CAAC;QACjEb,UAAU,EAAE;UAAEC,GAAG,EAAE;QAAC;OACpB,CAAC,CAACC,OAAO,EAAE,EACXC,GAAG,CAAEW,IAAI,IAAKA,IAAI,CAACb,GAAG,CAAC;MAEzB,MAAMc,gDAAgD,GAAG,MAAMvB,wBAAwB,CAACc,yCAAyC,CAChIM,oCAAoC,CACpC;MACD,OAAOG,gDAAgD;IACxD,CAAC;IAEM,MAAMzB,0BAA0B,GAAG,MAAAA,CAAA,KAAoC;MAC7E,MAAM,CAAC0B,iBAAiB,EAAEC,wCAAwC,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACvFtB,+BAA+B,EAAE,EACjCc,sDAAsD,EAAE,CACxD,CAAC;MAEF,OAAO,CAAC,GAAG,IAAIS,GAAG,CAAC,CAAC,GAAGJ,iBAAiB,EAAE,GAAGC,wCAAwC,CAAC,CAAC,CAAC;IACzF,CAAC;IAACI,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ddf9975a47eeb7971d7cfd073a6f846bec71dde6"}
