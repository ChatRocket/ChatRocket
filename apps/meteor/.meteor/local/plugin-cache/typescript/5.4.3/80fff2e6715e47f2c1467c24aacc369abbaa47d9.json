{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/voip/server/startup.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/voip/server/startup.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/voip/server/startup.ts","inputSourceMap":{"version":3,"file":"app/voip/server/startup.ts","sourceRoot":"","sources":["app/voip/server/startup.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAE1D,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEjD,QAAQ,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,EAAE,KAAc,EAAE,EAAE;IACvD,IAAI,CAAC;QACJ,IAAI,KAAK,EAAE,CAAC;YACX,MAAM,YAAY,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC;aAAM,CAAC;YACP,MAAM,YAAY,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC;IACF,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACZ,aAAa;IACd,CAAC;AACF,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,cAAc,CACtB,CAAC,6BAA6B,EAAE,6BAA6B,EAAE,iCAAiC,EAAE,iCAAiC,CAAC,EACpI,KAAK,EAAE,OAAO,EAAE,EAAE;IACjB,0IAA0I;IAC1I,iIAAiI;IACjI,IAAI,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC;QAClC,IAAI,CAAC;YACJ,MAAM,YAAY,CAAC,OAAO,EAAE,CAAC;QAC9B,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACZ,aAAa;QACd,CAAC;IACF,CAAC;AACF,CAAC,CACD,CAAC","sourcesContent":["import { VoipAsterisk } from '@rocket.chat/core-services';\n\nimport { settings } from '../../settings/server';\n\nsettings.watch('VoIP_Enabled', async (value: boolean) => {\n\ttry {\n\t\tif (value) {\n\t\t\tawait VoipAsterisk.init();\n\t\t} else {\n\t\t\tawait VoipAsterisk.stop();\n\t\t}\n\t} catch (e) {\n\t\t// do nothing\n\t}\n});\n\nsettings.changeMultiple(\n\t['VoIP_Management_Server_Host', 'VoIP_Management_Server_Port', 'VoIP_Management_Server_Username', 'VoIP_Management_Server_Password'],\n\tasync (_values) => {\n\t\t// Here, if 4 settings are changed at once, we're getting 4 diff callbacks. The good part is that all callbacks are fired almost instantly\n\t\t// So to avoid stopping/starting voip too often, we debounce the call and restart 1 second after the last setting has reached us.\n\t\tif (settings.get('VoIP_Enabled')) {\n\t\t\ttry {\n\t\t\t\tawait VoipAsterisk.refresh();\n\t\t\t} catch (e) {\n\t\t\t\t// do nothing\n\t\t\t}\n\t\t}\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/voip/server/startup.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/voip/server/startup.ts","inputSourceMap":{"version":3,"file":"app/voip/server/startup.ts","sourceRoot":"","sources":["app/voip/server/startup.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAE1D,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEjD,QAAQ,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,EAAE,KAAc,EAAE,EAAE;IACvD,IAAI,CAAC;QACJ,IAAI,KAAK,EAAE,CAAC;YACX,MAAM,YAAY,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC;aAAM,CAAC;YACP,MAAM,YAAY,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC;IACF,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACZ,aAAa;IACd,CAAC;AACF,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,cAAc,CACtB,CAAC,6BAA6B,EAAE,6BAA6B,EAAE,iCAAiC,EAAE,iCAAiC,CAAC,EACpI,KAAK,EAAE,OAAO,EAAE,EAAE;IACjB,0IAA0I;IAC1I,iIAAiI;IACjI,IAAI,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC;QAClC,IAAI,CAAC;YACJ,MAAM,YAAY,CAAC,OAAO,EAAE,CAAC;QAC9B,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACZ,aAAa;QACd,CAAC;IACF,CAAC;AACF,CAAC,CACD,CAAC","sourcesContent":["import { VoipAsterisk } from '@rocket.chat/core-services';\n\nimport { settings } from '../../settings/server';\n\nsettings.watch('VoIP_Enabled', async (value: boolean) => {\n\ttry {\n\t\tif (value) {\n\t\t\tawait VoipAsterisk.init();\n\t\t} else {\n\t\t\tawait VoipAsterisk.stop();\n\t\t}\n\t} catch (e) {\n\t\t// do nothing\n\t}\n});\n\nsettings.changeMultiple(\n\t['VoIP_Management_Server_Host', 'VoIP_Management_Server_Port', 'VoIP_Management_Server_Username', 'VoIP_Management_Server_Password'],\n\tasync (_values) => {\n\t\t// Here, if 4 settings are changed at once, we're getting 4 diff callbacks. The good part is that all callbacks are fired almost instantly\n\t\t// So to avoid stopping/starting voip too often, we debounce the call and restart 1 second after the last setting has reached us.\n\t\tif (settings.get('VoIP_Enabled')) {\n\t\t\ttry {\n\t\t\t\tawait VoipAsterisk.refresh();\n\t\t\t} catch (e) {\n\t\t\t\t// do nothing\n\t\t\t}\n\t\t}\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let VoipAsterisk;\n    module.link(\"@rocket.chat/core-services\", {\n      VoipAsterisk(v) {\n        VoipAsterisk = v;\n      }\n    }, 0);\n    let settings;\n    module.link(\"../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    settings.watch('VoIP_Enabled', async value => {\n      try {\n        if (value) {\n          await VoipAsterisk.init();\n        } else {\n          await VoipAsterisk.stop();\n        }\n      } catch (e) {\n        // do nothing\n      }\n    });\n    settings.changeMultiple(['VoIP_Management_Server_Host', 'VoIP_Management_Server_Port', 'VoIP_Management_Server_Username', 'VoIP_Management_Server_Password'], async _values => {\n      // Here, if 4 settings are changed at once, we're getting 4 diff callbacks. The good part is that all callbacks are fired almost instantly\n      // So to avoid stopping/starting voip too often, we debounce the call and restart 1 second after the last setting has reached us.\n      if (settings.get('VoIP_Enabled')) {\n        try {\n          await VoipAsterisk.refresh();\n        } catch (e) {\n          // do nothing\n        }\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["VoipAsterisk","module","link","v","settings","__reifyWaitForDeps__","watch","value","init","stop","e","changeMultiple","_values","get","refresh","__reify_async_result__","_reifyError","self","async"],"sources":["app/voip/server/startup.ts"],"sourcesContent":["import { VoipAsterisk } from '@rocket.chat/core-services';\n\nimport { settings } from '../../settings/server';\n\nsettings.watch('VoIP_Enabled', async (value: boolean) => {\n\ttry {\n\t\tif (value) {\n\t\t\tawait VoipAsterisk.init();\n\t\t} else {\n\t\t\tawait VoipAsterisk.stop();\n\t\t}\n\t} catch (e) {\n\t\t// do nothing\n\t}\n});\n\nsettings.changeMultiple(\n\t['VoIP_Management_Server_Host', 'VoIP_Management_Server_Port', 'VoIP_Management_Server_Username', 'VoIP_Management_Server_Password'],\n\tasync (_values) => {\n\t\t// Here, if 4 settings are changed at once, we're getting 4 diff callbacks. The good part is that all callbacks are fired almost instantly\n\t\t// So to avoid stopping/starting voip too often, we debounce the call and restart 1 second after the last setting has reached us.\n\t\tif (settings.get('VoIP_Enabled')) {\n\t\t\ttry {\n\t\t\t\tawait VoipAsterisk.refresh();\n\t\t\t} catch (e) {\n\t\t\t\t// do nothing\n\t\t\t}\n\t\t}\n\t},\n);\n"],"mappings":";;;IAAA,IAAAA,YAAS;IAAAC,MAAc,CAAAC,IAAA,CAAM,4BAA4B,EAAC;MAAAF,aAAAG,CAAA;QAAAH,YAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,QAAA;IAAAH,MAAA,CAAAC,IAAA;MAAAE,SAAAD,CAAA;QAAAC,QAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,oBAAA,WAAAA,oBAAA;IAI1DD,QAAQ,CAACE,KAAK,CAAC,cAAc,EAAE,MAAOC,KAAc,IAAI;MACvD,IAAI;QACH,IAAIA,KAAK,EAAE;UACV,MAAMP,YAAY,CAACQ,IAAI,EAAE;QAC1B,CAAC,MAAM;UACN,MAAMR,YAAY,CAACS,IAAI,EAAE;QAC1B;MACD,CAAC,CAAC,OAAOC,CAAC,EAAE;QACX;MAAA;IAEF,CAAC,CAAC;IAEFN,QAAQ,CAACO,cAAc,CACtB,CAAC,6BAA6B,EAAE,6BAA6B,EAAE,iCAAiC,EAAE,iCAAiC,CAAC,EACpI,MAAOC,OAAO,IAAI;MACjB;MACA;MACA,IAAIR,QAAQ,CAACS,GAAG,CAAC,cAAc,CAAC,EAAE;QACjC,IAAI;UACH,MAAMb,YAAY,CAACc,OAAO,EAAE;QAC7B,CAAC,CAAC,OAAOJ,CAAC,EAAE;UACX;QAAA;MAEF;IACD,CAAC,CACD;IAACK,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"80fff2e6715e47f2c1467c24aacc369abbaa47d9"}
