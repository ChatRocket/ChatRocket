{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/lib/visitors.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/api/lib/visitors.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/lib/visitors.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/lib/visitors.ts","sourceRoot":"","sources":["app/livechat/server/api/lib/visitors.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatVisitor, IMessage, IOmnichannelRoom, IRoom, IUser, IVisitor } from '@rocket.chat/core-typings';\nimport { LivechatVisitors, Messages, LivechatRooms, LivechatCustomField } from '@rocket.chat/models';\nimport type { FindOptions } from 'mongodb';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { canAccessRoomAsync } from '../../../../authorization/server/functions/canAccessRoom';\n\nexport async function findVisitorInfo({ visitorId }: { visitorId: IVisitor['_id'] }) {\n\tconst visitor = await LivechatVisitors.findOneEnabledById(visitorId);\n\tif (!visitor) {\n\t\tthrow new Error('visitor-not-found');\n\t}\n\n\treturn {\n\t\tvisitor,\n\t};\n}\n\nexport async function findVisitedPages({\n\troomId,\n\tpagination: { offset, count, sort },\n}: {\n\troomId: IRoom['_id'];\n\tpagination: { offset: number; count: number; sort: FindOptions<IMessage>['sort'] };\n}) {\n\tconst room = await LivechatRooms.findOneById(roomId);\n\tif (!room) {\n\t\tthrow new Error('invalid-room');\n\t}\n\tconst { cursor, totalCount } = Messages.findPaginatedByRoomIdAndType(room._id, 'livechat_navigation_history', {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [pages, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tpages,\n\t\tcount: pages.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findChatHistory({\n\tuserId,\n\troomId,\n\tvisitorId,\n\tpagination: { offset, count, sort },\n}: {\n\tuserId: IUser['_id'];\n\troomId: IRoom['_id'];\n\tvisitorId: IVisitor['_id'];\n\tpagination: { offset: number; count: number; sort: FindOptions<IOmnichannelRoom>['sort'] };\n}) {\n\tconst room = await LivechatRooms.findOneById(roomId);\n\tif (!room) {\n\t\tthrow new Error('invalid-room');\n\t}\n\tif (!(await canAccessRoomAsync(room, { _id: userId }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\n\tconst extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n\tconst { cursor, totalCount } = LivechatRooms.findPaginatedByVisitorId(\n\t\tvisitorId,\n\t\t{\n\t\t\tsort: sort || { ts: -1 },\n\t\t\tskip: offset,\n\t\t\tlimit: count,\n\t\t},\n\t\textraQuery,\n\t);\n\n\tconst [history, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\thistory,\n\t\tcount: history.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function searchChats({\n\tuserId,\n\troomId,\n\tvisitorId,\n\tsearchText,\n\tclosedChatsOnly,\n\tservedChatsOnly: served,\n\tsource,\n\tpagination: { offset, count, sort },\n}: {\n\tuserId: IUser['_id'];\n\troomId: IRoom['_id'];\n\tvisitorId: IVisitor['_id'];\n\tsearchText?: string;\n\tclosedChatsOnly?: string;\n\tservedChatsOnly?: string;\n\tsource?: string;\n\tpagination: { offset: number; count: number; sort: FindOptions<IOmnichannelRoom>['sort'] };\n}) {\n\tconst room = await LivechatRooms.findOneById(roomId);\n\tif (!room) {\n\t\tthrow new Error('invalid-room');\n\t}\n\n\tif (!(await canAccessRoomAsync(room, { _id: userId }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\n\tconst options = {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t};\n\n\tconst [total] = await LivechatRooms.findRoomsByVisitorIdAndMessageWithCriteria({\n\t\tvisitorId,\n\t\topen: closedChatsOnly !== 'true',\n\t\tserved: served === 'true',\n\t\tsearchText,\n\t\tonlyCount: true,\n\t\tsource,\n\t}).toArray();\n\tconst cursor = await LivechatRooms.findRoomsByVisitorIdAndMessageWithCriteria({\n\t\tvisitorId,\n\t\topen: closedChatsOnly !== 'true',\n\t\tserved: served === 'true',\n\t\tsearchText,\n\t\toptions,\n\t\tsource,\n\t});\n\n\tconst history = await cursor.toArray();\n\n\treturn {\n\t\thistory,\n\t\tcount: history.length,\n\t\toffset,\n\t\ttotal: total?.count ?? 0,\n\t};\n}\n\nexport async function findVisitorsToAutocomplete({\n\tselector,\n}: {\n\tselector: {\n\t\texceptions?: ILivechatVisitor['_id'][];\n\t\tconditions?: Record<string, unknown>;\n\t\tterm: string;\n\t};\n}) {\n\tconst { exceptions = [], conditions = {} } = selector;\n\n\tconst options: FindOptions<ILivechatVisitor> = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tname: 1,\n\t\t\tusername: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst items = await LivechatVisitors.findByNameRegexWithExceptionsAndConditions(selector.term, exceptions, conditions, options).toArray();\n\treturn {\n\t\titems,\n\t};\n}\n\nexport async function findVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField({\n\temailOrPhone,\n\tnameOrUsername,\n\tpagination: { offset, count, sort },\n}: {\n\temailOrPhone?: string;\n\tnameOrUsername?: RegExp;\n\tpagination: { offset: number; count: number; sort: FindOptions<IVisitor>['sort'] };\n}) {\n\tconst allowedCF = await LivechatCustomField.findMatchingCustomFields('visitor', true, { projection: { _id: 1 } })\n\t\t.map((cf) => cf._id)\n\t\t.toArray();\n\n\tconst { cursor, totalCount } = await LivechatVisitors.findPaginatedVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField(\n\t\temailOrPhone,\n\t\tnameOrUsername,\n\t\tallowedCF,\n\t\t{\n\t\t\tsort: sort || { ts: -1 },\n\t\t\tskip: offset,\n\t\t\tlimit: count,\n\t\t\tprojection: {\n\t\t\t\tusername: 1,\n\t\t\t\tname: 1,\n\t\t\t\tphone: 1,\n\t\t\t\tlivechatData: 1,\n\t\t\t\tvisitorEmails: 1,\n\t\t\t\tlastChat: 1,\n\t\t\t},\n\t\t},\n\t);\n\n\tconst [visitors, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tvisitors,\n\t\tcount: visitors.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/lib/visitors.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/api/lib/visitors.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/lib/visitors.ts","sourceRoot":"","sources":["app/livechat/server/api/lib/visitors.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatVisitor, IMessage, IOmnichannelRoom, IRoom, IUser, IVisitor } from '@rocket.chat/core-typings';\nimport { LivechatVisitors, Messages, LivechatRooms, LivechatCustomField } from '@rocket.chat/models';\nimport type { FindOptions } from 'mongodb';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { canAccessRoomAsync } from '../../../../authorization/server/functions/canAccessRoom';\n\nexport async function findVisitorInfo({ visitorId }: { visitorId: IVisitor['_id'] }) {\n\tconst visitor = await LivechatVisitors.findOneEnabledById(visitorId);\n\tif (!visitor) {\n\t\tthrow new Error('visitor-not-found');\n\t}\n\n\treturn {\n\t\tvisitor,\n\t};\n}\n\nexport async function findVisitedPages({\n\troomId,\n\tpagination: { offset, count, sort },\n}: {\n\troomId: IRoom['_id'];\n\tpagination: { offset: number; count: number; sort: FindOptions<IMessage>['sort'] };\n}) {\n\tconst room = await LivechatRooms.findOneById(roomId);\n\tif (!room) {\n\t\tthrow new Error('invalid-room');\n\t}\n\tconst { cursor, totalCount } = Messages.findPaginatedByRoomIdAndType(room._id, 'livechat_navigation_history', {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [pages, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tpages,\n\t\tcount: pages.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findChatHistory({\n\tuserId,\n\troomId,\n\tvisitorId,\n\tpagination: { offset, count, sort },\n}: {\n\tuserId: IUser['_id'];\n\troomId: IRoom['_id'];\n\tvisitorId: IVisitor['_id'];\n\tpagination: { offset: number; count: number; sort: FindOptions<IOmnichannelRoom>['sort'] };\n}) {\n\tconst room = await LivechatRooms.findOneById(roomId);\n\tif (!room) {\n\t\tthrow new Error('invalid-room');\n\t}\n\tif (!(await canAccessRoomAsync(room, { _id: userId }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\n\tconst extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n\tconst { cursor, totalCount } = LivechatRooms.findPaginatedByVisitorId(\n\t\tvisitorId,\n\t\t{\n\t\t\tsort: sort || { ts: -1 },\n\t\t\tskip: offset,\n\t\t\tlimit: count,\n\t\t},\n\t\textraQuery,\n\t);\n\n\tconst [history, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\thistory,\n\t\tcount: history.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function searchChats({\n\tuserId,\n\troomId,\n\tvisitorId,\n\tsearchText,\n\tclosedChatsOnly,\n\tservedChatsOnly: served,\n\tsource,\n\tpagination: { offset, count, sort },\n}: {\n\tuserId: IUser['_id'];\n\troomId: IRoom['_id'];\n\tvisitorId: IVisitor['_id'];\n\tsearchText?: string;\n\tclosedChatsOnly?: string;\n\tservedChatsOnly?: string;\n\tsource?: string;\n\tpagination: { offset: number; count: number; sort: FindOptions<IOmnichannelRoom>['sort'] };\n}) {\n\tconst room = await LivechatRooms.findOneById(roomId);\n\tif (!room) {\n\t\tthrow new Error('invalid-room');\n\t}\n\n\tif (!(await canAccessRoomAsync(room, { _id: userId }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\n\tconst options = {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t};\n\n\tconst [total] = await LivechatRooms.findRoomsByVisitorIdAndMessageWithCriteria({\n\t\tvisitorId,\n\t\topen: closedChatsOnly !== 'true',\n\t\tserved: served === 'true',\n\t\tsearchText,\n\t\tonlyCount: true,\n\t\tsource,\n\t}).toArray();\n\tconst cursor = await LivechatRooms.findRoomsByVisitorIdAndMessageWithCriteria({\n\t\tvisitorId,\n\t\topen: closedChatsOnly !== 'true',\n\t\tserved: served === 'true',\n\t\tsearchText,\n\t\toptions,\n\t\tsource,\n\t});\n\n\tconst history = await cursor.toArray();\n\n\treturn {\n\t\thistory,\n\t\tcount: history.length,\n\t\toffset,\n\t\ttotal: total?.count ?? 0,\n\t};\n}\n\nexport async function findVisitorsToAutocomplete({\n\tselector,\n}: {\n\tselector: {\n\t\texceptions?: ILivechatVisitor['_id'][];\n\t\tconditions?: Record<string, unknown>;\n\t\tterm: string;\n\t};\n}) {\n\tconst { exceptions = [], conditions = {} } = selector;\n\n\tconst options: FindOptions<ILivechatVisitor> = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tname: 1,\n\t\t\tusername: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst items = await LivechatVisitors.findByNameRegexWithExceptionsAndConditions(selector.term, exceptions, conditions, options).toArray();\n\treturn {\n\t\titems,\n\t};\n}\n\nexport async function findVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField({\n\temailOrPhone,\n\tnameOrUsername,\n\tpagination: { offset, count, sort },\n}: {\n\temailOrPhone?: string;\n\tnameOrUsername?: RegExp;\n\tpagination: { offset: number; count: number; sort: FindOptions<IVisitor>['sort'] };\n}) {\n\tconst allowedCF = await LivechatCustomField.findMatchingCustomFields('visitor', true, { projection: { _id: 1 } })\n\t\t.map((cf) => cf._id)\n\t\t.toArray();\n\n\tconst { cursor, totalCount } = await LivechatVisitors.findPaginatedVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField(\n\t\temailOrPhone,\n\t\tnameOrUsername,\n\t\tallowedCF,\n\t\t{\n\t\t\tsort: sort || { ts: -1 },\n\t\t\tskip: offset,\n\t\t\tlimit: count,\n\t\t\tprojection: {\n\t\t\t\tusername: 1,\n\t\t\t\tname: 1,\n\t\t\t\tphone: 1,\n\t\t\t\tlivechatData: 1,\n\t\t\t\tvisitorEmails: 1,\n\t\t\t\tlastChat: 1,\n\t\t\t},\n\t\t},\n\t);\n\n\tconst [visitors, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tvisitors,\n\t\tcount: visitors.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      findVisitorInfo: () => findVisitorInfo,\n      findVisitedPages: () => findVisitedPages,\n      findChatHistory: () => findChatHistory,\n      searchChats: () => searchChats,\n      findVisitorsToAutocomplete: () => findVisitorsToAutocomplete,\n      findVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField: () => findVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField\n    });\n    let LivechatVisitors, Messages, LivechatRooms, LivechatCustomField;\n    module.link(\"@rocket.chat/models\", {\n      LivechatVisitors(v) {\n        LivechatVisitors = v;\n      },\n      Messages(v) {\n        Messages = v;\n      },\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      },\n      LivechatCustomField(v) {\n        LivechatCustomField = v;\n      }\n    }, 0);\n    let callbacks;\n    module.link(\"../../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 1);\n    let canAccessRoomAsync;\n    module.link(\"../../../../authorization/server/functions/canAccessRoom\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function findVisitorInfo(_ref) {\n      let {\n        visitorId\n      } = _ref;\n      const visitor = await LivechatVisitors.findOneEnabledById(visitorId);\n      if (!visitor) {\n        throw new Error('visitor-not-found');\n      }\n      return {\n        visitor\n      };\n    }\n    async function findVisitedPages(_ref2) {\n      let {\n        roomId,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref2;\n      const room = await LivechatRooms.findOneById(roomId);\n      if (!room) {\n        throw new Error('invalid-room');\n      }\n      const {\n        cursor,\n        totalCount\n      } = Messages.findPaginatedByRoomIdAndType(room._id, 'livechat_navigation_history', {\n        sort: sort || {\n          ts: -1\n        },\n        skip: offset,\n        limit: count\n      });\n      const [pages, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        pages,\n        count: pages.length,\n        offset,\n        total\n      };\n    }\n    async function findChatHistory(_ref3) {\n      let {\n        userId,\n        roomId,\n        visitorId,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref3;\n      const room = await LivechatRooms.findOneById(roomId);\n      if (!room) {\n        throw new Error('invalid-room');\n      }\n      if (!(await canAccessRoomAsync(room, {\n        _id: userId\n      }))) {\n        throw new Error('error-not-allowed');\n      }\n      const extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n      const {\n        cursor,\n        totalCount\n      } = LivechatRooms.findPaginatedByVisitorId(visitorId, {\n        sort: sort || {\n          ts: -1\n        },\n        skip: offset,\n        limit: count\n      }, extraQuery);\n      const [history, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        history,\n        count: history.length,\n        offset,\n        total\n      };\n    }\n    async function searchChats(_ref4) {\n      var _total$count;\n      let {\n        userId,\n        roomId,\n        visitorId,\n        searchText,\n        closedChatsOnly,\n        servedChatsOnly: served,\n        source,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref4;\n      const room = await LivechatRooms.findOneById(roomId);\n      if (!room) {\n        throw new Error('invalid-room');\n      }\n      if (!(await canAccessRoomAsync(room, {\n        _id: userId\n      }))) {\n        throw new Error('error-not-allowed');\n      }\n      const options = {\n        sort: sort || {\n          ts: -1\n        },\n        skip: offset,\n        limit: count\n      };\n      const [total] = await LivechatRooms.findRoomsByVisitorIdAndMessageWithCriteria({\n        visitorId,\n        open: closedChatsOnly !== 'true',\n        served: served === 'true',\n        searchText,\n        onlyCount: true,\n        source\n      }).toArray();\n      const cursor = await LivechatRooms.findRoomsByVisitorIdAndMessageWithCriteria({\n        visitorId,\n        open: closedChatsOnly !== 'true',\n        served: served === 'true',\n        searchText,\n        options,\n        source\n      });\n      const history = await cursor.toArray();\n      return {\n        history,\n        count: history.length,\n        offset,\n        total: (_total$count = total === null || total === void 0 ? void 0 : total.count) !== null && _total$count !== void 0 ? _total$count : 0\n      };\n    }\n    async function findVisitorsToAutocomplete(_ref5) {\n      let {\n        selector\n      } = _ref5;\n      const {\n        exceptions = [],\n        conditions = {}\n      } = selector;\n      const options = {\n        projection: {\n          _id: 1,\n          name: 1,\n          username: 1\n        },\n        limit: 10,\n        sort: {\n          name: 1\n        }\n      };\n      const items = await LivechatVisitors.findByNameRegexWithExceptionsAndConditions(selector.term, exceptions, conditions, options).toArray();\n      return {\n        items\n      };\n    }\n    async function findVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField(_ref6) {\n      let {\n        emailOrPhone,\n        nameOrUsername,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref6;\n      const allowedCF = await LivechatCustomField.findMatchingCustomFields('visitor', true, {\n        projection: {\n          _id: 1\n        }\n      }).map(cf => cf._id).toArray();\n      const {\n        cursor,\n        totalCount\n      } = await LivechatVisitors.findPaginatedVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField(emailOrPhone, nameOrUsername, allowedCF, {\n        sort: sort || {\n          ts: -1\n        },\n        skip: offset,\n        limit: count,\n        projection: {\n          username: 1,\n          name: 1,\n          phone: 1,\n          livechatData: 1,\n          visitorEmails: 1,\n          lastChat: 1\n        }\n      });\n      const [visitors, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        visitors,\n        count: visitors.length,\n        offset,\n        total\n      };\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","findVisitorInfo","findVisitedPages","findChatHistory","searchChats","findVisitorsToAutocomplete","findVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField","LivechatVisitors","Messages","LivechatRooms","LivechatCustomField","link","v","callbacks","canAccessRoomAsync","__reifyWaitForDeps__","_ref","visitorId","visitor","findOneEnabledById","Error","_ref2","roomId","pagination","offset","count","sort","room","findOneById","cursor","totalCount","findPaginatedByRoomIdAndType","_id","ts","skip","limit","pages","total","Promise","all","toArray","length","_ref3","userId","extraQuery","run","findPaginatedByVisitorId","history","_ref4","_total$count","searchText","closedChatsOnly","servedChatsOnly","served","source","options","findRoomsByVisitorIdAndMessageWithCriteria","open","onlyCount","_ref5","selector","exceptions","conditions","projection","name","username","items","findByNameRegexWithExceptionsAndConditions","term","_ref6","emailOrPhone","nameOrUsername","allowedCF","findMatchingCustomFields","map","cf","findPaginatedVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField","phone","livechatData","visitorEmails","lastChat","visitors","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/api/lib/visitors.ts"],"sourcesContent":["import type { ILivechatVisitor, IMessage, IOmnichannelRoom, IRoom, IUser, IVisitor } from '@rocket.chat/core-typings';\nimport { LivechatVisitors, Messages, LivechatRooms, LivechatCustomField } from '@rocket.chat/models';\nimport type { FindOptions } from 'mongodb';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { canAccessRoomAsync } from '../../../../authorization/server/functions/canAccessRoom';\n\nexport async function findVisitorInfo({ visitorId }: { visitorId: IVisitor['_id'] }) {\n\tconst visitor = await LivechatVisitors.findOneEnabledById(visitorId);\n\tif (!visitor) {\n\t\tthrow new Error('visitor-not-found');\n\t}\n\n\treturn {\n\t\tvisitor,\n\t};\n}\n\nexport async function findVisitedPages({\n\troomId,\n\tpagination: { offset, count, sort },\n}: {\n\troomId: IRoom['_id'];\n\tpagination: { offset: number; count: number; sort: FindOptions<IMessage>['sort'] };\n}) {\n\tconst room = await LivechatRooms.findOneById(roomId);\n\tif (!room) {\n\t\tthrow new Error('invalid-room');\n\t}\n\tconst { cursor, totalCount } = Messages.findPaginatedByRoomIdAndType(room._id, 'livechat_navigation_history', {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [pages, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tpages,\n\t\tcount: pages.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findChatHistory({\n\tuserId,\n\troomId,\n\tvisitorId,\n\tpagination: { offset, count, sort },\n}: {\n\tuserId: IUser['_id'];\n\troomId: IRoom['_id'];\n\tvisitorId: IVisitor['_id'];\n\tpagination: { offset: number; count: number; sort: FindOptions<IOmnichannelRoom>['sort'] };\n}) {\n\tconst room = await LivechatRooms.findOneById(roomId);\n\tif (!room) {\n\t\tthrow new Error('invalid-room');\n\t}\n\tif (!(await canAccessRoomAsync(room, { _id: userId }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\n\tconst extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n\tconst { cursor, totalCount } = LivechatRooms.findPaginatedByVisitorId(\n\t\tvisitorId,\n\t\t{\n\t\t\tsort: sort || { ts: -1 },\n\t\t\tskip: offset,\n\t\t\tlimit: count,\n\t\t},\n\t\textraQuery,\n\t);\n\n\tconst [history, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\thistory,\n\t\tcount: history.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function searchChats({\n\tuserId,\n\troomId,\n\tvisitorId,\n\tsearchText,\n\tclosedChatsOnly,\n\tservedChatsOnly: served,\n\tsource,\n\tpagination: { offset, count, sort },\n}: {\n\tuserId: IUser['_id'];\n\troomId: IRoom['_id'];\n\tvisitorId: IVisitor['_id'];\n\tsearchText?: string;\n\tclosedChatsOnly?: string;\n\tservedChatsOnly?: string;\n\tsource?: string;\n\tpagination: { offset: number; count: number; sort: FindOptions<IOmnichannelRoom>['sort'] };\n}) {\n\tconst room = await LivechatRooms.findOneById(roomId);\n\tif (!room) {\n\t\tthrow new Error('invalid-room');\n\t}\n\n\tif (!(await canAccessRoomAsync(room, { _id: userId }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\n\tconst options = {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t};\n\n\tconst [total] = await LivechatRooms.findRoomsByVisitorIdAndMessageWithCriteria({\n\t\tvisitorId,\n\t\topen: closedChatsOnly !== 'true',\n\t\tserved: served === 'true',\n\t\tsearchText,\n\t\tonlyCount: true,\n\t\tsource,\n\t}).toArray();\n\tconst cursor = await LivechatRooms.findRoomsByVisitorIdAndMessageWithCriteria({\n\t\tvisitorId,\n\t\topen: closedChatsOnly !== 'true',\n\t\tserved: served === 'true',\n\t\tsearchText,\n\t\toptions,\n\t\tsource,\n\t});\n\n\tconst history = await cursor.toArray();\n\n\treturn {\n\t\thistory,\n\t\tcount: history.length,\n\t\toffset,\n\t\ttotal: total?.count ?? 0,\n\t};\n}\n\nexport async function findVisitorsToAutocomplete({\n\tselector,\n}: {\n\tselector: {\n\t\texceptions?: ILivechatVisitor['_id'][];\n\t\tconditions?: Record<string, unknown>;\n\t\tterm: string;\n\t};\n}) {\n\tconst { exceptions = [], conditions = {} } = selector;\n\n\tconst options: FindOptions<ILivechatVisitor> = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tname: 1,\n\t\t\tusername: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst items = await LivechatVisitors.findByNameRegexWithExceptionsAndConditions(selector.term, exceptions, conditions, options).toArray();\n\treturn {\n\t\titems,\n\t};\n}\n\nexport async function findVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField({\n\temailOrPhone,\n\tnameOrUsername,\n\tpagination: { offset, count, sort },\n}: {\n\temailOrPhone?: string;\n\tnameOrUsername?: RegExp;\n\tpagination: { offset: number; count: number; sort: FindOptions<IVisitor>['sort'] };\n}) {\n\tconst allowedCF = await LivechatCustomField.findMatchingCustomFields('visitor', true, { projection: { _id: 1 } })\n\t\t.map((cf) => cf._id)\n\t\t.toArray();\n\n\tconst { cursor, totalCount } = await LivechatVisitors.findPaginatedVisitorsByEmailOrPhoneOrNameOrUsernameOrCustomField(\n\t\temailOrPhone,\n\t\tnameOrUsername,\n\t\tallowedCF,\n\t\t{\n\t\t\tsort: sort || { ts: -1 },\n\t\t\tskip: offset,\n\t\t\tlimit: count,\n\t\t\tprojection: {\n\t\t\t\tusername: 1,\n\t\t\t\tname: 1,\n\t\t\t\tphone: 1,\n\t\t\t\tlivechatData: 1,\n\t\t\t\tvisitorEmails: 1,\n\t\t\t\tlastChat: 1,\n\t\t\t},\n\t\t},\n\t);\n\n\tconst [visitors, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tvisitors,\n\t\tcount: visitors.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"922409fe1143c2eb20f181b77784d524c1244e3f"}
