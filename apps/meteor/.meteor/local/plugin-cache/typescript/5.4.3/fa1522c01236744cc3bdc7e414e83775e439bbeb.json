{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/LegacyRoomManager.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/ui-utils/client/lib/LegacyRoomManager.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/LegacyRoomManager.ts","inputSourceMap":{"version":3,"file":"app/ui-utils/client/lib/LegacyRoomManager.ts","sourceRoot":"","sources":["app/ui-utils/client/lib/LegacyRoomManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { Mongo } from 'meteor/mongo';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\n\nimport { RoomManager } from '../../../../client/lib/RoomManager';\nimport { roomCoordinator } from '../../../../client/lib/rooms/roomCoordinator';\nimport { fireGlobalEvent } from '../../../../client/lib/utils/fireGlobalEvent';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { CachedChatRoom, ChatMessage, ChatSubscription, CachedChatSubscription } from '../../../models/client';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\nimport { upsertMessage, RoomHistoryManager } from './RoomHistoryManager';\nimport { mainReady } from './mainReady';\n\nconst maxRoomsOpen = parseInt(getConfig('maxRoomsOpen') ?? '5') || 5;\n\nconst openedRooms: Record<\n\tstring,\n\t{\n\t\ttypeName: string;\n\t\trid: IRoom['_id'];\n\t\tready: boolean;\n\t\tactive: boolean;\n\t\tdom?: Node;\n\t\tstreamActive?: boolean;\n\t\tunreadSince: ReactiveVar<Date | undefined>;\n\t\tlastSeen: Date;\n\t\tunreadFirstId?: string;\n\t}\n> = {};\n\nconst openedRoomsDependency = new Tracker.Dependency();\n\nfunction close(typeName: string) {\n\tif (openedRooms[typeName]) {\n\t\tif (openedRooms[typeName].rid) {\n\t\t\tsdk.stop('room-messages', openedRooms[typeName].rid);\n\t\t\tsdk.stop('notify-room', `${openedRooms[typeName].rid}/deleteMessage`);\n\t\t\tsdk.stop('notify-room', `${openedRooms[typeName].rid}/deleteMessageBulk`);\n\t\t}\n\n\t\topenedRooms[typeName].ready = false;\n\t\topenedRooms[typeName].active = false;\n\n\t\tdelete openedRooms[typeName].dom;\n\n\t\tconst { rid } = openedRooms[typeName];\n\t\tdelete openedRooms[typeName];\n\n\t\tif (rid) {\n\t\t\tRoomManager.close(rid);\n\t\t\treturn RoomHistoryManager.clear(rid);\n\t\t}\n\t}\n}\n\nfunction closeOlderRooms() {\n\tif (Object.keys(openedRooms).length <= maxRoomsOpen) {\n\t\treturn;\n\t}\n\tconst roomsToClose = Object.values(openedRooms)\n\t\t.sort((a, b) => b.lastSeen.getTime() - a.lastSeen.getTime())\n\t\t.slice(maxRoomsOpen);\n\treturn Array.from(roomsToClose).map((roomToClose) => close(roomToClose.typeName));\n}\n\nasync function closeAllRooms() {\n\tfor await (const openedRoom of Object.values(openedRooms)) {\n\t\tawait close(openedRoom.typeName);\n\t}\n}\n\nfunction getOpenedRoomByRid(rid: IRoom['_id']) {\n\topenedRoomsDependency.depend();\n\treturn Object.keys(openedRooms)\n\t\t.map((typeName) => openedRooms[typeName])\n\t\t.find((openedRoom) => openedRoom.rid === rid);\n}\n\nconst computation = Tracker.autorun(() => {\n\tconst ready = CachedChatRoom.ready.get() && mainReady.get();\n\tif (ready !== true) {\n\t\treturn;\n\t}\n\tTracker.nonreactive(() =>\n\t\tObject.entries(openedRooms).forEach(([typeName, record]) => {\n\t\t\tif (record.active !== true || record.ready === true) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst type = typeName.slice(0, 1);\n\t\t\tconst name = typeName.slice(1);\n\n\t\t\tconst room = roomCoordinator.getRoomDirectives(type).findRoom(name);\n\n\t\t\tvoid RoomHistoryManager.getMoreIfIsEmpty(record.rid);\n\n\t\t\tif (room) {\n\t\t\t\tif (record.streamActive !== true) {\n\t\t\t\t\tvoid sdk\n\t\t\t\t\t\t.stream('room-messages', [record.rid], async (msg) => {\n\t\t\t\t\t\t\t// Should not send message to room if room has not loaded all the current messages\n\t\t\t\t\t\t\t// if (RoomHistoryManager.hasMoreNext(record.rid) !== false) {\n\t\t\t\t\t\t\t// \treturn;\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t// Do not load command messages into channel\n\t\t\t\t\t\t\tif (msg.t !== 'command') {\n\t\t\t\t\t\t\t\tconst subscription = ChatSubscription.findOne({ rid: record.rid }, { reactive: false });\n\t\t\t\t\t\t\t\tconst isNew = !ChatMessage.findOne({ _id: msg._id, temp: { $ne: true } });\n\t\t\t\t\t\t\t\tawait upsertMessage({ msg, subscription });\n\n\t\t\t\t\t\t\t\tif (isNew) {\n\t\t\t\t\t\t\t\t\tawait callbacks.run('streamNewMessage', msg);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tawait callbacks.run('streamMessage', { ...msg, name: room.name || '' });\n\n\t\t\t\t\t\t\tfireGlobalEvent('new-message', {\n\t\t\t\t\t\t\t\t...msg,\n\t\t\t\t\t\t\t\tname: room.name || '',\n\t\t\t\t\t\t\t\troom: {\n\t\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\t.ready()\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\trecord.streamActive = true;\n\t\t\t\t\t\t\topenedRoomsDependency.changed();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t// when we receive a messages imported event we just clear the room history and fetch it again\n\t\t\t\t\tsdk.stream('notify-room', [`${record.rid}/messagesImported`], async () => {\n\t\t\t\t\t\tawait RoomHistoryManager.clear(record.rid);\n\t\t\t\t\t\tawait RoomHistoryManager.getMore(record.rid);\n\t\t\t\t\t});\n\n\t\t\t\t\tsdk.stream('notify-room', [`${record.rid}/deleteMessage`], (msg) => {\n\t\t\t\t\t\tChatMessage.remove({ _id: msg._id });\n\n\t\t\t\t\t\t// remove thread refenrece from deleted message\n\t\t\t\t\t\tChatMessage.update({ tmid: msg._id }, { $unset: { tmid: 1 } }, { multi: true });\n\t\t\t\t\t});\n\n\t\t\t\t\tsdk.stream(\n\t\t\t\t\t\t'notify-room',\n\t\t\t\t\t\t[`${record.rid}/deleteMessageBulk`],\n\t\t\t\t\t\t({ rid, ts, excludePinned, ignoreDiscussion, users, ids, showDeletedStatus }) => {\n\t\t\t\t\t\t\tconst query: Mongo.Selector<IMessage> = { rid };\n\n\t\t\t\t\t\t\tif (ids) {\n\t\t\t\t\t\t\t\tquery._id = { $in: ids };\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tquery.ts = ts;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (excludePinned) {\n\t\t\t\t\t\t\t\tquery.pinned = { $ne: true };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (ignoreDiscussion) {\n\t\t\t\t\t\t\t\tquery.drid = { $exists: false };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (users?.length) {\n\t\t\t\t\t\t\t\tquery['u.username'] = { $in: users };\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (showDeletedStatus) {\n\t\t\t\t\t\t\t\treturn ChatMessage.update(\n\t\t\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t\t\t{ $set: { t: 'rm', msg: '', urls: [], mentions: [], attachments: [], reactions: {} } },\n\t\t\t\t\t\t\t\t\t{ multi: true },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ChatMessage.remove(query);\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\tsdk.stream('notify-room', [`${record.rid}/messagesRead`], ({ tmid, until }) => {\n\t\t\t\t\t\tif (tmid) {\n\t\t\t\t\t\t\treturn ChatMessage.update(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmid,\n\t\t\t\t\t\t\t\t\tunread: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ $unset: { unread: 1 } },\n\t\t\t\t\t\t\t\t{ multi: true },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tChatMessage.update(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trid: record.rid,\n\t\t\t\t\t\t\t\tunread: true,\n\t\t\t\t\t\t\t\tts: { $lt: until },\n\t\t\t\t\t\t\t\t$or: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmid: { $exists: false },\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttshow: true,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ $unset: { unread: 1 } },\n\t\t\t\t\t\t\t{ multi: true },\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trecord.ready = true;\n\t\t}),\n\t);\n\topenedRoomsDependency.changed();\n});\n\nfunction open({ typeName, rid }: { typeName: string; rid: IRoom['_id'] }) {\n\tif (!openedRooms[typeName]) {\n\t\topenedRooms[typeName] = {\n\t\t\ttypeName,\n\t\t\trid,\n\t\t\tactive: false,\n\t\t\tready: false,\n\t\t\tunreadSince: new ReactiveVar(undefined),\n\t\t\tlastSeen: new Date(),\n\t\t};\n\t}\n\n\topenedRooms[typeName].lastSeen = new Date();\n\n\tif (openedRooms[typeName].ready) {\n\t\tcloseOlderRooms();\n\t}\n\n\tif (CachedChatSubscription.ready.get() === true) {\n\t\tif (openedRooms[typeName].active !== true) {\n\t\t\topenedRooms[typeName].active = true;\n\t\t\tif (computation) {\n\t\t\t\tcomputation.invalidate();\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tready() {\n\t\t\topenedRoomsDependency.depend();\n\t\t\treturn openedRooms[typeName].ready;\n\t\t},\n\t};\n}\n\nlet openedRoom: string | undefined = undefined;\n\nexport const LegacyRoomManager = {\n\tget openedRoom() {\n\t\treturn openedRoom;\n\t},\n\n\tset openedRoom(rid) {\n\t\topenedRoom = rid;\n\t},\n\n\tget openedRooms() {\n\t\treturn openedRooms;\n\t},\n\n\tgetOpenedRoomByRid,\n\n\tclose,\n\n\tcloseAllRooms,\n\n\tget computation() {\n\t\treturn computation;\n\t},\n\n\topen,\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/LegacyRoomManager.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-utils/client/lib/LegacyRoomManager.ts","inputSourceMap":{"version":3,"file":"app/ui-utils/client/lib/LegacyRoomManager.ts","sourceRoot":"","sources":["app/ui-utils/client/lib/LegacyRoomManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { Mongo } from 'meteor/mongo';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\n\nimport { RoomManager } from '../../../../client/lib/RoomManager';\nimport { roomCoordinator } from '../../../../client/lib/rooms/roomCoordinator';\nimport { fireGlobalEvent } from '../../../../client/lib/utils/fireGlobalEvent';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { CachedChatRoom, ChatMessage, ChatSubscription, CachedChatSubscription } from '../../../models/client';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\nimport { upsertMessage, RoomHistoryManager } from './RoomHistoryManager';\nimport { mainReady } from './mainReady';\n\nconst maxRoomsOpen = parseInt(getConfig('maxRoomsOpen') ?? '5') || 5;\n\nconst openedRooms: Record<\n\tstring,\n\t{\n\t\ttypeName: string;\n\t\trid: IRoom['_id'];\n\t\tready: boolean;\n\t\tactive: boolean;\n\t\tdom?: Node;\n\t\tstreamActive?: boolean;\n\t\tunreadSince: ReactiveVar<Date | undefined>;\n\t\tlastSeen: Date;\n\t\tunreadFirstId?: string;\n\t}\n> = {};\n\nconst openedRoomsDependency = new Tracker.Dependency();\n\nfunction close(typeName: string) {\n\tif (openedRooms[typeName]) {\n\t\tif (openedRooms[typeName].rid) {\n\t\t\tsdk.stop('room-messages', openedRooms[typeName].rid);\n\t\t\tsdk.stop('notify-room', `${openedRooms[typeName].rid}/deleteMessage`);\n\t\t\tsdk.stop('notify-room', `${openedRooms[typeName].rid}/deleteMessageBulk`);\n\t\t}\n\n\t\topenedRooms[typeName].ready = false;\n\t\topenedRooms[typeName].active = false;\n\n\t\tdelete openedRooms[typeName].dom;\n\n\t\tconst { rid } = openedRooms[typeName];\n\t\tdelete openedRooms[typeName];\n\n\t\tif (rid) {\n\t\t\tRoomManager.close(rid);\n\t\t\treturn RoomHistoryManager.clear(rid);\n\t\t}\n\t}\n}\n\nfunction closeOlderRooms() {\n\tif (Object.keys(openedRooms).length <= maxRoomsOpen) {\n\t\treturn;\n\t}\n\tconst roomsToClose = Object.values(openedRooms)\n\t\t.sort((a, b) => b.lastSeen.getTime() - a.lastSeen.getTime())\n\t\t.slice(maxRoomsOpen);\n\treturn Array.from(roomsToClose).map((roomToClose) => close(roomToClose.typeName));\n}\n\nasync function closeAllRooms() {\n\tfor await (const openedRoom of Object.values(openedRooms)) {\n\t\tawait close(openedRoom.typeName);\n\t}\n}\n\nfunction getOpenedRoomByRid(rid: IRoom['_id']) {\n\topenedRoomsDependency.depend();\n\treturn Object.keys(openedRooms)\n\t\t.map((typeName) => openedRooms[typeName])\n\t\t.find((openedRoom) => openedRoom.rid === rid);\n}\n\nconst computation = Tracker.autorun(() => {\n\tconst ready = CachedChatRoom.ready.get() && mainReady.get();\n\tif (ready !== true) {\n\t\treturn;\n\t}\n\tTracker.nonreactive(() =>\n\t\tObject.entries(openedRooms).forEach(([typeName, record]) => {\n\t\t\tif (record.active !== true || record.ready === true) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst type = typeName.slice(0, 1);\n\t\t\tconst name = typeName.slice(1);\n\n\t\t\tconst room = roomCoordinator.getRoomDirectives(type).findRoom(name);\n\n\t\t\tvoid RoomHistoryManager.getMoreIfIsEmpty(record.rid);\n\n\t\t\tif (room) {\n\t\t\t\tif (record.streamActive !== true) {\n\t\t\t\t\tvoid sdk\n\t\t\t\t\t\t.stream('room-messages', [record.rid], async (msg) => {\n\t\t\t\t\t\t\t// Should not send message to room if room has not loaded all the current messages\n\t\t\t\t\t\t\t// if (RoomHistoryManager.hasMoreNext(record.rid) !== false) {\n\t\t\t\t\t\t\t// \treturn;\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t// Do not load command messages into channel\n\t\t\t\t\t\t\tif (msg.t !== 'command') {\n\t\t\t\t\t\t\t\tconst subscription = ChatSubscription.findOne({ rid: record.rid }, { reactive: false });\n\t\t\t\t\t\t\t\tconst isNew = !ChatMessage.findOne({ _id: msg._id, temp: { $ne: true } });\n\t\t\t\t\t\t\t\tawait upsertMessage({ msg, subscription });\n\n\t\t\t\t\t\t\t\tif (isNew) {\n\t\t\t\t\t\t\t\t\tawait callbacks.run('streamNewMessage', msg);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tawait callbacks.run('streamMessage', { ...msg, name: room.name || '' });\n\n\t\t\t\t\t\t\tfireGlobalEvent('new-message', {\n\t\t\t\t\t\t\t\t...msg,\n\t\t\t\t\t\t\t\tname: room.name || '',\n\t\t\t\t\t\t\t\troom: {\n\t\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\t.ready()\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\trecord.streamActive = true;\n\t\t\t\t\t\t\topenedRoomsDependency.changed();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t// when we receive a messages imported event we just clear the room history and fetch it again\n\t\t\t\t\tsdk.stream('notify-room', [`${record.rid}/messagesImported`], async () => {\n\t\t\t\t\t\tawait RoomHistoryManager.clear(record.rid);\n\t\t\t\t\t\tawait RoomHistoryManager.getMore(record.rid);\n\t\t\t\t\t});\n\n\t\t\t\t\tsdk.stream('notify-room', [`${record.rid}/deleteMessage`], (msg) => {\n\t\t\t\t\t\tChatMessage.remove({ _id: msg._id });\n\n\t\t\t\t\t\t// remove thread refenrece from deleted message\n\t\t\t\t\t\tChatMessage.update({ tmid: msg._id }, { $unset: { tmid: 1 } }, { multi: true });\n\t\t\t\t\t});\n\n\t\t\t\t\tsdk.stream(\n\t\t\t\t\t\t'notify-room',\n\t\t\t\t\t\t[`${record.rid}/deleteMessageBulk`],\n\t\t\t\t\t\t({ rid, ts, excludePinned, ignoreDiscussion, users, ids, showDeletedStatus }) => {\n\t\t\t\t\t\t\tconst query: Mongo.Selector<IMessage> = { rid };\n\n\t\t\t\t\t\t\tif (ids) {\n\t\t\t\t\t\t\t\tquery._id = { $in: ids };\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tquery.ts = ts;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (excludePinned) {\n\t\t\t\t\t\t\t\tquery.pinned = { $ne: true };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (ignoreDiscussion) {\n\t\t\t\t\t\t\t\tquery.drid = { $exists: false };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (users?.length) {\n\t\t\t\t\t\t\t\tquery['u.username'] = { $in: users };\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (showDeletedStatus) {\n\t\t\t\t\t\t\t\treturn ChatMessage.update(\n\t\t\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t\t\t{ $set: { t: 'rm', msg: '', urls: [], mentions: [], attachments: [], reactions: {} } },\n\t\t\t\t\t\t\t\t\t{ multi: true },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ChatMessage.remove(query);\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\tsdk.stream('notify-room', [`${record.rid}/messagesRead`], ({ tmid, until }) => {\n\t\t\t\t\t\tif (tmid) {\n\t\t\t\t\t\t\treturn ChatMessage.update(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmid,\n\t\t\t\t\t\t\t\t\tunread: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ $unset: { unread: 1 } },\n\t\t\t\t\t\t\t\t{ multi: true },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tChatMessage.update(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trid: record.rid,\n\t\t\t\t\t\t\t\tunread: true,\n\t\t\t\t\t\t\t\tts: { $lt: until },\n\t\t\t\t\t\t\t\t$or: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmid: { $exists: false },\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttshow: true,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ $unset: { unread: 1 } },\n\t\t\t\t\t\t\t{ multi: true },\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trecord.ready = true;\n\t\t}),\n\t);\n\topenedRoomsDependency.changed();\n});\n\nfunction open({ typeName, rid }: { typeName: string; rid: IRoom['_id'] }) {\n\tif (!openedRooms[typeName]) {\n\t\topenedRooms[typeName] = {\n\t\t\ttypeName,\n\t\t\trid,\n\t\t\tactive: false,\n\t\t\tready: false,\n\t\t\tunreadSince: new ReactiveVar(undefined),\n\t\t\tlastSeen: new Date(),\n\t\t};\n\t}\n\n\topenedRooms[typeName].lastSeen = new Date();\n\n\tif (openedRooms[typeName].ready) {\n\t\tcloseOlderRooms();\n\t}\n\n\tif (CachedChatSubscription.ready.get() === true) {\n\t\tif (openedRooms[typeName].active !== true) {\n\t\t\topenedRooms[typeName].active = true;\n\t\t\tif (computation) {\n\t\t\t\tcomputation.invalidate();\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tready() {\n\t\t\topenedRoomsDependency.depend();\n\t\t\treturn openedRooms[typeName].ready;\n\t\t},\n\t};\n}\n\nlet openedRoom: string | undefined = undefined;\n\nexport const LegacyRoomManager = {\n\tget openedRoom() {\n\t\treturn openedRoom;\n\t},\n\n\tset openedRoom(rid) {\n\t\topenedRoom = rid;\n\t},\n\n\tget openedRooms() {\n\t\treturn openedRooms;\n\t},\n\n\tgetOpenedRoomByRid,\n\n\tclose,\n\n\tcloseAllRooms,\n\n\tget computation() {\n\t\treturn computation;\n\t},\n\n\topen,\n};\n"]}}},"code":"var _getConfig;\nvar _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 1);\nvar _slicedToArray;\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 2);\nvar _asyncIterator;\nmodule.link(\"@babel/runtime/helpers/asyncIterator\", {\n  default: function (v) {\n    _asyncIterator = v;\n  }\n}, 3);\nmodule.export({\n  LegacyRoomManager: function () {\n    return LegacyRoomManager;\n  }\n});\nvar ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 0);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 1);\nvar RoomManager;\nmodule.link(\"../../../../client/lib/RoomManager\", {\n  RoomManager: function (v) {\n    RoomManager = v;\n  }\n}, 2);\nvar roomCoordinator;\nmodule.link(\"../../../../client/lib/rooms/roomCoordinator\", {\n  roomCoordinator: function (v) {\n    roomCoordinator = v;\n  }\n}, 3);\nvar fireGlobalEvent;\nmodule.link(\"../../../../client/lib/utils/fireGlobalEvent\", {\n  fireGlobalEvent: function (v) {\n    fireGlobalEvent = v;\n  }\n}, 4);\nvar getConfig;\nmodule.link(\"../../../../client/lib/utils/getConfig\", {\n  getConfig: function (v) {\n    getConfig = v;\n  }\n}, 5);\nvar callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks: function (v) {\n    callbacks = v;\n  }\n}, 6);\nvar CachedChatRoom, ChatMessage, ChatSubscription, CachedChatSubscription;\nmodule.link(\"../../../models/client\", {\n  CachedChatRoom: function (v) {\n    CachedChatRoom = v;\n  },\n  ChatMessage: function (v) {\n    ChatMessage = v;\n  },\n  ChatSubscription: function (v) {\n    ChatSubscription = v;\n  },\n  CachedChatSubscription: function (v) {\n    CachedChatSubscription = v;\n  }\n}, 7);\nvar sdk;\nmodule.link(\"../../../utils/client/lib/SDKClient\", {\n  sdk: function (v) {\n    sdk = v;\n  }\n}, 8);\nvar upsertMessage, RoomHistoryManager;\nmodule.link(\"./RoomHistoryManager\", {\n  upsertMessage: function (v) {\n    upsertMessage = v;\n  },\n  RoomHistoryManager: function (v) {\n    RoomHistoryManager = v;\n  }\n}, 9);\nvar mainReady;\nmodule.link(\"./mainReady\", {\n  mainReady: function (v) {\n    mainReady = v;\n  }\n}, 10);\nvar maxRoomsOpen = parseInt((_getConfig = getConfig('maxRoomsOpen')) !== null && _getConfig !== void 0 ? _getConfig : '5') || 5;\nvar openedRooms = {};\nvar openedRoomsDependency = new Tracker.Dependency();\nfunction close(typeName) {\n  if (openedRooms[typeName]) {\n    if (openedRooms[typeName].rid) {\n      sdk.stop('room-messages', openedRooms[typeName].rid);\n      sdk.stop('notify-room', openedRooms[typeName].rid + \"/deleteMessage\");\n      sdk.stop('notify-room', openedRooms[typeName].rid + \"/deleteMessageBulk\");\n    }\n    openedRooms[typeName].ready = false;\n    openedRooms[typeName].active = false;\n    delete openedRooms[typeName].dom;\n    var rid = openedRooms[typeName].rid;\n    delete openedRooms[typeName];\n    if (rid) {\n      RoomManager.close(rid);\n      return RoomHistoryManager.clear(rid);\n    }\n  }\n}\nfunction closeOlderRooms() {\n  if (Object.keys(openedRooms).length <= maxRoomsOpen) {\n    return;\n  }\n  var roomsToClose = Object.values(openedRooms).sort(function (a, b) {\n    return b.lastSeen.getTime() - a.lastSeen.getTime();\n  }).slice(maxRoomsOpen);\n  return Array.from(roomsToClose).map(function (roomToClose) {\n    return close(roomToClose.typeName);\n  });\n}\nfunction closeAllRooms() {\n  var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, _openedRoom;\n  return _regeneratorRuntime.async(function () {\n    function closeAllRooms$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context.prev = 2;\n          _iterator = _asyncIterator(Object.values(openedRooms));\n        case 4:\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(_iterator.next());\n        case 6:\n          if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n            _context.next = 13;\n            break;\n          }\n          _openedRoom = _step.value;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(close(_openedRoom.typeName));\n        case 10:\n          _iteratorAbruptCompletion = false;\n          _context.next = 4;\n          break;\n        case 13:\n          _context.next = 19;\n          break;\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](2);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n        case 19:\n          _context.prev = 19;\n          _context.prev = 20;\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context.next = 24;\n            break;\n          }\n          _context.next = 24;\n          return _regeneratorRuntime.awrap(_iterator.return());\n        case 24:\n          _context.prev = 24;\n          if (!_didIteratorError) {\n            _context.next = 27;\n            break;\n          }\n          throw _iteratorError;\n        case 27:\n          return _context.finish(24);\n        case 28:\n          return _context.finish(19);\n        case 29:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n    return closeAllRooms$;\n  }(), null, null, [[2, 15, 19, 29], [20,, 24, 28]], Promise);\n}\nfunction getOpenedRoomByRid(rid) {\n  openedRoomsDependency.depend();\n  return Object.keys(openedRooms).map(function (typeName) {\n    return openedRooms[typeName];\n  }).find(function (openedRoom) {\n    return openedRoom.rid === rid;\n  });\n}\nvar computation = Tracker.autorun(function () {\n  var ready = CachedChatRoom.ready.get() && mainReady.get();\n  if (ready !== true) {\n    return;\n  }\n  Tracker.nonreactive(function () {\n    return Object.entries(openedRooms).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        typeName = _ref2[0],\n        record = _ref2[1];\n      if (record.active !== true || record.ready === true) {\n        return;\n      }\n      var type = typeName.slice(0, 1);\n      var name = typeName.slice(1);\n      var room = roomCoordinator.getRoomDirectives(type).findRoom(name);\n      void RoomHistoryManager.getMoreIfIsEmpty(record.rid);\n      if (room) {\n        if (record.streamActive !== true) {\n          void sdk.stream('room-messages', [record.rid], function () {\n            function _callee(msg) {\n              var subscription, isNew;\n              return _regeneratorRuntime.async(function () {\n                function _callee$(_context2) {\n                  while (1) switch (_context2.prev = _context2.next) {\n                    case 0:\n                      if (!(msg.t !== 'command')) {\n                        _context2.next = 8;\n                        break;\n                      }\n                      subscription = ChatSubscription.findOne({\n                        rid: record.rid\n                      }, {\n                        reactive: false\n                      });\n                      isNew = !ChatMessage.findOne({\n                        _id: msg._id,\n                        temp: {\n                          $ne: true\n                        }\n                      });\n                      _context2.next = 5;\n                      return _regeneratorRuntime.awrap(upsertMessage({\n                        msg: msg,\n                        subscription: subscription\n                      }));\n                    case 5:\n                      if (!isNew) {\n                        _context2.next = 8;\n                        break;\n                      }\n                      _context2.next = 8;\n                      return _regeneratorRuntime.awrap(callbacks.run('streamNewMessage', msg));\n                    case 8:\n                      _context2.next = 10;\n                      return _regeneratorRuntime.awrap(callbacks.run('streamMessage', _objectSpread(_objectSpread({}, msg), {}, {\n                        name: room.name || ''\n                      })));\n                    case 10:\n                      fireGlobalEvent('new-message', _objectSpread(_objectSpread({}, msg), {}, {\n                        name: room.name || '',\n                        room: {\n                          type: type,\n                          name: name\n                        }\n                      }));\n                    case 11:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n                return _callee$;\n              }(), null, null, null, Promise);\n            }\n            return _callee;\n          }()).ready().then(function () {\n            record.streamActive = true;\n            openedRoomsDependency.changed();\n          });\n          // when we receive a messages imported event we just clear the room history and fetch it again\n          sdk.stream('notify-room', [record.rid + \"/messagesImported\"], function () {\n            function _callee2() {\n              return _regeneratorRuntime.async(function () {\n                function _callee2$(_context3) {\n                  while (1) switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return _regeneratorRuntime.awrap(RoomHistoryManager.clear(record.rid));\n                    case 2:\n                      _context3.next = 4;\n                      return _regeneratorRuntime.awrap(RoomHistoryManager.getMore(record.rid));\n                    case 4:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n                return _callee2$;\n              }(), null, null, null, Promise);\n            }\n            return _callee2;\n          }());\n          sdk.stream('notify-room', [record.rid + \"/deleteMessage\"], function (msg) {\n            ChatMessage.remove({\n              _id: msg._id\n            });\n            // remove thread refenrece from deleted message\n            ChatMessage.update({\n              tmid: msg._id\n            }, {\n              $unset: {\n                tmid: 1\n              }\n            }, {\n              multi: true\n            });\n          });\n          sdk.stream('notify-room', [record.rid + \"/deleteMessageBulk\"], function (_ref3) {\n            var rid = _ref3.rid,\n              ts = _ref3.ts,\n              excludePinned = _ref3.excludePinned,\n              ignoreDiscussion = _ref3.ignoreDiscussion,\n              users = _ref3.users,\n              ids = _ref3.ids,\n              showDeletedStatus = _ref3.showDeletedStatus;\n            var query = {\n              rid: rid\n            };\n            if (ids) {\n              query._id = {\n                $in: ids\n              };\n            } else {\n              query.ts = ts;\n            }\n            if (excludePinned) {\n              query.pinned = {\n                $ne: true\n              };\n            }\n            if (ignoreDiscussion) {\n              query.drid = {\n                $exists: false\n              };\n            }\n            if (users !== null && users !== void 0 && users.length) {\n              query['u.username'] = {\n                $in: users\n              };\n            }\n            if (showDeletedStatus) {\n              return ChatMessage.update(query, {\n                $set: {\n                  t: 'rm',\n                  msg: '',\n                  urls: [],\n                  mentions: [],\n                  attachments: [],\n                  reactions: {}\n                }\n              }, {\n                multi: true\n              });\n            }\n            return ChatMessage.remove(query);\n          });\n          sdk.stream('notify-room', [record.rid + \"/messagesRead\"], function (_ref4) {\n            var tmid = _ref4.tmid,\n              until = _ref4.until;\n            if (tmid) {\n              return ChatMessage.update({\n                tmid: tmid,\n                unread: true\n              }, {\n                $unset: {\n                  unread: 1\n                }\n              }, {\n                multi: true\n              });\n            }\n            ChatMessage.update({\n              rid: record.rid,\n              unread: true,\n              ts: {\n                $lt: until\n              },\n              $or: [{\n                tmid: {\n                  $exists: false\n                }\n              }, {\n                tshow: true\n              }]\n            }, {\n              $unset: {\n                unread: 1\n              }\n            }, {\n              multi: true\n            });\n          });\n        }\n      }\n      record.ready = true;\n    });\n  });\n  openedRoomsDependency.changed();\n});\nfunction open(_ref5) {\n  var typeName = _ref5.typeName,\n    rid = _ref5.rid;\n  if (!openedRooms[typeName]) {\n    openedRooms[typeName] = {\n      typeName: typeName,\n      rid: rid,\n      active: false,\n      ready: false,\n      unreadSince: new ReactiveVar(undefined),\n      lastSeen: new Date()\n    };\n  }\n  openedRooms[typeName].lastSeen = new Date();\n  if (openedRooms[typeName].ready) {\n    closeOlderRooms();\n  }\n  if (CachedChatSubscription.ready.get() === true) {\n    if (openedRooms[typeName].active !== true) {\n      openedRooms[typeName].active = true;\n      if (computation) {\n        computation.invalidate();\n      }\n    }\n  }\n  return {\n    ready: function () {\n      openedRoomsDependency.depend();\n      return openedRooms[typeName].ready;\n    }\n  };\n}\nvar openedRoom = undefined;\nvar LegacyRoomManager = {\n  get openedRoom() {\n    return openedRoom;\n  },\n  set openedRoom(rid) {\n    openedRoom = rid;\n  },\n  get openedRooms() {\n    return openedRooms;\n  },\n  getOpenedRoomByRid: getOpenedRoomByRid,\n  close: close,\n  closeAllRooms: closeAllRooms,\n  get computation() {\n    return computation;\n  },\n  open: open\n};","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","_objectSpread","_slicedToArray","_asyncIterator","export","LegacyRoomManager","ReactiveVar","Tracker","RoomManager","roomCoordinator","fireGlobalEvent","getConfig","callbacks","CachedChatRoom","ChatMessage","ChatSubscription","CachedChatSubscription","sdk","upsertMessage","RoomHistoryManager","mainReady","maxRoomsOpen","parseInt","_getConfig","openedRooms","openedRoomsDependency","Dependency","close","typeName","rid","stop","ready","active","dom","clear","closeOlderRooms","Object","keys","length","roomsToClose","values","sort","a","b","lastSeen","getTime","slice","Array","from","map","roomToClose","closeAllRooms","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_openedRoom","async","closeAllRooms$","_context","prev","next","awrap","sent","done","openedRoom","value","t0","return","finish","Promise","getOpenedRoomByRid","depend","find","computation","autorun","get","nonreactive","entries","forEach","_ref","_ref2","record","type","name","room","getRoomDirectives","findRoom","getMoreIfIsEmpty","streamActive","stream","_callee","msg","subscription","isNew","_callee$","_context2","t","findOne","reactive","_id","temp","$ne","run","then","changed","_callee2","_callee2$","_context3","getMore","remove","update","tmid","$unset","multi","_ref3","ts","excludePinned","ignoreDiscussion","users","ids","showDeletedStatus","query","$in","pinned","drid","$exists","$set","urls","mentions","attachments","reactions","_ref4","until","unread","$lt","$or","tshow","open","_ref5","unreadSince","undefined","Date","invalidate"],"sources":["app/ui-utils/client/lib/LegacyRoomManager.ts"],"sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { Mongo } from 'meteor/mongo';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\n\nimport { RoomManager } from '../../../../client/lib/RoomManager';\nimport { roomCoordinator } from '../../../../client/lib/rooms/roomCoordinator';\nimport { fireGlobalEvent } from '../../../../client/lib/utils/fireGlobalEvent';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { CachedChatRoom, ChatMessage, ChatSubscription, CachedChatSubscription } from '../../../models/client';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\nimport { upsertMessage, RoomHistoryManager } from './RoomHistoryManager';\nimport { mainReady } from './mainReady';\n\nconst maxRoomsOpen = parseInt(getConfig('maxRoomsOpen') ?? '5') || 5;\n\nconst openedRooms: Record<\n\tstring,\n\t{\n\t\ttypeName: string;\n\t\trid: IRoom['_id'];\n\t\tready: boolean;\n\t\tactive: boolean;\n\t\tdom?: Node;\n\t\tstreamActive?: boolean;\n\t\tunreadSince: ReactiveVar<Date | undefined>;\n\t\tlastSeen: Date;\n\t\tunreadFirstId?: string;\n\t}\n> = {};\n\nconst openedRoomsDependency = new Tracker.Dependency();\n\nfunction close(typeName: string) {\n\tif (openedRooms[typeName]) {\n\t\tif (openedRooms[typeName].rid) {\n\t\t\tsdk.stop('room-messages', openedRooms[typeName].rid);\n\t\t\tsdk.stop('notify-room', `${openedRooms[typeName].rid}/deleteMessage`);\n\t\t\tsdk.stop('notify-room', `${openedRooms[typeName].rid}/deleteMessageBulk`);\n\t\t}\n\n\t\topenedRooms[typeName].ready = false;\n\t\topenedRooms[typeName].active = false;\n\n\t\tdelete openedRooms[typeName].dom;\n\n\t\tconst { rid } = openedRooms[typeName];\n\t\tdelete openedRooms[typeName];\n\n\t\tif (rid) {\n\t\t\tRoomManager.close(rid);\n\t\t\treturn RoomHistoryManager.clear(rid);\n\t\t}\n\t}\n}\n\nfunction closeOlderRooms() {\n\tif (Object.keys(openedRooms).length <= maxRoomsOpen) {\n\t\treturn;\n\t}\n\tconst roomsToClose = Object.values(openedRooms)\n\t\t.sort((a, b) => b.lastSeen.getTime() - a.lastSeen.getTime())\n\t\t.slice(maxRoomsOpen);\n\treturn Array.from(roomsToClose).map((roomToClose) => close(roomToClose.typeName));\n}\n\nasync function closeAllRooms() {\n\tfor await (const openedRoom of Object.values(openedRooms)) {\n\t\tawait close(openedRoom.typeName);\n\t}\n}\n\nfunction getOpenedRoomByRid(rid: IRoom['_id']) {\n\topenedRoomsDependency.depend();\n\treturn Object.keys(openedRooms)\n\t\t.map((typeName) => openedRooms[typeName])\n\t\t.find((openedRoom) => openedRoom.rid === rid);\n}\n\nconst computation = Tracker.autorun(() => {\n\tconst ready = CachedChatRoom.ready.get() && mainReady.get();\n\tif (ready !== true) {\n\t\treturn;\n\t}\n\tTracker.nonreactive(() =>\n\t\tObject.entries(openedRooms).forEach(([typeName, record]) => {\n\t\t\tif (record.active !== true || record.ready === true) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst type = typeName.slice(0, 1);\n\t\t\tconst name = typeName.slice(1);\n\n\t\t\tconst room = roomCoordinator.getRoomDirectives(type).findRoom(name);\n\n\t\t\tvoid RoomHistoryManager.getMoreIfIsEmpty(record.rid);\n\n\t\t\tif (room) {\n\t\t\t\tif (record.streamActive !== true) {\n\t\t\t\t\tvoid sdk\n\t\t\t\t\t\t.stream('room-messages', [record.rid], async (msg) => {\n\t\t\t\t\t\t\t// Should not send message to room if room has not loaded all the current messages\n\t\t\t\t\t\t\t// if (RoomHistoryManager.hasMoreNext(record.rid) !== false) {\n\t\t\t\t\t\t\t// \treturn;\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t// Do not load command messages into channel\n\t\t\t\t\t\t\tif (msg.t !== 'command') {\n\t\t\t\t\t\t\t\tconst subscription = ChatSubscription.findOne({ rid: record.rid }, { reactive: false });\n\t\t\t\t\t\t\t\tconst isNew = !ChatMessage.findOne({ _id: msg._id, temp: { $ne: true } });\n\t\t\t\t\t\t\t\tawait upsertMessage({ msg, subscription });\n\n\t\t\t\t\t\t\t\tif (isNew) {\n\t\t\t\t\t\t\t\t\tawait callbacks.run('streamNewMessage', msg);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tawait callbacks.run('streamMessage', { ...msg, name: room.name || '' });\n\n\t\t\t\t\t\t\tfireGlobalEvent('new-message', {\n\t\t\t\t\t\t\t\t...msg,\n\t\t\t\t\t\t\t\tname: room.name || '',\n\t\t\t\t\t\t\t\troom: {\n\t\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\t.ready()\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\trecord.streamActive = true;\n\t\t\t\t\t\t\topenedRoomsDependency.changed();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t// when we receive a messages imported event we just clear the room history and fetch it again\n\t\t\t\t\tsdk.stream('notify-room', [`${record.rid}/messagesImported`], async () => {\n\t\t\t\t\t\tawait RoomHistoryManager.clear(record.rid);\n\t\t\t\t\t\tawait RoomHistoryManager.getMore(record.rid);\n\t\t\t\t\t});\n\n\t\t\t\t\tsdk.stream('notify-room', [`${record.rid}/deleteMessage`], (msg) => {\n\t\t\t\t\t\tChatMessage.remove({ _id: msg._id });\n\n\t\t\t\t\t\t// remove thread refenrece from deleted message\n\t\t\t\t\t\tChatMessage.update({ tmid: msg._id }, { $unset: { tmid: 1 } }, { multi: true });\n\t\t\t\t\t});\n\n\t\t\t\t\tsdk.stream(\n\t\t\t\t\t\t'notify-room',\n\t\t\t\t\t\t[`${record.rid}/deleteMessageBulk`],\n\t\t\t\t\t\t({ rid, ts, excludePinned, ignoreDiscussion, users, ids, showDeletedStatus }) => {\n\t\t\t\t\t\t\tconst query: Mongo.Selector<IMessage> = { rid };\n\n\t\t\t\t\t\t\tif (ids) {\n\t\t\t\t\t\t\t\tquery._id = { $in: ids };\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tquery.ts = ts;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (excludePinned) {\n\t\t\t\t\t\t\t\tquery.pinned = { $ne: true };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (ignoreDiscussion) {\n\t\t\t\t\t\t\t\tquery.drid = { $exists: false };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (users?.length) {\n\t\t\t\t\t\t\t\tquery['u.username'] = { $in: users };\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (showDeletedStatus) {\n\t\t\t\t\t\t\t\treturn ChatMessage.update(\n\t\t\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t\t\t{ $set: { t: 'rm', msg: '', urls: [], mentions: [], attachments: [], reactions: {} } },\n\t\t\t\t\t\t\t\t\t{ multi: true },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ChatMessage.remove(query);\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\tsdk.stream('notify-room', [`${record.rid}/messagesRead`], ({ tmid, until }) => {\n\t\t\t\t\t\tif (tmid) {\n\t\t\t\t\t\t\treturn ChatMessage.update(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmid,\n\t\t\t\t\t\t\t\t\tunread: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ $unset: { unread: 1 } },\n\t\t\t\t\t\t\t\t{ multi: true },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tChatMessage.update(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trid: record.rid,\n\t\t\t\t\t\t\t\tunread: true,\n\t\t\t\t\t\t\t\tts: { $lt: until },\n\t\t\t\t\t\t\t\t$or: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttmid: { $exists: false },\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttshow: true,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ $unset: { unread: 1 } },\n\t\t\t\t\t\t\t{ multi: true },\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trecord.ready = true;\n\t\t}),\n\t);\n\topenedRoomsDependency.changed();\n});\n\nfunction open({ typeName, rid }: { typeName: string; rid: IRoom['_id'] }) {\n\tif (!openedRooms[typeName]) {\n\t\topenedRooms[typeName] = {\n\t\t\ttypeName,\n\t\t\trid,\n\t\t\tactive: false,\n\t\t\tready: false,\n\t\t\tunreadSince: new ReactiveVar(undefined),\n\t\t\tlastSeen: new Date(),\n\t\t};\n\t}\n\n\topenedRooms[typeName].lastSeen = new Date();\n\n\tif (openedRooms[typeName].ready) {\n\t\tcloseOlderRooms();\n\t}\n\n\tif (CachedChatSubscription.ready.get() === true) {\n\t\tif (openedRooms[typeName].active !== true) {\n\t\t\topenedRooms[typeName].active = true;\n\t\t\tif (computation) {\n\t\t\t\tcomputation.invalidate();\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tready() {\n\t\t\topenedRoomsDependency.depend();\n\t\t\treturn openedRooms[typeName].ready;\n\t\t},\n\t};\n}\n\nlet openedRoom: string | undefined = undefined;\n\nexport const LegacyRoomManager = {\n\tget openedRoom() {\n\t\treturn openedRoom;\n\t},\n\n\tset openedRoom(rid) {\n\t\topenedRoom = rid;\n\t},\n\n\tget openedRooms() {\n\t\treturn openedRooms;\n\t},\n\n\tgetOpenedRoomByRid,\n\n\tclose,\n\n\tcloseAllRooms,\n\n\tget computation() {\n\t\treturn computation;\n\t},\n\n\topen,\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"fa1522c01236744cc3bdc7e414e83775e439bbeb"}
