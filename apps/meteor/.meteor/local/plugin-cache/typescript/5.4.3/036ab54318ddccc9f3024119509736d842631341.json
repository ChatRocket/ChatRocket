{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/agents.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/api/agents.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/agents.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/agents.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/agents.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tisLivechatAnalyticsAgentsTotalServiceTimeProps,\n\tisLivechatAnalyticsAgentsAverageServiceTimeProps,\n\tisLivechatAnalyticsAgentsAvailableForServiceHistoryProps,\n} from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../../app/api/server';\nimport { getPaginationItems } from '../../../../../app/api/server/helpers/getPaginationItems';\nimport {\n\tfindAllAverageServiceTimeAsync,\n\tfindAllServiceTimeAsync,\n\tfindAvailableServiceTimeHistoryAsync,\n} from '../../../../../app/livechat/server/lib/analytics/agents';\n\nAPI.v1.addRoute(\n\t'livechat/analytics/agents/average-service-time',\n\t{ authRequired: true, permissionsRequired: ['view-livechat-manager'], validateParams: isLivechatAnalyticsAgentsAverageServiceTimeProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { agents, total } = await findAllAverageServiceTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tagents,\n\t\t\t\tcount: agents.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/agents/total-service-time',\n\t{ authRequired: true, permissionsRequired: ['view-livechat-manager'], validateParams: isLivechatAnalyticsAgentsTotalServiceTimeProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { agents, total } = await findAllServiceTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tagents,\n\t\t\t\tcount: agents.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/agents/available-for-service-history',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsAgentsAvailableForServiceHistoryProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { fullReport } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\n\t\t\tconst { agents, total } = await findAvailableServiceTimeHistoryAsync({\n\t\t\t\tstart,\n\t\t\t\tend,\n\t\t\t\tfullReport: fullReport === 'true',\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tagents,\n\t\t\t\tcount: agents.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/agents.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/api/agents.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/agents.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/agents.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tisLivechatAnalyticsAgentsTotalServiceTimeProps,\n\tisLivechatAnalyticsAgentsAverageServiceTimeProps,\n\tisLivechatAnalyticsAgentsAvailableForServiceHistoryProps,\n} from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../../app/api/server';\nimport { getPaginationItems } from '../../../../../app/api/server/helpers/getPaginationItems';\nimport {\n\tfindAllAverageServiceTimeAsync,\n\tfindAllServiceTimeAsync,\n\tfindAvailableServiceTimeHistoryAsync,\n} from '../../../../../app/livechat/server/lib/analytics/agents';\n\nAPI.v1.addRoute(\n\t'livechat/analytics/agents/average-service-time',\n\t{ authRequired: true, permissionsRequired: ['view-livechat-manager'], validateParams: isLivechatAnalyticsAgentsAverageServiceTimeProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { agents, total } = await findAllAverageServiceTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tagents,\n\t\t\t\tcount: agents.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/agents/total-service-time',\n\t{ authRequired: true, permissionsRequired: ['view-livechat-manager'], validateParams: isLivechatAnalyticsAgentsTotalServiceTimeProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { agents, total } = await findAllServiceTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tagents,\n\t\t\t\tcount: agents.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/agents/available-for-service-history',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsAgentsAvailableForServiceHistoryProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { fullReport } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\n\t\t\tconst { agents, total } = await findAvailableServiceTimeHistoryAsync({\n\t\t\t\tstart,\n\t\t\t\tend,\n\t\t\t\tfullReport: fullReport === 'true',\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tagents,\n\t\t\t\tcount: agents.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let isLivechatAnalyticsAgentsTotalServiceTimeProps, isLivechatAnalyticsAgentsAverageServiceTimeProps, isLivechatAnalyticsAgentsAvailableForServiceHistoryProps;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isLivechatAnalyticsAgentsTotalServiceTimeProps(v) {\n        isLivechatAnalyticsAgentsTotalServiceTimeProps = v;\n      },\n      isLivechatAnalyticsAgentsAverageServiceTimeProps(v) {\n        isLivechatAnalyticsAgentsAverageServiceTimeProps = v;\n      },\n      isLivechatAnalyticsAgentsAvailableForServiceHistoryProps(v) {\n        isLivechatAnalyticsAgentsAvailableForServiceHistoryProps = v;\n      }\n    }, 0);\n    let API;\n    module.link(\"../../../../../app/api/server\", {\n      API(v) {\n        API = v;\n      }\n    }, 1);\n    let getPaginationItems;\n    module.link(\"../../../../../app/api/server/helpers/getPaginationItems\", {\n      getPaginationItems(v) {\n        getPaginationItems = v;\n      }\n    }, 2);\n    let findAllAverageServiceTimeAsync, findAllServiceTimeAsync, findAvailableServiceTimeHistoryAsync;\n    module.link(\"../../../../../app/livechat/server/lib/analytics/agents\", {\n      findAllAverageServiceTimeAsync(v) {\n        findAllAverageServiceTimeAsync = v;\n      },\n      findAllServiceTimeAsync(v) {\n        findAllServiceTimeAsync = v;\n      },\n      findAvailableServiceTimeHistoryAsync(v) {\n        findAvailableServiceTimeHistoryAsync = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('livechat/analytics/agents/average-service-time', {\n      authRequired: true,\n      permissionsRequired: ['view-livechat-manager'],\n      validateParams: isLivechatAnalyticsAgentsAverageServiceTimeProps\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          start,\n          end\n        } = this.queryParams;\n        if (isNaN(Date.parse(start))) {\n          return API.v1.failure('The \"start\" query parameter must be a valid date.');\n        }\n        const startDate = new Date(start);\n        if (isNaN(Date.parse(end))) {\n          return API.v1.failure('The \"end\" query parameter must be a valid date.');\n        }\n        const endDate = new Date(end);\n        const {\n          agents,\n          total\n        } = await findAllAverageServiceTimeAsync({\n          start: startDate,\n          end: endDate,\n          options: {\n            offset,\n            count\n          }\n        });\n        return API.v1.success({\n          agents,\n          count: agents.length,\n          offset,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('livechat/analytics/agents/total-service-time', {\n      authRequired: true,\n      permissionsRequired: ['view-livechat-manager'],\n      validateParams: isLivechatAnalyticsAgentsTotalServiceTimeProps\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          start,\n          end\n        } = this.queryParams;\n        if (isNaN(Date.parse(start))) {\n          return API.v1.failure('The \"start\" query parameter must be a valid date.');\n        }\n        const startDate = new Date(start);\n        if (isNaN(Date.parse(end))) {\n          return API.v1.failure('The \"end\" query parameter must be a valid date.');\n        }\n        const endDate = new Date(end);\n        const {\n          agents,\n          total\n        } = await findAllServiceTimeAsync({\n          start: startDate,\n          end: endDate,\n          options: {\n            offset,\n            count\n          }\n        });\n        return API.v1.success({\n          agents,\n          count: agents.length,\n          offset,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('livechat/analytics/agents/available-for-service-history', {\n      authRequired: true,\n      permissionsRequired: ['view-livechat-manager'],\n      validateParams: isLivechatAnalyticsAgentsAvailableForServiceHistoryProps\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          start,\n          end\n        } = this.queryParams;\n        const {\n          fullReport\n        } = this.queryParams;\n        if (isNaN(Date.parse(start))) {\n          return API.v1.failure('The \"start\" query parameter must be a valid date.');\n        }\n        if (isNaN(Date.parse(end))) {\n          return API.v1.failure('The \"end\" query parameter must be a valid date.');\n        }\n        const {\n          agents,\n          total\n        } = await findAvailableServiceTimeHistoryAsync({\n          start,\n          end,\n          fullReport: fullReport === 'true',\n          options: {\n            offset,\n            count\n          }\n        });\n        return API.v1.success({\n          agents,\n          count: agents.length,\n          offset,\n          total\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["isLivechatAnalyticsAgentsTotalServiceTimeProps","isLivechatAnalyticsAgentsAverageServiceTimeProps","isLivechatAnalyticsAgentsAvailableForServiceHistoryProps","module","link","v","API","getPaginationItems","findAllAverageServiceTimeAsync","findAllServiceTimeAsync","findAvailableServiceTimeHistoryAsync","__reifyWaitForDeps__","v1","addRoute","authRequired","permissionsRequired","validateParams","get","offset","count","queryParams","start","end","isNaN","Date","parse","failure","startDate","endDate","agents","total","options","success","length","fullReport","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/livechat-enterprise/server/api/agents.ts"],"sourcesContent":["import {\n\tisLivechatAnalyticsAgentsTotalServiceTimeProps,\n\tisLivechatAnalyticsAgentsAverageServiceTimeProps,\n\tisLivechatAnalyticsAgentsAvailableForServiceHistoryProps,\n} from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../../app/api/server';\nimport { getPaginationItems } from '../../../../../app/api/server/helpers/getPaginationItems';\nimport {\n\tfindAllAverageServiceTimeAsync,\n\tfindAllServiceTimeAsync,\n\tfindAvailableServiceTimeHistoryAsync,\n} from '../../../../../app/livechat/server/lib/analytics/agents';\n\nAPI.v1.addRoute(\n\t'livechat/analytics/agents/average-service-time',\n\t{ authRequired: true, permissionsRequired: ['view-livechat-manager'], validateParams: isLivechatAnalyticsAgentsAverageServiceTimeProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { agents, total } = await findAllAverageServiceTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tagents,\n\t\t\t\tcount: agents.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/agents/total-service-time',\n\t{ authRequired: true, permissionsRequired: ['view-livechat-manager'], validateParams: isLivechatAnalyticsAgentsTotalServiceTimeProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { agents, total } = await findAllServiceTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tagents,\n\t\t\t\tcount: agents.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/agents/available-for-service-history',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsAgentsAvailableForServiceHistoryProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { fullReport } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\n\t\t\tconst { agents, total } = await findAvailableServiceTimeHistoryAsync({\n\t\t\t\tstart,\n\t\t\t\tend,\n\t\t\t\tfullReport: fullReport === 'true',\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tagents,\n\t\t\t\tcount: agents.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"036ab54318ddccc9f3024119509736d842631341"}
