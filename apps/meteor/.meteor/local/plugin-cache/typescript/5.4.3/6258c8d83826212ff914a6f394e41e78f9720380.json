{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/lib/engagementDashboard/users.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/lib/engagementDashboard/users.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/lib/engagementDashboard/users.ts","inputSourceMap":{"version":3,"file":"ee/server/lib/engagementDashboard/users.ts","sourceRoot":"","sources":["ee/server/lib/engagementDashboard/users.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Users, Analytics, Sessions } from '@rocket.chat/models';\nimport moment from 'moment';\n\nimport { convertDateToInt, diffBetweenDaysInclusive, getTotalOfWeekItems, convertIntToDate } from './date';\n\nexport const handleUserCreated = async (user: IUser): Promise<IUser> => {\n\tif (user.roles?.includes('anonymous')) {\n\t\treturn user;\n\t}\n\n\tawait Analytics.saveUserData({\n\t\tdate: convertDateToInt(user.createdAt),\n\t});\n\n\treturn user;\n};\n\nexport const fillFirstDaysOfUsersIfNeeded = async (date: Date): Promise<void> => {\n\tconst usersFromAnalytics = await Analytics.findByTypeBeforeDate({\n\t\ttype: 'users',\n\t\tdate: convertDateToInt(date),\n\t}).toArray();\n\tif (!usersFromAnalytics.length) {\n\t\tconst startOfPeriod = moment(date).subtract(90, 'days').toDate();\n\t\tconst users = (await Users.getTotalOfRegisteredUsersByDate({\n\t\t\tstart: startOfPeriod,\n\t\t\tend: date,\n\t\t})) as {\n\t\t\tdate: string;\n\t\t\tusers: number;\n\t\t\ttype: 'users';\n\t\t}[];\n\t\tusers.forEach((user) =>\n\t\t\tAnalytics.insertOne({\n\t\t\t\t...user,\n\t\t\t\tdate: parseInt(user.date),\n\t\t\t}),\n\t\t);\n\t}\n};\n\nexport const findWeeklyUsersRegisteredData = async ({\n\tstart,\n\tend,\n}: {\n\tstart: Date;\n\tend: Date;\n}): Promise<{\n\tdays: { day: Date; users: number }[];\n\tperiod: {\n\t\tcount: number;\n\t\tvariation: number;\n\t};\n\tyesterday: {\n\t\tcount: number;\n\t\tvariation: number;\n\t};\n}> => {\n\tconst daysBetweenDates = diffBetweenDaysInclusive(end, start);\n\tconst endOfLastWeek = moment(start).clone().subtract(1, 'days').toDate();\n\tconst startOfLastWeek = moment(endOfLastWeek).clone().subtract(daysBetweenDates, 'days').toDate();\n\tconst today = convertDateToInt(end);\n\tconst yesterday = convertDateToInt(moment(end).clone().subtract(1, 'days').toDate());\n\tconst currentPeriodUsers = await Analytics.getTotalOfRegisteredUsersByDate({\n\t\tstart: convertDateToInt(start),\n\t\tend: convertDateToInt(end),\n\t\toptions: { count: daysBetweenDates, sort: { _id: -1 } },\n\t}).toArray();\n\tconst lastPeriodUsers = await Analytics.getTotalOfRegisteredUsersByDate({\n\t\tstart: convertDateToInt(startOfLastWeek),\n\t\tend: convertDateToInt(endOfLastWeek),\n\t\toptions: { count: daysBetweenDates, sort: { _id: -1 } },\n\t}).toArray();\n\tconst yesterdayUsers = currentPeriodUsers.find((item) => item._id === yesterday)?.users || 0;\n\tconst todayUsers = currentPeriodUsers.find((item) => item._id === today)?.users || 0;\n\tconst currentPeriodTotalUsers = getTotalOfWeekItems(currentPeriodUsers, 'users');\n\tconst lastPeriodTotalUsers = getTotalOfWeekItems(lastPeriodUsers, 'users');\n\treturn {\n\t\tdays: currentPeriodUsers.map((day) => ({ day: convertIntToDate(day._id), users: day.users })),\n\t\tperiod: {\n\t\t\tcount: currentPeriodTotalUsers,\n\t\t\tvariation: currentPeriodTotalUsers - lastPeriodTotalUsers,\n\t\t},\n\t\tyesterday: {\n\t\t\tcount: yesterdayUsers,\n\t\t\tvariation: todayUsers - yesterdayUsers,\n\t\t},\n\t};\n};\n\nconst createDestructuredDate = (\n\tinput: moment.MomentInput,\n): {\n\tyear: number;\n\tmonth: number;\n\tday: number;\n} => {\n\tconst date = moment(input);\n\n\treturn {\n\t\tyear: date.year(),\n\t\tmonth: date.month() + 1,\n\t\tday: date.date(),\n\t};\n};\n\nexport const findActiveUsersMonthlyData = async ({\n\tstart,\n\tend,\n}: {\n\tstart: Date;\n\tend: Date;\n}): Promise<{\n\tmonth: {\n\t\tday: number;\n\t\tmonth: number;\n\t\tyear: number;\n\t\tusersList: IUser['_id'][];\n\t\tusers: number;\n\t}[];\n}> => ({\n\tmonth: await Sessions.getActiveUsersOfPeriodByDayBetweenDates({\n\t\tstart: createDestructuredDate(start),\n\t\tend: createDestructuredDate(end),\n\t}),\n});\n\nexport const findBusiestsChatsInADayByHours = async ({\n\tstart,\n}: {\n\tstart: Date;\n}): Promise<{\n\thours: {\n\t\thour: number;\n\t\tusers: number;\n\t}[];\n}> => ({\n\thours: await Sessions.getBusiestTimeWithinHoursPeriod({\n\t\tstart: moment(start).subtract(24, 'hours').toDate(),\n\t\tend: start,\n\t\tgroupSize: 2,\n\t}),\n});\n\nexport const findBusiestsChatsWithinAWeek = async ({\n\tstart,\n}: {\n\tstart: Date;\n}): Promise<{\n\tmonth: {\n\t\tday: number;\n\t\tmonth: number;\n\t\tyear: number;\n\t\tusers: number;\n\t}[];\n}> => ({\n\tmonth: await Sessions.getTotalOfSessionsByDayBetweenDates({\n\t\tstart: createDestructuredDate(moment(start).subtract(7, 'days')),\n\t\tend: createDestructuredDate(start),\n\t}),\n});\n\nexport const findUserSessionsByHourWithinAWeek = async ({\n\tstart,\n\tend,\n}: {\n\tstart: Date;\n\tend: Date;\n}): Promise<{\n\tweek: {\n\t\thour: number;\n\t\tday: number;\n\t\tmonth: number;\n\t\tyear: number;\n\t\tusers: number;\n\t}[];\n}> => ({\n\tweek: await Sessions.getTotalOfSessionByHourAndDayBetweenDates({\n\t\tstart,\n\t\tend,\n\t}),\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/lib/engagementDashboard/users.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/lib/engagementDashboard/users.ts","inputSourceMap":{"version":3,"file":"ee/server/lib/engagementDashboard/users.ts","sourceRoot":"","sources":["ee/server/lib/engagementDashboard/users.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Users, Analytics, Sessions } from '@rocket.chat/models';\nimport moment from 'moment';\n\nimport { convertDateToInt, diffBetweenDaysInclusive, getTotalOfWeekItems, convertIntToDate } from './date';\n\nexport const handleUserCreated = async (user: IUser): Promise<IUser> => {\n\tif (user.roles?.includes('anonymous')) {\n\t\treturn user;\n\t}\n\n\tawait Analytics.saveUserData({\n\t\tdate: convertDateToInt(user.createdAt),\n\t});\n\n\treturn user;\n};\n\nexport const fillFirstDaysOfUsersIfNeeded = async (date: Date): Promise<void> => {\n\tconst usersFromAnalytics = await Analytics.findByTypeBeforeDate({\n\t\ttype: 'users',\n\t\tdate: convertDateToInt(date),\n\t}).toArray();\n\tif (!usersFromAnalytics.length) {\n\t\tconst startOfPeriod = moment(date).subtract(90, 'days').toDate();\n\t\tconst users = (await Users.getTotalOfRegisteredUsersByDate({\n\t\t\tstart: startOfPeriod,\n\t\t\tend: date,\n\t\t})) as {\n\t\t\tdate: string;\n\t\t\tusers: number;\n\t\t\ttype: 'users';\n\t\t}[];\n\t\tusers.forEach((user) =>\n\t\t\tAnalytics.insertOne({\n\t\t\t\t...user,\n\t\t\t\tdate: parseInt(user.date),\n\t\t\t}),\n\t\t);\n\t}\n};\n\nexport const findWeeklyUsersRegisteredData = async ({\n\tstart,\n\tend,\n}: {\n\tstart: Date;\n\tend: Date;\n}): Promise<{\n\tdays: { day: Date; users: number }[];\n\tperiod: {\n\t\tcount: number;\n\t\tvariation: number;\n\t};\n\tyesterday: {\n\t\tcount: number;\n\t\tvariation: number;\n\t};\n}> => {\n\tconst daysBetweenDates = diffBetweenDaysInclusive(end, start);\n\tconst endOfLastWeek = moment(start).clone().subtract(1, 'days').toDate();\n\tconst startOfLastWeek = moment(endOfLastWeek).clone().subtract(daysBetweenDates, 'days').toDate();\n\tconst today = convertDateToInt(end);\n\tconst yesterday = convertDateToInt(moment(end).clone().subtract(1, 'days').toDate());\n\tconst currentPeriodUsers = await Analytics.getTotalOfRegisteredUsersByDate({\n\t\tstart: convertDateToInt(start),\n\t\tend: convertDateToInt(end),\n\t\toptions: { count: daysBetweenDates, sort: { _id: -1 } },\n\t}).toArray();\n\tconst lastPeriodUsers = await Analytics.getTotalOfRegisteredUsersByDate({\n\t\tstart: convertDateToInt(startOfLastWeek),\n\t\tend: convertDateToInt(endOfLastWeek),\n\t\toptions: { count: daysBetweenDates, sort: { _id: -1 } },\n\t}).toArray();\n\tconst yesterdayUsers = currentPeriodUsers.find((item) => item._id === yesterday)?.users || 0;\n\tconst todayUsers = currentPeriodUsers.find((item) => item._id === today)?.users || 0;\n\tconst currentPeriodTotalUsers = getTotalOfWeekItems(currentPeriodUsers, 'users');\n\tconst lastPeriodTotalUsers = getTotalOfWeekItems(lastPeriodUsers, 'users');\n\treturn {\n\t\tdays: currentPeriodUsers.map((day) => ({ day: convertIntToDate(day._id), users: day.users })),\n\t\tperiod: {\n\t\t\tcount: currentPeriodTotalUsers,\n\t\t\tvariation: currentPeriodTotalUsers - lastPeriodTotalUsers,\n\t\t},\n\t\tyesterday: {\n\t\t\tcount: yesterdayUsers,\n\t\t\tvariation: todayUsers - yesterdayUsers,\n\t\t},\n\t};\n};\n\nconst createDestructuredDate = (\n\tinput: moment.MomentInput,\n): {\n\tyear: number;\n\tmonth: number;\n\tday: number;\n} => {\n\tconst date = moment(input);\n\n\treturn {\n\t\tyear: date.year(),\n\t\tmonth: date.month() + 1,\n\t\tday: date.date(),\n\t};\n};\n\nexport const findActiveUsersMonthlyData = async ({\n\tstart,\n\tend,\n}: {\n\tstart: Date;\n\tend: Date;\n}): Promise<{\n\tmonth: {\n\t\tday: number;\n\t\tmonth: number;\n\t\tyear: number;\n\t\tusersList: IUser['_id'][];\n\t\tusers: number;\n\t}[];\n}> => ({\n\tmonth: await Sessions.getActiveUsersOfPeriodByDayBetweenDates({\n\t\tstart: createDestructuredDate(start),\n\t\tend: createDestructuredDate(end),\n\t}),\n});\n\nexport const findBusiestsChatsInADayByHours = async ({\n\tstart,\n}: {\n\tstart: Date;\n}): Promise<{\n\thours: {\n\t\thour: number;\n\t\tusers: number;\n\t}[];\n}> => ({\n\thours: await Sessions.getBusiestTimeWithinHoursPeriod({\n\t\tstart: moment(start).subtract(24, 'hours').toDate(),\n\t\tend: start,\n\t\tgroupSize: 2,\n\t}),\n});\n\nexport const findBusiestsChatsWithinAWeek = async ({\n\tstart,\n}: {\n\tstart: Date;\n}): Promise<{\n\tmonth: {\n\t\tday: number;\n\t\tmonth: number;\n\t\tyear: number;\n\t\tusers: number;\n\t}[];\n}> => ({\n\tmonth: await Sessions.getTotalOfSessionsByDayBetweenDates({\n\t\tstart: createDestructuredDate(moment(start).subtract(7, 'days')),\n\t\tend: createDestructuredDate(start),\n\t}),\n});\n\nexport const findUserSessionsByHourWithinAWeek = async ({\n\tstart,\n\tend,\n}: {\n\tstart: Date;\n\tend: Date;\n}): Promise<{\n\tweek: {\n\t\thour: number;\n\t\tday: number;\n\t\tmonth: number;\n\t\tyear: number;\n\t\tusers: number;\n\t}[];\n}> => ({\n\tweek: await Sessions.getTotalOfSessionByHourAndDayBetweenDates({\n\t\tstart,\n\t\tend,\n\t}),\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      handleUserCreated: () => handleUserCreated,\n      fillFirstDaysOfUsersIfNeeded: () => fillFirstDaysOfUsersIfNeeded,\n      findWeeklyUsersRegisteredData: () => findWeeklyUsersRegisteredData,\n      findActiveUsersMonthlyData: () => findActiveUsersMonthlyData,\n      findBusiestsChatsInADayByHours: () => findBusiestsChatsInADayByHours,\n      findBusiestsChatsWithinAWeek: () => findBusiestsChatsWithinAWeek,\n      findUserSessionsByHourWithinAWeek: () => findUserSessionsByHourWithinAWeek\n    });\n    let Users, Analytics, Sessions;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      },\n      Analytics(v) {\n        Analytics = v;\n      },\n      Sessions(v) {\n        Sessions = v;\n      }\n    }, 0);\n    let moment;\n    module.link(\"moment\", {\n      default(v) {\n        moment = v;\n      }\n    }, 1);\n    let convertDateToInt, diffBetweenDaysInclusive, getTotalOfWeekItems, convertIntToDate;\n    module.link(\"./date\", {\n      convertDateToInt(v) {\n        convertDateToInt = v;\n      },\n      diffBetweenDaysInclusive(v) {\n        diffBetweenDaysInclusive = v;\n      },\n      getTotalOfWeekItems(v) {\n        getTotalOfWeekItems = v;\n      },\n      convertIntToDate(v) {\n        convertIntToDate = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const handleUserCreated = async user => {\n      var _user$roles;\n      if ((_user$roles = user.roles) !== null && _user$roles !== void 0 && _user$roles.includes('anonymous')) {\n        return user;\n      }\n      await Analytics.saveUserData({\n        date: convertDateToInt(user.createdAt)\n      });\n      return user;\n    };\n    const fillFirstDaysOfUsersIfNeeded = async date => {\n      const usersFromAnalytics = await Analytics.findByTypeBeforeDate({\n        type: 'users',\n        date: convertDateToInt(date)\n      }).toArray();\n      if (!usersFromAnalytics.length) {\n        const startOfPeriod = moment(date).subtract(90, 'days').toDate();\n        const users = await Users.getTotalOfRegisteredUsersByDate({\n          start: startOfPeriod,\n          end: date\n        });\n        users.forEach(user => Analytics.insertOne(_objectSpread(_objectSpread({}, user), {}, {\n          date: parseInt(user.date)\n        })));\n      }\n    };\n    const findWeeklyUsersRegisteredData = async _ref => {\n      var _currentPeriodUsers$f, _currentPeriodUsers$f2;\n      let {\n        start,\n        end\n      } = _ref;\n      const daysBetweenDates = diffBetweenDaysInclusive(end, start);\n      const endOfLastWeek = moment(start).clone().subtract(1, 'days').toDate();\n      const startOfLastWeek = moment(endOfLastWeek).clone().subtract(daysBetweenDates, 'days').toDate();\n      const today = convertDateToInt(end);\n      const yesterday = convertDateToInt(moment(end).clone().subtract(1, 'days').toDate());\n      const currentPeriodUsers = await Analytics.getTotalOfRegisteredUsersByDate({\n        start: convertDateToInt(start),\n        end: convertDateToInt(end),\n        options: {\n          count: daysBetweenDates,\n          sort: {\n            _id: -1\n          }\n        }\n      }).toArray();\n      const lastPeriodUsers = await Analytics.getTotalOfRegisteredUsersByDate({\n        start: convertDateToInt(startOfLastWeek),\n        end: convertDateToInt(endOfLastWeek),\n        options: {\n          count: daysBetweenDates,\n          sort: {\n            _id: -1\n          }\n        }\n      }).toArray();\n      const yesterdayUsers = ((_currentPeriodUsers$f = currentPeriodUsers.find(item => item._id === yesterday)) === null || _currentPeriodUsers$f === void 0 ? void 0 : _currentPeriodUsers$f.users) || 0;\n      const todayUsers = ((_currentPeriodUsers$f2 = currentPeriodUsers.find(item => item._id === today)) === null || _currentPeriodUsers$f2 === void 0 ? void 0 : _currentPeriodUsers$f2.users) || 0;\n      const currentPeriodTotalUsers = getTotalOfWeekItems(currentPeriodUsers, 'users');\n      const lastPeriodTotalUsers = getTotalOfWeekItems(lastPeriodUsers, 'users');\n      return {\n        days: currentPeriodUsers.map(day => ({\n          day: convertIntToDate(day._id),\n          users: day.users\n        })),\n        period: {\n          count: currentPeriodTotalUsers,\n          variation: currentPeriodTotalUsers - lastPeriodTotalUsers\n        },\n        yesterday: {\n          count: yesterdayUsers,\n          variation: todayUsers - yesterdayUsers\n        }\n      };\n    };\n    const createDestructuredDate = input => {\n      const date = moment(input);\n      return {\n        year: date.year(),\n        month: date.month() + 1,\n        day: date.date()\n      };\n    };\n    const findActiveUsersMonthlyData = async _ref2 => {\n      let {\n        start,\n        end\n      } = _ref2;\n      return {\n        month: await Sessions.getActiveUsersOfPeriodByDayBetweenDates({\n          start: createDestructuredDate(start),\n          end: createDestructuredDate(end)\n        })\n      };\n    };\n    const findBusiestsChatsInADayByHours = async _ref3 => {\n      let {\n        start\n      } = _ref3;\n      return {\n        hours: await Sessions.getBusiestTimeWithinHoursPeriod({\n          start: moment(start).subtract(24, 'hours').toDate(),\n          end: start,\n          groupSize: 2\n        })\n      };\n    };\n    const findBusiestsChatsWithinAWeek = async _ref4 => {\n      let {\n        start\n      } = _ref4;\n      return {\n        month: await Sessions.getTotalOfSessionsByDayBetweenDates({\n          start: createDestructuredDate(moment(start).subtract(7, 'days')),\n          end: createDestructuredDate(start)\n        })\n      };\n    };\n    const findUserSessionsByHourWithinAWeek = async _ref5 => {\n      let {\n        start,\n        end\n      } = _ref5;\n      return {\n        week: await Sessions.getTotalOfSessionByHourAndDayBetweenDates({\n          start,\n          end\n        })\n      };\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","handleUserCreated","fillFirstDaysOfUsersIfNeeded","findWeeklyUsersRegisteredData","findActiveUsersMonthlyData","findBusiestsChatsInADayByHours","findBusiestsChatsWithinAWeek","findUserSessionsByHourWithinAWeek","Users","Analytics","Sessions","moment","convertDateToInt","diffBetweenDaysInclusive","getTotalOfWeekItems","convertIntToDate","__reifyWaitForDeps__","user","_user$roles","roles","includes","saveUserData","date","createdAt","usersFromAnalytics","findByTypeBeforeDate","type","toArray","length","startOfPeriod","subtract","toDate","users","getTotalOfRegisteredUsersByDate","start","end","forEach","insertOne","parseInt","_ref","_currentPeriodUsers$f","_currentPeriodUsers$f2","daysBetweenDates","endOfLastWeek","clone","startOfLastWeek","today","yesterday","currentPeriodUsers","options","count","sort","_id","lastPeriodUsers","yesterdayUsers","find","item","todayUsers","currentPeriodTotalUsers","lastPeriodTotalUsers","days","map","day","period","variation","createDestructuredDate","input","year","month","_ref2","getActiveUsersOfPeriodByDayBetweenDates","_ref3","hours","getBusiestTimeWithinHoursPeriod","groupSize","_ref4","getTotalOfSessionsByDayBetweenDates","_ref5","week","getTotalOfSessionByHourAndDayBetweenDates","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/lib/engagementDashboard/users.ts"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Users, Analytics, Sessions } from '@rocket.chat/models';\nimport moment from 'moment';\n\nimport { convertDateToInt, diffBetweenDaysInclusive, getTotalOfWeekItems, convertIntToDate } from './date';\n\nexport const handleUserCreated = async (user: IUser): Promise<IUser> => {\n\tif (user.roles?.includes('anonymous')) {\n\t\treturn user;\n\t}\n\n\tawait Analytics.saveUserData({\n\t\tdate: convertDateToInt(user.createdAt),\n\t});\n\n\treturn user;\n};\n\nexport const fillFirstDaysOfUsersIfNeeded = async (date: Date): Promise<void> => {\n\tconst usersFromAnalytics = await Analytics.findByTypeBeforeDate({\n\t\ttype: 'users',\n\t\tdate: convertDateToInt(date),\n\t}).toArray();\n\tif (!usersFromAnalytics.length) {\n\t\tconst startOfPeriod = moment(date).subtract(90, 'days').toDate();\n\t\tconst users = (await Users.getTotalOfRegisteredUsersByDate({\n\t\t\tstart: startOfPeriod,\n\t\t\tend: date,\n\t\t})) as {\n\t\t\tdate: string;\n\t\t\tusers: number;\n\t\t\ttype: 'users';\n\t\t}[];\n\t\tusers.forEach((user) =>\n\t\t\tAnalytics.insertOne({\n\t\t\t\t...user,\n\t\t\t\tdate: parseInt(user.date),\n\t\t\t}),\n\t\t);\n\t}\n};\n\nexport const findWeeklyUsersRegisteredData = async ({\n\tstart,\n\tend,\n}: {\n\tstart: Date;\n\tend: Date;\n}): Promise<{\n\tdays: { day: Date; users: number }[];\n\tperiod: {\n\t\tcount: number;\n\t\tvariation: number;\n\t};\n\tyesterday: {\n\t\tcount: number;\n\t\tvariation: number;\n\t};\n}> => {\n\tconst daysBetweenDates = diffBetweenDaysInclusive(end, start);\n\tconst endOfLastWeek = moment(start).clone().subtract(1, 'days').toDate();\n\tconst startOfLastWeek = moment(endOfLastWeek).clone().subtract(daysBetweenDates, 'days').toDate();\n\tconst today = convertDateToInt(end);\n\tconst yesterday = convertDateToInt(moment(end).clone().subtract(1, 'days').toDate());\n\tconst currentPeriodUsers = await Analytics.getTotalOfRegisteredUsersByDate({\n\t\tstart: convertDateToInt(start),\n\t\tend: convertDateToInt(end),\n\t\toptions: { count: daysBetweenDates, sort: { _id: -1 } },\n\t}).toArray();\n\tconst lastPeriodUsers = await Analytics.getTotalOfRegisteredUsersByDate({\n\t\tstart: convertDateToInt(startOfLastWeek),\n\t\tend: convertDateToInt(endOfLastWeek),\n\t\toptions: { count: daysBetweenDates, sort: { _id: -1 } },\n\t}).toArray();\n\tconst yesterdayUsers = currentPeriodUsers.find((item) => item._id === yesterday)?.users || 0;\n\tconst todayUsers = currentPeriodUsers.find((item) => item._id === today)?.users || 0;\n\tconst currentPeriodTotalUsers = getTotalOfWeekItems(currentPeriodUsers, 'users');\n\tconst lastPeriodTotalUsers = getTotalOfWeekItems(lastPeriodUsers, 'users');\n\treturn {\n\t\tdays: currentPeriodUsers.map((day) => ({ day: convertIntToDate(day._id), users: day.users })),\n\t\tperiod: {\n\t\t\tcount: currentPeriodTotalUsers,\n\t\t\tvariation: currentPeriodTotalUsers - lastPeriodTotalUsers,\n\t\t},\n\t\tyesterday: {\n\t\t\tcount: yesterdayUsers,\n\t\t\tvariation: todayUsers - yesterdayUsers,\n\t\t},\n\t};\n};\n\nconst createDestructuredDate = (\n\tinput: moment.MomentInput,\n): {\n\tyear: number;\n\tmonth: number;\n\tday: number;\n} => {\n\tconst date = moment(input);\n\n\treturn {\n\t\tyear: date.year(),\n\t\tmonth: date.month() + 1,\n\t\tday: date.date(),\n\t};\n};\n\nexport const findActiveUsersMonthlyData = async ({\n\tstart,\n\tend,\n}: {\n\tstart: Date;\n\tend: Date;\n}): Promise<{\n\tmonth: {\n\t\tday: number;\n\t\tmonth: number;\n\t\tyear: number;\n\t\tusersList: IUser['_id'][];\n\t\tusers: number;\n\t}[];\n}> => ({\n\tmonth: await Sessions.getActiveUsersOfPeriodByDayBetweenDates({\n\t\tstart: createDestructuredDate(start),\n\t\tend: createDestructuredDate(end),\n\t}),\n});\n\nexport const findBusiestsChatsInADayByHours = async ({\n\tstart,\n}: {\n\tstart: Date;\n}): Promise<{\n\thours: {\n\t\thour: number;\n\t\tusers: number;\n\t}[];\n}> => ({\n\thours: await Sessions.getBusiestTimeWithinHoursPeriod({\n\t\tstart: moment(start).subtract(24, 'hours').toDate(),\n\t\tend: start,\n\t\tgroupSize: 2,\n\t}),\n});\n\nexport const findBusiestsChatsWithinAWeek = async ({\n\tstart,\n}: {\n\tstart: Date;\n}): Promise<{\n\tmonth: {\n\t\tday: number;\n\t\tmonth: number;\n\t\tyear: number;\n\t\tusers: number;\n\t}[];\n}> => ({\n\tmonth: await Sessions.getTotalOfSessionsByDayBetweenDates({\n\t\tstart: createDestructuredDate(moment(start).subtract(7, 'days')),\n\t\tend: createDestructuredDate(start),\n\t}),\n});\n\nexport const findUserSessionsByHourWithinAWeek = async ({\n\tstart,\n\tend,\n}: {\n\tstart: Date;\n\tend: Date;\n}): Promise<{\n\tweek: {\n\t\thour: number;\n\t\tday: number;\n\t\tmonth: number;\n\t\tyear: number;\n\t\tusers: number;\n\t}[];\n}> => ({\n\tweek: await Sessions.getTotalOfSessionByHourAndDayBetweenDates({\n\t\tstart,\n\t\tend,\n\t}),\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"6258c8d83826212ff914a6f394e41e78f9720380"}
