{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/lists/ImagesList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/lists/ImagesList.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/lists/ImagesList.ts","inputSourceMap":{"version":3,"file":"client/lib/lists/ImagesList.ts","sourceRoot":"","sources":["client/lib/lists/ImagesList.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAW1C,MAAM,mBAAmB,GAAG,CAAC,MAAe,EAAE,GAAmB,EAA0B,EAAE,CAAC,MAAM,CAAC,GAAG,KAAK,GAAG,IAAI,KAAK,IAAI,MAAM,CAAC;AAEpI,MAAM,OAAO,UAAW,SAAQ,UAAmB;IACvB;IAA3B,YAA2B,QAA2B;QACrD,KAAK,EAAE,CAAC;QADkB,aAAQ,GAAR,QAAQ,CAAmB;IAEtD,CAAC;IAED,IAAW,OAAO;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAEM,aAAa,CAAC,OAA0B;QAC9C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,KAAK,EAAE,CAAC;IACd,CAAC;IAES,MAAM,CAAC,OAAgB;QAChC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEjC,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC;YAC3C,OAAO,KAAK,CAAC;QACd,CAAC;QAED,OAAO,IAAI,CAAC;IACb,CAAC;CACD","sourcesContent":["import type { IUpload } from '@rocket.chat/core-typings';\n\nimport { RecordList } from './RecordList';\n\ntype FilesMessage = Omit<IUpload, 'rid'> & Required<Pick<IUpload, 'rid'>>;\n\nexport type ImagesListOptions = {\n\troomId: Required<IUpload>['rid'];\n\tstartingFromId?: string;\n\tcount?: number;\n\toffset?: number;\n};\n\nconst isFileMessageInRoom = (upload: IUpload, rid: IUpload['rid']): upload is FilesMessage => upload.rid === rid && 'rid' in upload;\n\nexport class ImagesList extends RecordList<IUpload> {\n\tpublic constructor(private _options: ImagesListOptions) {\n\t\tsuper();\n\t}\n\n\tpublic get options(): ImagesListOptions {\n\t\treturn this._options;\n\t}\n\n\tpublic updateFilters(options: ImagesListOptions): void {\n\t\tthis._options = options;\n\t\tthis.clear();\n\t}\n\n\tprotected filter(message: IUpload): boolean {\n\t\tconst { roomId } = this._options;\n\n\t\tif (!isFileMessageInRoom(message, roomId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/lists/ImagesList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/lists/ImagesList.ts","inputSourceMap":{"version":3,"file":"client/lib/lists/ImagesList.ts","sourceRoot":"","sources":["client/lib/lists/ImagesList.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAW1C,MAAM,mBAAmB,GAAG,CAAC,MAAe,EAAE,GAAmB,EAA0B,EAAE,CAAC,MAAM,CAAC,GAAG,KAAK,GAAG,IAAI,KAAK,IAAI,MAAM,CAAC;AAEpI,MAAM,OAAO,UAAW,SAAQ,UAAmB;IACvB;IAA3B,YAA2B,QAA2B;QACrD,KAAK,EAAE,CAAC;QADkB,aAAQ,GAAR,QAAQ,CAAmB;IAEtD,CAAC;IAED,IAAW,OAAO;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAEM,aAAa,CAAC,OAA0B;QAC9C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,KAAK,EAAE,CAAC;IACd,CAAC;IAES,MAAM,CAAC,OAAgB;QAChC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEjC,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC;YAC3C,OAAO,KAAK,CAAC;QACd,CAAC;QAED,OAAO,IAAI,CAAC;IACb,CAAC;CACD","sourcesContent":["import type { IUpload } from '@rocket.chat/core-typings';\n\nimport { RecordList } from './RecordList';\n\ntype FilesMessage = Omit<IUpload, 'rid'> & Required<Pick<IUpload, 'rid'>>;\n\nexport type ImagesListOptions = {\n\troomId: Required<IUpload>['rid'];\n\tstartingFromId?: string;\n\tcount?: number;\n\toffset?: number;\n};\n\nconst isFileMessageInRoom = (upload: IUpload, rid: IUpload['rid']): upload is FilesMessage => upload.rid === rid && 'rid' in upload;\n\nexport class ImagesList extends RecordList<IUpload> {\n\tpublic constructor(private _options: ImagesListOptions) {\n\t\tsuper();\n\t}\n\n\tpublic get options(): ImagesListOptions {\n\t\treturn this._options;\n\t}\n\n\tpublic updateFilters(options: ImagesListOptions): void {\n\t\tthis._options = options;\n\t\tthis.clear();\n\t}\n\n\tprotected filter(message: IUpload): boolean {\n\t\tconst { roomId } = this._options;\n\n\t\tif (!isFileMessageInRoom(message, roomId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"]}}},"code":"module.export({\n  ImagesList: () => ImagesList\n});\nlet RecordList;\nmodule.link(\"./RecordList\", {\n  RecordList(v) {\n    RecordList = v;\n  }\n}, 0);\nconst isFileMessageInRoom = (upload, rid) => upload.rid === rid && 'rid' in upload;\nclass ImagesList extends RecordList {\n  constructor(_options) {\n    super();\n    this._options = void 0;\n    this._options = _options;\n  }\n  get options() {\n    return this._options;\n  }\n  updateFilters(options) {\n    this._options = options;\n    this.clear();\n  }\n  filter(message) {\n    const {\n      roomId\n    } = this._options;\n    if (!isFileMessageInRoom(message, roomId)) {\n      return false;\n    }\n    return true;\n  }\n}","map":{"version":3,"names":["module","export","ImagesList","RecordList","link","v","isFileMessageInRoom","upload","rid","constructor","_options","options","updateFilters","clear","filter","message","roomId"],"sources":["client/lib/lists/ImagesList.ts"],"sourcesContent":["import type { IUpload } from '@rocket.chat/core-typings';\n\nimport { RecordList } from './RecordList';\n\ntype FilesMessage = Omit<IUpload, 'rid'> & Required<Pick<IUpload, 'rid'>>;\n\nexport type ImagesListOptions = {\n\troomId: Required<IUpload>['rid'];\n\tstartingFromId?: string;\n\tcount?: number;\n\toffset?: number;\n};\n\nconst isFileMessageInRoom = (upload: IUpload, rid: IUpload['rid']): upload is FilesMessage => upload.rid === rid && 'rid' in upload;\n\nexport class ImagesList extends RecordList<IUpload> {\n\tpublic constructor(private _options: ImagesListOptions) {\n\t\tsuper();\n\t}\n\n\tpublic get options(): ImagesListOptions {\n\t\treturn this._options;\n\t}\n\n\tpublic updateFilters(options: ImagesListOptions): void {\n\t\tthis._options = options;\n\t\tthis.clear();\n\t}\n\n\tprotected filter(message: IUpload): boolean {\n\t\tconst { roomId } = this._options;\n\n\t\tif (!isFileMessageInRoom(message, roomId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"],"mappings":"AAEAA,MAAA,CAAOC,MAAE;EAAAC,UAAY,EAAAA,CAAA,KAAMA;AAAA,CAAc,CAAC;AAAA,IAAAC,UAAA;AAAAH,MAAA,CAAAI,IAAA;EAAAD,WAAAE,CAAA;IAAAF,UAAA,GAAAE,CAAA;EAAA;AAAA;AAW1C,MAAMC,mBAAmB,GAAGA,CAACC,MAAe,EAAEC,GAAmB,KAA6BD,MAAM,CAACC,GAAG,KAAKA,GAAG,IAAI,KAAK,IAAID,MAAM;AAE7H,MAAOL,UAAW,SAAQC,UAAmB;EAClDM,YAA2BC,QAA2B;IACrD,KAAK,EAAE;IAAC,KADkBA,QAAA;IAAA,KAAAA,QAAQ,GAARA,QAAQ;EAEnC;EAEA,IAAWC,OAAOA,CAAA;IACjB,OAAO,IAAI,CAACD,QAAQ;EACrB;EAEOE,aAAaA,CAACD,OAA0B;IAC9C,IAAI,CAACD,QAAQ,GAAGC,OAAO;IACvB,IAAI,CAACE,KAAK,EAAE;EACb;EAEUC,MAAMA,CAACC,OAAgB;IAChC,MAAM;MAAEC;IAAM,CAAE,GAAG,IAAI,CAACN,QAAQ;IAEhC,IAAI,CAACJ,mBAAmB,CAACS,OAAO,EAAEC,MAAM,CAAC,EAAE;MAC1C,OAAO,KAAK;IACb;IAEA,OAAO,IAAI;EACZ","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"166fbb52c601bdfddb7873f3b3bd21ebbd091a51"}
