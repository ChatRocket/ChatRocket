{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/methods/pinMessage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/methods/pinMessage.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/methods/pinMessage.ts","inputSourceMap":{"version":3,"file":"client/methods/pinMessage.ts","sourceRoot":"","sources":["client/methods/pinMessage.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AACxE,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAC;AAErD,MAAM,CAAC,OAAO,CAAgB;IAC7B,UAAU,CAAC,OAAiB;QAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC;YACtB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,sBAAsB,EAAE,gBAAgB,EAAE;gBAChE,MAAM,EAAE,YAAY;aACpB,CAAC,CAAC;QACJ,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAE,CAAC;YAC3C,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,iCAAiC,EAAE;gBAChF,MAAM,EAAE,YAAY;aACpB,CAAC,CAAC;QACJ,CAAC;QACD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;YACrD,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,iCAAiC,EAAE;gBAClF,MAAM,EAAE,YAAY;aACpB,CAAC,CAAC;QACJ,CAAC;QACD,IAAI,OAAO,OAAO,CAAC,GAAG,KAAK,QAAQ,EAAE,CAAC;YACrC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,iBAAiB,EAAE;gBAClE,MAAM,EAAE,YAAY;aACpB,CAAC,CAAC;QACJ,CAAC;QAED,WAAW,CAAC,MAAM,CACjB;YACC,GAAG,EAAE,OAAO,CAAC,GAAG;YAChB,GAAG,EAAE,OAAO,CAAC,GAAG;SAChB,EACD;YACC,IAAI,EAAE;gBACL,MAAM,EAAE,IAAI;aACZ;SACD,CACD,CAAC;QAEF,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;QAEtD,IAAI,CAAC,GAAG,EAAE,CAAC;YACV,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,uBAAuB,EAAE;gBACxE,MAAM,EAAE,YAAY;aACpB,CAAC,CAAC;QACJ,CAAC;QAED,OAAO,GAAG,CAAC;IACZ,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Meteor } from 'meteor/meteor';\n\nimport { ChatMessage, ChatSubscription } from '../../app/models/client';\nimport { settings } from '../../app/settings/client';\n\nMeteor.methods<ServerMethods>({\n\tpinMessage(message: IMessage) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t});\n\t\t}\n\t\tif (!settings.get('Message_AllowPinning')) {\n\t\t\tthrow new Meteor.Error('pinning-not-allowed', 'Pinning messages is not allowed', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t});\n\t\t}\n\t\tif (!ChatSubscription.findOne({ rid: message.rid })) {\n\t\t\tthrow new Meteor.Error('error-pinning-message', 'Pinning messages is not allowed', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t});\n\t\t}\n\t\tif (typeof message._id !== 'string') {\n\t\t\tthrow new Meteor.Error('error-pinning-message', 'Invalid message', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t});\n\t\t}\n\n\t\tChatMessage.update(\n\t\t\t{\n\t\t\t\t_id: message._id,\n\t\t\t\trid: message.rid,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tpinned: true,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tconst msg = ChatMessage.findOne({ _id: message._id });\n\n\t\tif (!msg) {\n\t\t\tthrow new Meteor.Error('error-pinning-message', 'Error pinning message', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t});\n\t\t}\n\n\t\treturn msg;\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/methods/pinMessage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/methods/pinMessage.ts","inputSourceMap":{"version":3,"file":"client/methods/pinMessage.ts","sourceRoot":"","sources":["client/methods/pinMessage.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AACxE,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAC;AAErD,MAAM,CAAC,OAAO,CAAgB;IAC7B,UAAU,CAAC,OAAiB;QAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC;YACtB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,sBAAsB,EAAE,gBAAgB,EAAE;gBAChE,MAAM,EAAE,YAAY;aACpB,CAAC,CAAC;QACJ,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAE,CAAC;YAC3C,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,iCAAiC,EAAE;gBAChF,MAAM,EAAE,YAAY;aACpB,CAAC,CAAC;QACJ,CAAC;QACD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;YACrD,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,iCAAiC,EAAE;gBAClF,MAAM,EAAE,YAAY;aACpB,CAAC,CAAC;QACJ,CAAC;QACD,IAAI,OAAO,OAAO,CAAC,GAAG,KAAK,QAAQ,EAAE,CAAC;YACrC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,iBAAiB,EAAE;gBAClE,MAAM,EAAE,YAAY;aACpB,CAAC,CAAC;QACJ,CAAC;QAED,WAAW,CAAC,MAAM,CACjB;YACC,GAAG,EAAE,OAAO,CAAC,GAAG;YAChB,GAAG,EAAE,OAAO,CAAC,GAAG;SAChB,EACD;YACC,IAAI,EAAE;gBACL,MAAM,EAAE,IAAI;aACZ;SACD,CACD,CAAC;QAEF,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;QAEtD,IAAI,CAAC,GAAG,EAAE,CAAC;YACV,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,uBAAuB,EAAE;gBACxE,MAAM,EAAE,YAAY;aACpB,CAAC,CAAC;QACJ,CAAC;QAED,OAAO,GAAG,CAAC;IACZ,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Meteor } from 'meteor/meteor';\n\nimport { ChatMessage, ChatSubscription } from '../../app/models/client';\nimport { settings } from '../../app/settings/client';\n\nMeteor.methods<ServerMethods>({\n\tpinMessage(message: IMessage) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t});\n\t\t}\n\t\tif (!settings.get('Message_AllowPinning')) {\n\t\t\tthrow new Meteor.Error('pinning-not-allowed', 'Pinning messages is not allowed', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t});\n\t\t}\n\t\tif (!ChatSubscription.findOne({ rid: message.rid })) {\n\t\t\tthrow new Meteor.Error('error-pinning-message', 'Pinning messages is not allowed', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t});\n\t\t}\n\t\tif (typeof message._id !== 'string') {\n\t\t\tthrow new Meteor.Error('error-pinning-message', 'Invalid message', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t});\n\t\t}\n\n\t\tChatMessage.update(\n\t\t\t{\n\t\t\t\t_id: message._id,\n\t\t\t\trid: message.rid,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tpinned: true,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tconst msg = ChatMessage.findOne({ _id: message._id });\n\n\t\tif (!msg) {\n\t\t\tthrow new Meteor.Error('error-pinning-message', 'Error pinning message', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t});\n\t\t}\n\n\t\treturn msg;\n\t},\n});\n"]}}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 0);\nlet ChatMessage, ChatSubscription;\nmodule.link(\"../../app/models/client\", {\n  ChatMessage(v) {\n    ChatMessage = v;\n  },\n  ChatSubscription(v) {\n    ChatSubscription = v;\n  }\n}, 1);\nlet settings;\nmodule.link(\"../../app/settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n}, 2);\nMeteor.methods({\n  pinMessage(message) {\n    if (!Meteor.userId()) {\n      throw new Meteor.Error('error-not-authorized', 'Not authorized', {\n        method: 'pinMessage'\n      });\n    }\n    if (!settings.get('Message_AllowPinning')) {\n      throw new Meteor.Error('pinning-not-allowed', 'Pinning messages is not allowed', {\n        method: 'pinMessage'\n      });\n    }\n    if (!ChatSubscription.findOne({\n      rid: message.rid\n    })) {\n      throw new Meteor.Error('error-pinning-message', 'Pinning messages is not allowed', {\n        method: 'pinMessage'\n      });\n    }\n    if (typeof message._id !== 'string') {\n      throw new Meteor.Error('error-pinning-message', 'Invalid message', {\n        method: 'pinMessage'\n      });\n    }\n    ChatMessage.update({\n      _id: message._id,\n      rid: message.rid\n    }, {\n      $set: {\n        pinned: true\n      }\n    });\n    const msg = ChatMessage.findOne({\n      _id: message._id\n    });\n    if (!msg) {\n      throw new Meteor.Error('error-pinning-message', 'Error pinning message', {\n        method: 'pinMessage'\n      });\n    }\n    return msg;\n  }\n});","map":{"version":3,"names":["Meteor","module","link","v","ChatMessage","ChatSubscription","settings","methods","pinMessage","message","userId","Error","method","get","findOne","rid","_id","update","$set","pinned","msg"],"sources":["client/methods/pinMessage.ts"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Meteor } from 'meteor/meteor';\n\nimport { ChatMessage, ChatSubscription } from '../../app/models/client';\nimport { settings } from '../../app/settings/client';\n\nMeteor.methods<ServerMethods>({\n\tpinMessage(message: IMessage) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t});\n\t\t}\n\t\tif (!settings.get('Message_AllowPinning')) {\n\t\t\tthrow new Meteor.Error('pinning-not-allowed', 'Pinning messages is not allowed', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t});\n\t\t}\n\t\tif (!ChatSubscription.findOne({ rid: message.rid })) {\n\t\t\tthrow new Meteor.Error('error-pinning-message', 'Pinning messages is not allowed', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t});\n\t\t}\n\t\tif (typeof message._id !== 'string') {\n\t\t\tthrow new Meteor.Error('error-pinning-message', 'Invalid message', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t});\n\t\t}\n\n\t\tChatMessage.update(\n\t\t\t{\n\t\t\t\t_id: message._id,\n\t\t\t\trid: message.rid,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tpinned: true,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tconst msg = ChatMessage.findOne({ _id: message._id });\n\n\t\tif (!msg) {\n\t\t\tthrow new Meteor.Error('error-pinning-message', 'Error pinning message', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t});\n\t\t}\n\n\t\treturn msg;\n\t},\n});\n"],"mappings":"AAEA,IAAAA,MAAS;AAAAC,MAAQ,CAAAC,IAAA,CAAM,eAAe,EAAC;EAAAF,OAAAG,CAAA;IAAAH,MAAA,GAAAG,CAAA;EAAA;AAAA;AAAA,IAAAC,WAAA,EAAAC,gBAAA;AAAAJ,MAAA,CAAAC,IAAA;EAAAE,YAAAD,CAAA;IAAAC,WAAA,GAAAD,CAAA;EAAA;EAAAE,iBAAAF,CAAA;IAAAE,gBAAA,GAAAF,CAAA;EAAA;AAAA;AAAA,IAAAG,QAAA;AAAAL,MAAA,CAAAC,IAAA;EAAAI,SAAAH,CAAA;IAAAG,QAAA,GAAAH,CAAA;EAAA;AAAA;AAKvCH,MAAM,CAACO,OAAO,CAAgB;EAC7BC,UAAUA,CAACC,OAAiB;IAC3B,IAAI,CAACT,MAAM,CAACU,MAAM,EAAE,EAAE;MACrB,MAAM,IAAIV,MAAM,CAACW,KAAK,CAAC,sBAAsB,EAAE,gBAAgB,EAAE;QAChEC,MAAM,EAAE;OACR,CAAC;IACH;IACA,IAAI,CAACN,QAAQ,CAACO,GAAG,CAAC,sBAAsB,CAAC,EAAE;MAC1C,MAAM,IAAIb,MAAM,CAACW,KAAK,CAAC,qBAAqB,EAAE,iCAAiC,EAAE;QAChFC,MAAM,EAAE;OACR,CAAC;IACH;IACA,IAAI,CAACP,gBAAgB,CAACS,OAAO,CAAC;MAAEC,GAAG,EAAEN,OAAO,CAACM;IAAG,CAAE,CAAC,EAAE;MACpD,MAAM,IAAIf,MAAM,CAACW,KAAK,CAAC,uBAAuB,EAAE,iCAAiC,EAAE;QAClFC,MAAM,EAAE;OACR,CAAC;IACH;IACA,IAAI,OAAOH,OAAO,CAACO,GAAG,KAAK,QAAQ,EAAE;MACpC,MAAM,IAAIhB,MAAM,CAACW,KAAK,CAAC,uBAAuB,EAAE,iBAAiB,EAAE;QAClEC,MAAM,EAAE;OACR,CAAC;IACH;IAEAR,WAAW,CAACa,MAAM,CACjB;MACCD,GAAG,EAAEP,OAAO,CAACO,GAAG;MAChBD,GAAG,EAAEN,OAAO,CAACM;KACb,EACD;MACCG,IAAI,EAAE;QACLC,MAAM,EAAE;;KAET,CACD;IAED,MAAMC,GAAG,GAAGhB,WAAW,CAACU,OAAO,CAAC;MAAEE,GAAG,EAAEP,OAAO,CAACO;IAAG,CAAE,CAAC;IAErD,IAAI,CAACI,GAAG,EAAE;MACT,MAAM,IAAIpB,MAAM,CAACW,KAAK,CAAC,uBAAuB,EAAE,uBAAuB,EAAE;QACxEC,MAAM,EAAE;OACR,CAAC;IACH;IAEA,OAAOQ,GAAG;EACX;CACA,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d03d71f17b693da2c080d9392a52ae9f5e67e299"}
