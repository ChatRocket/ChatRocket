{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/federation/server/normalizers/message.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/normalizers/message.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/federation/server/normalizers/message.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/federation/server/normalizers/message.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/normalizers/message.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let getNameAndDomain, isFullyQualified;\n    module.link(\"../functions/helpers\", {\n      getNameAndDomain(v) {\n        getNameAndDomain = v;\n      },\n      isFullyQualified(v) {\n        isFullyQualified = v;\n      }\n    }, 0);\n    let getFederationDomain;\n    module.link(\"../lib/getFederationDomain\", {\n      getFederationDomain(v) {\n        getFederationDomain = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const denormalizeMessage = originalResource => {\n      const resource = _objectSpread({}, originalResource);\n      const [username, domain] = getNameAndDomain(resource.u.username);\n      const localDomain = getFederationDomain();\n\n      // Denormalize username\n      resource.u.username = domain === localDomain ? username : resource.u.username;\n\n      // Denormalize mentions\n      for (const mention of resource.mentions) {\n        // Ignore if we are dealing with all, here or rocket.cat\n        if (['all', 'here', 'rocket.cat'].indexOf(mention.username) !== -1) {\n          continue;\n        }\n        const [username, domain] = getNameAndDomain(mention.username);\n        if (domain === localDomain) {\n          const originalUsername = mention.username;\n          mention.username = username;\n          resource.msg = resource.msg.split(originalUsername).join(username);\n        }\n      }\n\n      // Denormalize channels\n      for (const channel of resource.channels) {\n        // Ignore if we are dealing with all, here or rocket.cat\n        if (['all', 'here', 'rocket.cat'].indexOf(channel.name) !== -1) {\n          continue;\n        }\n        const [username, domain] = getNameAndDomain(channel.name);\n        if (domain === localDomain) {\n          const originalUsername = channel.name;\n          channel.name = username;\n          resource.msg = resource.msg.split(originalUsername).join(username);\n        }\n      }\n      return resource;\n    };\n    const denormalizeAllMessages = resources => resources.map(denormalizeMessage);\n    const normalizeMessage = originalResource => {\n      const resource = _objectSpread({}, originalResource);\n      resource.u.username = !isFullyQualified(resource.u.username) ? \"\".concat(resource.u.username, \"@\").concat(getFederationDomain()) : resource.u.username;\n\n      // Federation\n      resource.federation = resource.federation || {\n        origin: getFederationDomain() // The origin of this resource, where it was created\n      };\n\n      // Normalize mentions\n      for (const mention of resource.mentions || []) {\n        // Ignore if we are dealing with all, here or rocket.cat\n        if (['all', 'here', 'rocket.cat'].indexOf(mention.username) !== -1) {\n          continue;\n        }\n        if (!isFullyQualified(mention.username)) {\n          const originalUsername = mention.username;\n          mention.username = \"\".concat(mention.username, \"@\").concat(getFederationDomain());\n          resource.msg = resource.msg.split(originalUsername).join(mention.username);\n        }\n      }\n\n      // Normalize channels\n      for (const channel of resource.channels || []) {\n        if (!isFullyQualified(channel.name)) {\n          const originalUsername = channel.name;\n          channel.name = \"\".concat(channel.name, \"@\").concat(getFederationDomain());\n          resource.msg = resource.msg.split(originalUsername).join(channel.name);\n        }\n      }\n      return resource;\n    };\n    const normalizeAllMessages = resources => resources.map(normalizeMessage);\n    module.exportDefault({\n      denormalizeMessage,\n      denormalizeAllMessages,\n      normalizeMessage,\n      normalizeAllMessages\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","getNameAndDomain","isFullyQualified","getFederationDomain","__reifyWaitForDeps__","denormalizeMessage","originalResource","resource","username","domain","u","localDomain","mention","mentions","indexOf","originalUsername","msg","split","join","channel","channels","name","denormalizeAllMessages","resources","map","normalizeMessage","concat","federation","origin","normalizeAllMessages","exportDefault","__reify_async_result__","_reifyError","self","async"],"sources":["app/federation/server/normalizers/message.js"],"sourcesContent":["import { getNameAndDomain, isFullyQualified } from '../functions/helpers';\nimport { getFederationDomain } from '../lib/getFederationDomain';\n\nconst denormalizeMessage = (originalResource) => {\n\tconst resource = { ...originalResource };\n\n\tconst [username, domain] = getNameAndDomain(resource.u.username);\n\n\tconst localDomain = getFederationDomain();\n\n\t// Denormalize username\n\tresource.u.username = domain === localDomain ? username : resource.u.username;\n\n\t// Denormalize mentions\n\tfor (const mention of resource.mentions) {\n\t\t// Ignore if we are dealing with all, here or rocket.cat\n\t\tif (['all', 'here', 'rocket.cat'].indexOf(mention.username) !== -1) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst [username, domain] = getNameAndDomain(mention.username);\n\n\t\tif (domain === localDomain) {\n\t\t\tconst originalUsername = mention.username;\n\n\t\t\tmention.username = username;\n\n\t\t\tresource.msg = resource.msg.split(originalUsername).join(username);\n\t\t}\n\t}\n\n\t// Denormalize channels\n\tfor (const channel of resource.channels) {\n\t\t// Ignore if we are dealing with all, here or rocket.cat\n\t\tif (['all', 'here', 'rocket.cat'].indexOf(channel.name) !== -1) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst [username, domain] = getNameAndDomain(channel.name);\n\n\t\tif (domain === localDomain) {\n\t\t\tconst originalUsername = channel.name;\n\n\t\t\tchannel.name = username;\n\n\t\t\tresource.msg = resource.msg.split(originalUsername).join(username);\n\t\t}\n\t}\n\n\treturn resource;\n};\n\nconst denormalizeAllMessages = (resources) => resources.map(denormalizeMessage);\n\nconst normalizeMessage = (originalResource) => {\n\tconst resource = { ...originalResource };\n\n\tresource.u.username = !isFullyQualified(resource.u.username) ? `${resource.u.username}@${getFederationDomain()}` : resource.u.username;\n\n\t// Federation\n\tresource.federation = resource.federation || {\n\t\torigin: getFederationDomain(), // The origin of this resource, where it was created\n\t};\n\n\t// Normalize mentions\n\tfor (const mention of resource.mentions || []) {\n\t\t// Ignore if we are dealing with all, here or rocket.cat\n\t\tif (['all', 'here', 'rocket.cat'].indexOf(mention.username) !== -1) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isFullyQualified(mention.username)) {\n\t\t\tconst originalUsername = mention.username;\n\n\t\t\tmention.username = `${mention.username}@${getFederationDomain()}`;\n\n\t\t\tresource.msg = resource.msg.split(originalUsername).join(mention.username);\n\t\t}\n\t}\n\n\t// Normalize channels\n\tfor (const channel of resource.channels || []) {\n\t\tif (!isFullyQualified(channel.name)) {\n\t\t\tconst originalUsername = channel.name;\n\n\t\t\tchannel.name = `${channel.name}@${getFederationDomain()}`;\n\n\t\t\tresource.msg = resource.msg.split(originalUsername).join(channel.name);\n\t\t}\n\t}\n\n\treturn resource;\n};\n\nconst normalizeAllMessages = (resources) => resources.map(normalizeMessage);\n\nexport default {\n\tdenormalizeMessage,\n\tdenormalizeAllMessages,\n\tnormalizeMessage,\n\tnormalizeAllMessages,\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a39865ebf21f5dc33b15b7844a0b655d62d42fa5"}
