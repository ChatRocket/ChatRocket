{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/startup/initialData.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/startup/initialData.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/startup/initialData.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/startup/initialData.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/startup/initialData.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      insertAdminUserFromEnv: () => insertAdminUserFromEnv\n    });\n    let Settings, Rooms, Users;\n    module.link(\"@rocket.chat/models\", {\n      Settings(v) {\n        Settings = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let colors;\n    module.link(\"colors/safe\", {\n      default(v) {\n        colors = v;\n      }\n    }, 1);\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let getUsersInRole;\n    module.link(\"../../app/authorization/server\", {\n      getUsersInRole(v) {\n        getUsersInRole = v;\n      }\n    }, 4);\n    let FileUpload;\n    module.link(\"../../app/file-upload/server\", {\n      FileUpload(v) {\n        FileUpload = v;\n      }\n    }, 5);\n    let RocketChatFile;\n    module.link(\"../../app/file/server\", {\n      RocketChatFile(v) {\n        RocketChatFile = v;\n      }\n    }, 6);\n    let addUserToDefaultChannels;\n    module.link(\"../../app/lib/server/functions/addUserToDefaultChannels\", {\n      addUserToDefaultChannels(v) {\n        addUserToDefaultChannels = v;\n      }\n    }, 7);\n    let checkUsernameAvailability;\n    module.link(\"../../app/lib/server/functions/checkUsernameAvailability\", {\n      checkUsernameAvailability(v) {\n        checkUsernameAvailability = v;\n      }\n    }, 8);\n    let notifyOnSettingChangedById;\n    module.link(\"../../app/lib/server/lib/notifyListener\", {\n      notifyOnSettingChangedById(v) {\n        notifyOnSettingChangedById = v;\n      }\n    }, 9);\n    let settings;\n    module.link(\"../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 10);\n    let validateEmail;\n    module.link(\"../../lib/emailValidator\", {\n      validateEmail(v) {\n        validateEmail = v;\n      }\n    }, 11);\n    let addUserRolesAsync;\n    module.link(\"../lib/roles/addUserRoles\", {\n      addUserRolesAsync(v) {\n        addUserRolesAsync = v;\n      }\n    }, 12);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function insertAdminUserFromEnv() {\n      if (process.env.ADMIN_PASS) {\n        if ((await (await getUsersInRole('admin')).count()) === 0) {\n          const adminUser = {\n            name: 'Administrator',\n            username: 'admin',\n            status: 'offline',\n            statusDefault: 'online',\n            utcOffset: 0,\n            active: true\n          };\n          if (process.env.ADMIN_NAME) {\n            adminUser.name = process.env.ADMIN_NAME;\n          }\n          console.log(colors.green(\"Name: \".concat(adminUser.name)));\n          if (process.env.ADMIN_EMAIL) {\n            if (validateEmail(process.env.ADMIN_EMAIL)) {\n              if (!(await Users.findOneByEmailAddress(process.env.ADMIN_EMAIL))) {\n                adminUser.emails = [{\n                  address: process.env.ADMIN_EMAIL,\n                  verified: process.env.ADMIN_EMAIL_VERIFIED === 'true'\n                }];\n                console.log(colors.green(\"Email: \".concat(process.env.ADMIN_EMAIL)));\n              } else {\n                console.log(colors.red('Email provided already exists; Ignoring environment variables ADMIN_EMAIL'));\n              }\n            } else {\n              console.log(colors.red('Email provided is invalid; Ignoring environment variables ADMIN_EMAIL'));\n            }\n          }\n          if (process.env.ADMIN_USERNAME) {\n            let nameValidation;\n            try {\n              nameValidation = new RegExp(\"^\".concat(settings.get('UTF8_User_Names_Validation'), \"$\"));\n            } catch (error) {\n              nameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n            }\n            if (nameValidation.test(process.env.ADMIN_USERNAME)) {\n              try {\n                await checkUsernameAvailability(process.env.ADMIN_USERNAME);\n                adminUser.username = process.env.ADMIN_USERNAME;\n              } catch (error) {\n                console.log(colors.red('Username provided already exists or is blocked from usage; Ignoring environment variables ADMIN_USERNAME'));\n              }\n            } else {\n              console.log(colors.red('Username provided is invalid; Ignoring environment variables ADMIN_USERNAME'));\n            }\n          }\n          console.log(colors.green(\"Username: \".concat(adminUser.username)));\n          adminUser.type = 'user';\n          const {\n            insertedId: userId\n          } = await Users.create(adminUser);\n          await Accounts.setPasswordAsync(userId, process.env.ADMIN_PASS);\n          await addUserRolesAsync(userId, ['admin']);\n        } else {\n          console.log(colors.red('Users with admin role already exist; Ignoring environment variables ADMIN_PASS'));\n        }\n      }\n    }\n    Meteor.startup(async () => {\n      const dynamicImport = {\n        'dynamic-import': {\n          useLocationOrigin: true\n        }\n      };\n      if (!Meteor.settings) {\n        Meteor.settings = {\n          public: {\n            packages: {\n              'dynamic-import': dynamicImport\n            }\n          }\n        };\n      }\n      if (!Meteor.settings.public) {\n        Meteor.settings.public = {\n          packages: {\n            'dynamic-import': dynamicImport\n          }\n        };\n      }\n      if (!Meteor.settings.public.packages) {\n        Meteor.settings.public.packages = dynamicImport;\n      }\n      Meteor.settings.public.packages['dynamic-import'] = dynamicImport['dynamic-import'];\n      if (!settings.get('Initial_Channel_Created')) {\n        const exists = await Rooms.findOneById('GENERAL', {\n          projection: {\n            _id: 1\n          }\n        });\n        if (!exists) {\n          await Rooms.createWithIdTypeAndName('GENERAL', 'c', 'general', {\n            default: true\n          });\n        }\n        (await Settings.updateValueById('Initial_Channel_Created', true)).modifiedCount && void notifyOnSettingChangedById('Initial_Channel_Created');\n      }\n      try {\n        if (!(await Users.findOneById('rocket.cat', {\n          projection: {\n            _id: 1\n          }\n        }))) {\n          await Users.create({\n            _id: 'rocket.cat',\n            name: 'Rocket.Cat',\n            username: 'rocket.cat',\n            status: 'online',\n            statusDefault: 'online',\n            utcOffset: 0,\n            active: true,\n            type: 'bot'\n          });\n          await addUserRolesAsync('rocket.cat', ['bot']);\n          const buffer = Buffer.from(await Assets.getBinaryAsync('avatars/rocketcat.png'));\n          const rs = RocketChatFile.bufferToStream(buffer, 'utf8');\n          const fileStore = FileUpload.getStore('Avatars');\n          await fileStore.deleteByName('rocket.cat');\n          const file = {\n            userId: 'rocket.cat',\n            type: 'image/png',\n            size: buffer.length\n          };\n          const upload = await fileStore.insert(file, rs);\n          await Users.setAvatarData('rocket.cat', 'local', upload.etag);\n        }\n      } catch (error) {\n        console.log('Error creating default `rocket.cat` user, if you created a user with this username please remove it and restart the server');\n        throw error;\n      }\n      await insertAdminUserFromEnv();\n      if (typeof process.env.INITIAL_USER === 'string' && process.env.INITIAL_USER.length > 0) {\n        try {\n          const initialUser = JSON.parse(process.env.INITIAL_USER);\n          if (!initialUser._id) {\n            console.log(colors.red('No _id provided; Ignoring environment variable INITIAL_USER'));\n          } else if (!(await Users.findOneById(initialUser._id))) {\n            console.log(colors.green('Inserting initial user:'));\n            console.log(colors.green(JSON.stringify(initialUser, null, 2)));\n            await Users.create(initialUser);\n            await addUserToDefaultChannels(initialUser, true);\n          }\n        } catch (e) {\n          console.log(colors.red('Error processing environment variable INITIAL_USER'), e);\n        }\n      }\n      if ((await (await getUsersInRole('admin')).count()) === 0) {\n        const oldestUser = await Users.getOldest({\n          projection: {\n            _id: 1,\n            username: 1,\n            name: 1\n          }\n        });\n        if (oldestUser) {\n          await addUserRolesAsync(oldestUser._id, ['admin']);\n          console.log(\"No admins are found. Set \".concat(oldestUser.username || oldestUser.name, \" as admin for being the oldest user\"));\n        }\n      }\n      if ((await (await getUsersInRole('admin')).count()) !== 0) {\n        if (settings.get('Show_Setup_Wizard') === 'pending') {\n          console.log('Setting Setup Wizard to \"in_progress\" because, at least, one admin was found');\n          (await Settings.updateValueById('Show_Setup_Wizard', 'in_progress')).modifiedCount && void notifyOnSettingChangedById('Show_Setup_Wizard');\n        }\n      }\n      await Users.removeById('rocketchat.internal.admin.test');\n      if (process.env.TEST_MODE === 'true') {\n        console.log(colors.green('Inserting admin test user:'));\n        const adminUser = {\n          _id: 'rocketchat.internal.admin.test',\n          name: 'RocketChat Internal Admin Test',\n          username: 'rocketchat.internal.admin.test',\n          emails: [{\n            address: 'rocketchat.internal.admin.test@rocket.chat',\n            verified: false\n          }],\n          status: 'offline',\n          statusDefault: 'online',\n          utcOffset: 0,\n          active: true,\n          type: 'user'\n        };\n        console.log(colors.green(\"Name: \".concat(adminUser.name)));\n        console.log(colors.green(\"Email: \".concat(adminUser.emails[0].address)));\n        console.log(colors.green(\"Username: \".concat(adminUser.username)));\n        console.log(colors.green(\"Password: \".concat(adminUser._id)));\n        if (await Users.findOneByEmailAddress(adminUser.emails[0].address)) {\n          throw new Meteor.Error(\"Email \".concat(adminUser.emails[0].address, \" already exists\"), \"Rocket.Chat can't run in test mode\");\n        }\n        if (!(await checkUsernameAvailability(adminUser.username))) {\n          throw new Meteor.Error(\"Username \".concat(adminUser.username, \" already exists\"), \"Rocket.Chat can't run in test mode\");\n        }\n        await Users.create(adminUser);\n        await Accounts.setPasswordAsync(adminUser._id, adminUser._id);\n        await addUserRolesAsync(adminUser._id, ['admin']);\n        if (settings.get('Show_Setup_Wizard') === 'pending') {\n          (await Settings.updateValueById('Show_Setup_Wizard', 'in_progress')).modifiedCount && void notifyOnSettingChangedById('Show_Setup_Wizard');\n        }\n        return addUserToDefaultChannels(adminUser, true);\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","insertAdminUserFromEnv","Settings","Rooms","Users","link","v","colors","default","Accounts","Meteor","getUsersInRole","FileUpload","RocketChatFile","addUserToDefaultChannels","checkUsernameAvailability","notifyOnSettingChangedById","settings","validateEmail","addUserRolesAsync","__reifyWaitForDeps__","process","env","ADMIN_PASS","count","adminUser","name","username","status","statusDefault","utcOffset","active","ADMIN_NAME","console","log","green","concat","ADMIN_EMAIL","findOneByEmailAddress","emails","address","verified","ADMIN_EMAIL_VERIFIED","red","ADMIN_USERNAME","nameValidation","RegExp","get","error","test","type","insertedId","userId","create","setPasswordAsync","startup","dynamicImport","useLocationOrigin","public","packages","exists","findOneById","projection","_id","createWithIdTypeAndName","updateValueById","modifiedCount","buffer","Buffer","from","Assets","getBinaryAsync","rs","bufferToStream","fileStore","getStore","deleteByName","file","size","length","upload","insert","setAvatarData","etag","INITIAL_USER","initialUser","JSON","parse","stringify","e","oldestUser","getOldest","removeById","TEST_MODE","Error","__reify_async_result__","_reifyError","self","async"],"sources":["server/startup/initialData.js"],"sourcesContent":["import { Settings, Rooms, Users } from '@rocket.chat/models';\nimport colors from 'colors/safe';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\n\nimport { getUsersInRole } from '../../app/authorization/server';\nimport { FileUpload } from '../../app/file-upload/server';\nimport { RocketChatFile } from '../../app/file/server';\nimport { addUserToDefaultChannels } from '../../app/lib/server/functions/addUserToDefaultChannels';\nimport { checkUsernameAvailability } from '../../app/lib/server/functions/checkUsernameAvailability';\nimport { notifyOnSettingChangedById } from '../../app/lib/server/lib/notifyListener';\nimport { settings } from '../../app/settings/server';\nimport { validateEmail } from '../../lib/emailValidator';\nimport { addUserRolesAsync } from '../lib/roles/addUserRoles';\n\nexport async function insertAdminUserFromEnv() {\n\tif (process.env.ADMIN_PASS) {\n\t\tif ((await (await getUsersInRole('admin')).count()) === 0) {\n\t\t\tconst adminUser = {\n\t\t\t\tname: 'Administrator',\n\t\t\t\tusername: 'admin',\n\t\t\t\tstatus: 'offline',\n\t\t\t\tstatusDefault: 'online',\n\t\t\t\tutcOffset: 0,\n\t\t\t\tactive: true,\n\t\t\t};\n\n\t\t\tif (process.env.ADMIN_NAME) {\n\t\t\t\tadminUser.name = process.env.ADMIN_NAME;\n\t\t\t}\n\n\t\t\tconsole.log(colors.green(`Name: ${adminUser.name}`));\n\n\t\t\tif (process.env.ADMIN_EMAIL) {\n\t\t\t\tif (validateEmail(process.env.ADMIN_EMAIL)) {\n\t\t\t\t\tif (!(await Users.findOneByEmailAddress(process.env.ADMIN_EMAIL))) {\n\t\t\t\t\t\tadminUser.emails = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\taddress: process.env.ADMIN_EMAIL,\n\t\t\t\t\t\t\t\tverified: process.env.ADMIN_EMAIL_VERIFIED === 'true',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t];\n\n\t\t\t\t\t\tconsole.log(colors.green(`Email: ${process.env.ADMIN_EMAIL}`));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(colors.red('Email provided already exists; Ignoring environment variables ADMIN_EMAIL'));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(colors.red('Email provided is invalid; Ignoring environment variables ADMIN_EMAIL'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (process.env.ADMIN_USERNAME) {\n\t\t\t\tlet nameValidation;\n\n\t\t\t\ttry {\n\t\t\t\t\tnameValidation = new RegExp(`^${settings.get('UTF8_User_Names_Validation')}$`);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tnameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n\t\t\t\t}\n\n\t\t\t\tif (nameValidation.test(process.env.ADMIN_USERNAME)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait checkUsernameAvailability(process.env.ADMIN_USERNAME);\n\t\t\t\t\t\tadminUser.username = process.env.ADMIN_USERNAME;\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\tcolors.red('Username provided already exists or is blocked from usage; Ignoring environment variables ADMIN_USERNAME'),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(colors.red('Username provided is invalid; Ignoring environment variables ADMIN_USERNAME'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.log(colors.green(`Username: ${adminUser.username}`));\n\n\t\t\tadminUser.type = 'user';\n\n\t\t\tconst { insertedId: userId } = await Users.create(adminUser);\n\n\t\t\tawait Accounts.setPasswordAsync(userId, process.env.ADMIN_PASS);\n\n\t\t\tawait addUserRolesAsync(userId, ['admin']);\n\t\t} else {\n\t\t\tconsole.log(colors.red('Users with admin role already exist; Ignoring environment variables ADMIN_PASS'));\n\t\t}\n\t}\n}\n\nMeteor.startup(async () => {\n\tconst dynamicImport = {\n\t\t'dynamic-import': {\n\t\t\tuseLocationOrigin: true,\n\t\t},\n\t};\n\n\tif (!Meteor.settings) {\n\t\tMeteor.settings = {\n\t\t\tpublic: {\n\t\t\t\tpackages: {\n\t\t\t\t\t'dynamic-import': dynamicImport,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\n\tif (!Meteor.settings.public) {\n\t\tMeteor.settings.public = {\n\t\t\tpackages: {\n\t\t\t\t'dynamic-import': dynamicImport,\n\t\t\t},\n\t\t};\n\t}\n\n\tif (!Meteor.settings.public.packages) {\n\t\tMeteor.settings.public.packages = dynamicImport;\n\t}\n\n\tMeteor.settings.public.packages['dynamic-import'] = dynamicImport['dynamic-import'];\n\n\tif (!settings.get('Initial_Channel_Created')) {\n\t\tconst exists = await Rooms.findOneById('GENERAL', { projection: { _id: 1 } });\n\t\tif (!exists) {\n\t\t\tawait Rooms.createWithIdTypeAndName('GENERAL', 'c', 'general', {\n\t\t\t\tdefault: true,\n\t\t\t});\n\t\t}\n\n\t\t(await Settings.updateValueById('Initial_Channel_Created', true)).modifiedCount &&\n\t\t\tvoid notifyOnSettingChangedById('Initial_Channel_Created');\n\t}\n\n\ttry {\n\t\tif (!(await Users.findOneById('rocket.cat', { projection: { _id: 1 } }))) {\n\t\t\tawait Users.create({\n\t\t\t\t_id: 'rocket.cat',\n\t\t\t\tname: 'Rocket.Cat',\n\t\t\t\tusername: 'rocket.cat',\n\t\t\t\tstatus: 'online',\n\t\t\t\tstatusDefault: 'online',\n\t\t\t\tutcOffset: 0,\n\t\t\t\tactive: true,\n\t\t\t\ttype: 'bot',\n\t\t\t});\n\n\t\t\tawait addUserRolesAsync('rocket.cat', ['bot']);\n\n\t\t\tconst buffer = Buffer.from(await Assets.getBinaryAsync('avatars/rocketcat.png'));\n\n\t\t\tconst rs = RocketChatFile.bufferToStream(buffer, 'utf8');\n\t\t\tconst fileStore = FileUpload.getStore('Avatars');\n\t\t\tawait fileStore.deleteByName('rocket.cat');\n\n\t\t\tconst file = {\n\t\t\t\tuserId: 'rocket.cat',\n\t\t\t\ttype: 'image/png',\n\t\t\t\tsize: buffer.length,\n\t\t\t};\n\n\t\t\tconst upload = await fileStore.insert(file, rs);\n\t\t\tawait Users.setAvatarData('rocket.cat', 'local', upload.etag);\n\t\t}\n\t} catch (error) {\n\t\tconsole.log(\n\t\t\t'Error creating default `rocket.cat` user, if you created a user with this username please remove it and restart the server',\n\t\t);\n\t\tthrow error;\n\t}\n\n\tawait insertAdminUserFromEnv();\n\n\tif (typeof process.env.INITIAL_USER === 'string' && process.env.INITIAL_USER.length > 0) {\n\t\ttry {\n\t\t\tconst initialUser = JSON.parse(process.env.INITIAL_USER);\n\n\t\t\tif (!initialUser._id) {\n\t\t\t\tconsole.log(colors.red('No _id provided; Ignoring environment variable INITIAL_USER'));\n\t\t\t} else if (!(await Users.findOneById(initialUser._id))) {\n\t\t\t\tconsole.log(colors.green('Inserting initial user:'));\n\t\t\t\tconsole.log(colors.green(JSON.stringify(initialUser, null, 2)));\n\t\t\t\tawait Users.create(initialUser);\n\n\t\t\t\tawait addUserToDefaultChannels(initialUser, true);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log(colors.red('Error processing environment variable INITIAL_USER'), e);\n\t\t}\n\t}\n\n\tif ((await (await getUsersInRole('admin')).count()) === 0) {\n\t\tconst oldestUser = await Users.getOldest({ projection: { _id: 1, username: 1, name: 1 } });\n\n\t\tif (oldestUser) {\n\t\t\tawait addUserRolesAsync(oldestUser._id, ['admin']);\n\t\t\tconsole.log(`No admins are found. Set ${oldestUser.username || oldestUser.name} as admin for being the oldest user`);\n\t\t}\n\t}\n\n\tif ((await (await getUsersInRole('admin')).count()) !== 0) {\n\t\tif (settings.get('Show_Setup_Wizard') === 'pending') {\n\t\t\tconsole.log('Setting Setup Wizard to \"in_progress\" because, at least, one admin was found');\n\n\t\t\t(await Settings.updateValueById('Show_Setup_Wizard', 'in_progress')).modifiedCount &&\n\t\t\t\tvoid notifyOnSettingChangedById('Show_Setup_Wizard');\n\t\t}\n\t}\n\n\tawait Users.removeById('rocketchat.internal.admin.test');\n\n\tif (process.env.TEST_MODE === 'true') {\n\t\tconsole.log(colors.green('Inserting admin test user:'));\n\n\t\tconst adminUser = {\n\t\t\t_id: 'rocketchat.internal.admin.test',\n\t\t\tname: 'RocketChat Internal Admin Test',\n\t\t\tusername: 'rocketchat.internal.admin.test',\n\t\t\temails: [\n\t\t\t\t{\n\t\t\t\t\taddress: 'rocketchat.internal.admin.test@rocket.chat',\n\t\t\t\t\tverified: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tstatus: 'offline',\n\t\t\tstatusDefault: 'online',\n\t\t\tutcOffset: 0,\n\t\t\tactive: true,\n\t\t\ttype: 'user',\n\t\t};\n\n\t\tconsole.log(colors.green(`Name: ${adminUser.name}`));\n\t\tconsole.log(colors.green(`Email: ${adminUser.emails[0].address}`));\n\t\tconsole.log(colors.green(`Username: ${adminUser.username}`));\n\t\tconsole.log(colors.green(`Password: ${adminUser._id}`));\n\n\t\tif (await Users.findOneByEmailAddress(adminUser.emails[0].address)) {\n\t\t\tthrow new Meteor.Error(`Email ${adminUser.emails[0].address} already exists`, \"Rocket.Chat can't run in test mode\");\n\t\t}\n\n\t\tif (!(await checkUsernameAvailability(adminUser.username))) {\n\t\t\tthrow new Meteor.Error(`Username ${adminUser.username} already exists`, \"Rocket.Chat can't run in test mode\");\n\t\t}\n\n\t\tawait Users.create(adminUser);\n\n\t\tawait Accounts.setPasswordAsync(adminUser._id, adminUser._id);\n\n\t\tawait addUserRolesAsync(adminUser._id, ['admin']);\n\n\t\tif (settings.get('Show_Setup_Wizard') === 'pending') {\n\t\t\t(await Settings.updateValueById('Show_Setup_Wizard', 'in_progress')).modifiedCount &&\n\t\t\t\tvoid notifyOnSettingChangedById('Show_Setup_Wizard');\n\t\t}\n\n\t\treturn addUserToDefaultChannels(adminUser, true);\n\t}\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"790b6fc2a679ed7ed08f51b1b527c0c63ea670ba"}
