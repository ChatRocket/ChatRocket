{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/autoupdate/client_versions.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/autoupdate/client_versions.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/autoupdate/client_versions.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/autoupdate/client_versions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/autoupdate/client_versions.js"}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  ClientVersions: () => ClientVersions\n});\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n}, 0);\nclass ClientVersions {\n  constructor() {\n    this._versions = new Map();\n    this._watchCallbacks = new Set();\n  }\n\n  // Creates a Livedata store for use with `Meteor.connection.registerStore`.\n  // After the store is registered, document updates reported by Livedata are\n  // merged with the documents in this `ClientVersions` instance.\n  createStore() {\n    return {\n      update: _ref => {\n        let {\n          id,\n          msg,\n          fields\n        } = _ref;\n        if (msg === 'added' || msg === 'changed') {\n          this.set(id, fields);\n        }\n      }\n    };\n  }\n  hasVersions() {\n    return this._versions.size > 0;\n  }\n  get(id) {\n    return this._versions.get(id);\n  }\n\n  // Adds or updates a version document and invokes registered callbacks for the\n  // added/updated document. If a document with the given ID already exists, its\n  // fields are merged with `fields`.\n  set(id, fields) {\n    let version = this._versions.get(id);\n    let isNew = false;\n    if (version) {\n      Object.assign(version, fields);\n    } else {\n      version = _objectSpread({\n        _id: id\n      }, fields);\n      isNew = true;\n      this._versions.set(id, version);\n    }\n    this._watchCallbacks.forEach(_ref2 => {\n      let {\n        fn,\n        filter\n      } = _ref2;\n      if (!filter || filter === version._id) {\n        fn(version, isNew);\n      }\n    });\n  }\n\n  // Registers a callback that will be invoked when a version document is added\n  // or changed. Calling the function returned by `watch` removes the callback.\n  // If `skipInitial` is true, the callback isn't be invoked for existing\n  // documents. If `filter` is set, the callback is only invoked for documents\n  // with ID `filter`.\n  watch(fn) {\n    let {\n      skipInitial,\n      filter\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!skipInitial) {\n      const resolved = Promise.resolve();\n      this._versions.forEach(version => {\n        if (!filter || filter === version._id) {\n          resolved.then(() => fn(version, true));\n        }\n      });\n    }\n    const callback = {\n      fn,\n      filter\n    };\n    this._watchCallbacks.add(callback);\n    return () => this._watchCallbacks.delete(callback);\n  }\n\n  // A reactive data source for `Autoupdate.newClientAvailable`.\n  newClientAvailable(id, fields, currentVersion) {\n    function isNewVersion(version) {\n      return version._id === id && fields.some(field => version[field] !== currentVersion[field]);\n    }\n    const dependency = new Tracker.Dependency();\n    const version = this.get(id);\n    dependency.depend();\n    const stop = this.watch(version => {\n      if (isNewVersion(version)) {\n        dependency.changed();\n        stop();\n      }\n    }, {\n      skipInitial: true\n    });\n    return !!version && isNewVersion(version);\n  }\n}","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","ClientVersions","Tracker","constructor","_versions","Map","_watchCallbacks","Set","createStore","update","_ref","id","msg","fields","set","hasVersions","size","get","version","isNew","Object","assign","_id","forEach","_ref2","fn","filter","watch","skipInitial","arguments","length","undefined","resolved","Promise","resolve","then","callback","add","delete","newClientAvailable","currentVersion","isNewVersion","some","field","dependency","Dependency","depend","stop","changed"],"sources":["packages/autoupdate/client_versions.js"],"sourcesContent":["import { Tracker } from 'meteor/tracker';\n\nexport class ClientVersions {\n\tconstructor() {\n\t\tthis._versions = new Map();\n\t\tthis._watchCallbacks = new Set();\n\t}\n\n\t// Creates a Livedata store for use with `Meteor.connection.registerStore`.\n\t// After the store is registered, document updates reported by Livedata are\n\t// merged with the documents in this `ClientVersions` instance.\n\tcreateStore() {\n\t\treturn {\n\t\t\tupdate: ({ id, msg, fields }) => {\n\t\t\t\tif (msg === 'added' || msg === 'changed') {\n\t\t\t\t\tthis.set(id, fields);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n\n\thasVersions() {\n\t\treturn this._versions.size > 0;\n\t}\n\n\tget(id) {\n\t\treturn this._versions.get(id);\n\t}\n\n\t// Adds or updates a version document and invokes registered callbacks for the\n\t// added/updated document. If a document with the given ID already exists, its\n\t// fields are merged with `fields`.\n\tset(id, fields) {\n\t\tlet version = this._versions.get(id);\n\t\tlet isNew = false;\n\n\t\tif (version) {\n\t\t\tObject.assign(version, fields);\n\t\t} else {\n\t\t\tversion = {\n\t\t\t\t_id: id,\n\t\t\t\t...fields,\n\t\t\t};\n\n\t\t\tisNew = true;\n\t\t\tthis._versions.set(id, version);\n\t\t}\n\n\t\tthis._watchCallbacks.forEach(({ fn, filter }) => {\n\t\t\tif (!filter || filter === version._id) {\n\t\t\t\tfn(version, isNew);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Registers a callback that will be invoked when a version document is added\n\t// or changed. Calling the function returned by `watch` removes the callback.\n\t// If `skipInitial` is true, the callback isn't be invoked for existing\n\t// documents. If `filter` is set, the callback is only invoked for documents\n\t// with ID `filter`.\n\twatch(fn, { skipInitial, filter } = {}) {\n\t\tif (!skipInitial) {\n\t\t\tconst resolved = Promise.resolve();\n\n\t\t\tthis._versions.forEach((version) => {\n\t\t\t\tif (!filter || filter === version._id) {\n\t\t\t\t\tresolved.then(() => fn(version, true));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tconst callback = { fn, filter };\n\t\tthis._watchCallbacks.add(callback);\n\n\t\treturn () => this._watchCallbacks.delete(callback);\n\t}\n\n\t// A reactive data source for `Autoupdate.newClientAvailable`.\n\tnewClientAvailable(id, fields, currentVersion) {\n\t\tfunction isNewVersion(version) {\n\t\t\treturn version._id === id && fields.some((field) => version[field] !== currentVersion[field]);\n\t\t}\n\n\t\tconst dependency = new Tracker.Dependency();\n\t\tconst version = this.get(id);\n\n\t\tdependency.depend();\n\n\t\tconst stop = this.watch(\n\t\t\t(version) => {\n\t\t\t\tif (isNewVersion(version)) {\n\t\t\t\t\tdependency.changed();\n\t\t\t\t\tstop();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{ skipInitial: true },\n\t\t);\n\n\t\treturn !!version && isNewVersion(version);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e5ba33d1cc26f44633a1275f38ad639d40cd105b"}
