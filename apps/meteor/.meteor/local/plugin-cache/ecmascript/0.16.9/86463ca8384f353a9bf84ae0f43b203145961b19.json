{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/notifications/email.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/notifications/email.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/notifications/email.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/notifications/email.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/notifications/email.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      getEmailContent: () => getEmailContent,\n      getEmailData: () => getEmailData,\n      sendEmailFromData: () => sendEmailFromData,\n      shouldNotifyEmail: () => shouldNotifyEmail\n    });\n    let escapeHTML;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeHTML(v) {\n        escapeHTML = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let callbacks;\n    module.link(\"../../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 2);\n    let ltrim;\n    module.link(\"../../../../../lib/utils/stringUtils\", {\n      ltrim(v) {\n        ltrim = v;\n      }\n    }, 3);\n    let i18n;\n    module.link(\"../../../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 4);\n    let roomCoordinator;\n    module.link(\"../../../../../server/lib/rooms/roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 5);\n    let Mailer;\n    module.link(\"../../../../mailer/server/api\", {\n      \"*\"(v) {\n        Mailer = v;\n      }\n    }, 6);\n    let metrics;\n    module.link(\"../../../../metrics/server\", {\n      metrics(v) {\n        metrics = v;\n      }\n    }, 7);\n    let settings;\n    module.link(\"../../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 8);\n    let getURL;\n    module.link(\"../../../../utils/server/getURL\", {\n      getURL(v) {\n        getURL = v;\n      }\n    }, 9);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    let advice = '';\n    let goToMessage = '';\n    Meteor.startup(() => {\n      settings.watch('email_style', () => {\n        goToMessage = Mailer.inlinecss('<p><a class=\\'btn\\' href=\"[room_path]\">{Offline_Link_Message}</a></p>');\n      });\n      Mailer.getTemplate('Email_Footer_Direct_Reply', value => {\n        advice = value;\n      });\n    });\n    async function getEmailContent(_ref) {\n      let {\n        message,\n        user,\n        room\n      } = _ref;\n      const lng = user && user.language || settings.get('Language') || 'en';\n      const roomName = escapeHTML(\"#\".concat(await roomCoordinator.getRoomName(room.t, room)));\n      const userName = escapeHTML(settings.get('UI_Use_Real_Name') ? message.u.name || message.u.username : message.u.username);\n      const roomDirectives = roomCoordinator.getRoomDirectives(room.t);\n      const header = i18n.t(!roomDirectives.isGroupChat(room) ? 'User_sent_a_message_to_you' : 'User_sent_a_message_on_channel', {\n        username: userName,\n        channel: roomName,\n        lng\n      });\n      if (message.t === 'e2e' && !message.file) {\n        return settings.get('Email_notification_show_message') ? i18n.t('Encrypted_message_preview_unavailable', {\n          lng\n        }) : header;\n      }\n      if (message.msg !== '') {\n        if (!settings.get('Email_notification_show_message')) {\n          return header;\n        }\n        let messageContent = escapeHTML(message.msg);\n        message = await callbacks.run('renderMessage', message);\n        if (message.tokens && message.tokens.length > 0) {\n          message.tokens.forEach(token => {\n            token.text = token.text.replace(/([^\\$])(\\$[^\\$])/gm, '$1$$$2');\n            messageContent = messageContent.replace(token.token, token.text);\n          });\n        }\n        return \"\".concat(header, \":<br/><br/>\").concat(messageContent.replace(/\\n/gm, '<br/>'));\n      }\n      if (message.file) {\n        const fileHeader = i18n.t(!roomDirectives.isGroupChat(room) ? 'User_uploaded_a_file_to_you' : 'User_uploaded_a_file_on_channel', {\n          username: userName,\n          channel: roomName,\n          lng\n        });\n        if (!settings.get('Email_notification_show_message')) {\n          return fileHeader;\n        }\n        let content = \"\".concat(escapeHTML(message.file.name));\n        if (message.attachments && message.attachments.length === 1 && message.attachments[0].description !== '') {\n          content += \"<br/><br/>\".concat(escapeHTML(message.attachments[0].description));\n        }\n        return \"\".concat(fileHeader, \":<br/><br/>\").concat(content);\n      }\n      if (!settings.get('Email_notification_show_message')) {\n        return header;\n      }\n      if (Array.isArray(message.attachments) && message.attachments.length > 0) {\n        const [attachment] = message.attachments;\n        let content = '';\n        if (attachment.title) {\n          content += \"\".concat(escapeHTML(attachment.title), \"<br/>\");\n        }\n        if (attachment.text) {\n          content += \"\".concat(escapeHTML(attachment.text), \"<br/>\");\n        }\n        return \"\".concat(header, \":<br/><br/>\").concat(content);\n      }\n      return header;\n    }\n    const getButtonUrl = (room, subscription, message) => {\n      const basePath = roomCoordinator.getRouteLink(room.t, subscription).replace(Meteor.absoluteUrl(), '');\n      const path = \"\".concat(ltrim(basePath, '/'), \"?msg=\").concat(message._id);\n      return getURL(path, {\n        full: true,\n        cloud: settings.get('Offline_Message_Use_DeepLink'),\n        cloud_route: 'room',\n        cloud_params: {\n          rid: room._id,\n          mid: message._id\n        }\n      }, settings.get('DeepLink_Url'));\n    };\n    function generateNameEmail(name, email) {\n      return \"\".concat(String(name).replace(/@/g, '%40').replace(/[<>,]/g, ''), \" <\").concat(email, \">\");\n    }\n    async function getEmailData(_ref2) {\n      var _sender$emails;\n      let {\n        message,\n        receiver,\n        sender,\n        subscription,\n        room,\n        emailAddress,\n        hasMentionToUser\n      } = _ref2;\n      const username = settings.get('UI_Use_Real_Name') ? message.u.name || message.u.username : message.u.username;\n      let subjectKey = 'Offline_Mention_All_Email';\n      if (!roomCoordinator.getRoomDirectives(room.t).isGroupChat(room)) {\n        subjectKey = 'Offline_DM_Email';\n      } else if (hasMentionToUser) {\n        subjectKey = 'Offline_Mention_Email';\n      }\n      const emailSubject = Mailer.replace(settings.get(subjectKey), {\n        user: username,\n        room: await roomCoordinator.getRoomName(room.t, room)\n      });\n      const content = await getEmailContent({\n        message,\n        user: receiver,\n        room\n      });\n      const room_path = getButtonUrl(room, subscription, message);\n      const receiverName = settings.get('UI_Use_Real_Name') ? receiver.name || receiver.username : receiver.username;\n      const email = {\n        from: generateNameEmail(username, settings.get('From_Email')),\n        to: generateNameEmail(receiverName, emailAddress),\n        subject: emailSubject,\n        html: content + goToMessage + (settings.get('Direct_Reply_Enable') ? advice : ''),\n        data: {\n          room_path\n        },\n        headers: {}\n      };\n      if (((_sender$emails = sender.emails) === null || _sender$emails === void 0 ? void 0 : _sender$emails.length) > 0 && settings.get('Add_Sender_To_ReplyTo')) {\n        const [senderEmail] = sender.emails;\n        email.headers['Reply-To'] = generateNameEmail(username, senderEmail.address);\n      }\n\n      // If direct reply enabled, email content with headers\n      if (settings.get('Direct_Reply_Enable')) {\n        const replyto = settings.get('Direct_Reply_ReplyTo') || settings.get('Direct_Reply_Username');\n\n        // Reply-To header with format \"username+messageId@domain\"\n        email.headers['Reply-To'] = \"\".concat(replyto.split('@')[0].split(settings.get('Direct_Reply_Separator'))[0]).concat(settings.get('Direct_Reply_Separator')).concat(message.tmid || message._id, \"@\").concat(replyto.split('@')[1]);\n      }\n      metrics.notificationsSent.inc({\n        notification_type: 'email'\n      });\n      return email;\n    }\n    function sendEmailFromData(data) {\n      metrics.notificationsSent.inc({\n        notification_type: 'email'\n      });\n      return Mailer.send(data);\n    }\n    function shouldNotifyEmail(_ref3) {\n      let {\n        disableAllMessageNotifications,\n        statusConnection,\n        emailNotifications,\n        isHighlighted,\n        hasMentionToUser,\n        hasMentionToAll,\n        hasReplyToThread,\n        roomType,\n        isThread\n      } = _ref3;\n      // email notifications are disabled globally\n      if (!settings.get('Accounts_AllowEmailNotifications')) {\n        return false;\n      }\n\n      // user/room preference to nothing\n      if (emailNotifications === 'nothing') {\n        return false;\n      }\n\n      // user connected (don't need to send him an email)\n      if (statusConnection === 'online') {\n        return false;\n      }\n\n      // no user or room preference\n      if (emailNotifications == null) {\n        if (disableAllMessageNotifications && !isHighlighted && !hasMentionToUser && !hasReplyToThread) {\n          return false;\n        }\n\n        // default server preference is disabled\n        if (settings.get('Accounts_Default_User_Preferences_emailNotificationMode') === 'nothing') {\n          return false;\n        }\n      }\n      return (roomType === 'd' || isHighlighted || emailNotifications === 'all' || hasMentionToUser || !disableAllMessageNotifications && hasMentionToAll) && (isHighlighted || !isThread || hasReplyToThread);\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","getEmailContent","getEmailData","sendEmailFromData","shouldNotifyEmail","escapeHTML","link","v","Meteor","callbacks","ltrim","i18n","roomCoordinator","Mailer","*","metrics","settings","getURL","__reifyWaitForDeps__","advice","goToMessage","startup","watch","inlinecss","getTemplate","value","_ref","message","user","room","lng","language","get","roomName","concat","getRoomName","t","userName","u","name","username","roomDirectives","getRoomDirectives","header","isGroupChat","channel","file","msg","messageContent","run","tokens","length","forEach","token","text","replace","fileHeader","content","attachments","description","Array","isArray","attachment","title","getButtonUrl","subscription","basePath","getRouteLink","absoluteUrl","path","_id","full","cloud","cloud_route","cloud_params","rid","mid","generateNameEmail","email","String","_ref2","_sender$emails","receiver","sender","emailAddress","hasMentionToUser","subjectKey","emailSubject","room_path","receiverName","from","to","subject","html","data","headers","emails","senderEmail","address","replyto","split","tmid","notificationsSent","inc","notification_type","send","_ref3","disableAllMessageNotifications","statusConnection","emailNotifications","isHighlighted","hasMentionToAll","hasReplyToThread","roomType","isThread","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/notifications/email.js"],"sourcesContent":["import { escapeHTML } from '@rocket.chat/string-helpers';\nimport { Meteor } from 'meteor/meteor';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { ltrim } from '../../../../../lib/utils/stringUtils';\nimport { i18n } from '../../../../../server/lib/i18n';\nimport { roomCoordinator } from '../../../../../server/lib/rooms/roomCoordinator';\nimport * as Mailer from '../../../../mailer/server/api';\nimport { metrics } from '../../../../metrics/server';\nimport { settings } from '../../../../settings/server';\nimport { getURL } from '../../../../utils/server/getURL';\n\nlet advice = '';\nlet goToMessage = '';\nMeteor.startup(() => {\n\tsettings.watch('email_style', () => {\n\t\tgoToMessage = Mailer.inlinecss('<p><a class=\\'btn\\' href=\"[room_path]\">{Offline_Link_Message}</a></p>');\n\t});\n\tMailer.getTemplate('Email_Footer_Direct_Reply', (value) => {\n\t\tadvice = value;\n\t});\n});\n\nexport async function getEmailContent({ message, user, room }) {\n\tconst lng = (user && user.language) || settings.get('Language') || 'en';\n\n\tconst roomName = escapeHTML(`#${await roomCoordinator.getRoomName(room.t, room)}`);\n\tconst userName = escapeHTML(settings.get('UI_Use_Real_Name') ? message.u.name || message.u.username : message.u.username);\n\n\tconst roomDirectives = roomCoordinator.getRoomDirectives(room.t);\n\n\tconst header = i18n.t(!roomDirectives.isGroupChat(room) ? 'User_sent_a_message_to_you' : 'User_sent_a_message_on_channel', {\n\t\tusername: userName,\n\t\tchannel: roomName,\n\t\tlng,\n\t});\n\n\tif (message.t === 'e2e' && !message.file) {\n\t\treturn settings.get('Email_notification_show_message') ? i18n.t('Encrypted_message_preview_unavailable', { lng }) : header;\n\t}\n\n\tif (message.msg !== '') {\n\t\tif (!settings.get('Email_notification_show_message')) {\n\t\t\treturn header;\n\t\t}\n\n\t\tlet messageContent = escapeHTML(message.msg);\n\n\t\tmessage = await callbacks.run('renderMessage', message);\n\t\tif (message.tokens && message.tokens.length > 0) {\n\t\t\tmessage.tokens.forEach((token) => {\n\t\t\t\ttoken.text = token.text.replace(/([^\\$])(\\$[^\\$])/gm, '$1$$$2');\n\t\t\t\tmessageContent = messageContent.replace(token.token, token.text);\n\t\t\t});\n\t\t}\n\t\treturn `${header}:<br/><br/>${messageContent.replace(/\\n/gm, '<br/>')}`;\n\t}\n\n\tif (message.file) {\n\t\tconst fileHeader = i18n.t(!roomDirectives.isGroupChat(room) ? 'User_uploaded_a_file_to_you' : 'User_uploaded_a_file_on_channel', {\n\t\t\tusername: userName,\n\t\t\tchannel: roomName,\n\t\t\tlng,\n\t\t});\n\n\t\tif (!settings.get('Email_notification_show_message')) {\n\t\t\treturn fileHeader;\n\t\t}\n\n\t\tlet content = `${escapeHTML(message.file.name)}`;\n\n\t\tif (message.attachments && message.attachments.length === 1 && message.attachments[0].description !== '') {\n\t\t\tcontent += `<br/><br/>${escapeHTML(message.attachments[0].description)}`;\n\t\t}\n\n\t\treturn `${fileHeader}:<br/><br/>${content}`;\n\t}\n\n\tif (!settings.get('Email_notification_show_message')) {\n\t\treturn header;\n\t}\n\n\tif (Array.isArray(message.attachments) && message.attachments.length > 0) {\n\t\tconst [attachment] = message.attachments;\n\n\t\tlet content = '';\n\n\t\tif (attachment.title) {\n\t\t\tcontent += `${escapeHTML(attachment.title)}<br/>`;\n\t\t}\n\t\tif (attachment.text) {\n\t\t\tcontent += `${escapeHTML(attachment.text)}<br/>`;\n\t\t}\n\n\t\treturn `${header}:<br/><br/>${content}`;\n\t}\n\n\treturn header;\n}\n\nconst getButtonUrl = (room, subscription, message) => {\n\tconst basePath = roomCoordinator.getRouteLink(room.t, subscription).replace(Meteor.absoluteUrl(), '');\n\n\tconst path = `${ltrim(basePath, '/')}?msg=${message._id}`;\n\treturn getURL(\n\t\tpath,\n\t\t{\n\t\t\tfull: true,\n\t\t\tcloud: settings.get('Offline_Message_Use_DeepLink'),\n\t\t\tcloud_route: 'room',\n\t\t\tcloud_params: {\n\t\t\t\trid: room._id,\n\t\t\t\tmid: message._id,\n\t\t\t},\n\t\t},\n\t\tsettings.get('DeepLink_Url'),\n\t);\n};\n\nfunction generateNameEmail(name, email) {\n\treturn `${String(name).replace(/@/g, '%40').replace(/[<>,]/g, '')} <${email}>`;\n}\n\nexport async function getEmailData({ message, receiver, sender, subscription, room, emailAddress, hasMentionToUser }) {\n\tconst username = settings.get('UI_Use_Real_Name') ? message.u.name || message.u.username : message.u.username;\n\tlet subjectKey = 'Offline_Mention_All_Email';\n\n\tif (!roomCoordinator.getRoomDirectives(room.t).isGroupChat(room)) {\n\t\tsubjectKey = 'Offline_DM_Email';\n\t} else if (hasMentionToUser) {\n\t\tsubjectKey = 'Offline_Mention_Email';\n\t}\n\n\tconst emailSubject = Mailer.replace(settings.get(subjectKey), {\n\t\tuser: username,\n\t\troom: await roomCoordinator.getRoomName(room.t, room),\n\t});\n\tconst content = await getEmailContent({\n\t\tmessage,\n\t\tuser: receiver,\n\t\troom,\n\t});\n\n\tconst room_path = getButtonUrl(room, subscription, message);\n\n\tconst receiverName = settings.get('UI_Use_Real_Name') ? receiver.name || receiver.username : receiver.username;\n\n\tconst email = {\n\t\tfrom: generateNameEmail(username, settings.get('From_Email')),\n\t\tto: generateNameEmail(receiverName, emailAddress),\n\t\tsubject: emailSubject,\n\t\thtml: content + goToMessage + (settings.get('Direct_Reply_Enable') ? advice : ''),\n\t\tdata: {\n\t\t\troom_path,\n\t\t},\n\t\theaders: {},\n\t};\n\n\tif (sender.emails?.length > 0 && settings.get('Add_Sender_To_ReplyTo')) {\n\t\tconst [senderEmail] = sender.emails;\n\t\temail.headers['Reply-To'] = generateNameEmail(username, senderEmail.address);\n\t}\n\n\t// If direct reply enabled, email content with headers\n\tif (settings.get('Direct_Reply_Enable')) {\n\t\tconst replyto = settings.get('Direct_Reply_ReplyTo') || settings.get('Direct_Reply_Username');\n\n\t\t// Reply-To header with format \"username+messageId@domain\"\n\t\temail.headers['Reply-To'] = `${replyto.split('@')[0].split(settings.get('Direct_Reply_Separator'))[0]}${settings.get(\n\t\t\t'Direct_Reply_Separator',\n\t\t)}${message.tmid || message._id}@${replyto.split('@')[1]}`;\n\t}\n\n\tmetrics.notificationsSent.inc({ notification_type: 'email' });\n\treturn email;\n}\n\nexport function sendEmailFromData(data) {\n\tmetrics.notificationsSent.inc({ notification_type: 'email' });\n\treturn Mailer.send(data);\n}\n\nexport function shouldNotifyEmail({\n\tdisableAllMessageNotifications,\n\tstatusConnection,\n\temailNotifications,\n\tisHighlighted,\n\thasMentionToUser,\n\thasMentionToAll,\n\thasReplyToThread,\n\troomType,\n\tisThread,\n}) {\n\t// email notifications are disabled globally\n\tif (!settings.get('Accounts_AllowEmailNotifications')) {\n\t\treturn false;\n\t}\n\n\t// user/room preference to nothing\n\tif (emailNotifications === 'nothing') {\n\t\treturn false;\n\t}\n\n\t// user connected (don't need to send him an email)\n\tif (statusConnection === 'online') {\n\t\treturn false;\n\t}\n\n\t// no user or room preference\n\tif (emailNotifications == null) {\n\t\tif (disableAllMessageNotifications && !isHighlighted && !hasMentionToUser && !hasReplyToThread) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// default server preference is disabled\n\t\tif (settings.get('Accounts_Default_User_Preferences_emailNotificationMode') === 'nothing') {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn (\n\t\t(roomType === 'd' ||\n\t\t\tisHighlighted ||\n\t\t\temailNotifications === 'all' ||\n\t\t\thasMentionToUser ||\n\t\t\t(!disableAllMessageNotifications && hasMentionToAll)) &&\n\t\t(isHighlighted || !isThread || hasReplyToThread)\n\t);\n}\n"],"mappings":";;;IAAAA,MAAM,CAACC,MAAM,CAAC;MAACC,eAAe,EAACA,CAAA,KAAIA,eAAe;MAACC,YAAY,EAACA,CAAA,KAAIA,YAAY;MAACC,iBAAiB,EAACA,CAAA,KAAIA,iBAAiB;MAACC,iBAAiB,EAACA,CAAA,KAAIA;IAAiB,CAAC,CAAC;IAAC,IAAIC,UAAU;IAACN,MAAM,CAACO,IAAI,CAAC,6BAA6B,EAAC;MAACD,UAAUA,CAACE,CAAC,EAAC;QAACF,UAAU,GAACE,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIC,MAAM;IAACT,MAAM,CAACO,IAAI,CAAC,eAAe,EAAC;MAACE,MAAMA,CAACD,CAAC,EAAC;QAACC,MAAM,GAACD,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIE,SAAS;IAACV,MAAM,CAACO,IAAI,CAAC,8BAA8B,EAAC;MAACG,SAASA,CAACF,CAAC,EAAC;QAACE,SAAS,GAACF,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIG,KAAK;IAACX,MAAM,CAACO,IAAI,CAAC,sCAAsC,EAAC;MAACI,KAAKA,CAACH,CAAC,EAAC;QAACG,KAAK,GAACH,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAII,IAAI;IAACZ,MAAM,CAACO,IAAI,CAAC,gCAAgC,EAAC;MAACK,IAAIA,CAACJ,CAAC,EAAC;QAACI,IAAI,GAACJ,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIK,eAAe;IAACb,MAAM,CAACO,IAAI,CAAC,iDAAiD,EAAC;MAACM,eAAeA,CAACL,CAAC,EAAC;QAACK,eAAe,GAACL,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIM,MAAM;IAACd,MAAM,CAACO,IAAI,CAAC,+BAA+B,EAAC;MAAC,GAAGQ,CAACP,CAAC,EAAC;QAACM,MAAM,GAACN,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIQ,OAAO;IAAChB,MAAM,CAACO,IAAI,CAAC,4BAA4B,EAAC;MAACS,OAAOA,CAACR,CAAC,EAAC;QAACQ,OAAO,GAACR,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIS,QAAQ;IAACjB,MAAM,CAACO,IAAI,CAAC,6BAA6B,EAAC;MAACU,QAAQA,CAACT,CAAC,EAAC;QAACS,QAAQ,GAACT,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIU,MAAM;IAAClB,MAAM,CAACO,IAAI,CAAC,iCAAiC,EAAC;MAACW,MAAMA,CAACV,CAAC,EAAC;QAACU,MAAM,GAACV,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIW,oBAAoB,CAAC,CAAC,EAAE,CAAC,MAAMA,oBAAoB,CAAC,CAAC,EAAE,CAAC;IAYhjC,IAAIC,MAAM,GAAG,EAAE;IACf,IAAIC,WAAW,GAAG,EAAE;IACpBZ,MAAM,CAACa,OAAO,CAAC,MAAM;MACpBL,QAAQ,CAACM,KAAK,CAAC,aAAa,EAAE,MAAM;QACnCF,WAAW,GAAGP,MAAM,CAACU,SAAS,CAAC,uEAAuE,CAAC;MACxG,CAAC,CAAC;MACFV,MAAM,CAACW,WAAW,CAAC,2BAA2B,EAAGC,KAAK,IAAK;QAC1DN,MAAM,GAAGM,KAAK;MACf,CAAC,CAAC;IACH,CAAC,CAAC;IAEK,eAAexB,eAAeA,CAAAyB,IAAA,EAA0B;MAAA,IAAzB;QAAEC,OAAO;QAAEC,IAAI;QAAEC;MAAK,CAAC,GAAAH,IAAA;MAC5D,MAAMI,GAAG,GAAIF,IAAI,IAAIA,IAAI,CAACG,QAAQ,IAAKf,QAAQ,CAACgB,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI;MAEvE,MAAMC,QAAQ,GAAG5B,UAAU,KAAA6B,MAAA,CAAK,MAAMtB,eAAe,CAACuB,WAAW,CAACN,IAAI,CAACO,CAAC,EAAEP,IAAI,CAAC,CAAE,CAAC;MAClF,MAAMQ,QAAQ,GAAGhC,UAAU,CAACW,QAAQ,CAACgB,GAAG,CAAC,kBAAkB,CAAC,GAAGL,OAAO,CAACW,CAAC,CAACC,IAAI,IAAIZ,OAAO,CAACW,CAAC,CAACE,QAAQ,GAAGb,OAAO,CAACW,CAAC,CAACE,QAAQ,CAAC;MAEzH,MAAMC,cAAc,GAAG7B,eAAe,CAAC8B,iBAAiB,CAACb,IAAI,CAACO,CAAC,CAAC;MAEhE,MAAMO,MAAM,GAAGhC,IAAI,CAACyB,CAAC,CAAC,CAACK,cAAc,CAACG,WAAW,CAACf,IAAI,CAAC,GAAG,4BAA4B,GAAG,gCAAgC,EAAE;QAC1HW,QAAQ,EAAEH,QAAQ;QAClBQ,OAAO,EAAEZ,QAAQ;QACjBH;MACD,CAAC,CAAC;MAEF,IAAIH,OAAO,CAACS,CAAC,KAAK,KAAK,IAAI,CAACT,OAAO,CAACmB,IAAI,EAAE;QACzC,OAAO9B,QAAQ,CAACgB,GAAG,CAAC,iCAAiC,CAAC,GAAGrB,IAAI,CAACyB,CAAC,CAAC,uCAAuC,EAAE;UAAEN;QAAI,CAAC,CAAC,GAAGa,MAAM;MAC3H;MAEA,IAAIhB,OAAO,CAACoB,GAAG,KAAK,EAAE,EAAE;QACvB,IAAI,CAAC/B,QAAQ,CAACgB,GAAG,CAAC,iCAAiC,CAAC,EAAE;UACrD,OAAOW,MAAM;QACd;QAEA,IAAIK,cAAc,GAAG3C,UAAU,CAACsB,OAAO,CAACoB,GAAG,CAAC;QAE5CpB,OAAO,GAAG,MAAMlB,SAAS,CAACwC,GAAG,CAAC,eAAe,EAAEtB,OAAO,CAAC;QACvD,IAAIA,OAAO,CAACuB,MAAM,IAAIvB,OAAO,CAACuB,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;UAChDxB,OAAO,CAACuB,MAAM,CAACE,OAAO,CAAEC,KAAK,IAAK;YACjCA,KAAK,CAACC,IAAI,GAAGD,KAAK,CAACC,IAAI,CAACC,OAAO,CAAC,oBAAoB,EAAE,QAAQ,CAAC;YAC/DP,cAAc,GAAGA,cAAc,CAACO,OAAO,CAACF,KAAK,CAACA,KAAK,EAAEA,KAAK,CAACC,IAAI,CAAC;UACjE,CAAC,CAAC;QACH;QACA,UAAApB,MAAA,CAAUS,MAAM,iBAAAT,MAAA,CAAcc,cAAc,CAACO,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;MACtE;MAEA,IAAI5B,OAAO,CAACmB,IAAI,EAAE;QACjB,MAAMU,UAAU,GAAG7C,IAAI,CAACyB,CAAC,CAAC,CAACK,cAAc,CAACG,WAAW,CAACf,IAAI,CAAC,GAAG,6BAA6B,GAAG,iCAAiC,EAAE;UAChIW,QAAQ,EAAEH,QAAQ;UAClBQ,OAAO,EAAEZ,QAAQ;UACjBH;QACD,CAAC,CAAC;QAEF,IAAI,CAACd,QAAQ,CAACgB,GAAG,CAAC,iCAAiC,CAAC,EAAE;UACrD,OAAOwB,UAAU;QAClB;QAEA,IAAIC,OAAO,MAAAvB,MAAA,CAAM7B,UAAU,CAACsB,OAAO,CAACmB,IAAI,CAACP,IAAI,CAAC,CAAE;QAEhD,IAAIZ,OAAO,CAAC+B,WAAW,IAAI/B,OAAO,CAAC+B,WAAW,CAACP,MAAM,KAAK,CAAC,IAAIxB,OAAO,CAAC+B,WAAW,CAAC,CAAC,CAAC,CAACC,WAAW,KAAK,EAAE,EAAE;UACzGF,OAAO,iBAAAvB,MAAA,CAAiB7B,UAAU,CAACsB,OAAO,CAAC+B,WAAW,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAE;QACzE;QAEA,UAAAzB,MAAA,CAAUsB,UAAU,iBAAAtB,MAAA,CAAcuB,OAAO;MAC1C;MAEA,IAAI,CAACzC,QAAQ,CAACgB,GAAG,CAAC,iCAAiC,CAAC,EAAE;QACrD,OAAOW,MAAM;MACd;MAEA,IAAIiB,KAAK,CAACC,OAAO,CAAClC,OAAO,CAAC+B,WAAW,CAAC,IAAI/B,OAAO,CAAC+B,WAAW,CAACP,MAAM,GAAG,CAAC,EAAE;QACzE,MAAM,CAACW,UAAU,CAAC,GAAGnC,OAAO,CAAC+B,WAAW;QAExC,IAAID,OAAO,GAAG,EAAE;QAEhB,IAAIK,UAAU,CAACC,KAAK,EAAE;UACrBN,OAAO,OAAAvB,MAAA,CAAO7B,UAAU,CAACyD,UAAU,CAACC,KAAK,CAAC,UAAO;QAClD;QACA,IAAID,UAAU,CAACR,IAAI,EAAE;UACpBG,OAAO,OAAAvB,MAAA,CAAO7B,UAAU,CAACyD,UAAU,CAACR,IAAI,CAAC,UAAO;QACjD;QAEA,UAAApB,MAAA,CAAUS,MAAM,iBAAAT,MAAA,CAAcuB,OAAO;MACtC;MAEA,OAAOd,MAAM;IACd;IAEA,MAAMqB,YAAY,GAAGA,CAACnC,IAAI,EAAEoC,YAAY,EAAEtC,OAAO,KAAK;MACrD,MAAMuC,QAAQ,GAAGtD,eAAe,CAACuD,YAAY,CAACtC,IAAI,CAACO,CAAC,EAAE6B,YAAY,CAAC,CAACV,OAAO,CAAC/C,MAAM,CAAC4D,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC;MAErG,MAAMC,IAAI,MAAAnC,MAAA,CAAMxB,KAAK,CAACwD,QAAQ,EAAE,GAAG,CAAC,WAAAhC,MAAA,CAAQP,OAAO,CAAC2C,GAAG,CAAE;MACzD,OAAOrD,MAAM,CACZoD,IAAI,EACJ;QACCE,IAAI,EAAE,IAAI;QACVC,KAAK,EAAExD,QAAQ,CAACgB,GAAG,CAAC,8BAA8B,CAAC;QACnDyC,WAAW,EAAE,MAAM;QACnBC,YAAY,EAAE;UACbC,GAAG,EAAE9C,IAAI,CAACyC,GAAG;UACbM,GAAG,EAAEjD,OAAO,CAAC2C;QACd;MACD,CAAC,EACDtD,QAAQ,CAACgB,GAAG,CAAC,cAAc,CAC5B,CAAC;IACF,CAAC;IAED,SAAS6C,iBAAiBA,CAACtC,IAAI,EAAEuC,KAAK,EAAE;MACvC,UAAA5C,MAAA,CAAU6C,MAAM,CAACxC,IAAI,CAAC,CAACgB,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAACA,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAArB,MAAA,CAAK4C,KAAK;IAC5E;IAEO,eAAe5E,YAAYA,CAAA8E,KAAA,EAAoF;MAAA,IAAAC,cAAA;MAAA,IAAnF;QAAEtD,OAAO;QAAEuD,QAAQ;QAAEC,MAAM;QAAElB,YAAY;QAAEpC,IAAI;QAAEuD,YAAY;QAAEC;MAAiB,CAAC,GAAAL,KAAA;MACnH,MAAMxC,QAAQ,GAAGxB,QAAQ,CAACgB,GAAG,CAAC,kBAAkB,CAAC,GAAGL,OAAO,CAACW,CAAC,CAACC,IAAI,IAAIZ,OAAO,CAACW,CAAC,CAACE,QAAQ,GAAGb,OAAO,CAACW,CAAC,CAACE,QAAQ;MAC7G,IAAI8C,UAAU,GAAG,2BAA2B;MAE5C,IAAI,CAAC1E,eAAe,CAAC8B,iBAAiB,CAACb,IAAI,CAACO,CAAC,CAAC,CAACQ,WAAW,CAACf,IAAI,CAAC,EAAE;QACjEyD,UAAU,GAAG,kBAAkB;MAChC,CAAC,MAAM,IAAID,gBAAgB,EAAE;QAC5BC,UAAU,GAAG,uBAAuB;MACrC;MAEA,MAAMC,YAAY,GAAG1E,MAAM,CAAC0C,OAAO,CAACvC,QAAQ,CAACgB,GAAG,CAACsD,UAAU,CAAC,EAAE;QAC7D1D,IAAI,EAAEY,QAAQ;QACdX,IAAI,EAAE,MAAMjB,eAAe,CAACuB,WAAW,CAACN,IAAI,CAACO,CAAC,EAAEP,IAAI;MACrD,CAAC,CAAC;MACF,MAAM4B,OAAO,GAAG,MAAMxD,eAAe,CAAC;QACrC0B,OAAO;QACPC,IAAI,EAAEsD,QAAQ;QACdrD;MACD,CAAC,CAAC;MAEF,MAAM2D,SAAS,GAAGxB,YAAY,CAACnC,IAAI,EAAEoC,YAAY,EAAEtC,OAAO,CAAC;MAE3D,MAAM8D,YAAY,GAAGzE,QAAQ,CAACgB,GAAG,CAAC,kBAAkB,CAAC,GAAGkD,QAAQ,CAAC3C,IAAI,IAAI2C,QAAQ,CAAC1C,QAAQ,GAAG0C,QAAQ,CAAC1C,QAAQ;MAE9G,MAAMsC,KAAK,GAAG;QACbY,IAAI,EAAEb,iBAAiB,CAACrC,QAAQ,EAAExB,QAAQ,CAACgB,GAAG,CAAC,YAAY,CAAC,CAAC;QAC7D2D,EAAE,EAAEd,iBAAiB,CAACY,YAAY,EAAEL,YAAY,CAAC;QACjDQ,OAAO,EAAEL,YAAY;QACrBM,IAAI,EAAEpC,OAAO,GAAGrC,WAAW,IAAIJ,QAAQ,CAACgB,GAAG,CAAC,qBAAqB,CAAC,GAAGb,MAAM,GAAG,EAAE,CAAC;QACjF2E,IAAI,EAAE;UACLN;QACD,CAAC;QACDO,OAAO,EAAE,CAAC;MACX,CAAC;MAED,IAAI,EAAAd,cAAA,GAAAE,MAAM,CAACa,MAAM,cAAAf,cAAA,uBAAbA,cAAA,CAAe9B,MAAM,IAAG,CAAC,IAAInC,QAAQ,CAACgB,GAAG,CAAC,uBAAuB,CAAC,EAAE;QACvE,MAAM,CAACiE,WAAW,CAAC,GAAGd,MAAM,CAACa,MAAM;QACnClB,KAAK,CAACiB,OAAO,CAAC,UAAU,CAAC,GAAGlB,iBAAiB,CAACrC,QAAQ,EAAEyD,WAAW,CAACC,OAAO,CAAC;MAC7E;;MAEA;MACA,IAAIlF,QAAQ,CAACgB,GAAG,CAAC,qBAAqB,CAAC,EAAE;QACxC,MAAMmE,OAAO,GAAGnF,QAAQ,CAACgB,GAAG,CAAC,sBAAsB,CAAC,IAAIhB,QAAQ,CAACgB,GAAG,CAAC,uBAAuB,CAAC;;QAE7F;QACA8C,KAAK,CAACiB,OAAO,CAAC,UAAU,CAAC,MAAA7D,MAAA,CAAMiE,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAACpF,QAAQ,CAACgB,GAAG,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAAE,MAAA,CAAGlB,QAAQ,CAACgB,GAAG,CACnH,wBACD,CAAC,EAAAE,MAAA,CAAGP,OAAO,CAAC0E,IAAI,IAAI1E,OAAO,CAAC2C,GAAG,OAAApC,MAAA,CAAIiE,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE;MAC3D;MAEArF,OAAO,CAACuF,iBAAiB,CAACC,GAAG,CAAC;QAAEC,iBAAiB,EAAE;MAAQ,CAAC,CAAC;MAC7D,OAAO1B,KAAK;IACb;IAEO,SAAS3E,iBAAiBA,CAAC2F,IAAI,EAAE;MACvC/E,OAAO,CAACuF,iBAAiB,CAACC,GAAG,CAAC;QAAEC,iBAAiB,EAAE;MAAQ,CAAC,CAAC;MAC7D,OAAO3F,MAAM,CAAC4F,IAAI,CAACX,IAAI,CAAC;IACzB;IAEO,SAAS1F,iBAAiBA,CAAAsG,KAAA,EAU9B;MAAA,IAV+B;QACjCC,8BAA8B;QAC9BC,gBAAgB;QAChBC,kBAAkB;QAClBC,aAAa;QACbzB,gBAAgB;QAChB0B,eAAe;QACfC,gBAAgB;QAChBC,QAAQ;QACRC;MACD,CAAC,GAAAR,KAAA;MACA;MACA,IAAI,CAAC1F,QAAQ,CAACgB,GAAG,CAAC,kCAAkC,CAAC,EAAE;QACtD,OAAO,KAAK;MACb;;MAEA;MACA,IAAI6E,kBAAkB,KAAK,SAAS,EAAE;QACrC,OAAO,KAAK;MACb;;MAEA;MACA,IAAID,gBAAgB,KAAK,QAAQ,EAAE;QAClC,OAAO,KAAK;MACb;;MAEA;MACA,IAAIC,kBAAkB,IAAI,IAAI,EAAE;QAC/B,IAAIF,8BAA8B,IAAI,CAACG,aAAa,IAAI,CAACzB,gBAAgB,IAAI,CAAC2B,gBAAgB,EAAE;UAC/F,OAAO,KAAK;QACb;;QAEA;QACA,IAAIhG,QAAQ,CAACgB,GAAG,CAAC,yDAAyD,CAAC,KAAK,SAAS,EAAE;UAC1F,OAAO,KAAK;QACb;MACD;MAEA,OACC,CAACiF,QAAQ,KAAK,GAAG,IAChBH,aAAa,IACbD,kBAAkB,KAAK,KAAK,IAC5BxB,gBAAgB,IACf,CAACsB,8BAA8B,IAAII,eAAgB,MACpDD,aAAa,IAAI,CAACI,QAAQ,IAAIF,gBAAgB,CAAC;IAElD;IAACG,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"86463ca8384f353a9bf84ae0f43b203145961b19"}
