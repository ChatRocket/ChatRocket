{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/federation/server/lib/crypt.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/lib/crypt.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/federation/server/lib/crypt.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/federation/server/lib/crypt.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/lib/crypt.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      decryptIfNeeded: () => decryptIfNeeded,\n      encrypt: () => encrypt\n    });\n    let FederationKeys;\n    module.link(\"@rocket.chat/models\", {\n      FederationKeys(v) {\n        FederationKeys = v;\n      }\n    }, 0);\n    let search;\n    module.link(\"./dns\", {\n      search(v) {\n        search = v;\n      }\n    }, 1);\n    let getFederationDomain;\n    module.link(\"./getFederationDomain\", {\n      getFederationDomain(v) {\n        getFederationDomain = v;\n      }\n    }, 2);\n    let cryptLogger;\n    module.link(\"./logger\", {\n      cryptLogger(v) {\n        cryptLogger = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function decrypt(data, peerKey) {\n      //\n      // Decrypt the payload\n      const payloadBuffer = Buffer.from(data);\n\n      // Decrypt with the peer's public key\n      try {\n        data = (await FederationKeys.loadKey(peerKey, 'public')).decryptPublic(payloadBuffer);\n\n        // Decrypt with the local private key\n        data = (await FederationKeys.getPrivateKey()).decrypt(data);\n      } catch (err) {\n        cryptLogger.error(err);\n        throw new Error('Could not decrypt');\n      }\n      return JSON.parse(data.toString());\n    }\n    async function decryptIfNeeded(request, bodyParams) {\n      //\n      // Look for the domain that sent this event\n      const remotePeerDomain = request.headers['x-federation-domain'];\n      if (!remotePeerDomain) {\n        throw new Error('Domain is unknown, ignoring event');\n      }\n\n      //\n      // Decrypt payload if needed\n      if (remotePeerDomain === getFederationDomain()) {\n        return bodyParams;\n      }\n      //\n      // Find the peer's public key\n      const {\n        publicKey: peerKey\n      } = await search(remotePeerDomain);\n      if (!peerKey) {\n        throw new Error(\"Could not find the peer's public key to decrypt\");\n      }\n      return decrypt(bodyParams, peerKey);\n    }\n    async function encrypt(data, peerKey) {\n      if (!data) {\n        return data;\n      }\n      try {\n        // Encrypt with the peer's public key\n        data = (await FederationKeys.loadKey(peerKey, 'public')).encrypt(data);\n\n        // Encrypt with the local private key\n        return (await FederationKeys.getPrivateKey()).encryptPrivate(data);\n      } catch (err) {\n        cryptLogger.error(err);\n        throw new Error('Could not encrypt');\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","decryptIfNeeded","encrypt","FederationKeys","link","v","search","getFederationDomain","cryptLogger","__reifyWaitForDeps__","decrypt","data","peerKey","payloadBuffer","Buffer","from","loadKey","decryptPublic","getPrivateKey","err","error","Error","JSON","parse","toString","request","bodyParams","remotePeerDomain","headers","publicKey","encryptPrivate","__reify_async_result__","_reifyError","self","async"],"sources":["app/federation/server/lib/crypt.js"],"sourcesContent":["import { FederationKeys } from '@rocket.chat/models';\n\nimport { search } from './dns';\nimport { getFederationDomain } from './getFederationDomain';\nimport { cryptLogger } from './logger';\n\nasync function decrypt(data, peerKey) {\n\t//\n\t// Decrypt the payload\n\tconst payloadBuffer = Buffer.from(data);\n\n\t// Decrypt with the peer's public key\n\ttry {\n\t\tdata = (await FederationKeys.loadKey(peerKey, 'public')).decryptPublic(payloadBuffer);\n\n\t\t// Decrypt with the local private key\n\t\tdata = (await FederationKeys.getPrivateKey()).decrypt(data);\n\t} catch (err) {\n\t\tcryptLogger.error(err);\n\n\t\tthrow new Error('Could not decrypt');\n\t}\n\n\treturn JSON.parse(data.toString());\n}\n\nexport async function decryptIfNeeded(request, bodyParams) {\n\t//\n\t// Look for the domain that sent this event\n\tconst remotePeerDomain = request.headers['x-federation-domain'];\n\n\tif (!remotePeerDomain) {\n\t\tthrow new Error('Domain is unknown, ignoring event');\n\t}\n\n\t//\n\t// Decrypt payload if needed\n\tif (remotePeerDomain === getFederationDomain()) {\n\t\treturn bodyParams;\n\t}\n\t//\n\t// Find the peer's public key\n\tconst { publicKey: peerKey } = await search(remotePeerDomain);\n\n\tif (!peerKey) {\n\t\tthrow new Error(\"Could not find the peer's public key to decrypt\");\n\t}\n\n\treturn decrypt(bodyParams, peerKey);\n}\n\nexport async function encrypt(data, peerKey) {\n\tif (!data) {\n\t\treturn data;\n\t}\n\n\ttry {\n\t\t// Encrypt with the peer's public key\n\t\tdata = (await FederationKeys.loadKey(peerKey, 'public')).encrypt(data);\n\n\t\t// Encrypt with the local private key\n\t\treturn (await FederationKeys.getPrivateKey()).encryptPrivate(data);\n\t} catch (err) {\n\t\tcryptLogger.error(err);\n\n\t\tthrow new Error('Could not encrypt');\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"61c9df424e7f7bea911688a138538bbfaafb24c1"}
