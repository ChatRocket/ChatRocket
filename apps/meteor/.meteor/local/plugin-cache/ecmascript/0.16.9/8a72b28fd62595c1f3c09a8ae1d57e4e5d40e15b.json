{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/imports/client/sodium-plus/lib/polyfill.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/client/sodium-plus/lib/polyfill.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/imports/client/sodium-plus/lib/polyfill.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/imports/client/sodium-plus/lib/polyfill.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/client/sodium-plus/lib/polyfill.js"}},"code":"\"use strict\";\n\n!function (module1) {\n  const crypto = require('crypto');\n  const Poly1305 = require('poly1305-js');\n  const Util = require('./util');\n  const XSalsa20 = require('xsalsa20');\n\n  /* istanbul ignore if */\n  if (typeof Buffer === 'undefined') {\n    let Buffer = require('buffer/').Buffer;\n  }\n  module.exports = class SodiumPolyfill {\n    /**\n     * @param {string|Buffer} message\n     * @param {CryptographyKey} key\n     * @return {Promise<Buffer>}\n     */\n    static async crypto_onetimeauth(message, key) {\n      return Poly1305.onetimeauth(await Util.toBuffer(message), key.getBuffer());\n    }\n\n    /**\n     * @param {string|Buffer} message\n     * @param {CryptographyKey} key\n     * @param {Buffer} tag\n     * @return {Promise<boolean>}\n     */\n    static async crypto_onetimeauth_verify(message, key, tag) {\n      return Poly1305.onetimeauth_verify(await Util.toBuffer(message), key.getBuffer(), await Util.toBuffer(tag));\n    }\n\n    /**\n     * @param {string|Buffer} plaintext\n     * @param {Buffer} nonce\n     * @param {CryptographyKey} key\n     * @return {Promise<Buffer>}\n     */\n    static async crypto_stream_xor(plaintext, nonce, key) {\n      const stream = XSalsa20(nonce, key.getBuffer());\n      const output = stream.update(plaintext);\n      stream.finalize();\n      return Util.toBuffer(output);\n    }\n\n    /**\n     * Polyfill crypto_pwhash_str_needs_rehash() for bindings that don't\n     * include this (somewhat new) helper function.\n     *\n     * @param {string|Buffer} hash\n     * @param {number} opslimit\n     * @param {number} memlimit\n     * @return {Promise<boolean>}\n     */\n    static async crypto_pwhash_str_needs_rehash(hash, opslimit, memlimit) {\n      const pwhash = (await Util.toBuffer(hash)).toString('utf-8');\n      const pieces = pwhash.split('$');\n      const expect = 'm=' + (memlimit >> 10) + ',t=' + opslimit + ',p=1';\n      if (expect.length !== pieces[3].length) {\n        return true;\n      }\n      return !crypto.timingSafeEqual(await Util.toBuffer(expect), await Util.toBuffer(pieces[3]));\n    }\n  };\n}.call(this, module);","map":{"version":3,"names":["module1","crypto","require","Poly1305","Util","XSalsa20","Buffer","module","exports","SodiumPolyfill","crypto_onetimeauth","message","key","onetimeauth","toBuffer","getBuffer","crypto_onetimeauth_verify","tag","onetimeauth_verify","crypto_stream_xor","plaintext","nonce","stream","output","update","finalize","crypto_pwhash_str_needs_rehash","hash","opslimit","memlimit","pwhash","toString","pieces","split","expect","length","timingSafeEqual","call"],"sources":["imports/client/sodium-plus/lib/polyfill.js"],"sourcesContent":["\"use strict\";\nconst crypto = require('crypto');\nconst Poly1305 = require('poly1305-js');\nconst Util = require('./util');\nconst XSalsa20 = require('xsalsa20');\n\n/* istanbul ignore if */\nif (typeof (Buffer) === 'undefined') {\n    let Buffer = require('buffer/').Buffer;\n}\n\nmodule.exports = class SodiumPolyfill {\n\n    /**\n     * @param {string|Buffer} message\n     * @param {CryptographyKey} key\n     * @return {Promise<Buffer>}\n     */\n    static async crypto_onetimeauth(message, key) {\n        return Poly1305.onetimeauth(\n            await Util.toBuffer(message),\n            key.getBuffer()\n        );\n    }\n\n    /**\n     * @param {string|Buffer} message\n     * @param {CryptographyKey} key\n     * @param {Buffer} tag\n     * @return {Promise<boolean>}\n     */\n    static async crypto_onetimeauth_verify(message, key, tag) {\n        return Poly1305.onetimeauth_verify(\n            await Util.toBuffer(message),\n            key.getBuffer(),\n            await Util.toBuffer(tag)\n        );\n    }\n\n    /**\n     * @param {string|Buffer} plaintext\n     * @param {Buffer} nonce\n     * @param {CryptographyKey} key\n     * @return {Promise<Buffer>}\n     */\n    static async crypto_stream_xor(plaintext, nonce, key) {\n        const stream = XSalsa20(nonce, key.getBuffer());\n        const output = stream.update(plaintext);\n        stream.finalize();\n        return Util.toBuffer(output);\n    }\n\n    /**\n     * Polyfill crypto_pwhash_str_needs_rehash() for bindings that don't\n     * include this (somewhat new) helper function.\n     *\n     * @param {string|Buffer} hash\n     * @param {number} opslimit\n     * @param {number} memlimit\n     * @return {Promise<boolean>}\n     */\n    static async crypto_pwhash_str_needs_rehash(hash, opslimit, memlimit) {\n        const pwhash = (await Util.toBuffer(hash)).toString('utf-8');\n        const pieces = pwhash.split('$');\n        const expect = 'm=' + (memlimit >> 10) + ',t=' + opslimit + ',p=1';\n        if (expect.length !== pieces[3].length) {\n            return true;\n        }\n        return !crypto.timingSafeEqual(\n            await Util.toBuffer(expect),\n            await Util.toBuffer(pieces[3])\n        );\n    }\n};\n"],"mappings":"AAAA,YAAY;;AAAC,WAAAA,OAAA;EACb,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;EAChC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,aAAa,CAAC;EACvC,MAAME,IAAI,GAAGF,OAAO,CAAC,QAAQ,CAAC;EAC9B,MAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAU,CAAC;;EAEpC;EACA,IAAI,OAAQI,MAAO,KAAK,WAAW,EAAE;IACjC,IAAIA,MAAM,GAAGJ,OAAO,CAAC,SAAS,CAAC,CAACI,MAAM;EAC1C;EAEAC,MAAM,CAACC,OAAO,GAAG,MAAMC,cAAc,CAAC;IAElC;AACJ;AACA;AACA;AACA;IACI,aAAaC,kBAAkBA,CAACC,OAAO,EAAEC,GAAG,EAAE;MAC1C,OAAOT,QAAQ,CAACU,WAAW,CACvB,MAAMT,IAAI,CAACU,QAAQ,CAACH,OAAO,CAAC,EAC5BC,GAAG,CAACG,SAAS,CAAC,CAClB,CAAC;IACL;;IAEA;AACJ;AACA;AACA;AACA;AACA;IACI,aAAaC,yBAAyBA,CAACL,OAAO,EAAEC,GAAG,EAAEK,GAAG,EAAE;MACtD,OAAOd,QAAQ,CAACe,kBAAkB,CAC9B,MAAMd,IAAI,CAACU,QAAQ,CAACH,OAAO,CAAC,EAC5BC,GAAG,CAACG,SAAS,CAAC,CAAC,EACf,MAAMX,IAAI,CAACU,QAAQ,CAACG,GAAG,CAC3B,CAAC;IACL;;IAEA;AACJ;AACA;AACA;AACA;AACA;IACI,aAAaE,iBAAiBA,CAACC,SAAS,EAAEC,KAAK,EAAET,GAAG,EAAE;MAClD,MAAMU,MAAM,GAAGjB,QAAQ,CAACgB,KAAK,EAAET,GAAG,CAACG,SAAS,CAAC,CAAC,CAAC;MAC/C,MAAMQ,MAAM,GAAGD,MAAM,CAACE,MAAM,CAACJ,SAAS,CAAC;MACvCE,MAAM,CAACG,QAAQ,CAAC,CAAC;MACjB,OAAOrB,IAAI,CAACU,QAAQ,CAACS,MAAM,CAAC;IAChC;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,aAAaG,8BAA8BA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;MAClE,MAAMC,MAAM,GAAG,CAAC,MAAM1B,IAAI,CAACU,QAAQ,CAACa,IAAI,CAAC,EAAEI,QAAQ,CAAC,OAAO,CAAC;MAC5D,MAAMC,MAAM,GAAGF,MAAM,CAACG,KAAK,CAAC,GAAG,CAAC;MAChC,MAAMC,MAAM,GAAG,IAAI,IAAIL,QAAQ,IAAI,EAAE,CAAC,GAAG,KAAK,GAAGD,QAAQ,GAAG,MAAM;MAClE,IAAIM,MAAM,CAACC,MAAM,KAAKH,MAAM,CAAC,CAAC,CAAC,CAACG,MAAM,EAAE;QACpC,OAAO,IAAI;MACf;MACA,OAAO,CAAClC,MAAM,CAACmC,eAAe,CAC1B,MAAMhC,IAAI,CAACU,QAAQ,CAACoB,MAAM,CAAC,EAC3B,MAAM9B,IAAI,CAACU,QAAQ,CAACkB,MAAM,CAAC,CAAC,CAAC,CACjC,CAAC;IACL;EACJ,CAAC;AAAC,EAAAK,IAAA,OAAA9B,MAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"8a72b28fd62595c1f3c09a8ae1d57e4e5d40e15b"}
