{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/google-oauth/google_server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"packages/google-oauth/google_server.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/google-oauth/google_server.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/google-oauth/google_server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/google-oauth/google_server.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let Google;\n    module.link(\"./namespace.js\", {\n      default(v) {\n        Google = v;\n      }\n    }, 0);\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 1);\n    let fetch;\n    module.link(\"meteor/fetch\", {\n      fetch(v) {\n        fetch = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const hasOwn = Object.prototype.hasOwnProperty;\n\n    // https://developers.google.com/accounts/docs/OAuth2Login#userinfocall\n    Google.whitelistedFields = ['id', 'email', 'verified_email', 'name', 'given_name', 'family_name', 'picture', 'locale', 'timezone', 'gender'];\n    const getServiceDataFromTokens = async (tokens, callback) => {\n      const {\n        accessToken,\n        idToken\n      } = tokens;\n      const scopes = await getScopes(accessToken).catch(err => {\n        const error = Object.assign(new Error(\"Failed to fetch tokeninfo from Google. \".concat(err.message)), {\n          response: err.response\n        });\n        callback && callback(error);\n        throw error;\n      });\n      let identity = await getIdentity(accessToken).catch(err => {\n        const error = Object.assign(new Error(\"Failed to fetch identity from Google. \".concat(err.message)), {\n          response: err.response\n        });\n        callback && callback(error);\n        throw error;\n      });\n      const serviceData = {\n        accessToken,\n        idToken,\n        scope: scopes\n      };\n      if (hasOwn.call(tokens, 'expiresIn')) {\n        serviceData.expiresAt = Date.now() + 1000 * parseInt(tokens.expiresIn, 10);\n      }\n      const fields = Object.create(null);\n      Google.whitelistedFields.forEach(function (name) {\n        if (hasOwn.call(identity, name)) {\n          fields[name] = identity[name];\n        }\n      });\n      Object.assign(serviceData, fields);\n\n      // only set the token in serviceData if it's there. this ensures\n      // that we don't lose old ones (since we only get this on the first\n      // log in attempt)\n      if (tokens.refreshToken) {\n        serviceData.refreshToken = tokens.refreshToken;\n      }\n      const returnValue = {\n        serviceData,\n        options: {\n          profile: {\n            name: identity.name\n          }\n        }\n      };\n      callback && callback(undefined, returnValue);\n      return returnValue;\n    };\n    Accounts.registerLoginHandler(async request => {\n      if (request.googleSignIn !== true) {\n        return;\n      }\n      const tokens = {\n        accessToken: request.accessToken,\n        refreshToken: request.refreshToken,\n        idToken: request.idToken\n      };\n      if (request.serverAuthCode) {\n        Object.assign(tokens, await getTokens({\n          code: request.serverAuthCode\n        }));\n      }\n      let result;\n      try {\n        result = await getServiceDataFromTokens(tokens);\n      } catch (err) {\n        throw Object.assign(new Error(\"Failed to complete OAuth handshake with Google. \".concat(err.message)), {\n          response: err.response\n        });\n      }\n      return Accounts.updateOrCreateUserFromExternalService('google', _objectSpread({\n        id: request.userId,\n        idToken: request.idToken,\n        accessToken: request.accessToken,\n        email: request.email,\n        picture: request.imageUrl\n      }, result.serviceData), result.options);\n    });\n\n    // returns an object containing:\n    // - accessToken\n    // - expiresIn: lifetime of token in seconds\n    // - refreshToken, if this is the first authorization request\n    const getTokens = async (query, callback) => {\n      const config = await ServiceConfiguration.configurations.findOneAsync({\n        service: 'google'\n      });\n      if (!config) throw new ServiceConfiguration.ConfigError();\n      const content = new URLSearchParams({\n        code: query.code,\n        client_id: config.clientId,\n        client_secret: OAuth.openSecret(config.secret),\n        redirect_uri: OAuth._redirectUri('google', config),\n        grant_type: 'authorization_code'\n      });\n      const request = await OAuth._fetch('https://accounts.google.com/o/oauth2/token', 'POST', {\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: content\n      });\n      const response = await request.json();\n      if (response.error) {\n        // if the http response was a json object with an error attribute\n        callback && callback(response.error);\n        throw new Meteor.Error(\"Failed to complete OAuth handshake with Google. \".concat(response.error));\n      } else {\n        const data = {\n          accessToken: response.access_token,\n          refreshToken: response.refresh_token,\n          expiresIn: response.expires_in,\n          idToken: response.id_token\n        };\n        callback && callback(undefined, data);\n        return data;\n      }\n    };\n    const getServiceData = async query => getServiceDataFromTokens(await getTokens(query));\n    OAuth.registerService('google', 2, null, getServiceData);\n    const getIdentity = async (accessToken, callback) => {\n      const content = new URLSearchParams({\n        access_token: accessToken\n      });\n      let response;\n      try {\n        const request = await OAuth._fetch(\"https://www.googleapis.com/oauth2/v1/userinfo?\".concat(content.toString()), 'GET', {\n          headers: {\n            Accept: 'application/json'\n          }\n        });\n        response = await request.json();\n      } catch (e) {\n        callback && callback(e);\n        throw new Meteor.Error(e.reason);\n      }\n      callback && callback(undefined, response);\n      return response;\n    };\n    const getScopes = async (accessToken, callback) => {\n      const content = new URLSearchParams({\n        access_token: accessToken\n      });\n      let response;\n      try {\n        const request = await OAuth._fetch(\"https://www.googleapis.com/oauth2/v1/tokeninfo?\".concat(content.toString()), 'GET', {\n          headers: {\n            Accept: 'application/json'\n          }\n        });\n        response = await request.json();\n      } catch (e) {\n        callback && callback(e);\n        throw new Meteor.Error(e.reason);\n      }\n      callback && callback(undefined, response.scope.split(' '));\n      return response.scope.split(' ');\n    };\n    Google.retrieveCredential = (credentialToken, credentialSecret) => OAuth.retrieveCredential(credentialToken, credentialSecret);\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","Google","Accounts","fetch","__reifyWaitForDeps__","hasOwn","Object","prototype","hasOwnProperty","whitelistedFields","getServiceDataFromTokens","tokens","callback","accessToken","idToken","scopes","getScopes","catch","err","error","assign","Error","concat","message","response","identity","getIdentity","serviceData","scope","call","expiresAt","Date","now","parseInt","expiresIn","fields","create","forEach","name","refreshToken","returnValue","options","profile","undefined","registerLoginHandler","request","googleSignIn","serverAuthCode","getTokens","code","result","updateOrCreateUserFromExternalService","id","userId","email","picture","imageUrl","query","config","ServiceConfiguration","configurations","findOneAsync","service","ConfigError","content","URLSearchParams","client_id","clientId","client_secret","OAuth","openSecret","secret","redirect_uri","_redirectUri","grant_type","_fetch","headers","Accept","body","json","Meteor","data","access_token","refresh_token","expires_in","id_token","getServiceData","registerService","toString","e","reason","split","retrieveCredential","credentialToken","credentialSecret","__reify_async_result__","_reifyError","self","async"],"sources":["packages/google-oauth/google_server.js"],"sourcesContent":["import Google from './namespace.js';\nimport { Accounts } from 'meteor/accounts-base';\nimport { fetch } from 'meteor/fetch';\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\n// https://developers.google.com/accounts/docs/OAuth2Login#userinfocall\nGoogle.whitelistedFields = [\n  'id',\n  'email',\n  'verified_email',\n  'name',\n  'given_name',\n  'family_name',\n  'picture',\n  'locale',\n  'timezone',\n  'gender',\n];\n\nconst getServiceDataFromTokens = async (tokens, callback) => {\n  const { accessToken, idToken } = tokens;\n  const scopes = await getScopes(accessToken).catch((err) => {\n    const error = Object.assign(\n      new Error(`Failed to fetch tokeninfo from Google. ${err.message}`),\n      { response: err.response }\n    );\n    callback && callback(error);\n    throw error;\n  });\n\n  let identity = await getIdentity(accessToken).catch((err) => {\n    const error = Object.assign(\n      new Error(`Failed to fetch identity from Google. ${err.message}`),\n      { response: err.response }\n    );\n    callback && callback(error);\n    throw error;\n  });\n  const serviceData = {\n    accessToken,\n    idToken,\n    scope: scopes,\n  };\n\n  if (hasOwn.call(tokens, 'expiresIn')) {\n    serviceData.expiresAt = Date.now() + 1000 * parseInt(tokens.expiresIn, 10);\n  }\n\n  const fields = Object.create(null);\n  Google.whitelistedFields.forEach(function (name) {\n    if (hasOwn.call(identity, name)) {\n      fields[name] = identity[name];\n    }\n  });\n\n  Object.assign(serviceData, fields);\n\n  // only set the token in serviceData if it's there. this ensures\n  // that we don't lose old ones (since we only get this on the first\n  // log in attempt)\n  if (tokens.refreshToken) {\n    serviceData.refreshToken = tokens.refreshToken;\n  }\n  const returnValue = {\n    serviceData,\n    options: {\n      profile: {\n        name: identity.name,\n      },\n    },\n  };\n\n  callback && callback(undefined, returnValue);\n\n  return returnValue;\n};\n\nAccounts.registerLoginHandler(async (request) => {\n  if (request.googleSignIn !== true) {\n    return;\n  }\n  const tokens = {\n    accessToken: request.accessToken,\n    refreshToken: request.refreshToken,\n    idToken: request.idToken,\n  };\n\n  if (request.serverAuthCode) {\n    Object.assign(\n      tokens,\n      await getTokens({\n        code: request.serverAuthCode,\n      })\n    );\n  }\n\n  let result;\n  try {\n    result = await getServiceDataFromTokens(tokens);\n  } catch (err) {\n    throw Object.assign(\n      new Error(\n        `Failed to complete OAuth handshake with Google. ${err.message}`\n      ),\n      { response: err.response }\n    );\n  }\n  return Accounts.updateOrCreateUserFromExternalService(\n    'google',\n    {\n      id: request.userId,\n      idToken: request.idToken,\n      accessToken: request.accessToken,\n      email: request.email,\n      picture: request.imageUrl,\n      ...result.serviceData,\n    },\n    result.options\n  );\n});\n\n// returns an object containing:\n// - accessToken\n// - expiresIn: lifetime of token in seconds\n// - refreshToken, if this is the first authorization request\nconst getTokens = async (query, callback) => {\n  const config = await ServiceConfiguration.configurations.findOneAsync({\n    service: 'google',\n  });\n  if (!config) throw new ServiceConfiguration.ConfigError();\n\n  const content = new URLSearchParams({\n    code: query.code,\n    client_id: config.clientId,\n    client_secret: OAuth.openSecret(config.secret),\n    redirect_uri: OAuth._redirectUri('google', config),\n    grant_type: 'authorization_code',\n  });\n  const request = await OAuth._fetch('https://accounts.google.com/o/oauth2/token', 'POST', {\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: content,\n  });\n  const response = await request.json();\n\n  if (response.error) {\n    // if the http response was a json object with an error attribute\n    callback && callback(response.error);\n    throw new Meteor.Error(\n      `Failed to complete OAuth handshake with Google. ${response.error}`\n    );\n  } else {\n    const data = {\n      accessToken: response.access_token,\n      refreshToken: response.refresh_token,\n      expiresIn: response.expires_in,\n      idToken: response.id_token,\n    };\n    callback && callback(undefined, data);\n    return data;\n  }\n};\n\nconst getServiceData = async (query) =>\n  getServiceDataFromTokens(await getTokens(query));\n\nOAuth.registerService('google', 2, null, getServiceData);\n\nconst getIdentity = async (accessToken, callback) => {\n  const content = new URLSearchParams({ access_token: accessToken });\n  let response;\n  try {\n    const request = await OAuth._fetch(\n      `https://www.googleapis.com/oauth2/v1/userinfo?${content.toString()}`,\n      'GET',\n      {\n        headers: { Accept: 'application/json' },\n      }\n    );\n    response = await request.json();\n  } catch (e) {\n    callback && callback(e);\n    throw new Meteor.Error(e.reason);\n  }\n  callback && callback(undefined, response);\n  return response;\n};\n\nconst getScopes = async (accessToken, callback) => {\n  const content = new URLSearchParams({ access_token: accessToken });\n  let response;\n  try {\n    const request = await OAuth._fetch(\n      `https://www.googleapis.com/oauth2/v1/tokeninfo?${content.toString()}`,\n      'GET',\n      {\n        headers: { Accept: 'application/json' },\n      }\n    );\n    response = await request.json();\n  } catch (e) {\n    callback && callback(e);\n    throw new Meteor.Error(e.reason);\n  }\n  callback && callback(undefined, response.scope.split(' '));\n  return response.scope.split(' ');\n};\n\nGoogle.retrieveCredential = (credentialToken, credentialSecret) =>\n  OAuth.retrieveCredential(credentialToken, credentialSecret);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"7f38ead59a2b879cc209fd64e6fea6e305130bd8"}
