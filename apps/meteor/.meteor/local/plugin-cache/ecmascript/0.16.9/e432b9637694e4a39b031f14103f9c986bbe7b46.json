{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/accounts-oauth/oauth_server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"packages/accounts-oauth/oauth_server.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/accounts-oauth/oauth_server.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/accounts-oauth/oauth_server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/accounts-oauth/oauth_server.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    var _Package$oauthEncryp;\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    // Listen to calls to `login` with an oauth option set. This is where\n    // users actually get logged in to meteor via oauth.\n    Accounts.registerLoginHandler(async options => {\n      if (!options.oauth) return undefined; // don't handle\n\n      check(options.oauth, {\n        credentialToken: String,\n        // When an error occurs while retrieving the access token, we store\n        // the error in the pending credentials table, with a secret of\n        // null. The client can call the login method with a secret of null\n        // to retrieve the error.\n        credentialSecret: Match.OneOf(null, String)\n      });\n      const result = await OAuth.retrieveCredential(options.oauth.credentialToken, options.oauth.credentialSecret);\n      if (!result) {\n        // OAuth credentialToken is not recognized, which could be either\n        // because the popup was closed by the user before completion, or\n        // some sort of error where the oauth provider didn't talk to our\n        // server correctly and closed the popup somehow.\n        //\n        // We assume it was user canceled and report it as such, using a\n        // numeric code that the client recognizes (XXX this will get\n        // replaced by a symbolic error code at some point\n        // https://trello.com/c/kMkw800Z/53-official-ddp-specification). This\n        // will mask failures where things are misconfigured such that the\n        // server doesn't see the request but does close the window. This\n        // seems unlikely.\n        //\n        // XXX we want `type` to be the service name such as \"facebook\"\n        return {\n          type: \"oauth\",\n          error: new Meteor.Error(Accounts.LoginCancelledError.numericError, \"No matching login attempt found\")\n        };\n      }\n      if (result instanceof Error)\n        // We tried to login, but there was a fatal error. Report it back\n        // to the user.\n        throw result;else {\n        if (!Accounts.oauth.serviceNames().includes(result.serviceName)) {\n          // serviceName was not found in the registered services list.\n          // This could happen because the service never registered itself or\n          // unregisterService was called on it.\n          return {\n            type: \"oauth\",\n            error: new Meteor.Error(Accounts.LoginCancelledError.numericError, \"No registered oauth service found for: \".concat(result.serviceName))\n          };\n        }\n        return Accounts.updateOrCreateUserFromExternalService(result.serviceName, result.serviceData, result.options);\n      }\n    });\n\n    ///\n    /// OAuth Encryption Support\n    ///\n\n    const OAuthEncryption = (_Package$oauthEncryp = Package[\"oauth-encryption\"]) === null || _Package$oauthEncryp === void 0 ? void 0 : _Package$oauthEncryp.OAuthEncryption;\n    const usingOAuthEncryption = () => {\n      return OAuthEncryption === null || OAuthEncryption === void 0 ? void 0 : OAuthEncryption.keyIsLoaded();\n    };\n\n    // Encrypt unencrypted login service secrets when oauth-encryption is\n    // added.\n    //\n    // XXX For the oauthSecretKey to be available here at startup, the\n    // developer must call Accounts.config({oauthSecretKey: ...}) at load\n    // time, instead of in a Meteor.startup block, because the startup\n    // block in the app code will run after this accounts-base startup\n    // block.  Perhaps we need a post-startup callback?\n\n    Meteor.startup(() => {\n      if (!usingOAuthEncryption()) {\n        return;\n      }\n      const {\n        ServiceConfiguration\n      } = Package['service-configuration'];\n      ServiceConfiguration.configurations.find({\n        $and: [{\n          secret: {\n            $exists: true\n          }\n        }, {\n          \"secret.algorithm\": {\n            $exists: false\n          }\n        }]\n      }).forEachAsync(async config => {\n        await ServiceConfiguration.configurations.updateAsync(config._id, {\n          $set: {\n            secret: OAuthEncryption.seal(config.secret)\n          }\n        });\n      });\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Meteor","module","link","v","__reifyWaitForDeps__","Accounts","registerLoginHandler","options","oauth","undefined","check","credentialToken","String","credentialSecret","Match","OneOf","result","OAuth","retrieveCredential","type","error","Error","LoginCancelledError","numericError","serviceNames","includes","serviceName","concat","updateOrCreateUserFromExternalService","serviceData","OAuthEncryption","_Package$oauthEncryp","Package","usingOAuthEncryption","keyIsLoaded","startup","ServiceConfiguration","configurations","find","$and","secret","$exists","forEachAsync","config","updateAsync","_id","$set","seal","__reify_async_result__","_reifyError","self","async"],"sources":["packages/accounts-oauth/oauth_server.js"],"sourcesContent":["import { Meteor } from 'meteor/meteor';\n\n// Listen to calls to `login` with an oauth option set. This is where\n// users actually get logged in to meteor via oauth.\nAccounts.registerLoginHandler(async options => {\n  if (!options.oauth)\n    return undefined; // don't handle\n\n  check(options.oauth, {\n    credentialToken: String,\n    // When an error occurs while retrieving the access token, we store\n    // the error in the pending credentials table, with a secret of\n    // null. The client can call the login method with a secret of null\n    // to retrieve the error.\n    credentialSecret: Match.OneOf(null, String)\n  });\n\n  const result = await OAuth.retrieveCredential(options.oauth.credentialToken,\n                                        options.oauth.credentialSecret);\n\n  if (!result) {\n    // OAuth credentialToken is not recognized, which could be either\n    // because the popup was closed by the user before completion, or\n    // some sort of error where the oauth provider didn't talk to our\n    // server correctly and closed the popup somehow.\n    //\n    // We assume it was user canceled and report it as such, using a\n    // numeric code that the client recognizes (XXX this will get\n    // replaced by a symbolic error code at some point\n    // https://trello.com/c/kMkw800Z/53-official-ddp-specification). This\n    // will mask failures where things are misconfigured such that the\n    // server doesn't see the request but does close the window. This\n    // seems unlikely.\n    //\n    // XXX we want `type` to be the service name such as \"facebook\"\n    return { type: \"oauth\",\n             error: new Meteor.Error(\n               Accounts.LoginCancelledError.numericError,\n               \"No matching login attempt found\") };\n  }\n\n  if (result instanceof Error)\n    // We tried to login, but there was a fatal error. Report it back\n    // to the user.\n    throw result;\n  else {\n    if (! Accounts.oauth.serviceNames().includes(result.serviceName)) {\n      // serviceName was not found in the registered services list.\n      // This could happen because the service never registered itself or\n      // unregisterService was called on it.\n      return { type: \"oauth\",\n               error: new Meteor.Error(\n                 Accounts.LoginCancelledError.numericError,\n                 `No registered oauth service found for: ${result.serviceName}`) };\n\n    }\n    return Accounts.updateOrCreateUserFromExternalService(result.serviceName, result.serviceData, result.options);\n  }\n});\n\n///\n/// OAuth Encryption Support\n///\n\nconst OAuthEncryption = Package[\"oauth-encryption\"]?.OAuthEncryption;\n\nconst usingOAuthEncryption = () => {\n  return OAuthEncryption?.keyIsLoaded();\n};\n\n// Encrypt unencrypted login service secrets when oauth-encryption is\n// added.\n//\n// XXX For the oauthSecretKey to be available here at startup, the\n// developer must call Accounts.config({oauthSecretKey: ...}) at load\n// time, instead of in a Meteor.startup block, because the startup\n// block in the app code will run after this accounts-base startup\n// block.  Perhaps we need a post-startup callback?\n\nMeteor.startup(() => {\n  if (! usingOAuthEncryption()) {\n    return;\n  }\n\n  const { ServiceConfiguration } = Package['service-configuration'];\n\n  ServiceConfiguration.configurations.find({\n    $and: [{\n      secret: { $exists: true }\n    }, {\n      \"secret.algorithm\": { $exists: false }\n    }]\n  }).forEachAsync(async (config) => {\n    await ServiceConfiguration.configurations.updateAsync(config._id, {\n      $set: {\n        secret: OAuthEncryption.seal(config.secret)\n      }\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e432b9637694e4a39b031f14103f9c986bbe7b46"}
