{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/oauth1/oauth1_pending_request_tokens.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"packages/oauth1/oauth1_pending_request_tokens.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/oauth1/oauth1_pending_request_tokens.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/oauth1/oauth1_pending_request_tokens.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/oauth1/oauth1_pending_request_tokens.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    __reifyWaitForDeps__();\n    //\n    // _pendingRequestTokens are request tokens that have been received\n    // but not yet fully authorized (processed).\n    //\n    // During the oauth1 authorization process, the Meteor App opens\n    // a pop-up, requests a request token from the oauth1 service, and\n    // redirects the browser to the oauth1 service for the user\n    // to grant authorization.  The user is then returned to the\n    // Meteor Apps' callback url and the request token is verified.\n    //\n    // When Meteor Apps run on multiple servers, it's possible that\n    // 2 different servers may be used to generate the request token\n    // and to verify it in the callback once the user has authorized.\n    //\n    // For this reason, the _pendingRequestTokens are stored in the database\n    // so they can be shared across Meteor App servers.\n    //\n    // XXX This code is fairly similar to oauth/pending_credentials.js --\n    // maybe we can combine them somehow.\n\n    // Collection containing pending request tokens\n    // Has key, requestToken, requestTokenSecret, and createdAt fields.\n    OAuth._pendingRequestTokens = new Mongo.Collection(\"meteor_oauth_pendingRequestTokens\", {\n      _preventAutopublish: true\n    });\n    await OAuth._pendingRequestTokens.createIndexAsync('key', {\n      unique: true\n    });\n    await OAuth._pendingRequestTokens.createIndexAsync('createdAt');\n\n    // Periodically clear old entries that never got completed\n    const _cleanStaleResults = async () => {\n      // Remove request tokens older than 5 minute\n      const timeCutoff = new Date();\n      timeCutoff.setMinutes(timeCutoff.getMinutes() - 5);\n      await OAuth._pendingRequestTokens.removeAsync({\n        createdAt: {\n          $lt: timeCutoff\n        }\n      });\n    };\n    const _cleanupHandle = Meteor.setInterval(_cleanStaleResults, 60 * 1000);\n\n    // Stores the key and request token in the _pendingRequestTokens collection.\n    // Will throw an exception if `key` is not a string.\n    //\n    // @param key {string}\n    // @param requestToken {string}\n    // @param requestTokenSecret {string}\n    //\n    OAuth._storeRequestToken = async (key, requestToken, requestTokenSecret) => {\n      check(key, String);\n\n      // We do an upsert here instead of an insert in case the user happens\n      // to somehow send the same `state` parameter twice during an OAuth\n      // login; we don't want a duplicate key error.\n      await OAuth._pendingRequestTokens.upsertAsync({\n        key\n      }, {\n        key,\n        requestToken: OAuth.sealSecret(requestToken),\n        requestTokenSecret: OAuth.sealSecret(requestTokenSecret),\n        createdAt: new Date()\n      });\n    };\n\n    // Retrieves and removes a request token from the _pendingRequestTokens collection\n    // Returns an object containing requestToken and requestTokenSecret properties\n    //\n    // @param key {string}\n    //\n    OAuth._retrieveRequestToken = async key => {\n      check(key, String);\n      const pendingRequestToken = await OAuth._pendingRequestTokens.findOneAsync({\n        key: key\n      });\n      if (pendingRequestToken) {\n        await OAuth._pendingRequestTokens.removeAsync({\n          _id: pendingRequestToken._id\n        });\n        return {\n          requestToken: OAuth.openSecret(pendingRequestToken.requestToken),\n          requestTokenSecret: OAuth.openSecret(pendingRequestToken.requestTokenSecret)\n        };\n      } else {\n        return undefined;\n      }\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: true\n});","map":{"version":3,"names":["__reifyWaitForDeps__","OAuth","_pendingRequestTokens","Mongo","Collection","_preventAutopublish","createIndexAsync","unique","_cleanStaleResults","timeCutoff","Date","setMinutes","getMinutes","removeAsync","createdAt","$lt","_cleanupHandle","Meteor","setInterval","_storeRequestToken","key","requestToken","requestTokenSecret","check","String","upsertAsync","sealSecret","_retrieveRequestToken","pendingRequestToken","findOneAsync","_id","openSecret","undefined","__reify_async_result__","_reifyError","self","async"],"sources":["packages/oauth1/oauth1_pending_request_tokens.js"],"sourcesContent":["//\n// _pendingRequestTokens are request tokens that have been received\n// but not yet fully authorized (processed).\n//\n// During the oauth1 authorization process, the Meteor App opens\n// a pop-up, requests a request token from the oauth1 service, and\n// redirects the browser to the oauth1 service for the user\n// to grant authorization.  The user is then returned to the\n// Meteor Apps' callback url and the request token is verified.\n//\n// When Meteor Apps run on multiple servers, it's possible that\n// 2 different servers may be used to generate the request token\n// and to verify it in the callback once the user has authorized.\n//\n// For this reason, the _pendingRequestTokens are stored in the database\n// so they can be shared across Meteor App servers.\n//\n// XXX This code is fairly similar to oauth/pending_credentials.js --\n// maybe we can combine them somehow.\n\n// Collection containing pending request tokens\n// Has key, requestToken, requestTokenSecret, and createdAt fields.\nOAuth._pendingRequestTokens = new Mongo.Collection(\n  \"meteor_oauth_pendingRequestTokens\", {\n    _preventAutopublish: true\n  });\n\nawait OAuth._pendingRequestTokens.createIndexAsync('key', { unique: true });\nawait OAuth._pendingRequestTokens.createIndexAsync('createdAt');\n\n\n\n// Periodically clear old entries that never got completed\nconst _cleanStaleResults = async () => {\n  // Remove request tokens older than 5 minute\n  const timeCutoff = new Date();\n  timeCutoff.setMinutes(timeCutoff.getMinutes() - 5);\n  await OAuth._pendingRequestTokens.removeAsync({ createdAt: { $lt: timeCutoff } });\n};\nconst _cleanupHandle = Meteor.setInterval(_cleanStaleResults, 60 * 1000);\n\n\n// Stores the key and request token in the _pendingRequestTokens collection.\n// Will throw an exception if `key` is not a string.\n//\n// @param key {string}\n// @param requestToken {string}\n// @param requestTokenSecret {string}\n//\nOAuth._storeRequestToken = async (key, requestToken, requestTokenSecret) => {\n  check(key, String);\n\n  // We do an upsert here instead of an insert in case the user happens\n  // to somehow send the same `state` parameter twice during an OAuth\n  // login; we don't want a duplicate key error.\n  await OAuth._pendingRequestTokens.upsertAsync({\n    key,\n  }, {\n    key,\n    requestToken: OAuth.sealSecret(requestToken),\n    requestTokenSecret: OAuth.sealSecret(requestTokenSecret),\n    createdAt: new Date()\n  });\n};\n\n\n// Retrieves and removes a request token from the _pendingRequestTokens collection\n// Returns an object containing requestToken and requestTokenSecret properties\n//\n// @param key {string}\n//\nOAuth._retrieveRequestToken = async key => {\n  check(key, String);\n\n  const pendingRequestToken =  await OAuth._pendingRequestTokens.findOneAsync({ key: key });\n  if (pendingRequestToken) {\n    await OAuth._pendingRequestTokens.removeAsync({ _id: pendingRequestToken._id });\n    return {\n      requestToken: OAuth.openSecret(pendingRequestToken.requestToken),\n      requestTokenSecret: OAuth.openSecret(\n        pendingRequestToken.requestTokenSecret)\n    };\n  } else {\n    return undefined;\n  }\n};\n"],"mappings":";;;IAAAA,oBAAoB,CAAC,CAAC;IAAtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACAC,KAAK,CAACC,qBAAqB,GAAG,IAAIC,KAAK,CAACC,UAAU,CAChD,mCAAmC,EAAE;MACnCC,mBAAmB,EAAE;IACvB,CAAC,CAAC;IAEJ,MAAMJ,KAAK,CAACC,qBAAqB,CAACI,gBAAgB,CAAC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC,CAAC;IAC3E,MAAMN,KAAK,CAACC,qBAAqB,CAACI,gBAAgB,CAAC,WAAW,CAAC;;IAI/D;IACA,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC;MACA,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAAC,CAAC;MAC7BD,UAAU,CAACE,UAAU,CAACF,UAAU,CAACG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;MAClD,MAAMX,KAAK,CAACC,qBAAqB,CAACW,WAAW,CAAC;QAAEC,SAAS,EAAE;UAAEC,GAAG,EAAEN;QAAW;MAAE,CAAC,CAAC;IACnF,CAAC;IACD,MAAMO,cAAc,GAAGC,MAAM,CAACC,WAAW,CAACV,kBAAkB,EAAE,EAAE,GAAG,IAAI,CAAC;;IAGxE;IACA;IACA;IACA;IACA;IACA;IACA;IACAP,KAAK,CAACkB,kBAAkB,GAAG,OAAOC,GAAG,EAAEC,YAAY,EAAEC,kBAAkB,KAAK;MAC1EC,KAAK,CAACH,GAAG,EAAEI,MAAM,CAAC;;MAElB;MACA;MACA;MACA,MAAMvB,KAAK,CAACC,qBAAqB,CAACuB,WAAW,CAAC;QAC5CL;MACF,CAAC,EAAE;QACDA,GAAG;QACHC,YAAY,EAAEpB,KAAK,CAACyB,UAAU,CAACL,YAAY,CAAC;QAC5CC,kBAAkB,EAAErB,KAAK,CAACyB,UAAU,CAACJ,kBAAkB,CAAC;QACxDR,SAAS,EAAE,IAAIJ,IAAI,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC;;IAGD;IACA;IACA;IACA;IACA;IACAT,KAAK,CAAC0B,qBAAqB,GAAG,MAAMP,GAAG,IAAI;MACzCG,KAAK,CAACH,GAAG,EAAEI,MAAM,CAAC;MAElB,MAAMI,mBAAmB,GAAI,MAAM3B,KAAK,CAACC,qBAAqB,CAAC2B,YAAY,CAAC;QAAET,GAAG,EAAEA;MAAI,CAAC,CAAC;MACzF,IAAIQ,mBAAmB,EAAE;QACvB,MAAM3B,KAAK,CAACC,qBAAqB,CAACW,WAAW,CAAC;UAAEiB,GAAG,EAAEF,mBAAmB,CAACE;QAAI,CAAC,CAAC;QAC/E,OAAO;UACLT,YAAY,EAAEpB,KAAK,CAAC8B,UAAU,CAACH,mBAAmB,CAACP,YAAY,CAAC;UAChEC,kBAAkB,EAAErB,KAAK,CAAC8B,UAAU,CAClCH,mBAAmB,CAACN,kBAAkB;QAC1C,CAAC;MACH,CAAC,MAAM;QACL,OAAOU,SAAS;MAClB;IACF,CAAC;IAACC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"3108d10135810630f049d8a01a8aa2edb223cebc"}
