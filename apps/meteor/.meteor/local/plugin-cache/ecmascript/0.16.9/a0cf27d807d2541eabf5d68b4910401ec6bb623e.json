{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/spotlight.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/spotlight.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/spotlight.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/spotlight.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/spotlight.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      Spotlight: () => Spotlight\n    });\n    let Team;\n    module.link(\"@rocket.chat/core-services\", {\n      Team(v) {\n        Team = v;\n      }\n    }, 0);\n    let Users, SubscriptionsRaw, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      },\n      Subscriptions(v) {\n        SubscriptionsRaw = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 1);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 2);\n    let canAccessRoomAsync, roomAccessAttributes;\n    module.link(\"../../app/authorization/server\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      },\n      roomAccessAttributes(v) {\n        roomAccessAttributes = v;\n      }\n    }, 3);\n    let hasPermissionAsync, hasAllPermissionAsync;\n    module.link(\"../../app/authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      },\n      hasAllPermissionAsync(v) {\n        hasAllPermissionAsync = v;\n      }\n    }, 4);\n    let settings;\n    module.link(\"../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 5);\n    let trim;\n    module.link(\"../../lib/utils/stringUtils\", {\n      trim(v) {\n        trim = v;\n      }\n    }, 6);\n    let readSecondaryPreferred;\n    module.link(\"../database/readSecondaryPreferred\", {\n      readSecondaryPreferred(v) {\n        readSecondaryPreferred = v;\n      }\n    }, 7);\n    let roomCoordinator;\n    module.link(\"./rooms/roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class Spotlight {\n      async fetchRooms(userId, rooms) {\n        if (!settings.get('Store_Last_Message') || (await hasPermissionAsync(userId, 'preview-c-room'))) {\n          return rooms;\n        }\n        return rooms.map(room => {\n          delete room.lastMessage;\n          return room;\n        });\n      }\n      async searchRooms(_ref) {\n        let {\n          userId,\n          text,\n          includeFederatedRooms = false\n        } = _ref;\n        const regex = new RegExp(trim(escapeRegExp(text)), 'i');\n        const roomOptions = {\n          limit: 5,\n          projection: {\n            t: 1,\n            name: 1,\n            fname: 1,\n            teamMain: 1,\n            joinCodeRequired: 1,\n            lastMessage: 1,\n            federated: true,\n            prid: 1\n          },\n          sort: {\n            name: 1\n          }\n        };\n        if (userId == null) {\n          if (!settings.get('Accounts_AllowAnonymousRead')) {\n            return [];\n          }\n          return this.fetchRooms(userId, await Rooms.findByNameAndTypeNotDefault(regex, 'c', roomOptions, includeFederatedRooms).toArray());\n        }\n        if (!(await hasAllPermissionAsync(userId, ['view-outside-room', 'view-c-room']))) {\n          return [];\n        }\n        const searchableRoomTypeIds = roomCoordinator.searchableRoomTypes();\n        const roomIds = (await SubscriptionsRaw.findByUserIdAndTypes(userId, searchableRoomTypeIds, {\n          projection: {\n            rid: 1\n          }\n        }).toArray()).map(s => s.rid);\n        const exactRoom = await Rooms.findOneByNameAndType(text, searchableRoomTypeIds, roomOptions, includeFederatedRooms);\n        if (exactRoom) {\n          roomIds.push(exactRoom.rid);\n        }\n        return this.fetchRooms(userId, await Rooms.findByNameOrFNameAndTypesNotInIds(regex, searchableRoomTypeIds, roomIds, roomOptions, includeFederatedRooms).toArray());\n      }\n      mapOutsiders(u) {\n        u.outside = true;\n        return u;\n      }\n      processLimitAndUsernames(options, usernames, users) {\n        // Reduce the results from the limit for the next query\n        options.limit -= users.length;\n\n        // If the limit was reached, return\n        if (options.limit <= 0) {\n          return users;\n        }\n\n        // Prevent the next query to get the same users\n        usernames.push(...users.map(u => u.username).filter(u => !usernames.includes(u)));\n      }\n      async _searchInsiderUsers(_ref2) {\n        let {\n          rid,\n          text,\n          usernames,\n          options,\n          users,\n          insiderExtraQuery,\n          match = {\n            startsWith: false,\n            endsWith: false\n          }\n        } = _ref2;\n        // Get insiders first\n        if (rid) {\n          const searchFields = settings.get('Accounts_SearchFields').trim().split(',');\n          users.push(...(await Users.findByActiveUsersExcept(text, usernames, options, searchFields, insiderExtraQuery, match).toArray()));\n\n          // If the limit was reached, return\n          if (this.processLimitAndUsernames(options, usernames, users)) {\n            return users;\n          }\n        }\n      }\n      async _searchConnectedUsers(userId, _ref3, roomType) {\n        let {\n          text,\n          usernames,\n          options,\n          users,\n          match = {\n            startsWith: false,\n            endsWith: false\n          }\n        } = _ref3;\n        const searchFields = settings.get('Accounts_SearchFields').trim().split(',');\n        users.push(...(await SubscriptionsRaw.findConnectedUsersExcept(userId, text, usernames, searchFields, {}, options.limit || 5, roomType, match, {\n          readPreference: options.readPreference\n        })).map(this.mapOutsiders));\n\n        // If the limit was reached, return\n        if (this.processLimitAndUsernames(options, usernames, users)) {\n          return users;\n        }\n      }\n      async _searchOutsiderUsers(_ref4) {\n        let {\n          text,\n          usernames,\n          options,\n          users,\n          canListOutsiders,\n          match = {\n            startsWith: false,\n            endsWith: false\n          }\n        } = _ref4;\n        // Then get the outsiders if allowed\n        if (canListOutsiders) {\n          const searchFields = settings.get('Accounts_SearchFields').trim().split(',');\n          users.push(...(await Users.findByActiveUsersExcept(text, usernames, options, searchFields, undefined, match).toArray()).map(this.mapOutsiders));\n\n          // If the limit was reached, return\n          if (this.processLimitAndUsernames(options, usernames, users)) {\n            return users;\n          }\n        }\n      }\n      mapTeams(teams) {\n        return teams.map(t => {\n          t.isTeam = true;\n          t.username = t.name;\n          t.status = 'online';\n          return t;\n        });\n      }\n      async _searchTeams(userId, _ref5) {\n        let {\n          text,\n          options,\n          users,\n          mentions\n        } = _ref5;\n        if (!mentions || settings.get('Troubleshoot_Disable_Teams_Mention')) {\n          return users;\n        }\n        options.limit -= users.length;\n        if (options.limit <= 0) {\n          return users;\n        }\n        const teamOptions = _objectSpread(_objectSpread({}, options), {}, {\n          projection: {\n            name: 1,\n            type: 1\n          }\n        });\n        const teams = await Team.search(userId, text, teamOptions);\n        users.push(...this.mapTeams(teams));\n        return users;\n      }\n      async searchUsers(_ref6) {\n        let {\n          userId,\n          rid,\n          text,\n          usernames,\n          mentions\n        } = _ref6;\n        const users = [];\n        const options = {\n          limit: settings.get('Number_of_users_autocomplete_suggestions'),\n          projection: {\n            username: 1,\n            nickname: 1,\n            name: 1,\n            status: 1,\n            statusText: 1,\n            avatarETag: 1\n          },\n          sort: {\n            [settings.get('UI_Use_Real_Name') ? 'name' : 'username']: 1\n          },\n          readPreference: readSecondaryPreferred(Users.col.s.db)\n        };\n        const room = await Rooms.findOneById(rid, {\n          projection: _objectSpread(_objectSpread({}, roomAccessAttributes), {}, {\n            _id: 1,\n            t: 1,\n            uids: 1\n          })\n        });\n        if (rid && !room) {\n          return users;\n        }\n        const canListOutsiders = await hasAllPermissionAsync(userId, ['view-outside-room', 'view-d-room']);\n        const canListInsiders = canListOutsiders || rid && (await canAccessRoomAsync(room, {\n          _id: userId\n        }));\n        const insiderExtraQuery = [];\n        if (rid) {\n          switch (room.t) {\n            case 'd':\n              insiderExtraQuery.push({\n                _id: {\n                  $in: room.uids.filter(id => id !== userId)\n                }\n              });\n              break;\n            case 'l':\n              insiderExtraQuery.push({\n                _id: {\n                  $in: (await SubscriptionsRaw.findByRoomId(room._id).toArray()).map(s => {\n                    var _s$u;\n                    return (_s$u = s.u) === null || _s$u === void 0 ? void 0 : _s$u._id;\n                  }).filter(id => id && id !== userId)\n                }\n              });\n              break;\n            default:\n              insiderExtraQuery.push({\n                __rooms: rid\n              });\n              break;\n          }\n        }\n        const searchParams = {\n          rid,\n          text,\n          usernames,\n          options,\n          users,\n          canListOutsiders,\n          insiderExtraQuery,\n          mentions\n        };\n\n        // Exact match for username only\n        if (rid && canListInsiders) {\n          const exactMatch = await Users.findOneByUsernameAndRoomIgnoringCase(text, rid, {\n            projection: options.projection,\n            readPreference: options.readPreference\n          });\n          if (exactMatch) {\n            users.push(exactMatch);\n            this.processLimitAndUsernames(options, usernames, users);\n          }\n        }\n        if (users.length === 0 && canListOutsiders && text) {\n          const exactMatch = await Users.findOneByUsernameIgnoringCase(text, {\n            projection: options.projection,\n            readPreference: options.readPreference\n          });\n          if (exactMatch) {\n            users.push(this.mapOutsiders(exactMatch));\n            this.processLimitAndUsernames(options, usernames, users);\n          }\n        }\n        if (canListInsiders && rid) {\n          // Search for insiders\n          if (await this._searchInsiderUsers(searchParams)) {\n            return users;\n          }\n\n          // Search for users that the requester has DMs with\n          if (await this._searchConnectedUsers(userId, searchParams, 'd')) {\n            return users;\n          }\n        }\n\n        // If the user can search outsiders, search for any user in the server\n        // Otherwise, search for users that are subscribed to the same rooms as the requester\n        if (canListOutsiders) {\n          if (await this._searchOutsiderUsers(searchParams)) {\n            return users;\n          }\n        } else if (await this._searchConnectedUsers(userId, searchParams, 'd')) {\n          return users;\n        }\n        if (await this._searchTeams(userId, searchParams)) {\n          return users;\n        }\n        return users;\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","Spotlight","Team","Users","SubscriptionsRaw","Rooms","Subscriptions","escapeRegExp","canAccessRoomAsync","roomAccessAttributes","hasPermissionAsync","hasAllPermissionAsync","settings","trim","readSecondaryPreferred","roomCoordinator","__reifyWaitForDeps__","fetchRooms","userId","rooms","get","map","room","lastMessage","searchRooms","_ref","text","includeFederatedRooms","regex","RegExp","roomOptions","limit","projection","t","name","fname","teamMain","joinCodeRequired","federated","prid","sort","findByNameAndTypeNotDefault","toArray","searchableRoomTypeIds","searchableRoomTypes","roomIds","findByUserIdAndTypes","rid","s","exactRoom","findOneByNameAndType","push","findByNameOrFNameAndTypesNotInIds","mapOutsiders","u","outside","processLimitAndUsernames","options","usernames","users","length","username","filter","includes","_searchInsiderUsers","_ref2","insiderExtraQuery","match","startsWith","endsWith","searchFields","split","findByActiveUsersExcept","_searchConnectedUsers","_ref3","roomType","findConnectedUsersExcept","readPreference","_searchOutsiderUsers","_ref4","canListOutsiders","undefined","mapTeams","teams","isTeam","status","_searchTeams","_ref5","mentions","teamOptions","type","search","searchUsers","_ref6","nickname","statusText","avatarETag","col","db","findOneById","_id","uids","canListInsiders","$in","id","findByRoomId","_s$u","__rooms","searchParams","exactMatch","findOneByUsernameAndRoomIgnoringCase","findOneByUsernameIgnoringCase","__reify_async_result__","_reifyError","self","async"],"sources":["server/lib/spotlight.js"],"sourcesContent":["import { Team } from '@rocket.chat/core-services';\nimport { Users, Subscriptions as SubscriptionsRaw, Rooms } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { canAccessRoomAsync, roomAccessAttributes } from '../../app/authorization/server';\nimport { hasPermissionAsync, hasAllPermissionAsync } from '../../app/authorization/server/functions/hasPermission';\nimport { settings } from '../../app/settings/server';\nimport { trim } from '../../lib/utils/stringUtils';\nimport { readSecondaryPreferred } from '../database/readSecondaryPreferred';\nimport { roomCoordinator } from './rooms/roomCoordinator';\n\nexport class Spotlight {\n\tasync fetchRooms(userId, rooms) {\n\t\tif (!settings.get('Store_Last_Message') || (await hasPermissionAsync(userId, 'preview-c-room'))) {\n\t\t\treturn rooms;\n\t\t}\n\n\t\treturn rooms.map((room) => {\n\t\t\tdelete room.lastMessage;\n\t\t\treturn room;\n\t\t});\n\t}\n\n\tasync searchRooms({ userId, text, includeFederatedRooms = false }) {\n\t\tconst regex = new RegExp(trim(escapeRegExp(text)), 'i');\n\n\t\tconst roomOptions = {\n\t\t\tlimit: 5,\n\t\t\tprojection: {\n\t\t\t\tt: 1,\n\t\t\t\tname: 1,\n\t\t\t\tfname: 1,\n\t\t\t\tteamMain: 1,\n\t\t\t\tjoinCodeRequired: 1,\n\t\t\t\tlastMessage: 1,\n\t\t\t\tfederated: true,\n\t\t\t\tprid: 1,\n\t\t\t},\n\t\t\tsort: {\n\t\t\t\tname: 1,\n\t\t\t},\n\t\t};\n\n\t\tif (userId == null) {\n\t\t\tif (!settings.get('Accounts_AllowAnonymousRead')) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn this.fetchRooms(userId, await Rooms.findByNameAndTypeNotDefault(regex, 'c', roomOptions, includeFederatedRooms).toArray());\n\t\t}\n\n\t\tif (!(await hasAllPermissionAsync(userId, ['view-outside-room', 'view-c-room']))) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst searchableRoomTypeIds = roomCoordinator.searchableRoomTypes();\n\n\t\tconst roomIds = (\n\t\t\tawait SubscriptionsRaw.findByUserIdAndTypes(userId, searchableRoomTypeIds, {\n\t\t\t\tprojection: { rid: 1 },\n\t\t\t}).toArray()\n\t\t).map((s) => s.rid);\n\t\tconst exactRoom = await Rooms.findOneByNameAndType(text, searchableRoomTypeIds, roomOptions, includeFederatedRooms);\n\t\tif (exactRoom) {\n\t\t\troomIds.push(exactRoom.rid);\n\t\t}\n\n\t\treturn this.fetchRooms(\n\t\t\tuserId,\n\t\t\tawait Rooms.findByNameOrFNameAndTypesNotInIds(regex, searchableRoomTypeIds, roomIds, roomOptions, includeFederatedRooms).toArray(),\n\t\t);\n\t}\n\n\tmapOutsiders(u) {\n\t\tu.outside = true;\n\t\treturn u;\n\t}\n\n\tprocessLimitAndUsernames(options, usernames, users) {\n\t\t// Reduce the results from the limit for the next query\n\t\toptions.limit -= users.length;\n\n\t\t// If the limit was reached, return\n\t\tif (options.limit <= 0) {\n\t\t\treturn users;\n\t\t}\n\n\t\t// Prevent the next query to get the same users\n\t\tusernames.push(...users.map((u) => u.username).filter((u) => !usernames.includes(u)));\n\t}\n\n\tasync _searchInsiderUsers({ rid, text, usernames, options, users, insiderExtraQuery, match = { startsWith: false, endsWith: false } }) {\n\t\t// Get insiders first\n\t\tif (rid) {\n\t\t\tconst searchFields = settings.get('Accounts_SearchFields').trim().split(',');\n\n\t\t\tusers.push(...(await Users.findByActiveUsersExcept(text, usernames, options, searchFields, insiderExtraQuery, match).toArray()));\n\n\t\t\t// If the limit was reached, return\n\t\t\tif (this.processLimitAndUsernames(options, usernames, users)) {\n\t\t\t\treturn users;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync _searchConnectedUsers(userId, { text, usernames, options, users, match = { startsWith: false, endsWith: false } }, roomType) {\n\t\tconst searchFields = settings.get('Accounts_SearchFields').trim().split(',');\n\n\t\tusers.push(\n\t\t\t...(\n\t\t\t\tawait SubscriptionsRaw.findConnectedUsersExcept(userId, text, usernames, searchFields, {}, options.limit || 5, roomType, match, {\n\t\t\t\t\treadPreference: options.readPreference,\n\t\t\t\t})\n\t\t\t).map(this.mapOutsiders),\n\t\t);\n\n\t\t// If the limit was reached, return\n\t\tif (this.processLimitAndUsernames(options, usernames, users)) {\n\t\t\treturn users;\n\t\t}\n\t}\n\n\tasync _searchOutsiderUsers({ text, usernames, options, users, canListOutsiders, match = { startsWith: false, endsWith: false } }) {\n\t\t// Then get the outsiders if allowed\n\t\tif (canListOutsiders) {\n\t\t\tconst searchFields = settings.get('Accounts_SearchFields').trim().split(',');\n\t\t\tusers.push(\n\t\t\t\t...(await Users.findByActiveUsersExcept(text, usernames, options, searchFields, undefined, match).toArray()).map(this.mapOutsiders),\n\t\t\t);\n\n\t\t\t// If the limit was reached, return\n\t\t\tif (this.processLimitAndUsernames(options, usernames, users)) {\n\t\t\t\treturn users;\n\t\t\t}\n\t\t}\n\t}\n\n\tmapTeams(teams) {\n\t\treturn teams.map((t) => {\n\t\t\tt.isTeam = true;\n\t\t\tt.username = t.name;\n\t\t\tt.status = 'online';\n\t\t\treturn t;\n\t\t});\n\t}\n\n\tasync _searchTeams(userId, { text, options, users, mentions }) {\n\t\tif (!mentions || settings.get('Troubleshoot_Disable_Teams_Mention')) {\n\t\t\treturn users;\n\t\t}\n\n\t\toptions.limit -= users.length;\n\n\t\tif (options.limit <= 0) {\n\t\t\treturn users;\n\t\t}\n\n\t\tconst teamOptions = { ...options, projection: { name: 1, type: 1 } };\n\t\tconst teams = await Team.search(userId, text, teamOptions);\n\t\tusers.push(...this.mapTeams(teams));\n\n\t\treturn users;\n\t}\n\n\tasync searchUsers({ userId, rid, text, usernames, mentions }) {\n\t\tconst users = [];\n\n\t\tconst options = {\n\t\t\tlimit: settings.get('Number_of_users_autocomplete_suggestions'),\n\t\t\tprojection: {\n\t\t\t\tusername: 1,\n\t\t\t\tnickname: 1,\n\t\t\t\tname: 1,\n\t\t\t\tstatus: 1,\n\t\t\t\tstatusText: 1,\n\t\t\t\tavatarETag: 1,\n\t\t\t},\n\t\t\tsort: {\n\t\t\t\t[settings.get('UI_Use_Real_Name') ? 'name' : 'username']: 1,\n\t\t\t},\n\t\t\treadPreference: readSecondaryPreferred(Users.col.s.db),\n\t\t};\n\n\t\tconst room = await Rooms.findOneById(rid, { projection: { ...roomAccessAttributes, _id: 1, t: 1, uids: 1 } });\n\n\t\tif (rid && !room) {\n\t\t\treturn users;\n\t\t}\n\n\t\tconst canListOutsiders = await hasAllPermissionAsync(userId, ['view-outside-room', 'view-d-room']);\n\t\tconst canListInsiders = canListOutsiders || (rid && (await canAccessRoomAsync(room, { _id: userId })));\n\n\t\tconst insiderExtraQuery = [];\n\n\t\tif (rid) {\n\t\t\tswitch (room.t) {\n\t\t\t\tcase 'd':\n\t\t\t\t\tinsiderExtraQuery.push({\n\t\t\t\t\t\t_id: { $in: room.uids.filter((id) => id !== userId) },\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'l':\n\t\t\t\t\tinsiderExtraQuery.push({\n\t\t\t\t\t\t_id: {\n\t\t\t\t\t\t\t$in: (await SubscriptionsRaw.findByRoomId(room._id).toArray()).map((s) => s.u?._id).filter((id) => id && id !== userId),\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tinsiderExtraQuery.push({\n\t\t\t\t\t\t__rooms: rid,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst searchParams = {\n\t\t\trid,\n\t\t\ttext,\n\t\t\tusernames,\n\t\t\toptions,\n\t\t\tusers,\n\t\t\tcanListOutsiders,\n\t\t\tinsiderExtraQuery,\n\t\t\tmentions,\n\t\t};\n\n\t\t// Exact match for username only\n\t\tif (rid && canListInsiders) {\n\t\t\tconst exactMatch = await Users.findOneByUsernameAndRoomIgnoringCase(text, rid, {\n\t\t\t\tprojection: options.projection,\n\t\t\t\treadPreference: options.readPreference,\n\t\t\t});\n\t\t\tif (exactMatch) {\n\t\t\t\tusers.push(exactMatch);\n\t\t\t\tthis.processLimitAndUsernames(options, usernames, users);\n\t\t\t}\n\t\t}\n\n\t\tif (users.length === 0 && canListOutsiders && text) {\n\t\t\tconst exactMatch = await Users.findOneByUsernameIgnoringCase(text, {\n\t\t\t\tprojection: options.projection,\n\t\t\t\treadPreference: options.readPreference,\n\t\t\t});\n\t\t\tif (exactMatch) {\n\t\t\t\tusers.push(this.mapOutsiders(exactMatch));\n\t\t\t\tthis.processLimitAndUsernames(options, usernames, users);\n\t\t\t}\n\t\t}\n\n\t\tif (canListInsiders && rid) {\n\t\t\t// Search for insiders\n\t\t\tif (await this._searchInsiderUsers(searchParams)) {\n\t\t\t\treturn users;\n\t\t\t}\n\n\t\t\t// Search for users that the requester has DMs with\n\t\t\tif (await this._searchConnectedUsers(userId, searchParams, 'd')) {\n\t\t\t\treturn users;\n\t\t\t}\n\t\t}\n\n\t\t// If the user can search outsiders, search for any user in the server\n\t\t// Otherwise, search for users that are subscribed to the same rooms as the requester\n\t\tif (canListOutsiders) {\n\t\t\tif (await this._searchOutsiderUsers(searchParams)) {\n\t\t\t\treturn users;\n\t\t\t}\n\t\t} else if (await this._searchConnectedUsers(userId, searchParams, 'd')) {\n\t\t\treturn users;\n\t\t}\n\n\t\tif (await this._searchTeams(userId, searchParams)) {\n\t\t\treturn users;\n\t\t}\n\n\t\treturn users;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a0cf27d807d2541eabf5d68b4910401ec6bb623e"}
