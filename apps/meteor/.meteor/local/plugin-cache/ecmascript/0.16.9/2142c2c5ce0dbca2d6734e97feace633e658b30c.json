{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/compileVersion/plugin/compile-version.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"packages/compileVersion/plugin/compile-version.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/compileVersion/plugin/compile-version.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/compileVersion/plugin/compile-version.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/compileVersion/plugin/compile-version.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    let exec;\n    module.link(\"child_process\", {\n      exec(v) {\n        exec = v;\n      }\n    }, 0);\n    let os;\n    module.link(\"os\", {\n      default(v) {\n        os = v;\n      }\n    }, 1);\n    let util;\n    module.link(\"util\", {\n      default(v) {\n        util = v;\n      }\n    }, 2);\n    let path;\n    module.link(\"path\", {\n      default(v) {\n        path = v;\n      }\n    }, 3);\n    let fs;\n    module.link(\"fs\", {\n      default(v) {\n        fs = v;\n      }\n    }, 4);\n    let https;\n    module.link(\"https\", {\n      default(v) {\n        https = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const execAsync = util.promisify(exec);\n    class VersionCompiler {\n      async processFilesForTarget(files) {\n        const processVersionFile = async function (file) {\n          const data = await new Promise((resolve, reject) => {\n            var _JSON$parse;\n            const currentVersion = ((_JSON$parse = JSON.parse(fs.readFileSync(path.resolve(process.cwd(), './package.json'), {\n              encoding: 'utf8'\n            }))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.version) || '';\n            const type = currentVersion.includes('-rc.') ? 'candidate' : currentVersion.includes('-develop') ? 'develop' : 'stable';\n            const url = \"https://releases.rocket.chat/v2/server/supportedVersions?includeDraftType=\".concat(type, \"&includeDraftTag=\").concat(currentVersion);\n            function handleError(err) {\n              console.error(err);\n              // TODO remove this when we are ready to fail\n              if (process.env.NODE_ENV !== 'development') {\n                reject(err);\n                return;\n              }\n              resolve({});\n            }\n            https.get(url, function (response) {\n              let data = '';\n              response.on('data', function (chunk) {\n                data += chunk;\n              });\n              response.on('end', async function () {\n                const supportedVersions = JSON.parse(data);\n                if (!(supportedVersions !== null && supportedVersions !== void 0 && supportedVersions.signed)) {\n                  return handleError(new Error(\"Invalid supportedVersions result:\\n  URL: \".concat(url, \" \\n  RESULT: \").concat(data)));\n                }\n\n                // check if timestamp is inside 1 hour within build\n                if (Math.abs(new Date().getTime() - new Date(supportedVersions.timestamp).getTime()) > 1000 * 60 * 60) {\n                  return handleError(new Error(\"Invalid supportedVersions timestamp:\\n  URL: \".concat(url, \" \\n  RESULT: \").concat(data)));\n                }\n                var _iteratorAbruptCompletion2 = false;\n                var _didIteratorError2 = false;\n                var _iteratorError2;\n                try {\n                  for (var _iterator2 = _asyncIterator(supportedVersions.versions), _step2; _iteratorAbruptCompletion2 = !(_step2 = await _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n                    const version = _step2.value;\n                    {\n                      // check if expiration is after the first rocket.chat release\n                      if (new Date(version.expiration) < new Date('2019-04-01T00:00:00.000Z')) {\n                        return handleError(new Error(\"Invalid supportedVersions expiration:\\n  URL: \".concat(url, \" \\n  RESULT: \").concat(data)));\n                      }\n                    }\n                  }\n                } catch (err) {\n                  _didIteratorError2 = true;\n                  _iteratorError2 = err;\n                } finally {\n                  try {\n                    if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n                      await _iterator2.return();\n                    }\n                  } finally {\n                    if (_didIteratorError2) {\n                      throw _iteratorError2;\n                    }\n                  }\n                }\n                resolve(supportedVersions);\n              });\n              response.on('error', function (err) {\n                handleError(err);\n              });\n            }).end();\n          });\n          file.addJavaScript({\n            data: \"exports.supportedVersions = \".concat(JSON.stringify(data)),\n            path: \"\".concat(file.getPathInPackage(), \".js\")\n          });\n        };\n        const processFile = async function (file) {\n          var _JSON$parse2, _JSON$parse2$rocketch;\n          let output = JSON.parse(file.getContentsAsString());\n          output.build = {\n            date: new Date().toISOString(),\n            nodeVersion: process.version,\n            arch: process.arch,\n            platform: process.platform,\n            osRelease: os.release(),\n            totalMemory: os.totalmem(),\n            freeMemory: os.freemem(),\n            cpus: os.cpus().length\n          };\n          output.marketplaceApiVersion = require('@rocket.chat/apps-engine/package.json').version.replace(/^[^0-9]/g, '');\n          const minimumClientVersions = ((_JSON$parse2 = JSON.parse(fs.readFileSync(path.resolve(process.cwd(), './package.json'), {\n            encoding: 'utf8'\n          }))) === null || _JSON$parse2 === void 0 ? void 0 : (_JSON$parse2$rocketch = _JSON$parse2.rocketchat) === null || _JSON$parse2$rocketch === void 0 ? void 0 : _JSON$parse2$rocketch.minimumClientVersions) || {};\n          try {\n            const result = await execAsync(\"git log --pretty=format:'%H%n%ad%n%an%n%s' -n 1\");\n            const data = result.stdout.split('\\n');\n            output.commit = {\n              hash: data.shift(),\n              date: data.shift(),\n              author: data.shift(),\n              subject: data.join('\\n')\n            };\n          } catch (e) {\n            if (process.env.NODE_ENV !== 'development') {\n              throw e;\n            }\n            // no git\n          }\n          try {\n            const tags = await execAsync('git describe --abbrev=0 --tags');\n            if (output.commit) {\n              output.commit.tag = tags.stdout.replace('\\n', '');\n            }\n          } catch (e) {\n            // no tags\n          }\n          try {\n            const branch = await execAsync('git rev-parse --abbrev-ref HEAD');\n            if (output.commit) {\n              output.commit.branch = branch.stdout.replace('\\n', '');\n            }\n          } catch (e) {\n            if (process.env.NODE_ENV !== 'development') {\n              throw e;\n            }\n\n            // no branch\n          }\n          file.addJavaScript({\n            data: \"exports.Info = \".concat(JSON.stringify(output, null, 4), \";\\n\\t\\t\\t\\texports.minimumClientVersions = \").concat(JSON.stringify(minimumClientVersions, null, 4), \";\"),\n            path: \"\".concat(file.getPathInPackage(), \".js\")\n          });\n        };\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(files), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const file = _step.value;\n            {\n              switch (true) {\n                case file.getDisplayPath().endsWith('rocketchat.info'):\n                  {\n                    await processFile(file);\n                    break;\n                  }\n                case file.getDisplayPath().endsWith('rocketchat-supported-versions.info'):\n                  {\n                    if (process.env.NODE_ENV === 'development') {\n                      file.addJavaScript({\n                        data: \"exports.supportedVersions = {}\",\n                        path: \"\".concat(file.getPathInPackage(), \".js\")\n                      });\n                      break;\n                    }\n                    await processVersionFile(file);\n                    break;\n                  }\n                default:\n                  {\n                    throw new Error(\"Unexpected file \".concat(file.getDisplayPath()));\n                  }\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    }\n    Plugin.registerCompiler({\n      extensions: ['info']\n    }, function () {\n      return new VersionCompiler();\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","exec","os","util","path","fs","https","__reifyWaitForDeps__","execAsync","promisify","VersionCompiler","processFilesForTarget","files","processVersionFile","file","data","Promise","resolve","reject","_JSON$parse","currentVersion","JSON","parse","readFileSync","process","cwd","encoding","version","type","includes","url","concat","handleError","err","console","error","env","NODE_ENV","get","response","on","chunk","supportedVersions","signed","Error","Math","abs","Date","getTime","timestamp","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","versions","_step2","next","done","value","expiration","return","end","addJavaScript","stringify","getPathInPackage","processFile","_JSON$parse2","_JSON$parse2$rocketch","output","getContentsAsString","build","date","toISOString","nodeVersion","arch","platform","osRelease","release","totalMemory","totalmem","freeMemory","freemem","cpus","length","marketplaceApiVersion","require","replace","minimumClientVersions","rocketchat","result","stdout","split","commit","hash","shift","author","subject","join","e","tags","tag","branch","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","getDisplayPath","endsWith","Plugin","registerCompiler","extensions","__reify_async_result__","_reifyError","self","async"],"sources":["packages/compileVersion/plugin/compile-version.js"],"sourcesContent":["import { exec } from 'child_process';\nimport os from 'os';\nimport util from 'util';\nimport path from 'path';\nimport fs from 'fs';\nimport https from 'https';\n\nconst execAsync = util.promisify(exec);\n\nclass VersionCompiler {\n\tasync processFilesForTarget(files) {\n\t\tconst processVersionFile = async function (file) {\n\t\t\tconst data = await new Promise((resolve, reject) => {\n\t\t\t\tconst currentVersion =\n\t\t\t\t\tJSON.parse(fs.readFileSync(path.resolve(process.cwd(), './package.json'), { encoding: 'utf8' }))?.version || '';\n\n\t\t\t\tconst type = currentVersion.includes('-rc.') ? 'candidate' : currentVersion.includes('-develop') ? 'develop' : 'stable';\n\n\t\t\t\tconst url = `https://releases.rocket.chat/v2/server/supportedVersions?includeDraftType=${type}&includeDraftTag=${currentVersion}`;\n\n\t\t\t\tfunction handleError(err) {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t// TODO remove this when we are ready to fail\n\t\t\t\t\tif (process.env.NODE_ENV !== 'development') {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tresolve({});\n\t\t\t\t}\n\n\t\t\t\thttps\n\t\t\t\t\t.get(url, function (response) {\n\t\t\t\t\t\tlet data = '';\n\t\t\t\t\t\tresponse.on('data', function (chunk) {\n\t\t\t\t\t\t\tdata += chunk;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresponse.on('end', async function () {\n\t\t\t\t\t\t\tconst supportedVersions = JSON.parse(data);\n\t\t\t\t\t\t\tif (!supportedVersions?.signed) {\n\t\t\t\t\t\t\t\treturn handleError(new Error(`Invalid supportedVersions result:\\n  URL: ${url} \\n  RESULT: ${data}`));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// check if timestamp is inside 1 hour within build\n\t\t\t\t\t\t\tif (Math.abs(new Date().getTime() - new Date(supportedVersions.timestamp).getTime()) > 1000 * 60 * 60) {\n\t\t\t\t\t\t\t\treturn handleError(new Error(`Invalid supportedVersions timestamp:\\n  URL: ${url} \\n  RESULT: ${data}`));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfor await (const version of supportedVersions.versions) {\n\t\t\t\t\t\t\t\t// check if expiration is after the first rocket.chat release\n\t\t\t\t\t\t\t\tif (new Date(version.expiration) < new Date('2019-04-01T00:00:00.000Z')) {\n\t\t\t\t\t\t\t\t\treturn handleError(new Error(`Invalid supportedVersions expiration:\\n  URL: ${url} \\n  RESULT: ${data}`));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresolve(supportedVersions);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresponse.on('error', function (err) {\n\t\t\t\t\t\t\thandleError(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.end();\n\t\t\t});\n\n\t\t\tfile.addJavaScript({\n\t\t\t\tdata: `exports.supportedVersions = ${JSON.stringify(data)}`,\n\t\t\t\tpath: `${file.getPathInPackage()}.js`,\n\t\t\t});\n\t\t};\n\n\t\tconst processFile = async function (file) {\n\t\t\tlet output = JSON.parse(file.getContentsAsString());\n\t\t\toutput.build = {\n\t\t\t\tdate: new Date().toISOString(),\n\t\t\t\tnodeVersion: process.version,\n\t\t\t\tarch: process.arch,\n\t\t\t\tplatform: process.platform,\n\t\t\t\tosRelease: os.release(),\n\t\t\t\ttotalMemory: os.totalmem(),\n\t\t\t\tfreeMemory: os.freemem(),\n\t\t\t\tcpus: os.cpus().length,\n\t\t\t};\n\n\t\t\toutput.marketplaceApiVersion = require('@rocket.chat/apps-engine/package.json').version.replace(/^[^0-9]/g, '');\n\t\t\tconst minimumClientVersions =\n\t\t\t\tJSON.parse(fs.readFileSync(path.resolve(process.cwd(), './package.json'), { encoding: 'utf8' }))?.rocketchat\n\t\t\t\t\t?.minimumClientVersions || {};\n\t\t\ttry {\n\t\t\t\tconst result = await execAsync(\"git log --pretty=format:'%H%n%ad%n%an%n%s' -n 1\");\n\t\t\t\tconst data = result.stdout.split('\\n');\n\t\t\t\toutput.commit = {\n\t\t\t\t\thash: data.shift(),\n\t\t\t\t\tdate: data.shift(),\n\t\t\t\t\tauthor: data.shift(),\n\t\t\t\t\tsubject: data.join('\\n'),\n\t\t\t\t};\n\t\t\t} catch (e) {\n\t\t\t\tif (process.env.NODE_ENV !== 'development') {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t\t// no git\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst tags = await execAsync('git describe --abbrev=0 --tags');\n\t\t\t\tif (output.commit) {\n\t\t\t\t\toutput.commit.tag = tags.stdout.replace('\\n', '');\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// no tags\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst branch = await execAsync('git rev-parse --abbrev-ref HEAD');\n\t\t\t\tif (output.commit) {\n\t\t\t\t\toutput.commit.branch = branch.stdout.replace('\\n', '');\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tif (process.env.NODE_ENV !== 'development') {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// no branch\n\t\t\t}\n\n\t\t\tfile.addJavaScript({\n\t\t\t\tdata: `exports.Info = ${JSON.stringify(output, null, 4)};\n\t\t\t\texports.minimumClientVersions = ${JSON.stringify(minimumClientVersions, null, 4)};`,\n\t\t\t\tpath: `${file.getPathInPackage()}.js`,\n\t\t\t});\n\t\t};\n\n\t\tfor await (const file of files) {\n\t\t\tswitch (true) {\n\t\t\t\tcase file.getDisplayPath().endsWith('rocketchat.info'): {\n\t\t\t\t\tawait processFile(file);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase file.getDisplayPath().endsWith('rocketchat-supported-versions.info'): {\n\t\t\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\t\t\tfile.addJavaScript({\n\t\t\t\t\t\t\tdata: `exports.supportedVersions = {}`,\n\t\t\t\t\t\t\tpath: `${file.getPathInPackage()}.js`,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tawait processVersionFile(file);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\tthrow new Error(`Unexpected file ${file.getDisplayPath()}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nPlugin.registerCompiler(\n\t{\n\t\textensions: ['info'],\n\t},\n\tfunction () {\n\t\treturn new VersionCompiler();\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"2142c2c5ce0dbca2d6734e97feace633e658b30c"}
