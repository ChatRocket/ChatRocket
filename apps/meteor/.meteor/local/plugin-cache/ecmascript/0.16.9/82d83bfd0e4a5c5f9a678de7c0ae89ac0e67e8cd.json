{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/federation/server/hooks/afterAddedToRoom.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/hooks/afterAddedToRoom.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/federation/server/hooks/afterAddedToRoom.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/federation/server/hooks/afterAddedToRoom.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/hooks/afterAddedToRoom.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      definition: () => definition\n    });\n    let FederationRoomEvents, Subscriptions;\n    module.link(\"@rocket.chat/models\", {\n      FederationRoomEvents(v) {\n        FederationRoomEvents = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      }\n    }, 0);\n    let getFederatedRoomData, hasExternalDomain, isLocalUser, checkRoomType, checkRoomDomainsLength;\n    module.link(\"../functions/helpers\", {\n      getFederatedRoomData(v) {\n        getFederatedRoomData = v;\n      },\n      hasExternalDomain(v) {\n        hasExternalDomain = v;\n      },\n      isLocalUser(v) {\n        isLocalUser = v;\n      },\n      checkRoomType(v) {\n        checkRoomType = v;\n      },\n      checkRoomDomainsLength(v) {\n        checkRoomDomainsLength = v;\n      }\n    }, 1);\n    let dispatchEvent;\n    module.link(\"../handler\", {\n      dispatchEvent(v) {\n        dispatchEvent = v;\n      }\n    }, 2);\n    let getFederationDomain;\n    module.link(\"../lib/getFederationDomain\", {\n      getFederationDomain(v) {\n        getFederationDomain = v;\n      }\n    }, 3);\n    let clientLogger;\n    module.link(\"../lib/logger\", {\n      clientLogger(v) {\n        clientLogger = v;\n      }\n    }, 4);\n    let normalizers;\n    module.link(\"../normalizers\", {\n      normalizers(v) {\n        normalizers = v;\n      }\n    }, 5);\n    let doAfterCreateRoom;\n    module.link(\"./afterCreateRoom\", {\n      doAfterCreateRoom(v) {\n        doAfterCreateRoom = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function afterAddedToRoom(involvedUsers, room) {\n      const {\n        user: addedUser\n      } = involvedUsers;\n      const localDomain = getFederationDomain();\n      if (!hasExternalDomain(room) && isLocalUser(addedUser, localDomain)) {\n        return involvedUsers;\n      }\n      clientLogger.debug({\n        msg: 'afterAddedToRoom',\n        involvedUsers,\n        room\n      });\n\n      // If there are not federated users on this room, ignore it\n      const {\n        users,\n        subscriptions\n      } = await getFederatedRoomData(room);\n\n      // Load the subscription\n      const subscription = await Subscriptions.findOneByRoomIdAndUserId(room._id, addedUser._id);\n      try {\n        // If the room is not on the allowed types, ignore\n        if (!checkRoomType(room)) {\n          throw new Error('Channels cannot be federated');\n        }\n\n        //\n        // Check if the room is already federated, if it is not, create the genesis event\n        //\n        if (!room.federation) {\n          //\n          // Create the room with everything\n          //\n\n          await doAfterCreateRoom(room, users, subscriptions);\n        } else {\n          //\n          // Normalize the room's federation status\n          //\n\n          // Get the users domains\n          const domainsAfterAdd = [];\n          users.forEach(user => {\n            if (user.hasOwnProperty('federation') && !domainsAfterAdd.includes(user.federation.origin)) {\n              domainsAfterAdd.push(user.federation.origin);\n            }\n          });\n\n          // Check if the number of domains is allowed\n          if (!checkRoomDomainsLength(domainsAfterAdd)) {\n            throw new Error(\"Cannot federate rooms with more than \".concat(process.env.FEDERATED_DOMAINS_LENGTH || 10, \" domains\"));\n          }\n\n          //\n          // Create the user add event\n          //\n\n          const normalizedSourceUser = await normalizers.normalizeUser(addedUser);\n          const normalizedSourceSubscription = normalizers.normalizeSubscription(subscription);\n          const addUserEvent = await FederationRoomEvents.createAddUserEvent(localDomain, room._id, normalizedSourceUser, normalizedSourceSubscription, domainsAfterAdd);\n\n          // Dispatch the events\n          dispatchEvent(domainsAfterAdd, addUserEvent);\n        }\n      } catch (err) {\n        // Remove the user subscription from the room\n        Subscriptions.remove({\n          _id: subscription._id\n        });\n        clientLogger.error({\n          msg: 'afterAddedToRoom => Could not add user:',\n          err\n        });\n      }\n      return involvedUsers;\n    }\n    const definition = {\n      hook: 'afterAddedToRoom',\n      callback: afterAddedToRoom,\n      id: 'federation-after-added-to-room'\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","definition","FederationRoomEvents","Subscriptions","link","v","getFederatedRoomData","hasExternalDomain","isLocalUser","checkRoomType","checkRoomDomainsLength","dispatchEvent","getFederationDomain","clientLogger","normalizers","doAfterCreateRoom","__reifyWaitForDeps__","afterAddedToRoom","involvedUsers","room","user","addedUser","localDomain","debug","msg","users","subscriptions","subscription","findOneByRoomIdAndUserId","_id","Error","federation","domainsAfterAdd","forEach","hasOwnProperty","includes","origin","push","concat","process","env","FEDERATED_DOMAINS_LENGTH","normalizedSourceUser","normalizeUser","normalizedSourceSubscription","normalizeSubscription","addUserEvent","createAddUserEvent","err","remove","error","hook","callback","id","__reify_async_result__","_reifyError","self","async"],"sources":["app/federation/server/hooks/afterAddedToRoom.js"],"sourcesContent":["import { FederationRoomEvents, Subscriptions } from '@rocket.chat/models';\n\nimport { getFederatedRoomData, hasExternalDomain, isLocalUser, checkRoomType, checkRoomDomainsLength } from '../functions/helpers';\nimport { dispatchEvent } from '../handler';\nimport { getFederationDomain } from '../lib/getFederationDomain';\nimport { clientLogger } from '../lib/logger';\nimport { normalizers } from '../normalizers';\nimport { doAfterCreateRoom } from './afterCreateRoom';\n\nasync function afterAddedToRoom(involvedUsers, room) {\n\tconst { user: addedUser } = involvedUsers;\n\n\tconst localDomain = getFederationDomain();\n\n\tif (!hasExternalDomain(room) && isLocalUser(addedUser, localDomain)) {\n\t\treturn involvedUsers;\n\t}\n\n\tclientLogger.debug({ msg: 'afterAddedToRoom', involvedUsers, room });\n\n\t// If there are not federated users on this room, ignore it\n\tconst { users, subscriptions } = await getFederatedRoomData(room);\n\n\t// Load the subscription\n\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(room._id, addedUser._id);\n\n\ttry {\n\t\t// If the room is not on the allowed types, ignore\n\t\tif (!checkRoomType(room)) {\n\t\t\tthrow new Error('Channels cannot be federated');\n\t\t}\n\n\t\t//\n\t\t// Check if the room is already federated, if it is not, create the genesis event\n\t\t//\n\t\tif (!room.federation) {\n\t\t\t//\n\t\t\t// Create the room with everything\n\t\t\t//\n\n\t\t\tawait doAfterCreateRoom(room, users, subscriptions);\n\t\t} else {\n\t\t\t//\n\t\t\t// Normalize the room's federation status\n\t\t\t//\n\n\t\t\t// Get the users domains\n\t\t\tconst domainsAfterAdd = [];\n\t\t\tusers.forEach((user) => {\n\t\t\t\tif (user.hasOwnProperty('federation') && !domainsAfterAdd.includes(user.federation.origin)) {\n\t\t\t\t\tdomainsAfterAdd.push(user.federation.origin);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Check if the number of domains is allowed\n\t\t\tif (!checkRoomDomainsLength(domainsAfterAdd)) {\n\t\t\t\tthrow new Error(`Cannot federate rooms with more than ${process.env.FEDERATED_DOMAINS_LENGTH || 10} domains`);\n\t\t\t}\n\n\t\t\t//\n\t\t\t// Create the user add event\n\t\t\t//\n\n\t\t\tconst normalizedSourceUser = await normalizers.normalizeUser(addedUser);\n\t\t\tconst normalizedSourceSubscription = normalizers.normalizeSubscription(subscription);\n\n\t\t\tconst addUserEvent = await FederationRoomEvents.createAddUserEvent(\n\t\t\t\tlocalDomain,\n\t\t\t\troom._id,\n\t\t\t\tnormalizedSourceUser,\n\t\t\t\tnormalizedSourceSubscription,\n\t\t\t\tdomainsAfterAdd,\n\t\t\t);\n\n\t\t\t// Dispatch the events\n\t\t\tdispatchEvent(domainsAfterAdd, addUserEvent);\n\t\t}\n\t} catch (err) {\n\t\t// Remove the user subscription from the room\n\t\tSubscriptions.remove({ _id: subscription._id });\n\n\t\tclientLogger.error({ msg: 'afterAddedToRoom => Could not add user:', err });\n\t}\n\n\treturn involvedUsers;\n}\n\nexport const definition = {\n\thook: 'afterAddedToRoom',\n\tcallback: afterAddedToRoom,\n\tid: 'federation-after-added-to-room',\n};\n"],"mappings":";;;IAAAA,MAAM,CAACC,MAAM,CAAC;MAACC,UAAU,EAACA,CAAA,KAAIA;IAAU,CAAC,CAAC;IAAC,IAAIC,oBAAoB,EAACC,aAAa;IAACJ,MAAM,CAACK,IAAI,CAAC,qBAAqB,EAAC;MAACF,oBAAoBA,CAACG,CAAC,EAAC;QAACH,oBAAoB,GAACG,CAAC;MAAA,CAAC;MAACF,aAAaA,CAACE,CAAC,EAAC;QAACF,aAAa,GAACE,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIC,oBAAoB,EAACC,iBAAiB,EAACC,WAAW,EAACC,aAAa,EAACC,sBAAsB;IAACX,MAAM,CAACK,IAAI,CAAC,sBAAsB,EAAC;MAACE,oBAAoBA,CAACD,CAAC,EAAC;QAACC,oBAAoB,GAACD,CAAC;MAAA,CAAC;MAACE,iBAAiBA,CAACF,CAAC,EAAC;QAACE,iBAAiB,GAACF,CAAC;MAAA,CAAC;MAACG,WAAWA,CAACH,CAAC,EAAC;QAACG,WAAW,GAACH,CAAC;MAAA,CAAC;MAACI,aAAaA,CAACJ,CAAC,EAAC;QAACI,aAAa,GAACJ,CAAC;MAAA,CAAC;MAACK,sBAAsBA,CAACL,CAAC,EAAC;QAACK,sBAAsB,GAACL,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIM,aAAa;IAACZ,MAAM,CAACK,IAAI,CAAC,YAAY,EAAC;MAACO,aAAaA,CAACN,CAAC,EAAC;QAACM,aAAa,GAACN,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIO,mBAAmB;IAACb,MAAM,CAACK,IAAI,CAAC,4BAA4B,EAAC;MAACQ,mBAAmBA,CAACP,CAAC,EAAC;QAACO,mBAAmB,GAACP,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIQ,YAAY;IAACd,MAAM,CAACK,IAAI,CAAC,eAAe,EAAC;MAACS,YAAYA,CAACR,CAAC,EAAC;QAACQ,YAAY,GAACR,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIS,WAAW;IAACf,MAAM,CAACK,IAAI,CAAC,gBAAgB,EAAC;MAACU,WAAWA,CAACT,CAAC,EAAC;QAACS,WAAW,GAACT,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIU,iBAAiB;IAAChB,MAAM,CAACK,IAAI,CAAC,mBAAmB,EAAC;MAACW,iBAAiBA,CAACV,CAAC,EAAC;QAACU,iBAAiB,GAACV,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIW,oBAAoB,CAAC,CAAC,EAAE,CAAC,MAAMA,oBAAoB,CAAC,CAAC,EAAE,CAAC;IAStiC,eAAeC,gBAAgBA,CAACC,aAAa,EAAEC,IAAI,EAAE;MACpD,MAAM;QAAEC,IAAI,EAAEC;MAAU,CAAC,GAAGH,aAAa;MAEzC,MAAMI,WAAW,GAAGV,mBAAmB,CAAC,CAAC;MAEzC,IAAI,CAACL,iBAAiB,CAACY,IAAI,CAAC,IAAIX,WAAW,CAACa,SAAS,EAAEC,WAAW,CAAC,EAAE;QACpE,OAAOJ,aAAa;MACrB;MAEAL,YAAY,CAACU,KAAK,CAAC;QAAEC,GAAG,EAAE,kBAAkB;QAAEN,aAAa;QAAEC;MAAK,CAAC,CAAC;;MAEpE;MACA,MAAM;QAAEM,KAAK;QAAEC;MAAc,CAAC,GAAG,MAAMpB,oBAAoB,CAACa,IAAI,CAAC;;MAEjE;MACA,MAAMQ,YAAY,GAAG,MAAMxB,aAAa,CAACyB,wBAAwB,CAACT,IAAI,CAACU,GAAG,EAAER,SAAS,CAACQ,GAAG,CAAC;MAE1F,IAAI;QACH;QACA,IAAI,CAACpB,aAAa,CAACU,IAAI,CAAC,EAAE;UACzB,MAAM,IAAIW,KAAK,CAAC,8BAA8B,CAAC;QAChD;;QAEA;QACA;QACA;QACA,IAAI,CAACX,IAAI,CAACY,UAAU,EAAE;UACrB;UACA;UACA;;UAEA,MAAMhB,iBAAiB,CAACI,IAAI,EAAEM,KAAK,EAAEC,aAAa,CAAC;QACpD,CAAC,MAAM;UACN;UACA;UACA;;UAEA;UACA,MAAMM,eAAe,GAAG,EAAE;UAC1BP,KAAK,CAACQ,OAAO,CAAEb,IAAI,IAAK;YACvB,IAAIA,IAAI,CAACc,cAAc,CAAC,YAAY,CAAC,IAAI,CAACF,eAAe,CAACG,QAAQ,CAACf,IAAI,CAACW,UAAU,CAACK,MAAM,CAAC,EAAE;cAC3FJ,eAAe,CAACK,IAAI,CAACjB,IAAI,CAACW,UAAU,CAACK,MAAM,CAAC;YAC7C;UACD,CAAC,CAAC;;UAEF;UACA,IAAI,CAAC1B,sBAAsB,CAACsB,eAAe,CAAC,EAAE;YAC7C,MAAM,IAAIF,KAAK,yCAAAQ,MAAA,CAAyCC,OAAO,CAACC,GAAG,CAACC,wBAAwB,IAAI,EAAE,aAAU,CAAC;UAC9G;;UAEA;UACA;UACA;;UAEA,MAAMC,oBAAoB,GAAG,MAAM5B,WAAW,CAAC6B,aAAa,CAACtB,SAAS,CAAC;UACvE,MAAMuB,4BAA4B,GAAG9B,WAAW,CAAC+B,qBAAqB,CAAClB,YAAY,CAAC;UAEpF,MAAMmB,YAAY,GAAG,MAAM5C,oBAAoB,CAAC6C,kBAAkB,CACjEzB,WAAW,EACXH,IAAI,CAACU,GAAG,EACRa,oBAAoB,EACpBE,4BAA4B,EAC5BZ,eACD,CAAC;;UAED;UACArB,aAAa,CAACqB,eAAe,EAAEc,YAAY,CAAC;QAC7C;MACD,CAAC,CAAC,OAAOE,GAAG,EAAE;QACb;QACA7C,aAAa,CAAC8C,MAAM,CAAC;UAAEpB,GAAG,EAAEF,YAAY,CAACE;QAAI,CAAC,CAAC;QAE/ChB,YAAY,CAACqC,KAAK,CAAC;UAAE1B,GAAG,EAAE,yCAAyC;UAAEwB;QAAI,CAAC,CAAC;MAC5E;MAEA,OAAO9B,aAAa;IACrB;IAEO,MAAMjB,UAAU,GAAG;MACzBkD,IAAI,EAAE,kBAAkB;MACxBC,QAAQ,EAAEnC,gBAAgB;MAC1BoC,EAAE,EAAE;IACL,CAAC;IAACC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"82d83bfd0e4a5c5f9a678de7c0ae89ac0e67e8cd"}
