{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/imports/client/sodium-plus/lib/polyfill.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/client/sodium-plus/lib/polyfill.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/imports/client/sodium-plus/lib/polyfill.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/imports/client/sodium-plus/lib/polyfill.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/client/sodium-plus/lib/polyfill.js"}},"code":"\"use strict\";\n\n!function (module1) {\n  var _regeneratorRuntime;\n  module1.link(\"@babel/runtime/regenerator\", {\n    default: function (v) {\n      _regeneratorRuntime = v;\n    }\n  }, 0);\n  var crypto = require('crypto');\n  var Poly1305 = require('poly1305-js');\n  var Util = require('./util');\n  var XSalsa20 = require('xsalsa20');\n\n  /* istanbul ignore if */\n  if (typeof Buffer === 'undefined') {\n    var _Buffer = require('buffer/').Buffer;\n  }\n  module.exports = /*#__PURE__*/function () {\n    function SodiumPolyfill() {}\n    /**\n     * @param {string|Buffer} message\n     * @param {CryptographyKey} key\n     * @return {Promise<Buffer>}\n     */\n    SodiumPolyfill.crypto_onetimeauth = function () {\n      function crypto_onetimeauth(message, key) {\n        return _regeneratorRuntime.async(function () {\n          function crypto_onetimeauth$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = Poly1305;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(Util.toBuffer(message));\n              case 3:\n                _context.t1 = _context.sent;\n                _context.t2 = key.getBuffer();\n                return _context.abrupt(\"return\", _context.t0.onetimeauth.call(_context.t0, _context.t1, _context.t2));\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n          return crypto_onetimeauth$;\n        }(), null, null, null, Promise);\n      }\n      return crypto_onetimeauth;\n    }()\n    /**\n     * @param {string|Buffer} message\n     * @param {CryptographyKey} key\n     * @param {Buffer} tag\n     * @return {Promise<boolean>}\n     */\n    ;\n    SodiumPolyfill.crypto_onetimeauth_verify = function () {\n      function crypto_onetimeauth_verify(message, key, tag) {\n        return _regeneratorRuntime.async(function () {\n          function crypto_onetimeauth_verify$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = Poly1305;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(Util.toBuffer(message));\n              case 3:\n                _context2.t1 = _context2.sent;\n                _context2.t2 = key.getBuffer();\n                _context2.next = 7;\n                return _regeneratorRuntime.awrap(Util.toBuffer(tag));\n              case 7:\n                _context2.t3 = _context2.sent;\n                return _context2.abrupt(\"return\", _context2.t0.onetimeauth_verify.call(_context2.t0, _context2.t1, _context2.t2, _context2.t3));\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n          return crypto_onetimeauth_verify$;\n        }(), null, null, null, Promise);\n      }\n      return crypto_onetimeauth_verify;\n    }()\n    /**\n     * @param {string|Buffer} plaintext\n     * @param {Buffer} nonce\n     * @param {CryptographyKey} key\n     * @return {Promise<Buffer>}\n     */\n    ;\n    SodiumPolyfill.crypto_stream_xor = function () {\n      function crypto_stream_xor(plaintext, nonce, key) {\n        var stream, output;\n        return _regeneratorRuntime.async(function () {\n          function crypto_stream_xor$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                stream = XSalsa20(nonce, key.getBuffer());\n                output = stream.update(plaintext);\n                stream.finalize();\n                return _context3.abrupt(\"return\", Util.toBuffer(output));\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n          return crypto_stream_xor$;\n        }(), null, null, null, Promise);\n      }\n      return crypto_stream_xor;\n    }()\n    /**\n     * Polyfill crypto_pwhash_str_needs_rehash() for bindings that don't\n     * include this (somewhat new) helper function.\n     *\n     * @param {string|Buffer} hash\n     * @param {number} opslimit\n     * @param {number} memlimit\n     * @return {Promise<boolean>}\n     */\n    ;\n    SodiumPolyfill.crypto_pwhash_str_needs_rehash = function () {\n      function crypto_pwhash_str_needs_rehash(hash, opslimit, memlimit) {\n        var pwhash, pieces, expect;\n        return _regeneratorRuntime.async(function () {\n          function crypto_pwhash_str_needs_rehash$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _regeneratorRuntime.awrap(Util.toBuffer(hash));\n              case 2:\n                pwhash = _context4.sent.toString('utf-8');\n                pieces = pwhash.split('$');\n                expect = 'm=' + (memlimit >> 10) + ',t=' + opslimit + ',p=1';\n                if (!(expect.length !== pieces[3].length)) {\n                  _context4.next = 7;\n                  break;\n                }\n                return _context4.abrupt(\"return\", true);\n              case 7:\n                _context4.t0 = crypto;\n                _context4.next = 10;\n                return _regeneratorRuntime.awrap(Util.toBuffer(expect));\n              case 10:\n                _context4.t1 = _context4.sent;\n                _context4.next = 13;\n                return _regeneratorRuntime.awrap(Util.toBuffer(pieces[3]));\n              case 13:\n                _context4.t2 = _context4.sent;\n                return _context4.abrupt(\"return\", !_context4.t0.timingSafeEqual.call(_context4.t0, _context4.t1, _context4.t2));\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n          return crypto_pwhash_str_needs_rehash$;\n        }(), null, null, null, Promise);\n      }\n      return crypto_pwhash_str_needs_rehash;\n    }();\n    return SodiumPolyfill;\n  }();\n}.call(this, module);","map":{"version":3,"names":["module1","_regeneratorRuntime","link","default","v","crypto","require","Poly1305","Util","XSalsa20","Buffer","module","exports","SodiumPolyfill","crypto_onetimeauth","message","key","async","crypto_onetimeauth$","_context","prev","next","t0","awrap","toBuffer","t1","sent","t2","getBuffer","abrupt","onetimeauth","call","stop","Promise","crypto_onetimeauth_verify","tag","crypto_onetimeauth_verify$","_context2","t3","onetimeauth_verify","crypto_stream_xor","plaintext","nonce","stream","output","crypto_stream_xor$","_context3","update","finalize","crypto_pwhash_str_needs_rehash","hash","opslimit","memlimit","pwhash","pieces","expect","crypto_pwhash_str_needs_rehash$","_context4","toString","split","length","timingSafeEqual"],"sources":["imports/client/sodium-plus/lib/polyfill.js"],"sourcesContent":["\"use strict\";\nconst crypto = require('crypto');\nconst Poly1305 = require('poly1305-js');\nconst Util = require('./util');\nconst XSalsa20 = require('xsalsa20');\n\n/* istanbul ignore if */\nif (typeof (Buffer) === 'undefined') {\n    let Buffer = require('buffer/').Buffer;\n}\n\nmodule.exports = class SodiumPolyfill {\n\n    /**\n     * @param {string|Buffer} message\n     * @param {CryptographyKey} key\n     * @return {Promise<Buffer>}\n     */\n    static async crypto_onetimeauth(message, key) {\n        return Poly1305.onetimeauth(\n            await Util.toBuffer(message),\n            key.getBuffer()\n        );\n    }\n\n    /**\n     * @param {string|Buffer} message\n     * @param {CryptographyKey} key\n     * @param {Buffer} tag\n     * @return {Promise<boolean>}\n     */\n    static async crypto_onetimeauth_verify(message, key, tag) {\n        return Poly1305.onetimeauth_verify(\n            await Util.toBuffer(message),\n            key.getBuffer(),\n            await Util.toBuffer(tag)\n        );\n    }\n\n    /**\n     * @param {string|Buffer} plaintext\n     * @param {Buffer} nonce\n     * @param {CryptographyKey} key\n     * @return {Promise<Buffer>}\n     */\n    static async crypto_stream_xor(plaintext, nonce, key) {\n        const stream = XSalsa20(nonce, key.getBuffer());\n        const output = stream.update(plaintext);\n        stream.finalize();\n        return Util.toBuffer(output);\n    }\n\n    /**\n     * Polyfill crypto_pwhash_str_needs_rehash() for bindings that don't\n     * include this (somewhat new) helper function.\n     *\n     * @param {string|Buffer} hash\n     * @param {number} opslimit\n     * @param {number} memlimit\n     * @return {Promise<boolean>}\n     */\n    static async crypto_pwhash_str_needs_rehash(hash, opslimit, memlimit) {\n        const pwhash = (await Util.toBuffer(hash)).toString('utf-8');\n        const pieces = pwhash.split('$');\n        const expect = 'm=' + (memlimit >> 10) + ',t=' + opslimit + ',p=1';\n        if (expect.length !== pieces[3].length) {\n            return true;\n        }\n        return !crypto.timingSafeEqual(\n            await Util.toBuffer(expect),\n            await Util.toBuffer(pieces[3])\n        );\n    }\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"44e23abeafcd1696efdd1fad0b8845c124cd5ec4"}
