{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/lib/RateLimiter.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/lib/RateLimiter.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/lib/RateLimiter.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/lib/RateLimiter.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/lib/RateLimiter.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      RateLimiterClass: () => RateLimiterClass\n    });\n    let DDPRateLimiter;\n    module.link(\"meteor/ddp-rate-limiter\", {\n      DDPRateLimiter(v) {\n        DDPRateLimiter = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let RateLimiter;\n    module.link(\"meteor/rate-limit\", {\n      RateLimiter(v) {\n        RateLimiter = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const RateLimiterClass = new class {\n      limitFunction(fn, numRequests, timeInterval, matchers) {\n        if (process.env.TEST_MODE === 'true') {\n          return fn;\n        }\n        const rateLimiter = new class extends RateLimiter {\n          async check(input) {\n            const reply = {\n              allowed: true,\n              timeToReset: 0,\n              numInvocationsLeft: Infinity\n            };\n            const matchedRules = this._findAllMatchingRules(input);\n            var _iteratorAbruptCompletion = false;\n            var _didIteratorError = false;\n            var _iteratorError;\n            try {\n              for (var _iterator = _asyncIterator(matchedRules), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n                const rule = _step.value;\n                {\n                  const ruleResult = await rule.apply(input);\n                  let numInvocations = rule.counters[ruleResult.key];\n                  if (ruleResult.timeToNextReset < 0) {\n                    // Reset all the counters since the rule has reset\n                    await rule.resetCounter();\n                    ruleResult.timeSinceLastReset = new Date().getTime() - rule._lastResetTime;\n                    ruleResult.timeToNextReset = rule.options.intervalTime;\n                    numInvocations = 0;\n                  }\n                  if (numInvocations > rule.options.numRequestsAllowed) {\n                    // Only update timeToReset if the new time would be longer than the\n                    // previously set time. This is to ensure that if this input triggers\n                    // multiple rules, we return the longest period of time until they can\n                    // successfully make another call\n                    if (reply.timeToReset < ruleResult.timeToNextReset) {\n                      reply.timeToReset = ruleResult.timeToNextReset;\n                    }\n                    reply.allowed = false;\n                    reply.numInvocationsLeft = 0;\n                    reply.ruleId = rule.id;\n                    await rule._executeCallback(reply, input);\n                  } else {\n                    // If this is an allowed attempt and we haven't failed on any of the\n                    // other rules that match, update the reply field.\n                    if (rule.options.numRequestsAllowed - numInvocations < reply.numInvocationsLeft && reply.allowed) {\n                      reply.timeToReset = ruleResult.timeToNextReset;\n                      reply.numInvocationsLeft = rule.options.numRequestsAllowed - numInvocations;\n                    }\n                    reply.ruleId = rule.id;\n                    await rule._executeCallback(reply, input);\n                  }\n                }\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (_iteratorAbruptCompletion && _iterator.return != null) {\n                  await _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n            return reply;\n          }\n        }();\n        Object.entries(matchers).forEach(_ref => {\n          let [key, matcher] = _ref;\n          matchers[key] = matcher;\n        });\n        rateLimiter.addRule(matchers, numRequests, timeInterval);\n        return async function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          const match = {};\n          Object.keys(matchers).forEach(key => {\n            match[key] = args[key];\n          });\n          rateLimiter.increment(match);\n          const rateLimitResult = await rateLimiter.check(match);\n          if (rateLimitResult.allowed) {\n            return fn.apply(null, args);\n          }\n          throw new Meteor.Error('error-too-many-requests', \"Error, too many requests. Please slow down. You must wait \".concat(Math.ceil(rateLimitResult.timeToReset / 1000), \" seconds before trying again.\"), {\n            timeToReset: rateLimitResult.timeToReset,\n            seconds: Math.ceil(rateLimitResult.timeToReset / 1000)\n          });\n        };\n      }\n      limitMethod(methodName, numRequests, timeInterval, matchers) {\n        if (process.env.TEST_MODE === 'true') {\n          return;\n        }\n        const match = {\n          type: 'method',\n          name: methodName\n        };\n        Object.entries(matchers).forEach(_ref2 => {\n          let [key, matcher] = _ref2;\n          match[key] = function () {\n            return matcher(...arguments);\n          };\n        });\n        return DDPRateLimiter.addRule(match, numRequests, timeInterval);\n      }\n    }();\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","RateLimiterClass","DDPRateLimiter","Meteor","RateLimiter","__reifyWaitForDeps__","limitFunction","fn","numRequests","timeInterval","matchers","process","env","TEST_MODE","rateLimiter","check","input","reply","allowed","timeToReset","numInvocationsLeft","Infinity","matchedRules","_findAllMatchingRules","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","rule","value","ruleResult","apply","numInvocations","counters","key","timeToNextReset","resetCounter","timeSinceLastReset","Date","getTime","_lastResetTime","options","intervalTime","numRequestsAllowed","ruleId","id","_executeCallback","err","return","Object","entries","forEach","_ref","matcher","addRule","_len","arguments","length","args","Array","_key","match","keys","increment","rateLimitResult","Error","concat","Math","ceil","seconds","limitMethod","methodName","type","name","_ref2","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/lib/RateLimiter.js"],"sourcesContent":["import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { Meteor } from 'meteor/meteor';\nimport { RateLimiter } from 'meteor/rate-limit';\n\nexport const RateLimiterClass = new (class {\n\tlimitFunction(fn, numRequests, timeInterval, matchers) {\n\t\tif (process.env.TEST_MODE === 'true') {\n\t\t\treturn fn;\n\t\t}\n\t\tconst rateLimiter = new (class extends RateLimiter {\n\t\t\tasync check(input) {\n\t\t\t\tconst reply = {\n\t\t\t\t\tallowed: true,\n\t\t\t\t\ttimeToReset: 0,\n\t\t\t\t\tnumInvocationsLeft: Infinity,\n\t\t\t\t};\n\n\t\t\t\tconst matchedRules = this._findAllMatchingRules(input);\n\n\t\t\t\tfor await (const rule of matchedRules) {\n\t\t\t\t\tconst ruleResult = await rule.apply(input);\n\t\t\t\t\tlet numInvocations = rule.counters[ruleResult.key];\n\n\t\t\t\t\tif (ruleResult.timeToNextReset < 0) {\n\t\t\t\t\t\t// Reset all the counters since the rule has reset\n\t\t\t\t\t\tawait rule.resetCounter();\n\t\t\t\t\t\truleResult.timeSinceLastReset = new Date().getTime() - rule._lastResetTime;\n\t\t\t\t\t\truleResult.timeToNextReset = rule.options.intervalTime;\n\t\t\t\t\t\tnumInvocations = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (numInvocations > rule.options.numRequestsAllowed) {\n\t\t\t\t\t\t// Only update timeToReset if the new time would be longer than the\n\t\t\t\t\t\t// previously set time. This is to ensure that if this input triggers\n\t\t\t\t\t\t// multiple rules, we return the longest period of time until they can\n\t\t\t\t\t\t// successfully make another call\n\t\t\t\t\t\tif (reply.timeToReset < ruleResult.timeToNextReset) {\n\t\t\t\t\t\t\treply.timeToReset = ruleResult.timeToNextReset;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treply.allowed = false;\n\t\t\t\t\t\treply.numInvocationsLeft = 0;\n\t\t\t\t\t\treply.ruleId = rule.id;\n\t\t\t\t\t\tawait rule._executeCallback(reply, input);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If this is an allowed attempt and we haven't failed on any of the\n\t\t\t\t\t\t// other rules that match, update the reply field.\n\t\t\t\t\t\tif (rule.options.numRequestsAllowed - numInvocations < reply.numInvocationsLeft && reply.allowed) {\n\t\t\t\t\t\t\treply.timeToReset = ruleResult.timeToNextReset;\n\t\t\t\t\t\t\treply.numInvocationsLeft = rule.options.numRequestsAllowed - numInvocations;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treply.ruleId = rule.id;\n\t\t\t\t\t\tawait rule._executeCallback(reply, input);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn reply;\n\t\t\t}\n\t\t})();\n\t\tObject.entries(matchers).forEach(([key, matcher]) => {\n\t\t\tmatchers[key] = matcher;\n\t\t});\n\n\t\trateLimiter.addRule(matchers, numRequests, timeInterval);\n\t\treturn async function (...args) {\n\t\t\tconst match = {};\n\n\t\t\tObject.keys(matchers).forEach((key) => {\n\t\t\t\tmatch[key] = args[key];\n\t\t\t});\n\n\t\t\trateLimiter.increment(match);\n\t\t\tconst rateLimitResult = await rateLimiter.check(match);\n\t\t\tif (rateLimitResult.allowed) {\n\t\t\t\treturn fn.apply(null, args);\n\t\t\t}\n\t\t\tthrow new Meteor.Error(\n\t\t\t\t'error-too-many-requests',\n\t\t\t\t`Error, too many requests. Please slow down. You must wait ${Math.ceil(\n\t\t\t\t\trateLimitResult.timeToReset / 1000,\n\t\t\t\t)} seconds before trying again.`,\n\t\t\t\t{\n\t\t\t\t\ttimeToReset: rateLimitResult.timeToReset,\n\t\t\t\t\tseconds: Math.ceil(rateLimitResult.timeToReset / 1000),\n\t\t\t\t},\n\t\t\t);\n\t\t};\n\t}\n\n\tlimitMethod(methodName, numRequests, timeInterval, matchers) {\n\t\tif (process.env.TEST_MODE === 'true') {\n\t\t\treturn;\n\t\t}\n\t\tconst match = {\n\t\t\ttype: 'method',\n\t\t\tname: methodName,\n\t\t};\n\t\tObject.entries(matchers).forEach(([key, matcher]) => {\n\t\t\tmatch[key] = (...args) => matcher(...args);\n\t\t});\n\t\treturn DDPRateLimiter.addRule(match, numRequests, timeInterval);\n\t}\n})();\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ca164fee6ed967bb0ea5d01dff8a99e4825c2149"}
