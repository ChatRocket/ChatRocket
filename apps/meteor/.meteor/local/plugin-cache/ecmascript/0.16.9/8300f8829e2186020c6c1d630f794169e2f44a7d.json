{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/bridges/listeners.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/server/bridges/listeners.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/bridges/listeners.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/bridges/listeners.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/server/bridges/listeners.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      AppListenerBridge: () => AppListenerBridge\n    });\n    let LivechatTransferEventType;\n    module.link(\"@rocket.chat/apps-engine/definition/livechat\", {\n      LivechatTransferEventType(v) {\n        LivechatTransferEventType = v;\n      }\n    }, 0);\n    let AppInterface;\n    module.link(\"@rocket.chat/apps-engine/definition/metadata\", {\n      AppInterface(v) {\n        AppInterface = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class AppListenerBridge {\n      constructor(orch) {\n        this.orch = orch;\n      }\n      async handleEvent(event) {\n        // eslint-disable-next-line complexity\n        const method = (() => {\n          switch (event) {\n            case AppInterface.IPreMessageSentPrevent:\n            case AppInterface.IPreMessageSentExtend:\n            case AppInterface.IPreMessageSentModify:\n            case AppInterface.IPostMessageSent:\n            case AppInterface.IPreMessageDeletePrevent:\n            case AppInterface.IPostMessageDeleted:\n            case AppInterface.IPreMessageUpdatedPrevent:\n            case AppInterface.IPreMessageUpdatedExtend:\n            case AppInterface.IPreMessageUpdatedModify:\n            case AppInterface.IPostMessageUpdated:\n            case AppInterface.IPostMessageReacted:\n            case AppInterface.IPostMessageFollowed:\n            case AppInterface.IPostMessagePinned:\n            case AppInterface.IPostMessageStarred:\n            case AppInterface.IPostMessageReported:\n              return 'messageEvent';\n            case AppInterface.IPreRoomCreatePrevent:\n            case AppInterface.IPreRoomCreateExtend:\n            case AppInterface.IPreRoomCreateModify:\n            case AppInterface.IPostRoomCreate:\n            case AppInterface.IPreRoomDeletePrevent:\n            case AppInterface.IPostRoomDeleted:\n            case AppInterface.IPreRoomUserJoined:\n            case AppInterface.IPostRoomUserJoined:\n            case AppInterface.IPreRoomUserLeave:\n            case AppInterface.IPostRoomUserLeave:\n              return 'roomEvent';\n            /**\n             * @deprecated please prefer the AppInterface.IPostLivechatRoomClosed event\n             */\n            case AppInterface.ILivechatRoomClosedHandler:\n            case AppInterface.IPostLivechatRoomStarted:\n            case AppInterface.IPostLivechatRoomClosed:\n            case AppInterface.IPostLivechatAgentAssigned:\n            case AppInterface.IPostLivechatAgentUnassigned:\n            case AppInterface.IPostLivechatRoomTransferred:\n            case AppInterface.IPostLivechatGuestSaved:\n            case AppInterface.IPostLivechatRoomSaved:\n              return 'livechatEvent';\n            case AppInterface.IPostUserCreated:\n            case AppInterface.IPostUserUpdated:\n            case AppInterface.IPostUserDeleted:\n            case AppInterface.IPostUserLogin:\n            case AppInterface.IPostUserLogout:\n            case AppInterface.IPostUserStatusChanged:\n              return 'userEvent';\n            default:\n              return 'defaultEvent';\n          }\n        })();\n        for (var _len = arguments.length, payload = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          payload[_key - 1] = arguments[_key];\n        }\n        return this[method](event, ...payload);\n      }\n      async defaultEvent(inte, payload) {\n        return this.orch.getManager().getListenerManager().executeListener(inte, payload);\n      }\n      async messageEvent(inte, message) {\n        for (var _len2 = arguments.length, payload = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          payload[_key2 - 2] = arguments[_key2];\n        }\n        const msg = await this.orch.getConverters().get('messages').convertMessage(message);\n        const params = (() => {\n          switch (inte) {\n            case AppInterface.IPostMessageDeleted:\n              const [userDeleted] = payload;\n              return {\n                message: msg,\n                user: this.orch.getConverters().get('users').convertToApp(userDeleted)\n              };\n            case AppInterface.IPostMessageReacted:\n              const [userReacted, reaction, isReacted] = payload;\n              return {\n                message: msg,\n                user: this.orch.getConverters().get('users').convertToApp(userReacted),\n                reaction,\n                isReacted\n              };\n            case AppInterface.IPostMessageFollowed:\n              const [userFollowed, isUnfollow] = payload;\n              return {\n                message: msg,\n                user: this.orch.getConverters().get('users').convertToApp(userFollowed),\n                isUnfollow\n              };\n            case AppInterface.IPostMessagePinned:\n              const [userPinned, isUnpinned] = payload;\n              return {\n                message: msg,\n                user: this.orch.getConverters().get('users').convertToApp(userPinned),\n                isUnpinned\n              };\n            case AppInterface.IPostMessageStarred:\n              const [userStarred, isStarred] = payload;\n              return {\n                message: msg,\n                user: this.orch.getConverters().get('users').convertToApp(userStarred),\n                isStarred\n              };\n            case AppInterface.IPostMessageReported:\n              const [userReported, reason] = payload;\n              return {\n                message: msg,\n                user: this.orch.getConverters().get('users').convertToApp(userReported),\n                reason\n              };\n            default:\n              return msg;\n          }\n        })();\n        const result = await this.orch.getManager().getListenerManager().executeListener(inte, params);\n        if (typeof result === 'boolean') {\n          return result;\n        }\n        return this.orch.getConverters().get('messages').convertAppMessage(result);\n      }\n      async roomEvent(inte, room) {\n        for (var _len3 = arguments.length, payload = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          payload[_key3 - 2] = arguments[_key3];\n        }\n        const rm = await this.orch.getConverters().get('rooms').convertRoom(room);\n        const params = (() => {\n          switch (inte) {\n            case AppInterface.IPreRoomUserJoined:\n            case AppInterface.IPostRoomUserJoined:\n              const [joiningUser, invitingUser] = payload;\n              return {\n                room: rm,\n                joiningUser: this.orch.getConverters().get('users').convertToApp(joiningUser),\n                invitingUser: this.orch.getConverters().get('users').convertToApp(invitingUser)\n              };\n            case AppInterface.IPreRoomUserLeave:\n            case AppInterface.IPostRoomUserLeave:\n              const [leavingUser, removedBy] = payload;\n              return {\n                room: rm,\n                leavingUser: this.orch.getConverters().get('users').convertToApp(leavingUser),\n                removedBy: this.orch.getConverters().get('users').convertToApp(removedBy)\n              };\n            default:\n              return rm;\n          }\n        })();\n        const result = await this.orch.getManager().getListenerManager().executeListener(inte, params);\n        if (typeof result === 'boolean') {\n          return result;\n        }\n        return this.orch.getConverters().get('rooms').convertAppRoom(result);\n      }\n      async livechatEvent(inte, data) {\n        switch (inte) {\n          case AppInterface.IPostLivechatAgentAssigned:\n          case AppInterface.IPostLivechatAgentUnassigned:\n            return this.orch.getManager().getListenerManager().executeListener(inte, {\n              room: await this.orch.getConverters().get('rooms').convertRoom(data.room),\n              agent: this.orch.getConverters().get('users').convertToApp(data.user)\n            });\n          case AppInterface.IPostLivechatRoomTransferred:\n            const converter = data.type === LivechatTransferEventType.AGENT ? 'users' : 'departments';\n            return this.orch.getManager().getListenerManager().executeListener(inte, {\n              type: data.type,\n              room: await this.orch.getConverters().get('rooms').convertById(data.room),\n              from: await this.orch.getConverters().get(converter).convertById(data.from),\n              to: await this.orch.getConverters().get(converter).convertById(data.to)\n            });\n          case AppInterface.IPostLivechatGuestSaved:\n            return this.orch.getManager().getListenerManager().executeListener(inte, await this.orch.getConverters().get('visitors').convertById(data));\n          case AppInterface.IPostLivechatRoomSaved:\n            return this.orch.getManager().getListenerManager().executeListener(inte, await this.orch.getConverters().get('rooms').convertById(data));\n          default:\n            const room = await this.orch.getConverters().get('rooms').convertRoom(data);\n            return this.orch.getManager().getListenerManager().executeListener(inte, room);\n        }\n      }\n      async userEvent(inte, data) {\n        let context;\n        switch (inte) {\n          case AppInterface.IPostUserLoggedIn:\n          case AppInterface.IPostUserLogout:\n            context = this.orch.getConverters().get('users').convertToApp(data.user);\n            return this.orch.getManager().getListenerManager().executeListener(inte, context);\n          case AppInterface.IPostUserStatusChanged:\n            const {\n              currentStatus,\n              previousStatus\n            } = data;\n            context = {\n              user: this.orch.getConverters().get('users').convertToApp(data.user),\n              currentStatus,\n              previousStatus\n            };\n            return this.orch.getManager().getListenerManager().executeListener(inte, context);\n          case AppInterface.IPostUserCreated:\n          case AppInterface.IPostUserUpdated:\n          case AppInterface.IPostUserDeleted:\n            context = {\n              user: this.orch.getConverters().get('users').convertToApp(data.user),\n              performedBy: this.orch.getConverters().get('users').convertToApp(data.performedBy)\n            };\n            if (inte === AppInterface.IPostUserUpdated) {\n              context.previousData = this.orch.getConverters().get('users').convertToApp(data.previousUser);\n            }\n            return this.orch.getManager().getListenerManager().executeListener(inte, context);\n        }\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","AppListenerBridge","LivechatTransferEventType","link","v","AppInterface","__reifyWaitForDeps__","constructor","orch","handleEvent","event","method","IPreMessageSentPrevent","IPreMessageSentExtend","IPreMessageSentModify","IPostMessageSent","IPreMessageDeletePrevent","IPostMessageDeleted","IPreMessageUpdatedPrevent","IPreMessageUpdatedExtend","IPreMessageUpdatedModify","IPostMessageUpdated","IPostMessageReacted","IPostMessageFollowed","IPostMessagePinned","IPostMessageStarred","IPostMessageReported","IPreRoomCreatePrevent","IPreRoomCreateExtend","IPreRoomCreateModify","IPostRoomCreate","IPreRoomDeletePrevent","IPostRoomDeleted","IPreRoomUserJoined","IPostRoomUserJoined","IPreRoomUserLeave","IPostRoomUserLeave","ILivechatRoomClosedHandler","IPostLivechatRoomStarted","IPostLivechatRoomClosed","IPostLivechatAgentAssigned","IPostLivechatAgentUnassigned","IPostLivechatRoomTransferred","IPostLivechatGuestSaved","IPostLivechatRoomSaved","IPostUserCreated","IPostUserUpdated","IPostUserDeleted","IPostUserLogin","IPostUserLogout","IPostUserStatusChanged","_len","arguments","length","payload","Array","_key","defaultEvent","inte","getManager","getListenerManager","executeListener","messageEvent","message","_len2","_key2","msg","getConverters","get","convertMessage","params","userDeleted","user","convertToApp","userReacted","reaction","isReacted","userFollowed","isUnfollow","userPinned","isUnpinned","userStarred","isStarred","userReported","reason","result","convertAppMessage","roomEvent","room","_len3","_key3","rm","convertRoom","joiningUser","invitingUser","leavingUser","removedBy","convertAppRoom","livechatEvent","data","agent","converter","type","AGENT","convertById","from","to","userEvent","context","IPostUserLoggedIn","currentStatus","previousStatus","performedBy","previousData","previousUser","__reify_async_result__","_reifyError","self","async"],"sources":["app/apps/server/bridges/listeners.js"],"sourcesContent":["import { LivechatTransferEventType } from '@rocket.chat/apps-engine/definition/livechat';\nimport { AppInterface } from '@rocket.chat/apps-engine/definition/metadata';\n\nexport class AppListenerBridge {\n\tconstructor(orch) {\n\t\tthis.orch = orch;\n\t}\n\n\tasync handleEvent(event, ...payload) {\n\t\t// eslint-disable-next-line complexity\n\t\tconst method = (() => {\n\t\t\tswitch (event) {\n\t\t\t\tcase AppInterface.IPreMessageSentPrevent:\n\t\t\t\tcase AppInterface.IPreMessageSentExtend:\n\t\t\t\tcase AppInterface.IPreMessageSentModify:\n\t\t\t\tcase AppInterface.IPostMessageSent:\n\t\t\t\tcase AppInterface.IPreMessageDeletePrevent:\n\t\t\t\tcase AppInterface.IPostMessageDeleted:\n\t\t\t\tcase AppInterface.IPreMessageUpdatedPrevent:\n\t\t\t\tcase AppInterface.IPreMessageUpdatedExtend:\n\t\t\t\tcase AppInterface.IPreMessageUpdatedModify:\n\t\t\t\tcase AppInterface.IPostMessageUpdated:\n\t\t\t\tcase AppInterface.IPostMessageReacted:\n\t\t\t\tcase AppInterface.IPostMessageFollowed:\n\t\t\t\tcase AppInterface.IPostMessagePinned:\n\t\t\t\tcase AppInterface.IPostMessageStarred:\n\t\t\t\tcase AppInterface.IPostMessageReported:\n\t\t\t\t\treturn 'messageEvent';\n\t\t\t\tcase AppInterface.IPreRoomCreatePrevent:\n\t\t\t\tcase AppInterface.IPreRoomCreateExtend:\n\t\t\t\tcase AppInterface.IPreRoomCreateModify:\n\t\t\t\tcase AppInterface.IPostRoomCreate:\n\t\t\t\tcase AppInterface.IPreRoomDeletePrevent:\n\t\t\t\tcase AppInterface.IPostRoomDeleted:\n\t\t\t\tcase AppInterface.IPreRoomUserJoined:\n\t\t\t\tcase AppInterface.IPostRoomUserJoined:\n\t\t\t\tcase AppInterface.IPreRoomUserLeave:\n\t\t\t\tcase AppInterface.IPostRoomUserLeave:\n\t\t\t\t\treturn 'roomEvent';\n\t\t\t\t/**\n\t\t\t\t * @deprecated please prefer the AppInterface.IPostLivechatRoomClosed event\n\t\t\t\t */\n\t\t\t\tcase AppInterface.ILivechatRoomClosedHandler:\n\t\t\t\tcase AppInterface.IPostLivechatRoomStarted:\n\t\t\t\tcase AppInterface.IPostLivechatRoomClosed:\n\t\t\t\tcase AppInterface.IPostLivechatAgentAssigned:\n\t\t\t\tcase AppInterface.IPostLivechatAgentUnassigned:\n\t\t\t\tcase AppInterface.IPostLivechatRoomTransferred:\n\t\t\t\tcase AppInterface.IPostLivechatGuestSaved:\n\t\t\t\tcase AppInterface.IPostLivechatRoomSaved:\n\t\t\t\t\treturn 'livechatEvent';\n\t\t\t\tcase AppInterface.IPostUserCreated:\n\t\t\t\tcase AppInterface.IPostUserUpdated:\n\t\t\t\tcase AppInterface.IPostUserDeleted:\n\t\t\t\tcase AppInterface.IPostUserLogin:\n\t\t\t\tcase AppInterface.IPostUserLogout:\n\t\t\t\tcase AppInterface.IPostUserStatusChanged:\n\t\t\t\t\treturn 'userEvent';\n\t\t\t\tdefault:\n\t\t\t\t\treturn 'defaultEvent';\n\t\t\t}\n\t\t})();\n\n\t\treturn this[method](event, ...payload);\n\t}\n\n\tasync defaultEvent(inte, payload) {\n\t\treturn this.orch.getManager().getListenerManager().executeListener(inte, payload);\n\t}\n\n\tasync messageEvent(inte, message, ...payload) {\n\t\tconst msg = await this.orch.getConverters().get('messages').convertMessage(message);\n\n\t\tconst params = (() => {\n\t\t\tswitch (inte) {\n\t\t\t\tcase AppInterface.IPostMessageDeleted:\n\t\t\t\t\tconst [userDeleted] = payload;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmessage: msg,\n\t\t\t\t\t\tuser: this.orch.getConverters().get('users').convertToApp(userDeleted),\n\t\t\t\t\t};\n\t\t\t\tcase AppInterface.IPostMessageReacted:\n\t\t\t\t\tconst [userReacted, reaction, isReacted] = payload;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmessage: msg,\n\t\t\t\t\t\tuser: this.orch.getConverters().get('users').convertToApp(userReacted),\n\t\t\t\t\t\treaction,\n\t\t\t\t\t\tisReacted,\n\t\t\t\t\t};\n\t\t\t\tcase AppInterface.IPostMessageFollowed:\n\t\t\t\t\tconst [userFollowed, isUnfollow] = payload;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmessage: msg,\n\t\t\t\t\t\tuser: this.orch.getConverters().get('users').convertToApp(userFollowed),\n\t\t\t\t\t\tisUnfollow,\n\t\t\t\t\t};\n\t\t\t\tcase AppInterface.IPostMessagePinned:\n\t\t\t\t\tconst [userPinned, isUnpinned] = payload;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmessage: msg,\n\t\t\t\t\t\tuser: this.orch.getConverters().get('users').convertToApp(userPinned),\n\t\t\t\t\t\tisUnpinned,\n\t\t\t\t\t};\n\t\t\t\tcase AppInterface.IPostMessageStarred:\n\t\t\t\t\tconst [userStarred, isStarred] = payload;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmessage: msg,\n\t\t\t\t\t\tuser: this.orch.getConverters().get('users').convertToApp(userStarred),\n\t\t\t\t\t\tisStarred,\n\t\t\t\t\t};\n\t\t\t\tcase AppInterface.IPostMessageReported:\n\t\t\t\t\tconst [userReported, reason] = payload;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmessage: msg,\n\t\t\t\t\t\tuser: this.orch.getConverters().get('users').convertToApp(userReported),\n\t\t\t\t\t\treason,\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\treturn msg;\n\t\t\t}\n\t\t})();\n\n\t\tconst result = await this.orch.getManager().getListenerManager().executeListener(inte, params);\n\n\t\tif (typeof result === 'boolean') {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.orch.getConverters().get('messages').convertAppMessage(result);\n\t}\n\n\tasync roomEvent(inte, room, ...payload) {\n\t\tconst rm = await this.orch.getConverters().get('rooms').convertRoom(room);\n\n\t\tconst params = (() => {\n\t\t\tswitch (inte) {\n\t\t\t\tcase AppInterface.IPreRoomUserJoined:\n\t\t\t\tcase AppInterface.IPostRoomUserJoined:\n\t\t\t\t\tconst [joiningUser, invitingUser] = payload;\n\t\t\t\t\treturn {\n\t\t\t\t\t\troom: rm,\n\t\t\t\t\t\tjoiningUser: this.orch.getConverters().get('users').convertToApp(joiningUser),\n\t\t\t\t\t\tinvitingUser: this.orch.getConverters().get('users').convertToApp(invitingUser),\n\t\t\t\t\t};\n\t\t\t\tcase AppInterface.IPreRoomUserLeave:\n\t\t\t\tcase AppInterface.IPostRoomUserLeave:\n\t\t\t\t\tconst [leavingUser, removedBy] = payload;\n\t\t\t\t\treturn {\n\t\t\t\t\t\troom: rm,\n\t\t\t\t\t\tleavingUser: this.orch.getConverters().get('users').convertToApp(leavingUser),\n\t\t\t\t\t\tremovedBy: this.orch.getConverters().get('users').convertToApp(removedBy),\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\treturn rm;\n\t\t\t}\n\t\t})();\n\n\t\tconst result = await this.orch.getManager().getListenerManager().executeListener(inte, params);\n\n\t\tif (typeof result === 'boolean') {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.orch.getConverters().get('rooms').convertAppRoom(result);\n\t}\n\n\tasync livechatEvent(inte, data) {\n\t\tswitch (inte) {\n\t\t\tcase AppInterface.IPostLivechatAgentAssigned:\n\t\t\tcase AppInterface.IPostLivechatAgentUnassigned:\n\t\t\t\treturn this.orch\n\t\t\t\t\t.getManager()\n\t\t\t\t\t.getListenerManager()\n\t\t\t\t\t.executeListener(inte, {\n\t\t\t\t\t\troom: await this.orch.getConverters().get('rooms').convertRoom(data.room),\n\t\t\t\t\t\tagent: this.orch.getConverters().get('users').convertToApp(data.user),\n\t\t\t\t\t});\n\t\t\tcase AppInterface.IPostLivechatRoomTransferred:\n\t\t\t\tconst converter = data.type === LivechatTransferEventType.AGENT ? 'users' : 'departments';\n\n\t\t\t\treturn this.orch\n\t\t\t\t\t.getManager()\n\t\t\t\t\t.getListenerManager()\n\t\t\t\t\t.executeListener(inte, {\n\t\t\t\t\t\ttype: data.type,\n\t\t\t\t\t\troom: await this.orch.getConverters().get('rooms').convertById(data.room),\n\t\t\t\t\t\tfrom: await this.orch.getConverters().get(converter).convertById(data.from),\n\t\t\t\t\t\tto: await this.orch.getConverters().get(converter).convertById(data.to),\n\t\t\t\t\t});\n\t\t\tcase AppInterface.IPostLivechatGuestSaved:\n\t\t\t\treturn this.orch\n\t\t\t\t\t.getManager()\n\t\t\t\t\t.getListenerManager()\n\t\t\t\t\t.executeListener(inte, await this.orch.getConverters().get('visitors').convertById(data));\n\t\t\tcase AppInterface.IPostLivechatRoomSaved:\n\t\t\t\treturn this.orch\n\t\t\t\t\t.getManager()\n\t\t\t\t\t.getListenerManager()\n\t\t\t\t\t.executeListener(inte, await this.orch.getConverters().get('rooms').convertById(data));\n\t\t\tdefault:\n\t\t\t\tconst room = await this.orch.getConverters().get('rooms').convertRoom(data);\n\n\t\t\t\treturn this.orch.getManager().getListenerManager().executeListener(inte, room);\n\t\t}\n\t}\n\n\tasync userEvent(inte, data) {\n\t\tlet context;\n\t\tswitch (inte) {\n\t\t\tcase AppInterface.IPostUserLoggedIn:\n\t\t\tcase AppInterface.IPostUserLogout:\n\t\t\t\tcontext = this.orch.getConverters().get('users').convertToApp(data.user);\n\t\t\t\treturn this.orch.getManager().getListenerManager().executeListener(inte, context);\n\t\t\tcase AppInterface.IPostUserStatusChanged:\n\t\t\t\tconst { currentStatus, previousStatus } = data;\n\t\t\t\tcontext = {\n\t\t\t\t\tuser: this.orch.getConverters().get('users').convertToApp(data.user),\n\t\t\t\t\tcurrentStatus,\n\t\t\t\t\tpreviousStatus,\n\t\t\t\t};\n\n\t\t\t\treturn this.orch.getManager().getListenerManager().executeListener(inte, context);\n\t\t\tcase AppInterface.IPostUserCreated:\n\t\t\tcase AppInterface.IPostUserUpdated:\n\t\t\tcase AppInterface.IPostUserDeleted:\n\t\t\t\tcontext = {\n\t\t\t\t\tuser: this.orch.getConverters().get('users').convertToApp(data.user),\n\t\t\t\t\tperformedBy: this.orch.getConverters().get('users').convertToApp(data.performedBy),\n\t\t\t\t};\n\t\t\t\tif (inte === AppInterface.IPostUserUpdated) {\n\t\t\t\t\tcontext.previousData = this.orch.getConverters().get('users').convertToApp(data.previousUser);\n\t\t\t\t}\n\t\t\t\treturn this.orch.getManager().getListenerManager().executeListener(inte, context);\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"8300f8829e2186020c6c1d630f794169e2f44a7d"}
