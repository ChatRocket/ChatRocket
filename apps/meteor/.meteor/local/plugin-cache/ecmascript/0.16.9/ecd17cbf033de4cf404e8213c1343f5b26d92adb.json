{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/oauth1/oauth1_server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"packages/oauth1/oauth1_server.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/oauth1/oauth1_server.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/oauth1/oauth1_server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/oauth1/oauth1_server.js"}},"code":"!module.wrapAsync(async function (module1, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module1.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let url;\n    module1.link(\"url\", {\n      default(v) {\n        url = v;\n      }\n    }, 0);\n    let OAuth1Binding;\n    module1.link(\"./oauth1_binding\", {\n      OAuth1Binding(v) {\n        OAuth1Binding = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    OAuth._queryParamsWithAuthTokenUrl = function (authUrl, oauthBinding) {\n      let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      let whitelistedQueryParams = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n      const redirectUrlObj = url.parse(authUrl, true);\n      Object.assign(redirectUrlObj.query, whitelistedQueryParams.reduce((prev, param) => params.query[param] ? _objectSpread(_objectSpread({}, prev), {}, {\n        param: params.query[param]\n      }) : prev, {}), {\n        oauth_token: oauthBinding.requestToken\n      });\n\n      // Clear the `search` so it is rebuilt by Node's `url` from the `query` above.\n      // Using previous versions of the Node `url` module, this was just set to \"\"\n      // However, Node 6 docs seem to indicate that this should be `undefined`.\n      delete redirectUrlObj.search;\n\n      // Reconstruct the URL back with provided query parameters merged with oauth_token\n      return url.format(redirectUrlObj);\n    };\n\n    // connect middleware\n    OAuth._requestHandlers['1'] = async (service, query, res) => {\n      const config = await ServiceConfiguration.configurations.findOneAsync({\n        service: service.serviceName\n      });\n      if (!config) {\n        throw new ServiceConfiguration.ConfigError(service.serviceName);\n      }\n      const {\n        urls\n      } = service;\n      const oauthBinding = new OAuth1Binding(config, urls);\n      let credentialSecret;\n      if (query.requestTokenAndRedirect) {\n        // step 1 - get and store a request token\n        const callbackUrl = OAuth._redirectUri(service.serviceName, config, {\n          state: query.state,\n          cordova: query.cordova === \"true\",\n          android: query.android === \"true\"\n        });\n\n        // Get a request token to start auth process\n        await oauthBinding.prepareRequestToken(callbackUrl);\n\n        // Keep track of request token so we can verify it on the next step\n        await OAuth._storeRequestToken(OAuth._credentialTokenFromQuery(query), oauthBinding.requestToken, oauthBinding.requestTokenSecret);\n\n        // support for scope/name parameters\n        let redirectUrl;\n        const authParams = {\n          query\n        };\n        if (typeof urls.authenticate === \"function\") {\n          redirectUrl = urls.authenticate(oauthBinding, authParams);\n        } else {\n          redirectUrl = OAuth._queryParamsWithAuthTokenUrl(urls.authenticate, oauthBinding, authParams);\n        }\n\n        // redirect to provider login, which will redirect back to \"step 2\" below\n\n        res.writeHead(302, {\n          'Location': redirectUrl\n        });\n        res.end();\n      } else {\n        // step 2, redirected from provider login - store the result\n        // and close the window to allow the login handler to proceed\n\n        // Get the user's request token so we can verify it and clear it\n        const requestTokenInfo = await OAuth._retrieveRequestToken(OAuth._credentialTokenFromQuery(query));\n        if (!requestTokenInfo) {\n          throw new Error(\"Unable to retrieve request token\");\n        }\n\n        // Verify user authorized access and the oauth_token matches\n        // the requestToken from previous step\n        if (query.oauth_token && query.oauth_token === requestTokenInfo.requestToken) {\n          // Prepare the login results before returning.  This way the\n          // subsequent call to the `login` method will be immediate.\n\n          // Get the access token for signing requests\n          await oauthBinding.prepareAccessToken(query, requestTokenInfo.requestTokenSecret);\n\n          // Run service-specific handler.\n          const oauthResult = await service.handleOauthRequest(oauthBinding, {\n            query: query\n          });\n          const credentialToken = OAuth._credentialTokenFromQuery(query);\n          credentialSecret = Random.secret();\n\n          // Store the login result so it can be retrieved in another\n          // browser tab by the result handler\n          await OAuth._storePendingCredential(credentialToken, {\n            serviceName: service.serviceName,\n            serviceData: oauthResult.serviceData,\n            options: oauthResult.options\n          }, credentialSecret);\n        }\n\n        // Either close the window, redirect, or render nothing\n        // if all else fails\n        await OAuth._renderOauthResults(res, query, credentialSecret);\n      }\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module1","link","default","v","url","OAuth1Binding","__reifyWaitForDeps__","OAuth","_queryParamsWithAuthTokenUrl","authUrl","oauthBinding","params","arguments","length","undefined","whitelistedQueryParams","redirectUrlObj","parse","Object","assign","query","reduce","prev","param","oauth_token","requestToken","search","format","_requestHandlers","service","res","config","ServiceConfiguration","configurations","findOneAsync","serviceName","ConfigError","urls","credentialSecret","requestTokenAndRedirect","callbackUrl","_redirectUri","state","cordova","android","prepareRequestToken","_storeRequestToken","_credentialTokenFromQuery","requestTokenSecret","redirectUrl","authParams","authenticate","writeHead","end","requestTokenInfo","_retrieveRequestToken","Error","prepareAccessToken","oauthResult","handleOauthRequest","credentialToken","Random","secret","_storePendingCredential","serviceData","options","_renderOauthResults","__reify_async_result__","_reifyError","self","async"],"sources":["packages/oauth1/oauth1_server.js"],"sourcesContent":["import url from 'url';\nimport { OAuth1Binding } from './oauth1_binding';\n\nOAuth._queryParamsWithAuthTokenUrl = (authUrl, oauthBinding, params = {}, whitelistedQueryParams = []) => {\n  const redirectUrlObj = url.parse(authUrl, true);\n\n  Object.assign(\n    redirectUrlObj.query,\n    whitelistedQueryParams.reduce((prev, param) =>\n      params.query[param] ? { ...prev, param: params.query[param] } : prev,\n      {}\n    ),\n    {\n      oauth_token: oauthBinding.requestToken,\n    }\n  );\n\n  // Clear the `search` so it is rebuilt by Node's `url` from the `query` above.\n  // Using previous versions of the Node `url` module, this was just set to \"\"\n  // However, Node 6 docs seem to indicate that this should be `undefined`.\n  delete redirectUrlObj.search;\n\n  // Reconstruct the URL back with provided query parameters merged with oauth_token\n  return url.format(redirectUrlObj);\n};\n\n// connect middleware\nOAuth._requestHandlers['1'] = async (service, query, res) => {\n  const config = await ServiceConfiguration.configurations.findOneAsync({service: service.serviceName});\n  if (! config) {\n    throw new ServiceConfiguration.ConfigError(service.serviceName);\n  }\n\n  const { urls } = service;\n  const oauthBinding = new OAuth1Binding(config, urls);\n\n  let credentialSecret;\n\n  if (query.requestTokenAndRedirect) {\n    // step 1 - get and store a request token\n    const callbackUrl = OAuth._redirectUri(service.serviceName, config, {\n      state: query.state,\n      cordova: (query.cordova === \"true\"),\n      android: (query.android === \"true\")\n    });\n\n    // Get a request token to start auth process\n    await oauthBinding.prepareRequestToken(callbackUrl);\n\n    // Keep track of request token so we can verify it on the next step\n    await OAuth._storeRequestToken(\n      OAuth._credentialTokenFromQuery(query),\n      oauthBinding.requestToken,\n      oauthBinding.requestTokenSecret);\n\n    // support for scope/name parameters\n    let redirectUrl;\n    const authParams = { query };\n\n    if(typeof urls.authenticate === \"function\") {\n      redirectUrl = urls.authenticate(oauthBinding, authParams);\n    } else {\n      redirectUrl = OAuth._queryParamsWithAuthTokenUrl(\n        urls.authenticate,\n        oauthBinding,\n        authParams\n      );\n    }\n\n    // redirect to provider login, which will redirect back to \"step 2\" below\n\n    res.writeHead(302, {'Location': redirectUrl});\n    res.end();\n  } else {\n    // step 2, redirected from provider login - store the result\n    // and close the window to allow the login handler to proceed\n\n    // Get the user's request token so we can verify it and clear it\n    const requestTokenInfo = await OAuth._retrieveRequestToken(\n      OAuth._credentialTokenFromQuery(query));\n\n    if (! requestTokenInfo) {\n      throw new Error(\"Unable to retrieve request token\");\n    }\n\n    // Verify user authorized access and the oauth_token matches\n    // the requestToken from previous step\n    if (query.oauth_token && query.oauth_token === requestTokenInfo.requestToken) {\n\n      // Prepare the login results before returning.  This way the\n      // subsequent call to the `login` method will be immediate.\n\n      // Get the access token for signing requests\n      await oauthBinding.prepareAccessToken(query, requestTokenInfo.requestTokenSecret);\n\n      // Run service-specific handler.\n      const oauthResult = await service.handleOauthRequest(\n        oauthBinding, { query: query });\n\n      const credentialToken = OAuth._credentialTokenFromQuery(query);\n      credentialSecret = Random.secret();\n\n      // Store the login result so it can be retrieved in another\n      // browser tab by the result handler\n      await OAuth._storePendingCredential(credentialToken, {\n        serviceName: service.serviceName,\n        serviceData: oauthResult.serviceData,\n        options: oauthResult.options\n      }, credentialSecret);\n    }\n\n    // Either close the window, redirect, or render nothing\n    // if all else fails\n    await OAuth._renderOauthResults(res, query, credentialSecret);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ecd17cbf033de4cf404e8213c1343f5b26d92adb"}
