{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/markdown/lib/parser/original/markdown.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/markdown/lib/parser/original/markdown.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/markdown/lib/parser/original/markdown.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/markdown/lib/parser/original/markdown.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/markdown/lib/parser/original/markdown.js"}},"code":"module.export({\n  markdown: function () {\n    return markdown;\n  }\n});\nvar addAsToken, isToken, validateAllowedTokens;\nmodule.link(\"./token\", {\n  addAsToken: function (v) {\n    addAsToken = v;\n  },\n  isToken: function (v) {\n    isToken = v;\n  },\n  validateAllowedTokens: function (v) {\n    validateAllowedTokens = v;\n  }\n}, 0);\nvar validateUrl = function (url, message) {\n  var _message$tokens;\n  // Don't render markdown inside links\n  if (message !== null && message !== void 0 && (_message$tokens = message.tokens) !== null && _message$tokens !== void 0 && _message$tokens.some(function (token) {\n    return url.includes(token.token);\n  })) {\n    return false;\n  }\n\n  // Valid urls don't contain whitespaces\n  if (/\\s/.test(url.trim())) {\n    return false;\n  }\n  try {\n    new URL(url);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\nvar endsWithWhitespace = function (text) {\n  return text.substring(text.length - 1).match(/\\s/);\n};\nvar getParseableMarkersCount = function (start, end) {\n  var usableMarkers = start.length > 1 ? 2 : 1;\n  return end.length - usableMarkers >= 0 ? usableMarkers : 1;\n};\nvar getTextWrapper = function (marker, tagName) {\n  return function (textPrepend, wrappedText, textAppend) {\n    return textPrepend + \"<span class=\\\"copyonly\\\">\" + marker + \"</span><\" + tagName + \">\" + wrappedText + \"</\" + tagName + \"><span class=\\\"copyonly\\\">\" + marker + \"</span>\" + textAppend;\n  };\n};\nvar getRegexReplacer = function (replaceFunction, getRegex) {\n  return function (marker, tagName) {\n    var wrapper = getTextWrapper(marker, tagName);\n    return function (msg) {\n      return msg.replace(getRegex(marker), function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return replaceFunction.apply(void 0, [wrapper].concat(args));\n      });\n    };\n  };\n};\nvar getParserWithCustomMarker = getRegexReplacer(function (wrapper, match, p1, p2, p3) {\n  if (endsWithWhitespace(p2)) {\n    return match;\n  }\n  var finalMarkerCount = getParseableMarkersCount(p1, p3);\n  return wrapper(p1.substring(finalMarkerCount), p2, p3.substring(finalMarkerCount));\n}, function (marker) {\n  return new RegExp(\"(\\\\\" + marker + \"+(?!\\\\s))([^\\\\\" + marker + \"\\\\r\\\\n]+)(\\\\\" + marker + \"+)\", 'gm');\n});\nvar parseBold = getParserWithCustomMarker('*', 'strong');\nvar parseStrike = getParserWithCustomMarker('~', 'strike');\nvar parseItalic = getRegexReplacer(function (wrapper, match, p1, p2, p3, p4, p5) {\n  if (p1 || p5 || endsWithWhitespace(p3)) {\n    return match;\n  }\n  var finalMarkerCount = getParseableMarkersCount(p2, p4);\n  return wrapper(p2.substring(finalMarkerCount), p3, p4.substring(finalMarkerCount));\n}, function () {\n  return new RegExp('([^\\\\r\\\\n\\\\s~*_]){0,1}(\\\\_+(?!\\\\s))([^\\\\_\\\\r\\\\n]+)(\\\\_+)([^\\\\r\\\\n\\\\s]){0,1}', 'gm');\n})('_', 'em');\nvar parseNotEscaped = function (message, _ref) {\n  var supportSchemesForLink = _ref.supportSchemesForLink,\n    headers = _ref.headers,\n    rootUrl = _ref.rootUrl;\n  var msg = message.html;\n  if (!message.tokens) {\n    message.tokens = [];\n  }\n  var schemes = (supportSchemesForLink || '').split(',').join('|');\n  if (headers) {\n    // Support # Text for h1\n    msg = msg.replace(/^# (([\\S\\w\\d-_\\/\\*\\.,\\\\][ \\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]?)+)/gm, '<h1>$1</h1>');\n\n    // Support # Text for h2\n    msg = msg.replace(/^## (([\\S\\w\\d-_\\/\\*\\.,\\\\][ \\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]?)+)/gm, '<h2>$1</h2>');\n\n    // Support # Text for h3\n    msg = msg.replace(/^### (([\\S\\w\\d-_\\/\\*\\.,\\\\][ \\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]?)+)/gm, '<h3>$1</h3>');\n\n    // Support # Text for h4\n    msg = msg.replace(/^#### (([\\S\\w\\d-_\\/\\*\\.,\\\\][ \\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]?)+)/gm, '<h4>$1</h4>');\n  }\n\n  // Support *text* to make bold\n  msg = parseBold(msg);\n\n  // Support _text_ to make italics\n  msg = parseItalic(msg);\n\n  // // Support ~text~ to strike through text\n  msg = parseStrike(msg);\n\n  // Support for block quote\n  // >>>\n  // Text\n  // <<<\n  msg = msg.replace(/(?:&gt;){3}\\n+([\\s\\S]*?)\\n+(?:&lt;){3}/g, '<blockquote class=\"background-transparent-darker-before\"><span class=\"copyonly\">&gt;&gt;&gt;</span>$1<span class=\"copyonly\">&lt;&lt;&lt;</span></blockquote>');\n\n  // Support >Text for quote\n  msg = msg.replace(/^&gt;(.*)$/gm, '<blockquote class=\"background-transparent-darker-before\"><span class=\"copyonly\">&gt;</span>$1</blockquote>');\n\n  // Remove white-space around blockquote (prevent <br>). Because blockquote is block element.\n  msg = msg.replace(/\\s*<blockquote class=\"background-transparent-darker-before\">/gm, '<blockquote class=\"background-transparent-darker-before\">');\n  msg = msg.replace(/<\\/blockquote>\\s*/gm, '</blockquote>');\n\n  // Remove new-line between blockquotes.\n  msg = msg.replace(/<\\/blockquote>\\n<blockquote/gm, '</blockquote><blockquote');\n\n  // Support ![alt text](http://image url)\n  msg = msg.replace(new RegExp(\"!\\\\[([^\\\\]]+)\\\\]\\\\(((?:\" + schemes + \"):\\\\/\\\\/[^\\\\s]+)\\\\)\", 'gm'), function (match, title, url) {\n    if (!validateUrl(url, message)) {\n      return match;\n    }\n    if (isToken(title) && !validateAllowedTokens(message, title, ['bold', 'italic', 'strike'])) {\n      return match;\n    }\n    url = encodeURI(url);\n    var target = url.indexOf(rootUrl) === 0 ? '' : '_blank';\n    return addAsToken(message, \"<a data-title=\\\"\" + url + \"\\\" href=\\\"\" + url + \"\\\" title=\\\"\" + title + \"\\\" target=\\\"\" + target + \"\\\" rel=\\\"noopener noreferrer\\\"><div class=\\\"inline-image\\\" style=\\\"background-image: url(\" + url + \");\\\"></div></a>\", 'link');\n  });\n\n  // Support [Text](http://link)\n  msg = msg.replace(new RegExp(\"\\\\[([^\\\\]]+)\\\\]\\\\(((?:\" + schemes + \"):\\\\/\\\\/[^\\\\s]+)\\\\)\", 'gm'), function (match, title, url) {\n    if (!validateUrl(url, message)) {\n      return match;\n    }\n    if (isToken(title) && !validateAllowedTokens(message, title, ['bold', 'italic', 'strike'])) {\n      return match;\n    }\n    var target = url.indexOf(rootUrl) === 0 ? '' : '_blank';\n    title = title.replace(/&amp;/g, '&');\n    var escapedUrl = encodeURI(url);\n    return addAsToken(message, \"<a data-title=\\\"\" + escapedUrl + \"\\\" href=\\\"\" + escapedUrl + \"\\\" target=\\\"\" + target + \"\\\" rel=\\\"noopener noreferrer\\\">\" + title + \"</a>\", 'link');\n  });\n\n  // Support <http://link|Text>\n  msg = msg.replace(new RegExp(\"(?:<|&lt;)((?:\" + schemes + \"):\\\\/\\\\/[^\\\\|]+)\\\\|(.+?)(?=>|&gt;)(?:>|&gt;)\", 'gm'), function (match, url, title) {\n    if (!validateUrl(url, message)) {\n      return match;\n    }\n    if (isToken(title) && !validateAllowedTokens(message, title, ['bold', 'italic', 'strike'])) {\n      return match;\n    }\n    url = encodeURI(url);\n    var target = url.indexOf(rootUrl) === 0 ? '' : '_blank';\n    return addAsToken(message, \"<a data-title=\\\"\" + url + \"\\\" href=\\\"\" + url + \"\\\" target=\\\"\" + target + \"\\\" rel=\\\"noopener noreferrer\\\">\" + title + \"</a>\", 'link');\n  });\n  return msg;\n};\nvar markdown = function (message, options) {\n  message.html = parseNotEscaped(message, options);\n  return message;\n};","map":{"version":3,"names":["module","export","markdown","addAsToken","isToken","validateAllowedTokens","link","v","validateUrl","url","message","_message$tokens","tokens","some","token","includes","test","trim","URL","e","endsWithWhitespace","text","substring","length","match","getParseableMarkersCount","start","end","usableMarkers","getTextWrapper","marker","tagName","textPrepend","wrappedText","textAppend","getRegexReplacer","replaceFunction","getRegex","wrapper","msg","replace","_len","arguments","args","Array","_key","apply","concat","getParserWithCustomMarker","p1","p2","p3","finalMarkerCount","RegExp","parseBold","parseStrike","parseItalic","p4","p5","parseNotEscaped","_ref","supportSchemesForLink","headers","rootUrl","html","schemes","split","join","title","encodeURI","target","indexOf","escapedUrl","options"],"sources":["app/markdown/lib/parser/original/markdown.js"],"sourcesContent":["import { addAsToken, isToken, validateAllowedTokens } from './token';\n\nconst validateUrl = (url, message) => {\n\t// Don't render markdown inside links\n\tif (message?.tokens?.some((token) => url.includes(token.token))) {\n\t\treturn false;\n\t}\n\n\t// Valid urls don't contain whitespaces\n\tif (/\\s/.test(url.trim())) {\n\t\treturn false;\n\t}\n\n\ttry {\n\t\tnew URL(url);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nconst endsWithWhitespace = (text) => text.substring(text.length - 1).match(/\\s/);\n\nconst getParseableMarkersCount = (start, end) => {\n\tconst usableMarkers = start.length > 1 ? 2 : 1;\n\treturn end.length - usableMarkers >= 0 ? usableMarkers : 1;\n};\n\nconst getTextWrapper = (marker, tagName) => (textPrepend, wrappedText, textAppend) =>\n\t`${textPrepend}<span class=\"copyonly\">${marker}</span><${tagName}>${wrappedText}</${tagName}><span class=\"copyonly\">${marker}</span>${textAppend}`;\n\nconst getRegexReplacer = (replaceFunction, getRegex) => (marker, tagName) => {\n\tconst wrapper = getTextWrapper(marker, tagName);\n\treturn (msg) => msg.replace(getRegex(marker), (...args) => replaceFunction(wrapper, ...args));\n};\n\nconst getParserWithCustomMarker = getRegexReplacer(\n\t(wrapper, match, p1, p2, p3) => {\n\t\tif (endsWithWhitespace(p2)) {\n\t\t\treturn match;\n\t\t}\n\t\tconst finalMarkerCount = getParseableMarkersCount(p1, p3);\n\t\treturn wrapper(p1.substring(finalMarkerCount), p2, p3.substring(finalMarkerCount));\n\t},\n\t(marker) => new RegExp(`(\\\\${marker}+(?!\\\\s))([^\\\\${marker}\\\\r\\\\n]+)(\\\\${marker}+)`, 'gm'),\n);\n\nconst parseBold = getParserWithCustomMarker('*', 'strong');\n\nconst parseStrike = getParserWithCustomMarker('~', 'strike');\n\nconst parseItalic = getRegexReplacer(\n\t(wrapper, match, p1, p2, p3, p4, p5) => {\n\t\tif (p1 || p5 || endsWithWhitespace(p3)) {\n\t\t\treturn match;\n\t\t}\n\n\t\tconst finalMarkerCount = getParseableMarkersCount(p2, p4);\n\t\treturn wrapper(p2.substring(finalMarkerCount), p3, p4.substring(finalMarkerCount));\n\t},\n\t() => new RegExp('([^\\\\r\\\\n\\\\s~*_]){0,1}(\\\\_+(?!\\\\s))([^\\\\_\\\\r\\\\n]+)(\\\\_+)([^\\\\r\\\\n\\\\s]){0,1}', 'gm'),\n)('_', 'em');\n\nconst parseNotEscaped = (message, { supportSchemesForLink, headers, rootUrl }) => {\n\tlet msg = message.html;\n\tif (!message.tokens) {\n\t\tmessage.tokens = [];\n\t}\n\n\tconst schemes = (supportSchemesForLink || '').split(',').join('|');\n\n\tif (headers) {\n\t\t// Support # Text for h1\n\t\tmsg = msg.replace(\n\t\t\t/^# (([\\S\\w\\d-_\\/\\*\\.,\\\\][ \\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]?)+)/gm,\n\t\t\t'<h1>$1</h1>',\n\t\t);\n\n\t\t// Support # Text for h2\n\t\tmsg = msg.replace(\n\t\t\t/^## (([\\S\\w\\d-_\\/\\*\\.,\\\\][ \\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]?)+)/gm,\n\t\t\t'<h2>$1</h2>',\n\t\t);\n\n\t\t// Support # Text for h3\n\t\tmsg = msg.replace(\n\t\t\t/^### (([\\S\\w\\d-_\\/\\*\\.,\\\\][ \\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]?)+)/gm,\n\t\t\t'<h3>$1</h3>',\n\t\t);\n\n\t\t// Support # Text for h4\n\t\tmsg = msg.replace(\n\t\t\t/^#### (([\\S\\w\\d-_\\/\\*\\.,\\\\][ \\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]?)+)/gm,\n\t\t\t'<h4>$1</h4>',\n\t\t);\n\t}\n\n\t// Support *text* to make bold\n\tmsg = parseBold(msg);\n\n\t// Support _text_ to make italics\n\tmsg = parseItalic(msg);\n\n\t// // Support ~text~ to strike through text\n\tmsg = parseStrike(msg);\n\n\t// Support for block quote\n\t// >>>\n\t// Text\n\t// <<<\n\tmsg = msg.replace(\n\t\t/(?:&gt;){3}\\n+([\\s\\S]*?)\\n+(?:&lt;){3}/g,\n\t\t'<blockquote class=\"background-transparent-darker-before\"><span class=\"copyonly\">&gt;&gt;&gt;</span>$1<span class=\"copyonly\">&lt;&lt;&lt;</span></blockquote>',\n\t);\n\n\t// Support >Text for quote\n\tmsg = msg.replace(\n\t\t/^&gt;(.*)$/gm,\n\t\t'<blockquote class=\"background-transparent-darker-before\"><span class=\"copyonly\">&gt;</span>$1</blockquote>',\n\t);\n\n\t// Remove white-space around blockquote (prevent <br>). Because blockquote is block element.\n\tmsg = msg.replace(\n\t\t/\\s*<blockquote class=\"background-transparent-darker-before\">/gm,\n\t\t'<blockquote class=\"background-transparent-darker-before\">',\n\t);\n\tmsg = msg.replace(/<\\/blockquote>\\s*/gm, '</blockquote>');\n\n\t// Remove new-line between blockquotes.\n\tmsg = msg.replace(/<\\/blockquote>\\n<blockquote/gm, '</blockquote><blockquote');\n\n\t// Support ![alt text](http://image url)\n\tmsg = msg.replace(new RegExp(`!\\\\[([^\\\\]]+)\\\\]\\\\(((?:${schemes}):\\\\/\\\\/[^\\\\s]+)\\\\)`, 'gm'), (match, title, url) => {\n\t\tif (!validateUrl(url, message)) {\n\t\t\treturn match;\n\t\t}\n\t\tif (isToken(title) && !validateAllowedTokens(message, title, ['bold', 'italic', 'strike'])) {\n\t\t\treturn match;\n\t\t}\n\t\turl = encodeURI(url);\n\n\t\tconst target = url.indexOf(rootUrl) === 0 ? '' : '_blank';\n\t\treturn addAsToken(\n\t\t\tmessage,\n\t\t\t`<a data-title=\"${url}\" href=\"${url}\" title=\"${title}\" target=\"${target}\" rel=\"noopener noreferrer\"><div class=\"inline-image\" style=\"background-image: url(${url});\"></div></a>`,\n\t\t\t'link',\n\t\t);\n\t});\n\n\t// Support [Text](http://link)\n\tmsg = msg.replace(new RegExp(`\\\\[([^\\\\]]+)\\\\]\\\\(((?:${schemes}):\\\\/\\\\/[^\\\\s]+)\\\\)`, 'gm'), (match, title, url) => {\n\t\tif (!validateUrl(url, message)) {\n\t\t\treturn match;\n\t\t}\n\t\tif (isToken(title) && !validateAllowedTokens(message, title, ['bold', 'italic', 'strike'])) {\n\t\t\treturn match;\n\t\t}\n\t\tconst target = url.indexOf(rootUrl) === 0 ? '' : '_blank';\n\t\ttitle = title.replace(/&amp;/g, '&');\n\n\t\tconst escapedUrl = encodeURI(url);\n\n\t\treturn addAsToken(\n\t\t\tmessage,\n\t\t\t`<a data-title=\"${escapedUrl}\" href=\"${escapedUrl}\" target=\"${target}\" rel=\"noopener noreferrer\">${title}</a>`,\n\t\t\t'link',\n\t\t);\n\t});\n\n\t// Support <http://link|Text>\n\tmsg = msg.replace(new RegExp(`(?:<|&lt;)((?:${schemes}):\\\\\\/\\\\\\/[^\\\\|]+)\\\\|(.+?)(?=>|&gt;)(?:>|&gt;)`, 'gm'), (match, url, title) => {\n\t\tif (!validateUrl(url, message)) {\n\t\t\treturn match;\n\t\t}\n\t\tif (isToken(title) && !validateAllowedTokens(message, title, ['bold', 'italic', 'strike'])) {\n\t\t\treturn match;\n\t\t}\n\t\turl = encodeURI(url);\n\t\tconst target = url.indexOf(rootUrl) === 0 ? '' : '_blank';\n\t\treturn addAsToken(message, `<a data-title=\"${url}\" href=\"${url}\" target=\"${target}\" rel=\"noopener noreferrer\">${title}</a>`, 'link');\n\t});\n\treturn msg;\n};\n\nexport const markdown = (message, options) => {\n\tmessage.html = parseNotEscaped(message, options);\n\treturn message;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"af3c8a1ad885a9bea2306f7f5d87b096e5c4498d"}
