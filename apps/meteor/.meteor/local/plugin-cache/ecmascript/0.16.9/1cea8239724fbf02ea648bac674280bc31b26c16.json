{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/api-enterprise/server/lib/canned-responses.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/api-enterprise/server/lib/canned-responses.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/api-enterprise/server/lib/canned-responses.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/api-enterprise/server/lib/canned-responses.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/api-enterprise/server/lib/canned-responses.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      findAllCannedResponses: () => findAllCannedResponses,\n      findAllCannedResponsesFilter: () => findAllCannedResponsesFilter,\n      findOneCannedResponse: () => findOneCannedResponse\n    });\n    let CannedResponse;\n    module.link(\"@rocket.chat/models\", {\n      CannedResponse(v) {\n        CannedResponse = v;\n      }\n    }, 0);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 1);\n    let hasPermissionAsync;\n    module.link(\"../../../../../app/authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 2);\n    let getDepartmentsWhichUserCanAccess;\n    module.link(\"../../../livechat-enterprise/server/api/lib/departments\", {\n      getDepartmentsWhichUserCanAccess(v) {\n        getDepartmentsWhichUserCanAccess = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function findAllCannedResponses(_ref) {\n      let {\n        userId\n      } = _ref;\n      // If the user is an admin or livechat manager, get his own responses and all responses from all departments\n      if (await hasPermissionAsync(userId, 'view-all-canned-responses')) {\n        const cannedResponses = await CannedResponse.find({\n          $or: [{\n            scope: 'user',\n            userId\n          }, {\n            scope: 'department'\n          }, {\n            scope: 'global'\n          }]\n        }).toArray();\n        return cannedResponses;\n      }\n\n      // Last scenario: user is an agent, so get his own responses and those from the departments he is in\n      const accessibleDepartments = await getDepartmentsWhichUserCanAccess(userId, true);\n      const cannedResponses = await CannedResponse.find({\n        $or: [{\n          scope: 'user',\n          userId\n        }, {\n          scope: 'department',\n          departmentId: {\n            $in: accessibleDepartments\n          }\n        }, {\n          scope: 'global'\n        }]\n      }).toArray();\n      return cannedResponses;\n    }\n    async function findAllCannedResponsesFilter(_ref2) {\n      let {\n        userId,\n        shortcut,\n        text,\n        departmentId,\n        scope,\n        createdBy,\n        tags = [],\n        options = {}\n      } = _ref2;\n      let extraFilter = [];\n      // if user cannot see all, filter to private + public + departments user is in\n      if (!(await hasPermissionAsync(userId, 'view-all-canned-responses'))) {\n        const accessibleDepartments = await getDepartmentsWhichUserCanAccess(userId, true);\n        const isDepartmentInScope = departmentId => !!accessibleDepartments.includes(departmentId);\n        const departmentIds = departmentId && isDepartmentInScope(departmentId) ? [departmentId] : accessibleDepartments;\n        extraFilter = [{\n          $or: [{\n            scope: 'user',\n            userId\n          }, {\n            scope: 'department',\n            departmentId: {\n              $in: departmentIds\n            }\n          }, {\n            scope: 'global'\n          }]\n        }];\n      }\n      if (departmentId) {\n        extraFilter = [{\n          departmentId\n        }];\n      }\n      const textFilter = new RegExp(escapeRegExp(text), 'i');\n      let filter = {\n        $and: [...(shortcut ? [{\n          shortcut\n        }] : []), ...(text ? [{\n          $or: [{\n            shortcut: textFilter\n          }, {\n            text: textFilter\n          }]\n        }] : []), ...(scope ? [{\n          scope\n        }] : []), ...(createdBy ? [{\n          'createdBy._id': createdBy\n        }] : []), ...(tags.length ? [{\n          tags: {\n            $in: tags\n          }\n        }] : []), ...extraFilter]\n      };\n      if (!filter.$and.length) {\n        filter = {};\n      }\n      const {\n        cursor,\n        totalCount\n      } = CannedResponse.findPaginated(filter, {\n        sort: options.sort || {\n          shortcut: 1\n        },\n        skip: options.offset,\n        limit: options.count\n      });\n      const [cannedResponses, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        cannedResponses,\n        total\n      };\n    }\n    async function findOneCannedResponse(_ref3) {\n      let {\n        userId,\n        _id\n      } = _ref3;\n      if (await hasPermissionAsync(userId, 'view-all-canned-responses')) {\n        return CannedResponse.findOneById(_id);\n      }\n      const accessibleDepartments = await getDepartmentsWhichUserCanAccess(userId, true);\n      const filter = {\n        _id,\n        $or: [{\n          scope: 'user',\n          userId\n        }, {\n          scope: 'department',\n          departmentId: {\n            $in: accessibleDepartments\n          }\n        }, {\n          scope: 'global'\n        }]\n      };\n      return CannedResponse.findOne(filter);\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","findAllCannedResponses","findAllCannedResponsesFilter","findOneCannedResponse","CannedResponse","link","v","escapeRegExp","hasPermissionAsync","getDepartmentsWhichUserCanAccess","__reifyWaitForDeps__","_ref","userId","cannedResponses","find","$or","scope","toArray","accessibleDepartments","departmentId","$in","_ref2","shortcut","text","createdBy","tags","options","extraFilter","isDepartmentInScope","includes","departmentIds","textFilter","RegExp","filter","$and","length","cursor","totalCount","findPaginated","sort","skip","offset","limit","count","total","Promise","all","_ref3","_id","findOneById","findOne","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/api-enterprise/server/lib/canned-responses.js"],"sourcesContent":["import { CannedResponse } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { hasPermissionAsync } from '../../../../../app/authorization/server/functions/hasPermission';\nimport { getDepartmentsWhichUserCanAccess } from '../../../livechat-enterprise/server/api/lib/departments';\n\nexport async function findAllCannedResponses({ userId }) {\n\t// If the user is an admin or livechat manager, get his own responses and all responses from all departments\n\tif (await hasPermissionAsync(userId, 'view-all-canned-responses')) {\n\t\tconst cannedResponses = await CannedResponse.find({\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\tscope: 'user',\n\t\t\t\t\tuserId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tscope: 'department',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tscope: 'global',\n\t\t\t\t},\n\t\t\t],\n\t\t}).toArray();\n\t\treturn cannedResponses;\n\t}\n\n\t// Last scenario: user is an agent, so get his own responses and those from the departments he is in\n\tconst accessibleDepartments = await getDepartmentsWhichUserCanAccess(userId, true);\n\n\tconst cannedResponses = await CannedResponse.find({\n\t\t$or: [\n\t\t\t{\n\t\t\t\tscope: 'user',\n\t\t\t\tuserId,\n\t\t\t},\n\t\t\t{\n\t\t\t\tscope: 'department',\n\t\t\t\tdepartmentId: {\n\t\t\t\t\t$in: accessibleDepartments,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tscope: 'global',\n\t\t\t},\n\t\t],\n\t}).toArray();\n\n\treturn cannedResponses;\n}\n\nexport async function findAllCannedResponsesFilter({ userId, shortcut, text, departmentId, scope, createdBy, tags = [], options = {} }) {\n\tlet extraFilter = [];\n\t// if user cannot see all, filter to private + public + departments user is in\n\tif (!(await hasPermissionAsync(userId, 'view-all-canned-responses'))) {\n\t\tconst accessibleDepartments = await getDepartmentsWhichUserCanAccess(userId, true);\n\t\tconst isDepartmentInScope = (departmentId) => !!accessibleDepartments.includes(departmentId);\n\n\t\tconst departmentIds = departmentId && isDepartmentInScope(departmentId) ? [departmentId] : accessibleDepartments;\n\n\t\textraFilter = [\n\t\t\t{\n\t\t\t\t$or: [\n\t\t\t\t\t{\n\t\t\t\t\t\tscope: 'user',\n\t\t\t\t\t\tuserId,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tscope: 'department',\n\t\t\t\t\t\tdepartmentId: {\n\t\t\t\t\t\t\t$in: departmentIds,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tscope: 'global',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\t}\n\n\tif (departmentId) {\n\t\textraFilter = [\n\t\t\t{\n\t\t\t\tdepartmentId,\n\t\t\t},\n\t\t];\n\t}\n\n\tconst textFilter = new RegExp(escapeRegExp(text), 'i');\n\n\tlet filter = {\n\t\t$and: [\n\t\t\t...(shortcut ? [{ shortcut }] : []),\n\t\t\t...(text ? [{ $or: [{ shortcut: textFilter }, { text: textFilter }] }] : []),\n\t\t\t...(scope ? [{ scope }] : []),\n\t\t\t...(createdBy ? [{ 'createdBy._id': createdBy }] : []),\n\t\t\t...(tags.length\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttags: {\n\t\t\t\t\t\t\t\t$in: tags,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t  ]\n\t\t\t\t: []),\n\t\t\t...extraFilter,\n\t\t],\n\t};\n\n\tif (!filter.$and.length) {\n\t\tfilter = {};\n\t}\n\n\tconst { cursor, totalCount } = CannedResponse.findPaginated(filter, {\n\t\tsort: options.sort || { shortcut: 1 },\n\t\tskip: options.offset,\n\t\tlimit: options.count,\n\t});\n\tconst [cannedResponses, total] = await Promise.all([cursor.toArray(), totalCount]);\n\treturn {\n\t\tcannedResponses,\n\t\ttotal,\n\t};\n}\n\nexport async function findOneCannedResponse({ userId, _id }) {\n\tif (await hasPermissionAsync(userId, 'view-all-canned-responses')) {\n\t\treturn CannedResponse.findOneById(_id);\n\t}\n\n\tconst accessibleDepartments = await getDepartmentsWhichUserCanAccess(userId, true);\n\n\tconst filter = {\n\t\t_id,\n\t\t$or: [\n\t\t\t{\n\t\t\t\tscope: 'user',\n\t\t\t\tuserId,\n\t\t\t},\n\t\t\t{\n\t\t\t\tscope: 'department',\n\t\t\t\tdepartmentId: {\n\t\t\t\t\t$in: accessibleDepartments,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tscope: 'global',\n\t\t\t},\n\t\t],\n\t};\n\n\treturn CannedResponse.findOne(filter);\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"1cea8239724fbf02ea648bac674280bc31b26c16"}
