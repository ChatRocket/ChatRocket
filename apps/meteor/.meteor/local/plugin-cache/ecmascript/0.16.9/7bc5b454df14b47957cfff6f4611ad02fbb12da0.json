{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/imports/client/poly1305-js/lib/poly1305.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/client/poly1305-js/lib/poly1305.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/imports/client/poly1305-js/lib/poly1305.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/imports/client/poly1305-js/lib/poly1305.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/client/poly1305-js/lib/poly1305.js"}},"code":"\"use strict\";\n\n!function (module1) {\n  const BigInteger = require('big-integer');\n  const crypto = require('crypto');\n  const Util = require('./util');\n  const BLOCK_SIZE = 16;\n  module.exports = class Poly1305 {\n    /**\r\n     * @param {Buffer} message\r\n     * @param {Buffer} key\r\n     * @return {Promise<Buffer>}\r\n     */\n    static async onetimeauth(message, key) {\n      if (!Buffer.isBuffer(message)) {\n        message = Buffer.from(message);\n      }\n      let self = new Poly1305(key);\n      await self.update(message);\n      return await self.finish();\n    }\n\n    /**\r\n     * @param {Buffer} message\r\n     * @param {Buffer} key\r\n     * @param {Buffer} tag\r\n     * @return {Promise<boolean>}\r\n     */\n    static async onetimeauth_verify(message, key, tag) {\n      if (!Buffer.isBuffer(message)) {\n        message = Buffer.from(message);\n      }\n      let self = new Poly1305(key);\n      await self.update(message);\n      let calc = await self.finish();\n      return crypto.timingSafeEqual(calc, tag);\n    }\n\n    /**\r\n     * @param {Buffer} key\r\n     */\n    constructor(key) {\n      if (typeof key === 'undefined') {\n        this.buffer = Buffer.alloc(16, 0);\n        this.h = new Uint32Array(5);\n        this.r = [0, 0, 0, 0, 0];\n        this.pad = [0, 0, 0, 0];\n        this.leftover = 0;\n        this.final = false;\n        return;\n      }\n      if (!Buffer.isBuffer(key)) {\n        throw new TypeError(\"Poly1305 key must be a Buffer (argument 1)\");\n      }\n      if (key.length !== 32) {\n        throw new Error(\"Poly1305 requires a 32-byte key\");\n      }\n      this.buffer = Buffer.alloc(16, 0);\n      this.r = [Util.load32_le(key.slice(0, 4)) & 0x03ffffff, Util.load32_le(key.slice(3, 7)) >>> 2 & 0x03ffff03, Util.load32_le(key.slice(6, 10)) >>> 4 & 0x03ffc0ff, Util.load32_le(key.slice(9, 13)) >>> 6 & 0x03f03fff, Util.load32_le(key.slice(12, 16)) >>> 8 & 0x000fffff];\n      this.h = new Uint32Array(5);\n      this.pad = [Util.load32_le(key.slice(16, 20)), Util.load32_le(key.slice(20, 24)), Util.load32_le(key.slice(24, 28)), Util.load32_le(key.slice(28, 32))];\n      this.leftover = 0;\n      this.final = false;\n    }\n\n    /**\r\n     * Inspired by PHP's hash_copy()\r\n     *\r\n     * @return {Poly1305}\r\n     */\n    clone() {\n      let clone = new Poly1305();\n      this.buffer.copy(clone.buffer, 0, 0, 16);\n      clone.r = this.r;\n      for (let i = 0; i < 5; i++) {\n        clone.h[i] = this.h[i];\n      }\n      for (let i = 0; i < 4; i++) {\n        clone.pad[i] = this.pad[i];\n      }\n      clone.leftover = this.leftover;\n      clone.final = this.final;\n      return clone;\n    }\n\n    /**\r\n     *\r\n     * @param {Buffer} message\r\n     * @param {number} bytes\r\n     * @return {Promise<void>}\r\n     */\n    async blocks(message, bytes) {\n      if (message.length < 16) {\n        throw new Error('Out of range exception');\n      }\n      let hibit = this.final ? 0 : 1 << 24;\n      let [r0, r1, r2, r3, r4] = this.r;\n      let s1 = r1 * 5;\n      let s2 = r2 * 5;\n      let s3 = r3 * 5;\n      let s4 = r4 * 5;\n      let h0 = BigInteger(this.h[0]);\n      let h1 = BigInteger(this.h[1]);\n      let h2 = BigInteger(this.h[2]);\n      let h3 = BigInteger(this.h[3]);\n      let h4 = BigInteger(this.h[4]);\n      let offset = 0;\n      let c, d0, d1, d2, d3, d4;\n      while (bytes >= BLOCK_SIZE) {\n        /* h += m[i] */\n        h0 = h0.add(Util.load32_le(message.slice(offset, offset + 4)) & 0x03ffffff);\n        h1 = h1.add(Util.load32_le(message.slice(offset + 3, offset + 7)) >>> 2 & 0x03ffffff);\n        h2 = h2.add(Util.load32_le(message.slice(offset + 6, offset + 10)) >>> 4 & 0x03ffffff);\n        h3 = h3.add(Util.load32_le(message.slice(offset + 9, offset + 13)) >>> 6 & 0x03ffffff);\n        h4 = h4.add(Util.load32_le(message.slice(offset + 12, offset + 16)) >>> 8 | hibit);\n\n        /* h *= r */\n        // d0 = ((h0 * r0) + (s4 * h1) + (s3 * h2) + (s2 * h3) + (s1 * h4));\n        d0 = BigInteger(h0.times(BigInteger(r0))).plus(BigInteger(s4).times(h1)).plus(BigInteger(s3).times(h2)).plus(BigInteger(s2).times(h3)).plus(BigInteger(s1).times(h4));\n\n        // d1 = ((h0 * r1) + (h1 * r0) + (s4 * h2) + (s3 * h3) + (s2 * h4));\n        d1 = BigInteger(h0.times(BigInteger(r1))).plus(h1.times(BigInteger(r0))).plus(BigInteger(s4).times(h2)).plus(BigInteger(s3).times(h3)).plus(BigInteger(s2).times(h4));\n\n        // d2 = ((h0 * r2) + (h1 * r1) + (h2 * r0) + (s4 * h3) + (s3 * h4));\n        d2 = BigInteger(h0.times(BigInteger(r2))).plus(h1.times(BigInteger(r1))).plus(h2.times(BigInteger(r0))).plus(BigInteger(s4).times(h3)).plus(BigInteger(s3).times(h4));\n\n        // d3 = ((h0 * r3) + (h1 * r2) + (h2 * r1) + (h3 * r0) + (s4 * h4));\n        d3 = BigInteger(h0.times(BigInteger(r3))).plus(h1.times(BigInteger(r2))).plus(h2.times(BigInteger(r1))).plus(h3.times(BigInteger(r0))).plus(BigInteger(s4).times(h4));\n        // d4 = ((h0 * r4) + (h1 * r3) + (h2 * r2) + (h3 * r1) + (h4 * r0));\n        d4 = BigInteger(h0.times(BigInteger(r4))).plus(h1.times(BigInteger(r3))).plus(h2.times(BigInteger(r2))).plus(h3.times(BigInteger(r1))).plus(h4.times(BigInteger(r0)));\n\n        /* (partial) h %= p */\n        c = d0.shiftRight(26);\n        h0 = d0.and(0x3ffffff);\n        d1 = d1.add(c);\n        c = d1.shiftRight(26);\n        h1 = d1.and(0x3ffffff);\n        d2 = d2.add(c);\n        c = d2.shiftRight(26);\n        h2 = d2.and(0x3ffffff);\n        d3 = d3.add(c);\n        c = d3.shiftRight(26);\n        h3 = d3.and(0x3ffffff);\n        d4 = d4.add(c);\n        c = d4.shiftRight(26);\n        h4 = d4.and(0x3ffffff);\n        h0 = h0.add(c.multiply(5).toJSNumber());\n        c = h0.shiftRight(26);\n        h0 = h0.and(0x3ffffff);\n        h1 = h1.add(c);\n        offset += BLOCK_SIZE;\n        bytes -= BLOCK_SIZE;\n      }\n      this.h[0] = h0.toJSNumber() >>> 0;\n      this.h[1] = h1.toJSNumber() >>> 0;\n      this.h[2] = h2.toJSNumber() >>> 0;\n      this.h[3] = h3.toJSNumber() >>> 0;\n      this.h[4] = h4.toJSNumber() >>> 0;\n    }\n\n    /**\r\n     *\r\n     * @param {Buffer} message\r\n     * @return {Promise<Poly1305>}\r\n     */\n    async update(message) {\n      let want;\n      let bytes = message.length;\n      if (this.leftover > 0) {\n        want = BLOCK_SIZE - this.leftover;\n        if (want > bytes) {\n          want = bytes;\n        }\n        message.slice(0, want).copy(this.buffer, this.leftover, 0);\n        this.leftover += want;\n        if (this.leftover < BLOCK_SIZE) {\n          // We still don't have enough to run this.blocks()\n          return this;\n        }\n        await this.blocks(this.buffer, BLOCK_SIZE);\n        this.leftover -= BLOCK_SIZE;\n        bytes -= want;\n        message = message.slice(want);\n      }\n\n      /* process full blocks */\n      if (bytes >= BLOCK_SIZE) {\n        want = bytes & ~(BLOCK_SIZE - 1);\n        if (want >= BLOCK_SIZE) {\n          await this.blocks(message.slice(0, want), want);\n          message = message.slice(want);\n          bytes = message.length;\n        }\n      }\n\n      /* store leftover */\n      if (bytes > 0) {\n        message.slice(0, bytes).copy(this.buffer, this.leftover, 0);\n        this.leftover += bytes;\n      }\n      return this;\n    }\n\n    /**\r\n     * @return {Promise<Buffer>}\r\n     */\n    async finish() {\n      let c, g0, g1, g2, g3, g4, h0, h1, h2, h3, h4, mask;\n      if (this.leftover) {\n        let i = this.leftover;\n        this.buffer[i++] = 1;\n        for (; i < BLOCK_SIZE; i++) {\n          this.buffer[i] = 0;\n        }\n        this.final = true;\n        await this.blocks(this.buffer, BLOCK_SIZE);\n      }\n      h0 = this.h[0];\n      h1 = this.h[1];\n      h2 = this.h[2];\n      h3 = this.h[3];\n      h4 = this.h[4];\n      c = h1 >>> 26;\n      h1 &= 0x3ffffff;\n      h2 += c;\n      c = h2 >>> 26;\n      h2 &= 0x3ffffff;\n      h3 += c;\n      c = h3 >>> 26;\n      h3 &= 0x3ffffff;\n      h4 += c;\n      c = h4 >>> 26;\n      h4 &= 0x3ffffff;\n      h0 += c * 5;\n      c = h0 >>> 26;\n      h0 &= 0x3ffffff;\n      h1 += c;\n\n      /* compute h + -p */\n      g0 = h0 + 5;\n      c = g0 >>> 26;\n      g0 &= 0x3ffffff;\n      g1 = h1 + c;\n      c = g1 >>> 26;\n      g1 &= 0x3ffffff;\n      g2 = h2 + c;\n      c = g2 >>> 26;\n      g2 &= 0x3ffffff;\n      g3 = h2 + c;\n      c = g3 >>> 26;\n      g3 &= 0x3ffffff;\n      g4 = h4 + c - (1 << 26) >>> 0;\n\n      /* select h if h < p, or h + -p if h >= p */\n      mask = (g4 >>> 31) - 1;\n      g0 &= mask;\n      g1 &= mask;\n      g2 &= mask;\n      g3 &= mask;\n      g4 &= mask;\n      mask = ~mask >>> 0;\n      h0 = h0 & mask | g0;\n      h1 = h1 & mask | g1;\n      h2 = h2 & mask | g2;\n      h3 = h3 & mask | g3;\n      h4 = h4 & mask | g4;\n\n      /* h = h % (2^128) */\n      h0 = (h0 | h1 << 26) >>> 0;\n      h1 = (h1 >>> 6 | h2 << 20) >>> 0;\n      h2 = (h2 >>> 12 | h3 << 14) >>> 0;\n      h3 = (h3 >>> 18 | h4 << 8) >>> 0;\n      [h0, c] = Util.add_overflow(h0, this.pad[0]);\n      [h1, c] = Util.add_overflow(h1, this.pad[1], c);\n      [h2, c] = Util.add_overflow(h2, this.pad[2], c);\n      [h3, c] = Util.add_overflow(h3, this.pad[3], c);\n      return Buffer.concat([Util.store32_le(h0 >>> 0), Util.store32_le(h1 >>> 0), Util.store32_le(h2 >>> 0), Util.store32_le(h3 >>> 0)]);\n    }\n  };\n}.call(this, module);","map":{"version":3,"names":["module1","BigInteger","require","crypto","Util","BLOCK_SIZE","module","exports","Poly1305","onetimeauth","message","key","Buffer","isBuffer","from","self","update","finish","onetimeauth_verify","tag","calc","timingSafeEqual","constructor","buffer","alloc","h","Uint32Array","r","pad","leftover","final","TypeError","length","Error","load32_le","slice","clone","copy","i","blocks","bytes","hibit","r0","r1","r2","r3","r4","s1","s2","s3","s4","h0","h1","h2","h3","h4","offset","c","d0","d1","d2","d3","d4","add","times","plus","shiftRight","and","multiply","toJSNumber","want","g0","g1","g2","g3","g4","mask","add_overflow","concat","store32_le","call"],"sources":["imports/client/poly1305-js/lib/poly1305.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst BigInteger = require('big-integer');\r\nconst crypto = require('crypto');\r\nconst Util = require('./util');\r\n\r\nconst BLOCK_SIZE = 16;\r\n\r\nmodule.exports = class Poly1305\r\n{\r\n    /**\r\n     * @param {Buffer} message\r\n     * @param {Buffer} key\r\n     * @return {Promise<Buffer>}\r\n     */\r\n    static async onetimeauth(message, key)\r\n    {\r\n        if (!Buffer.isBuffer(message)) {\r\n            message = Buffer.from(message);\r\n        }\r\n        let self = new Poly1305(key);\r\n        await self.update(message);\r\n        return await self.finish();\r\n    }\r\n\r\n    /**\r\n     * @param {Buffer} message\r\n     * @param {Buffer} key\r\n     * @param {Buffer} tag\r\n     * @return {Promise<boolean>}\r\n     */\r\n    static async onetimeauth_verify(message, key, tag)\r\n    {\r\n        if (!Buffer.isBuffer(message)) {\r\n            message = Buffer.from(message);\r\n        }\r\n        let self = new Poly1305(key);\r\n        await self.update(message);\r\n        let calc = await self.finish();\r\n        return crypto.timingSafeEqual(calc, tag);\r\n    }\r\n\r\n    /**\r\n     * @param {Buffer} key\r\n     */\r\n    constructor(key)\r\n    {\r\n        if (typeof (key) === 'undefined') {\r\n            this.buffer = Buffer.alloc(16, 0);\r\n            this.h = new Uint32Array(5);\r\n            this.r = [0,0,0,0,0];\r\n            this.pad = [0,0,0,0];\r\n            this.leftover = 0;\r\n            this.final = false;\r\n            return;\r\n        }\r\n        if (!Buffer.isBuffer(key)) {\r\n            throw new TypeError(\"Poly1305 key must be a Buffer (argument 1)\");\r\n        }\r\n        if (key.length !== 32) {\r\n            throw new Error(\"Poly1305 requires a 32-byte key\");\r\n        }\r\n        this.buffer = Buffer.alloc(16, 0);\r\n\r\n        this.r = [\r\n            Util.load32_le(key.slice(0, 4))           & 0x03ffffff,\r\n            (Util.load32_le(key.slice(3, 7)) >>> 2)   & 0x03ffff03,\r\n            (Util.load32_le(key.slice(6, 10)) >>> 4)  & 0x03ffc0ff,\r\n            (Util.load32_le(key.slice(9, 13)) >>> 6)  & 0x03f03fff,\r\n            (Util.load32_le(key.slice(12, 16)) >>> 8) & 0x000fffff\r\n        ];\r\n        this.h = new Uint32Array(5);\r\n        this.pad = [\r\n            Util.load32_le(key.slice(16, 20)),\r\n            Util.load32_le(key.slice(20, 24)),\r\n            Util.load32_le(key.slice(24, 28)),\r\n            Util.load32_le(key.slice(28, 32))\r\n        ];\r\n\r\n        this.leftover = 0;\r\n        this.final = false;\r\n    }\r\n\r\n    /**\r\n     * Inspired by PHP's hash_copy()\r\n     *\r\n     * @return {Poly1305}\r\n     */\r\n    clone()\r\n    {\r\n        let clone = new Poly1305();\r\n        this.buffer.copy(clone.buffer, 0, 0, 16);\r\n        clone.r = this.r;\r\n        for (let i = 0; i < 5; i++) {\r\n            clone.h[i] = this.h[i];\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            clone.pad[i] = this.pad[i];\r\n        }\r\n        clone.leftover = this.leftover;\r\n        clone.final = this.final;\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Buffer} message\r\n     * @param {number} bytes\r\n     * @return {Promise<void>}\r\n     */\r\n    async blocks(message, bytes)\r\n    {\r\n        if (message.length < 16) {\r\n            throw new Error('Out of range exception');\r\n        }\r\n\r\n        let hibit = this.final ? 0 : 1 << 24;\r\n        let [r0, r1, r2, r3, r4] = this.r;\r\n\r\n        let s1 = r1 * 5;\r\n        let s2 = r2 * 5;\r\n        let s3 = r3 * 5;\r\n        let s4 = r4 * 5;\r\n\r\n        let h0 = BigInteger(this.h[0]);\r\n        let h1 = BigInteger(this.h[1]);\r\n        let h2 = BigInteger(this.h[2]);\r\n        let h3 = BigInteger(this.h[3]);\r\n        let h4 = BigInteger(this.h[4]);\r\n\r\n        let offset = 0;\r\n        let c, d0, d1, d2, d3, d4;\r\n        while (bytes >= BLOCK_SIZE) {\r\n            /* h += m[i] */\r\n            h0 = h0.add((Util.load32_le(message.slice(offset,     offset + 4)))        & 0x03ffffff);\r\n            h1 = h1.add((Util.load32_le(message.slice(offset + 3, offset + 7)) >>> 2)  & 0x03ffffff);\r\n            h2 = h2.add((Util.load32_le(message.slice(offset + 6, offset + 10)) >>> 4) & 0x03ffffff);\r\n            h3 = h3.add((Util.load32_le(message.slice(offset + 9, offset + 13)) >>> 6) & 0x03ffffff);\r\n            h4 = h4.add((Util.load32_le(message.slice(offset + 12, offset + 16)) >>> 8) | hibit);\r\n\r\n            /* h *= r */\r\n            // d0 = ((h0 * r0) + (s4 * h1) + (s3 * h2) + (s2 * h3) + (s1 * h4));\r\n            d0 = BigInteger(h0.times(BigInteger(r0)))\r\n                .plus(BigInteger(s4).times(h1))\r\n                .plus(BigInteger(s3).times(h2))\r\n                .plus(BigInteger(s2).times(h3))\r\n                .plus(BigInteger(s1).times(h4));\r\n\r\n            // d1 = ((h0 * r1) + (h1 * r0) + (s4 * h2) + (s3 * h3) + (s2 * h4));\r\n            d1 = BigInteger(h0.times(BigInteger(r1)))\r\n                .plus(h1.times(BigInteger(r0)))\r\n                .plus(BigInteger(s4).times(h2))\r\n                .plus(BigInteger(s3).times(h3))\r\n                .plus(BigInteger(s2).times(h4));\r\n\r\n            // d2 = ((h0 * r2) + (h1 * r1) + (h2 * r0) + (s4 * h3) + (s3 * h4));\r\n            d2 = BigInteger(h0.times(BigInteger(r2)))\r\n                .plus(h1.times(BigInteger(r1)))\r\n                .plus(h2.times(BigInteger(r0)))\r\n                .plus(BigInteger(s4).times(h3))\r\n                .plus(BigInteger(s3).times(h4));\r\n\r\n            // d3 = ((h0 * r3) + (h1 * r2) + (h2 * r1) + (h3 * r0) + (s4 * h4));\r\n            d3 = BigInteger(h0.times(BigInteger(r3)))\r\n                .plus(h1.times(BigInteger(r2)))\r\n                .plus(h2.times(BigInteger(r1)))\r\n                .plus(h3.times(BigInteger(r0)))\r\n                .plus(BigInteger(s4).times(h4));\r\n            // d4 = ((h0 * r4) + (h1 * r3) + (h2 * r2) + (h3 * r1) + (h4 * r0));\r\n            d4 = BigInteger(h0.times(BigInteger(r4)))\r\n                .plus(h1.times(BigInteger(r3)))\r\n                .plus(h2.times(BigInteger(r2)))\r\n                .plus(h3.times(BigInteger(r1)))\r\n                .plus(h4.times(BigInteger(r0)));\r\n\r\n            /* (partial) h %= p */\r\n            c = d0.shiftRight(26);\r\n            h0 = d0.and(0x3ffffff);\r\n            d1 = d1.add(c);\r\n            c = d1.shiftRight(26);\r\n            h1 = d1.and(0x3ffffff);\r\n            d2 = d2.add(c);\r\n            c = d2.shiftRight(26);\r\n            h2 = d2.and(0x3ffffff);\r\n            d3 = d3.add(c);\r\n            c = d3.shiftRight(26);\r\n            h3 = d3.and(0x3ffffff);\r\n            d4 = d4.add(c);\r\n            c = d4.shiftRight(26);\r\n            h4 = d4.and(0x3ffffff);\r\n            h0 = h0.add(c.multiply(5).toJSNumber());\r\n\r\n            c = h0.shiftRight(26);\r\n            h0 = h0.and(0x3ffffff);\r\n            h1 = h1.add(c);\r\n\r\n            offset += BLOCK_SIZE;\r\n            bytes -= BLOCK_SIZE;\r\n        }\r\n        this.h[0] = h0.toJSNumber() >>> 0;\r\n        this.h[1] = h1.toJSNumber() >>> 0;\r\n        this.h[2] = h2.toJSNumber() >>> 0;\r\n        this.h[3] = h3.toJSNumber() >>> 0;\r\n        this.h[4] = h4.toJSNumber() >>> 0;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Buffer} message\r\n     * @return {Promise<Poly1305>}\r\n     */\r\n    async update(message)\r\n    {\r\n        let want;\r\n        let bytes = message.length;\r\n\r\n        if (this.leftover > 0) {\r\n            want = BLOCK_SIZE - this.leftover;\r\n            if (want > bytes) {\r\n                want = bytes;\r\n            }\r\n            message.slice(0, want).copy(this.buffer, this.leftover, 0);\r\n            this.leftover += want;\r\n            if (this.leftover < BLOCK_SIZE) {\r\n                // We still don't have enough to run this.blocks()\r\n                return this;\r\n            }\r\n            await this.blocks(this.buffer, BLOCK_SIZE);\r\n            this.leftover -= BLOCK_SIZE;\r\n            bytes -= want;\r\n            message = message.slice(want);\r\n        }\r\n\r\n        /* process full blocks */\r\n        if (bytes >= BLOCK_SIZE) {\r\n            want = bytes & ~(BLOCK_SIZE - 1);\r\n            if (want >= BLOCK_SIZE) {\r\n                await this.blocks(message.slice(0, want), want);\r\n                message = message.slice(want);\r\n                bytes = message.length;\r\n            }\r\n        }\r\n\r\n        /* store leftover */\r\n        if (bytes > 0) {\r\n            message.slice(0, bytes).copy(this.buffer, this.leftover, 0);\r\n            this.leftover += bytes;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @return {Promise<Buffer>}\r\n     */\r\n    async finish()\r\n    {\r\n        let c, g0, g1, g2, g3, g4, h0, h1, h2, h3, h4, mask;\r\n        if (this.leftover) {\r\n            let i = this.leftover;\r\n            this.buffer[i++] = 1;\r\n            for (; i < BLOCK_SIZE; i++) {\r\n                this.buffer[i] = 0;\r\n            }\r\n            this.final = true;\r\n            await this.blocks(this.buffer, BLOCK_SIZE);\r\n        }\r\n\r\n        h0 = this.h[0];\r\n        h1 = this.h[1];\r\n        h2 = this.h[2];\r\n        h3 = this.h[3];\r\n        h4 = this.h[4];\r\n\r\n        c = h1 >>> 26;\r\n        h1 &= 0x3ffffff;\r\n        h2 += c;\r\n        c = h2 >>> 26;\r\n        h2 &= 0x3ffffff;\r\n        h3 += c;\r\n        c = h3 >>> 26;\r\n        h3 &= 0x3ffffff;\r\n        h4 += c;\r\n        c = h4 >>> 26;\r\n        h4 &= 0x3ffffff;\r\n        h0 += c * 5;\r\n        c = h0 >>> 26;\r\n        h0 &= 0x3ffffff;\r\n        h1 += c;\r\n\r\n        /* compute h + -p */\r\n        g0 = h0 + 5;\r\n        c = g0 >>> 26;\r\n        g0 &= 0x3ffffff;\r\n\r\n        g1 = h1 + c;\r\n        c = g1 >>> 26;\r\n        g1 &= 0x3ffffff;\r\n\r\n        g2 = h2 + c;\r\n        c = g2 >>> 26;\r\n        g2 &= 0x3ffffff;\r\n\r\n        g3 = h2 + c;\r\n        c = g3 >>> 26;\r\n        g3 &= 0x3ffffff;\r\n\r\n        g4 = (h4 +c - (1 << 26)) >>> 0;\r\n\r\n        /* select h if h < p, or h + -p if h >= p */\r\n        mask = (g4 >>> 31) - 1;\r\n\r\n        g0 &= mask;\r\n        g1 &= mask;\r\n        g2 &= mask;\r\n        g3 &= mask;\r\n        g4 &= mask;\r\n\r\n        mask = ~mask >>> 0;\r\n        h0 = (h0 & mask) | g0;\r\n        h1 = (h1 & mask) | g1;\r\n        h2 = (h2 & mask) | g2;\r\n        h3 = (h3 & mask) | g3;\r\n        h4 = (h4 & mask) | g4;\r\n\r\n        /* h = h % (2^128) */\r\n        h0 = ((h0) | (h1 << 26)) >>> 0;\r\n        h1 = ((h1 >>>  6) | (h2 << 20)) >>> 0;\r\n        h2 = ((h2 >>> 12) | (h3 << 14)) >>> 0;\r\n        h3 = ((h3 >>> 18) | (h4 <<  8)) >>> 0;\r\n\r\n        [h0, c] = Util.add_overflow(h0, this.pad[0]);\r\n        [h1, c] = Util.add_overflow(h1, this.pad[1], c);\r\n        [h2, c] = Util.add_overflow(h2, this.pad[2], c);\r\n        [h3, c] = Util.add_overflow(h3, this.pad[3], c);\r\n\r\n        return Buffer.concat([\r\n            Util.store32_le(h0 >>> 0),\r\n            Util.store32_le(h1 >>> 0),\r\n            Util.store32_le(h2 >>> 0),\r\n            Util.store32_le(h3 >>> 0)\r\n        ]);\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"7bc5b454df14b47957cfff6f4611ad02fbb12da0"}
