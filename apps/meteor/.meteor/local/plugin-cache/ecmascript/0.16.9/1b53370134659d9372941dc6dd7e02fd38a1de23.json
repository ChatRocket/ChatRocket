{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/markdown/lib/markdown.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/markdown/lib/markdown.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/markdown/lib/markdown.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/markdown/lib/markdown.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/markdown/lib/markdown.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectDestructuringEmpty;\n    module.link(\"@babel/runtime/helpers/objectDestructuringEmpty\", {\n      default(v) {\n        _objectDestructuringEmpty = v;\n      }\n    }, 0);\n    let _extends;\n    module.link(\"@babel/runtime/helpers/extends\", {\n      default(v) {\n        _extends = v;\n      }\n    }, 1);\n    module.export({\n      Markdown: () => Markdown,\n      filterMarkdown: () => filterMarkdown,\n      createMarkdownMessageRenderer: () => createMarkdownMessageRenderer,\n      createMarkdownNotificationRenderer: () => createMarkdownNotificationRenderer\n    });\n    let escapeHTML;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeHTML(v) {\n        escapeHTML = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let filtered;\n    module.link(\"./parser/filtered/filtered\", {\n      filtered(v) {\n        filtered = v;\n      }\n    }, 2);\n    let code;\n    module.link(\"./parser/original/code\", {\n      code(v) {\n        code = v;\n      }\n    }, 3);\n    let original;\n    module.link(\"./parser/original/original\", {\n      original(v) {\n        original = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const parsers = {\n      original,\n      filtered\n    };\n    class MarkdownClass {\n      parse(text) {\n        const message = {\n          html: escapeHTML(text)\n        };\n        return this.mountTokensBack(this.parseMessageNotEscaped(message)).html;\n      }\n      parseNotEscaped(text) {\n        const message = {\n          html: text\n        };\n        return this.mountTokensBack(this.parseMessageNotEscaped(message)).html;\n      }\n      parseMessageNotEscaped(message) {\n        const options = {\n          rootUrl: Meteor.absoluteUrl()\n        };\n        return parsers.original(message, options);\n      }\n      mountTokensBackRecursively(message, tokenList) {\n        let useHtml = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        const missingTokens = [];\n        if (tokenList.length > 0) {\n          for (const {\n            token,\n            text,\n            noHtml\n          } of tokenList) {\n            if (message.html.indexOf(token) >= 0) {\n              message.html = message.html.replace(token, () => useHtml ? text : noHtml); // Uses lambda so doesn't need to escape $\n            } else {\n              missingTokens.push({\n                token,\n                text,\n                noHtml\n              });\n            }\n          }\n        }\n\n        // If there are tokens that were missing from the string, but the last iteration replaced at least one token, then go again\n        // this is done because one of the tokens may have been hidden by another one\n        if (missingTokens.length > 0 && missingTokens.length < tokenList.length) {\n          this.mountTokensBackRecursively(message, missingTokens, useHtml);\n        }\n      }\n      mountTokensBack(message) {\n        let useHtml = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        if (message.tokens) {\n          this.mountTokensBackRecursively(message, message.tokens, useHtml);\n        }\n        return message;\n      }\n      code() {\n        return code(...arguments);\n      }\n\n      /** @param {string} message */\n      filterMarkdownFromMessage(message) {\n        return parsers.filtered(message);\n      }\n    }\n    const Markdown = new MarkdownClass();\n    const filterMarkdown = message => Markdown.filterMarkdownFromMessage(message);\n    const createMarkdownMessageRenderer = _ref => {\n      let options = _extends({}, (_objectDestructuringEmpty(_ref), _ref));\n      const markedParser = parsers.marked;\n      return function (message) {\n        var _message$html;\n        let useMarkedParser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        if (!(message !== null && message !== void 0 && (_message$html = message.html) !== null && _message$html !== void 0 && _message$html.trim())) {\n          return message;\n        }\n        return useMarkedParser ? markedParser(message, options) : parsers.original(message, options);\n      };\n    };\n    const createMarkdownNotificationRenderer = () => message => parsers.filtered(message);\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectDestructuringEmpty","module","link","default","v","_extends","export","Markdown","filterMarkdown","createMarkdownMessageRenderer","createMarkdownNotificationRenderer","escapeHTML","Meteor","filtered","code","original","__reifyWaitForDeps__","parsers","MarkdownClass","parse","text","message","html","mountTokensBack","parseMessageNotEscaped","parseNotEscaped","options","rootUrl","absoluteUrl","mountTokensBackRecursively","tokenList","useHtml","arguments","length","undefined","missingTokens","token","noHtml","indexOf","replace","push","tokens","filterMarkdownFromMessage","_ref","markedParser","marked","_message$html","useMarkedParser","trim","__reify_async_result__","_reifyError","self","async"],"sources":["app/markdown/lib/markdown.js"],"sourcesContent":["/*\n * Markdown is a named function that will parse markdown syntax\n * @param {Object} message - The message object\n */\nimport { escapeHTML } from '@rocket.chat/string-helpers';\nimport { Meteor } from 'meteor/meteor';\n\nimport { filtered } from './parser/filtered/filtered';\nimport { code } from './parser/original/code';\nimport { original } from './parser/original/original';\n\nconst parsers = {\n\toriginal,\n\tfiltered,\n};\n\nclass MarkdownClass {\n\tparse(text) {\n\t\tconst message = {\n\t\t\thtml: escapeHTML(text),\n\t\t};\n\t\treturn this.mountTokensBack(this.parseMessageNotEscaped(message)).html;\n\t}\n\n\tparseNotEscaped(text) {\n\t\tconst message = {\n\t\t\thtml: text,\n\t\t};\n\t\treturn this.mountTokensBack(this.parseMessageNotEscaped(message)).html;\n\t}\n\n\tparseMessageNotEscaped(message) {\n\t\tconst options = {\n\t\t\trootUrl: Meteor.absoluteUrl(),\n\t\t};\n\n\t\treturn parsers.original(message, options);\n\t}\n\n\tmountTokensBackRecursively(message, tokenList, useHtml = true) {\n\t\tconst missingTokens = [];\n\n\t\tif (tokenList.length > 0) {\n\t\t\tfor (const { token, text, noHtml } of tokenList) {\n\t\t\t\tif (message.html.indexOf(token) >= 0) {\n\t\t\t\t\tmessage.html = message.html.replace(token, () => (useHtml ? text : noHtml)); // Uses lambda so doesn't need to escape $\n\t\t\t\t} else {\n\t\t\t\t\tmissingTokens.push({ token, text, noHtml });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If there are tokens that were missing from the string, but the last iteration replaced at least one token, then go again\n\t\t// this is done because one of the tokens may have been hidden by another one\n\t\tif (missingTokens.length > 0 && missingTokens.length < tokenList.length) {\n\t\t\tthis.mountTokensBackRecursively(message, missingTokens, useHtml);\n\t\t}\n\t}\n\n\tmountTokensBack(message, useHtml = true) {\n\t\tif (message.tokens) {\n\t\t\tthis.mountTokensBackRecursively(message, message.tokens, useHtml);\n\t\t}\n\n\t\treturn message;\n\t}\n\n\tcode(...args) {\n\t\treturn code(...args);\n\t}\n\n\t/** @param {string} message */\n\tfilterMarkdownFromMessage(message) {\n\t\treturn parsers.filtered(message);\n\t}\n}\n\nexport const Markdown = new MarkdownClass();\n\n/** @param {string} message */\nexport const filterMarkdown = (message) => Markdown.filterMarkdownFromMessage(message);\n\nexport const createMarkdownMessageRenderer = ({ ...options }) => {\n\tconst markedParser = parsers.marked;\n\treturn (message, useMarkedParser = false) => {\n\t\tif (!message?.html?.trim()) {\n\t\t\treturn message;\n\t\t}\n\n\t\treturn useMarkedParser ? markedParser(message, options) : parsers.original(message, options);\n\t};\n};\n\nexport const createMarkdownNotificationRenderer = () => (message) => parsers.filtered(message);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"1b53370134659d9372941dc6dd7e02fd38a1de23"}
