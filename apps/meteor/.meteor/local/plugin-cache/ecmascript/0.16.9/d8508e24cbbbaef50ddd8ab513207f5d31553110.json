{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveUser.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/saveUser.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveUser.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveUser.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/saveUser.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      validateUserEditing: () => validateUserEditing,\n      saveUser: () => saveUser\n    });\n    let Apps, AppEvents;\n    module.link(\"@rocket.chat/apps\", {\n      Apps(v) {\n        Apps = v;\n      },\n      AppEvents(v) {\n        AppEvents = v;\n      }\n    }, 0);\n    let isUserFederated;\n    module.link(\"@rocket.chat/core-typings\", {\n      isUserFederated(v) {\n        isUserFederated = v;\n      }\n    }, 1);\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 2);\n    let Gravatar;\n    module.link(\"gravatar\", {\n      default(v) {\n        Gravatar = v;\n      }\n    }, 3);\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 4);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 5);\n    let _;\n    module.link(\"underscore\", {\n      default(v) {\n        _ = v;\n      }\n    }, 6);\n    let callbacks;\n    module.link(\"../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 7);\n    let trim;\n    module.link(\"../../../../lib/utils/stringUtils\", {\n      trim(v) {\n        trim = v;\n      }\n    }, 8);\n    let getNewUserRoles;\n    module.link(\"../../../../server/services/user/lib/getNewUserRoles\", {\n      getNewUserRoles(v) {\n        getNewUserRoles = v;\n      }\n    }, 9);\n    let getRoles;\n    module.link(\"../../../authorization/server\", {\n      getRoles(v) {\n        getRoles = v;\n      }\n    }, 10);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 11);\n    let Mailer;\n    module.link(\"../../../mailer/server/api\", {\n      \"*\"(v) {\n        Mailer = v;\n      }\n    }, 12);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 13);\n    let safeGetMeteorUser;\n    module.link(\"../../../utils/server/functions/safeGetMeteorUser\", {\n      safeGetMeteorUser(v) {\n        safeGetMeteorUser = v;\n      }\n    }, 14);\n    let validateEmailDomain;\n    module.link(\"../lib\", {\n      validateEmailDomain(v) {\n        validateEmailDomain = v;\n      }\n    }, 15);\n    let generatePassword;\n    module.link(\"../lib/generatePassword\", {\n      generatePassword(v) {\n        generatePassword = v;\n      }\n    }, 16);\n    let notifyOnUserChangeById, notifyOnUserChange;\n    module.link(\"../lib/notifyListener\", {\n      notifyOnUserChangeById(v) {\n        notifyOnUserChangeById = v;\n      },\n      notifyOnUserChange(v) {\n        notifyOnUserChange = v;\n      }\n    }, 17);\n    let passwordPolicy;\n    module.link(\"../lib/passwordPolicy\", {\n      passwordPolicy(v) {\n        passwordPolicy = v;\n      }\n    }, 18);\n    let checkEmailAvailability;\n    module.link(\"./checkEmailAvailability\", {\n      checkEmailAvailability(v) {\n        checkEmailAvailability = v;\n      }\n    }, 19);\n    let checkUsernameAvailability;\n    module.link(\"./checkUsernameAvailability\", {\n      checkUsernameAvailability(v) {\n        checkUsernameAvailability = v;\n      }\n    }, 20);\n    let saveUserIdentity;\n    module.link(\"./saveUserIdentity\", {\n      saveUserIdentity(v) {\n        saveUserIdentity = v;\n      }\n    }, 21);\n    let setEmail;\n    module.link(\"./setEmail\", {\n      setEmail(v) {\n        setEmail = v;\n      }\n    }, 22);\n    let setStatusText;\n    module.link(\"./setStatusText\", {\n      setStatusText(v) {\n        setStatusText = v;\n      }\n    }, 23);\n    let setUserAvatar;\n    module.link(\"./setUserAvatar\", {\n      setUserAvatar(v) {\n        setUserAvatar = v;\n      }\n    }, 24);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const MAX_BIO_LENGTH = 260;\n    const MAX_NICKNAME_LENGTH = 120;\n    let html = '';\n    let passwordChangedHtml = '';\n    Meteor.startup(() => {\n      Mailer.getTemplate('Accounts_UserAddedEmail_Email', template => {\n        html = template;\n      });\n      Mailer.getTemplate('Password_Changed_Email', template => {\n        passwordChangedHtml = template;\n      });\n    });\n    async function _sendUserEmail(subject, html, userData) {\n      const email = {\n        to: userData.email,\n        from: settings.get('From_Email'),\n        subject,\n        html,\n        data: {\n          email: userData.email,\n          password: userData.password\n        }\n      };\n      if (typeof userData.name !== 'undefined') {\n        email.data.name = userData.name;\n      }\n      try {\n        await Mailer.send(email);\n      } catch (error) {\n        throw new Meteor.Error('error-email-send-failed', \"Error trying to send email: \".concat(error.message), {\n          function: 'RocketChat.saveUser',\n          message: error.message\n        });\n      }\n    }\n    async function validateUserData(userId, userData) {\n      const existingRoles = _.pluck(await getRoles(), '_id');\n      if (userData.verified && userData._id && userId === userData._id) {\n        throw new Meteor.Error('error-action-not-allowed', 'Editing email verification is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Editing_user'\n        });\n      }\n      if (userData._id && userId !== userData._id && !(await hasPermissionAsync(userId, 'edit-other-user-info'))) {\n        throw new Meteor.Error('error-action-not-allowed', 'Editing user is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Editing_user'\n        });\n      }\n      if (!userData._id && !(await hasPermissionAsync(userId, 'create-user'))) {\n        throw new Meteor.Error('error-action-not-allowed', 'Adding user is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Adding_user'\n        });\n      }\n      if (userData.roles && _.difference(userData.roles, existingRoles).length > 0) {\n        throw new Meteor.Error('error-action-not-allowed', 'The field Roles consist invalid role id', {\n          method: 'insertOrUpdateUser',\n          action: 'Assign_role'\n        });\n      }\n      if (userData.roles && userData.roles.includes('admin') && !(await hasPermissionAsync(userId, 'assign-admin-role'))) {\n        throw new Meteor.Error('error-action-not-allowed', 'Assigning admin is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Assign_admin'\n        });\n      }\n      if (settings.get('Accounts_RequireNameForSignUp') && !userData._id && !trim(userData.name)) {\n        throw new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n          method: 'insertOrUpdateUser',\n          field: 'Name'\n        });\n      }\n      if (!userData._id && !trim(userData.username)) {\n        throw new Meteor.Error('error-the-field-is-required', 'The field Username is required', {\n          method: 'insertOrUpdateUser',\n          field: 'Username'\n        });\n      }\n      let nameValidation;\n      try {\n        nameValidation = new RegExp(\"^\".concat(settings.get('UTF8_User_Names_Validation'), \"$\"));\n      } catch (e) {\n        nameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n      }\n      if (userData.username && !nameValidation.test(userData.username)) {\n        throw new Meteor.Error('error-input-is-not-a-valid-field', \"\".concat(_.escape(userData.username), \" is not a valid username\"), {\n          method: 'insertOrUpdateUser',\n          input: userData.username,\n          field: 'Username'\n        });\n      }\n      if (!userData._id && !userData.password && !userData.setRandomPassword) {\n        throw new Meteor.Error('error-the-field-is-required', 'The field Password is required', {\n          method: 'insertOrUpdateUser',\n          field: 'Password'\n        });\n      }\n      if (!userData._id) {\n        if (!(await checkUsernameAvailability(userData.username))) {\n          throw new Meteor.Error('error-field-unavailable', \"\".concat(_.escape(userData.username), \" is already in use :(\"), {\n            method: 'insertOrUpdateUser',\n            field: userData.username\n          });\n        }\n        if (userData.email && !(await checkEmailAvailability(userData.email))) {\n          throw new Meteor.Error('error-field-unavailable', \"\".concat(_.escape(userData.email), \" is already in use :(\"), {\n            method: 'insertOrUpdateUser',\n            field: userData.email\n          });\n        }\n      }\n    }\n\n    /**\n     * Validate permissions to edit user fields\n     *\n     * @param {string} userId\n     * @param {{ _id: string, roles?: string[], username?: string, name?: string, statusText?: string, email?: string, password?: string}} userData\n     */\n    async function validateUserEditing(userId, userData) {\n      var _user$emails;\n      const editingMyself = userData._id && userId === userData._id;\n      const canEditOtherUserInfo = await hasPermissionAsync(userId, 'edit-other-user-info');\n      const canEditOtherUserPassword = await hasPermissionAsync(userId, 'edit-other-user-password');\n      const user = await Users.findOneById(userData._id);\n      const isEditingUserRoles = (previousRoles, newRoles) => typeof newRoles !== 'undefined' && !_.isEqual(_.sortBy(previousRoles), _.sortBy(newRoles));\n      const isEditingField = (previousValue, newValue) => typeof newValue !== 'undefined' && newValue !== previousValue;\n      if (isEditingUserRoles(user.roles, userData.roles) && !(await hasPermissionAsync(userId, 'assign-roles'))) {\n        throw new Meteor.Error('error-action-not-allowed', 'Assign roles is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Assign_role'\n        });\n      }\n      if (!settings.get('Accounts_AllowUserProfileChange') && !canEditOtherUserInfo && !canEditOtherUserPassword) {\n        throw new Meteor.Error('error-action-not-allowed', 'Edit user profile is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Update_user'\n        });\n      }\n      if (isEditingField(user.username, userData.username) && !settings.get('Accounts_AllowUsernameChange') && (!canEditOtherUserInfo || editingMyself)) {\n        throw new Meteor.Error('error-action-not-allowed', 'Edit username is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Update_user'\n        });\n      }\n      if (isEditingField(user.statusText, userData.statusText) && !settings.get('Accounts_AllowUserStatusMessageChange') && (!canEditOtherUserInfo || editingMyself)) {\n        throw new Meteor.Error('error-action-not-allowed', 'Edit user status is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Update_user'\n        });\n      }\n      if (isEditingField(user.name, userData.name) && !settings.get('Accounts_AllowRealNameChange') && (!canEditOtherUserInfo || editingMyself)) {\n        throw new Meteor.Error('error-action-not-allowed', 'Edit user real name is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Update_user'\n        });\n      }\n      if ((_user$emails = user.emails) !== null && _user$emails !== void 0 && _user$emails[0] && isEditingField(user.emails[0].address, userData.email) && !settings.get('Accounts_AllowEmailChange') && (!canEditOtherUserInfo || editingMyself)) {\n        throw new Meteor.Error('error-action-not-allowed', 'Edit user email is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Update_user'\n        });\n      }\n      if (userData.password && !settings.get('Accounts_AllowPasswordChange') && (!canEditOtherUserPassword || editingMyself)) {\n        throw new Meteor.Error('error-action-not-allowed', 'Edit user password is not allowed', {\n          method: 'insertOrUpdateUser',\n          action: 'Update_user'\n        });\n      }\n    }\n    const handleBio = (updateUser, bio) => {\n      if (bio && bio.trim()) {\n        if (bio.length > MAX_BIO_LENGTH) {\n          throw new Meteor.Error('error-bio-size-exceeded', \"Bio size exceeds \".concat(MAX_BIO_LENGTH, \" characters\"), {\n            method: 'saveUserProfile'\n          });\n        }\n        updateUser.$set = updateUser.$set || {};\n        updateUser.$set.bio = bio;\n      } else {\n        updateUser.$unset = updateUser.$unset || {};\n        updateUser.$unset.bio = 1;\n      }\n    };\n    const handleNickname = (updateUser, nickname) => {\n      if (nickname && nickname.trim()) {\n        if (nickname.length > MAX_NICKNAME_LENGTH) {\n          throw new Meteor.Error('error-nickname-size-exceeded', \"Nickname size exceeds \".concat(MAX_NICKNAME_LENGTH, \" characters\"), {\n            method: 'saveUserProfile'\n          });\n        }\n        updateUser.$set = updateUser.$set || {};\n        updateUser.$set.nickname = nickname;\n      } else {\n        updateUser.$unset = updateUser.$unset || {};\n        updateUser.$unset.nickname = 1;\n      }\n    };\n    const saveNewUser = async function (userData, sendPassword) {\n      await validateEmailDomain(userData.email);\n      const roles = !!userData.roles && userData.roles.length > 0 && userData.roles || getNewUserRoles();\n      const isGuest = roles && roles.length === 1 && roles.includes('guest');\n\n      // insert user\n      const createUser = {\n        username: userData.username,\n        password: userData.password,\n        joinDefaultChannels: userData.joinDefaultChannels,\n        isGuest,\n        globalRoles: roles,\n        skipNewUserRolesSetting: true\n      };\n      if (userData.email) {\n        createUser.email = userData.email;\n      }\n      const _id = await Accounts.createUserAsync(createUser);\n      const updateUser = {\n        $set: _objectSpread(_objectSpread({}, typeof userData.name !== 'undefined' && {\n          name: userData.name\n        }), {}, {\n          settings: userData.settings || {}\n        })\n      };\n      if (typeof userData.requirePasswordChange !== 'undefined') {\n        updateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n      }\n      if (typeof userData.verified === 'boolean') {\n        updateUser.$set['emails.0.verified'] = userData.verified;\n      }\n      handleBio(updateUser, userData.bio);\n      handleNickname(updateUser, userData.nickname);\n      await Users.updateOne({\n        _id\n      }, updateUser);\n      if (userData.sendWelcomeEmail) {\n        await _sendUserEmail(settings.get('Accounts_UserAddedEmail_Subject'), html, userData);\n      }\n      if (sendPassword) {\n        await _sendUserEmail(settings.get('Password_Changed_Email_Subject'), passwordChangedHtml, userData);\n      }\n      userData._id = _id;\n      if (settings.get('Accounts_SetDefaultAvatar') === true && userData.email) {\n        const gravatarUrl = Gravatar.url(userData.email, {\n          default: '404',\n          size: '200',\n          protocol: 'https'\n        });\n        try {\n          await setUserAvatar(userData, gravatarUrl, '', 'url');\n        } catch (e) {\n          // Ignore this error for now, as it not being successful isn't bad\n        }\n      }\n      void notifyOnUserChangeById({\n        clientAction: 'inserted',\n        id: _id\n      });\n      return _id;\n    };\n    const saveUser = async function (userId, userData) {\n      var _Apps$self;\n      const oldUserData = userData._id && (await Users.findOneById(userData._id));\n      if (oldUserData && isUserFederated(oldUserData)) {\n        throw new Meteor.Error('Edit_Federated_User_Not_Allowed', 'Not possible to edit a federated user');\n      }\n      await validateUserData(userId, userData);\n      await callbacks.run('beforeSaveUser', {\n        user: userData,\n        oldUser: oldUserData\n      });\n      let sendPassword = false;\n      if (userData.hasOwnProperty('setRandomPassword')) {\n        if (userData.setRandomPassword) {\n          userData.password = generatePassword();\n          userData.requirePasswordChange = true;\n          sendPassword = true;\n        }\n        delete userData.setRandomPassword;\n      }\n      if (!userData._id) {\n        return saveNewUser(userData, sendPassword);\n      }\n      await validateUserEditing(userId, userData);\n\n      // update user\n      if (userData.hasOwnProperty('username') || userData.hasOwnProperty('name')) {\n        if (!(await saveUserIdentity({\n          _id: userData._id,\n          username: userData.username,\n          name: userData.name,\n          updateUsernameInBackground: true\n        }))) {\n          throw new Meteor.Error('error-could-not-save-identity', 'Could not save user identity', {\n            method: 'saveUser'\n          });\n        }\n      }\n      if (typeof userData.statusText === 'string') {\n        await setStatusText(userData._id, userData.statusText);\n      }\n      if (userData.email) {\n        const shouldSendVerificationEmailToUser = userData.verified !== true;\n        await setEmail(userData._id, userData.email, shouldSendVerificationEmailToUser);\n      }\n      if (userData.password && userData.password.trim() && (await hasPermissionAsync(userId, 'edit-other-user-password')) && passwordPolicy.validate(userData.password)) {\n        await Accounts.setPasswordAsync(userData._id, userData.password.trim());\n      } else {\n        sendPassword = false;\n      }\n      const updateUser = {\n        $set: {},\n        $unset: {}\n      };\n      handleBio(updateUser, userData.bio);\n      handleNickname(updateUser, userData.nickname);\n      if (userData.roles) {\n        updateUser.$set.roles = userData.roles;\n      }\n      if (userData.settings) {\n        updateUser.$set.settings = {\n          preferences: userData.settings.preferences\n        };\n      }\n      if (userData.language) {\n        updateUser.$set.language = userData.language;\n      }\n      if (typeof userData.requirePasswordChange !== 'undefined') {\n        updateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n        if (!userData.requirePasswordChange) {\n          updateUser.$unset.requirePasswordChangeReason = 1;\n        }\n      }\n      if (typeof userData.verified === 'boolean') {\n        updateUser.$set['emails.0.verified'] = userData.verified;\n      }\n      await Users.updateOne({\n        _id: userData._id\n      }, updateUser);\n\n      // App IPostUserUpdated event hook\n      const userUpdated = await Users.findOneById(userData._id);\n      await callbacks.run('afterSaveUser', {\n        user: userUpdated,\n        oldUser: oldUserData\n      });\n      await ((_Apps$self = Apps.self) === null || _Apps$self === void 0 ? void 0 : _Apps$self.triggerEvent(AppEvents.IPostUserUpdated, {\n        user: userUpdated,\n        previousUser: oldUserData,\n        performedBy: await safeGetMeteorUser()\n      }));\n      if (sendPassword) {\n        await _sendUserEmail(settings.get('Password_Changed_Email_Subject'), passwordChangedHtml, userData);\n      }\n      if (typeof userData.verified === 'boolean') {\n        delete userData.verified;\n      }\n      void notifyOnUserChange({\n        clientAction: 'updated',\n        id: userData._id,\n        diff: _objectSpread(_objectSpread({}, userData), {}, {\n          emails: userUpdated.emails\n        })\n      });\n      return true;\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","validateUserEditing","saveUser","Apps","AppEvents","isUserFederated","Users","Gravatar","Accounts","Meteor","_","callbacks","trim","getNewUserRoles","getRoles","hasPermissionAsync","Mailer","*","settings","safeGetMeteorUser","validateEmailDomain","generatePassword","notifyOnUserChangeById","notifyOnUserChange","passwordPolicy","checkEmailAvailability","checkUsernameAvailability","saveUserIdentity","setEmail","setStatusText","setUserAvatar","__reifyWaitForDeps__","MAX_BIO_LENGTH","MAX_NICKNAME_LENGTH","html","passwordChangedHtml","startup","getTemplate","template","_sendUserEmail","subject","userData","email","to","from","get","data","password","name","send","error","Error","concat","message","function","validateUserData","userId","existingRoles","pluck","verified","_id","method","action","roles","difference","length","includes","field","username","nameValidation","RegExp","e","test","escape","input","setRandomPassword","_user$emails","editingMyself","canEditOtherUserInfo","canEditOtherUserPassword","user","findOneById","isEditingUserRoles","previousRoles","newRoles","isEqual","sortBy","isEditingField","previousValue","newValue","statusText","emails","address","handleBio","updateUser","bio","$set","$unset","handleNickname","nickname","saveNewUser","sendPassword","isGuest","createUser","joinDefaultChannels","globalRoles","skipNewUserRolesSetting","createUserAsync","requirePasswordChange","updateOne","sendWelcomeEmail","gravatarUrl","url","size","protocol","clientAction","id","_Apps$self","oldUserData","run","oldUser","hasOwnProperty","updateUsernameInBackground","shouldSendVerificationEmailToUser","validate","setPasswordAsync","preferences","language","requirePasswordChangeReason","userUpdated","self","triggerEvent","IPostUserUpdated","previousUser","performedBy","diff","__reify_async_result__","_reifyError","async"],"sources":["app/lib/server/functions/saveUser.js"],"sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport { isUserFederated } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport Gravatar from 'gravatar';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { getNewUserRoles } from '../../../../server/services/user/lib/getNewUserRoles';\nimport { getRoles } from '../../../authorization/server';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport * as Mailer from '../../../mailer/server/api';\nimport { settings } from '../../../settings/server';\nimport { safeGetMeteorUser } from '../../../utils/server/functions/safeGetMeteorUser';\nimport { validateEmailDomain } from '../lib';\nimport { generatePassword } from '../lib/generatePassword';\nimport { notifyOnUserChangeById, notifyOnUserChange } from '../lib/notifyListener';\nimport { passwordPolicy } from '../lib/passwordPolicy';\nimport { checkEmailAvailability } from './checkEmailAvailability';\nimport { checkUsernameAvailability } from './checkUsernameAvailability';\nimport { saveUserIdentity } from './saveUserIdentity';\nimport { setEmail } from './setEmail';\nimport { setStatusText } from './setStatusText';\nimport { setUserAvatar } from './setUserAvatar';\n\nconst MAX_BIO_LENGTH = 260;\nconst MAX_NICKNAME_LENGTH = 120;\n\nlet html = '';\nlet passwordChangedHtml = '';\nMeteor.startup(() => {\n\tMailer.getTemplate('Accounts_UserAddedEmail_Email', (template) => {\n\t\thtml = template;\n\t});\n\n\tMailer.getTemplate('Password_Changed_Email', (template) => {\n\t\tpasswordChangedHtml = template;\n\t});\n});\n\nasync function _sendUserEmail(subject, html, userData) {\n\tconst email = {\n\t\tto: userData.email,\n\t\tfrom: settings.get('From_Email'),\n\t\tsubject,\n\t\thtml,\n\t\tdata: {\n\t\t\temail: userData.email,\n\t\t\tpassword: userData.password,\n\t\t},\n\t};\n\n\tif (typeof userData.name !== 'undefined') {\n\t\temail.data.name = userData.name;\n\t}\n\n\ttry {\n\t\tawait Mailer.send(email);\n\t} catch (error) {\n\t\tthrow new Meteor.Error('error-email-send-failed', `Error trying to send email: ${error.message}`, {\n\t\t\tfunction: 'RocketChat.saveUser',\n\t\t\tmessage: error.message,\n\t\t});\n\t}\n}\n\nasync function validateUserData(userId, userData) {\n\tconst existingRoles = _.pluck(await getRoles(), '_id');\n\n\tif (userData.verified && userData._id && userId === userData._id) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing email verification is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Editing_user',\n\t\t});\n\t}\n\n\tif (userData._id && userId !== userData._id && !(await hasPermissionAsync(userId, 'edit-other-user-info'))) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing user is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Editing_user',\n\t\t});\n\t}\n\n\tif (!userData._id && !(await hasPermissionAsync(userId, 'create-user'))) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Adding user is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Adding_user',\n\t\t});\n\t}\n\n\tif (userData.roles && _.difference(userData.roles, existingRoles).length > 0) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'The field Roles consist invalid role id', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Assign_role',\n\t\t});\n\t}\n\n\tif (userData.roles && userData.roles.includes('admin') && !(await hasPermissionAsync(userId, 'assign-admin-role'))) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Assigning admin is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Assign_admin',\n\t\t});\n\t}\n\n\tif (settings.get('Accounts_RequireNameForSignUp') && !userData._id && !trim(userData.name)) {\n\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tfield: 'Name',\n\t\t});\n\t}\n\n\tif (!userData._id && !trim(userData.username)) {\n\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Username is required', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tfield: 'Username',\n\t\t});\n\t}\n\n\tlet nameValidation;\n\n\ttry {\n\t\tnameValidation = new RegExp(`^${settings.get('UTF8_User_Names_Validation')}$`);\n\t} catch (e) {\n\t\tnameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n\t}\n\n\tif (userData.username && !nameValidation.test(userData.username)) {\n\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${_.escape(userData.username)} is not a valid username`, {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tinput: userData.username,\n\t\t\tfield: 'Username',\n\t\t});\n\t}\n\n\tif (!userData._id && !userData.password && !userData.setRandomPassword) {\n\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Password is required', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tfield: 'Password',\n\t\t});\n\t}\n\n\tif (!userData._id) {\n\t\tif (!(await checkUsernameAvailability(userData.username))) {\n\t\t\tthrow new Meteor.Error('error-field-unavailable', `${_.escape(userData.username)} is already in use :(`, {\n\t\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\t\tfield: userData.username,\n\t\t\t});\n\t\t}\n\n\t\tif (userData.email && !(await checkEmailAvailability(userData.email))) {\n\t\t\tthrow new Meteor.Error('error-field-unavailable', `${_.escape(userData.email)} is already in use :(`, {\n\t\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\t\tfield: userData.email,\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * Validate permissions to edit user fields\n *\n * @param {string} userId\n * @param {{ _id: string, roles?: string[], username?: string, name?: string, statusText?: string, email?: string, password?: string}} userData\n */\nexport async function validateUserEditing(userId, userData) {\n\tconst editingMyself = userData._id && userId === userData._id;\n\n\tconst canEditOtherUserInfo = await hasPermissionAsync(userId, 'edit-other-user-info');\n\tconst canEditOtherUserPassword = await hasPermissionAsync(userId, 'edit-other-user-password');\n\tconst user = await Users.findOneById(userData._id);\n\n\tconst isEditingUserRoles = (previousRoles, newRoles) =>\n\t\ttypeof newRoles !== 'undefined' && !_.isEqual(_.sortBy(previousRoles), _.sortBy(newRoles));\n\tconst isEditingField = (previousValue, newValue) => typeof newValue !== 'undefined' && newValue !== previousValue;\n\n\tif (isEditingUserRoles(user.roles, userData.roles) && !(await hasPermissionAsync(userId, 'assign-roles'))) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Assign roles is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Assign_role',\n\t\t});\n\t}\n\n\tif (!settings.get('Accounts_AllowUserProfileChange') && !canEditOtherUserInfo && !canEditOtherUserPassword) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Edit user profile is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tisEditingField(user.username, userData.username) &&\n\t\t!settings.get('Accounts_AllowUsernameChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Edit username is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tisEditingField(user.statusText, userData.statusText) &&\n\t\t!settings.get('Accounts_AllowUserStatusMessageChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Edit user status is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tisEditingField(user.name, userData.name) &&\n\t\t!settings.get('Accounts_AllowRealNameChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Edit user real name is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tuser.emails?.[0] &&\n\t\tisEditingField(user.emails[0].address, userData.email) &&\n\t\t!settings.get('Accounts_AllowEmailChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Edit user email is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (userData.password && !settings.get('Accounts_AllowPasswordChange') && (!canEditOtherUserPassword || editingMyself)) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Edit user password is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n}\n\nconst handleBio = (updateUser, bio) => {\n\tif (bio && bio.trim()) {\n\t\tif (bio.length > MAX_BIO_LENGTH) {\n\t\t\tthrow new Meteor.Error('error-bio-size-exceeded', `Bio size exceeds ${MAX_BIO_LENGTH} characters`, {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tupdateUser.$set = updateUser.$set || {};\n\t\tupdateUser.$set.bio = bio;\n\t} else {\n\t\tupdateUser.$unset = updateUser.$unset || {};\n\t\tupdateUser.$unset.bio = 1;\n\t}\n};\n\nconst handleNickname = (updateUser, nickname) => {\n\tif (nickname && nickname.trim()) {\n\t\tif (nickname.length > MAX_NICKNAME_LENGTH) {\n\t\t\tthrow new Meteor.Error('error-nickname-size-exceeded', `Nickname size exceeds ${MAX_NICKNAME_LENGTH} characters`, {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tupdateUser.$set = updateUser.$set || {};\n\t\tupdateUser.$set.nickname = nickname;\n\t} else {\n\t\tupdateUser.$unset = updateUser.$unset || {};\n\t\tupdateUser.$unset.nickname = 1;\n\t}\n};\n\nconst saveNewUser = async function (userData, sendPassword) {\n\tawait validateEmailDomain(userData.email);\n\n\tconst roles = (!!userData.roles && userData.roles.length > 0 && userData.roles) || getNewUserRoles();\n\tconst isGuest = roles && roles.length === 1 && roles.includes('guest');\n\n\t// insert user\n\tconst createUser = {\n\t\tusername: userData.username,\n\t\tpassword: userData.password,\n\t\tjoinDefaultChannels: userData.joinDefaultChannels,\n\t\tisGuest,\n\t\tglobalRoles: roles,\n\t\tskipNewUserRolesSetting: true,\n\t};\n\tif (userData.email) {\n\t\tcreateUser.email = userData.email;\n\t}\n\n\tconst _id = await Accounts.createUserAsync(createUser);\n\n\tconst updateUser = {\n\t\t$set: {\n\t\t\t...(typeof userData.name !== 'undefined' && { name: userData.name }),\n\t\t\tsettings: userData.settings || {},\n\t\t},\n\t};\n\n\tif (typeof userData.requirePasswordChange !== 'undefined') {\n\t\tupdateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n\t}\n\n\tif (typeof userData.verified === 'boolean') {\n\t\tupdateUser.$set['emails.0.verified'] = userData.verified;\n\t}\n\n\thandleBio(updateUser, userData.bio);\n\thandleNickname(updateUser, userData.nickname);\n\n\tawait Users.updateOne({ _id }, updateUser);\n\n\tif (userData.sendWelcomeEmail) {\n\t\tawait _sendUserEmail(settings.get('Accounts_UserAddedEmail_Subject'), html, userData);\n\t}\n\n\tif (sendPassword) {\n\t\tawait _sendUserEmail(settings.get('Password_Changed_Email_Subject'), passwordChangedHtml, userData);\n\t}\n\n\tuserData._id = _id;\n\n\tif (settings.get('Accounts_SetDefaultAvatar') === true && userData.email) {\n\t\tconst gravatarUrl = Gravatar.url(userData.email, {\n\t\t\tdefault: '404',\n\t\t\tsize: '200',\n\t\t\tprotocol: 'https',\n\t\t});\n\n\t\ttry {\n\t\t\tawait setUserAvatar(userData, gravatarUrl, '', 'url');\n\t\t} catch (e) {\n\t\t\t// Ignore this error for now, as it not being successful isn't bad\n\t\t}\n\t}\n\n\tvoid notifyOnUserChangeById({ clientAction: 'inserted', id: _id });\n\n\treturn _id;\n};\n\nexport const saveUser = async function (userId, userData) {\n\tconst oldUserData = userData._id && (await Users.findOneById(userData._id));\n\tif (oldUserData && isUserFederated(oldUserData)) {\n\t\tthrow new Meteor.Error('Edit_Federated_User_Not_Allowed', 'Not possible to edit a federated user');\n\t}\n\n\tawait validateUserData(userId, userData);\n\n\tawait callbacks.run('beforeSaveUser', {\n\t\tuser: userData,\n\t\toldUser: oldUserData,\n\t});\n\n\tlet sendPassword = false;\n\n\tif (userData.hasOwnProperty('setRandomPassword')) {\n\t\tif (userData.setRandomPassword) {\n\t\t\tuserData.password = generatePassword();\n\t\t\tuserData.requirePasswordChange = true;\n\t\t\tsendPassword = true;\n\t\t}\n\n\t\tdelete userData.setRandomPassword;\n\t}\n\n\tif (!userData._id) {\n\t\treturn saveNewUser(userData, sendPassword);\n\t}\n\n\tawait validateUserEditing(userId, userData);\n\n\t// update user\n\tif (userData.hasOwnProperty('username') || userData.hasOwnProperty('name')) {\n\t\tif (\n\t\t\t!(await saveUserIdentity({\n\t\t\t\t_id: userData._id,\n\t\t\t\tusername: userData.username,\n\t\t\t\tname: userData.name,\n\t\t\t\tupdateUsernameInBackground: true,\n\t\t\t}))\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-could-not-save-identity', 'Could not save user identity', {\n\t\t\t\tmethod: 'saveUser',\n\t\t\t});\n\t\t}\n\t}\n\n\tif (typeof userData.statusText === 'string') {\n\t\tawait setStatusText(userData._id, userData.statusText);\n\t}\n\n\tif (userData.email) {\n\t\tconst shouldSendVerificationEmailToUser = userData.verified !== true;\n\t\tawait setEmail(userData._id, userData.email, shouldSendVerificationEmailToUser);\n\t}\n\n\tif (\n\t\tuserData.password &&\n\t\tuserData.password.trim() &&\n\t\t(await hasPermissionAsync(userId, 'edit-other-user-password')) &&\n\t\tpasswordPolicy.validate(userData.password)\n\t) {\n\t\tawait Accounts.setPasswordAsync(userData._id, userData.password.trim());\n\t} else {\n\t\tsendPassword = false;\n\t}\n\n\tconst updateUser = {\n\t\t$set: {},\n\t\t$unset: {},\n\t};\n\n\thandleBio(updateUser, userData.bio);\n\thandleNickname(updateUser, userData.nickname);\n\n\tif (userData.roles) {\n\t\tupdateUser.$set.roles = userData.roles;\n\t}\n\tif (userData.settings) {\n\t\tupdateUser.$set.settings = { preferences: userData.settings.preferences };\n\t}\n\n\tif (userData.language) {\n\t\tupdateUser.$set.language = userData.language;\n\t}\n\n\tif (typeof userData.requirePasswordChange !== 'undefined') {\n\t\tupdateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n\t\tif (!userData.requirePasswordChange) {\n\t\t\tupdateUser.$unset.requirePasswordChangeReason = 1;\n\t\t}\n\t}\n\n\tif (typeof userData.verified === 'boolean') {\n\t\tupdateUser.$set['emails.0.verified'] = userData.verified;\n\t}\n\n\tawait Users.updateOne({ _id: userData._id }, updateUser);\n\n\t// App IPostUserUpdated event hook\n\tconst userUpdated = await Users.findOneById(userData._id);\n\n\tawait callbacks.run('afterSaveUser', {\n\t\tuser: userUpdated,\n\t\toldUser: oldUserData,\n\t});\n\n\tawait Apps.self?.triggerEvent(AppEvents.IPostUserUpdated, {\n\t\tuser: userUpdated,\n\t\tpreviousUser: oldUserData,\n\t\tperformedBy: await safeGetMeteorUser(),\n\t});\n\n\tif (sendPassword) {\n\t\tawait _sendUserEmail(settings.get('Password_Changed_Email_Subject'), passwordChangedHtml, userData);\n\t}\n\n\tif (typeof userData.verified === 'boolean') {\n\t\tdelete userData.verified;\n\t}\n\tvoid notifyOnUserChange({\n\t\tclientAction: 'updated',\n\t\tid: userData._id,\n\t\tdiff: {\n\t\t\t...userData,\n\t\t\temails: userUpdated.emails,\n\t\t},\n\t});\n\n\treturn true;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d8508e24cbbbaef50ddd8ab513207f5d31553110"}
