{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/oauth/oauth_client.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/oauth/oauth_client.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/oauth/oauth_client.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/packages/oauth/oauth_client.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/oauth/oauth_client.js"}},"code":"// credentialToken -> credentialSecret. You must provide both the\n// credentialToken and the credentialSecret to retrieve an access token from\n// the _pendingCredentials collection.\nvar credentialSecrets = {};\nOAuth = {};\nOAuth.showPopup = function (url, callback, dimensions) {\n  throw new Error(\"OAuth.showPopup must be implemented on this arch.\");\n};\n\n// Determine the login style (popup or redirect) for this login flow.\n//\n//\nOAuth._loginStyle = function (service, config, options) {\n  if (Meteor.isCordova) {\n    return \"popup\";\n  }\n  var loginStyle = options && options.loginStyle || config.loginStyle || 'popup';\n  if (![\"popup\", \"redirect\"].includes(loginStyle)) throw new Error(\"Invalid login style: \" + loginStyle);\n\n  // If we don't have session storage (for example, Safari in private\n  // mode), the redirect login flow won't work, so fallback to the\n  // popup style.\n  if (loginStyle === 'redirect') {\n    try {\n      sessionStorage.setItem('Meteor.oauth.test', 'test');\n      sessionStorage.removeItem('Meteor.oauth.test');\n    } catch (e) {\n      loginStyle = 'popup';\n    }\n  }\n  return loginStyle;\n};\nOAuth._stateParam = function (loginStyle, credentialToken, redirectUrl) {\n  var _Meteor$settings, _Meteor$settings$publ, _Meteor$settings$publ2, _Meteor$settings$publ3;\n  var state = {\n    loginStyle: loginStyle,\n    credentialToken: credentialToken,\n    isCordova: Meteor.isCordova\n  };\n  if (loginStyle === 'redirect' || (_Meteor$settings = Meteor.settings) !== null && _Meteor$settings !== void 0 && (_Meteor$settings$publ = _Meteor$settings.public) !== null && _Meteor$settings$publ !== void 0 && (_Meteor$settings$publ2 = _Meteor$settings$publ.packages) !== null && _Meteor$settings$publ2 !== void 0 && (_Meteor$settings$publ3 = _Meteor$settings$publ2.oauth) !== null && _Meteor$settings$publ3 !== void 0 && _Meteor$settings$publ3.setRedirectUrlWhenLoginStyleIsPopup && loginStyle === 'popup') {\n    state.redirectUrl = redirectUrl || '' + window.location;\n  }\n\n  // Encode base64 as not all login services URI-encode the state\n  // parameter when they pass it back to us.\n  // Use the 'base64' package here because 'btoa' isn't supported in IE8/9.\n  return Base64.encode(JSON.stringify(state));\n};\n\n// At the beginning of the redirect login flow, before we redirect to\n// the login service, save the credential token for this login attempt\n// in the reload migration data.\n//\nOAuth.saveDataForRedirect = function (loginService, credentialToken) {\n  Reload._onMigrate('oauth', function () {\n    return [true, {\n      loginService: loginService,\n      credentialToken: credentialToken\n    }];\n  });\n  Reload._migrate(null, {\n    immediateMigration: true\n  });\n};\n\n// At the end of the redirect login flow, when we've redirected back\n// to the application, retrieve the credentialToken and (if the login\n// was successful) the credentialSecret.\n//\n// Called at application startup.  Returns null if this is normal\n// application startup and we weren't just redirected at the end of\n// the login flow.\n//\nOAuth.getDataAfterRedirect = function () {\n  var migrationData = Reload._migrationData('oauth');\n  if (!(migrationData && migrationData.credentialToken)) return null;\n  var credentialToken = migrationData.credentialToken;\n  var key = OAuth._storageTokenPrefix + credentialToken;\n  var credentialSecret;\n  try {\n    credentialSecret = sessionStorage.getItem(key);\n    sessionStorage.removeItem(key);\n  } catch (e) {\n    Meteor._debug('error retrieving credentialSecret', e);\n  }\n  return {\n    loginService: migrationData.loginService,\n    credentialToken: credentialToken,\n    credentialSecret: credentialSecret\n  };\n};\n\n/**\n * Launch an OAuth login flow.  For the popup login style, show the\n * popup.  For the redirect login style, save the credential token for\n * this login attempt in the reload migration data, and redirect to\n * the service for the login.\n *\n * @param {Object} options\n * @param {string} options.loginService \"facebook\", \"google\", etc.\n * @param {string} options.loginStyle \"popup\" or \"redirect\"\n * @param {string} options.loginUrl The URL at the login service provider to start the OAuth flow.\n *  credentialRequestCompleteCallback: for the popup flow, call when the popup\n *    is closed and we have the credential from the login service.\n * @param {string} options.credentialToken our identifier for this login flow.\n **/\nOAuth.launchLogin = function (options) {\n  if (!options.loginService) throw new Error('loginService required');\n  if (options.loginStyle === 'popup') {\n    OAuth.showPopup(options.loginUrl, options.credentialRequestCompleteCallback.bind(null, options.credentialToken), options.popupOptions);\n  } else if (options.loginStyle === 'redirect') {\n    OAuth.saveDataForRedirect(options.loginService, options.credentialToken);\n    window.location = options.loginUrl;\n  } else {\n    throw new Error('invalid login style');\n  }\n};\n\n// Called by the popup when the OAuth flow is completed, right before\n// the popup closes.\nOAuth._handleCredentialSecret = function (credentialToken, secret) {\n  check(credentialToken, String);\n  check(secret, String);\n  if (!Object.prototype.hasOwnProperty.call(credentialSecrets, credentialToken)) {\n    credentialSecrets[credentialToken] = secret;\n  } else {\n    throw new Error(\"Duplicate credential token from OAuth login\");\n  }\n};\n\n// Used by accounts-oauth, which needs both a credentialToken and the\n// corresponding to credential secret to call the `login` method over DDP.\nOAuth._retrieveCredentialSecret = function (credentialToken) {\n  // First check the secrets collected by OAuth._handleCredentialSecret,\n  // then check localStorage. This matches what we do in\n  // end_of_login_response.html.\n  var secret = credentialSecrets[credentialToken];\n  if (!secret) {\n    var localStorageKey = OAuth._storageTokenPrefix + credentialToken;\n    secret = Meteor._localStorage.getItem(localStorageKey);\n    Meteor._localStorage.removeItem(localStorageKey);\n  } else {\n    delete credentialSecrets[credentialToken];\n  }\n  return secret;\n};","map":{"version":3,"names":["credentialSecrets","OAuth","showPopup","url","callback","dimensions","Error","_loginStyle","service","config","options","Meteor","isCordova","loginStyle","includes","sessionStorage","setItem","removeItem","e","_stateParam","credentialToken","redirectUrl","_Meteor$settings","_Meteor$settings$publ","_Meteor$settings$publ2","_Meteor$settings$publ3","state","settings","public","packages","oauth","setRedirectUrlWhenLoginStyleIsPopup","window","location","Base64","encode","JSON","stringify","saveDataForRedirect","loginService","Reload","_onMigrate","_migrate","immediateMigration","getDataAfterRedirect","migrationData","_migrationData","key","_storageTokenPrefix","credentialSecret","getItem","_debug","launchLogin","loginUrl","credentialRequestCompleteCallback","bind","popupOptions","_handleCredentialSecret","secret","check","String","Object","prototype","hasOwnProperty","call","_retrieveCredentialSecret","localStorageKey","_localStorage"],"sources":["packages/oauth/oauth_client.js"],"sourcesContent":["// credentialToken -> credentialSecret. You must provide both the\n// credentialToken and the credentialSecret to retrieve an access token from\n// the _pendingCredentials collection.\nconst credentialSecrets = {};\n\nOAuth = {};\n\nOAuth.showPopup = (url, callback, dimensions) => {\n  throw new Error(\"OAuth.showPopup must be implemented on this arch.\");\n};\n\n// Determine the login style (popup or redirect) for this login flow.\n//\n//\nOAuth._loginStyle = (service, config, options) => {\n\n  if (Meteor.isCordova) {\n    return \"popup\";\n  }\n\n  let loginStyle = (options && options.loginStyle) || config.loginStyle || 'popup';\n\n  if (! [\"popup\", \"redirect\"].includes(loginStyle))\n    throw new Error(`Invalid login style: ${loginStyle}`);\n\n  // If we don't have session storage (for example, Safari in private\n  // mode), the redirect login flow won't work, so fallback to the\n  // popup style.\n  if (loginStyle === 'redirect') {\n    try {\n      sessionStorage.setItem('Meteor.oauth.test', 'test');\n      sessionStorage.removeItem('Meteor.oauth.test');\n    } catch (e) {\n      loginStyle = 'popup';\n    }\n  }\n\n  return loginStyle;\n};\n\nOAuth._stateParam = (loginStyle, credentialToken, redirectUrl) => {\n  const state = {\n    loginStyle,\n    credentialToken,\n    isCordova: Meteor.isCordova\n  };\n\n  if (loginStyle === 'redirect' ||\n    (Meteor.settings?.public?.packages?.oauth?.setRedirectUrlWhenLoginStyleIsPopup && loginStyle === 'popup')\n  ) {\n    state.redirectUrl = redirectUrl || ('' + window.location);\n  }\n\n  // Encode base64 as not all login services URI-encode the state\n  // parameter when they pass it back to us.\n  // Use the 'base64' package here because 'btoa' isn't supported in IE8/9.\n  return Base64.encode(JSON.stringify(state));\n};\n\n\n// At the beginning of the redirect login flow, before we redirect to\n// the login service, save the credential token for this login attempt\n// in the reload migration data.\n//\nOAuth.saveDataForRedirect = (loginService, credentialToken) => {\n  Reload._onMigrate('oauth', () => [true, { loginService, credentialToken }]);\n  Reload._migrate(null, {immediateMigration: true});\n};\n\n// At the end of the redirect login flow, when we've redirected back\n// to the application, retrieve the credentialToken and (if the login\n// was successful) the credentialSecret.\n//\n// Called at application startup.  Returns null if this is normal\n// application startup and we weren't just redirected at the end of\n// the login flow.\n//\nOAuth.getDataAfterRedirect = () => {\n  const migrationData = Reload._migrationData('oauth');\n\n  if (! (migrationData && migrationData.credentialToken))\n    return null;\n\n  const { credentialToken } = migrationData;\n  const key = OAuth._storageTokenPrefix + credentialToken;\n  let credentialSecret;\n  try {\n    credentialSecret = sessionStorage.getItem(key);\n    sessionStorage.removeItem(key);\n  } catch (e) {\n    Meteor._debug('error retrieving credentialSecret', e);\n  }\n  return {\n    loginService: migrationData.loginService,\n    credentialToken,\n    credentialSecret,\n  };\n};\n\n/**\n * Launch an OAuth login flow.  For the popup login style, show the\n * popup.  For the redirect login style, save the credential token for\n * this login attempt in the reload migration data, and redirect to\n * the service for the login.\n *\n * @param {Object} options\n * @param {string} options.loginService \"facebook\", \"google\", etc.\n * @param {string} options.loginStyle \"popup\" or \"redirect\"\n * @param {string} options.loginUrl The URL at the login service provider to start the OAuth flow.\n *  credentialRequestCompleteCallback: for the popup flow, call when the popup\n *    is closed and we have the credential from the login service.\n * @param {string} options.credentialToken our identifier for this login flow.\n **/\nOAuth.launchLogin = options => {\n  if (! options.loginService)\n    throw new Error('loginService required');\n  if (options.loginStyle === 'popup') {\n    OAuth.showPopup(\n      options.loginUrl,\n      options.credentialRequestCompleteCallback.bind(null, options.credentialToken),\n      options.popupOptions);\n  } else if (options.loginStyle === 'redirect') {\n    OAuth.saveDataForRedirect(options.loginService, options.credentialToken);\n    window.location = options.loginUrl;\n  } else {\n    throw new Error('invalid login style');\n  }\n};\n\n// Called by the popup when the OAuth flow is completed, right before\n// the popup closes.\nOAuth._handleCredentialSecret = (credentialToken, secret) => {\n  check(credentialToken, String);\n  check(secret, String);\n  if (! Object.prototype.hasOwnProperty.call(credentialSecrets, credentialToken)) {\n    credentialSecrets[credentialToken] = secret;\n  } else {\n    throw new Error(\"Duplicate credential token from OAuth login\");\n  }\n};\n\n// Used by accounts-oauth, which needs both a credentialToken and the\n// corresponding to credential secret to call the `login` method over DDP.\nOAuth._retrieveCredentialSecret = credentialToken => {\n  // First check the secrets collected by OAuth._handleCredentialSecret,\n  // then check localStorage. This matches what we do in\n  // end_of_login_response.html.\n  let secret = credentialSecrets[credentialToken];\n  if (! secret) {\n    const localStorageKey = OAuth._storageTokenPrefix + credentialToken;\n    secret = Meteor._localStorage.getItem(localStorageKey);\n    Meteor._localStorage.removeItem(localStorageKey);\n  } else {\n    delete credentialSecrets[credentialToken];\n  }\n  return secret;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"6e426124a384f06c6e280a57aaa8dccb5604b324"}
