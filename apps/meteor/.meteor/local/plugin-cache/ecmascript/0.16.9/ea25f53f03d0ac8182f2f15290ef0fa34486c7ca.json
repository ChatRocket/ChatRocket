{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/webrtc/client/WebRTCClass.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/webrtc/client/WebRTCClass.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/webrtc/client/WebRTCClass.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/webrtc/client/WebRTCClass.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/webrtc/client/WebRTCClass.js"}},"code":"module.export({\n  WebRTC: () => WebRTC\n});\nlet Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 1);\nlet ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n}, 2);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n}, 3);\nlet GenericModal;\nmodule.link(\"../../../client/components/GenericModal\", {\n  default(v) {\n    GenericModal = v;\n  }\n}, 4);\nlet imperativeModal;\nmodule.link(\"../../../client/lib/imperativeModal\", {\n  imperativeModal(v) {\n    imperativeModal = v;\n  }\n}, 5);\nlet goToRoomById;\nmodule.link(\"../../../client/lib/utils/goToRoomById\", {\n  goToRoomById(v) {\n    goToRoomById = v;\n  }\n}, 6);\nlet ChatSubscription;\nmodule.link(\"../../models/client\", {\n  ChatSubscription(v) {\n    ChatSubscription = v;\n  }\n}, 7);\nlet settings;\nmodule.link(\"../../settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n}, 8);\nlet sdk;\nmodule.link(\"../../utils/client/lib/SDKClient\", {\n  sdk(v) {\n    sdk = v;\n  }\n}, 9);\nlet t;\nmodule.link(\"../../utils/lib/i18n\", {\n  t(v) {\n    t = v;\n  }\n}, 10);\nlet WEB_RTC_EVENTS;\nmodule.link(\"../lib/constants\", {\n  WEB_RTC_EVENTS(v) {\n    WEB_RTC_EVENTS = v;\n  }\n}, 11);\nlet ChromeScreenShare;\nmodule.link(\"./screenShare\", {\n  ChromeScreenShare(v) {\n    ChromeScreenShare = v;\n  }\n}, 12);\nclass WebRTCTransportClass extends Emitter {\n  constructor(webrtcInstance) {\n    super();\n    this.debug = false;\n    this.webrtcInstance = webrtcInstance;\n    sdk.stream('notify-room', [\"\".concat(this.webrtcInstance.room, \"/\").concat(WEB_RTC_EVENTS.WEB_RTC)], (type, data) => {\n      this.log('WebRTCTransportClass - onRoom', type, data);\n      this.emit(type, data);\n    });\n  }\n  log() {\n    if (this.debug === true) {\n      console.log(...arguments);\n    }\n  }\n  onUserStream(type, data) {\n    if (data.room !== this.webrtcInstance.room) {\n      return;\n    }\n    this.log('WebRTCTransportClass - onUser', type, data);\n    this.emit(type, data);\n  }\n  startCall(data) {\n    this.log('WebRTCTransportClass - startCall', this.webrtcInstance.room, this.webrtcInstance.selfId);\n    sdk.publish('notify-room-users', [\"\".concat(this.webrtcInstance.room, \"/\").concat(WEB_RTC_EVENTS.WEB_RTC), WEB_RTC_EVENTS.CALL, {\n      from: this.webrtcInstance.selfId,\n      room: this.webrtcInstance.room,\n      media: data.media,\n      monitor: data.monitor\n    }]);\n  }\n  joinCall(data) {\n    this.log('WebRTCTransportClass - joinCall', this.webrtcInstance.room, this.webrtcInstance.selfId);\n    if (data.monitor === true) {\n      sdk.publish('notify-user', [\"\".concat(data.to, \"/\").concat(WEB_RTC_EVENTS.WEB_RTC), WEB_RTC_EVENTS.JOIN, {\n        from: this.webrtcInstance.selfId,\n        room: this.webrtcInstance.room,\n        media: data.media,\n        monitor: data.monitor\n      }]);\n    } else {\n      sdk.publish('notify-room-users', [\"\".concat(this.webrtcInstance.room, \"/\").concat(WEB_RTC_EVENTS.WEB_RTC), WEB_RTC_EVENTS.JOIN, {\n        from: this.webrtcInstance.selfId,\n        room: this.webrtcInstance.room,\n        media: data.media,\n        monitor: data.monitor\n      }]);\n    }\n  }\n  sendCandidate(data) {\n    data.from = this.webrtcInstance.selfId;\n    data.room = this.webrtcInstance.room;\n    this.log('WebRTCTransportClass - sendCandidate', data);\n    sdk.publish('notify-user', [\"\".concat(data.to, \"/\").concat(WEB_RTC_EVENTS.WEB_RTC), WEB_RTC_EVENTS.CANDIDATE, data]);\n  }\n  sendDescription(data) {\n    data.from = this.webrtcInstance.selfId;\n    data.room = this.webrtcInstance.room;\n    this.log('WebRTCTransportClass - sendDescription', data);\n    sdk.publish('notify-user', [\"\".concat(data.to, \"/\").concat(WEB_RTC_EVENTS.WEB_RTC), WEB_RTC_EVENTS.DESCRIPTION, data]);\n  }\n  sendStatus(data) {\n    this.log('WebRTCTransportClass - sendStatus', data, this.webrtcInstance.room);\n    data.from = this.webrtcInstance.selfId;\n    sdk.publish('notify-room', [\"\".concat(this.webrtcInstance.room, \"/\").concat(WEB_RTC_EVENTS.WEB_RTC), WEB_RTC_EVENTS.STATUS, data]);\n  }\n  onRemoteCall(fn) {\n    return this.on(WEB_RTC_EVENTS.CALL, fn);\n  }\n  onRemoteJoin(fn) {\n    return this.on(WEB_RTC_EVENTS.JOIN, fn);\n  }\n  onRemoteCandidate(fn) {\n    return this.on(WEB_RTC_EVENTS.CANDIDATE, fn);\n  }\n  onRemoteDescription(fn) {\n    return this.on(WEB_RTC_EVENTS.DESCRIPTION, fn);\n  }\n  onRemoteStatus(fn) {\n    return this.on(WEB_RTC_EVENTS.STATUS, fn);\n  }\n}\nclass WebRTCClass {\n  /*\n   \t\t@param seldId {String}\n   \t\t@param room {String}\n    */\n\n  constructor(selfId, room) {\n    let autoAccept = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    this.resetCallInProgress = () => {\n      this.callInProgress.set(false);\n    };\n    /*\n     \t\t@param id {String}\n      */\n    this.stopPeerConnection = id => {\n      const peerConnection = this.peerConnections[id];\n      if (peerConnection == null) {\n        return;\n      }\n      delete this.peerConnections[id];\n      peerConnection.close();\n      this.updateRemoteItems();\n    };\n    this.config = {\n      iceServers: []\n    };\n    this.debug = false;\n    this.TransportClass = WebRTCTransportClass;\n    this.selfId = selfId;\n    this.room = room;\n    let servers = settings.get('WebRTC_Servers');\n    if (servers && servers.trim() !== '') {\n      servers = servers.replace(/\\s/g, '');\n      servers = servers.split(',');\n      servers.forEach(server => {\n        server = server.split('@');\n        const serverConfig = {\n          urls: server.pop()\n        };\n        if (server.length === 1) {\n          server = server[0].split(':');\n          serverConfig.username = decodeURIComponent(server[0]);\n          serverConfig.credential = decodeURIComponent(server[1]);\n        }\n        this.config.iceServers.push(serverConfig);\n      });\n    }\n    this.peerConnections = {};\n    this.remoteItems = new ReactiveVar([]);\n    this.remoteItemsById = new ReactiveVar({});\n    this.callInProgress = new ReactiveVar(false);\n    this.audioEnabled = new ReactiveVar(false);\n    this.videoEnabled = new ReactiveVar(false);\n    this.overlayEnabled = new ReactiveVar(false);\n    this.screenShareEnabled = new ReactiveVar(false);\n    this.localUrl = new ReactiveVar();\n    this.active = false;\n    this.remoteMonitoring = false;\n    this.monitor = false;\n    this.autoAccept = autoAccept;\n    this.navigator = undefined;\n    const userAgent = navigator.userAgent.toLocaleLowerCase();\n    if (userAgent.indexOf('electron') !== -1) {\n      this.navigator = 'electron';\n    } else if (userAgent.indexOf('chrome') !== -1) {\n      this.navigator = 'chrome';\n    } else if (userAgent.indexOf('firefox') !== -1) {\n      this.navigator = 'firefox';\n    } else if (userAgent.indexOf('safari') !== -1) {\n      this.navigator = 'safari';\n    }\n    this.screenShareAvailable = ['chrome', 'firefox', 'electron'].includes(this.navigator);\n    this.media = {\n      video: true,\n      audio: true\n    };\n    this.transport = new this.TransportClass(this);\n    this.transport.onRemoteCall(this.onRemoteCall.bind(this));\n    this.transport.onRemoteJoin(this.onRemoteJoin.bind(this));\n    this.transport.onRemoteCandidate(this.onRemoteCandidate.bind(this));\n    this.transport.onRemoteDescription(this.onRemoteDescription.bind(this));\n    this.transport.onRemoteStatus(this.onRemoteStatus.bind(this));\n    setInterval(this.checkPeerConnections.bind(this), 1000);\n  }\n  onUserStream() {\n    return this.transport.onUserStream(...arguments);\n  }\n  log() {\n    if (this.debug === true) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      console.log.apply(console, args);\n    }\n  }\n  onError() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    console.error.apply(console, args);\n  }\n  checkPeerConnections() {\n    const {\n      peerConnections\n    } = this;\n    const date = Date.now();\n    Object.entries(peerConnections).some(_ref => {\n      let [id, peerConnection] = _ref;\n      if (!['connected', 'completed'].includes(peerConnection.iceConnectionState) && peerConnection.createdAt + 5000 < date) {\n        this.stopPeerConnection(id);\n        return true;\n      }\n      return false;\n    });\n  }\n  updateRemoteItems() {\n    const items = [];\n    const itemsById = {};\n    const {\n      peerConnections\n    } = this;\n    Object.entries(peerConnections).forEach(_ref2 => {\n      let [id, peerConnection] = _ref2;\n      peerConnection.getRemoteStreams().forEach(remoteStream => {\n        const item = {\n          id,\n          url: remoteStream,\n          state: peerConnection.iceConnectionState\n        };\n        switch (peerConnection.iceConnectionState) {\n          case 'checking':\n            item.stateText = 'Connecting...';\n            break;\n          case 'connected':\n          case 'completed':\n            item.stateText = 'Connected';\n            item.connected = true;\n            break;\n          case 'disconnected':\n            item.stateText = 'Disconnected';\n            break;\n          case 'failed':\n            item.stateText = 'Failed';\n            break;\n          case 'closed':\n            item.stateText = 'Closed';\n        }\n        items.push(item);\n        itemsById[id] = item;\n      });\n    });\n    this.remoteItems.set(items);\n    this.remoteItemsById.set(itemsById);\n  }\n  broadcastStatus() {\n    if (this.active !== true || this.monitor === true || this.remoteMonitoring === true) {\n      return;\n    }\n    const remoteConnections = [];\n    const {\n      peerConnections\n    } = this;\n    Object.keys(peerConnections).entries(_ref3 => {\n      let [id, {\n        remoteMedia: media\n      }] = _ref3;\n      remoteConnections.push({\n        id,\n        media\n      });\n    });\n    this.transport.sendStatus({\n      media: this.media,\n      remoteConnections\n    });\n  }\n\n  /*\n   \t\t@param data {Object}\n   \t\t\tfrom {String}\n   \t\t\tmedia {Object}\n   \t\t\tremoteConnections {Array[Object]}\n   \t\t\t\tid {String}\n   \t\t\t\tmedia {Object}\n    */\n\n  onRemoteStatus(data) {\n    // this.log(onRemoteStatus, arguments);\n    this.callInProgress.set(true);\n    clearTimeout(this.callInProgressTimeout);\n    this.callInProgressTimeout = setTimeout(this.resetCallInProgress, 2000);\n    if (this.active !== true) {\n      return;\n    }\n    const remoteConnections = [{\n      id: data.from,\n      media: data.media\n    }, ...data.remoteConnections];\n    remoteConnections.forEach(remoteConnection => {\n      if (remoteConnection.id !== this.selfId && this.peerConnections[remoteConnection.id] == null) {\n        this.log('reconnecting with', remoteConnection.id);\n        this.onRemoteJoin({\n          from: remoteConnection.id,\n          media: remoteConnection.media\n        });\n      }\n    });\n  }\n\n  /*\n   \t\t@param id {String}\n    */\n\n  getPeerConnection(id) {\n    if (this.peerConnections[id] != null) {\n      return this.peerConnections[id];\n    }\n    const peerConnection = new RTCPeerConnection(this.config);\n    peerConnection.createdAt = Date.now();\n    peerConnection.remoteMedia = {};\n    this.peerConnections[id] = peerConnection;\n    const eventNames = ['icecandidate', 'addstream', 'removestream', 'iceconnectionstatechange', 'datachannel', 'identityresult', 'idpassertionerror', 'idpvalidationerror', 'negotiationneeded', 'peeridentity', 'signalingstatechange'];\n    eventNames.forEach(eventName => {\n      peerConnection.addEventListener(eventName, e => {\n        this.log(id, e.type, e);\n      });\n    });\n    peerConnection.addEventListener('icecandidate', e => {\n      if (e.candidate == null) {\n        return;\n      }\n      this.transport.sendCandidate({\n        to: id,\n        candidate: {\n          candidate: e.candidate.candidate,\n          sdpMLineIndex: e.candidate.sdpMLineIndex,\n          sdpMid: e.candidate.sdpMid\n        }\n      });\n    });\n    peerConnection.addEventListener('addstream', () => {\n      this.updateRemoteItems();\n    });\n    peerConnection.addEventListener('removestream', () => {\n      this.updateRemoteItems();\n    });\n    peerConnection.addEventListener('iceconnectionstatechange', () => {\n      if ((peerConnection.iceConnectionState === 'disconnected' || peerConnection.iceConnectionState === 'closed') && peerConnection === this.peerConnections[id]) {\n        this.stopPeerConnection(id);\n        setTimeout(() => {\n          if (Object.keys(this.peerConnections).length === 0) {\n            this.stop();\n          }\n        }, 3000);\n      }\n      this.updateRemoteItems();\n    });\n    return peerConnection;\n  }\n  _getUserMedia(media, onSuccess, onError) {\n    const onSuccessLocal = stream => {\n      if (AudioContext && stream.getAudioTracks().length > 0) {\n        const audioContext = new AudioContext();\n        const source = audioContext.createMediaStreamSource(stream);\n        const volume = audioContext.createGain();\n        source.connect(volume);\n        const peer = audioContext.createMediaStreamDestination();\n        volume.connect(peer);\n        volume.gain.value = 0.6;\n        stream.removeTrack(stream.getAudioTracks()[0]);\n        stream.addTrack(peer.stream.getAudioTracks()[0]);\n        stream.volume = volume;\n        this.audioContext = audioContext;\n      }\n      onSuccess(stream);\n    };\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      return navigator.mediaDevices.getUserMedia(media).then(onSuccessLocal).catch(onError);\n    }\n    navigator.getUserMedia(media, onSuccessLocal, onError);\n  }\n  getUserMedia(media, onSuccess) {\n    let onError = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.onError;\n    if (media.desktop !== true) {\n      this._getUserMedia(media, onSuccess, onError);\n      return;\n    }\n    if (this.screenShareAvailable !== true) {\n      console.log('Screen share is not avaliable');\n      return;\n    }\n    const getScreen = audioStream => {\n      const refresh = function () {\n        imperativeModal.open({\n          component: GenericModal,\n          props: {\n            variant: 'warning',\n            title: t('Refresh_your_page_after_install_to_enable_screen_sharing')\n          }\n        });\n      };\n      const isChromeExtensionInstalled = this.navigator === 'chrome' && ChromeScreenShare.installed;\n      const isFirefoxExtensionInstalled = this.navigator === 'firefox' && window.rocketchatscreenshare != null;\n      if (!isChromeExtensionInstalled && !isFirefoxExtensionInstalled) {\n        imperativeModal.open({\n          component: GenericModal,\n          props: {\n            title: t('Screen_Share'),\n            variant: 'warning',\n            confirmText: t('Install_Extension'),\n            cancelText: t('Cancel'),\n            children: t('You_need_install_an_extension_to_allow_screen_sharing'),\n            onConfirm: () => {\n              if (this.navigator === 'chrome') {\n                const url = 'https://chrome.google.com/webstore/detail/rocketchat-screen-share/nocfbnnmjnndkbipkabodnheejiegccf';\n                try {\n                  chrome.webstore.install(url, refresh, () => {\n                    window.open(url);\n                    refresh();\n                  });\n                } catch (_error) {\n                  console.log(_error);\n                  window.open(url);\n                  refresh();\n                }\n              } else if (this.navigator === 'firefox') {\n                window.open('https://addons.mozilla.org/en-GB/firefox/addon/rocketchat-screen-share/');\n                refresh();\n              }\n            }\n          }\n        });\n        return onError(false);\n      }\n      const getScreenSuccess = stream => {\n        if (audioStream != null) {\n          stream.addTrack(audioStream.getAudioTracks()[0]);\n        }\n        onSuccess(stream);\n      };\n      if (this.navigator === 'firefox') {\n        media = {\n          audio: media.audio,\n          video: {\n            mozMediaSource: 'window',\n            mediaSource: 'window'\n          }\n        };\n        this._getUserMedia(media, getScreenSuccess, onError);\n      } else {\n        ChromeScreenShare.getSourceId(this.navigator, id => {\n          media = {\n            audio: false,\n            video: {\n              mandatory: {\n                chromeMediaSource: 'desktop',\n                chromeMediaSourceId: id,\n                maxWidth: 1280,\n                maxHeight: 720\n              }\n            }\n          };\n          this._getUserMedia(media, getScreenSuccess, onError);\n        });\n      }\n    };\n    if (this.navigator === 'firefox' || media.audio == null || media.audio === false) {\n      getScreen();\n    } else {\n      const getAudioSuccess = audioStream => {\n        getScreen(audioStream);\n      };\n      const getAudioError = () => {\n        getScreen();\n      };\n      this._getUserMedia({\n        audio: media.audio\n      }, getAudioSuccess, getAudioError);\n    }\n  }\n\n  /*\n   \t\t@param callback {Function}\n    */\n\n  getLocalUserMedia(callback) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    this.log('getLocalUserMedia', [callback, ...args]);\n    if (this.localStream != null) {\n      return callback(null, this.localStream);\n    }\n    const onSuccess = stream => {\n      this.localStream = stream;\n      !this.audioEnabled.get() && this.disableAudio();\n      !this.videoEnabled.get() && this.disableVideo();\n      this.localUrl.set(stream);\n      const {\n        peerConnections\n      } = this;\n      Object.entries(peerConnections).forEach(_ref4 => {\n        let [, peerConnection] = _ref4;\n        return peerConnection.addStream(stream);\n      });\n      document.querySelector('video#localVideo').srcObject = stream;\n      callback(null, this.localStream);\n    };\n    const onError = error => {\n      callback(false);\n      this.onError(error);\n    };\n    this.getUserMedia(this.media, onSuccess, onError);\n  }\n  stopAllPeerConnections() {\n    const {\n      peerConnections\n    } = this;\n    Object.keys(peerConnections).forEach(this.stopPeerConnection);\n    window.audioContext && window.audioContext.close();\n  }\n  setAudioEnabled() {\n    let enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (this.localStream != null) {\n      this.localStream.getAudioTracks().forEach(audio => {\n        audio.enabled = enabled;\n      });\n      this.audioEnabled.set(enabled);\n    }\n  }\n  disableAudio() {\n    this.setAudioEnabled(false);\n  }\n  enableAudio() {\n    this.setAudioEnabled(true);\n  }\n  toggleAudio() {\n    if (this.audioEnabled.get()) {\n      return this.disableAudio();\n    }\n    return this.enableAudio();\n  }\n  setVideoEnabled() {\n    let enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (this.localStream != null) {\n      this.localStream.getVideoTracks().forEach(video => {\n        video.enabled = enabled;\n      });\n      this.videoEnabled.set(enabled);\n    }\n  }\n  disableScreenShare() {\n    this.setScreenShareEnabled(false);\n  }\n  enableScreenShare() {\n    this.setScreenShareEnabled(true);\n  }\n  setScreenShareEnabled() {\n    let enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (this.localStream != null) {\n      this.media.desktop = enabled;\n      delete this.localStream;\n      this.getLocalUserMedia(err => {\n        if (err != null) {\n          return;\n        }\n        this.screenShareEnabled.set(enabled);\n        this.stopAllPeerConnections();\n        this.joinCall();\n      });\n    }\n  }\n  disableVideo() {\n    this.setVideoEnabled(false);\n  }\n  enableVideo() {\n    this.setVideoEnabled(true);\n  }\n  toggleVideo() {\n    if (this.videoEnabled.get()) {\n      return this.disableVideo();\n    }\n    return this.enableVideo();\n  }\n  stop() {\n    this.active = false;\n    this.monitor = false;\n    this.remoteMonitoring = false;\n    if (this.localStream != null && typeof this.localStream !== 'undefined') {\n      this.localStream.getTracks().forEach(track => track.stop());\n    }\n    this.localUrl.set(undefined);\n    delete this.localStream;\n    this.stopAllPeerConnections();\n  }\n\n  /*\n   \t\t@param media {Object}\n   \t\t\taudio {Boolean}\n   \t\t\tvideo {Boolean}\n    */\n\n  startCall() {\n    let media = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n    this.log('startCall', [media, ...args]);\n    this.media = media;\n    this.getLocalUserMedia(() => {\n      this.active = true;\n      this.transport.startCall({\n        media: this.media\n      });\n    });\n  }\n  startCallAsMonitor() {\n    let media = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n      args[_key5 - 1] = arguments[_key5];\n    }\n    this.log('startCallAsMonitor', [media, ...args]);\n    this.media = media;\n    this.active = true;\n    this.monitor = true;\n    this.transport.startCall({\n      media: this.media,\n      monitor: true\n    });\n  }\n\n  /*\n   \t\t@param data {Object}\n   \t\t\tfrom {String}\n   \t\t\tmonitor {Boolean}\n   \t\t\tmedia {Object}\n   \t\t\t\taudio {Boolean}\n   \t\t\t\tvideo {Boolean}\n    */\n\n  onRemoteCall(data) {\n    if (this.autoAccept === true) {\n      setTimeout(() => {\n        this.joinCall({\n          to: data.from,\n          monitor: data.monitor,\n          media: data.media\n        });\n      }, 0);\n      return;\n    }\n    const user = Meteor.users.findOne(data.from);\n    let fromUsername = undefined;\n    if (user && user.username) {\n      fromUsername = user.username;\n    }\n    const subscription = ChatSubscription.findOne({\n      rid: data.room\n    });\n    let icon;\n    let title;\n    if (data.monitor === true) {\n      icon = 'eye';\n      title = t('WebRTC_monitor_call_from_%s', fromUsername);\n    } else if (subscription && subscription.t === 'd') {\n      if (data.media && data.media.video) {\n        icon = 'videocam';\n        title = t('WebRTC_direct_video_call_from_%s', fromUsername);\n      } else {\n        icon = 'phone';\n        title = t('WebRTC_direct_audio_call_from_%s', fromUsername);\n      }\n    } else if (data.media && data.media.video) {\n      icon = 'videocam';\n      title = t('WebRTC_group_video_call_from_%s', subscription.name);\n    } else {\n      icon = 'phone';\n      title = t('WebRTC_group_audio_call_from_%s', subscription.name);\n    }\n    imperativeModal.open({\n      component: GenericModal,\n      props: {\n        title,\n        icon,\n        confirmText: t('Yes'),\n        cancelText: t('No'),\n        children: t('Do_you_want_to_accept'),\n        onConfirm: () => {\n          goToRoomById(data.room);\n          return this.joinCall({\n            to: data.from,\n            monitor: data.monitor,\n            media: data.media\n          });\n        },\n        onCancel: () => this.stop(),\n        onClose: () => this.stop()\n      }\n    });\n  }\n\n  /*\n   \t\t@param data {Object}\n   \t\t\tto {String}\n   \t\t\tmonitor {Boolean}\n   \t\t\tmedia {Object}\n   \t\t\t\taudio {Boolean}\n   \t\t\t\tvideo {Boolean}\n   \t\t\t\tdesktop {Boolean}\n    */\n\n  joinCall() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    data.media = this.media;\n    for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n      args[_key6 - 1] = arguments[_key6];\n    }\n    this.log('joinCall', [data, ...args]);\n    this.getLocalUserMedia(() => {\n      this.remoteMonitoring = data.monitor;\n      this.active = true;\n      this.transport.joinCall(data);\n    });\n  }\n  onRemoteJoin(data) {\n    if (this.active !== true) {\n      return;\n    }\n    for (var _len7 = arguments.length, args = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n      args[_key7 - 1] = arguments[_key7];\n    }\n    this.log('onRemoteJoin', [data, ...args]);\n    let peerConnection = this.getPeerConnection(data.from);\n\n    // needsRefresh = false\n    // if peerConnection.iceConnectionState isnt 'new'\n    // needsAudio = data.media.audio is true and peerConnection.remoteMedia.audio isnt true\n    // needsVideo = data.media.video is true and peerConnection.remoteMedia.video isnt true\n    // needsRefresh = needsAudio or needsVideo or data.media.desktop isnt peerConnection.remoteMedia.desktop\n\n    // # if peerConnection.signalingState is \"have-local-offer\" or needsRefresh\n\n    if (peerConnection.signalingState !== 'checking') {\n      this.stopPeerConnection(data.from);\n      peerConnection = this.getPeerConnection(data.from);\n    }\n    if (peerConnection.iceConnectionState !== 'new') {\n      return;\n    }\n    peerConnection.remoteMedia = data.media;\n    if (this.localStream) {\n      peerConnection.addStream(this.localStream);\n    }\n    const onOffer = offer => {\n      const onLocalDescription = () => {\n        this.transport.sendDescription({\n          to: data.from,\n          type: 'offer',\n          ts: peerConnection.createdAt,\n          media: this.media,\n          description: {\n            sdp: offer.sdp,\n            type: offer.type\n          }\n        });\n      };\n      peerConnection.setLocalDescription(new RTCSessionDescription(offer), onLocalDescription, this.onError);\n    };\n    if (data.monitor === true) {\n      peerConnection.createOffer(onOffer, this.onError, {\n        mandatory: {\n          OfferToReceiveAudio: data.media.audio,\n          OfferToReceiveVideo: data.media.video\n        }\n      });\n    } else {\n      peerConnection.createOffer(onOffer, this.onError);\n    }\n  }\n  onRemoteOffer(data) {\n    if (this.active !== true) {\n      return;\n    }\n    for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n      args[_key8 - 1] = arguments[_key8];\n    }\n    this.log('onRemoteOffer', [data, ...args]);\n    let peerConnection = this.getPeerConnection(data.from);\n    if (['have-local-offer', 'stable'].includes(peerConnection.signalingState) && peerConnection.createdAt < data.ts) {\n      this.stopPeerConnection(data.from);\n      peerConnection = this.getPeerConnection(data.from);\n    }\n    if (peerConnection.iceConnectionState !== 'new') {\n      return;\n    }\n    peerConnection.setRemoteDescription(new RTCSessionDescription(data.description));\n    try {\n      if (this.localStream) {\n        peerConnection.addStream(this.localStream);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    const onAnswer = answer => {\n      const onLocalDescription = () => {\n        this.transport.sendDescription({\n          to: data.from,\n          type: 'answer',\n          ts: peerConnection.createdAt,\n          description: {\n            sdp: answer.sdp,\n            type: answer.type\n          }\n        });\n      };\n      peerConnection.setLocalDescription(new RTCSessionDescription(answer), onLocalDescription, this.onError);\n    };\n    peerConnection.createAnswer(onAnswer, this.onError);\n  }\n\n  /*\n   \t\t@param data {Object}\n   \t\t\tto {String}\n   \t\t\tfrom {String}\n   \t\t\tcandidate {RTCIceCandidate JSON encoded}\n    */\n\n  onRemoteCandidate(data) {\n    var _this$remoteItems$get;\n    if (this.active !== true) {\n      return;\n    }\n    if (data.to !== this.selfId) {\n      return;\n    }\n    for (var _len9 = arguments.length, args = new Array(_len9 > 1 ? _len9 - 1 : 0), _key9 = 1; _key9 < _len9; _key9++) {\n      args[_key9 - 1] = arguments[_key9];\n    }\n    this.log('onRemoteCandidate', [data, ...args]);\n    const peerConnection = this.getPeerConnection(data.from);\n    if (peerConnection.iceConnectionState !== 'closed' && peerConnection.iceConnectionState !== 'failed' && peerConnection.iceConnectionState !== 'disconnected' && peerConnection.iceConnectionState !== 'completed') {\n      peerConnection.addIceCandidate(new RTCIceCandidate(data.candidate));\n    }\n    document.querySelector('video#remoteVideo').srcObject = (_this$remoteItems$get = this.remoteItems.get()[0]) === null || _this$remoteItems$get === void 0 ? void 0 : _this$remoteItems$get.url;\n  }\n\n  /*\n   \t\t@param data {Object}\n   \t\t\tto {String}\n   \t\t\tfrom {String}\n   \t\t\ttype {String} [offer, answer]\n   \t\t\tdescription {RTCSessionDescription JSON encoded}\n   \t\t\tts {Integer}\n   \t\t\tmedia {Object}\n   \t\t\t\taudio {Boolean}\n   \t\t\t\tvideo {Boolean}\n   \t\t\t\tdesktop {Boolean}\n    */\n\n  onRemoteDescription(data) {\n    if (this.active !== true) {\n      return;\n    }\n    if (data.to !== this.selfId) {\n      return;\n    }\n    for (var _len10 = arguments.length, args = new Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {\n      args[_key10 - 1] = arguments[_key10];\n    }\n    this.log('onRemoteDescription', [data, ...args]);\n    const peerConnection = this.getPeerConnection(data.from);\n    if (data.type === 'offer') {\n      peerConnection.remoteMedia = data.media;\n      this.onRemoteOffer({\n        from: data.from,\n        ts: data.ts,\n        description: data.description\n      });\n    } else {\n      peerConnection.setRemoteDescription(new RTCSessionDescription(data.description));\n    }\n  }\n}\nconst WebRTC = new class {\n  constructor() {\n    this.instancesByRoomId = {};\n  }\n  getInstanceByRoomId(rid) {\n    let visitorId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let enabled = false;\n    if (!visitorId) {\n      const subscription = ChatSubscription.findOne({\n        rid\n      });\n      if (!subscription) {\n        return;\n      }\n      switch (subscription.t) {\n        case 'd':\n          enabled = settings.get('WebRTC_Enable_Direct');\n          break;\n        case 'p':\n          enabled = settings.get('WebRTC_Enable_Private');\n          break;\n        case 'c':\n          enabled = settings.get('WebRTC_Enable_Channel');\n          break;\n        case 'l':\n          enabled = settings.get('Omnichannel_call_provider') === 'WebRTC';\n      }\n    } else {\n      enabled = settings.get('Omnichannel_call_provider') === 'WebRTC';\n    }\n    enabled = enabled && settings.get('WebRTC_Enabled');\n    if (enabled === false) {\n      return;\n    }\n    if (this.instancesByRoomId[rid] == null) {\n      let uid = Meteor.userId();\n      let autoAccept = false;\n      if (visitorId) {\n        uid = visitorId;\n        autoAccept = true;\n      }\n      this.instancesByRoomId[rid] = new WebRTCClass(uid, rid, autoAccept);\n    }\n    return this.instancesByRoomId[rid];\n  }\n}();\nMeteor.startup(() => {\n  Tracker.autorun(() => {\n    if (Meteor.userId()) {\n      sdk.stream('notify-user', [\"\".concat(Meteor.userId(), \"/\").concat(WEB_RTC_EVENTS.WEB_RTC)], (type, data) => {\n        if (data.room == null) {\n          return;\n        }\n        const webrtc = WebRTC.getInstanceByRoomId(data.room);\n        webrtc.onUserStream(type, data);\n      });\n    }\n  });\n});","map":{"version":3,"names":["module","export","WebRTC","Emitter","link","v","Meteor","ReactiveVar","Tracker","GenericModal","default","imperativeModal","goToRoomById","ChatSubscription","settings","sdk","t","WEB_RTC_EVENTS","ChromeScreenShare","WebRTCTransportClass","constructor","webrtcInstance","debug","stream","concat","room","WEB_RTC","type","data","log","emit","console","arguments","onUserStream","startCall","selfId","publish","CALL","from","media","monitor","joinCall","to","JOIN","sendCandidate","CANDIDATE","sendDescription","DESCRIPTION","sendStatus","STATUS","onRemoteCall","fn","on","onRemoteJoin","onRemoteCandidate","onRemoteDescription","onRemoteStatus","WebRTCClass","autoAccept","length","undefined","resetCallInProgress","callInProgress","set","stopPeerConnection","id","peerConnection","peerConnections","close","updateRemoteItems","config","iceServers","TransportClass","servers","get","trim","replace","split","forEach","server","serverConfig","urls","pop","username","decodeURIComponent","credential","push","remoteItems","remoteItemsById","audioEnabled","videoEnabled","overlayEnabled","screenShareEnabled","localUrl","active","remoteMonitoring","navigator","userAgent","toLocaleLowerCase","indexOf","screenShareAvailable","includes","video","audio","transport","bind","setInterval","checkPeerConnections","_len","args","Array","_key","apply","onError","_len2","_key2","error","date","Date","now","Object","entries","some","_ref","iceConnectionState","createdAt","items","itemsById","_ref2","getRemoteStreams","remoteStream","item","url","state","stateText","connected","broadcastStatus","remoteConnections","keys","_ref3","remoteMedia","clearTimeout","callInProgressTimeout","setTimeout","remoteConnection","getPeerConnection","RTCPeerConnection","eventNames","eventName","addEventListener","e","candidate","sdpMLineIndex","sdpMid","stop","_getUserMedia","onSuccess","onSuccessLocal","AudioContext","getAudioTracks","audioContext","source","createMediaStreamSource","volume","createGain","connect","peer","createMediaStreamDestination","gain","value","removeTrack","addTrack","mediaDevices","getUserMedia","then","catch","desktop","getScreen","audioStream","refresh","open","component","props","variant","title","isChromeExtensionInstalled","installed","isFirefoxExtensionInstalled","window","rocketchatscreenshare","confirmText","cancelText","children","onConfirm","chrome","webstore","install","_error","getScreenSuccess","mozMediaSource","mediaSource","getSourceId","mandatory","chromeMediaSource","chromeMediaSourceId","maxWidth","maxHeight","getAudioSuccess","getAudioError","getLocalUserMedia","callback","_len3","_key3","localStream","disableAudio","disableVideo","_ref4","addStream","document","querySelector","srcObject","stopAllPeerConnections","setAudioEnabled","enabled","enableAudio","toggleAudio","setVideoEnabled","getVideoTracks","disableScreenShare","setScreenShareEnabled","enableScreenShare","err","enableVideo","toggleVideo","getTracks","track","_len4","_key4","startCallAsMonitor","_len5","_key5","user","users","findOne","fromUsername","subscription","rid","icon","name","onCancel","onClose","_len6","_key6","_len7","_key7","signalingState","onOffer","offer","onLocalDescription","ts","description","sdp","setLocalDescription","RTCSessionDescription","createOffer","OfferToReceiveAudio","OfferToReceiveVideo","onRemoteOffer","_len8","_key8","setRemoteDescription","onAnswer","answer","createAnswer","_this$remoteItems$get","_len9","_key9","addIceCandidate","RTCIceCandidate","_len10","_key10","instancesByRoomId","getInstanceByRoomId","visitorId","uid","userId","startup","autorun","webrtc"],"sources":["app/webrtc/client/WebRTCClass.js"],"sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\n\nimport GenericModal from '../../../client/components/GenericModal';\nimport { imperativeModal } from '../../../client/lib/imperativeModal';\nimport { goToRoomById } from '../../../client/lib/utils/goToRoomById';\nimport { ChatSubscription } from '../../models/client';\nimport { settings } from '../../settings/client';\nimport { sdk } from '../../utils/client/lib/SDKClient';\nimport { t } from '../../utils/lib/i18n';\nimport { WEB_RTC_EVENTS } from '../lib/constants';\nimport { ChromeScreenShare } from './screenShare';\n\nclass WebRTCTransportClass extends Emitter {\n\tconstructor(webrtcInstance) {\n\t\tsuper();\n\t\tthis.debug = false;\n\t\tthis.webrtcInstance = webrtcInstance;\n\t\tsdk.stream('notify-room', [`${this.webrtcInstance.room}/${WEB_RTC_EVENTS.WEB_RTC}`], (type, data) => {\n\t\t\tthis.log('WebRTCTransportClass - onRoom', type, data);\n\t\t\tthis.emit(type, data);\n\t\t});\n\t}\n\n\tlog(...args) {\n\t\tif (this.debug === true) {\n\t\t\tconsole.log(...args);\n\t\t}\n\t}\n\n\tonUserStream(type, data) {\n\t\tif (data.room !== this.webrtcInstance.room) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.log('WebRTCTransportClass - onUser', type, data);\n\t\tthis.emit(type, data);\n\t}\n\n\tstartCall(data) {\n\t\tthis.log('WebRTCTransportClass - startCall', this.webrtcInstance.room, this.webrtcInstance.selfId);\n\t\tsdk.publish('notify-room-users', [\n\t\t\t`${this.webrtcInstance.room}/${WEB_RTC_EVENTS.WEB_RTC}`,\n\t\t\tWEB_RTC_EVENTS.CALL,\n\t\t\t{\n\t\t\t\tfrom: this.webrtcInstance.selfId,\n\t\t\t\troom: this.webrtcInstance.room,\n\t\t\t\tmedia: data.media,\n\t\t\t\tmonitor: data.monitor,\n\t\t\t},\n\t\t]);\n\t}\n\n\tjoinCall(data) {\n\t\tthis.log('WebRTCTransportClass - joinCall', this.webrtcInstance.room, this.webrtcInstance.selfId);\n\t\tif (data.monitor === true) {\n\t\t\tsdk.publish('notify-user', [\n\t\t\t\t`${data.to}/${WEB_RTC_EVENTS.WEB_RTC}`,\n\t\t\t\tWEB_RTC_EVENTS.JOIN,\n\t\t\t\t{\n\t\t\t\t\tfrom: this.webrtcInstance.selfId,\n\t\t\t\t\troom: this.webrtcInstance.room,\n\t\t\t\t\tmedia: data.media,\n\t\t\t\t\tmonitor: data.monitor,\n\t\t\t\t},\n\t\t\t]);\n\t\t} else {\n\t\t\tsdk.publish('notify-room-users', [\n\t\t\t\t`${this.webrtcInstance.room}/${WEB_RTC_EVENTS.WEB_RTC}`,\n\t\t\t\tWEB_RTC_EVENTS.JOIN,\n\t\t\t\t{\n\t\t\t\t\tfrom: this.webrtcInstance.selfId,\n\t\t\t\t\troom: this.webrtcInstance.room,\n\t\t\t\t\tmedia: data.media,\n\t\t\t\t\tmonitor: data.monitor,\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\t}\n\n\tsendCandidate(data) {\n\t\tdata.from = this.webrtcInstance.selfId;\n\t\tdata.room = this.webrtcInstance.room;\n\t\tthis.log('WebRTCTransportClass - sendCandidate', data);\n\t\tsdk.publish('notify-user', [`${data.to}/${WEB_RTC_EVENTS.WEB_RTC}`, WEB_RTC_EVENTS.CANDIDATE, data]);\n\t}\n\n\tsendDescription(data) {\n\t\tdata.from = this.webrtcInstance.selfId;\n\t\tdata.room = this.webrtcInstance.room;\n\t\tthis.log('WebRTCTransportClass - sendDescription', data);\n\t\tsdk.publish('notify-user', [`${data.to}/${WEB_RTC_EVENTS.WEB_RTC}`, WEB_RTC_EVENTS.DESCRIPTION, data]);\n\t}\n\n\tsendStatus(data) {\n\t\tthis.log('WebRTCTransportClass - sendStatus', data, this.webrtcInstance.room);\n\t\tdata.from = this.webrtcInstance.selfId;\n\t\tsdk.publish('notify-room', [`${this.webrtcInstance.room}/${WEB_RTC_EVENTS.WEB_RTC}`, WEB_RTC_EVENTS.STATUS, data]);\n\t}\n\n\tonRemoteCall(fn) {\n\t\treturn this.on(WEB_RTC_EVENTS.CALL, fn);\n\t}\n\n\tonRemoteJoin(fn) {\n\t\treturn this.on(WEB_RTC_EVENTS.JOIN, fn);\n\t}\n\n\tonRemoteCandidate(fn) {\n\t\treturn this.on(WEB_RTC_EVENTS.CANDIDATE, fn);\n\t}\n\n\tonRemoteDescription(fn) {\n\t\treturn this.on(WEB_RTC_EVENTS.DESCRIPTION, fn);\n\t}\n\n\tonRemoteStatus(fn) {\n\t\treturn this.on(WEB_RTC_EVENTS.STATUS, fn);\n\t}\n}\n\nclass WebRTCClass {\n\t/*\n  \t\t@param seldId {String}\n  \t\t@param room {String}\n   */\n\n\tconstructor(selfId, room, autoAccept = false) {\n\t\tthis.config = {\n\t\t\ticeServers: [],\n\t\t};\n\t\tthis.debug = false;\n\t\tthis.TransportClass = WebRTCTransportClass;\n\t\tthis.selfId = selfId;\n\t\tthis.room = room;\n\t\tlet servers = settings.get('WebRTC_Servers');\n\t\tif (servers && servers.trim() !== '') {\n\t\t\tservers = servers.replace(/\\s/g, '');\n\t\t\tservers = servers.split(',');\n\n\t\t\tservers.forEach((server) => {\n\t\t\t\tserver = server.split('@');\n\t\t\t\tconst serverConfig = {\n\t\t\t\t\turls: server.pop(),\n\t\t\t\t};\n\t\t\t\tif (server.length === 1) {\n\t\t\t\t\tserver = server[0].split(':');\n\t\t\t\t\tserverConfig.username = decodeURIComponent(server[0]);\n\t\t\t\t\tserverConfig.credential = decodeURIComponent(server[1]);\n\t\t\t\t}\n\t\t\t\tthis.config.iceServers.push(serverConfig);\n\t\t\t});\n\t\t}\n\t\tthis.peerConnections = {};\n\t\tthis.remoteItems = new ReactiveVar([]);\n\t\tthis.remoteItemsById = new ReactiveVar({});\n\t\tthis.callInProgress = new ReactiveVar(false);\n\t\tthis.audioEnabled = new ReactiveVar(false);\n\t\tthis.videoEnabled = new ReactiveVar(false);\n\t\tthis.overlayEnabled = new ReactiveVar(false);\n\t\tthis.screenShareEnabled = new ReactiveVar(false);\n\t\tthis.localUrl = new ReactiveVar();\n\t\tthis.active = false;\n\t\tthis.remoteMonitoring = false;\n\t\tthis.monitor = false;\n\t\tthis.autoAccept = autoAccept;\n\t\tthis.navigator = undefined;\n\t\tconst userAgent = navigator.userAgent.toLocaleLowerCase();\n\n\t\tif (userAgent.indexOf('electron') !== -1) {\n\t\t\tthis.navigator = 'electron';\n\t\t} else if (userAgent.indexOf('chrome') !== -1) {\n\t\t\tthis.navigator = 'chrome';\n\t\t} else if (userAgent.indexOf('firefox') !== -1) {\n\t\t\tthis.navigator = 'firefox';\n\t\t} else if (userAgent.indexOf('safari') !== -1) {\n\t\t\tthis.navigator = 'safari';\n\t\t}\n\n\t\tthis.screenShareAvailable = ['chrome', 'firefox', 'electron'].includes(this.navigator);\n\t\tthis.media = {\n\t\t\tvideo: true,\n\t\t\taudio: true,\n\t\t};\n\t\tthis.transport = new this.TransportClass(this);\n\t\tthis.transport.onRemoteCall(this.onRemoteCall.bind(this));\n\t\tthis.transport.onRemoteJoin(this.onRemoteJoin.bind(this));\n\t\tthis.transport.onRemoteCandidate(this.onRemoteCandidate.bind(this));\n\t\tthis.transport.onRemoteDescription(this.onRemoteDescription.bind(this));\n\t\tthis.transport.onRemoteStatus(this.onRemoteStatus.bind(this));\n\n\t\tsetInterval(this.checkPeerConnections.bind(this), 1000);\n\t}\n\n\tonUserStream(...args) {\n\t\treturn this.transport.onUserStream(...args);\n\t}\n\n\tlog(...args) {\n\t\tif (this.debug === true) {\n\t\t\tconsole.log.apply(console, args);\n\t\t}\n\t}\n\n\tonError(...args) {\n\t\tconsole.error.apply(console, args);\n\t}\n\n\tcheckPeerConnections() {\n\t\tconst { peerConnections } = this;\n\t\tconst date = Date.now();\n\t\tObject.entries(peerConnections).some(([id, peerConnection]) => {\n\t\t\tif (!['connected', 'completed'].includes(peerConnection.iceConnectionState) && peerConnection.createdAt + 5000 < date) {\n\t\t\t\tthis.stopPeerConnection(id);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tupdateRemoteItems() {\n\t\tconst items = [];\n\t\tconst itemsById = {};\n\t\tconst { peerConnections } = this;\n\n\t\tObject.entries(peerConnections).forEach(([id, peerConnection]) => {\n\t\t\tpeerConnection.getRemoteStreams().forEach((remoteStream) => {\n\t\t\t\tconst item = {\n\t\t\t\t\tid,\n\t\t\t\t\turl: remoteStream,\n\t\t\t\t\tstate: peerConnection.iceConnectionState,\n\t\t\t\t};\n\t\t\t\tswitch (peerConnection.iceConnectionState) {\n\t\t\t\t\tcase 'checking':\n\t\t\t\t\t\titem.stateText = 'Connecting...';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'connected':\n\t\t\t\t\tcase 'completed':\n\t\t\t\t\t\titem.stateText = 'Connected';\n\t\t\t\t\t\titem.connected = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'disconnected':\n\t\t\t\t\t\titem.stateText = 'Disconnected';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'failed':\n\t\t\t\t\t\titem.stateText = 'Failed';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'closed':\n\t\t\t\t\t\titem.stateText = 'Closed';\n\t\t\t\t}\n\t\t\t\titems.push(item);\n\t\t\t\titemsById[id] = item;\n\t\t\t});\n\t\t});\n\t\tthis.remoteItems.set(items);\n\t\tthis.remoteItemsById.set(itemsById);\n\t}\n\n\tresetCallInProgress = () => {\n\t\tthis.callInProgress.set(false);\n\t};\n\n\tbroadcastStatus() {\n\t\tif (this.active !== true || this.monitor === true || this.remoteMonitoring === true) {\n\t\t\treturn;\n\t\t}\n\t\tconst remoteConnections = [];\n\t\tconst { peerConnections } = this;\n\t\tObject.keys(peerConnections).entries(([id, { remoteMedia: media }]) => {\n\t\t\tremoteConnections.push({\n\t\t\t\tid,\n\t\t\t\tmedia,\n\t\t\t});\n\t\t});\n\n\t\tthis.transport.sendStatus({\n\t\t\tmedia: this.media,\n\t\t\tremoteConnections,\n\t\t});\n\t}\n\n\t/*\n  \t\t@param data {Object}\n  \t\t\tfrom {String}\n  \t\t\tmedia {Object}\n  \t\t\tremoteConnections {Array[Object]}\n  \t\t\t\tid {String}\n  \t\t\t\tmedia {Object}\n   */\n\n\tonRemoteStatus(data) {\n\t\t// this.log(onRemoteStatus, arguments);\n\t\tthis.callInProgress.set(true);\n\t\tclearTimeout(this.callInProgressTimeout);\n\t\tthis.callInProgressTimeout = setTimeout(this.resetCallInProgress, 2000);\n\t\tif (this.active !== true) {\n\t\t\treturn;\n\t\t}\n\t\tconst remoteConnections = [\n\t\t\t{\n\t\t\t\tid: data.from,\n\t\t\t\tmedia: data.media,\n\t\t\t},\n\t\t\t...data.remoteConnections,\n\t\t];\n\n\t\tremoteConnections.forEach((remoteConnection) => {\n\t\t\tif (remoteConnection.id !== this.selfId && this.peerConnections[remoteConnection.id] == null) {\n\t\t\t\tthis.log('reconnecting with', remoteConnection.id);\n\t\t\t\tthis.onRemoteJoin({\n\t\t\t\t\tfrom: remoteConnection.id,\n\t\t\t\t\tmedia: remoteConnection.media,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/*\n  \t\t@param id {String}\n   */\n\n\tgetPeerConnection(id) {\n\t\tif (this.peerConnections[id] != null) {\n\t\t\treturn this.peerConnections[id];\n\t\t}\n\t\tconst peerConnection = new RTCPeerConnection(this.config);\n\n\t\tpeerConnection.createdAt = Date.now();\n\t\tpeerConnection.remoteMedia = {};\n\t\tthis.peerConnections[id] = peerConnection;\n\t\tconst eventNames = [\n\t\t\t'icecandidate',\n\t\t\t'addstream',\n\t\t\t'removestream',\n\t\t\t'iceconnectionstatechange',\n\t\t\t'datachannel',\n\t\t\t'identityresult',\n\t\t\t'idpassertionerror',\n\t\t\t'idpvalidationerror',\n\t\t\t'negotiationneeded',\n\t\t\t'peeridentity',\n\t\t\t'signalingstatechange',\n\t\t];\n\n\t\teventNames.forEach((eventName) => {\n\t\t\tpeerConnection.addEventListener(eventName, (e) => {\n\t\t\t\tthis.log(id, e.type, e);\n\t\t\t});\n\t\t});\n\n\t\tpeerConnection.addEventListener('icecandidate', (e) => {\n\t\t\tif (e.candidate == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.transport.sendCandidate({\n\t\t\t\tto: id,\n\t\t\t\tcandidate: {\n\t\t\t\t\tcandidate: e.candidate.candidate,\n\t\t\t\t\tsdpMLineIndex: e.candidate.sdpMLineIndex,\n\t\t\t\t\tsdpMid: e.candidate.sdpMid,\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t\tpeerConnection.addEventListener('addstream', () => {\n\t\t\tthis.updateRemoteItems();\n\t\t});\n\t\tpeerConnection.addEventListener('removestream', () => {\n\t\t\tthis.updateRemoteItems();\n\t\t});\n\t\tpeerConnection.addEventListener('iceconnectionstatechange', () => {\n\t\t\tif (\n\t\t\t\t(peerConnection.iceConnectionState === 'disconnected' || peerConnection.iceConnectionState === 'closed') &&\n\t\t\t\tpeerConnection === this.peerConnections[id]\n\t\t\t) {\n\t\t\t\tthis.stopPeerConnection(id);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (Object.keys(this.peerConnections).length === 0) {\n\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t}\n\t\t\t\t}, 3000);\n\t\t\t}\n\t\t\tthis.updateRemoteItems();\n\t\t});\n\t\treturn peerConnection;\n\t}\n\n\t_getUserMedia(media, onSuccess, onError) {\n\t\tconst onSuccessLocal = (stream) => {\n\t\t\tif (AudioContext && stream.getAudioTracks().length > 0) {\n\t\t\t\tconst audioContext = new AudioContext();\n\t\t\t\tconst source = audioContext.createMediaStreamSource(stream);\n\t\t\t\tconst volume = audioContext.createGain();\n\t\t\t\tsource.connect(volume);\n\t\t\t\tconst peer = audioContext.createMediaStreamDestination();\n\t\t\t\tvolume.connect(peer);\n\t\t\t\tvolume.gain.value = 0.6;\n\t\t\t\tstream.removeTrack(stream.getAudioTracks()[0]);\n\t\t\t\tstream.addTrack(peer.stream.getAudioTracks()[0]);\n\t\t\t\tstream.volume = volume;\n\t\t\t\tthis.audioContext = audioContext;\n\t\t\t}\n\t\t\tonSuccess(stream);\n\t\t};\n\t\tif (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n\t\t\treturn navigator.mediaDevices.getUserMedia(media).then(onSuccessLocal).catch(onError);\n\t\t}\n\n\t\tnavigator.getUserMedia(media, onSuccessLocal, onError);\n\t}\n\n\tgetUserMedia(media, onSuccess, onError = this.onError) {\n\t\tif (media.desktop !== true) {\n\t\t\tthis._getUserMedia(media, onSuccess, onError);\n\t\t\treturn;\n\t\t}\n\t\tif (this.screenShareAvailable !== true) {\n\t\t\tconsole.log('Screen share is not avaliable');\n\t\t\treturn;\n\t\t}\n\t\tconst getScreen = (audioStream) => {\n\t\t\tconst refresh = function () {\n\t\t\t\timperativeModal.open({\n\t\t\t\t\tcomponent: GenericModal,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\tvariant: 'warning',\n\t\t\t\t\t\ttitle: t('Refresh_your_page_after_install_to_enable_screen_sharing'),\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst isChromeExtensionInstalled = this.navigator === 'chrome' && ChromeScreenShare.installed;\n\t\t\tconst isFirefoxExtensionInstalled = this.navigator === 'firefox' && window.rocketchatscreenshare != null;\n\n\t\t\tif (!isChromeExtensionInstalled && !isFirefoxExtensionInstalled) {\n\t\t\t\timperativeModal.open({\n\t\t\t\t\tcomponent: GenericModal,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\ttitle: t('Screen_Share'),\n\t\t\t\t\t\tvariant: 'warning',\n\t\t\t\t\t\tconfirmText: t('Install_Extension'),\n\t\t\t\t\t\tcancelText: t('Cancel'),\n\t\t\t\t\t\tchildren: t('You_need_install_an_extension_to_allow_screen_sharing'),\n\t\t\t\t\t\tonConfirm: () => {\n\t\t\t\t\t\t\tif (this.navigator === 'chrome') {\n\t\t\t\t\t\t\t\tconst url = 'https://chrome.google.com/webstore/detail/rocketchat-screen-share/nocfbnnmjnndkbipkabodnheejiegccf';\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tchrome.webstore.install(url, refresh, () => {\n\t\t\t\t\t\t\t\t\t\twindow.open(url);\n\t\t\t\t\t\t\t\t\t\trefresh();\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} catch (_error) {\n\t\t\t\t\t\t\t\t\tconsole.log(_error);\n\t\t\t\t\t\t\t\t\twindow.open(url);\n\t\t\t\t\t\t\t\t\trefresh();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (this.navigator === 'firefox') {\n\t\t\t\t\t\t\t\twindow.open('https://addons.mozilla.org/en-GB/firefox/addon/rocketchat-screen-share/');\n\t\t\t\t\t\t\t\trefresh();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\treturn onError(false);\n\t\t\t}\n\n\t\t\tconst getScreenSuccess = (stream) => {\n\t\t\t\tif (audioStream != null) {\n\t\t\t\t\tstream.addTrack(audioStream.getAudioTracks()[0]);\n\t\t\t\t}\n\t\t\t\tonSuccess(stream);\n\t\t\t};\n\t\t\tif (this.navigator === 'firefox') {\n\t\t\t\tmedia = {\n\t\t\t\t\taudio: media.audio,\n\t\t\t\t\tvideo: {\n\t\t\t\t\t\tmozMediaSource: 'window',\n\t\t\t\t\t\tmediaSource: 'window',\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tthis._getUserMedia(media, getScreenSuccess, onError);\n\t\t\t} else {\n\t\t\t\tChromeScreenShare.getSourceId(this.navigator, (id) => {\n\t\t\t\t\tmedia = {\n\t\t\t\t\t\taudio: false,\n\t\t\t\t\t\tvideo: {\n\t\t\t\t\t\t\tmandatory: {\n\t\t\t\t\t\t\t\tchromeMediaSource: 'desktop',\n\t\t\t\t\t\t\t\tchromeMediaSourceId: id,\n\t\t\t\t\t\t\t\tmaxWidth: 1280,\n\t\t\t\t\t\t\t\tmaxHeight: 720,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tthis._getUserMedia(media, getScreenSuccess, onError);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tif (this.navigator === 'firefox' || media.audio == null || media.audio === false) {\n\t\t\tgetScreen();\n\t\t} else {\n\t\t\tconst getAudioSuccess = (audioStream) => {\n\t\t\t\tgetScreen(audioStream);\n\t\t\t};\n\t\t\tconst getAudioError = () => {\n\t\t\t\tgetScreen();\n\t\t\t};\n\n\t\t\tthis._getUserMedia(\n\t\t\t\t{\n\t\t\t\t\taudio: media.audio,\n\t\t\t\t},\n\t\t\t\tgetAudioSuccess,\n\t\t\t\tgetAudioError,\n\t\t\t);\n\t\t}\n\t}\n\n\t/*\n  \t\t@param callback {Function}\n   */\n\n\tgetLocalUserMedia(callback, ...args) {\n\t\tthis.log('getLocalUserMedia', [callback, ...args]);\n\t\tif (this.localStream != null) {\n\t\t\treturn callback(null, this.localStream);\n\t\t}\n\t\tconst onSuccess = (stream) => {\n\t\t\tthis.localStream = stream;\n\t\t\t!this.audioEnabled.get() && this.disableAudio();\n\t\t\t!this.videoEnabled.get() && this.disableVideo();\n\t\t\tthis.localUrl.set(stream);\n\t\t\tconst { peerConnections } = this;\n\t\t\tObject.entries(peerConnections).forEach(([, peerConnection]) => peerConnection.addStream(stream));\n\t\t\tdocument.querySelector('video#localVideo').srcObject = stream;\n\t\t\tcallback(null, this.localStream);\n\t\t};\n\t\tconst onError = (error) => {\n\t\t\tcallback(false);\n\t\t\tthis.onError(error);\n\t\t};\n\t\tthis.getUserMedia(this.media, onSuccess, onError);\n\t}\n\n\t/*\n  \t\t@param id {String}\n   */\n\n\tstopPeerConnection = (id) => {\n\t\tconst peerConnection = this.peerConnections[id];\n\t\tif (peerConnection == null) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this.peerConnections[id];\n\t\tpeerConnection.close();\n\t\tthis.updateRemoteItems();\n\t};\n\n\tstopAllPeerConnections() {\n\t\tconst { peerConnections } = this;\n\n\t\tObject.keys(peerConnections).forEach(this.stopPeerConnection);\n\n\t\twindow.audioContext && window.audioContext.close();\n\t}\n\n\tsetAudioEnabled(enabled = true) {\n\t\tif (this.localStream != null) {\n\t\t\tthis.localStream.getAudioTracks().forEach((audio) => {\n\t\t\t\taudio.enabled = enabled;\n\t\t\t});\n\t\t\tthis.audioEnabled.set(enabled);\n\t\t}\n\t}\n\n\tdisableAudio() {\n\t\tthis.setAudioEnabled(false);\n\t}\n\n\tenableAudio() {\n\t\tthis.setAudioEnabled(true);\n\t}\n\n\ttoggleAudio() {\n\t\tif (this.audioEnabled.get()) {\n\t\t\treturn this.disableAudio();\n\t\t}\n\t\treturn this.enableAudio();\n\t}\n\n\tsetVideoEnabled(enabled = true) {\n\t\tif (this.localStream != null) {\n\t\t\tthis.localStream.getVideoTracks().forEach((video) => {\n\t\t\t\tvideo.enabled = enabled;\n\t\t\t});\n\t\t\tthis.videoEnabled.set(enabled);\n\t\t}\n\t}\n\n\tdisableScreenShare() {\n\t\tthis.setScreenShareEnabled(false);\n\t}\n\n\tenableScreenShare() {\n\t\tthis.setScreenShareEnabled(true);\n\t}\n\n\tsetScreenShareEnabled(enabled = true) {\n\t\tif (this.localStream != null) {\n\t\t\tthis.media.desktop = enabled;\n\t\t\tdelete this.localStream;\n\t\t\tthis.getLocalUserMedia((err) => {\n\t\t\t\tif (err != null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.screenShareEnabled.set(enabled);\n\t\t\t\tthis.stopAllPeerConnections();\n\t\t\t\tthis.joinCall();\n\t\t\t});\n\t\t}\n\t}\n\n\tdisableVideo() {\n\t\tthis.setVideoEnabled(false);\n\t}\n\n\tenableVideo() {\n\t\tthis.setVideoEnabled(true);\n\t}\n\n\ttoggleVideo() {\n\t\tif (this.videoEnabled.get()) {\n\t\t\treturn this.disableVideo();\n\t\t}\n\t\treturn this.enableVideo();\n\t}\n\n\tstop() {\n\t\tthis.active = false;\n\t\tthis.monitor = false;\n\t\tthis.remoteMonitoring = false;\n\t\tif (this.localStream != null && typeof this.localStream !== 'undefined') {\n\t\t\tthis.localStream.getTracks().forEach((track) => track.stop());\n\t\t}\n\t\tthis.localUrl.set(undefined);\n\t\tdelete this.localStream;\n\t\tthis.stopAllPeerConnections();\n\t}\n\n\t/*\n  \t\t@param media {Object}\n  \t\t\taudio {Boolean}\n  \t\t\tvideo {Boolean}\n   */\n\n\tstartCall(media = {}, ...args) {\n\t\tthis.log('startCall', [media, ...args]);\n\t\tthis.media = media;\n\t\tthis.getLocalUserMedia(() => {\n\t\t\tthis.active = true;\n\t\t\tthis.transport.startCall({\n\t\t\t\tmedia: this.media,\n\t\t\t});\n\t\t});\n\t}\n\n\tstartCallAsMonitor(media = {}, ...args) {\n\t\tthis.log('startCallAsMonitor', [media, ...args]);\n\t\tthis.media = media;\n\t\tthis.active = true;\n\t\tthis.monitor = true;\n\t\tthis.transport.startCall({\n\t\t\tmedia: this.media,\n\t\t\tmonitor: true,\n\t\t});\n\t}\n\n\t/*\n  \t\t@param data {Object}\n  \t\t\tfrom {String}\n  \t\t\tmonitor {Boolean}\n  \t\t\tmedia {Object}\n  \t\t\t\taudio {Boolean}\n  \t\t\t\tvideo {Boolean}\n   */\n\n\tonRemoteCall(data) {\n\t\tif (this.autoAccept === true) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.joinCall({\n\t\t\t\t\tto: data.from,\n\t\t\t\t\tmonitor: data.monitor,\n\t\t\t\t\tmedia: data.media,\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = Meteor.users.findOne(data.from);\n\t\tlet fromUsername = undefined;\n\t\tif (user && user.username) {\n\t\t\tfromUsername = user.username;\n\t\t}\n\t\tconst subscription = ChatSubscription.findOne({\n\t\t\trid: data.room,\n\t\t});\n\n\t\tlet icon;\n\t\tlet title;\n\t\tif (data.monitor === true) {\n\t\t\ticon = 'eye';\n\t\t\ttitle = t('WebRTC_monitor_call_from_%s', fromUsername);\n\t\t} else if (subscription && subscription.t === 'd') {\n\t\t\tif (data.media && data.media.video) {\n\t\t\t\ticon = 'videocam';\n\t\t\t\ttitle = t('WebRTC_direct_video_call_from_%s', fromUsername);\n\t\t\t} else {\n\t\t\t\ticon = 'phone';\n\t\t\t\ttitle = t('WebRTC_direct_audio_call_from_%s', fromUsername);\n\t\t\t}\n\t\t} else if (data.media && data.media.video) {\n\t\t\ticon = 'videocam';\n\t\t\ttitle = t('WebRTC_group_video_call_from_%s', subscription.name);\n\t\t} else {\n\t\t\ticon = 'phone';\n\t\t\ttitle = t('WebRTC_group_audio_call_from_%s', subscription.name);\n\t\t}\n\n\t\timperativeModal.open({\n\t\t\tcomponent: GenericModal,\n\t\t\tprops: {\n\t\t\t\ttitle,\n\t\t\t\ticon,\n\t\t\t\tconfirmText: t('Yes'),\n\t\t\t\tcancelText: t('No'),\n\t\t\t\tchildren: t('Do_you_want_to_accept'),\n\t\t\t\tonConfirm: () => {\n\t\t\t\t\tgoToRoomById(data.room);\n\t\t\t\t\treturn this.joinCall({\n\t\t\t\t\t\tto: data.from,\n\t\t\t\t\t\tmonitor: data.monitor,\n\t\t\t\t\t\tmedia: data.media,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tonCancel: () => this.stop(),\n\t\t\t\tonClose: () => this.stop(),\n\t\t\t},\n\t\t});\n\t}\n\n\t/*\n  \t\t@param data {Object}\n  \t\t\tto {String}\n  \t\t\tmonitor {Boolean}\n  \t\t\tmedia {Object}\n  \t\t\t\taudio {Boolean}\n  \t\t\t\tvideo {Boolean}\n  \t\t\t\tdesktop {Boolean}\n   */\n\n\tjoinCall(data = {}, ...args) {\n\t\tdata.media = this.media;\n\t\tthis.log('joinCall', [data, ...args]);\n\t\tthis.getLocalUserMedia(() => {\n\t\t\tthis.remoteMonitoring = data.monitor;\n\t\t\tthis.active = true;\n\t\t\tthis.transport.joinCall(data);\n\t\t});\n\t}\n\n\tonRemoteJoin(data, ...args) {\n\t\tif (this.active !== true) {\n\t\t\treturn;\n\t\t}\n\t\tthis.log('onRemoteJoin', [data, ...args]);\n\t\tlet peerConnection = this.getPeerConnection(data.from);\n\n\t\t// needsRefresh = false\n\t\t// if peerConnection.iceConnectionState isnt 'new'\n\t\t// needsAudio = data.media.audio is true and peerConnection.remoteMedia.audio isnt true\n\t\t// needsVideo = data.media.video is true and peerConnection.remoteMedia.video isnt true\n\t\t// needsRefresh = needsAudio or needsVideo or data.media.desktop isnt peerConnection.remoteMedia.desktop\n\n\t\t// # if peerConnection.signalingState is \"have-local-offer\" or needsRefresh\n\n\t\tif (peerConnection.signalingState !== 'checking') {\n\t\t\tthis.stopPeerConnection(data.from);\n\t\t\tpeerConnection = this.getPeerConnection(data.from);\n\t\t}\n\t\tif (peerConnection.iceConnectionState !== 'new') {\n\t\t\treturn;\n\t\t}\n\t\tpeerConnection.remoteMedia = data.media;\n\t\tif (this.localStream) {\n\t\t\tpeerConnection.addStream(this.localStream);\n\t\t}\n\t\tconst onOffer = (offer) => {\n\t\t\tconst onLocalDescription = () => {\n\t\t\t\tthis.transport.sendDescription({\n\t\t\t\t\tto: data.from,\n\t\t\t\t\ttype: 'offer',\n\t\t\t\t\tts: peerConnection.createdAt,\n\t\t\t\t\tmedia: this.media,\n\t\t\t\t\tdescription: {\n\t\t\t\t\t\tsdp: offer.sdp,\n\t\t\t\t\t\ttype: offer.type,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tpeerConnection.setLocalDescription(new RTCSessionDescription(offer), onLocalDescription, this.onError);\n\t\t};\n\n\t\tif (data.monitor === true) {\n\t\t\tpeerConnection.createOffer(onOffer, this.onError, {\n\t\t\t\tmandatory: {\n\t\t\t\t\tOfferToReceiveAudio: data.media.audio,\n\t\t\t\t\tOfferToReceiveVideo: data.media.video,\n\t\t\t\t},\n\t\t\t});\n\t\t} else {\n\t\t\tpeerConnection.createOffer(onOffer, this.onError);\n\t\t}\n\t}\n\n\tonRemoteOffer(data, ...args) {\n\t\tif (this.active !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.log('onRemoteOffer', [data, ...args]);\n\t\tlet peerConnection = this.getPeerConnection(data.from);\n\n\t\tif (['have-local-offer', 'stable'].includes(peerConnection.signalingState) && peerConnection.createdAt < data.ts) {\n\t\t\tthis.stopPeerConnection(data.from);\n\t\t\tpeerConnection = this.getPeerConnection(data.from);\n\t\t}\n\n\t\tif (peerConnection.iceConnectionState !== 'new') {\n\t\t\treturn;\n\t\t}\n\n\t\tpeerConnection.setRemoteDescription(new RTCSessionDescription(data.description));\n\n\t\ttry {\n\t\t\tif (this.localStream) {\n\t\t\t\tpeerConnection.addStream(this.localStream);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\n\t\tconst onAnswer = (answer) => {\n\t\t\tconst onLocalDescription = () => {\n\t\t\t\tthis.transport.sendDescription({\n\t\t\t\t\tto: data.from,\n\t\t\t\t\ttype: 'answer',\n\t\t\t\t\tts: peerConnection.createdAt,\n\t\t\t\t\tdescription: {\n\t\t\t\t\t\tsdp: answer.sdp,\n\t\t\t\t\t\ttype: answer.type,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tpeerConnection.setLocalDescription(new RTCSessionDescription(answer), onLocalDescription, this.onError);\n\t\t};\n\n\t\tpeerConnection.createAnswer(onAnswer, this.onError);\n\t}\n\n\t/*\n  \t\t@param data {Object}\n  \t\t\tto {String}\n  \t\t\tfrom {String}\n  \t\t\tcandidate {RTCIceCandidate JSON encoded}\n   */\n\n\tonRemoteCandidate(data, ...args) {\n\t\tif (this.active !== true) {\n\t\t\treturn;\n\t\t}\n\t\tif (data.to !== this.selfId) {\n\t\t\treturn;\n\t\t}\n\t\tthis.log('onRemoteCandidate', [data, ...args]);\n\t\tconst peerConnection = this.getPeerConnection(data.from);\n\t\tif (\n\t\t\tpeerConnection.iceConnectionState !== 'closed' &&\n\t\t\tpeerConnection.iceConnectionState !== 'failed' &&\n\t\t\tpeerConnection.iceConnectionState !== 'disconnected' &&\n\t\t\tpeerConnection.iceConnectionState !== 'completed'\n\t\t) {\n\t\t\tpeerConnection.addIceCandidate(new RTCIceCandidate(data.candidate));\n\t\t}\n\t\tdocument.querySelector('video#remoteVideo').srcObject = this.remoteItems.get()[0]?.url;\n\t}\n\n\t/*\n  \t\t@param data {Object}\n  \t\t\tto {String}\n  \t\t\tfrom {String}\n  \t\t\ttype {String} [offer, answer]\n  \t\t\tdescription {RTCSessionDescription JSON encoded}\n  \t\t\tts {Integer}\n  \t\t\tmedia {Object}\n  \t\t\t\taudio {Boolean}\n  \t\t\t\tvideo {Boolean}\n  \t\t\t\tdesktop {Boolean}\n   */\n\n\tonRemoteDescription(data, ...args) {\n\t\tif (this.active !== true) {\n\t\t\treturn;\n\t\t}\n\t\tif (data.to !== this.selfId) {\n\t\t\treturn;\n\t\t}\n\t\tthis.log('onRemoteDescription', [data, ...args]);\n\t\tconst peerConnection = this.getPeerConnection(data.from);\n\t\tif (data.type === 'offer') {\n\t\t\tpeerConnection.remoteMedia = data.media;\n\t\t\tthis.onRemoteOffer({\n\t\t\t\tfrom: data.from,\n\t\t\t\tts: data.ts,\n\t\t\t\tdescription: data.description,\n\t\t\t});\n\t\t} else {\n\t\t\tpeerConnection.setRemoteDescription(new RTCSessionDescription(data.description));\n\t\t}\n\t}\n}\n\nconst WebRTC = new (class {\n\tconstructor() {\n\t\tthis.instancesByRoomId = {};\n\t}\n\n\tgetInstanceByRoomId(rid, visitorId = null) {\n\t\tlet enabled = false;\n\t\tif (!visitorId) {\n\t\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\t\tif (!subscription) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tswitch (subscription.t) {\n\t\t\t\tcase 'd':\n\t\t\t\t\tenabled = settings.get('WebRTC_Enable_Direct');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'p':\n\t\t\t\t\tenabled = settings.get('WebRTC_Enable_Private');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c':\n\t\t\t\t\tenabled = settings.get('WebRTC_Enable_Channel');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'l':\n\t\t\t\t\tenabled = settings.get('Omnichannel_call_provider') === 'WebRTC';\n\t\t\t}\n\t\t} else {\n\t\t\tenabled = settings.get('Omnichannel_call_provider') === 'WebRTC';\n\t\t}\n\t\tenabled = enabled && settings.get('WebRTC_Enabled');\n\t\tif (enabled === false) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.instancesByRoomId[rid] == null) {\n\t\t\tlet uid = Meteor.userId();\n\t\t\tlet autoAccept = false;\n\t\t\tif (visitorId) {\n\t\t\t\tuid = visitorId;\n\t\t\t\tautoAccept = true;\n\t\t\t}\n\t\t\tthis.instancesByRoomId[rid] = new WebRTCClass(uid, rid, autoAccept);\n\t\t}\n\t\treturn this.instancesByRoomId[rid];\n\t}\n})();\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tif (Meteor.userId()) {\n\t\t\tsdk.stream('notify-user', [`${Meteor.userId()}/${WEB_RTC_EVENTS.WEB_RTC}`], (type, data) => {\n\t\t\t\tif (data.room == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst webrtc = WebRTC.getInstanceByRoomId(data.room);\n\t\t\t\twebrtc.onUserStream(type, data);\n\t\t\t});\n\t\t}\n\t});\n});\n\nexport { WebRTC };\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ea25f53f03d0ac8182f2f15290ef0fa34486c7ca"}
