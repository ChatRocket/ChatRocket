{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/federation/server/hooks/afterCreateDirectRoom.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/hooks/afterCreateDirectRoom.js","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/federation/server/hooks/afterCreateDirectRoom.js","targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/federation/server/hooks/afterCreateDirectRoom.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/hooks/afterCreateDirectRoom.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      definition: () => definition\n    });\n    let FederationRoomEvents, Subscriptions;\n    module.link(\"@rocket.chat/models\", {\n      FederationRoomEvents(v) {\n        FederationRoomEvents = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      }\n    }, 0);\n    let deleteRoom;\n    module.link(\"../../../lib/server/functions/deleteRoom\", {\n      deleteRoom(v) {\n        deleteRoom = v;\n      }\n    }, 1);\n    let isFullyQualified;\n    module.link(\"../functions/helpers\", {\n      isFullyQualified(v) {\n        isFullyQualified = v;\n      }\n    }, 2);\n    let dispatchEvents;\n    module.link(\"../handler\", {\n      dispatchEvents(v) {\n        dispatchEvents = v;\n      }\n    }, 3);\n    let getFederationDomain;\n    module.link(\"../lib/getFederationDomain\", {\n      getFederationDomain(v) {\n        getFederationDomain = v;\n      }\n    }, 4);\n    let clientLogger;\n    module.link(\"../lib/logger\", {\n      clientLogger(v) {\n        clientLogger = v;\n      }\n    }, 5);\n    let normalizers;\n    module.link(\"../normalizers\", {\n      normalizers(v) {\n        normalizers = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function afterCreateDirectRoom(room, extras) {\n      clientLogger.debug({\n        msg: 'afterCreateDirectRoom',\n        room,\n        extras\n      });\n\n      // If the room is federated, ignore\n      if (room.federation) {\n        return room;\n      }\n\n      // Check if there is a federated user on this direct room\n      const hasFederatedUser = room.usernames.some(isFullyQualified);\n\n      // If there are not federated users on this room, ignore it\n      if (!hasFederatedUser) {\n        return room;\n      }\n      try {\n        //\n        // Genesis\n        //\n\n        // Normalize room\n        const normalizedRoom = normalizers.normalizeRoom(room);\n\n        // Ensure a genesis event for this room\n        const genesisEvent = await FederationRoomEvents.createGenesisEvent(getFederationDomain(), normalizedRoom);\n        const events = await Promise.all(extras.members.map(async member => {\n          const normalizedMember = await normalizers.normalizeUser(member);\n          const sourceSubscription = await Subscriptions.findOne({\n            'rid': normalizedRoom._id,\n            'u._id': normalizedMember._id\n          });\n          const normalizedSourceSubscription = normalizers.normalizeSubscription(sourceSubscription);\n\n          // Build the user event\n          return FederationRoomEvents.createAddUserEvent(getFederationDomain(), normalizedRoom._id, normalizedMember, normalizedSourceSubscription);\n        }));\n\n        // Dispatch the events\n        await dispatchEvents(normalizedRoom.federation.domains, [genesisEvent, ...events]);\n      } catch (err) {\n        await deleteRoom(room._id);\n        clientLogger.error({\n          msg: 'afterCreateDirectRoom => Could not create federated room:',\n          err\n        });\n      }\n      return room;\n    }\n    const definition = {\n      hook: 'afterCreateDirectRoom',\n      callback: afterCreateDirectRoom,\n      id: 'federation-after-create-direct-room'\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","definition","FederationRoomEvents","Subscriptions","link","v","deleteRoom","isFullyQualified","dispatchEvents","getFederationDomain","clientLogger","normalizers","__reifyWaitForDeps__","afterCreateDirectRoom","room","extras","debug","msg","federation","hasFederatedUser","usernames","some","normalizedRoom","normalizeRoom","genesisEvent","createGenesisEvent","events","Promise","all","members","map","member","normalizedMember","normalizeUser","sourceSubscription","findOne","_id","normalizedSourceSubscription","normalizeSubscription","createAddUserEvent","domains","err","error","hook","callback","id","__reify_async_result__","_reifyError","self","async"],"sources":["app/federation/server/hooks/afterCreateDirectRoom.js"],"sourcesContent":["import { FederationRoomEvents, Subscriptions } from '@rocket.chat/models';\n\nimport { deleteRoom } from '../../../lib/server/functions/deleteRoom';\nimport { isFullyQualified } from '../functions/helpers';\nimport { dispatchEvents } from '../handler';\nimport { getFederationDomain } from '../lib/getFederationDomain';\nimport { clientLogger } from '../lib/logger';\nimport { normalizers } from '../normalizers';\n\nasync function afterCreateDirectRoom(room, extras) {\n\tclientLogger.debug({ msg: 'afterCreateDirectRoom', room, extras });\n\n\t// If the room is federated, ignore\n\tif (room.federation) {\n\t\treturn room;\n\t}\n\n\t// Check if there is a federated user on this direct room\n\tconst hasFederatedUser = room.usernames.some(isFullyQualified);\n\n\t// If there are not federated users on this room, ignore it\n\tif (!hasFederatedUser) {\n\t\treturn room;\n\t}\n\n\ttry {\n\t\t//\n\t\t// Genesis\n\t\t//\n\n\t\t// Normalize room\n\t\tconst normalizedRoom = normalizers.normalizeRoom(room);\n\n\t\t// Ensure a genesis event for this room\n\t\tconst genesisEvent = await FederationRoomEvents.createGenesisEvent(getFederationDomain(), normalizedRoom);\n\n\t\tconst events = await Promise.all(\n\t\t\textras.members.map(async (member) => {\n\t\t\t\tconst normalizedMember = await normalizers.normalizeUser(member);\n\n\t\t\t\tconst sourceSubscription = await Subscriptions.findOne({\n\t\t\t\t\t'rid': normalizedRoom._id,\n\t\t\t\t\t'u._id': normalizedMember._id,\n\t\t\t\t});\n\t\t\t\tconst normalizedSourceSubscription = normalizers.normalizeSubscription(sourceSubscription);\n\n\t\t\t\t// Build the user event\n\t\t\t\treturn FederationRoomEvents.createAddUserEvent(\n\t\t\t\t\tgetFederationDomain(),\n\t\t\t\t\tnormalizedRoom._id,\n\t\t\t\t\tnormalizedMember,\n\t\t\t\t\tnormalizedSourceSubscription,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\t// Dispatch the events\n\t\tawait dispatchEvents(normalizedRoom.federation.domains, [genesisEvent, ...events]);\n\t} catch (err) {\n\t\tawait deleteRoom(room._id);\n\n\t\tclientLogger.error({ msg: 'afterCreateDirectRoom => Could not create federated room:', err });\n\t}\n\n\treturn room;\n}\n\nexport const definition = {\n\thook: 'afterCreateDirectRoom',\n\tcallback: afterCreateDirectRoom,\n\tid: 'federation-after-create-direct-room',\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c348a0a31f75336d1f2c9b96ab73419df699d0e3"}
