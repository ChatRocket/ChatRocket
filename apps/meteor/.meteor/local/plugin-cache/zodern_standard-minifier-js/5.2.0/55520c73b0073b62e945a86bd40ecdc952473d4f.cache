{"code":"function module(e,o,s){let t,c,r,i,l,n,u,a,k;s.export({useBlockUserAction:()=>b}),s.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){t=e}},0),s.link(\"@rocket.chat/ui-contexts\",{useTranslation(e){c=e},useMethod(e){r=e},useToastMessageDispatch(e){i=e},useUserId(e){l=e},useUserSubscription(e){n=e},useUserRoom(e){u=e}},1),s.link(\"react\",{useMemo(e){a=e}},2),s.link(\"../../../lib/getRoomDirectives\",{getRoomDirectives(e){k=e}},3);let b=(e,o)=>{let s=c(),b=i(),d=n(o),U=l(),{_id:h}=e,m=u(o);if(!m)throw Error(\"Room not provided\");let{roomCanBlock:g}=k({room:m,showingUserId:h,userSubscription:d}),p=null==d?void 0:d.blocker,v=r(p?\"unblockUser\":\"blockUser\"),_=t(async()=>{try{await v({rid:o,blocked:h}),b({type:\"success\",message:s(p?\"User_is_unblocked\":\"User_is_blocked\")})}catch(e){b({type:\"error\",message:e})}}),y=a(()=>g&&h!==U?{content:s(p?\"Unblock\":\"Block\"),icon:\"ban\",onClick:_}:void 0,[p,U,g,s,_,h]);return y}}","map":"{\"version\":3,\"sources\":[\"client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, IUser } from '@rocket.chat/core-typings';\\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport { useTranslation, useMethod, useToastMessageDispatch, useUserId, useUserSubscription, useUserRoom } from '@rocket.chat/ui-contexts';\\nimport { useMemo } from 'react';\\n\\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\\nimport type { UserInfoAction } from '../useUserInfoActions';\\n\\nexport const useBlockUserAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\\n\\tconst t = useTranslation();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst currentSubscription = useUserSubscription(rid);\\n\\tconst ownUserId = useUserId();\\n\\tconst { _id: uid } = user;\\n\\tconst room = useUserRoom(rid);\\n\\n\\tif (!room) {\\n\\t\\tthrow Error('Room not provided');\\n\\t}\\n\\n\\tconst { roomCanBlock } = getRoomDirectives({ room, showingUserId: uid, userSubscription: currentSubscription });\\n\\n\\tconst isUserBlocked = currentSubscription?.blocker;\\n\\tconst toggleBlock = useMethod(isUserBlocked ? 'unblockUser' : 'blockUser');\\n\\n\\tconst toggleBlockUserAction = useMutableCallback(async () => {\\n\\t\\ttry {\\n\\t\\t\\tawait toggleBlock({ rid, blocked: uid });\\n\\t\\t\\tdispatchToastMessage({\\n\\t\\t\\t\\ttype: 'success',\\n\\t\\t\\t\\tmessage: t(isUserBlocked ? 'User_is_unblocked' : 'User_is_blocked'),\\n\\t\\t\\t});\\n\\t\\t} catch (error: unknown) {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t}\\n\\t});\\n\\n\\tconst toggleBlockUserOption = useMemo(\\n\\t\\t() =>\\n\\t\\t\\troomCanBlock && uid !== ownUserId\\n\\t\\t\\t\\t? {\\n\\t\\t\\t\\t\\t\\tcontent: t(isUserBlocked ? 'Unblock' : 'Block'),\\n\\t\\t\\t\\t\\t\\ticon: 'ban' as const,\\n\\t\\t\\t\\t\\t\\tonClick: toggleBlockUserAction,\\n\\t\\t\\t\\t  }\\n\\t\\t\\t\\t: undefined,\\n\\t\\t[isUserBlocked, ownUserId, roomCanBlock, t, toggleBlockUserAction, uid],\\n\\t);\\n\\n\\treturn toggleBlockUserOption;\\n};\\n\",null],\"names\":[\"useMutableCallback\",\"useTranslation\",\"useMethod\",\"useToastMessageDispatch\",\"useUserId\",\"useUserSubscription\",\"useUserRoom\",\"useMemo\",\"getRoomDirectives\",\"module\",\"export\",\"useBlockUserAction\",\"link\",\"v\",\"user\",\"rid\",\"t\",\"dispatchToastMessage\",\"currentSubscription\",\"ownUserId\",\"_id\",\"uid\",\"room\",\"Error\",\"roomCanBlock\",\"showingUserId\",\"userSubscription\",\"isUserBlocked\",\"blocker\",\"toggleBlock\",\"toggleBlockUserAction\",\"blocked\",\"type\",\"message\",\"error\",\"toggleBlockUserOption\",\"content\",\"icon\",\"onClick\",\"undefined\"],\"mappings\":\"2BACmCA,EAA8BC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAjEC,EAAOC,MAAE,CAAA,CAAAC,mBAAoBA,IAAMA,CAAA,GAA8BF,EAAAG,IAAA,CAAA,8BAAA,CAAAZ,mBAAAa,CAAA,EAAAb,EAAAa,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,2BAAA,CAAAX,eAAAY,CAAA,EAAAZ,EAAAY,CAAA,EAAAX,UAAAW,CAAA,EAAAX,EAAAW,CAAA,EAAAV,wBAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,UAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,oBAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,YAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,QAAA,CAAAL,QAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,iCAAA,CAAAJ,kBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAO1D,IAAMF,EAAqBA,CAACG,EAAuCC,KACzE,IAAMC,EAAIf,IACJgB,EAAuBd,IACvBe,EAAsBb,EAAoBU,GAC1CI,EAAYf,IACZ,CAAEgB,IAAKC,CAAAA,CAAK,CAAGP,EACfQ,EAAOhB,EAAYS,GAEzB,GAAI,CAACO,EACJ,MAAMC,MAAM,qBAGb,GAAM,CAAEC,aAAAA,CAAAA,CAAc,CAAGhB,EAAkB,CAAEc,KAAAA,EAAMG,cAAeJ,EAAKK,iBAAkBR,CAAmB,GAEtGS,EAAgBT,MAAAA,EAAmB,KAAA,EAAnBA,EAAqBU,OAAO,CAC5CC,EAAc3B,EAAUyB,EAAgB,cAAgB,aAExDG,EAAwB9B,EAAmB,UAChD,GAAI,CACH,MAAM6B,EAAY,CAAEd,IAAAA,EAAKgB,QAASV,CAAG,GACrCJ,EAAqB,CACpBe,KAAM,UACNC,QAASjB,EAAEW,EAAgB,oBAAsB,oBAEnD,CAAE,MAAOO,EAAgB,CACxBjB,EAAqB,CAAEe,KAAM,QAASC,QAASC,CAAK,EACrD,CACD,GAEMC,EAAwB5B,EAC7B,IACCiB,GAAgBH,IAAQF,EACrB,CACAiB,QAASpB,EAAEW,EAAgB,UAAY,SACvCU,KAAM,MACNC,QAASR,GAETS,KAAAA,EACJ,CAACZ,EAAeR,EAAWK,EAAcR,EAAGc,EAAuBT,EAAI,EAGxE,OAAOc,CACR\"}"}