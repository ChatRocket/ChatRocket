{"code":"function module(e,t,n){let a,r,i,o,l,s,m,d,u,c,g,p,f,E,R,v,_;n.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){a=e}},0),n.export({DirectMessageRoomType:()=>h}),n.link(\"@rocket.chat/core-typings\",{isRoomFederated(e){r=e}},0),n.link(\"meteor/meteor\",{Meteor(e){i=e}},1),n.link(\"../../../../app/authorization/client\",{hasAtLeastOnePermission(e){o=e}},2),n.link(\"../../../../app/models/client\",{Subscriptions(e){l=e},Users(e){s=e},ChatRoom(e){m=e}},3),n.link(\"../../../../app/settings/client\",{settings(e){d=e}},4),n.link(\"../../../../app/utils/client\",{getUserPreference(e){u=e}},5),n.link(\"../../../../app/utils/client/getAvatarURL\",{getAvatarURL(e){c=e}},6),n.link(\"../../../../app/utils/client/getUserAvatarURL\",{getUserAvatarURL(e){g=e}},7),n.link(\"../../../../definition/IRoomTypeConfig\",{RoomSettingsEnum(e){p=e},RoomMemberActions(e){f=e},UiTextContext(e){E=e}},8),n.link(\"../../../../lib/rooms/roomTypes/direct\",{getDirectMessageRoomType(e){R=e}},9),n.link(\"../../federation/Federation\",{\"*\"(e){v=e}},10),n.link(\"../roomCoordinator\",{roomCoordinator(e){_=e}},11);let h=R(_);_.add(a(a({},h),{},{label:\"Direct_Messages\"}),{allowRoomSettingChange(e,t){if(r(e))return v.isRoomSettingAllowed(e,t);switch(t){case p.TYPE:case p.NAME:case p.SYSTEM_MESSAGES:case p.DESCRIPTION:case p.READ_ONLY:case p.REACT_WHEN_READ_ONLY:case p.ARCHIVE_OR_UNARCHIVE:case p.JOIN_CODE:return!1;case p.E2E:return!0===d.get(\"E2E_Enable\");default:return!0}},allowMemberAction(e,t,n,a){return r(e)?v.actionAllowed(e,t,n,a):t===f.BLOCK&&!this.isGroupChat(e)},roomName(e){let t=e.fname||e.name?{fname:e.fname,name:e.name}:e._id?l.findOne({rid:e._id}):void 0;return t?d.get(\"UI_Use_Real_Name\")&&t.fname?t.fname:t.name:void 0},isGroupChat(e){var t;return((null==e?void 0:null===(t=e.uids)||void 0===t?void 0:t.length)||0)>2},getUiText(e){switch(e){case E.HIDE_WARNING:return\"Hide_Private_Warning\";case E.LEAVE_WARNING:return\"Leave_Private_Warning\";default:return\"\"}},condition(){let e=u(i.userId(),\"sidebarGroupByType\");return e&&o([\"view-d-room\",\"view-joined-room\"])},getAvatarPath(e){if(!e)return\"\";if(e.name&&e.avatarETag)return g(e.name,e.avatarETag);if(this.isGroupChat(e))return c({username:(e.uids||[]).length+(e.usernames||[]).join(),cache:e.avatarETag});let t=l.findOne({rid:e._id},{fields:{name:1}});if(null!=t&&t.name){let e=s.findOne({username:t.name},{fields:{username:1,avatarETag:1}});return g((null==e?void 0:e.username)||t.name,null==e?void 0:e.avatarETag)}return g(e.name||this.roomName(e)||\"\")},getIcon(e){return r(e)?\"globe\":this.isGroupChat(e)?\"balloon\":\"at\"},extractOpenRoomParams(e){let{rid:t}=e;return{type:\"d\",reference:t}},findRoom(e){let t=l.findOne({t:\"d\",$or:[{name:e},{rid:e}]});if(null!=t&&t.rid)return m.findOne(t.rid)}})}","map":"{\"version\":3,\"sources\":[\"client/lib/rooms/roomTypes/direct.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { AtLeast, IRoom, ISubscription, IUser } from '@rocket.chat/core-typings';\\nimport { isRoomFederated } from '@rocket.chat/core-typings';\\nimport { Meteor } from 'meteor/meteor';\\nimport type { Mongo } from 'meteor/mongo';\\n\\nimport { hasAtLeastOnePermission } from '../../../../app/authorization/client';\\nimport { Subscriptions, Users, ChatRoom } from '../../../../app/models/client';\\nimport { settings } from '../../../../app/settings/client';\\nimport { getUserPreference } from '../../../../app/utils/client';\\nimport { getAvatarURL } from '../../../../app/utils/client/getAvatarURL';\\nimport { getUserAvatarURL } from '../../../../app/utils/client/getUserAvatarURL';\\nimport type { IRoomTypeClientDirectives } from '../../../../definition/IRoomTypeConfig';\\nimport { RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../../definition/IRoomTypeConfig';\\nimport { getDirectMessageRoomType } from '../../../../lib/rooms/roomTypes/direct';\\nimport * as Federation from '../../federation/Federation';\\nimport { roomCoordinator } from '../roomCoordinator';\\n\\nexport const DirectMessageRoomType = getDirectMessageRoomType(roomCoordinator);\\n\\nroomCoordinator.add(\\n\\t{\\n\\t\\t...DirectMessageRoomType,\\n\\t\\tlabel: 'Direct_Messages',\\n\\t},\\n\\t{\\n\\t\\tallowRoomSettingChange(_room, setting) {\\n\\t\\t\\tif (isRoomFederated(_room as IRoom)) {\\n\\t\\t\\t\\treturn Federation.isRoomSettingAllowed(_room, setting);\\n\\t\\t\\t}\\n\\t\\t\\tswitch (setting) {\\n\\t\\t\\t\\tcase RoomSettingsEnum.TYPE:\\n\\t\\t\\t\\tcase RoomSettingsEnum.NAME:\\n\\t\\t\\t\\tcase RoomSettingsEnum.SYSTEM_MESSAGES:\\n\\t\\t\\t\\tcase RoomSettingsEnum.DESCRIPTION:\\n\\t\\t\\t\\tcase RoomSettingsEnum.READ_ONLY:\\n\\t\\t\\t\\tcase RoomSettingsEnum.REACT_WHEN_READ_ONLY:\\n\\t\\t\\t\\tcase RoomSettingsEnum.ARCHIVE_OR_UNARCHIVE:\\n\\t\\t\\t\\tcase RoomSettingsEnum.JOIN_CODE:\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\tcase RoomSettingsEnum.E2E:\\n\\t\\t\\t\\t\\treturn settings.get('E2E_Enable') === true;\\n\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tallowMemberAction(room, action, showingUserId, userSubscription) {\\n\\t\\t\\tif (isRoomFederated(room as IRoom)) {\\n\\t\\t\\t\\treturn Federation.actionAllowed(room, action, showingUserId, userSubscription);\\n\\t\\t\\t}\\n\\t\\t\\tswitch (action) {\\n\\t\\t\\t\\tcase RoomMemberActions.BLOCK:\\n\\t\\t\\t\\t\\treturn !this.isGroupChat(room);\\n\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\troomName(roomData) {\\n\\t\\t\\tconst subscription = ((): { fname?: string; name?: string } | undefined => {\\n\\t\\t\\t\\tif (roomData.fname || roomData.name) {\\n\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\tfname: roomData.fname,\\n\\t\\t\\t\\t\\t\\tname: roomData.name,\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (!roomData._id) {\\n\\t\\t\\t\\t\\treturn undefined;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn Subscriptions.findOne({ rid: roomData._id });\\n\\t\\t\\t})();\\n\\n\\t\\t\\tif (!subscription) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (settings.get('UI_Use_Real_Name') && subscription.fname) {\\n\\t\\t\\t\\treturn subscription.fname;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn subscription.name;\\n\\t\\t},\\n\\n\\t\\tisGroupChat(room) {\\n\\t\\t\\treturn (room?.uids?.length || 0) > 2;\\n\\t\\t},\\n\\n\\t\\tgetUiText(context) {\\n\\t\\t\\tswitch (context) {\\n\\t\\t\\t\\tcase UiTextContext.HIDE_WARNING:\\n\\t\\t\\t\\t\\treturn 'Hide_Private_Warning';\\n\\t\\t\\t\\tcase UiTextContext.LEAVE_WARNING:\\n\\t\\t\\t\\t\\treturn 'Leave_Private_Warning';\\n\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\treturn '';\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tcondition() {\\n\\t\\t\\tconst groupByType = getUserPreference(Meteor.userId(), 'sidebarGroupByType');\\n\\t\\t\\treturn groupByType && hasAtLeastOnePermission(['view-d-room', 'view-joined-room']);\\n\\t\\t},\\n\\n\\t\\tgetAvatarPath(room) {\\n\\t\\t\\tif (!room) {\\n\\t\\t\\t\\treturn '';\\n\\t\\t\\t}\\n\\n\\t\\t\\t// if coming from sidenav search\\n\\t\\t\\tif (room.name && room.avatarETag) {\\n\\t\\t\\t\\treturn getUserAvatarURL(room.name, room.avatarETag);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (this.isGroupChat(room)) {\\n\\t\\t\\t\\treturn getAvatarURL({\\n\\t\\t\\t\\t\\tusername: (room.uids || []).length + (room.usernames || []).join(),\\n\\t\\t\\t\\t\\tcache: room.avatarETag,\\n\\t\\t\\t\\t}) as string;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst sub = Subscriptions.findOne({ rid: room._id }, { fields: { name: 1 } });\\n\\t\\t\\tif (sub?.name) {\\n\\t\\t\\t\\tconst user = Users.findOne({ username: sub.name }, { fields: { username: 1, avatarETag: 1 } }) as IUser | undefined;\\n\\t\\t\\t\\treturn getUserAvatarURL(user?.username || sub.name, user?.avatarETag);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn getUserAvatarURL(room.name || this.roomName(room) || '');\\n\\t\\t},\\n\\n\\t\\tgetIcon(room) {\\n\\t\\t\\tif (isRoomFederated(room)) {\\n\\t\\t\\t\\treturn 'globe';\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (this.isGroupChat(room)) {\\n\\t\\t\\t\\treturn 'balloon';\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn 'at';\\n\\t\\t},\\n\\n\\t\\textractOpenRoomParams({ rid }) {\\n\\t\\t\\treturn { type: 'd', reference: rid };\\n\\t\\t},\\n\\n\\t\\tfindRoom(identifier) {\\n\\t\\t\\tconst query: Mongo.Selector<ISubscription> = {\\n\\t\\t\\t\\tt: 'd',\\n\\t\\t\\t\\t$or: [{ name: identifier }, { rid: identifier }],\\n\\t\\t\\t};\\n\\n\\t\\t\\tconst subscription = Subscriptions.findOne(query);\\n\\t\\t\\tif (subscription?.rid) {\\n\\t\\t\\t\\treturn ChatRoom.findOne(subscription.rid);\\n\\t\\t\\t}\\n\\t\\t},\\n\\t} as AtLeast<IRoomTypeClientDirectives, 'isGroupChat' | 'roomName'>,\\n);\\n\",null],\"names\":[\"_objectSpread\",\"isRoomFederated\",\"Meteor\",\"hasAtLeastOnePermission\",\"Subscriptions\",\"Users\",\"ChatRoom\",\"settings\",\"getUserPreference\",\"getAvatarURL\",\"getUserAvatarURL\",\"RoomSettingsEnum\",\"RoomMemberActions\",\"UiTextContext\",\"getDirectMessageRoomType\",\"Federation\",\"roomCoordinator\",\"module\",\"link\",\"default\",\"v\",\"export\",\"DirectMessageRoomType\",\"add\",\"label\",\"allowRoomSettingChange\",\"_room\",\"setting\",\"isRoomSettingAllowed\",\"TYPE\",\"NAME\",\"SYSTEM_MESSAGES\",\"DESCRIPTION\",\"READ_ONLY\",\"REACT_WHEN_READ_ONLY\",\"ARCHIVE_OR_UNARCHIVE\",\"JOIN_CODE\",\"E2E\",\"get\",\"allowMemberAction\",\"room\",\"action\",\"showingUserId\",\"userSubscription\",\"actionAllowed\",\"BLOCK\",\"isGroupChat\",\"roomName\",\"roomData\",\"subscription\",\"fname\",\"name\",\"_id\",\"findOne\",\"rid\",\"_room$uids\",\"uids\",\"length\",\"getUiText\",\"context\",\"HIDE_WARNING\",\"LEAVE_WARNING\",\"condition\",\"groupByType\",\"userId\",\"getAvatarPath\",\"avatarETag\",\"username\",\"usernames\",\"join\",\"cache\",\"sub\",\"fields\",\"user\",\"getIcon\",\"extractOpenRoomParams\",\"_ref\",\"type\",\"reference\",\"findRoom\",\"identifier\",\"t\",\"$or\"],\"mappings\":\"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\"}"}