{"code":"function module(e,n,t){let l,o,a,s,r,i;t.link(\"react\",{default(e){l=e},useMemo(e){o=e}},0),t.link(\"../../../components/GenericModal/GenericModalSkeleton\",{default(e){a=e}},1),t.link(\"../../../hooks/useEndpointData\",{useEndpointData(e){s=e}},2),t.link(\"../../../lib/asyncState\",{AsyncStatePhase(e){r=e}},3),t.link(\"./BaseConvertToChannelModal\",{default(e){i=e}},4),t.exportDefault(e=>{let{onClose:n,onCancel:t,onConfirm:u,teamId:c,userId:m}=e,{value:d,phase:f}=s(\"/v1/teams.listRoomsOfUser\",{params:o(()=>({teamId:c,userId:m,canUserDelete:\"true\"}),[c,m])});return f===r.LOADING?l.createElement(a,null):l.createElement(i,{onClose:n,onCancel:t,onConfirm:u,rooms:null==d?void 0:d.rooms})})}","map":"{\"version\":3,\"sources\":[\"client/views/teams/ConvertToChannelModal/ConvertToChannelModal.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, Serialized } from '@rocket.chat/core-typings';\\nimport React, { useMemo } from 'react';\\n\\nimport GenericModalSkeleton from '../../../components/GenericModal/GenericModalSkeleton';\\nimport { useEndpointData } from '../../../hooks/useEndpointData';\\nimport { AsyncStatePhase } from '../../../lib/asyncState';\\nimport BaseConvertToChannelModal from './BaseConvertToChannelModal';\\n\\ntype ConvertToChannelModalProps = {\\n\\tonClose: () => void;\\n\\tonCancel: () => void;\\n\\tonConfirm: (deletedRooms: { [key: string]: Serialized<IRoom> }) => void;\\n\\tteamId: string;\\n\\tuserId: string;\\n};\\n\\nconst ConvertToChannelModal = ({ onClose, onCancel, onConfirm, teamId, userId }: ConvertToChannelModalProps) => {\\n\\tconst { value, phase } = useEndpointData('/v1/teams.listRoomsOfUser', {\\n\\t\\tparams: useMemo(() => ({ teamId, userId, canUserDelete: 'true' }), [teamId, userId]),\\n\\t});\\n\\n\\tif (phase === AsyncStatePhase.LOADING) {\\n\\t\\treturn <GenericModalSkeleton />;\\n\\t}\\n\\n\\treturn <BaseConvertToChannelModal onClose={onClose} onCancel={onCancel} onConfirm={onConfirm} rooms={value?.rooms} />;\\n};\\n\\nexport default ConvertToChannelModal;\\n\",null],\"names\":[\"React\",\"useMemo\",\"GenericModalSkeleton\",\"useEndpointData\",\"AsyncStatePhase\",\"BaseConvertToChannelModal\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"onClose\",\"onCancel\",\"onConfirm\",\"teamId\",\"userId\",\"value\",\"phase\",\"params\",\"canUserDelete\",\"LOADING\",\"createElement\",\"rooms\"],\"mappings\":\"2BACAA,EAAOC,EAAgCC,EAAAC,EAAAC,EAAAC,EAAvBC,EAASC,IAAA,CAAA,QAAa,CAACC,QAAAC,CAAA,EAAAT,EAAAS,CAAA,EAAAR,QAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wDAAA,CAAAC,QAAAC,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,iCAAA,CAAAJ,gBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,0BAAA,CAAAH,gBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,8BAAA,CAAAC,QAAAC,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAvCH,EAAOI,aAAS,CAecC,IAAiF,GAAhF,CAAEC,QAAAA,CAAO,CAAEC,SAAAA,CAAQ,CAAEC,UAAAA,CAAS,CAAEC,OAAAA,CAAM,CAAEC,OAAAA,CAAAA,CAAoC,CAAAL,EACpG,CAAEM,MAAAA,CAAK,CAAEC,MAAAA,CAAAA,CAAO,CAAGf,EAAgB,4BAA6B,CACrEgB,OAAQlB,EAAQ,IAAO,CAAA,CAAEc,OAAAA,EAAQC,OAAAA,EAAQI,cAAe,MAAM,CAAA,EAAK,CAACL,EAAQC,EAAO,WAGpF,AAAIE,IAAUd,EAAgBiB,OAAO,CAC7BrB,EAAAsB,aAAA,CAACpB,EAAoB,MAGtBF,EAAAsB,aAAA,CAACjB,EAAyB,CAACO,QAASA,EAASC,SAAUA,EAAUC,UAAWA,EAAWS,MAAON,MAAAA,EAAK,KAAA,EAALA,EAAOM,KAAAA,AAAM,EACnH\"}"}