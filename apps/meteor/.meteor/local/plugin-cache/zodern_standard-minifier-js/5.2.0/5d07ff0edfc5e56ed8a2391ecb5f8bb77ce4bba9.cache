{"code":"function module(e,t,a){let s,n,o,r,i,l,u,d,c,_;a.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){s=e},useRouteParameter(e){n=e},useRouter(e){o=e},useSetModal(e){r=e},useToastMessageDispatch(e){i=e}},0),a.link(\"@tanstack/react-query\",{useMutation(e){l=e},useQueryClient(e){u=e}},1),a.link(\"react\",{default(e){d=e}},2),a.link(\"react-i18next\",{useTranslation(e){c=e}},3),a.link(\"../../../../components/GenericModal\",{default(e){_=e}},4),a.exportDefault(e=>{let{t}=c(),a=s(\"POST\",\"/v1/moderation.user.deleteReportedMessages\"),m=i(),g=r(),M=o(),y=n(\"tab\"),p=u(),f=l({mutationFn:a,onError:e=>{m({type:\"error\",message:e})},onSuccess:()=>{m({type:\"success\",message:t(\"Moderation_Messages_deleted\")})}}),k=async()=>{await f.mutateAsync({userId:e}),p.invalidateQueries({queryKey:[\"moderation\",\"msgReports\",\"fetchAll\"]}),g(),M.navigate(\"/admin/moderation/\".concat(y))},h=()=>{g(d.createElement(_,{confirmText:t(\"Moderation_Dismiss_and_delete\"),title:t(\"Moderation_Delete_all_messages\"),variant:\"danger\",onConfirm:()=>k(),onCancel:()=>g()},t(\"Moderation_Are_you_sure_you_want_to_delete_all_reported_messages_from_this_user\")))};return{id:\"deleteAll\",content:t(\"Moderation_Delete_all_messages\"),icon:\"trash\",onClick:()=>h()}})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/moderation/hooks/useDeleteMessagesAction.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { GenericMenuItemProps } from '@rocket.chat/ui-client';\\nimport { useEndpoint, useRouteParameter, useRouter, useSetModal, useToastMessageDispatch } from '@rocket.chat/ui-contexts';\\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\\nimport React from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport GenericModal from '../../../../components/GenericModal';\\n\\nconst useDeleteMessagesAction = (userId: string): GenericMenuItemProps => {\\n\\tconst { t } = useTranslation();\\n\\tconst deleteMessages = useEndpoint('POST', '/v1/moderation.user.deleteReportedMessages');\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst setModal = useSetModal();\\n\\tconst router = useRouter();\\n\\tconst tab = useRouteParameter('tab');\\n\\tconst queryClient = useQueryClient();\\n\\n\\tconst handleDeleteMessages = useMutation({\\n\\t\\tmutationFn: deleteMessages,\\n\\t\\tonError: (error) => {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t},\\n\\t\\tonSuccess: () => {\\n\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Moderation_Messages_deleted') });\\n\\t\\t},\\n\\t});\\n\\n\\tconst onDeleteAll = async () => {\\n\\t\\tawait handleDeleteMessages.mutateAsync({ userId });\\n\\t\\tqueryClient.invalidateQueries({ queryKey: ['moderation', 'msgReports', 'fetchAll'] });\\n\\t\\tsetModal();\\n\\t\\trouter.navigate(`/admin/moderation/${tab}`);\\n\\t};\\n\\n\\tconst confirmDeletMessages = (): void => {\\n\\t\\tsetModal(\\n\\t\\t\\t<GenericModal\\n\\t\\t\\t\\tconfirmText={t('Moderation_Dismiss_and_delete')}\\n\\t\\t\\t\\ttitle={t('Moderation_Delete_all_messages')}\\n\\t\\t\\t\\tvariant='danger'\\n\\t\\t\\t\\tonConfirm={() => onDeleteAll()}\\n\\t\\t\\t\\tonCancel={() => setModal()}\\n\\t\\t\\t>\\n\\t\\t\\t\\t{t('Moderation_Are_you_sure_you_want_to_delete_all_reported_messages_from_this_user')}\\n\\t\\t\\t</GenericModal>,\\n\\t\\t);\\n\\t};\\n\\n\\treturn {\\n\\t\\tid: 'deleteAll',\\n\\t\\tcontent: t('Moderation_Delete_all_messages'),\\n\\t\\ticon: 'trash',\\n\\t\\tonClick: () => confirmDeletMessages(),\\n\\t};\\n};\\n\\nexport default useDeleteMessagesAction;\\n\",null],\"names\":[\"useEndpoint\",\"useRouteParameter\",\"useRouter\",\"useSetModal\",\"useToastMessageDispatch\",\"useMutation\",\"useQueryClient\",\"React\",\"useTranslation\",\"GenericModal\",\"module\",\"link\",\"v\",\"default\",\"exportDefault\",\"userId\",\"t\",\"deleteMessages\",\"dispatchToastMessage\",\"setModal\",\"router\",\"tab\",\"queryClient\",\"handleDeleteMessages\",\"mutationFn\",\"onError\",\"error\",\"type\",\"message\",\"onSuccess\",\"onDeleteAll\",\"mutateAsync\",\"invalidateQueries\",\"queryKey\",\"navigate\",\"concat\",\"confirmDeletMessages\",\"createElement\",\"confirmText\",\"title\",\"variant\",\"onConfirm\",\"onCancel\",\"id\",\"content\",\"icon\",\"onClick\"],\"mappings\":\"2BACAA,EAASC,EAAaC,EAAmBC,EAAWC,EAAuEC,EAAAC,EAAAC,EAAAC,EAAAC,EAA1DC,EAAAC,IAAyB,CAAA,2BAAM,CAAAX,YAA2BY,CAAA,EAAAZ,EAAAY,CAAA,EAAAX,kBAAAW,CAAA,EAAAX,EAAAW,CAAA,EAAAV,UAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,YAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,wBAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,wBAAA,CAAAN,YAAAO,CAAA,EAAAP,EAAAO,CAAA,EAAAN,eAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,gBAAA,CAAAH,eAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,sCAAA,CAAAE,QAAAD,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAA3HF,EAAOI,aAAa,CAOaC,IAChC,GAAM,CAAEC,CAAAA,CAAG,CAAGR,IACRS,EAAiBjB,EAAY,OAAQ,8CACrCkB,EAAuBd,IACvBe,EAAWhB,IACXiB,EAASlB,IACTmB,EAAMpB,EAAkB,OACxBqB,EAAchB,IAEdiB,EAAuBlB,EAAY,CACxCmB,WAAYP,EACZQ,QAAUC,IACTR,EAAqB,CAAES,KAAM,QAASC,QAASF,CAAK,EACrD,EACAG,UAAWA,KACVX,EAAqB,CAAES,KAAM,UAAWC,QAASZ,EAAE,8BAA8B,EAClF,IAGKc,EAAc,UACnB,MAAMP,EAAqBQ,WAAW,CAAC,CAAEhB,OAAAA,CAAM,GAC/CO,EAAYU,iBAAiB,CAAC,CAAEC,SAAU,CAAC,aAAc,aAAc,WAAU,AAAC,GAClFd,IACAC,EAAOc,QAAQ,CAAA,qBAAAC,MAAA,CAAsBd,GACtC,EAEMe,EAAuBA,KAC5BjB,EACCZ,EAAA8B,aAAA,CAAC5B,EAAY,CACZ6B,YAAatB,EAAE,iCACfuB,MAAOvB,EAAE,kCACTwB,QAAQ,SACRC,UAAWA,IAAMX,IACjBY,SAAUA,IAAMvB,GAAW,EAE1BH,EAAE,oFAGN,EAEA,MAAO,CACN2B,GAAI,YACJC,QAAS5B,EAAE,kCACX6B,KAAM,QACNC,QAASA,IAAMV,IAEjB\"}"}