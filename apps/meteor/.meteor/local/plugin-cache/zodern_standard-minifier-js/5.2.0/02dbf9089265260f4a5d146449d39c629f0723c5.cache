{"code":"function module(e,t,s){let i,r,l,c;s.export({selectedMessageStore:()=>n,SelectedMessagesProvider:()=>h}),s.link(\"@rocket.chat/emitter\",{Emitter(e){i=e}},0),s.link(\"react\",{default(e){r=e},useMemo(e){l=e}},1),s.link(\"../MessageList/contexts/SelectedMessagesContext\",{SelectedMessageContext(e){c=e}},2);let n=new class e extends i{constructor(){super(...arguments),this.store=new Set,this.isSelecting=!1}setIsSelecting(e){this.isSelecting=e,this.emit(\"toggleIsSelecting\",e)}getIsSelecting(){return this.isSelecting}isSelected(e){return!!this.store.has(e)}getSelectedMessages(){return Array.from(this.store)}toggle(e){if(this.store.has(e)){this.store.delete(e),this.emit(e,!1),this.emit(\"change\");return}this.store.add(e),this.emit(e,!0),this.emit(\"change\")}count(){return this.store.size}clearStore(){let e=this.getSelectedMessages();this.store.clear(),e.forEach(e=>this.emit(e,!1)),this.emit(\"change\")}reset(){this.clearStore(),this.isSelecting=!1,this.emit(\"toggleIsSelecting\",!1)}},h=e=>{let{children:t}=e,s=l(()=>({selectedMessageStore:n}),[]);return r.createElement(c.Provider,{value:s},t)}}","map":"{\"version\":3,\"sources\":[\"client/views/room/providers/SelectedMessagesProvider.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { Emitter } from '@rocket.chat/emitter';\\nimport type { ReactNode } from 'react';\\nimport React, { useMemo } from 'react';\\n\\nimport { SelectedMessageContext } from '../MessageList/contexts/SelectedMessagesContext';\\n\\n// data-qa-select\\n\\nexport const selectedMessageStore = new (class SelectMessageStore extends Emitter<\\n\\t{\\n\\t\\tchange: undefined;\\n\\t\\ttoggleIsSelecting: boolean;\\n\\t} & { [mid: string]: boolean }\\n> {\\n\\tstore = new Set<string>();\\n\\n\\tisSelecting = false;\\n\\n\\tsetIsSelecting(isSelecting: boolean): void {\\n\\t\\tthis.isSelecting = isSelecting;\\n\\t\\tthis.emit('toggleIsSelecting', isSelecting);\\n\\t}\\n\\n\\tgetIsSelecting(): boolean {\\n\\t\\treturn this.isSelecting;\\n\\t}\\n\\n\\tisSelected(mid: string): boolean {\\n\\t\\treturn Boolean(this.store.has(mid));\\n\\t}\\n\\n\\tgetSelectedMessages(): string[] {\\n\\t\\treturn Array.from(this.store);\\n\\t}\\n\\n\\ttoggle(mid: string): void {\\n\\t\\tif (this.store.has(mid)) {\\n\\t\\t\\tthis.store.delete(mid);\\n\\t\\t\\tthis.emit(mid, false);\\n\\t\\t\\tthis.emit('change');\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tthis.store.add(mid);\\n\\t\\tthis.emit(mid, true);\\n\\t\\tthis.emit('change');\\n\\t}\\n\\n\\tcount(): number {\\n\\t\\treturn this.store.size;\\n\\t}\\n\\n\\tclearStore(): void {\\n\\t\\tconst selectedMessages = this.getSelectedMessages();\\n\\t\\tthis.store.clear();\\n\\t\\tselectedMessages.forEach((mid) => this.emit(mid, false));\\n\\t\\tthis.emit('change');\\n\\t}\\n\\n\\treset(): void {\\n\\t\\tthis.clearStore();\\n\\t\\tthis.isSelecting = false;\\n\\t\\tthis.emit('toggleIsSelecting', false);\\n\\t}\\n})();\\n\\ntype SelectedMessagesProviderProps = {\\n\\tchildren?: ReactNode;\\n};\\n\\nexport const SelectedMessagesProvider = ({ children }: SelectedMessagesProviderProps) => {\\n\\tconst value = useMemo(\\n\\t\\t() => ({\\n\\t\\t\\tselectedMessageStore,\\n\\t\\t}),\\n\\t\\t[],\\n\\t);\\n\\n\\treturn <SelectedMessageContext.Provider value={value}>{children}</SelectedMessageContext.Provider>;\\n};\\n\",null],\"names\":[\"Emitter\",\"React\",\"useMemo\",\"SelectedMessageContext\",\"module\",\"export\",\"selectedMessageStore\",\"SelectedMessagesProvider\",\"link\",\"v\",\"default\",\"SelectMessageStore\",\"constructor\",\"arguments\",\"store\",\"Set\",\"isSelecting\",\"setIsSelecting\",\"emit\",\"getIsSelecting\",\"isSelected\",\"mid\",\"Boolean\",\"has\",\"getSelectedMessages\",\"Array\",\"from\",\"toggle\",\"delete\",\"add\",\"count\",\"size\",\"clearStore\",\"selectedMessages\",\"clear\",\"forEach\",\"reset\",\"_ref\",\"children\",\"value\",\"createElement\",\"Provider\"],\"mappings\":\"2BAA+CA,EAAAC,EAAAC,EAAAC,EAA/CC,EAAOC,MAAE,CAAA,CAAAC,qBAAeA,IAAAA,EAAuBC,yBAAAA,IAAAA,CAAA,GAAAH,EAAAI,IAAA,CAAA,uBAAA,CAAAR,QAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAL,EAAAI,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,QAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAL,EAAAI,IAAA,CAAA,kDAAA,CAAAL,uBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAQxC,IAAMH,EAAuB,IAAK,MAAMK,UAA2BX,EAKzEY,aAAA,CAAA,KAAA,IAAAC,WAAA,IAAA,CACAC,KAAK,CAAG,IAAIC,IAAa,IAAA,CAEzBC,WAAW,CAAG,CAAA,CAAK,CAEnBC,eAAeD,CAAoB,CAAA,CAClC,IAAI,CAACA,WAAW,CAAGA,EACnB,IAAI,CAACE,IAAI,CAAC,oBAAqBF,EAChC,CAEAG,gBAAc,CACb,OAAO,IAAI,CAACH,WAAW,AACxB,CAEAI,WAAWC,CAAW,CAAA,CACrB,MAAOC,CAAAA,CAAQ,IAAI,CAACR,KAAK,CAACS,GAAG,CAACF,EAC/B,CAEAG,qBAAmB,CAClB,OAAOC,MAAMC,IAAI,CAAC,IAAI,CAACZ,KAAK,CAC7B,CAEAa,OAAON,CAAW,CAAA,CACjB,GAAI,IAAI,CAACP,KAAK,CAACS,GAAG,CAACF,GAAM,CACxB,IAAI,CAACP,KAAK,CAACc,MAAM,CAACP,GAClB,IAAI,CAACH,IAAI,CAACG,EAAK,CAAA,GACf,IAAI,CAACH,IAAI,CAAC,UACV,MACD,CACA,IAAI,CAACJ,KAAK,CAACe,GAAG,CAACR,GACf,IAAI,CAACH,IAAI,CAACG,EAAK,CAAA,GACf,IAAI,CAACH,IAAI,CAAC,SACX,CAEAY,OAAK,CACJ,OAAO,IAAI,CAAChB,KAAK,CAACiB,IAAI,AACvB,CAEAC,YAAU,CACT,IAAMC,EAAmB,IAAI,CAACT,mBAAmB,GACjD,IAAI,CAACV,KAAK,CAACoB,KAAK,GAChBD,EAAiBE,OAAO,CAAEd,GAAQ,IAAI,CAACH,IAAI,CAACG,EAAK,CAAA,IACjD,IAAI,CAACH,IAAI,CAAC,SACX,CAEAkB,OAAK,CACJ,IAAI,CAACJ,UAAU,GACf,IAAI,CAAChB,WAAW,CAAG,CAAA,EACnB,IAAI,CAACE,IAAI,CAAC,oBAAqB,CAAA,EAChC,GAOYX,EAA2B8B,IAAgD,GAA/C,CAAEC,SAAAA,CAAAA,CAAyC,CAAAD,EAC7EE,EAAQrC,EACb,IAAO,CAAA,CACNI,qBAAAA,IAED,EAAE,EAGH,OAAOL,EAAAuC,aAAA,CAACrC,EAAuBsC,QAAQ,CAAA,CAACF,MAAOA,CAAM,EAAED,EACxD\"}"}