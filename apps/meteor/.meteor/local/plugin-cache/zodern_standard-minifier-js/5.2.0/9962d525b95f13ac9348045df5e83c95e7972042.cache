{"code":"function module(o,e,r){let d,n,t;r.link(\"meteor/meteor\",{Meteor(o){d=o}},0),r.link(\"../../lib/2fa/overrideLoginMethod\",{callLoginMethod(o){n=o},handleLogin(o){t=o}},1),d.loginWithCrowd=t((o,e)=>n({methodArguments:[{crowd:!0,username:o,crowdPassword:e}]}),(o,e,r)=>n({methodArguments:[{totp:{login:{crowd:!0,username:o,crowdPassword:e},code:r}}]}))}","map":"{\"version\":3,\"sources\":[\"client/meteorOverrides/login/crowd.ts\",\"<anon>\"],\"sourcesContent\":[\"import { Meteor } from 'meteor/meteor';\\n\\nimport { callLoginMethod, handleLogin, type LoginCallback } from '../../lib/2fa/overrideLoginMethod';\\n\\ndeclare module 'meteor/meteor' {\\n\\t// eslint-disable-next-line @typescript-eslint/no-namespace\\n\\tnamespace Meteor {\\n\\t\\tfunction loginWithCrowd(\\n\\t\\t\\tuserDescriptor: { username: string } | { email: string } | { id: string } | string,\\n\\t\\t\\tpassword: string,\\n\\t\\t\\tcallback?: LoginCallback,\\n\\t\\t): void;\\n\\t}\\n}\\n\\nconst loginWithCrowd = (userDescriptor: { username: string } | { email: string } | { id: string } | string, password: string) => {\\n\\tconst loginRequest = {\\n\\t\\tcrowd: true,\\n\\t\\tusername: userDescriptor,\\n\\t\\tcrowdPassword: password,\\n\\t};\\n\\n\\treturn callLoginMethod({ methodArguments: [loginRequest] });\\n};\\n\\nconst loginWithCrowdAndTOTP = (\\n\\tuserDescriptor: { username: string } | { email: string } | { id: string } | string,\\n\\tpassword: string,\\n\\tcode: string,\\n) => {\\n\\tconst loginRequest = {\\n\\t\\tcrowd: true,\\n\\t\\tusername: userDescriptor,\\n\\t\\tcrowdPassword: password,\\n\\t};\\n\\n\\treturn callLoginMethod({\\n\\t\\tmethodArguments: [\\n\\t\\t\\t{\\n\\t\\t\\t\\ttotp: {\\n\\t\\t\\t\\t\\tlogin: loginRequest,\\n\\t\\t\\t\\t\\tcode,\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t],\\n\\t});\\n};\\n\\nMeteor.loginWithCrowd = handleLogin(loginWithCrowd, loginWithCrowdAndTOTP);\\n\",null],\"names\":[\"Meteor\",\"callLoginMethod\",\"handleLogin\",\"module\",\"link\",\"v\",\"loginWithCrowd\",\"userDescriptor\",\"password\",\"methodArguments\",\"crowd\",\"username\",\"crowdPassword\",\"loginWithCrowdAndTOTP\",\"code\",\"totp\",\"login\"],\"mappings\":\"2BAAAA,EAAuCC,EAAAC,EAA9BC,EAAQC,IAAA,CAAM,gBAAgB,CAAAJ,OAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,oCAAA,CAAAH,gBAAAI,CAAA,EAAAJ,EAAAI,CAAA,EAAAH,YAAAG,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAgDvCL,EAAOM,cAAc,CAAGJ,EAjCDI,CAACC,EAAoFC,IAOpGP,EAAgB,CAAEQ,gBAAiB,CANrB,CACpBC,MAAO,CAAA,EACPC,SAAUJ,EACVK,cAAeJ,GAGuC,AAAC,GAG3BK,CAC7BN,EACAC,EACAM,IAQOb,EAAgB,CACtBQ,gBAAiB,CAChB,CACCM,KAAM,CACLC,MAViB,CACpBN,MAAO,CAAA,EACPC,SAAUJ,EACVK,cAAeJ,GAQZM,KAAAA,IAED\"}"}