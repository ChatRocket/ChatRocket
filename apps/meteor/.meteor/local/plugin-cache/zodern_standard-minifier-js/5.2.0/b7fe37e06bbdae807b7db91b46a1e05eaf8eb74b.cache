{"code":"function module(e,t,l){let i,s,a,r;l.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){i=e}},0),l.export({useScrollableMessageList:()=>o}),l.link(\"react\",{useCallback(e){s=e}},0),l.link(\"../../lib/utils/mapMessageFromApi\",{mapMessageFromApi(e){a=e}},1),l.link(\"./useScrollableRecordList\",{useScrollableRecordList(e){r=e}},2);let o=(e,t,l)=>{let o=s(async(e,l)=>{let s=await t(e,l);return i(i({},s.items&&{items:s.items.map(a)}),s.itemCount&&{itemCount:s.itemCount})},[t]);return r(e,o,l)}}","map":"{\"version\":3,\"sources\":[\"client/hooks/lists/useScrollableMessageList.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage, Serialized } from '@rocket.chat/core-typings';\\nimport { useCallback } from 'react';\\n\\nimport type { MessageList } from '../../lib/lists/MessageList';\\nimport type { RecordListBatchChanges } from '../../lib/lists/RecordList';\\nimport { mapMessageFromApi } from '../../lib/utils/mapMessageFromApi';\\nimport { useScrollableRecordList } from './useScrollableRecordList';\\n\\nexport const useScrollableMessageList = (\\n\\tmessageList: MessageList,\\n\\tfetchMessages: (start: number, end: number) => Promise<RecordListBatchChanges<Serialized<IMessage>>>,\\n\\tinitialItemCount?: number,\\n): ReturnType<typeof useScrollableRecordList> => {\\n\\tconst fetchItems = useCallback(\\n\\t\\tasync (start: number, end: number): Promise<RecordListBatchChanges<IMessage>> => {\\n\\t\\t\\tconst batchChanges = await fetchMessages(start, end);\\n\\t\\t\\treturn {\\n\\t\\t\\t\\t...(batchChanges.items && { items: batchChanges.items.map(mapMessageFromApi) }),\\n\\t\\t\\t\\t...(batchChanges.itemCount && { itemCount: batchChanges.itemCount }),\\n\\t\\t\\t};\\n\\t\\t},\\n\\t\\t[fetchMessages],\\n\\t);\\n\\n\\treturn useScrollableRecordList(messageList, fetchItems, initialItemCount);\\n};\\n\",null],\"names\":[\"_objectSpread\",\"useCallback\",\"mapMessageFromApi\",\"useScrollableRecordList\",\"module\",\"link\",\"default\",\"v\",\"export\",\"useScrollableMessageList\",\"messageList\",\"fetchMessages\",\"initialItemCount\",\"fetchItems\",\"start\",\"end\",\"batchChanges\",\"items\",\"map\",\"itemCount\"],\"mappings\":\"2BACAA,EAAoCC,EAAAC,EAAAC,EAA3BC,EAAaC,IAAM,CAAA,uCAAQ,CAAAC,QAAAC,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAApCH,EAAOI,MAAE,CAAA,CAAAC,yBAA2BA,IAAAA,CAAA,GAAAL,EAAAC,IAAA,CAAA,QAAA,CAAAJ,YAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,oCAAA,CAAAH,kBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,4BAAA,CAAAF,wBAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAO7B,IAAME,EAA2BA,CACvCC,EACAC,EACAC,KAEA,IAAMC,EAAaZ,EAClB,MAAOa,EAAeC,KACrB,IAAMC,EAAe,MAAML,EAAcG,EAAOC,GAChD,OAAAf,EAAAA,EAAA,CAAA,EACKgB,EAAaC,KAAK,EAAI,CAAEA,MAAOD,EAAaC,KAAK,CAACC,GAAG,CAAChB,EAAkB,GACxEc,EAAaG,SAAS,EAAI,CAAEA,UAAWH,EAAaG,SAAAA,AAAS,EAEnE,EACA,CAACR,EAAc,EAGhB,OAAOR,EAAwBO,EAAaG,EAAYD,EACzD\"}"}