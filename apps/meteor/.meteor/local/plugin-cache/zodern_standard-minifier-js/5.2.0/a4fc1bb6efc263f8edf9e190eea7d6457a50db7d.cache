{"code":"function module(e,t,r){let s=/\\s+/g;class i{constructor(e,t){if(t=a(t),e instanceof i){if(!!t.loose===e.loose&&!!t.includePrerelease===e.includePrerelease)return e;return new i(e.raw,t)}if(e instanceof o)return this.raw=e.value,this.set=[[e]],this.formatted=void 0,this;if(this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease,this.raw=e.trim().replace(s,\" \"),this.set=this.raw.split(\"||\").map(e=>this.parseRange(e.trim())).filter(e=>e.length),!this.set.length)throw TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){let e=this.set[0];if(this.set=this.set.filter(e=>!R(e[0])),0===this.set.length)this.set=[e];else if(this.set.length>1){for(let e of this.set)if(1===e.length&&E(e[0])){this.set=[e];break}}}this.formatted=void 0}get range(){if(void 0===this.formatted){this.formatted=\"\";for(let e=0;e<this.set.length;e++){e>0&&(this.formatted+=\"||\");let t=this.set[e];for(let e=0;e<t.length;e++)e>0&&(this.formatted+=\" \"),this.formatted+=t[e].toString().trim()}}return this.formatted}format(){return this.range}toString(){return this.range}parseRange(e){let t=(this.options.includePrerelease&&g)|(this.options.loose&&d),r=t+\":\"+e,s=n.get(r);if(s)return s;let i=this.options.loose,l=i?p[c.HYPHENRANGELOOSE]:p[c.HYPHENRANGE];$(\"hyphen replace\",e=e.replace(l,I(this.options.includePrerelease))),$(\"comparator trim\",e=e.replace(p[c.COMPARATORTRIM],u)),$(\"tilde trim\",e=e.replace(p[c.TILDETRIM],f)),$(\"caret trim\",e=e.replace(p[c.CARETTRIM],m));let a=e.split(\" \").map(e=>T(e,this.options)).join(\" \").split(/\\s+/).map(e=>G(e,this.options));i&&(a=a.filter(e=>($(\"loose invalid filter\",e,this.options),!!e.match(p[c.COMPARATORLOOSE])))),$(\"range list\",a);let h=new Map,E=a.map(e=>new o(e,this.options));for(let e of E){if(R(e))return[e];h.set(e.value,e)}h.size>1&&h.has(\"\")&&h.delete(\"\");let v=[...h.values()];return n.set(r,v),v}intersects(e,t){if(!(e instanceof i))throw TypeError(\"a Range is required\");return this.set.some(r=>v(r,t)&&e.set.some(e=>v(e,t)&&r.every(r=>e.every(e=>r.intersects(e,t)))))}test(e){if(!e)return!1;if(\"string\"==typeof e)try{e=new h(e,this.options)}catch(e){return!1}for(let t=0;t<this.set.length;t++)if(N(this.set[t],e,this.options))return!0;return!1}}r.exports=i;let l=e(\"../internal/lrucache\"),n=new l,a=e(\"../internal/parse-options\"),o=e(\"./comparator\"),$=e(\"../internal/debug\"),h=e(\"./semver\"),{safeRe:p,t:c,comparatorTrimReplace:u,tildeTrimReplace:f,caretTrimReplace:m}=e(\"../internal/re\"),{FLAG_INCLUDE_PRERELEASE:g,FLAG_LOOSE:d}=e(\"../internal/constants\"),R=e=>\"<0.0.0-0\"===e.value,E=e=>\"\"===e.value,v=(e,t)=>{let r=!0,s=e.slice(),i=s.pop();for(;r&&s.length;)r=s.every(e=>i.intersects(e,t)),i=s.pop();return r},T=(e,t)=>($(\"comp\",e,t),$(\"caret\",e=A(e,t)),$(\"tildes\",e=O(e,t)),$(\"xrange\",e=L(e,t)),$(\"stars\",e=C(e,t)),e),P=e=>!e||\"x\"===e.toLowerCase()||\"*\"===e,O=(e,t)=>e.trim().split(/\\s+/).map(e=>w(e,t)).join(\" \"),w=(e,t)=>{let r=t.loose?p[c.TILDELOOSE]:p[c.TILDE];return e.replace(r,(t,r,s,i,l)=>{let n;return $(\"tilde\",e,t,r,s,i,l),P(r)?n=\"\":P(s)?n=`>=${r}.0.0 <${+r+1}.0.0-0`:P(i)?n=`>=${r}.${s}.0 <${r}.${+s+1}.0-0`:l?($(\"replaceTilde pr\",l),n=`>=${r}.${s}.${i}-${l} <${r}.${+s+1}.0-0`):n=`>=${r}.${s}.${i} <${r}.${+s+1}.0-0`,$(\"tilde return\",n),n})},A=(e,t)=>e.trim().split(/\\s+/).map(e=>S(e,t)).join(\" \"),S=(e,t)=>{$(\"caret\",e,t);let r=t.loose?p[c.CARETLOOSE]:p[c.CARET],s=t.includePrerelease?\"-0\":\"\";return e.replace(r,(t,r,i,l,n)=>{let a;return $(\"caret\",e,t,r,i,l,n),P(r)?a=\"\":P(i)?a=`>=${r}.0.0${s} <${+r+1}.0.0-0`:P(l)?a=\"0\"===r?`>=${r}.${i}.0${s} <${r}.${+i+1}.0-0`:`>=${r}.${i}.0${s} <${+r+1}.0.0-0`:n?($(\"replaceCaret pr\",n),a=\"0\"===r?\"0\"===i?`>=${r}.${i}.${l}-${n} <${r}.${i}.${+l+1}-0`:`>=${r}.${i}.${l}-${n} <${r}.${+i+1}.0-0`:`>=${r}.${i}.${l}-${n} <${+r+1}.0.0-0`):($(\"no pr\"),a=\"0\"===r?\"0\"===i?`>=${r}.${i}.${l}${s} <${r}.${i}.${+l+1}-0`:`>=${r}.${i}.${l}${s} <${r}.${+i+1}.0-0`:`>=${r}.${i}.${l} <${+r+1}.0.0-0`),$(\"caret return\",a),a})},L=(e,t)=>($(\"replaceXRanges\",e,t),e.split(/\\s+/).map(e=>y(e,t)).join(\" \")),y=(e,t)=>{e=e.trim();let r=t.loose?p[c.XRANGELOOSE]:p[c.XRANGE];return e.replace(r,(r,s,i,l,n,a)=>{$(\"xRange\",e,r,s,i,l,n,a);let o=P(i),h=o||P(l),p=h||P(n);return\"=\"===s&&p&&(s=\"\"),a=t.includePrerelease?\"-0\":\"\",o?r=\">\"===s||\"<\"===s?\"<0.0.0-0\":\"*\":s&&p?(h&&(l=0),n=0,\">\"===s?(s=\">=\",h?(i=+i+1,l=0):l=+l+1,n=0):\"<=\"===s&&(s=\"<\",h?i=+i+1:l=+l+1),\"<\"===s&&(a=\"-0\"),r=`${s+i}.${l}.${n}${a}`):h?r=`>=${i}.0.0${a} <${+i+1}.0.0-0`:p&&(r=`>=${i}.${l}.0${a} <${i}.${+l+1}.0-0`),$(\"xRange return\",r),r})},C=(e,t)=>($(\"replaceStars\",e,t),e.trim().replace(p[c.STAR],\"\")),G=(e,t)=>($(\"replaceGTE0\",e,t),e.trim().replace(p[t.includePrerelease?c.GTE0PRE:c.GTE0],\"\")),I=e=>(t,r,s,i,l,n,a,o,$,h,p,c)=>(r=P(s)?\"\":P(i)?`>=${s}.0.0${e?\"-0\":\"\"}`:P(l)?`>=${s}.${i}.0${e?\"-0\":\"\"}`:n?`>=${r}`:`>=${r}${e?\"-0\":\"\"}`,o=P($)?\"\":P(h)?`<${+$+1}.0.0-0`:P(p)?`<${$}.${+h+1}.0-0`:c?`<=${$}.${h}.${p}-${c}`:e?`<${$}.${h}.${+p+1}-0`:`<=${o}`,`${r} ${o}`.trim()),N=(e,t,r)=>{for(let r=0;r<e.length;r++)if(!e[r].test(t))return!1;if(t.prerelease.length&&!r.includePrerelease){for(let r=0;r<e.length;r++)if($(e[r].semver),e[r].semver!==o.ANY&&e[r].semver.prerelease.length>0){let s=e[r].semver;if(s.major===t.major&&s.minor===t.minor&&s.patch===t.patch)return!0}return!1}return!0}}","map":"{\"version\":3,\"sources\":[\"<anon>\"],\"names\":[],\"mappings\":\"\"}"}