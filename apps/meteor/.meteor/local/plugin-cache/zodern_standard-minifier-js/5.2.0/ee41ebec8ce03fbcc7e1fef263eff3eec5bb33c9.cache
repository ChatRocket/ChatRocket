{"code":"function module(n,t,u){u.export({useLogs:function(){return r}}),u.link(\"@rocket.chat/ui-contexts\",{useEndpoint:function(n){e=n}},0),u.link(\"@tanstack/react-query\",{useQuery:function(n){o=n}},1);var e,o,r=function(n){var t=e(\"GET\",\"/apps/:id/logs\",{id:n});return o([\"marketplace\",\"apps\",n,\"logs\"],function(){return t()})}}","map":"{\"version\":3,\"sources\":[\"client/views/marketplace/hooks/useLogs.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { OperationResult } from '@rocket.chat/rest-typings';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport type { UseQueryResult } from '@tanstack/react-query';\\nimport { useQuery } from '@tanstack/react-query';\\n\\nexport const useLogs = (appId: string): UseQueryResult<OperationResult<'GET', '/apps/:id/logs'>> => {\\n\\tconst logs = useEndpoint('GET', '/apps/:id/logs', { id: appId });\\n\\n\\treturn useQuery(['marketplace', 'apps', appId, 'logs'], () => logs());\\n};\\n\",null],\"names\":[\"module\",\"export\",\"useLogs\",\"link\",\"useEndpoint\",\"v\",\"useQuery\",\"appId\",\"logs\",\"id\"],\"mappings\":\"uBACAA,EAAOC,MAAE,CAAA,CAAAC,QAAa,WAAM,OAAAA,CAAA,CAAA,GAA2BF,EAAAG,IAAA,CAAA,2BAAA,CAAAC,YAAA,SAAAC,CAAA,EAAAD,EAAAC,CAAA,CAAA,EAAA,GAAAL,EAAAG,IAAA,CAAA,wBAAA,CAAAG,SAAA,SAAAD,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAIhD,IAJgDD,EAAAE,EAI1CJ,EAAU,SAACK,CAAa,EACpC,IAAMC,EAAOJ,EAAY,MAAO,iBAAkB,CAAEK,GAAIF,CAAK,GAE7D,OAAOD,EAAS,CAAC,cAAe,OAAQC,EAAO,OAAO,CAAE,WAAA,OAAMC,GAAM,EACrE\"}"}