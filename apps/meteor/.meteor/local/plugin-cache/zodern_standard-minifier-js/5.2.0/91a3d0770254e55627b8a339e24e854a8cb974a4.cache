{"code":"function module(e,t,l){let n,o;l.export({default:()=>n}),l.link(\"../../_virtual/positions.mjs\",{__exports(e){n=e}},0),l.link(\"./types.mjs\",{t(e){o=e}},1);let u=o;n.wordBoundary=()=>({type:u.POSITION,value:\"b\"}),n.nonWordBoundary=()=>({type:u.POSITION,value:\"B\"}),n.begin=()=>({type:u.POSITION,value:\"^\"}),n.end=()=>({type:u.POSITION,value:\"$\"})}","map":"{\"version\":3,\"sources\":[\"../../../node_modules/ret/lib/positions.js\",\"<anon>\"],\"sourcesContent\":[\"const types = require('./types');\\nexports.wordBoundary = () => ({ type: types.POSITION, value: 'b' });\\nexports.nonWordBoundary = () => ({ type: types.POSITION, value: 'B' });\\nexports.begin = () => ({ type: types.POSITION, value: '^' });\\nexports.end = () => ({ type: types.POSITION, value: '$' });\\n\",null],\"names\":[\"types\",\"types$1\",\"positions\",\"wordBoundary\",\"type\",\"POSITION\",\"value\",\"nonWordBoundary\",\"begin\",\"end\"],\"mappings\":\"0JAAA,IAAMA,EAAQC,CACdC,CAAAA,EAAAC,YAAoB,CAAG,IAAO,CAAA,CAAEC,KAAMJ,EAAMK,QAAQ,CAAEC,MAAO,GAAG,CAAA,EAChEJ,EAAAK,eAAuB,CAAG,IAAO,CAAA,CAAEH,KAAMJ,EAAMK,QAAQ,CAAEC,MAAO,GAAG,CAAA,EACnEJ,EAAAM,KAAa,CAAG,IAAO,CAAA,CAAEJ,KAAMJ,EAAMK,QAAQ,CAAEC,MAAO,GAAG,CAAA,EACzDJ,EAAAO,GAAW,CAAG,IAAO,CAAA,CAAEL,KAAMJ,EAAMK,QAAQ,CAAEC,MAAO,GAAG,CAAA\"}"}