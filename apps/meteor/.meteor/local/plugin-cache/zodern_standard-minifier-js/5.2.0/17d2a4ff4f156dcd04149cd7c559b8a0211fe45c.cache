{"code":"function module(n,e,t){t.link(\"@babel/runtime/regenerator\",{default:function(n){r=n}},0),t.link(\"@babel/runtime/helpers/toConsumableArray\",{default:function(n){i=n}},1),t.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(n){u=n}},2),t.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(n){a=n}},3),t.export({useSearchItems:function(){return h}}),t.link(\"@rocket.chat/string-helpers\",{escapeRegExp:function(n){o=n}},0),t.link(\"@rocket.chat/ui-contexts\",{useMethod:function(n){l=n},useUserSubscriptions:function(n){s=n}},1),t.link(\"@tanstack/react-query\",{useQuery:function(n){c=n}},2),t.link(\"react\",{useMemo:function(n){d=n}},3),t.link(\"../../../lib/utils/getConfig\",{getConfig:function(n){f=n}},4);var r,i,u,a,o,l,s,c,d,f,m=parseInt(String(f(\"Sidebar_Search_Spotlight_LIMIT\",20))),p={sort:{lm:-1,name:1},limit:m},h=function(n){var e=d(function(){return n.match(/(@|#)?(.*)/i)||[]},[n]),t=a(e,3),f=t[1],h=t[2],v=d(function(){var n=RegExp(o(h),\"i\");return u({$or:[{name:n},{fname:n}]},f&&{t:\"@\"===f?\"d\":{$ne:\"d\"}})},[h,f]),b=s(v,p),g=i(null==b?void 0:b.map(function(n){var e=n.t,t=n.name;return\"d\"===e?t:null})).filter(Boolean),k=\"#\"===f,_=\"@\"===f,x=d(function(){return k?{users:!1,rooms:!0,includeFederatedRooms:!0}:_?{users:!0,rooms:!1}:{users:!0,rooms:!0,includeFederatedRooms:!0}},[k,_]),y=l(\"spotlight\");return c([\"sidebar/search/spotlight\",h,g,x,b.map(function(n){return n._id+n.name})],function(){var n,e,t,u,a,o,l;return r.async(function(s){for(;;)switch(s.prev=s.next){case 0:if(b.length!==m){s.next=2;break}return s.abrupt(\"return\",b);case 2:return s.next=4,r.awrap(y(h,g,x));case 4:return n=s.sent,e=function(n,e,t){var r=n._id;return e===t.findIndex(function(n){return r===n._id})},t=function(n){return!b.find(function(e){var t;return\"d\"===n.t&&n.uids&&n.uids.length>1&&(null===(t=n.uids)||void 0===t?void 0:t.includes(e._id))||[e.rid,e._id].includes(n._id)})},u=function(n){return!b.find(function(e){var t;return\"d\"===e.t&&e.uids&&(null===(t=e.uids)||void 0===t?void 0:t.length)===2&&e.uids.includes(n._id)})},a=function(n){return{_id:n._id,t:\"d\",name:n.username,fname:n.name,avatarETag:n.avatarETag}},(o=[]).push.apply(o,i(n.users.filter(e).filter(u).map(a))),o.push.apply(o,i(n.rooms.filter(t))),l=null==o?void 0:o.filter(function(n){return[n.name,n.fname].includes(h)}),s.abrupt(\"return\",Array.from(new Set([].concat(i(l),i(b),o))));case 14:case\"end\":return s.stop()}},null,null,null,Promise)},{staleTime:6e4,keepPreviousData:!0,placeholderData:b})}}","map":"{\"version\":3,\"sources\":[\"client/sidebarv2/header/hooks/useSearchItems.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, ISubscription } from '@rocket.chat/core-typings';\\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\\nimport { useMethod, useUserSubscriptions } from '@rocket.chat/ui-contexts';\\nimport { useQuery, type UseQueryResult } from '@tanstack/react-query';\\nimport { useMemo } from 'react';\\n\\nimport { getConfig } from '../../../lib/utils/getConfig';\\n\\nconst LIMIT = parseInt(String(getConfig('Sidebar_Search_Spotlight_LIMIT', 20)));\\n\\nconst options = {\\n\\tsort: {\\n\\t\\tlm: -1,\\n\\t\\tname: 1,\\n\\t},\\n\\tlimit: LIMIT,\\n} as const;\\n\\nexport const useSearchItems = (filterText: string): UseQueryResult<(ISubscription & IRoom)[] | undefined, Error> => {\\n\\tconst [, mention, name] = useMemo(() => filterText.match(/(@|#)?(.*)/i) || [], [filterText]);\\n\\tconst query = useMemo(() => {\\n\\t\\tconst filterRegex = new RegExp(escapeRegExp(name), 'i');\\n\\n\\t\\treturn {\\n\\t\\t\\t$or: [{ name: filterRegex }, { fname: filterRegex }],\\n\\t\\t\\t...(mention && {\\n\\t\\t\\t\\tt: mention === '@' ? 'd' : { $ne: 'd' },\\n\\t\\t\\t}),\\n\\t\\t};\\n\\t}, [name, mention]);\\n\\n\\tconst localRooms = useUserSubscriptions(query, options);\\n\\n\\tconst usernamesFromClient = [...localRooms?.map(({ t, name }) => (t === 'd' ? name : null))].filter(Boolean) as string[];\\n\\n\\tconst searchForChannels = mention === '#';\\n\\tconst searchForDMs = mention === '@';\\n\\n\\tconst type = useMemo(() => {\\n\\t\\tif (searchForChannels) {\\n\\t\\t\\treturn { users: false, rooms: true, includeFederatedRooms: true };\\n\\t\\t}\\n\\t\\tif (searchForDMs) {\\n\\t\\t\\treturn { users: true, rooms: false };\\n\\t\\t}\\n\\t\\treturn { users: true, rooms: true, includeFederatedRooms: true };\\n\\t}, [searchForChannels, searchForDMs]);\\n\\n\\tconst getSpotlight = useMethod('spotlight');\\n\\n\\treturn useQuery(\\n\\t\\t['sidebar/search/spotlight', name, usernamesFromClient, type, localRooms.map(({ _id, name }) => _id + name)],\\n\\t\\tasync () => {\\n\\t\\t\\tif (localRooms.length === LIMIT) {\\n\\t\\t\\t\\treturn localRooms;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst spotlight = await getSpotlight(name, usernamesFromClient, type);\\n\\n\\t\\t\\tconst filterUsersUnique = ({ _id }: { _id: string }, index: number, arr: { _id: string }[]): boolean =>\\n\\t\\t\\t\\tindex === arr.findIndex((user) => _id === user._id);\\n\\n\\t\\t\\tconst roomFilter = (room: { t: string; uids?: string[]; _id: string; name?: string }): boolean =>\\n\\t\\t\\t\\t!localRooms.find(\\n\\t\\t\\t\\t\\t(item) =>\\n\\t\\t\\t\\t\\t\\t(room.t === 'd' && room.uids && room.uids.length > 1 && room.uids?.includes(item._id)) ||\\n\\t\\t\\t\\t\\t\\t[item.rid, item._id].includes(room._id),\\n\\t\\t\\t\\t);\\n\\t\\t\\tconst usersFilter = (user: { _id: string }): boolean =>\\n\\t\\t\\t\\t!localRooms.find((room) => room.t === 'd' && room.uids && room.uids?.length === 2 && room.uids.includes(user._id));\\n\\n\\t\\t\\tconst userMap = (user: {\\n\\t\\t\\t\\t_id: string;\\n\\t\\t\\t\\tname: string;\\n\\t\\t\\t\\tusername: string;\\n\\t\\t\\t\\tavatarETag?: string;\\n\\t\\t\\t}): {\\n\\t\\t\\t\\t_id: string;\\n\\t\\t\\t\\tt: string;\\n\\t\\t\\t\\tname: string;\\n\\t\\t\\t\\tfname: string;\\n\\t\\t\\t\\tavatarETag?: string;\\n\\t\\t\\t} => ({\\n\\t\\t\\t\\t_id: user._id,\\n\\t\\t\\t\\tt: 'd',\\n\\t\\t\\t\\tname: user.username,\\n\\t\\t\\t\\tfname: user.name,\\n\\t\\t\\t\\tavatarETag: user.avatarETag,\\n\\t\\t\\t});\\n\\n\\t\\t\\ttype resultsFromServerType = {\\n\\t\\t\\t\\t_id: string;\\n\\t\\t\\t\\tt: string;\\n\\t\\t\\t\\tname: string;\\n\\t\\t\\t\\tteamMain?: boolean;\\n\\t\\t\\t\\tfname?: string;\\n\\t\\t\\t\\tavatarETag?: string | undefined;\\n\\t\\t\\t\\tuids?: string[] | undefined;\\n\\t\\t\\t}[];\\n\\n\\t\\t\\tconst resultsFromServer: resultsFromServerType = [];\\n\\t\\t\\tresultsFromServer.push(...spotlight.users.filter(filterUsersUnique).filter(usersFilter).map(userMap));\\n\\t\\t\\tresultsFromServer.push(...spotlight.rooms.filter(roomFilter));\\n\\n\\t\\t\\tconst exact = resultsFromServer?.filter((item) => [item.name, item.fname].includes(name));\\n\\t\\t\\treturn Array.from(new Set([...exact, ...localRooms, ...resultsFromServer]));\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tstaleTime: 60_000,\\n\\t\\t\\tkeepPreviousData: true,\\n\\t\\t\\tplaceholderData: localRooms,\\n\\t\\t},\\n\\t);\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"_toConsumableArray\",\"_objectSpread\",\"_slicedToArray\",\"export\",\"useSearchItems\",\"escapeRegExp\",\"useMethod\",\"useUserSubscriptions\",\"useQuery\",\"useMemo\",\"getConfig\",\"LIMIT\",\"parseInt\",\"String\",\"options\",\"sort\",\"lm\",\"name\",\"limit\",\"filterText\",\"_useMemo\",\"match\",\"_useMemo2\",\"mention\",\"query\",\"filterRegex\",\"RegExp\",\"$or\",\"fname\",\"t\",\"$ne\",\"localRooms\",\"usernamesFromClient\",\"map\",\"_ref\",\"filter\",\"Boolean\",\"searchForChannels\",\"searchForDMs\",\"type\",\"users\",\"rooms\",\"includeFederatedRooms\",\"getSpotlight\",\"_ref2\",\"_id\",\"spotlight\",\"filterUsersUnique\",\"roomFilter\",\"usersFilter\",\"userMap\",\"resultsFromServer\",\"exact\",\"async\",\"_context\",\"prev\",\"next\",\"length\",\"abrupt\",\"awrap\",\"sent\",\"_ref3\",\"index\",\"arr\",\"findIndex\",\"user\",\"room\",\"find\",\"item\",\"_room$uids\",\"uids\",\"includes\",\"rid\",\"_room$uids2\",\"username\",\"avatarETag\",\"push\",\"apply\",\"Array\",\"from\",\"Set\",\"concat\",\"stop\",\"Promise\",\"staleTime\",\"keepPreviousData\",\"placeholderData\"],\"mappings\":\"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\"}"}