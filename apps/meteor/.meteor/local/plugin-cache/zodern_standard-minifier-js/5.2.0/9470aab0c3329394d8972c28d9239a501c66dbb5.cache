{"code":"function module(e,t,n){n.export({useFirstUnreadMessageId:function(){return s}}),n.link(\"use-sync-external-store/shim\",{useSyncExternalStore:function(e){r=e}},0),n.link(\"../contexts/ChatContext\",{useChat:function(e){a=e}},1);var r,a,s=function(){var e=a();if(!e)throw Error(\"useFirstUnreadMessageId must be used within a ChatContextProvider\");return r(e.readStateManager.onUnreadStateChange,e.readStateManager.getFirstUnreadRecordId)}}","map":"{\"version\":3,\"sources\":[\"client/views/room/hooks/useFirstUnreadMessageId.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useSyncExternalStore } from 'use-sync-external-store/shim';\\n\\nimport { useChat } from '../contexts/ChatContext';\\n\\nexport const useFirstUnreadMessageId = (): string | undefined => {\\n\\tconst chat = useChat();\\n\\n\\tif (!chat) {\\n\\t\\tthrow new Error('useFirstUnreadMessageId must be used within a ChatContextProvider');\\n\\t}\\n\\n\\treturn useSyncExternalStore(chat.readStateManager.onUnreadStateChange, chat.readStateManager.getFirstUnreadRecordId);\\n};\\n\",null],\"names\":[\"module\",\"export\",\"useFirstUnreadMessageId\",\"link\",\"useSyncExternalStore\",\"v\",\"useChat\",\"chat\",\"Error\",\"readStateManager\",\"onUnreadStateChange\",\"getFirstUnreadRecordId\"],\"mappings\":\"uBAAAA,EAAOC,MAAE,CAAA,CAAAC,wBAA4B,WAAA,OAAAA,CAA+B,CAAA,GAAAF,EAAAG,IAAA,CAAA,+BAAA,CAAAC,qBAAA,SAAAC,CAAA,EAAAD,EAAAC,CAAA,CAAA,EAAA,GAAAL,EAAAG,IAAA,CAAA,0BAAA,CAAAG,QAAA,SAAAD,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAI7D,IAJ6DD,EAAAE,EAIvDJ,EAA0B,WACtC,IAAMK,EAAOD,IAEb,GAAI,CAACC,EACJ,MAAM,AAAIC,MAAM,qEAGjB,OAAOJ,EAAqBG,EAAKE,gBAAgB,CAACC,mBAAmB,CAAEH,EAAKE,gBAAgB,CAACE,sBAAsB,CACpH\"}"}