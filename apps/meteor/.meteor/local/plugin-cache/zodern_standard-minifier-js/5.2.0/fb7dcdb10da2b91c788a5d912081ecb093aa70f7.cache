{"code":"function module(e,t,u){let s,n;u.export({useAppRequests:()=>r}),u.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){s=e}},0),u.link(\"@tanstack/react-query\",{useQuery(e){n=e}},1);let r=(e,t,u,r,p)=>{let a=s(\"GET\",\"/apps/app-request\");return n({queryKey:[\"app-requests\",e,t,u],queryFn:async()=>a({appId:e,q:p,sort:r,limit:t,offset:u}),cacheTime:0})}}","map":"{\"version\":3,\"sources\":[\"client/views/marketplace/hooks/useAppRequests.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { AppRequestFilter } from '@rocket.chat/core-typings';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useQuery } from '@tanstack/react-query';\\n\\nexport const useAppRequests = (appId: string, limit?: number, offset?: number, sort?: string, filter?: AppRequestFilter) => {\\n\\tconst fetchAppRequests = useEndpoint('GET', '/apps/app-request');\\n\\n\\treturn useQuery({\\n\\t\\tqueryKey: ['app-requests', appId, limit, offset],\\n\\t\\tqueryFn: async () => fetchAppRequests({ appId, q: filter, sort, limit, offset }),\\n\\t\\tcacheTime: 0,\\n\\t});\\n};\\n\",null],\"names\":[\"useEndpoint\",\"useQuery\",\"module\",\"export\",\"useAppRequests\",\"link\",\"v\",\"appId\",\"limit\",\"offset\",\"sort\",\"filter\",\"fetchAppRequests\",\"queryKey\",\"queryFn\",\"q\",\"cacheTime\"],\"mappings\":\"2BACuDA,EAAAC,EAAvDC,EAAOC,MAAE,CAAA,CAAAC,eAAmBA,IAAAA,CAAA,GAA2BF,EAAAG,IAAA,CAAA,2BAAA,CAAAL,YAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,wBAAA,CAAAJ,SAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAGhD,IAAMF,EAAiBA,CAACG,EAAeC,EAAgBC,EAAiBC,EAAeC,KAC7F,IAAMC,EAAmBZ,EAAY,MAAO,qBAE5C,OAAOC,EAAS,CACfY,SAAU,CAAC,eAAgBN,EAAOC,EAAOC,EAAO,CAChDK,QAAS,SAAYF,EAAiB,CAAEL,MAAAA,EAAOQ,EAAGJ,EAAQD,KAAAA,EAAMF,MAAAA,EAAOC,OAAAA,CAAM,GAC7EO,UAAW,GAEb\"}"}