{"code":"function module(e,t,a){let l,n,s,c,i,r,o;a.link(\"@rocket.chat/fuselage\",{Button(e){l=e},FieldRow(e){n=e},FieldHint(e){s=e}},0),a.link(\"@rocket.chat/ui-contexts\",{useMethod(e){c=e},useToastMessageDispatch(e){i=e},useTranslation(e){r=e}},1),a.link(\"react\",{default(e){o=e}},2),a.exportDefault(function(e){let{_id:t,actionText:a,value:u,disabled:m,sectionChanged:d}=e,g=r(),h=i(),k=c(u),p=async()=>{try{let e=await k(),t=e.params||[];h({type:\"success\",message:g(e.message,...t)})}catch(e){h({type:\"error\",message:e})}};return o.createElement(o.Fragment,null,o.createElement(n,null,o.createElement(l,{\"data-qa-setting-id\":t,disabled:m||d,primary:!0,onClick:p},g(a))),d&&o.createElement(s,null,g(\"Save_to_enable_this_action\")))})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/settings/Setting/inputs/ActionSettingInput.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { ServerMethods } from '@rocket.chat/ddp-client';\\nimport { Button, FieldRow, FieldHint } from '@rocket.chat/fuselage';\\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\\nimport { useMethod, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\\nimport type { ReactElement } from 'react';\\nimport React from 'react';\\n\\ntype ActionSettingInputProps = {\\n\\t_id: string;\\n\\tactionText: TranslationKey;\\n\\tvalue: keyof ServerMethods;\\n\\tdisabled: boolean;\\n\\tsectionChanged: boolean;\\n};\\nfunction ActionSettingInput({ _id, actionText, value, disabled, sectionChanged }: ActionSettingInputProps): ReactElement {\\n\\tconst t = useTranslation();\\n\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst actionMethod = useMethod(value);\\n\\n\\tconst handleClick = async (): Promise<void> => {\\n\\t\\ttry {\\n\\t\\t\\tconst data: { message: TranslationKey; params?: string[] } = await actionMethod();\\n\\n\\t\\t\\tconst params = data.params || [];\\n\\t\\t\\tdispatchToastMessage({ type: 'success', message: t(data.message, ...params) });\\n\\t\\t} catch (error) {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t}\\n\\t};\\n\\n\\treturn (\\n\\t\\t<>\\n\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t<Button data-qa-setting-id={_id} disabled={disabled || sectionChanged} primary onClick={handleClick}>\\n\\t\\t\\t\\t\\t{t(actionText)}\\n\\t\\t\\t\\t</Button>\\n\\t\\t\\t</FieldRow>\\n\\t\\t\\t{sectionChanged && <FieldHint>{t('Save_to_enable_this_action')}</FieldHint>}\\n\\t\\t</>\\n\\t);\\n}\\n\\nexport default ActionSettingInput;\\n\",null],\"names\":[\"Button\",\"FieldRow\",\"FieldHint\",\"useMethod\",\"useToastMessageDispatch\",\"useTranslation\",\"React\",\"module\",\"link\",\"v\",\"default\",\"exportDefault\",\"_ref\",\"_id\",\"actionText\",\"value\",\"disabled\",\"sectionChanged\",\"t\",\"dispatchToastMessage\",\"actionMethod\",\"handleClick\",\"data\",\"params\",\"type\",\"message\",\"error\",\"createElement\",\"Fragment\",\"primary\",\"onClick\"],\"mappings\":\"2BACAA,EAASC,EAAQC,EAAmDC,EAAAC,EAAAC,EAAAC,EAAzCC,EAASC,IAAE,CAAA,wBAAM,CAAuBR,OAACS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,SAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,UAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,2BAAA,CAAAL,UAAAM,CAAA,EAAAN,EAAAM,CAAA,EAAAL,wBAAAK,CAAA,EAAAL,EAAAK,CAAA,EAAAJ,eAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAApEF,EAAOI,aAAU,CAajB,SAA2BC,CAAA,EAA8E,GAA7E,CAAEC,IAAAA,CAAG,CAAEC,WAAAA,CAAU,CAAEC,MAAAA,CAAK,CAAEC,SAAAA,CAAQ,CAAEC,eAAAA,CAAAA,CAAyC,CAAAL,EAClGM,EAAIb,IAEJc,EAAuBf,IACvBgB,EAAejB,EAAUY,GAEzBM,EAAc,UACnB,GAAI,CACH,IAAMC,EAAuD,MAAMF,IAE7DG,EAASD,EAAKC,MAAM,EAAI,EAAE,CAChCJ,EAAqB,CAAEK,KAAM,UAAWC,QAASP,EAAEI,EAAKG,OAAO,IAAKF,EAAO,EAC5E,CAAE,MAAOG,EAAO,CACfP,EAAqB,CAAEK,KAAM,QAASC,QAASC,CAAK,EACrD,CACD,EAEA,OACCpB,EAAAqB,aAAA,CAAArB,EAAAsB,QAAA,CAAA,KACCtB,EAAAqB,aAAA,CAAC1B,EAAQ,KACRK,EAAAqB,aAAA,CAAC3B,EAAM,CAAC,qBAAoBa,EAAKG,SAAUA,GAAYC,EAAgBY,QAAO,CAAA,EAACC,QAAST,CAAY,EAClGH,EAAEJ,KAGJG,GAAkBX,EAAAqB,aAAA,CAACzB,EAAS,KAAEgB,EAAE,+BAGpC\"}"}