{"code":"function module(t,n,e){e.export({isPromptButton:function(){return a},formattingButtons:function(){return r}}),e.link(\"../../../../client/lib/imperativeModal\",{imperativeModal:function(t){i=t}},0),e.link(\"../../../settings/client\",{settings:function(t){o=t}},1),e.link(\"./AddLinkComposerActionModal\",{default:function(t){l=t}},2);var i,o,l,a=function(t){return\"prompt\"in t},r=[{label:\"Bold\",icon:\"bold\",pattern:\"*{{text}}*\",command:\"b\"},{label:\"Italic\",icon:\"italic\",pattern:\"_{{text}}_\",command:\"i\"},{label:\"Strike\",icon:\"strike\",pattern:\"~{{text}}~\"},{label:\"Inline_code\",icon:\"code\",pattern:\"`{{text}}`\"},{label:\"Multi_line\",icon:\"multiline\",pattern:\"```\\n{{text}}\\n``` \"},{label:\"Link\",icon:\"link\",prompt:function(t){var n=t.selection,e=t.substring(n.start,n.end),o=function(){i.close(),t.focus()};i.open({component:l,props:{onConfirm:function(e,i){o(),t.replaceText(\"[\"+i+\"](\"+e+\")\",n),t.setCursorToEnd()},selectedText:e,onClose:o}})}},{label:\"KaTeX\",icon:\"katex\",text:function(){return o.get(\"Katex_Enabled\")?o.get(\"Katex_Dollar_Syntax\")?\"$$KaTeX$$\":o.get(\"Katex_Parenthesis_Syntax\")?\"\\\\[KaTeX\\\\]\":void 0:void 0},link:\"https://khan.github.io/KaTeX/function-support.html\",condition:function(){return o.get(\"Katex_Enabled\")}}]}","map":"{\"version\":3,\"sources\":[\"app/ui-message/client/messageBox/messageBoxFormatting.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { Keys as IconName } from '@rocket.chat/icons';\\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\\n\\nimport type { ComposerAPI } from '../../../../client/lib/chats/ChatAPI';\\nimport { imperativeModal } from '../../../../client/lib/imperativeModal';\\nimport { settings } from '../../../settings/client';\\nimport AddLinkComposerActionModal from './AddLinkComposerActionModal';\\n\\ntype FormattingButtonDefault = { label: TranslationKey; condition?: () => boolean };\\n\\ntype TextButton = {\\n\\ttext: () => string | undefined;\\n\\tlink: string;\\n} & FormattingButtonDefault;\\n\\ntype PatternButton = {\\n\\ticon: IconName;\\n\\tpattern: string;\\n\\t// text?: () => string | undefined;\\n\\tcommand?: string;\\n\\tlink?: string;\\n} & FormattingButtonDefault;\\n\\ntype PromptButton = {\\n\\tprompt: (composer: ComposerAPI) => void;\\n\\ticon: IconName;\\n} & FormattingButtonDefault;\\n\\nexport type FormattingButton = PatternButton | PromptButton | TextButton;\\n\\nexport const isPromptButton = (button: FormattingButton): button is PromptButton => 'prompt' in button;\\n\\nexport const formattingButtons: ReadonlyArray<FormattingButton> = [\\n\\t{\\n\\t\\tlabel: 'Bold',\\n\\t\\ticon: 'bold',\\n\\t\\tpattern: '*{{text}}*',\\n\\t\\tcommand: 'b',\\n\\t},\\n\\t{\\n\\t\\tlabel: 'Italic',\\n\\t\\ticon: 'italic',\\n\\t\\tpattern: '_{{text}}_',\\n\\t\\tcommand: 'i',\\n\\t},\\n\\t{\\n\\t\\tlabel: 'Strike',\\n\\t\\ticon: 'strike',\\n\\t\\tpattern: '~{{text}}~',\\n\\t},\\n\\t{\\n\\t\\tlabel: 'Inline_code',\\n\\t\\ticon: 'code',\\n\\t\\tpattern: '`{{text}}`',\\n\\t},\\n\\t{\\n\\t\\tlabel: 'Multi_line',\\n\\t\\ticon: 'multiline',\\n\\t\\tpattern: '```\\\\n{{text}}\\\\n``` ',\\n\\t},\\n\\t{\\n\\t\\tlabel: 'Link',\\n\\t\\ticon: 'link',\\n\\t\\tprompt: (composerApi: ComposerAPI) => {\\n\\t\\t\\tconst { selection } = composerApi;\\n\\n\\t\\t\\tconst selectedText = composerApi.substring(selection.start, selection.end);\\n\\n\\t\\t\\tconst onClose = () => {\\n\\t\\t\\t\\timperativeModal.close();\\n\\t\\t\\t\\tcomposerApi.focus();\\n\\t\\t\\t};\\n\\n\\t\\t\\tconst onConfirm = (url: string, text: string) => {\\n\\t\\t\\t\\tonClose();\\n\\t\\t\\t\\tcomposerApi.replaceText(`[${text}](${url})`, selection);\\n\\t\\t\\t\\tcomposerApi.setCursorToEnd();\\n\\t\\t\\t};\\n\\n\\t\\t\\timperativeModal.open({ component: AddLinkComposerActionModal, props: { onConfirm, selectedText, onClose } });\\n\\t\\t},\\n\\t},\\n\\t{\\n\\t\\tlabel: 'KaTeX' as TranslationKey,\\n\\t\\ticon: 'katex',\\n\\t\\ttext: () => {\\n\\t\\t\\tif (!settings.get('Katex_Enabled')) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tif (settings.get('Katex_Dollar_Syntax')) {\\n\\t\\t\\t\\treturn '$$KaTeX$$';\\n\\t\\t\\t}\\n\\t\\t\\tif (settings.get('Katex_Parenthesis_Syntax')) {\\n\\t\\t\\t\\treturn '\\\\\\\\[KaTeX\\\\\\\\]';\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tlink: 'https://khan.github.io/KaTeX/function-support.html',\\n\\t\\tcondition: () => settings.get('Katex_Enabled'),\\n\\t},\\n] as const;\\n\",null],\"names\":[\"module\",\"export\",\"isPromptButton\",\"formattingButtons\",\"link\",\"imperativeModal\",\"v\",\"settings\",\"AddLinkComposerActionModal\",\"button\",\"label\",\"icon\",\"pattern\",\"command\",\"prompt\",\"composerApi\",\"selection\",\"selectedText\",\"substring\",\"start\",\"end\",\"onClose\",\"close\",\"focus\",\"open\",\"component\",\"props\",\"onConfirm\",\"url\",\"text\",\"replaceText\",\"setCursorToEnd\",\"get\",\"condition\"],\"mappings\":\"uBAIAA,EAAOC,MAAE,CAAA,CAAAC,eAAiB,WAAM,OAAAA,CAAA,EAAAC,kBAAyC,WAAA,OAAAA,CAAA,CAAA,GAAAH,EAAAI,IAAA,CAAA,yCAAA,CAAAC,gBAAA,SAAAC,CAAA,EAAAD,EAAAC,CAAA,CAAA,EAAA,GAAAN,EAAAI,IAAA,CAAA,2BAAA,CAAAG,SAAA,SAAAD,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAAAN,EAAAI,IAAA,CAAA,+BAAA,CAAA,QAAA,SAAAE,CAAA,EAAAE,EAAAF,CAAA,CAAA,EAAA,GA0BlE,IA1BkED,EAAAE,EAAAC,EA0B5DN,EAAiB,SAACO,CAAwB,EAAA,MAA6B,WAAYA,CAAM,EAEzFN,EAAqD,CACjE,CACCO,MAAO,OACPC,KAAM,OACNC,QAAS,aACTC,QAAS,KAEV,CACCH,MAAO,SACPC,KAAM,SACNC,QAAS,aACTC,QAAS,KAEV,CACCH,MAAO,SACPC,KAAM,SACNC,QAAS,cAEV,CACCF,MAAO,cACPC,KAAM,OACNC,QAAS,cAEV,CACCF,MAAO,aACPC,KAAM,YACNC,QAAS,uBAEV,CACCF,MAAO,OACPC,KAAM,OACNG,OAAQ,SAACC,CAAwB,EAChC,IAAQC,EAAcD,EAAdC,SAAS,CAEXC,EAAeF,EAAYG,SAAS,CAACF,EAAUG,KAAK,CAAEH,EAAUI,GAAG,EAEnEC,EAAU,WACfhB,EAAgBiB,KAAK,GACrBP,EAAYQ,KAAK,EAClB,EAQAlB,EAAgBmB,IAAI,CAAC,CAAEC,UAAWjB,EAA4BkB,MAAO,CAAEC,UANrD,SAACC,CAAW,CAAEC,CAAY,EAC3CR,IACAN,EAAYe,WAAW,CAAA,IAAKD,EAAI,KAAKD,EAAG,IAAKZ,GAC7CD,EAAYgB,cAAc,EAC3B,EAEkFd,aAAAA,EAAcI,QAAAA,CAAO,CAAE,EAC1G,GAED,CACCX,MAAO,QACPC,KAAM,QACNkB,KAAM,kBACL,AAAKtB,EAASyB,GAAG,CAAC,iBAGdzB,EAASyB,GAAG,CAAC,uBACT,YAEJzB,EAASyB,GAAG,CAAC,4BACT,qBANP,KAAA,CAQF,EACA5B,KAAM,qDACN6B,UAAW,WAAA,OAAM1B,EAASyB,GAAG,CAAC,gBAAgB,GAEtC\"}"}