{"code":"function module(n,r,e){e.link(\"@babel/runtime/regenerator\",{default:function(n){t=n}},0),e.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(n){o=n}},1),e.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(n){i=n}},2),e.link(\"@babel/runtime/helpers/toConsumableArray\",{default:function(n){a=n}},3),e.export({overrideLoginMethod:function(){return s},handleLogin:function(){return p},callLoginMethod:function(){return f}}),e.link(\"./utils\",{isTotpInvalidError:function(n){u=n},isTotpMaxAttemptsError:function(n){c=n},isTotpRequiredError:function(n){l=n}},0);var t,o,i,a,u,c,l,s=function(n,r,o,s){n.apply(void 0,a(r).concat([function(n,p){var f;return t.async(function(d){for(;;)switch(d.prev=d.next){case 0:if(l(n)){d.next=3;break}return null==o||o(n),d.abrupt(\"return\");case 3:return d.next=5,t.awrap(e.dynamicImport(\"./process2faReturn\"));case 5:return f=d.sent.process2faReturn,d.next=9,t.awrap(f({error:n,result:p,emailOrUsername:\"string\"==typeof r[0]?r[0]:void 0,originalCallback:o,onCode:function(n){s.apply(void 0,a(r).concat([n,function(n,r){if(!n){null==o||o(void 0,r);return}if(u(n)){null==o||o(n);return}Promise.all([e.dynamicImport(\"../../../app/utils/lib/i18n\"),e.dynamicImport(\"../toast\")]).then(function(r){var e=i(r,2),t=e[0].t,a=e[1].dispatchToastMessage;if(c(n)){a({type:\"error\",message:t(\"totp-max-attempts\")}),null==o||o(void 0);return}a({type:\"error\",message:t(\"Invalid_two_factor_code\")}),null==o||o(void 0)})}]))}}));case 9:case\"end\":return d.stop()}},null,null,null,Promise)}]))},p=function(n,r){return function(){for(var o=arguments.length,c=Array(o),s=0;s<o;s++)c[s]=arguments[s];var p=c.slice(0,-1),f=c.slice(-1)[0];return n.apply(void 0,a(p)).catch(function(n){var o;return t.async(function(i){for(;;)switch(i.prev=i.next){case 0:if(l(n)){i.next=2;break}return i.abrupt(\"return\",Promise.reject(n));case 2:return i.next=4,t.awrap(e.dynamicImport(\"./process2faReturn\"));case 4:return o=i.sent.process2faAsyncReturn,i.abrupt(\"return\",o({emailOrUsername:\"string\"==typeof p[0]?p[0]:void 0,error:n,onCode:function(n){return r.apply(void 0,a(p).concat([n]))}}));case 7:case\"end\":return i.stop()}},null,null,null,Promise)}).then(function(n){return null==f?void 0:f(void 0,n)}).catch(function(n){if(!u(n)){null==f||f(n);return}Promise.all([e.dynamicImport(\"../../../app/utils/lib/i18n\"),e.dynamicImport(\"../toast\")]).then(function(n){var r=i(n,2),e=r[0].t;(0,r[1].dispatchToastMessage)({type:\"error\",message:e(\"Invalid_two_factor_code\")}),null==f||f(void 0)})})}},f=function(n){return new Promise(function(r,e){Accounts.callLoginMethod(o(o({},n),{},{userCallback:function(n){n?e(n):r()}}))})}}","map":"{\"version\":3,\"sources\":[\"client/lib/2fa/overrideLoginMethod.ts\",\"<anon>\"],\"sourcesContent\":[\"import { isTotpInvalidError, isTotpMaxAttemptsError, isTotpRequiredError } from './utils';\\n\\ntype LoginError = globalThis.Error | Meteor.Error | Meteor.TypedError;\\n\\nexport type LoginCallback = (error: LoginError | undefined, result?: unknown) => void;\\n\\nexport const overrideLoginMethod = <TArgs extends any[]>(\\n\\tloginMethod: (...args: [...args: TArgs, cb: LoginCallback]) => void,\\n\\tloginArgs: TArgs,\\n\\tcallback: LoginCallback | undefined,\\n\\tloginMethodTOTP: (...args: [...args: TArgs, code: string, cb: LoginCallback]) => void,\\n) => {\\n\\tloginMethod(...loginArgs, async (error: LoginError | undefined, result?: unknown) => {\\n\\t\\tif (!isTotpRequiredError(error)) {\\n\\t\\t\\tcallback?.(error);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst { process2faReturn } = await import('./process2faReturn');\\n\\n\\t\\tawait process2faReturn({\\n\\t\\t\\terror,\\n\\t\\t\\tresult,\\n\\t\\t\\temailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\\n\\t\\t\\toriginalCallback: callback,\\n\\t\\t\\tonCode: (code: string) => {\\n\\t\\t\\t\\tloginMethodTOTP(...loginArgs, code, (error: LoginError | undefined, result?: unknown) => {\\n\\t\\t\\t\\t\\tif (!error) {\\n\\t\\t\\t\\t\\t\\tcallback?.(undefined, result);\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (isTotpInvalidError(error)) {\\n\\t\\t\\t\\t\\t\\tcallback?.(error);\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tPromise.all([import('../../../app/utils/lib/i18n'), import('../toast')]).then(([{ t }, { dispatchToastMessage }]) => {\\n\\t\\t\\t\\t\\t\\tif (isTotpMaxAttemptsError(error)) {\\n\\t\\t\\t\\t\\t\\t\\tdispatchToastMessage({\\n\\t\\t\\t\\t\\t\\t\\t\\ttype: 'error',\\n\\t\\t\\t\\t\\t\\t\\t\\tmessage: t('totp-max-attempts'),\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\tcallback?.(undefined);\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\\n\\t\\t\\t\\t\\t\\tcallback?.(undefined);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t});\\n\\t\\t\\t},\\n\\t\\t});\\n\\t});\\n};\\n\\nexport const handleLogin = <TLoginFunction extends (...args: any[]) => Promise<any>>(\\n\\tlogin: TLoginFunction,\\n\\tloginWithTOTP: (...args: [...args: Parameters<TLoginFunction>, code: string]) => ReturnType<TLoginFunction>,\\n) => {\\n\\treturn (...args: [...loginArgs: Parameters<TLoginFunction>, callback?: LoginCallback]) => {\\n\\t\\tconst loginArgs = args.slice(0, -1) as Parameters<TLoginFunction>;\\n\\t\\tconst callback = args.slice(-1)[0] as LoginCallback | undefined;\\n\\n\\t\\treturn login(...loginArgs)\\n\\t\\t\\t.catch(async (error: LoginError | undefined) => {\\n\\t\\t\\t\\tif (!isTotpRequiredError(error)) {\\n\\t\\t\\t\\t\\treturn Promise.reject(error);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tconst { process2faAsyncReturn } = await import('./process2faReturn');\\n\\t\\t\\t\\treturn process2faAsyncReturn({\\n\\t\\t\\t\\t\\temailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\\n\\t\\t\\t\\t\\terror,\\n\\t\\t\\t\\t\\tonCode: (code: string) => loginWithTOTP(...loginArgs, code),\\n\\t\\t\\t\\t});\\n\\t\\t\\t})\\n\\t\\t\\t.then((result: unknown) => callback?.(undefined, result))\\n\\t\\t\\t.catch((error: LoginError | undefined) => {\\n\\t\\t\\t\\tif (!isTotpInvalidError(error)) {\\n\\t\\t\\t\\t\\tcallback?.(error);\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tPromise.all([import('../../../app/utils/lib/i18n'), import('../toast')]).then(([{ t }, { dispatchToastMessage }]) => {\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\\n\\t\\t\\t\\t\\tcallback?.(undefined);\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\t};\\n};\\n\\nexport const callLoginMethod = (options: Omit<Accounts.LoginMethodOptions, 'userCallback'>) =>\\n\\tnew Promise<void>((resolve, reject) => {\\n\\t\\tAccounts.callLoginMethod({\\n\\t\\t\\t...options,\\n\\t\\t\\tuserCallback: (error) => {\\n\\t\\t\\t\\tif (error) {\\n\\t\\t\\t\\t\\treject(error);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tresolve();\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t});\\n\\t});\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"_objectSpread\",\"_slicedToArray\",\"_toConsumableArray\",\"export\",\"overrideLoginMethod\",\"handleLogin\",\"callLoginMethod\",\"isTotpInvalidError\",\"isTotpMaxAttemptsError\",\"isTotpRequiredError\",\"loginMethod\",\"loginArgs\",\"callback\",\"loginMethodTOTP\",\"apply\",\"concat\",\"error\",\"result\",\"process2faReturn\",\"async\",\"_context\",\"prev\",\"next\",\"abrupt\",\"awrap\",\"dynamicImport\",\"_await$module$dynamic\",\"sent\",\"emailOrUsername\",\"undefined\",\"originalCallback\",\"onCode\",\"code\",\"Promise\",\"all\",\"then\",\"_ref\",\"_ref2\",\"t\",\"dispatchToastMessage\",\"type\",\"message\",\"stop\",\"login\",\"loginWithTOTP\",\"_len\",\"arguments\",\"length\",\"args\",\"Array\",\"_key\",\"slice\",\"catch\",\"process2faAsyncReturn\",\"_context2\",\"reject\",\"_await$module$dynamic2\",\"_ref3\",\"_ref4\",\"options\",\"resolve\",\"Accounts\",\"userCallback\"],\"mappings\":\"uBAASA,EAAoBC,IAAA,CAAA,6BAAwB,CAAAC,QAAqB,SAAMC,CAAA,EAAAC,EAAUD,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uCAAA,CAAAC,QAAA,SAAAC,CAAA,EAAAE,EAAAF,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uCAAA,CAAAC,QAAA,SAAAC,CAAA,EAAAG,EAAAH,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2CAAA,CAAAC,QAAA,SAAAC,CAAA,EAAAI,EAAAJ,CAAA,CAAA,EAAA,GAA1FH,EAAOQ,MAAE,CAAA,CAAAC,oBAAoB,WAAA,OAAwBA,CAAmB,EAAEC,YAAM,WAAU,OAAAA,CAAA,EAAAC,gBAAA,WAAA,OAAAA,CAAA,CAAA,GAAAX,EAAAC,IAAA,CAAA,UAAA,CAAAW,mBAAA,SAAAT,CAAA,EAAAS,EAAAT,CAAA,EAAAU,uBAAA,SAAAV,CAAA,EAAAU,EAAAV,CAAA,EAAAW,oBAAA,SAAAX,CAAA,EAAAW,EAAAX,CAAA,CAAA,EAAA,GAMnF,IANPC,EAA0FC,EAAAC,EAAAC,EAAAK,EAAAC,EAAAC,EAM7EL,EAAsB,SAClCM,CAAmE,CACnEC,CAAgB,CAChBC,CAAmC,CACnCC,CAAqF,EAErFH,EAAWI,KAAA,CAAA,KAAA,EAAAZ,EAAIS,GAASI,MAAA,CAAA,CAAE,SAAOC,CAA6B,CAAEC,CAAgB,EAAA,IAAAC,EAAA,OAAAnB,EAAAoB,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,GAC1Eb,EAAoBO,GAAM,CAAAI,EAAAE,IAAA,CAAA,EAAA,KAAA,CACZ,OAAlBV,MAAAA,GAAAA,EAAWI,GAAOI,EAAAG,MAAA,CAAA,SAAA,MAAA,EAAA,OAAAH,EAAAE,IAAA,CAAA,EAAAvB,EAAAyB,KAAA,CAIgB7B,EAAA8B,aAAA,CAAO,sBAAqB,MAAA,EAAvC,OAAhBP,EAAgBQ,AAAuCN,EAAAO,IAAA,CAAvDT,gBAAgB,CAAAE,EAAAE,IAAA,CAAA,EAAAvB,EAAAyB,KAAA,CAElBN,EAAiB,CACtBF,MAAAA,EACAC,OAAAA,EACAW,gBAAiB,AAAwB,UAAxB,OAAOjB,CAAS,CAAC,EAAE,CAAgBA,CAAS,CAAC,EAAE,CAAGkB,KAAAA,EACnEC,iBAAkBlB,EAClBmB,OAAQ,SAACC,CAAY,EACpBnB,EAAeC,KAAA,CAAA,KAAA,EAAAZ,EAAIS,GAASI,MAAA,CAAA,CAAEiB,EAAM,SAAChB,CAA6B,CAAEC,CAAgB,EACnF,GAAI,CAACD,EAAO,CACXJ,MAAAA,GAAAA,EAAWiB,KAAAA,EAAWZ,GACtB,MACD,CAEA,GAAIV,EAAmBS,GAAQ,CAC9BJ,MAAAA,GAAAA,EAAWI,GACX,MACD,CAEAiB,QAAQC,GAAG,CAAC,CAACvC,EAAA8B,aAAA,CAAO,+BAAgC9B,EAAA8B,aAAA,CAAO,YAAY,EAAEU,IAAI,CAAC,SAAAC,CAAA,EAAsC,IAAAC,EAAApC,EAAAmC,EAAA,GAAlCE,EAACD,CAAA,CAAA,EAAA,CAADC,CAAC,CAAMC,EAAoBF,CAAA,CAAA,EAAA,CAApBE,oBAAoB,CAC5G,GAAI/B,EAAuBQ,GAAQ,CAClCuB,EAAqB,CACpBC,KAAM,QACNC,QAASH,EAAE,uBAEZ1B,MAAAA,GAAAA,EAAWiB,KAAAA,GACX,MACD,CAEAU,EAAqB,CAAEC,KAAM,QAASC,QAASH,EAAE,0BAA0B,GAC3E1B,MAAAA,GAAAA,EAAWiB,KAAAA,EACZ,EACD,EAAC,EACF,IACC,MAAA,EAAA,IAAA,MAAA,OAAAT,EAAAsB,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAT,QAAA,EACF,EACF,EAEa5B,EAAc,SAC1BsC,CAAqB,CACrBC,CAA2G,EAE3G,OAAO,WAAkF,IAAA,IAAAC,EAAAC,UAAAC,MAAA,CAA9EC,EAA0E,AAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAA1EF,CAA0E,CAAAE,EAAA,CAAAJ,SAAA,CAAAI,EAAA,CACpF,IAAMvC,EAAYqC,EAAKG,KAAK,CAAC,EAAG,IAC1BvC,EAAWoC,EAAKG,KAAK,CAAC,GAAG,CAAC,EAA+B,CAE/D,OAAOR,EAAK7B,KAAA,CAAA,KAAA,EAAAZ,EAAIS,IACdyC,KAAK,CAAC,SAAOpC,CAA6B,EAAA,IAAAqC,EAAA,OAAAtD,EAAAoB,KAAA,CAAA,SAAAmC,CAAA,EAAA,OAAA,OAAAA,EAAAjC,IAAA,CAAAiC,EAAAhC,IAAA,EAAA,KAAA,EAAA,GACrCb,EAAoBO,GAAM,CAAAsC,EAAAhC,IAAA,CAAA,EAAA,KAAA,CAAA,OAAAgC,EAAA/B,MAAA,CAAA,SACvBU,QAAQsB,MAAM,CAACvC,GAAM,MAAA,EAAA,OAAAsC,EAAAhC,IAAA,CAAA,EAAAvB,EAAAyB,KAAA,CAGW7B,EAAA8B,aAAA,CAAO,sBAAqB,MAAA,EAAvC,OAArB4B,EAAqBG,AAAuCF,EAAA3B,IAAA,CAA5D0B,qBAAqB,CAAAC,EAAA/B,MAAA,CAAA,SACtB8B,EAAsB,CAC5BzB,gBAAiB,AAAwB,UAAxB,OAAOjB,CAAS,CAAC,EAAE,CAAgBA,CAAS,CAAC,EAAE,CAAGkB,KAAAA,EACnEb,MAAAA,EACAe,OAAQ,SAACC,CAAY,EAAA,OAAKY,EAAa9B,KAAA,CAAA,KAAA,EAAAZ,EAAIS,GAASI,MAAA,CAAA,CAAEiB,EAAI,EAAC,IAC1D,MAAA,EAAA,IAAA,MAAA,OAAAsB,EAAAZ,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAT,QAAA,GAEFE,IAAI,CAAC,SAAClB,CAAe,EAAA,OAAKL,MAAAA,EAAQ,KAAA,EAARA,EAAWiB,KAAAA,EAAWZ,EAAO,GACvDmC,KAAK,CAAC,SAACpC,CAA6B,EACpC,GAAI,CAACT,EAAmBS,GAAQ,CAC/BJ,MAAAA,GAAAA,EAAWI,GACX,MACD,CAEAiB,QAAQC,GAAG,CAAC,CAACvC,EAAA8B,aAAA,CAAO,+BAAgC9B,EAAA8B,aAAA,CAAO,YAAY,EAAEU,IAAI,CAAC,SAAAsB,CAAA,EAAsC,IAAAC,EAAAzD,EAAAwD,EAAA,GAAlCnB,EAACoB,CAAA,CAAA,EAAA,CAADpB,CAAC,CAClFC,AAD4GmB,CAAAA,EAAAA,CAAA,CAAA,EAAA,CAApBnB,oBAAoB,AAApBA,EACnE,CAAEC,KAAM,QAASC,QAASH,EAAE,0BAA0B,GAC3E1B,MAAAA,GAAAA,EAAWiB,KAAAA,EACZ,EACD,EACF,CACD,EAEavB,EAAkB,SAACqD,CAA0D,EAAA,OACzF,IAAI1B,QAAc,SAAC2B,CAAO,CAAEL,CAAM,EACjCM,SAASvD,eAAe,CAAAN,EAAAA,EAAA,CAAA,EACpB2D,GAAO,CAAA,EAAA,CACVG,aAAc,SAAC9C,CAAK,EACfA,EACHuC,EAAOvC,GAEP4C,GAEF,CAAC,GAEH,EAAE\"}"}