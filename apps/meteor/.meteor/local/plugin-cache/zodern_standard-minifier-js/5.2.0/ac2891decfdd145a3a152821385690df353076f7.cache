{"code":"function module(t,e,i){let s,r,h,a;i.link(\"@babel/runtime/helpers/classPrivateFieldLooseBase\",{default(t){s=t}},0),i.link(\"@babel/runtime/helpers/classPrivateFieldLooseKey\",{default(t){r=t}},1),i.export({RecordList:()=>c}),i.link(\"@rocket.chat/emitter\",{Emitter(t){h=t}},0),i.link(\"../asyncState\",{AsyncStatePhase(t){a=t}},1);var n=r(\"hasChanges\"),l=r(\"index\"),d=r(\"phase\"),u=r(\"items\"),o=r(\"itemCount\"),m=r(\"pedingMutation\");class c extends h{constructor(){super(...arguments),Object.defineProperty(this,n,{writable:!0,value:!1}),Object.defineProperty(this,l,{writable:!0,value:new Map}),Object.defineProperty(this,d,{writable:!0,value:a.LOADING}),Object.defineProperty(this,u,{writable:!0,value:void 0}),Object.defineProperty(this,o,{writable:!0,value:void 0}),Object.defineProperty(this,m,{writable:!0,value:Promise.resolve()})}filter(t){return!0}compare(t,e){var i,s;let r=\"string\"==typeof t._updatedAt?new Date(t._updatedAt):t._updatedAt,h=\"string\"==typeof e._updatedAt?new Date(e._updatedAt):e._updatedAt;return(null!==(i=null==h?void 0:h.getTime())&&void 0!==i?i:-1)-(null!==(s=null==r?void 0:r.getTime())&&void 0!==s?s:-1)}get phase(){return s(this,d)[d]}get items(){return s(this,u)[u]||(s(this,u)[u]=Array.from(s(this,l)[l].values()).sort(this.compare)),s(this,u)[u]}get itemCount(){var t;return null!==(t=s(this,o)[o])&&void 0!==t?t:s(this,l)[l].size}insert(t){s(this,l)[l].set(t._id,t),this.emit(\"\".concat(t._id,\"/inserted\"),t),\"number\"==typeof s(this,o)[o]&&s(this,o)[o]++,s(this,n)[n]=!0}update(t){s(this,l)[l].set(t._id,t),this.emit(\"\".concat(t._id,\"/updated\"),t),s(this,n)[n]=!0}delete(t){s(this,l)[l].delete(t),this.emit(\"\".concat(t,\"/deleted\")),\"number\"==typeof s(this,o)[o]&&s(this,o)[o]--,s(this,n)[n]=!0}push(t){let e=s(this,l)[l].has(t._id),i=this.filter(t);if(e&&!i){this.delete(t._id);return}if(e&&i){this.update(t);return}!e&&i&&this.insert(t)}async mutate(t){try{s(this,d)[d]===a.RESOLVED&&(s(this,d)[d]=a.UPDATING,this.emit(\"mutating\")),s(this,m)[m]=s(this,m)[m].then(t),await s(this,m)[m]}catch(t){this.emit(\"errored\",t)}finally{let t=s(this,n)[n];s(this,d)[d]=a.RESOLVED,t&&(s(this,u)[u]=void 0,s(this,n)[n]=!1),this.emit(\"mutated\",t)}}batchHandle(t){return this.mutate(async()=>{let e=await t();if(e.items)for(let t of e.items)this.push(t);e.itemCount&&(s(this,o)[o]=e.itemCount,s(this,n)[n]=!0)})}prune(t){return this.mutate(()=>{for(let e of s(this,l)[l].values())t(e)&&this.delete(e._id)})}handle(t){return this.mutate(()=>{this.push(t)})}remove(t){return this.mutate(()=>{s(this,l)[l].has(t)&&this.delete(t)})}clear(){return this.mutate(()=>{0!==s(this,l)[l].size&&(s(this,l)[l].clear(),s(this,u)[u]=void 0,s(this,o)[o]=void 0,s(this,n)[n]=!0,this.emit(\"cleared\"))})}}}","map":"{\"version\":3,\"sources\":[\"client/lib/lists/RecordList.ts\",\"<anon>\"],\"sourcesContent\":[\"import { Emitter } from '@rocket.chat/emitter';\\n\\nimport { AsyncStatePhase } from '../asyncState';\\n\\nexport type RecordListBatchChanges<T> = {\\n\\titems?: T[];\\n\\titemCount?: number;\\n};\\n\\nexport class RecordList<T extends { _id: string; _updatedAt?: Date }> extends Emitter {\\n\\t#hasChanges = false;\\n\\n\\t#index = new Map<T['_id'], T>();\\n\\n\\t#phase: AsyncStatePhase.LOADING | AsyncStatePhase.UPDATING | AsyncStatePhase.RESOLVED = AsyncStatePhase.LOADING;\\n\\n\\t#items: T[] | undefined = undefined;\\n\\n\\t#itemCount: number | undefined = undefined;\\n\\n\\tprotected filter(_item: T): boolean {\\n\\t\\treturn true;\\n\\t}\\n\\n\\tprotected compare(a: T, b: T): number {\\n\\t\\tconst aUpdatedAt = typeof a._updatedAt === 'string' ? new Date(a._updatedAt) : a._updatedAt;\\n\\t\\tconst bUpdatedAt = typeof b._updatedAt === 'string' ? new Date(b._updatedAt) : b._updatedAt;\\n\\t\\treturn (bUpdatedAt?.getTime() ?? -1) - (aUpdatedAt?.getTime() ?? -1);\\n\\t}\\n\\n\\tpublic get phase(): AsyncStatePhase {\\n\\t\\treturn this.#phase;\\n\\t}\\n\\n\\tpublic get items(): T[] {\\n\\t\\tif (!this.#items) {\\n\\t\\t\\tthis.#items = Array.from(this.#index.values()).sort(this.compare);\\n\\t\\t}\\n\\n\\t\\treturn this.#items;\\n\\t}\\n\\n\\tpublic get itemCount(): number {\\n\\t\\treturn this.#itemCount ?? this.#index.size;\\n\\t}\\n\\n\\tprivate insert(item: T): void {\\n\\t\\tthis.#index.set(item._id, item);\\n\\t\\tthis.emit(`${item._id}/inserted`, item);\\n\\t\\tif (typeof this.#itemCount === 'number') {\\n\\t\\t\\tthis.#itemCount++;\\n\\t\\t}\\n\\t\\tthis.#hasChanges = true;\\n\\t}\\n\\n\\tprivate update(item: T): void {\\n\\t\\tthis.#index.set(item._id, item);\\n\\t\\tthis.emit(`${item._id}/updated`, item);\\n\\t\\tthis.#hasChanges = true;\\n\\t}\\n\\n\\tprivate delete(_id: T['_id']): void {\\n\\t\\tthis.#index.delete(_id);\\n\\t\\tthis.emit(`${_id}/deleted`);\\n\\t\\tif (typeof this.#itemCount === 'number') {\\n\\t\\t\\tthis.#itemCount--;\\n\\t\\t}\\n\\t\\tthis.#hasChanges = true;\\n\\t}\\n\\n\\tprivate push(item: T): void {\\n\\t\\tconst exists = this.#index.has(item._id);\\n\\t\\tconst valid = this.filter(item);\\n\\n\\t\\tif (exists && !valid) {\\n\\t\\t\\tthis.delete(item._id);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (exists && valid) {\\n\\t\\t\\tthis.update(item);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (!exists && valid) {\\n\\t\\t\\tthis.insert(item);\\n\\t\\t}\\n\\t}\\n\\n\\t#pedingMutation: Promise<void> = Promise.resolve();\\n\\n\\tprotected async mutate(mutation: () => void | Promise<void>): Promise<void> {\\n\\t\\ttry {\\n\\t\\t\\tif (this.#phase === AsyncStatePhase.RESOLVED) {\\n\\t\\t\\t\\tthis.#phase = AsyncStatePhase.UPDATING;\\n\\t\\t\\t\\tthis.emit('mutating');\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.#pedingMutation = this.#pedingMutation.then(mutation);\\n\\t\\t\\tawait this.#pedingMutation;\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.emit('errored', error);\\n\\t\\t} finally {\\n\\t\\t\\tconst hasChanged = this.#hasChanges;\\n\\t\\t\\tthis.#phase = AsyncStatePhase.RESOLVED;\\n\\t\\t\\tif (hasChanged) {\\n\\t\\t\\t\\tthis.#items = undefined;\\n\\t\\t\\t\\tthis.#hasChanges = false;\\n\\t\\t\\t}\\n\\t\\t\\tthis.emit('mutated', hasChanged);\\n\\t\\t}\\n\\t}\\n\\n\\tpublic batchHandle(getInfo: () => Promise<RecordListBatchChanges<T>>): Promise<void> {\\n\\t\\treturn this.mutate(async () => {\\n\\t\\t\\tconst info = await getInfo();\\n\\n\\t\\t\\tif (info.items) {\\n\\t\\t\\t\\tfor (const item of info.items) {\\n\\t\\t\\t\\t\\tthis.push(item);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (info.itemCount) {\\n\\t\\t\\t\\tthis.#itemCount = info.itemCount;\\n\\t\\t\\t\\tthis.#hasChanges = true;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\n\\tpublic prune(matchCriteria: (item: T) => boolean): Promise<void> {\\n\\t\\treturn this.mutate(() => {\\n\\t\\t\\tfor (const item of this.#index.values()) {\\n\\t\\t\\t\\tif (matchCriteria(item)) {\\n\\t\\t\\t\\t\\tthis.delete(item._id);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\n\\tpublic handle(item: T): Promise<void> {\\n\\t\\treturn this.mutate(() => {\\n\\t\\t\\tthis.push(item);\\n\\t\\t});\\n\\t}\\n\\n\\tpublic remove(_id: T['_id']): Promise<void> {\\n\\t\\treturn this.mutate(() => {\\n\\t\\t\\tif (!this.#index.has(_id)) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.delete(_id);\\n\\t\\t});\\n\\t}\\n\\n\\tpublic clear(): Promise<void> {\\n\\t\\treturn this.mutate(() => {\\n\\t\\t\\tif (this.#index.size === 0) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.#index.clear();\\n\\t\\t\\tthis.#items = undefined;\\n\\t\\t\\tthis.#itemCount = undefined;\\n\\t\\t\\tthis.#hasChanges = true;\\n\\t\\t\\tthis.emit('cleared');\\n\\t\\t});\\n\\t}\\n}\\n\",null],\"names\":[\"_classPrivateFieldLooseBase\",\"_classPrivateFieldLooseKey\",\"Emitter\",\"AsyncStatePhase\",\"module\",\"link\",\"default\",\"v\",\"export\",\"RecordList\",\"_hasChanges\",\"_index\",\"_phase\",\"_items\",\"_itemCount\",\"_pedingMutation\",\"constructor\",\"arguments\",\"Object\",\"defineProperty\",\"writable\",\"value\",\"Map\",\"LOADING\",\"undefined\",\"Promise\",\"resolve\",\"filter\",\"_item\",\"compare\",\"a\",\"b\",\"_bUpdatedAt$getTime\",\"_aUpdatedAt$getTime\",\"aUpdatedAt\",\"_updatedAt\",\"Date\",\"bUpdatedAt\",\"getTime\",\"phase\",\"items\",\"Array\",\"from\",\"values\",\"sort\",\"itemCount\",\"_classPrivateFieldLoo\",\"size\",\"insert\",\"item\",\"set\",\"_id\",\"emit\",\"concat\",\"update\",\"delete\",\"push\",\"exists\",\"has\",\"valid\",\"mutate\",\"mutation\",\"RESOLVED\",\"UPDATING\",\"then\",\"error\",\"hasChanged\",\"batchHandle\",\"getInfo\",\"info\",\"prune\",\"matchCriteria\",\"handle\",\"remove\",\"clear\"],\"mappings\":\"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\"}"}