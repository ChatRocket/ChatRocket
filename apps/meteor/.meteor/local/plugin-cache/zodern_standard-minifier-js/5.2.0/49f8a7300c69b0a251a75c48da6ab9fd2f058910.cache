{"code":"function module(t,a){\"use strict\";var e=this&&this.__createBinding||(Object.create?function(t,a,e,n){void 0===n&&(n=e);var s=Object.getOwnPropertyDescriptor(a,e);(!s||(\"get\"in s?!a.__esModule:s.writable||s.configurable))&&(s={enumerable:!0,get:function(){return a[e]}}),Object.defineProperty(t,n,s)}:function(t,a,e,n){void 0===n&&(n=e),t[n]=a[e]}),n=this&&this.__setModuleDefault||(Object.create?function(t,a){Object.defineProperty(t,\"default\",{enumerable:!0,value:a})}:function(t,a){t.default=a}),s=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var a={};if(null!=t)for(var s in t)\"default\"!==s&&Object.prototype.hasOwnProperty.call(t,s)&&e(a,t,s);return n(a,t),a};Object.defineProperty(a,\"__esModule\",{value:!0}),a.validateEqualsReturn=a.validateEqualsParameters=a.validateEqualsFunction=a.validateReturn=a.validateParameters=a.validateFunction=a.equalsReturn=a.equalsParameters=a.equalsFunction=a.isReturn=a.isParameters=a.isFunction=a.assertEqualsReturn=a.assertEqualsParameters=a.assertEqualsFunction=a.assertReturn=a.assertParameters=a.assertFunction=void 0;var r=s(t(\"./functional/Namespace\"));function i(){h(\"assertFunction\")}var u=Object.assign(i,r.assert(\"functional.assertFunction\"),r.functional.functionalAssert());function c(){h(\"assertParameters\")}a.assertFunction=u;var o=Object.assign(i,r.assert(\"functional.assertFunction\"),r.functional.functionalAssert());a.assertParameters=o;var l=Object.assign(function(){h(\"assertReturn\")},r.assert(\"functional.assertReturn\"),r.functional.functionalAssert());a.assertReturn=l;var f=Object.assign(function(){h(\"assertEqualsFunction\")},r.assert(\"functional.assertEqualsFunction\"),r.functional.functionalAssert());a.assertEqualsFunction=f;var v=Object.assign(function(){h(\"assertEqualsParameters\")},r.assert(\"functional.assertEqualsParameters\"),r.functional.functionalAssert());a.assertEqualsParameters=v;var d=Object.assign(function(){h(\"assertEqualsReturn\")},r.assert(\"functional.assertEqualsReturn\"),r.functional.functionalAssert());a.assertEqualsReturn=d;var b=Object.assign(function(){h(\"isFunction\")},r.is());a.isFunction=b;var q=Object.assign(function(){h(\"isParameters\")},r.is());a.isParameters=q;var O=Object.assign(function(){h(\"isReturn\")},r.is());a.isReturn=O;var j=Object.assign(function(){h(\"equalsFunction\")},r.is());a.equalsFunction=j;var g=Object.assign(function(){h(\"equalsParameters\")},r.is());a.equalsParameters=g;var m=Object.assign(function(){h(\"equalsReturn\")},r.is());a.equalsReturn=m;var E=Object.assign(function(){h(\"validateFunction\")},r.validate());a.validateFunction=E;var P=Object.assign(function(){h(\"validateReturn\")},r.validate());a.validateParameters=P;var R=Object.assign(function(){h(\"validateReturn\")},r.validate());a.validateReturn=R;var F=Object.assign(function(){h(\"validateEqualsFunction\")},r.validate());a.validateEqualsFunction=F;var p=Object.assign(function(){h(\"validateEqualsParameters\")},r.validate());a.validateEqualsParameters=p;var _=Object.assign(function(){h(\"validateEqualsReturn\")},r.validate());function h(t){throw Error(\"Error on typia.functional.\".concat(t,\"(): no transform has been configured. Read and follow https://typia.io/docs/setup please.\"))}a.validateEqualsReturn=_}","map":"{\"version\":3,\"sources\":[\"<anon>\"],\"names\":[],\"mappings\":\"\"}"}