{"code":"function module(e,t,i){let a,s,n,r,o,l,d,c,p,u,h,I;let v=[\"type\",\"triggerId\"];i.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default(e){a=e}},0),i.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){s=e}},1),i.export({ActionManager:()=>m}),i.link(\"@rocket.chat/emitter\",{Emitter(e){n=e}},0),i.link(\"@rocket.chat/random\",{Random(e){r=e}},1),i.link(\"i18next\",{t(e){o=e}},2),i.link(\"react\",{lazy(e){l=e}},3),i.link(\"../../../client/lib/banners\",{\"*\"(e){d=e}},4),i.link(\"../../../client/lib/imperativeModal\",{imperativeModal(e){c=e}},5),i.link(\"../../../client/lib/toast\",{dispatchToastMessage(e){p=e}},6),i.link(\"../../../lib/utils/exhaustiveCheck\",{exhaustiveCheck(e){u=e}},7),i.link(\"../../utils/client/lib/SDKClient\",{sdk(e){h=e}},8),i.link(\"./UiKitTriggerTimeoutError\",{UiKitTriggerTimeoutError(e){I=e}},9);let w=l(()=>i.dynamicImport(\"../../../client/views/modal/uikit/UiKitModal\"));class m{constructor(e){this.router=void 0,this.events=new n,this.appIdByTriggerId=new Map,this.viewInstances=new Map,this.router=e}invalidateTriggerId(e){let t=this.appIdByTriggerId.get(e);return this.appIdByTriggerId.delete(e),t}on(e,t){return this.events.on(e,t)}off(e,t){return this.events.off(e,t)}notifyBusy(){this.events.emit(\"busy\",{busy:!0})}notifyIdle(){this.events.emit(\"busy\",{busy:!1})}generateTriggerId(e){let t=r.id();return this.appIdByTriggerId.set(t,e),setTimeout(()=>this.invalidateTriggerId(t),m.TRIGGER_TIMEOUT),t}async emitInteraction(e,t){let i=this.generateTriggerId(e);return this.runWithTimeout(async()=>{let a;try{a=await h.rest.post(\"/apps/ui.interaction/\".concat(e),s(s({},t),{},{triggerId:i})),this.handleServerInteraction(a)}finally{switch(t.type){case\"viewSubmit\":a&&![\"errors\",\"modal.update\",\"contextual_bar.update\"].includes(a.type)&&this.disposeView(t.viewId);break;case\"viewClosed\":a&&\"errors\"!==a.type&&this.disposeView(t.payload.viewId)}}},s({triggerId:i,appId:e},\"viewId\"in t?{viewId:t.viewId}:{}))}async runWithTimeout(e,t){let i;this.notifyBusy();try{let a=e(),s=new Promise((e,a)=>{i=setTimeout(()=>{a(new I(\"Timeout\",t))},m.TRIGGER_TIMEOUT)});return await Promise.race([a,s])}catch(e){e instanceof I&&(p({type:\"error\",message:o(\"UIKit_Interaction_Timeout\")}),t.viewId&&this.disposeView(t.viewId))}finally{i&&clearTimeout(i),this.notifyIdle()}}handleServerInteraction(e){let{triggerId:t}=e,i=this.invalidateTriggerId(t);if(i){switch(e.type){case\"errors\":{let{type:t,triggerId:i,viewId:a,appId:s,errors:n}=e;this.events.emit(e.viewId,{type:t,triggerId:i,viewId:a,appId:s,errors:n});break}case\"modal.open\":{let{view:t}=e;this.openModal(t);break}case\"modal.update\":case\"contextual_bar.update\":{let{type:t,triggerId:i,appId:a,view:s}=e;this.events.emit(s.id,{type:t,triggerId:i,viewId:s.id,appId:a,view:s});break}case\"modal.close\":break;case\"banner.open\":{let{type:t,triggerId:i}=e,s=a(e,v);this.openBanner(s);break}case\"banner.update\":{let{type:t,triggerId:i,appId:a,view:s}=e;this.events.emit(s.viewId,{type:t,triggerId:i,viewId:s.viewId,appId:a,view:s});break}case\"banner.close\":{let{viewId:t}=e;this.disposeView(t);break}case\"contextual_bar.open\":{let{view:t}=e;this.openContextualBar(t);break}case\"contextual_bar.close\":{let{view:t}=e;this.disposeView(t.id);break}default:u(e)}return e.type}}getInteractionPayloadByViewId(e){var t;if(!e)throw Error(\"No viewId provided when checking for `user interaction payload`\");return null===(t=this.viewInstances.get(e))||void 0===t?void 0:t.payload}openView(e,t){switch(e){case\"modal\":this.openModal(t);break;case\"banner\":this.openBanner(t);break;case\"contextual_bar\":this.openContextualBar(t)}}openModal(e){let t=c.open({component:w,props:{key:e.id,initialView:e}});this.viewInstances.set(e.id,{close:()=>{t.close(),this.viewInstances.delete(e.id)}})}openBanner(e){d.open(e),this.viewInstances.set(e.viewId,{close:()=>{d.closeById(e.viewId)}})}openContextualBar(e){this.viewInstances.set(e.id,{payload:{view:e},close:()=>{this.viewInstances.delete(e.id)}});let t=this.router.getRouteName(),i=this.router.getRouteParameters();t&&this.router.navigate({name:t,params:s(s({},i),{},{tab:\"app\",context:e.id})})}disposeView(e){var t;let i=this.viewInstances.get(e);null==i||null===(t=i.close)||void 0===t||t.call(i),this.viewInstances.delete(e)}}m.TRIGGER_TIMEOUT=5e3,m.TRIGGER_TIMEOUT_ERROR=\"TRIGGER_TIMEOUT_ERROR\"}","map":"{\"version\":3,\"sources\":[\"app/ui-message/client/ActionManager.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { DistributiveOmit } from '@rocket.chat/core-typings';\\nimport { Emitter } from '@rocket.chat/emitter';\\nimport { Random } from '@rocket.chat/random';\\nimport type { RouterContext, IActionManager } from '@rocket.chat/ui-contexts';\\nimport type * as UiKit from '@rocket.chat/ui-kit';\\nimport { t } from 'i18next';\\nimport type { ContextType } from 'react';\\nimport { lazy } from 'react';\\n\\nimport * as banners from '../../../client/lib/banners';\\nimport { imperativeModal } from '../../../client/lib/imperativeModal';\\nimport { dispatchToastMessage } from '../../../client/lib/toast';\\nimport { exhaustiveCheck } from '../../../lib/utils/exhaustiveCheck';\\nimport { sdk } from '../../utils/client/lib/SDKClient';\\nimport { UiKitTriggerTimeoutError } from './UiKitTriggerTimeoutError';\\n\\nconst UiKitModal = lazy(() => import('../../../client/views/modal/uikit/UiKitModal'));\\n\\nexport class ActionManager implements IActionManager {\\n\\tprotected static TRIGGER_TIMEOUT = 5000;\\n\\n\\tprotected static TRIGGER_TIMEOUT_ERROR = 'TRIGGER_TIMEOUT_ERROR';\\n\\n\\tprotected events = new Emitter<{ busy: { busy: boolean }; [viewId: string]: any }>();\\n\\n\\tprotected appIdByTriggerId = new Map<string, string | undefined>();\\n\\n\\tprotected viewInstances = new Map<\\n\\t\\tstring,\\n\\t\\t{\\n\\t\\t\\tpayload?: {\\n\\t\\t\\t\\tview: UiKit.ContextualBarView;\\n\\t\\t\\t};\\n\\t\\t\\tclose: () => void;\\n\\t\\t}\\n\\t>();\\n\\n\\tpublic constructor(protected router: ContextType<typeof RouterContext>) {}\\n\\n\\tprotected invalidateTriggerId(id: string) {\\n\\t\\tconst appId = this.appIdByTriggerId.get(id);\\n\\t\\tthis.appIdByTriggerId.delete(id);\\n\\t\\treturn appId;\\n\\t}\\n\\n\\tpublic on(viewId: string, listener: (data: any) => void): void;\\n\\n\\tpublic on(eventName: 'busy', listener: ({ busy }: { busy: boolean }) => void): void;\\n\\n\\tpublic on(eventName: string, listener: (data: any) => void) {\\n\\t\\treturn this.events.on(eventName, listener);\\n\\t}\\n\\n\\tpublic off(viewId: string, listener: (data: any) => any): void;\\n\\n\\tpublic off(eventName: 'busy', listener: ({ busy }: { busy: boolean }) => void): void;\\n\\n\\tpublic off(eventName: string, listener: (data: any) => void) {\\n\\t\\treturn this.events.off(eventName, listener);\\n\\t}\\n\\n\\tpublic notifyBusy() {\\n\\t\\tthis.events.emit('busy', { busy: true });\\n\\t}\\n\\n\\tpublic notifyIdle() {\\n\\t\\tthis.events.emit('busy', { busy: false });\\n\\t}\\n\\n\\tpublic generateTriggerId(appId: string | undefined) {\\n\\t\\tconst triggerId = Random.id();\\n\\t\\tthis.appIdByTriggerId.set(triggerId, appId);\\n\\t\\tsetTimeout(() => this.invalidateTriggerId(triggerId), ActionManager.TRIGGER_TIMEOUT);\\n\\t\\treturn triggerId;\\n\\t}\\n\\n\\tpublic async emitInteraction(appId: string, userInteraction: DistributiveOmit<UiKit.UserInteraction, 'triggerId'>) {\\n\\t\\tconst triggerId = this.generateTriggerId(appId);\\n\\n\\t\\treturn this.runWithTimeout(\\n\\t\\t\\tasync () => {\\n\\t\\t\\t\\tlet interaction: UiKit.ServerInteraction | undefined;\\n\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tinteraction = (await sdk.rest.post(`/apps/ui.interaction/${appId}`, {\\n\\t\\t\\t\\t\\t\\t...userInteraction,\\n\\t\\t\\t\\t\\t\\ttriggerId,\\n\\t\\t\\t\\t\\t})) as UiKit.ServerInteraction;\\n\\n\\t\\t\\t\\t\\tthis.handleServerInteraction(interaction);\\n\\t\\t\\t\\t} finally {\\n\\t\\t\\t\\t\\tswitch (userInteraction.type) {\\n\\t\\t\\t\\t\\t\\tcase 'viewSubmit':\\n\\t\\t\\t\\t\\t\\t\\tif (!!interaction && !['errors', 'modal.update', 'contextual_bar.update'].includes(interaction.type))\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.disposeView(userInteraction.viewId);\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase 'viewClosed':\\n\\t\\t\\t\\t\\t\\t\\tif (!!interaction && interaction.type !== 'errors') this.disposeView(userInteraction.payload.viewId);\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t{ triggerId, appId, ...('viewId' in userInteraction ? { viewId: userInteraction.viewId } : {}) },\\n\\t\\t);\\n\\t}\\n\\n\\tprotected async runWithTimeout<T>(task: () => Promise<T>, details: { triggerId: string; appId: string; viewId?: string }) {\\n\\t\\tthis.notifyBusy();\\n\\n\\t\\tlet timer: ReturnType<typeof setTimeout> | undefined;\\n\\n\\t\\ttry {\\n\\t\\t\\tconst taskPromise = task();\\n\\t\\t\\tconst timeoutPromise = new Promise<T>((_, reject) => {\\n\\t\\t\\t\\ttimer = setTimeout(() => {\\n\\t\\t\\t\\t\\treject(new UiKitTriggerTimeoutError('Timeout', details));\\n\\t\\t\\t\\t}, ActionManager.TRIGGER_TIMEOUT);\\n\\t\\t\\t});\\n\\n\\t\\t\\treturn await Promise.race([taskPromise, timeoutPromise]);\\n\\t\\t} catch (error) {\\n\\t\\t\\tif (error instanceof UiKitTriggerTimeoutError) {\\n\\t\\t\\t\\tdispatchToastMessage({\\n\\t\\t\\t\\t\\ttype: 'error',\\n\\t\\t\\t\\t\\tmessage: t('UIKit_Interaction_Timeout'),\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tif (details.viewId) {\\n\\t\\t\\t\\t\\tthis.disposeView(details.viewId);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} finally {\\n\\t\\t\\tif (timer) clearTimeout(timer);\\n\\t\\t\\tthis.notifyIdle();\\n\\t\\t}\\n\\t}\\n\\n\\tpublic handleServerInteraction(interaction: UiKit.ServerInteraction): UiKit.ServerInteraction['type'] | undefined {\\n\\t\\tconst { triggerId } = interaction;\\n\\n\\t\\tconst appId = this.invalidateTriggerId(triggerId);\\n\\t\\tif (!appId) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tswitch (interaction.type) {\\n\\t\\t\\tcase 'errors': {\\n\\t\\t\\t\\tconst { type, triggerId, viewId, appId, errors } = interaction;\\n\\t\\t\\t\\tthis.events.emit(interaction.viewId, {\\n\\t\\t\\t\\t\\ttype,\\n\\t\\t\\t\\t\\ttriggerId,\\n\\t\\t\\t\\t\\tviewId,\\n\\t\\t\\t\\t\\tappId,\\n\\t\\t\\t\\t\\terrors,\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tcase 'modal.open': {\\n\\t\\t\\t\\tconst { view } = interaction;\\n\\t\\t\\t\\tthis.openModal(view);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tcase 'modal.update':\\n\\t\\t\\tcase 'contextual_bar.update': {\\n\\t\\t\\t\\tconst { type, triggerId, appId, view } = interaction;\\n\\t\\t\\t\\tthis.events.emit(view.id, {\\n\\t\\t\\t\\t\\ttype,\\n\\t\\t\\t\\t\\ttriggerId,\\n\\t\\t\\t\\t\\tviewId: view.id,\\n\\t\\t\\t\\t\\tappId,\\n\\t\\t\\t\\t\\tview,\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tcase 'modal.close': {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tcase 'banner.open': {\\n\\t\\t\\t\\tconst { type, triggerId, ...view } = interaction;\\n\\t\\t\\t\\tthis.openBanner(view);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tcase 'banner.update': {\\n\\t\\t\\t\\tconst { type, triggerId, appId, view } = interaction;\\n\\t\\t\\t\\tthis.events.emit(view.viewId, {\\n\\t\\t\\t\\t\\ttype,\\n\\t\\t\\t\\t\\ttriggerId,\\n\\t\\t\\t\\t\\tviewId: view.viewId,\\n\\t\\t\\t\\t\\tappId,\\n\\t\\t\\t\\t\\tview,\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tcase 'banner.close': {\\n\\t\\t\\t\\tconst { viewId } = interaction;\\n\\t\\t\\t\\tthis.disposeView(viewId);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tcase 'contextual_bar.open': {\\n\\t\\t\\t\\tconst { view } = interaction;\\n\\t\\t\\t\\tthis.openContextualBar(view);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tcase 'contextual_bar.close': {\\n\\t\\t\\t\\tconst { view } = interaction;\\n\\t\\t\\t\\tthis.disposeView(view.id);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\texhaustiveCheck(interaction);\\n\\t\\t}\\n\\n\\t\\treturn interaction.type;\\n\\t}\\n\\n\\tpublic getInteractionPayloadByViewId(viewId: UiKit.ContextualBarView['id']) {\\n\\t\\tif (!viewId) {\\n\\t\\t\\tthrow new Error('No viewId provided when checking for `user interaction payload`');\\n\\t\\t}\\n\\n\\t\\treturn this.viewInstances.get(viewId)?.payload;\\n\\t}\\n\\n\\tpublic openView(surface: 'modal', view: UiKit.ModalView): void;\\n\\n\\tpublic openView(surface: 'banner', view: UiKit.BannerView): void;\\n\\n\\tpublic openView(surface: 'contextual_bar', view: UiKit.ContextualBarView): void;\\n\\n\\tpublic openView(surface: string, view: UiKit.View) {\\n\\t\\tswitch (surface) {\\n\\t\\t\\tcase 'modal':\\n\\t\\t\\t\\tthis.openModal(view as UiKit.ModalView);\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 'banner':\\n\\t\\t\\t\\tthis.openBanner(view as UiKit.BannerView);\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 'contextual_bar':\\n\\t\\t\\t\\tthis.openContextualBar(view as UiKit.ContextualBarView);\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n\\tprivate openModal(view: UiKit.ModalView) {\\n\\t\\tconst instance = imperativeModal.open({\\n\\t\\t\\tcomponent: UiKitModal,\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\tkey: view.id,\\n\\t\\t\\t\\tinitialView: view,\\n\\t\\t\\t},\\n\\t\\t});\\n\\n\\t\\tthis.viewInstances.set(view.id, {\\n\\t\\t\\tclose: () => {\\n\\t\\t\\t\\tinstance.close();\\n\\t\\t\\t\\tthis.viewInstances.delete(view.id);\\n\\t\\t\\t},\\n\\t\\t});\\n\\t}\\n\\n\\tprivate openBanner(view: UiKit.BannerView) {\\n\\t\\tbanners.open(view);\\n\\t\\tthis.viewInstances.set(view.viewId, {\\n\\t\\t\\tclose: () => {\\n\\t\\t\\t\\tbanners.closeById(view.viewId);\\n\\t\\t\\t},\\n\\t\\t});\\n\\t}\\n\\n\\tprivate openContextualBar(view: UiKit.ContextualBarView) {\\n\\t\\tthis.viewInstances.set(view.id, {\\n\\t\\t\\tpayload: {\\n\\t\\t\\t\\tview,\\n\\t\\t\\t},\\n\\t\\t\\tclose: () => {\\n\\t\\t\\t\\tthis.viewInstances.delete(view.id);\\n\\t\\t\\t},\\n\\t\\t});\\n\\n\\t\\tconst routeName = this.router.getRouteName();\\n\\t\\tconst routeParams = this.router.getRouteParameters();\\n\\n\\t\\tif (!routeName) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.router.navigate({\\n\\t\\t\\tname: routeName,\\n\\t\\t\\tparams: {\\n\\t\\t\\t\\t...routeParams,\\n\\t\\t\\t\\ttab: 'app',\\n\\t\\t\\t\\tcontext: view.id,\\n\\t\\t\\t},\\n\\t\\t});\\n\\t}\\n\\n\\tpublic disposeView(viewId: UiKit.ModalView['id'] | UiKit.BannerView['viewId'] | UiKit.ContextualBarView['id']) {\\n\\t\\tconst instance = this.viewInstances.get(viewId);\\n\\t\\tinstance?.close?.();\\n\\t\\tthis.viewInstances.delete(viewId);\\n\\t}\\n}\\n\",null],\"names\":[\"_objectWithoutProperties\",\"_objectSpread\",\"Emitter\",\"Random\",\"t\",\"lazy\",\"banners\",\"imperativeModal\",\"dispatchToastMessage\",\"exhaustiveCheck\",\"sdk\",\"UiKitTriggerTimeoutError\",\"module\",\"link\",\"default\",\"v\",\"export\",\"ActionManager\",\"UiKitModal\",\"dynamicImport\",\"constructor\",\"router\",\"events\",\"appIdByTriggerId\",\"Map\",\"viewInstances\",\"invalidateTriggerId\",\"id\",\"appId\",\"get\",\"delete\",\"on\",\"eventName\",\"listener\",\"off\",\"notifyBusy\",\"emit\",\"busy\",\"notifyIdle\",\"generateTriggerId\",\"triggerId\",\"set\",\"setTimeout\",\"TRIGGER_TIMEOUT\",\"emitInteraction\",\"userInteraction\",\"runWithTimeout\",\"interaction\",\"rest\",\"post\",\"concat\",\"handleServerInteraction\",\"type\",\"includes\",\"disposeView\",\"viewId\",\"payload\",\"task\",\"details\",\"timer\",\"taskPromise\",\"timeoutPromise\",\"Promise\",\"_\",\"reject\",\"race\",\"error\",\"message\",\"clearTimeout\",\"errors\",\"view\",\"openModal\",\"_excluded\",\"openBanner\",\"openContextualBar\",\"getInteractionPayloadByViewId\",\"_this$viewInstances$g\",\"Error\",\"openView\",\"surface\",\"instance\",\"open\",\"component\",\"props\",\"key\",\"initialView\",\"close\",\"closeById\",\"routeName\",\"getRouteName\",\"routeParams\",\"getRouteParameters\",\"navigate\",\"name\",\"params\",\"tab\",\"context\",\"_instance$close\",\"call\",\"TRIGGER_TIMEOUT_ERROR\"],\"mappings\":\"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\"}"}