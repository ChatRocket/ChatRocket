{"code":"function module(e,n,r){r.export({useMemberExists:function(){return u}}),r.link(\"@rocket.chat/ui-contexts\",{useEndpoint:function(e){o=e}},0),r.link(\"@tanstack/react-query\",{useQuery:function(e){t=e}},1);var o,t,u=function(e){var n=e.roomId,r=e.username,u=o(\"GET\",\"/v1/rooms.isMember\");return t([\"rooms/isMember\",n,r],function(){return u({roomId:n,username:r})})}}","map":"{\"version\":3,\"sources\":[\"client/views/hooks/useMemberExists.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useQuery } from '@tanstack/react-query';\\n\\ntype UseMemberExistsProps = { roomId: string; username: string };\\n\\nexport const useMemberExists = ({ roomId, username }: UseMemberExistsProps) => {\\n\\tconst checkMember = useEndpoint('GET', '/v1/rooms.isMember');\\n\\n\\treturn useQuery(['rooms/isMember', roomId, username], () => checkMember({ roomId, username }));\\n};\\n\",null],\"names\":[\"module\",\"export\",\"useMemberExists\",\"link\",\"useEndpoint\",\"v\",\"useQuery\",\"_ref\",\"roomId\",\"username\",\"checkMember\"],\"mappings\":\"uBAAAA,EAAOC,MAAE,CAAA,CAAAC,gBAAmB,WAAA,OAAAA,CAA2B,CAAA,GAAAF,EAAAG,IAAA,CAAA,2BAAA,CAAAC,YAAA,SAAAC,CAAA,EAAAD,EAAAC,CAAA,CAAA,EAAA,GAAAL,EAAAG,IAAA,CAAA,wBAAA,CAAAG,SAAA,SAAAD,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAKhD,IALgDD,EAAAE,EAK1CJ,EAAkB,SAAAK,CAAA,EAA+C,IAA5CC,EAAMD,EAANC,MAAM,CAAEC,EAAQF,EAARE,QAAQ,CAC3CC,EAAcN,EAAY,MAAO,sBAEvC,OAAOE,EAAS,CAAC,iBAAkBE,EAAQC,EAAS,CAAE,WAAA,OAAMC,EAAY,CAAEF,OAAAA,EAAQC,SAAAA,CAAQ,EAAG,EAC9F\"}"}