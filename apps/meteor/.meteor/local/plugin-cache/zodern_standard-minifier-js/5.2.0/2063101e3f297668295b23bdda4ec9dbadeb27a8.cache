{"code":"function module(e,t,l){let n,u,o,a;l.link(\"@rocket.chat/ui-contexts\",{usePermission(e){n=e}},0),l.link(\"react\",{default(e){u=e}},1),l.link(\"../../../notAuthorized/NotAuthorizedPage\",{default(e){o=e}},2),l.link(\"./CallTable\",{default(e){a=e}},3),l.exportDefault(()=>{let e=n(\"view-l-room\");return e?u.createElement(a,null):u.createElement(o,null)})}","map":"{\"version\":3,\"sources\":[\"client/views/omnichannel/directory/calls/CallTab.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { usePermission } from '@rocket.chat/ui-contexts';\\nimport type { ReactElement } from 'react';\\nimport React from 'react';\\n\\nimport NotAuthorizedPage from '../../../notAuthorized/NotAuthorizedPage';\\nimport CallTable from './CallTable';\\n\\n// TODO Check if I need to type the setstateaction params, if I should do:\\n// { setCallReload: Dispatch<SetStateAction<(param: () => void) => void>> }\\nconst CallTab = (): ReactElement => {\\n\\tconst hasAccess = usePermission('view-l-room');\\n\\n\\tif (hasAccess) {\\n\\t\\treturn <CallTable />;\\n\\t}\\n\\n\\treturn <NotAuthorizedPage />;\\n};\\n\\nexport default CallTab;\\n\",null],\"names\":[\"usePermission\",\"React\",\"NotAuthorizedPage\",\"CallTable\",\"module\",\"link\",\"v\",\"default\",\"exportDefault\",\"CallTab\",\"hasAccess\",\"createElement\"],\"mappings\":\"2BAAAA,EAAyDC,EAAAC,EAAAC,EAAhDC,EAAeC,IAAA,CAAM,2BAA2B,CAAAL,cAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,2CAAA,CAAAE,QAAAD,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,cAAA,CAAAE,QAAAD,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAAzDF,EAAOI,aAAE,CASOC,KACf,IAAMC,EAAYV,EAAc,sBAEhC,AAAIU,EACIT,EAAAU,aAAA,CAACR,EAAS,MAGXF,EAAAU,aAAA,CAACT,EAAiB,KAC1B\"}"}