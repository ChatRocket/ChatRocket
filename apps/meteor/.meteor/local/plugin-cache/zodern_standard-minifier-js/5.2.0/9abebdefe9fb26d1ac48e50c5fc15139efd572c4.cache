{"code":"function module(e,r,t){let n,u,c;t.export({useReconnectCountdown:()=>a}),t.link(\"react\",{useEffect(e){n=e},useRef(e){u=e},useState(e){c=e}},0);let l=e=>{let r=e-Date.now();return r>0&&Math.round(r/1e3)||0},a=(e,r)=>{let t=u(),[a,o]=c(()=>e?l(e):0);return n(()=>{if(\"waiting\"===r){if(t.current)return;t.current=setInterval(()=>{e&&o(l(e))},500);return}t.current&&clearInterval(t.current),t.current=void 0},[e,r]),n(()=>()=>{t.current&&clearInterval(t.current)},[]),a}}","map":"{\"version\":3,\"sources\":[\"client/components/connectionStatus/useReconnectCountdown.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useEffect, useRef, useState } from 'react';\\n\\nconst getReconnectCountdown = (retryTime: number): number => {\\n\\tconst timeDiff = retryTime - Date.now();\\n\\treturn (timeDiff > 0 && Math.round(timeDiff / 1000)) || 0;\\n};\\n\\nexport const useReconnectCountdown = (\\n\\tretryTime: number | undefined,\\n\\tstatus: 'connected' | 'connecting' | 'failed' | 'waiting' | 'offline',\\n): number => {\\n\\tconst reconnectionTimerRef = useRef<ReturnType<typeof setInterval>>();\\n\\tconst [reconnectCountdown, setReconnectCountdown] = useState(() => (retryTime ? getReconnectCountdown(retryTime) : 0));\\n\\n\\tuseEffect(() => {\\n\\t\\tif (status === 'waiting') {\\n\\t\\t\\tif (reconnectionTimerRef.current) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\treconnectionTimerRef.current = setInterval(() => {\\n\\t\\t\\t\\tretryTime && setReconnectCountdown(getReconnectCountdown(retryTime));\\n\\t\\t\\t}, 500);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\treconnectionTimerRef.current && clearInterval(reconnectionTimerRef.current);\\n\\t\\treconnectionTimerRef.current = undefined;\\n\\t}, [retryTime, status]);\\n\\n\\tuseEffect(\\n\\t\\t() => (): void => {\\n\\t\\t\\treconnectionTimerRef.current && clearInterval(reconnectionTimerRef.current);\\n\\t\\t},\\n\\t\\t[],\\n\\t);\\n\\n\\treturn reconnectCountdown;\\n};\\n\",null],\"names\":[\"useEffect\",\"useRef\",\"useState\",\"module\",\"export\",\"useReconnectCountdown\",\"link\",\"v\",\"getReconnectCountdown\",\"retryTime\",\"timeDiff\",\"Date\",\"now\",\"Math\",\"round\",\"status\",\"reconnectionTimerRef\",\"reconnectCountdown\",\"setReconnectCountdown\",\"current\",\"setInterval\",\"clearInterval\",\"undefined\"],\"mappings\":\"2BAAoDA,EAAAC,EAAAC,EAApDC,EAAOC,MAAE,CAAA,CAAAC,sBAA2BA,IAAEA,CAAc,GAAAF,EAAAG,IAAA,CAAA,QAAA,CAAAN,UAAAO,CAAA,EAAAP,EAAAO,CAAA,EAAAN,OAAAM,CAAA,EAAAN,EAAAM,CAAA,EAAAL,SAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAEpD,IAAMC,EAAyBC,IAC9B,IAAMC,EAAWD,EAAYE,KAAKC,GAAG,GACrC,OAAQF,EAAW,GAAKG,KAAKC,KAAK,CAACJ,EAAW,MAAU,CACzD,EAEaL,EAAwBA,CACpCI,EACAM,KAEA,IAAMC,EAAuBf,IACvB,CAACgB,EAAoBC,EAAsB,CAAGhB,EAAS,IAAOO,EAAYD,EAAsBC,GAAa,GAyBnH,OAvBAT,EAAU,KACT,GAAIe,AAAW,YAAXA,EAAsB,CACzB,GAAIC,EAAqBG,OAAO,CAC/B,MAGDH,CAAAA,EAAqBG,OAAO,CAAGC,YAAY,KAC1CX,GAAaS,EAAsBV,EAAsBC,GAC1D,EAAG,KACH,MACD,CAEAO,EAAqBG,OAAO,EAAIE,cAAcL,EAAqBG,OAAO,EAC1EH,EAAqBG,OAAO,CAAGG,KAAAA,CAChC,EAAG,CAACb,EAAWM,EAAO,EAEtBf,EACC,IAAM,KACLgB,EAAqBG,OAAO,EAAIE,cAAcL,EAAqBG,OAAO,CAC3E,EACA,EAAE,EAGIF,CACR\"}"}