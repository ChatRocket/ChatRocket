{"code":"function module(e,n,r){r.link(\"@babel/runtime/regenerator\",{default:function(e){o=e}},0),r.export({useMuteUserAction:function(){return g}}),r.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback:function(e){t=e}},0),r.link(\"@rocket.chat/string-helpers\",{escapeHTML:function(e){u=e}},1),r.link(\"@rocket.chat/ui-contexts\",{useAllPermissions:function(e){i=e},usePermission:function(e){s=e},useSetModal:function(e){a=e},useToastMessageDispatch:function(e){c=e},useTranslation:function(e){m=e},useUserRoom:function(e){l=e},useUserSubscription:function(e){f=e},useEndpoint:function(e){d=e}},2),r.link(\"react\",{default:function(e){_=e},useMemo:function(e){p=e}},3),r.link(\"../../../../../components/GenericModal\",{default:function(e){v=e}},4),r.link(\"../../../../../lib/rooms/roomCoordinator\",{roomCoordinator:function(e){k=e}},5),r.link(\"../../../lib/getRoomDirectives\",{getRoomDirectives:function(e){h=e}},6);var o,t,u,i,s,a,c,m,l,f,d,_,p,v,k,h,b=function(e,n,r){var o,t,u;return null!=n&&n.ro?(!Array.isArray(n.unmuted)||-1===n.unmuted.indexOf(null!==(t=e.username)&&void 0!==t?t:\"\"))&&(!r||Array.isArray(n.muted)&&-1!==n.muted.indexOf(null!==(u=e.username)&&void 0!==u?u:\"\")):n&&Array.isArray(n.muted)&&n.muted.indexOf(null!==(o=e.username)&&void 0!==o?o:\"\")>-1},g=function(e,n){var r=m(),g=l(n),y=s(\"mute-user\",n),U=c(),x=a(),M=t(function(){return x(null)}),A=i(p(function(){return[\"post-readonly\"]},[]),n),C=f(n),w=b(e,g,A),T=(null==g?void 0:g.t)&&u(k.getRoomName(g.t,g));if(!g)throw Error(\"Room not provided\");var R=h({room:g,showingUserId:e._id,userSubscription:C}).roomCanMute,E=w?\"User__username__unmuted_in_room__roomName__\":\"User__username__muted_in_room__roomName__\",N=d(\"POST\",w?\"/v1/rooms.unmuteUser\":\"/v1/rooms.muteUser\");return p(function(){return R&&y?{content:r(w?\"Unmute_user\":\"Mute_user\"),icon:w?\"mic\":\"mic-off\",onClick:function(){var t=function(){return o.async(function(t){for(;;)switch(t.prev=t.next){case 0:if(t.prev=0,e.username){t.next=3;break}throw Error(\"User without username\");case 3:return t.next=5,o.awrap(N({roomId:n,username:e.username}));case 5:return t.abrupt(\"return\",U({type:\"success\",message:r(E,{username:e.username,roomName:T})}));case 8:t.prev=8,t.t0=t.catch(0),U({type:\"error\",message:t.t0});case 11:return t.prev=11,M(),t.finish(11);case 14:case\"end\":return t.stop()}},null,null,[[0,8,11,14]],Promise)};return w?t():x(_.createElement(v,{variant:\"danger\",confirmText:r(\"Yes_mute_user\"),onClose:M,onCancel:M,onConfirm:t},r(\"The_user_wont_be_able_to_type_in_s\",T)))},type:\"management\"}:void 0},[M,E,U,w,N,n,R,T,x,r,e.username,y])}}","map":"{\"version\":3,\"sources\":[\"client/views/room/hooks/useUserInfoActions/actions/useMuteUserAction.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, IUser } from '@rocket.chat/core-typings';\\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport { escapeHTML } from '@rocket.chat/string-helpers';\\nimport {\\n\\tuseAllPermissions,\\n\\tusePermission,\\n\\tuseSetModal,\\n\\tuseToastMessageDispatch,\\n\\tuseTranslation,\\n\\tuseUserRoom,\\n\\tuseUserSubscription,\\n\\tuseEndpoint,\\n} from '@rocket.chat/ui-contexts';\\nimport React, { useMemo } from 'react';\\n\\nimport GenericModal from '../../../../../components/GenericModal';\\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\\nimport type { UserInfoAction, UserInfoActionType } from '../useUserInfoActions';\\n\\nconst getUserIsMuted = (\\n\\tuser: Pick<IUser, '_id' | 'username'>,\\n\\troom: IRoom | undefined,\\n\\tuserCanPostReadonly: boolean,\\n): boolean | undefined => {\\n\\tif (room?.ro) {\\n\\t\\tif (Array.isArray(room.unmuted) && room.unmuted.indexOf(user.username ?? '') !== -1) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tif (userCanPostReadonly) {\\n\\t\\t\\treturn Array.isArray(room.muted) && room.muted.indexOf(user.username ?? '') !== -1;\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\treturn room && Array.isArray(room.muted) && room.muted.indexOf(user.username ?? '') > -1;\\n};\\n\\nexport const useMuteUserAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\\n\\tconst t = useTranslation();\\n\\tconst room = useUserRoom(rid);\\n\\tconst userCanMute = usePermission('mute-user', rid);\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst setModal = useSetModal();\\n\\tconst closeModal = useMutableCallback(() => setModal(null));\\n\\tconst otherUserCanPostReadonly = useAllPermissions(\\n\\t\\tuseMemo(() => ['post-readonly'], []),\\n\\t\\trid,\\n\\t);\\n\\tconst userSubscription = useUserSubscription(rid);\\n\\n\\tconst isMuted = getUserIsMuted(user, room, otherUserCanPostReadonly);\\n\\tconst roomName = room?.t && escapeHTML(roomCoordinator.getRoomName(room.t, room));\\n\\n\\tif (!room) {\\n\\t\\tthrow Error('Room not provided');\\n\\t}\\n\\n\\tconst { roomCanMute } = getRoomDirectives({ room, showingUserId: user._id, userSubscription });\\n\\n\\tconst mutedMessage = isMuted ? 'User__username__unmuted_in_room__roomName__' : 'User__username__muted_in_room__roomName__';\\n\\n\\tconst muteUser = useEndpoint('POST', isMuted ? '/v1/rooms.unmuteUser' : '/v1/rooms.muteUser');\\n\\n\\tconst muteUserOption = useMemo(() => {\\n\\t\\tconst action = (): Promise<void> | void => {\\n\\t\\t\\tconst onConfirm = async (): Promise<void> => {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tif (!user.username) {\\n\\t\\t\\t\\t\\t\\tthrow new Error('User without username');\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tawait muteUser({ roomId: rid, username: user.username });\\n\\n\\t\\t\\t\\t\\treturn dispatchToastMessage({\\n\\t\\t\\t\\t\\t\\ttype: 'success',\\n\\t\\t\\t\\t\\t\\tmessage: t(mutedMessage, {\\n\\t\\t\\t\\t\\t\\t\\tusername: user.username,\\n\\t\\t\\t\\t\\t\\t\\troomName,\\n\\t\\t\\t\\t\\t\\t}),\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t} catch (error: unknown) {\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t\\t} finally {\\n\\t\\t\\t\\t\\tcloseModal();\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\t\\tif (isMuted) {\\n\\t\\t\\t\\treturn onConfirm();\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn setModal(\\n\\t\\t\\t\\t<GenericModal variant='danger' confirmText={t('Yes_mute_user')} onClose={closeModal} onCancel={closeModal} onConfirm={onConfirm}>\\n\\t\\t\\t\\t\\t{t('The_user_wont_be_able_to_type_in_s', roomName)}\\n\\t\\t\\t\\t</GenericModal>,\\n\\t\\t\\t);\\n\\t\\t};\\n\\n\\t\\treturn roomCanMute && userCanMute\\n\\t\\t\\t? {\\n\\t\\t\\t\\t\\tcontent: t(isMuted ? 'Unmute_user' : 'Mute_user'),\\n\\t\\t\\t\\t\\ticon: isMuted ? ('mic' as const) : ('mic-off' as const),\\n\\t\\t\\t\\t\\tonClick: action,\\n\\t\\t\\t\\t\\ttype: 'management' as UserInfoActionType,\\n\\t\\t\\t  }\\n\\t\\t\\t: undefined;\\n\\t}, [\\n\\t\\tcloseModal,\\n\\t\\tmutedMessage,\\n\\t\\tdispatchToastMessage,\\n\\t\\tisMuted,\\n\\t\\tmuteUser,\\n\\t\\trid,\\n\\t\\troomCanMute,\\n\\t\\troomName,\\n\\t\\tsetModal,\\n\\t\\tt,\\n\\t\\tuser.username,\\n\\t\\tuserCanMute,\\n\\t]);\\n\\n\\treturn muteUserOption;\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"export\",\"useMuteUserAction\",\"useMutableCallback\",\"escapeHTML\",\"useAllPermissions\",\"usePermission\",\"useSetModal\",\"useToastMessageDispatch\",\"useTranslation\",\"useUserRoom\",\"useUserSubscription\",\"useEndpoint\",\"React\",\"useMemo\",\"GenericModal\",\"roomCoordinator\",\"getRoomDirectives\",\"getUserIsMuted\",\"user\",\"room\",\"userCanPostReadonly\",\"_user$username3\",\"_user$username\",\"_user$username2\",\"ro\",\"Array\",\"isArray\",\"unmuted\",\"indexOf\",\"username\",\"muted\",\"rid\",\"t\",\"userCanMute\",\"dispatchToastMessage\",\"setModal\",\"closeModal\",\"otherUserCanPostReadonly\",\"userSubscription\",\"isMuted\",\"roomName\",\"getRoomName\",\"Error\",\"roomCanMute\",\"_getRoomDirectives\",\"showingUserId\",\"_id\",\"mutedMessage\",\"muteUser\",\"content\",\"icon\",\"onClick\",\"onConfirm\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"roomId\",\"abrupt\",\"type\",\"message\",\"t0\",\"finish\",\"stop\",\"Promise\",\"createElement\",\"variant\",\"confirmText\",\"onClose\",\"onCancel\",\"undefined\"],\"mappings\":\"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\"}"}