{"code":"function module(e,t,n){var a,s,r,o,i,u,c,l,f,m;n.link(\"@babel/runtime/regenerator\",{default:function(e){a=e}},0),n.link(\"@babel/runtime/helpers/toConsumableArray\",{default:function(e){s=e}},1),n.link(\"@rocket.chat/ui-contexts\",{useEndpoint:function(e){r=e}},0),n.link(\"@tanstack/react-query\",{useQuery:function(e){o=e}},1),n.link(\"react\",{default:function(e){i=e}},2),n.link(\"react-i18next\",{useTranslation:function(e){u=e}},3),n.link(\"../../../lib/onClientMessageReceived\",{onClientMessageReceived:function(e){c=e}},4),n.link(\"../../../lib/utils/mapMessageFromApi\",{mapMessageFromApi:function(e){l=e}},5),n.link(\"../contexts/RoomContext\",{useRoom:function(e){f=e}},6),n.link(\"./MessageListTab\",{default:function(e){m=e}},7),n.exportDefault(function(){var e=r(\"GET\",\"/v1/chat.getStarredMessages\"),t=f(),n=o([\"rooms\",t._id,\"starred-messages\"],function(){var n,r,o;return a.async(function(i){for(;;)switch(i.prev=i.next){case 0:return n=[],r=0,i.next=4,a.awrap(e({roomId:t._id,offset:0}));case 4:o=i.sent;case 5:if(!(o.count>0)){i.next=13;break}n.push.apply(n,s(o.messages.map(l)));case 7:return r+=o.count,i.next=10,a.awrap(e({roomId:t._id,offset:r}));case 10:o=i.sent,i.next=5;break;case 13:return i.abrupt(\"return\",Promise.all(n.map(c)));case 14:case\"end\":return i.stop()}},null,null,null,Promise)}),d=u().t;return i.createElement(m,{iconName:\"star\",title:d(\"Starred_Messages\"),emptyResultMessage:d(\"No_starred_messages\"),context:\"starred\",queryResult:n})})}","map":"{\"version\":3,\"sources\":[\"client/views/room/contextualBar/StarredMessagesTab.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage } from '@rocket.chat/core-typings';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useQuery } from '@tanstack/react-query';\\nimport React from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport { onClientMessageReceived } from '../../../lib/onClientMessageReceived';\\nimport { mapMessageFromApi } from '../../../lib/utils/mapMessageFromApi';\\nimport { useRoom } from '../contexts/RoomContext';\\nimport MessageListTab from './MessageListTab';\\n\\nconst StarredMessagesTab = () => {\\n\\tconst getStarredMessages = useEndpoint('GET', '/v1/chat.getStarredMessages');\\n\\n\\tconst room = useRoom();\\n\\n\\tconst starredMessagesQueryResult = useQuery(['rooms', room._id, 'starred-messages'] as const, async () => {\\n\\t\\tconst messages: IMessage[] = [];\\n\\n\\t\\tfor (\\n\\t\\t\\tlet offset = 0, result = await getStarredMessages({ roomId: room._id, offset: 0 });\\n\\t\\t\\tresult.count > 0;\\n\\t\\t\\t// eslint-disable-next-line no-await-in-loop\\n\\t\\t\\toffset += result.count, result = await getStarredMessages({ roomId: room._id, offset })\\n\\t\\t) {\\n\\t\\t\\tmessages.push(...result.messages.map(mapMessageFromApi));\\n\\t\\t}\\n\\n\\t\\treturn Promise.all(messages.map(onClientMessageReceived));\\n\\t});\\n\\n\\tconst { t } = useTranslation();\\n\\n\\treturn (\\n\\t\\t<MessageListTab\\n\\t\\t\\ticonName='star'\\n\\t\\t\\ttitle={t('Starred_Messages')}\\n\\t\\t\\temptyResultMessage={t('No_starred_messages')}\\n\\t\\t\\tcontext='starred'\\n\\t\\t\\tqueryResult={starredMessagesQueryResult}\\n\\t\\t/>\\n\\t);\\n};\\n\\nexport default StarredMessagesTab;\\n\",null],\"names\":[\"_regeneratorRuntime\",\"_toConsumableArray\",\"useEndpoint\",\"useQuery\",\"React\",\"useTranslation\",\"onClientMessageReceived\",\"mapMessageFromApi\",\"useRoom\",\"MessageListTab\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"getStarredMessages\",\"room\",\"starredMessagesQueryResult\",\"_id\",\"messages\",\"offset\",\"result\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"roomId\",\"sent\",\"count\",\"push\",\"apply\",\"map\",\"abrupt\",\"Promise\",\"all\",\"stop\",\"t\",\"_useTranslation\",\"createElement\",\"iconName\",\"title\",\"emptyResultMessage\",\"context\",\"queryResult\"],\"mappings\":\"uBAWA,IAVAA,EAAuDC,EAAvDC,EAAuDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAjCC,EAAMC,IAAA,CAAA,6BAA2B,CAAAC,QAAA,SAAAC,CAAA,EAAAb,EAAAa,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2CAAA,CAAAC,QAAA,SAAAC,CAAA,EAAAZ,EAAAY,CAAA,CAAA,EAAA,GAA9CH,EAAaC,IAAA,CAAM,2BAA2B,CAAAT,YAAA,SAAAW,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wBAAA,CAAAR,SAAA,SAAAU,CAAA,EAAAV,EAAAU,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAA,QAAA,SAAAE,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,gBAAA,CAAAN,eAAA,SAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uCAAA,CAAAL,wBAAA,SAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uCAAA,CAAAJ,kBAAA,SAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,0BAAA,CAAAH,QAAA,SAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,mBAAA,CAAA,QAAA,SAAAE,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAvDH,EAAOI,aAAa,CAUO,WAC1B,IAAMC,EAAqBb,EAAY,MAAO,+BAExCc,EAAOR,IAEPS,EAA6Bd,EAAS,CAAC,QAASa,EAAKE,GAAG,CAAE,mBAA4B,CAAE,WAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAArB,EAAAsB,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAI9E,OAHTN,EAAuB,EAAE,CAG1BC,EAAS,EAACG,EAAAE,IAAA,CAAA,EAAAzB,EAAA0B,KAAA,CAAiBX,EAAmB,CAAEY,OAAQX,EAAKE,GAAG,CAAEE,OAAQ,CAAC,GAAG,MAAA,EAAlEC,EAAME,EAAAK,IAAA,MAAA,EAAA,GAAA,CACtBP,CAAAA,EAAOQ,KAAK,CAAG,CAAA,EAAC,CAAAN,EAAAE,IAAA,CAAA,GAAA,KAAA,CAIhBN,EAASW,IAAI,CAAAC,KAAA,CAAbZ,EAAQlB,EAASoB,EAAOF,QAAQ,CAACa,GAAG,CAACzB,IAAoB,MAAA,EAFnC,OAAtBa,GAAUC,EAAOQ,KAAK,CAAAN,EAAAE,IAAA,CAAA,GAAAzB,EAAA0B,KAAA,CAAiBX,EAAmB,CAAEY,OAAQX,EAAKE,GAAG,CAAEE,OAAAA,CAAM,GAAG,MAAA,GAA/DC,EAAME,EAAAK,IAAA,CAAAL,EAAAE,IAAA,CAAA,EAAA,KAAA,MAAA,GAAA,OAAAF,EAAAU,MAAA,CAAA,SAKxBC,QAAQC,GAAG,CAAChB,EAASa,GAAG,CAAC1B,IAAyB,MAAA,GAAA,IAAA,MAAA,OAAAiB,EAAAa,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAF,QAAA,GAGlDG,EAACC,AAAKjC,IAANgC,CAAC,CAET,OACCjC,EAAAmC,aAAA,CAAC9B,EAAc,CACd+B,SAAS,OACTC,MAAOJ,EAAE,oBACTK,mBAAoBL,EAAE,uBACtBM,QAAQ,UACRC,YAAa3B,CAA2B,EAG3C\"}"}