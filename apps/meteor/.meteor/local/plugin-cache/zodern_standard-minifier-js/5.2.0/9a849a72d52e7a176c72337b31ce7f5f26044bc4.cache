{"code":"Package[\"core-runtime\"].queue(\"retry\",function(){var e,t=Package.meteor.Meteor;Package.meteor.global,Package.meteor.meteorEnv;var r=Package.random.Random,i=Package.modules.meteorInstall;return Package.modules.meteorBabelHelpers,Package.promise.Promise,Package[\"ecmascript-runtime-client\"].Symbol,Package[\"ecmascript-runtime-client\"].Map,Package[\"ecmascript-runtime-client\"].Set,{export:function(){return{Retry:e}},require:i({node_modules:{meteor:{retry:{\"retry.js\":function e(e,i,o){o.export({Retry:function(){return n}});var n=function(){function e(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.baseTimeout,r=e.exponent,i=e.maxTimeout,o=e.minTimeout,n=e.minCount,m=e.fuzz;this.baseTimeout=void 0===t?1e3:t,this.exponent=void 0===r?2.2:r,this.maxTimeout=void 0===i?3e5:i,this.minTimeout=void 0===o?10:o,this.minCount=void 0===n?2:n,this.fuzz=void 0===m?.5:m,this.retryTimer=null}var i=e.prototype;return i.clear=function(){this.retryTimer&&clearTimeout(this.retryTimer),this.retryTimer=null},i._timeout=function(e){return e<this.minCount?this.minTimeout:Math.min(this.maxTimeout,this.baseTimeout*Math.pow(this.exponent,e))*(r.fraction()*this.fuzz+(1-this.fuzz/2))},i.retryLater=function(e,r){var i=this._timeout(e);return this.retryTimer&&clearTimeout(this.retryTimer),this.retryTimer=t.setTimeout(r,i),i},e}()}}}}},{extensions:[\".js\",\".json\"]}),eagerModulePaths:[\"/node_modules/meteor/retry/retry.js\"],mainModulePath:\"/node_modules/meteor/retry/retry.js\"}});","map":"{\"version\":3,\"sources\":[\"packages/retry/retry.js\",\"<anon>\"],\"sourcesContent\":[\"// Retry logic with an exponential backoff.\\n//\\n// options:\\n//  baseTimeout: time for initial reconnect attempt (ms).\\n//  exponent: exponential factor to increase timeout each attempt.\\n//  maxTimeout: maximum time between retries (ms).\\n//  minCount: how many times to reconnect \\\"instantly\\\".\\n//  minTimeout: time to wait for the first `minCount` retries (ms).\\n//  fuzz: factor to randomize retry times by (to avoid retry storms).\\n\\nexport class Retry {\\n  constructor({\\n    baseTimeout = 1000,\\n    exponent = 2.2,\\n    // The default is high-ish to ensure a server can recover from a\\n    // failure caused by load.\\n    maxTimeout = 5 * 60 * 1000,\\n    minTimeout = 10,\\n    minCount = 2,\\n    fuzz = 0.5,\\n  } = {}) {\\n    this.baseTimeout = baseTimeout;\\n    this.exponent = exponent;\\n    this.maxTimeout = maxTimeout;\\n    this.minTimeout = minTimeout;\\n    this.minCount = minCount;\\n    this.fuzz = fuzz;\\n    this.retryTimer = null;\\n  }\\n\\n  // Reset a pending retry, if any.\\n  clear() {\\n    if (this.retryTimer) {\\n      clearTimeout(this.retryTimer);\\n    }\\n    this.retryTimer = null;\\n  }\\n\\n  // Calculate how long to wait in milliseconds to retry, based on the\\n  // `count` of which retry this is.\\n  _timeout(count) {\\n    if (count < this.minCount) {\\n      return this.minTimeout;\\n    }\\n\\n    // fuzz the timeout randomly, to avoid reconnect storms when a\\n    // server goes down.\\n    var timeout = Math.min(\\n      this.maxTimeout,\\n      this.baseTimeout * Math.pow(this.exponent, count)\\n    ) * (\\n      Random.fraction() * this.fuzz + (1 - this.fuzz / 2)\\n    );\\n\\n    return timeout;\\n  }\\n\\n  // Call `fn` after a delay, based on the `count` of which retry this is.\\n  retryLater(count, fn) {\\n    var timeout = this._timeout(count);\\n    if (this.retryTimer)\\n      clearTimeout(this.retryTimer);\\n    this.retryTimer = Meteor.setTimeout(fn, timeout);\\n    return timeout;\\n  }\\n}\\n\",null],\"names\":[\"module\",\"export\",\"Retry\",\"_ref\",\"arguments\",\"length\",\"undefined\",\"_ref$baseTimeout\",\"baseTimeout\",\"_ref$exponent\",\"exponent\",\"_ref$maxTimeout\",\"maxTimeout\",\"_ref$minTimeout\",\"minTimeout\",\"_ref$minCount\",\"minCount\",\"_ref$fuzz\",\"fuzz\",\"retryTimer\",\"_proto\",\"prototype\",\"clear\",\"clearTimeout\",\"_timeout\",\"count\",\"Math\",\"min\",\"pow\",\"Random\",\"fraction\",\"retryLater\",\"fn\",\"timeout\",\"Meteor\",\"setTimeout\"],\"mappings\":\"meAAAA,EAAOC,MAAM,CAAC,CAACC,MAAM,WAAW,OAAOA,CAAK,CAAC,GAAG,IAUnCA,EAAK,WAChB,SAAAA,IASQ,IAAAC,EAAAC,UAAAC,MAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,CAAAA,SAAA,CAAA,EAAA,CAAJ,CAAC,EAACG,EAAAJ,EARJK,WAAW,CAAOC,EAAAN,EAClBO,QAAQ,CAAMC,EAAAR,EAGdS,UAAU,CAAgBC,EAAAV,EAC1BW,UAAU,CAAKC,EAAAZ,EACfa,QAAQ,CAAIC,EAAAd,EACZe,IAAI,AAEJ,CAAA,IAAI,CAACV,WAAW,CATLD,AAAA,KAAA,IAAAA,EAAG,IAAIA,EAUlB,IAAI,CAACG,QAAQ,CATLD,AAAA,KAAA,IAAAA,EAAG,IAAGA,EAUd,IAAI,CAACG,UAAU,CAPLD,AAAA,KAAA,IAAAA,EAAG,IAAaA,EAQ1B,IAAI,CAACG,UAAU,CAPLD,AAAA,KAAA,IAAAA,EAAG,GAAEA,EAQf,IAAI,CAACG,QAAQ,CAPLD,AAAA,KAAA,IAAAA,EAAG,EAACA,EAQZ,IAAI,CAACG,IAAI,CAPLD,AAAA,KAAA,IAAAA,EAAG,GAAGA,EAQV,IAAI,CAACE,UAAU,CAAG,IACpB,CAEA,IAAAC,EAAAlB,EAAAmB,SAAA,CAkCC,OAlCDD,EACAE,KAAK,CAAL,WACM,IAAI,CAACH,UAAU,EACjBI,aAAa,IAAI,CAACJ,UAAU,EAE9B,IAAI,CAACA,UAAU,CAAG,IACpB,EAGAC,EACAI,QAAQ,CAAR,SAASC,CAAK,SACZ,AAAIA,EAAQ,IAAI,CAACT,QAAQ,CAChB,IAAI,CAACF,UAAU,CAKVY,KAAKC,GAAG,CACpB,IAAI,CAACf,UAAU,CACf,IAAI,CAACJ,WAAW,CAAGkB,KAAKE,GAAG,CAAC,IAAI,CAAClB,QAAQ,CAAEe,IAE3CI,CAAAA,EAAOC,QAAQ,GAAK,IAAI,CAACZ,IAAI,CAAI,CAAA,EAAI,IAAI,CAACA,IAAI,CAAG,CAAA,CAAC,CAItD,EAEAE,EACAW,UAAU,CAAV,SAAWN,CAAK,CAAEO,CAAE,EAClB,IAAIC,EAAU,IAAI,CAACT,QAAQ,CAACC,GAI5B,OAHI,IAAI,CAACN,UAAU,EACjBI,aAAa,IAAI,CAACJ,UAAU,EAC9B,IAAI,CAACA,UAAU,CAAGe,EAAOC,UAAU,CAACH,EAAIC,GACjCA,CACT,EAAC/B,CAAA\"}"}