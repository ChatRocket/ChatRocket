{"code":"function module(n,t,e){e.link(\"@babel/runtime/regenerator\",{default:function(n){r=n}},0),e.export({useSendInvitationEmailMutation:function(){return o}}),e.link(\"@rocket.chat/ui-contexts\",{useEndpoint:function(n){u=n},useToastMessageDispatch:function(n){i=n},useTranslation:function(n){a=n}},0),e.link(\"@tanstack/react-query\",{useMutation:function(n){s=n}},1);var r,u,i,a,s,o=function(){var n=a(),t=i(),e=u(\"POST\",\"/v1/sendInvitationEmail\");return s(function(n){var t,u;return r.async(function(i){for(;;)switch(i.prev=i.next){case 0:return t=n.emails,i.next=3,r.awrap(e({emails:t}));case 3:return u=i.sent,i.abrupt(\"return\",u);case 5:case\"end\":return i.stop()}},null,null,null,Promise)},{onSuccess:function(){return t({type:\"success\",message:n(\"Sending_Invitations\")})},onError:function(n){return t({type:\"error\",message:n})}})}}","map":"{\"version\":3,\"sources\":[\"client/views/admin/users/hooks/useSendInvitationEmailMutation.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useEndpoint, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\\nimport type { UseMutationResult } from '@tanstack/react-query';\\nimport { useMutation } from '@tanstack/react-query';\\n\\ntype UseSendInvitationEmailMutationVariables = {\\n\\temails: string[];\\n};\\n\\nexport const useSendInvitationEmailMutation = (): UseMutationResult<\\n\\t{ success: boolean },\\n\\tError,\\n\\tUseSendInvitationEmailMutationVariables\\n> => {\\n\\tconst t = useTranslation();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\n\\tconst sendInvites = useEndpoint('POST', '/v1/sendInvitationEmail');\\n\\n\\treturn useMutation(\\n\\t\\tasync ({ emails }) => {\\n\\t\\t\\tconst result = await sendInvites({ emails });\\n\\t\\t\\treturn result;\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tonSuccess: () => dispatchToastMessage({ type: 'success', message: t('Sending_Invitations') }),\\n\\t\\t\\tonError: (error) => dispatchToastMessage({ type: 'error', message: error }),\\n\\t\\t},\\n\\t);\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"export\",\"useSendInvitationEmailMutation\",\"useEndpoint\",\"useToastMessageDispatch\",\"useTranslation\",\"useMutation\",\"t\",\"dispatchToastMessage\",\"sendInvites\",\"_ref\",\"emails\",\"result\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"sent\",\"abrupt\",\"stop\",\"Promise\",\"onSuccess\",\"type\",\"message\",\"onError\",\"error\"],\"mappings\":\"uBAAsBA,EAAAC,IAAA,CAAA,6BAAyC,CAAAC,QAAM,SAAAC,CAAA,EAAAC,EAA2BD,CAAA,CAAA,EAAA,GAAhGH,EAAOK,MAAE,CAAA,CAAAC,+BAAoC,WAAE,OAAgBA,CAAM,CAA0B,GAACN,EAAAC,IAAA,CAAA,2BAAA,CAAAM,YAAA,SAAAJ,CAAA,EAAAI,EAAAJ,CAAA,EAAAK,wBAAA,SAAAL,CAAA,EAAAK,EAAAL,CAAA,EAAAM,eAAA,SAAAN,CAAA,EAAAM,EAAAN,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wBAAA,CAAAS,YAAA,SAAAP,CAAA,EAAAO,EAAAP,CAAA,CAAA,EAAA,GAQzF,IARPC,EAAgGG,EAAAC,EAAAC,EAAAC,EAQnFJ,EAAiC,WAK7C,IAAMK,EAAIF,IACJG,EAAuBJ,IAEvBK,EAAcN,EAAY,OAAQ,2BAExC,OAAOG,EACN,SAAAI,CAAA,EAAA,IAAAC,EAAAC,EAAA,OAAAZ,EAAAa,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAe,OAANL,EAAMD,EAANC,MAAM,CAAAG,EAAAE,IAAA,CAAA,EAAAhB,EAAAiB,KAAA,CACOR,EAAY,CAAEE,OAAAA,CAAM,GAAG,MAAA,EAAhC,OAANC,EAAME,EAAAI,IAAA,CAAAJ,EAAAK,MAAA,CAAA,SACLP,EAAM,MAAA,EAAA,IAAA,MAAA,OAAAE,EAAAM,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAAA,EAEd,CACCC,UAAW,WAAA,OAAMd,EAAqB,CAAEe,KAAM,UAAWC,QAASjB,EAAE,sBAAsB,EAAG,EAC7FkB,QAAS,SAACC,CAAK,EAAA,OAAKlB,EAAqB,CAAEe,KAAM,QAASC,QAASE,CAAK,EAAG,GAG9E\"}"}