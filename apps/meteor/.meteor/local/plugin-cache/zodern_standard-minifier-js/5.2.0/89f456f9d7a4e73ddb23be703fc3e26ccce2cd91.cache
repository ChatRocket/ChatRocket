{"code":"function module(e,n,t){t.link(\"@babel/runtime/helpers/toConsumableArray\",{default:function(e){o=e}},0),t.link(\"@babel/runtime/regenerator\",{default:function(e){i=e}},1),t.link(\"meteor/meteor\",{Meteor:function(e){u=e}},0),t.link(\"../app/utils/client/lib/SDKClient\",{sdk:function(e){l=e}},1);var r,a,c,s,o,i,u,l,p,d=new Promise(function(e){p=e});i.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(window.ECDH_Enabled){e.next=3;break}return u.connection._stream.allowConnection(),e.abrupt(\"return\",p());case 3:return e.next=5,i.awrap(t.dynamicImport(\"../app/ecdh/client/ClientSession\"));case 5:return r=new e.sent.ClientSession,e.next=10,i.awrap(r.init());case 10:return a=e.sent,e.prev=11,e.next=14,i.awrap(fetch(\"/api/ecdh_proxy/initEncryptedSession\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({clientPublicKey:a})}));case 14:if(!(200!==(c=e.sent).status)){e.next=18;break}return p(),e.abrupt(\"return\",u.connection._stream.allowConnection());case 18:return e.next=20,i.awrap(c.json());case 20:if(!1!==(s=e.sent).success){e.next=24;break}return p(),e.abrupt(\"return\",u.connection._stream.allowConnection());case 24:return e.next=26,i.awrap(r.setServerKey(s.publicKeyString));case 26:p(r),function(e){u.connection._stream.allowConnection();var n=u.connection._stream.socket._didMessage.bind(u.connection._stream.socket),t=u.connection._stream.socket.send.bind(u.connection._stream.socket);u.connection._stream.socket._didMessage=function(t){return i.async(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,i.awrap(e.decrypt(t));case 2:r.sent.split(\"\\n\").forEach(function(e){return n(e)});case 4:case\"end\":return r.stop()}},null,null,null,Promise)},u.connection._stream.socket.send=function(n){return i.async(function(r){for(;;)switch(r.prev=r.next){case 0:return r.t0=t,r.next=3,i.awrap(e.encrypt(n));case 3:r.t1=r.sent,(0,r.t0)(r.t1);case 5:case\"end\":return r.stop()}},null,null,null,Promise)}}(r),e.next=35;break;case 30:e.prev=30,e.t0=e.catch(11),console.log(e.t0),p(),u.connection._stream.allowConnection();case 35:case\"end\":return e.stop()}},null,null,[[11,30]],Promise),l.rest.use(function(e,n){var t,r,a;return i.async(function(c){for(;;)switch(c.prev=c.next){case 0:return c.next=2,i.awrap(d);case 2:if(t=c.sent){c.next=5;break}return c.abrupt(\"return\",n.apply(void 0,o(e)));case 5:return c.t0=i,c.next=8,i.awrap(n.apply(void 0,o(e)));case 8:return c.t1=c.sent.text(),c.next=11,c.t0.awrap.call(c.t0,c.t1);case 11:return r=c.sent,c.next=14,i.awrap(t.decrypt(r));case 14:return a=JSON.parse(c.sent),c.abrupt(\"return\",a);case 17:case\"end\":return c.stop()}},null,null,null,Promise)})}","map":"{\"version\":3,\"sources\":[\"client/ecdh.ts\",\"<anon>\"],\"sourcesContent\":[\"import { Meteor } from 'meteor/meteor';\\n\\nimport type { ClientSession } from '../app/ecdh/client/ClientSession';\\nimport { sdk } from '../app/utils/client/lib/SDKClient';\\n\\nlet resolveSession: (value: ClientSession | void) => void;\\nconst sessionPromise = new Promise<ClientSession | void>((resolve) => {\\n\\tresolveSession = resolve;\\n});\\n\\nfunction init(session: ClientSession): void {\\n\\tMeteor.connection._stream.allowConnection();\\n\\n\\tconst _didMessage = Meteor.connection._stream.socket._didMessage.bind(Meteor.connection._stream.socket);\\n\\tconst send = Meteor.connection._stream.socket.send.bind(Meteor.connection._stream.socket);\\n\\n\\tMeteor.connection._stream.socket._didMessage = async (data): Promise<void> => {\\n\\t\\tconst decryptedData = await session.decrypt(data);\\n\\t\\tdecryptedData.split('\\\\n').forEach((d) => _didMessage(d));\\n\\t};\\n\\n\\tMeteor.connection._stream.socket.send = async (data): Promise<void> => {\\n\\t\\tsend(await session.encrypt(data));\\n\\t};\\n}\\n\\nasync function initEncryptedSession(): Promise<void> {\\n\\tif (!window.ECDH_Enabled) {\\n\\t\\tMeteor.connection._stream.allowConnection();\\n\\t\\treturn resolveSession();\\n\\t}\\n\\tconst { ClientSession } = await import('../app/ecdh/client/ClientSession');\\n\\tconst session = new ClientSession();\\n\\tconst clientPublicKey = await session.init();\\n\\n\\ttry {\\n\\t\\tconst response = await fetch('/api/ecdh_proxy/initEncryptedSession', {\\n\\t\\t\\tmethod: 'POST',\\n\\t\\t\\theaders: {\\n\\t\\t\\t\\t'Content-Type': 'application/json',\\n\\t\\t\\t},\\n\\t\\t\\tbody: JSON.stringify({ clientPublicKey }),\\n\\t\\t});\\n\\n\\t\\tif (response.status !== 200) {\\n\\t\\t\\tresolveSession();\\n\\t\\t\\treturn Meteor.connection._stream.allowConnection();\\n\\t\\t}\\n\\n\\t\\tconst data = await response.json();\\n\\n\\t\\tif (data.success === false) {\\n\\t\\t\\tresolveSession();\\n\\t\\t\\treturn Meteor.connection._stream.allowConnection();\\n\\t\\t}\\n\\n\\t\\tawait session.setServerKey(data.publicKeyString);\\n\\t\\tresolveSession(session);\\n\\t\\tinit(session);\\n\\t} catch (e) {\\n\\t\\tconsole.log(e);\\n\\t\\tresolveSession();\\n\\t\\tMeteor.connection._stream.allowConnection();\\n\\t}\\n}\\n\\ninitEncryptedSession();\\nsdk.rest.use(async (request, next) => {\\n\\tconst session = await sessionPromise;\\n\\n\\tif (!session) {\\n\\t\\treturn next(...request);\\n\\t}\\n\\tconst result = await (await next(...request)).text();\\n\\tconst decrypted = await session.decrypt(result);\\n\\tconst parsed = JSON.parse(decrypted);\\n\\treturn parsed;\\n});\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_toConsumableArray\",\"_regeneratorRuntime\",\"Meteor\",\"sdk\",\"session\",\"clientPublicKey\",\"response\",\"data\",\"resolveSession\",\"sessionPromise\",\"Promise\",\"resolve\",\"async\",\"_context3\",\"prev\",\"next\",\"window\",\"ECDH_Enabled\",\"connection\",\"_stream\",\"allowConnection\",\"abrupt\",\"awrap\",\"dynamicImport\",\"_await$module$dynamic\",\"sent\",\"ClientSession\",\"init\",\"fetch\",\"method\",\"headers\",\"body\",\"JSON\",\"stringify\",\"status\",\"json\",\"success\",\"setServerKey\",\"publicKeyString\",\"_didMessage\",\"socket\",\"bind\",\"send\",\"_context\",\"decrypt\",\"decryptedData\",\"split\",\"forEach\",\"d\",\"stop\",\"_context2\",\"t0\",\"encrypt\",\"t1\",\"console\",\"log\",\"rest\",\"use\",\"request\",\"result\",\"parsed\",\"_context4\",\"apply\",\"text\",\"call\",\"parse\"],\"mappings\":\"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\"}"}