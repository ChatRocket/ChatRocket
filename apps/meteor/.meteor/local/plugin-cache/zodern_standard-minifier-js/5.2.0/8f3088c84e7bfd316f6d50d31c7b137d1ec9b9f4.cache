{"code":"function module(e,t,s){let n,r,l,a,u,i,o,d,c,m,k,f,p,E,U,b,v,g,h,A;s.link(\"@babel/runtime/helpers/extends\",{default(e){n=e}},0),s.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){r=e}},1),s.link(\"@rocket.chat/fuselage\",{Callout(e){l=e}},0),s.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){a=e}},1),s.link(\"@rocket.chat/ui-contexts\",{useSetting(e){u=e},useRolesDescription(e){i=e},useTranslation(e){o=e},useEndpoint(e){d=e},useToastMessageDispatch(e){c=e}},2),s.link(\"@tanstack/react-query\",{useQuery(e){m=e}},3),s.link(\"react\",{default(e){k=e},useMemo(e){f=e}},4),s.link(\"../../../../lib/getUserEmailAddress\",{getUserEmailAddress(e){p=e}},5),s.link(\"../../../components/Contextualbar\",{ContextualbarContent(e){E=e}},6),s.link(\"../../../components/Skeleton\",{FormSkeleton(e){U=e}},7),s.link(\"../../../components/UserCard\",{UserCardRole(e){b=e}},8),s.link(\"../../../components/UserInfo\",{UserInfo(e){v=e}},9),s.link(\"../../../components/UserStatus\",{UserStatus(e){g=e}},10),s.link(\"../../../lib/utils/getUserEmailVerified\",{getUserEmailVerified(e){h=e}},11),s.link(\"./AdminUserInfoActions\",{default(e){A=e}},12),s.exportDefault(e=>{var t;let{uid:s,onReload:C,tab:y}=e,S=o(),x=i(),I=u(\"Accounts_ManuallyApproveNewUsers\"),F=d(\"GET\",\"/v1/users.info\"),M=f(()=>({userId:s}),[s]),R=c(),{data:_,isLoading:D,error:T,refetch:w}=m([\"users\",M,\"admin\"],async()=>{let e=await F(M);return e},{onError:e=>{R({type:\"error\",message:e})}}),V=a(()=>{C(),w()}),j=f(()=>{if(!(null!=_&&_.user))return;let{avatarETag:e,name:t,username:s,phone:n,createdAt:l,roles:a=[],status:u,statusText:i,bio:o,utcOffset:d,lastLogin:c,nickname:m,canViewAllInfo:f,reason:E}=_.user;return{avatarETag:e,name:t,username:s,lastLogin:c,roles:x(a).map((e,t)=>k.createElement(b,{key:t},e)),bio:o,canViewAllInfo:f,phone:n,utcOffset:d,customFields:r(r({},_.user.customFields),I&&!_.user.active&&_.user.reason?{Reason:_.user.reason}:void 0),verified:h(_.user),email:p(_.user),createdAt:l,status:k.createElement(g,{status:u}),statusText:i,nickname:m,reason:E}},[I,_,x]);return D?k.createElement(E,null,k.createElement(U,null)):!T&&j&&null!=_&&_.user?k.createElement(v,n({},j,{actions:k.createElement(A,{isActive:null==_?void 0:_.user.active,isAdmin:null==_?void 0:null===(t=_.user.roles)||void 0===t?void 0:t.includes(\"admin\"),userId:null==_?void 0:_.user._id,username:j.username,isFederatedUser:!!_.user.federated,onChange:V,onReload:C,tab:y})})):k.createElement(E,{pb:16},k.createElement(l,{type:\"danger\"},S(\"User_not_found\")))})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/users/AdminUserInfoWithData.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IUser } from '@rocket.chat/core-typings';\\nimport { Callout } from '@rocket.chat/fuselage';\\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport { useSetting, useRolesDescription, useTranslation, useEndpoint, useToastMessageDispatch } from '@rocket.chat/ui-contexts';\\nimport { useQuery } from '@tanstack/react-query';\\nimport type { ReactElement } from 'react';\\nimport React, { useMemo } from 'react';\\n\\nimport { getUserEmailAddress } from '../../../../lib/getUserEmailAddress';\\nimport { ContextualbarContent } from '../../../components/Contextualbar';\\nimport { FormSkeleton } from '../../../components/Skeleton';\\nimport { UserCardRole } from '../../../components/UserCard';\\nimport { UserInfo } from '../../../components/UserInfo';\\nimport { UserStatus } from '../../../components/UserStatus';\\nimport { getUserEmailVerified } from '../../../lib/utils/getUserEmailVerified';\\nimport AdminUserInfoActions from './AdminUserInfoActions';\\nimport type { AdminUsersTab } from './AdminUsersPage';\\n\\ntype AdminUserInfoWithDataProps = {\\n\\tuid: IUser['_id'];\\n\\tonReload: () => void;\\n\\ttab: AdminUsersTab;\\n};\\n\\nconst AdminUserInfoWithData = ({ uid, onReload, tab }: AdminUserInfoWithDataProps): ReactElement => {\\n\\tconst t = useTranslation();\\n\\tconst getRoles = useRolesDescription();\\n\\tconst approveManuallyUsers = useSetting('Accounts_ManuallyApproveNewUsers');\\n\\n\\tconst getUsersInfo = useEndpoint('GET', '/v1/users.info');\\n\\n\\tconst query = useMemo(() => ({ userId: uid }), [uid]);\\n\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\n\\tconst { data, isLoading, error, refetch } = useQuery(\\n\\t\\t['users', query, 'admin'],\\n\\t\\tasync () => {\\n\\t\\t\\tconst usersInfo = await getUsersInfo(query);\\n\\t\\t\\treturn usersInfo;\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tonError: (error) => {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t},\\n\\t\\t},\\n\\t);\\n\\n\\tconst onChange = useMutableCallback(() => {\\n\\t\\tonReload();\\n\\t\\trefetch();\\n\\t});\\n\\n\\tconst user = useMemo(() => {\\n\\t\\tif (!data?.user) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst {\\n\\t\\t\\tavatarETag,\\n\\t\\t\\tname,\\n\\t\\t\\tusername,\\n\\t\\t\\tphone,\\n\\t\\t\\tcreatedAt,\\n\\t\\t\\troles = [],\\n\\t\\t\\tstatus,\\n\\t\\t\\tstatusText,\\n\\t\\t\\tbio,\\n\\t\\t\\tutcOffset,\\n\\t\\t\\tlastLogin,\\n\\t\\t\\tnickname,\\n\\t\\t\\tcanViewAllInfo,\\n\\t\\t\\treason,\\n\\t\\t} = data.user;\\n\\n\\t\\treturn {\\n\\t\\t\\tavatarETag,\\n\\t\\t\\tname,\\n\\t\\t\\tusername,\\n\\t\\t\\tlastLogin,\\n\\t\\t\\troles: getRoles(roles).map((role, index) => <UserCardRole key={index}>{role}</UserCardRole>),\\n\\t\\t\\tbio,\\n\\t\\t\\tcanViewAllInfo,\\n\\t\\t\\tphone,\\n\\t\\t\\tutcOffset,\\n\\t\\t\\tcustomFields: {\\n\\t\\t\\t\\t...data.user.customFields,\\n\\t\\t\\t\\t...(approveManuallyUsers && !data.user.active && data.user.reason ? { Reason: data.user.reason } : undefined),\\n\\t\\t\\t},\\n\\t\\t\\tverified: getUserEmailVerified(data.user),\\n\\t\\t\\temail: getUserEmailAddress(data.user),\\n\\t\\t\\tcreatedAt,\\n\\t\\t\\tstatus: <UserStatus status={status} />,\\n\\t\\t\\tstatusText,\\n\\t\\t\\tnickname,\\n\\t\\t\\treason,\\n\\t\\t};\\n\\t}, [approveManuallyUsers, data, getRoles]);\\n\\n\\tif (isLoading) {\\n\\t\\treturn (\\n\\t\\t\\t<ContextualbarContent>\\n\\t\\t\\t\\t<FormSkeleton />\\n\\t\\t\\t</ContextualbarContent>\\n\\t\\t);\\n\\t}\\n\\n\\tif (error || !user || !data?.user) {\\n\\t\\treturn (\\n\\t\\t\\t<ContextualbarContent pb={16}>\\n\\t\\t\\t\\t<Callout type='danger'>{t('User_not_found')}</Callout>\\n\\t\\t\\t</ContextualbarContent>\\n\\t\\t);\\n\\t}\\n\\n\\treturn (\\n\\t\\t<UserInfo\\n\\t\\t\\t{...user}\\n\\t\\t\\tactions={\\n\\t\\t\\t\\t<AdminUserInfoActions\\n\\t\\t\\t\\t\\tisActive={data?.user.active}\\n\\t\\t\\t\\t\\tisAdmin={data?.user.roles?.includes('admin')}\\n\\t\\t\\t\\t\\tuserId={data?.user._id}\\n\\t\\t\\t\\t\\tusername={user.username}\\n\\t\\t\\t\\t\\tisFederatedUser={!!data.user.federated}\\n\\t\\t\\t\\t\\tonChange={onChange}\\n\\t\\t\\t\\t\\tonReload={onReload}\\n\\t\\t\\t\\t\\ttab={tab}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t}\\n\\t\\t/>\\n\\t);\\n};\\n\\nexport default AdminUserInfoWithData;\\n\",null],\"names\":[\"_extends\",\"_objectSpread\",\"Callout\",\"useMutableCallback\",\"useSetting\",\"useRolesDescription\",\"useTranslation\",\"useEndpoint\",\"useToastMessageDispatch\",\"useQuery\",\"React\",\"useMemo\",\"getUserEmailAddress\",\"ContextualbarContent\",\"FormSkeleton\",\"UserCardRole\",\"UserInfo\",\"UserStatus\",\"getUserEmailVerified\",\"AdminUserInfoActions\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"_data$user$roles\",\"uid\",\"onReload\",\"tab\",\"t\",\"getRoles\",\"approveManuallyUsers\",\"getUsersInfo\",\"query\",\"userId\",\"dispatchToastMessage\",\"data\",\"isLoading\",\"error\",\"refetch\",\"usersInfo\",\"onError\",\"type\",\"message\",\"onChange\",\"user\",\"avatarETag\",\"name\",\"username\",\"phone\",\"createdAt\",\"roles\",\"status\",\"statusText\",\"bio\",\"utcOffset\",\"lastLogin\",\"nickname\",\"canViewAllInfo\",\"reason\",\"map\",\"role\",\"index\",\"createElement\",\"key\",\"customFields\",\"active\",\"Reason\",\"undefined\",\"verified\",\"email\",\"actions\",\"isActive\",\"isAdmin\",\"includes\",\"_id\",\"isFederatedUser\",\"federated\",\"pb\"],\"mappings\":\"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\"}"}