{"code":"function module(e,s,a){let t,n,l,r,i,m,o,u,c,g;a.link(\"@rocket.chat/fuselage\",{MessageDivider(e){t=e}},0),a.link(\"@rocket.chat/ui-contexts\",{useUserPreference(e){n=e}},1),a.link(\"react\",{default(e){l=e},Fragment(e){r=e},memo(e){i=e}},2),a.link(\"../../../../app/ui-utils/client\",{MessageTypes(e){m=e}},3),a.link(\"../../../components/message/variants/RoomMessage\",{default(e){o=e}},4),a.link(\"../../../components/message/variants/SystemMessage\",{default(e){u=e}},5),a.link(\"../../../hooks/useFormatDate\",{useFormatDate(e){c=e}},6),a.link(\"../../room/MessageList/lib/isMessageNewDay\",{isMessageNewDay(e){g=e}},7),a.exportDefault(i(e=>{let{messages:s}=e,a=c(),i=!!n(\"displayAvatars\");return l.createElement(l.Fragment,null,s.map((e,s,n)=>{let{[s-1]:c}=n,k=g(e,c),d=m.isSystemMessage(e);return l.createElement(r,{key:e._id},k&&l.createElement(t,null,a(e.ts)),!d&&l.createElement(o,{message:e,sequential:!1,unread:!1,mention:!1,all:!1,ignoredUser:!1,showUserAvatar:i}),d&&l.createElement(u,{message:e,showUserAvatar:i}))}))}))}","map":"{\"version\":3,\"sources\":[\"client/views/audit/components/AuditMessageList.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage } from '@rocket.chat/core-typings';\\nimport { MessageDivider } from '@rocket.chat/fuselage';\\nimport { useUserPreference } from '@rocket.chat/ui-contexts';\\nimport type { ReactElement } from 'react';\\nimport React, { Fragment, memo } from 'react';\\n\\nimport { MessageTypes } from '../../../../app/ui-utils/client';\\nimport RoomMessage from '../../../components/message/variants/RoomMessage';\\nimport SystemMessage from '../../../components/message/variants/SystemMessage';\\nimport { useFormatDate } from '../../../hooks/useFormatDate';\\nimport { isMessageNewDay } from '../../room/MessageList/lib/isMessageNewDay';\\n\\ntype AuditMessageListProps = {\\n\\tmessages: IMessage[];\\n};\\n\\nconst AuditMessageList = ({ messages }: AuditMessageListProps): ReactElement => {\\n\\tconst formatDate = useFormatDate();\\n\\tconst showUserAvatar = !!useUserPreference<boolean>('displayAvatars');\\n\\n\\treturn (\\n\\t\\t<>\\n\\t\\t\\t{messages.map((message, index, { [index - 1]: previous }) => {\\n\\t\\t\\t\\tconst newDay = isMessageNewDay(message, previous);\\n\\t\\t\\t\\tconst system = MessageTypes.isSystemMessage(message);\\n\\n\\t\\t\\t\\treturn (\\n\\t\\t\\t\\t\\t<Fragment key={message._id}>\\n\\t\\t\\t\\t\\t\\t{newDay && <MessageDivider>{formatDate(message.ts)}</MessageDivider>}\\n\\n\\t\\t\\t\\t\\t\\t{!system && (\\n\\t\\t\\t\\t\\t\\t\\t<RoomMessage\\n\\t\\t\\t\\t\\t\\t\\t\\tmessage={message}\\n\\t\\t\\t\\t\\t\\t\\t\\tsequential={false}\\n\\t\\t\\t\\t\\t\\t\\t\\tunread={false}\\n\\t\\t\\t\\t\\t\\t\\t\\tmention={false}\\n\\t\\t\\t\\t\\t\\t\\t\\tall={false}\\n\\t\\t\\t\\t\\t\\t\\t\\tignoredUser={false}\\n\\t\\t\\t\\t\\t\\t\\t\\tshowUserAvatar={showUserAvatar}\\n\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t)}\\n\\n\\t\\t\\t\\t\\t\\t{system && <SystemMessage message={message} showUserAvatar={showUserAvatar} />}\\n\\t\\t\\t\\t\\t</Fragment>\\n\\t\\t\\t\\t);\\n\\t\\t\\t})}\\n\\t\\t</>\\n\\t);\\n};\\n\\nexport default memo(AuditMessageList);\\n\",null],\"names\":[\"MessageDivider\",\"useUserPreference\",\"React\",\"Fragment\",\"memo\",\"MessageTypes\",\"RoomMessage\",\"SystemMessage\",\"useFormatDate\",\"isMessageNewDay\",\"module\",\"link\",\"v\",\"default\",\"exportDefault\",\"_ref\",\"messages\",\"formatDate\",\"showUserAvatar\",\"createElement\",\"map\",\"message\",\"index\",\"_ref2\",\"previous\",\"newDay\",\"system\",\"isSystemMessage\",\"key\",\"_id\",\"ts\",\"sequential\",\"unread\",\"mention\",\"all\",\"ignoredUser\"],\"mappings\":\"2BACAA,EAAuDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA9CC,EAAgBC,IAAA,CAAM,wBAAwB,CAAAX,eAAAY,CAAA,EAAAZ,EAAAY,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,2BAAA,CAAAV,kBAAAW,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAV,EAAAU,CAAA,EAAAT,SAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,KAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,kCAAA,CAAAN,aAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,mDAAA,CAAAE,QAAAD,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,qDAAA,CAAAE,QAAAD,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,+BAAA,CAAAH,cAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,6CAAA,CAAAF,gBAAAG,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAAvDF,EAAOI,aAAE,CAiDMV,EAlCUW,IAAsD,GAArD,CAAEC,SAAAA,CAAAA,CAAiC,CAAAD,EACtDE,EAAaT,IACbU,EAAiB,CAAC,CAACjB,EAA2B,kBAEpD,OACCC,EAAAiB,aAAA,CAAAjB,EAAAC,QAAA,CAAA,KACEa,EAASI,GAAG,CAAC,CAACC,EAASC,EAAKC,KAA+B,GAA7B,CAAE,CAACD,EAAQ,EAAC,CAAGE,CAAAA,CAAU,CAAAD,EACjDE,EAAShB,EAAgBY,EAASG,GAClCE,EAASrB,EAAasB,eAAe,CAACN,GAE5C,OACCnB,EAAAiB,aAAA,CAAChB,EAAQ,CAACyB,IAAKP,EAAQQ,GAAAA,AAAI,EACzBJ,GAAUvB,EAAAiB,aAAA,CAACnB,EAAc,KAAEiB,EAAWI,EAAQS,EAAE,GAEhD,CAACJ,GACDxB,EAAAiB,aAAA,CAACb,EAAW,CACXe,QAASA,EACTU,WAAY,CAAA,EACZC,OAAQ,CAAA,EACRC,QAAS,CAAA,EACTC,IAAK,CAAA,EACLC,YAAa,CAAA,EACbjB,eAAgBA,CAAe,GAIhCQ,GAAUxB,EAAAiB,aAAA,CAACZ,EAAa,CAACc,QAASA,EAASH,eAAgBA,CAAe,GAG9E,GAGH\"}"}