{"code":"function module(e,t,s){let l,n;s.export({useLogs:()=>o}),s.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){l=e}},0),s.link(\"@tanstack/react-query\",{useQuery(e){n=e}},1);let o=e=>{let t=l(\"GET\",\"/apps/:id/logs\",{id:e});return n([\"marketplace\",\"apps\",e,\"logs\"],()=>t())}}","map":"{\"version\":3,\"sources\":[\"client/views/marketplace/hooks/useLogs.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { OperationResult } from '@rocket.chat/rest-typings';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport type { UseQueryResult } from '@tanstack/react-query';\\nimport { useQuery } from '@tanstack/react-query';\\n\\nexport const useLogs = (appId: string): UseQueryResult<OperationResult<'GET', '/apps/:id/logs'>> => {\\n\\tconst logs = useEndpoint('GET', '/apps/:id/logs', { id: appId });\\n\\n\\treturn useQuery(['marketplace', 'apps', appId, 'logs'], () => logs());\\n};\\n\",null],\"names\":[\"useEndpoint\",\"useQuery\",\"module\",\"export\",\"useLogs\",\"link\",\"v\",\"appId\",\"logs\",\"id\"],\"mappings\":\"2BAC4BA,EAA2BC,EAAvDC,EAAOC,MAAE,CAAA,CAAAC,QAAaA,IAAAA,CAAM,GAAAF,EAA2BG,IAAA,CAAA,2BAAA,CAAAL,YAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,wBAAA,CAAAJ,SAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAIhD,IAAMF,EAAWG,IACvB,IAAMC,EAAOR,EAAY,MAAO,iBAAkB,CAAES,GAAIF,CAAK,GAE7D,OAAON,EAAS,CAAC,cAAe,OAAQM,EAAO,OAAO,CAAE,IAAMC,IAC/D\"}"}