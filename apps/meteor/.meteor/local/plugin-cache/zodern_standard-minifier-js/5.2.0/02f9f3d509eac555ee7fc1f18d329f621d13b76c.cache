{"code":"function module(e,o,t){let i,n,r,l,a,s,c,g,p;t.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){i=e}},0),t.link(\"@rocket.chat/random\",{Random(e){n=e}},0),t.link(\"meteor/accounts-base\",{Accounts(e){r=e}},1),t.link(\"meteor/google-oauth\",{Google(e){l=e}},2),t.link(\"meteor/meteor\",{Meteor(e){a=e}},3),t.link(\"meteor/oauth\",{OAuth(e){s=e}},4),t.link(\"../../lib/2fa/overrideLoginMethod\",{overrideLoginMethod(e){c=e}},5),t.link(\"../../lib/wrapRequestCredentialFn\",{wrapRequestCredentialFn(e){g=e}},6),t.link(\"./oauth\",{createOAuthTotpLoginMethod(e){p=e}},7);let{loginWithGoogle:d}=a,m=p(l),u=(e,o,t)=>{if(a.isCordova&&l.signIn){l.signIn(e,t);return}\"string\"==typeof r._options.restrictCreationByEmailDomain&&((e=Object.assign({},e||{})).loginUrlParameters=Object.assign({},e.loginUrlParameters||{}),e.loginUrlParameters.hd=r._options.restrictCreationByEmailDomain),m(e,o,t)};a.loginWithGoogle=(e,o)=>{c(d,[e],o,u)},l.requestCredential=g(\"google\",e=>{let{config:o,loginStyle:t,options:r,credentialRequestCompleteCallback:l}=e,a=n.secret(),c=[\"email\",...r.requestPermissions||[\"profile\"]].join(\" \"),g=i(i(i(i(i({},r.loginUrlParameters),void 0!==r.requestOfflineToken&&{access_type:r.requestOfflineToken?\"offline\":\"online\"}),(r.prompt||r.forceApprovalPrompt)&&{prompt:r.prompt||\"consent\"}),r.loginHint&&{login_hint:r.loginHint}),{},{response_type:\"code\",client_id:o.clientId,scope:c,redirect_uri:s._redirectUri(\"google\",o),state:s._stateParam(t,a,r.redirectUrl)});Object.assign(g,{response_type:\"code\",client_id:o.clientId,scope:c,redirect_uri:s._redirectUri(\"google\",o),state:s._stateParam(t,a,r.redirectUrl)});let p=\"https://accounts.google.com/o/oauth2/auth?\".concat(Object.keys(g).map(e=>\"\".concat(encodeURIComponent(e),\"=\").concat(encodeURIComponent(g[e]))).join(\"&\"));s.launchLogin({loginService:\"google\",loginStyle:t,loginUrl:p,credentialRequestCompleteCallback:l,credentialToken:a,popupOptions:{height:600}})})}","map":"{\"version\":3,\"sources\":[\"client/meteorOverrides/login/google.ts\",\"<anon>\"],\"sourcesContent\":[\"import { Random } from '@rocket.chat/random';\\nimport { Accounts } from 'meteor/accounts-base';\\nimport { Google } from 'meteor/google-oauth';\\nimport { Meteor } from 'meteor/meteor';\\nimport { OAuth } from 'meteor/oauth';\\n\\nimport { overrideLoginMethod, type LoginCallback } from '../../lib/2fa/overrideLoginMethod';\\nimport { wrapRequestCredentialFn } from '../../lib/wrapRequestCredentialFn';\\nimport { createOAuthTotpLoginMethod } from './oauth';\\n\\ndeclare module 'meteor/meteor' {\\n\\t// eslint-disable-next-line @typescript-eslint/no-namespace\\n\\tnamespace Meteor {\\n\\t\\tfunction loginWithGoogle(\\n\\t\\t\\toptions?:\\n\\t\\t\\t\\t| Meteor.LoginWithExternalServiceOptions & {\\n\\t\\t\\t\\t\\t\\tloginUrlParameters?: {\\n\\t\\t\\t\\t\\t\\t\\tinclude_granted_scopes?: boolean;\\n\\t\\t\\t\\t\\t\\t\\thd?: string;\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t  },\\n\\t\\t\\tcallback?: LoginCallback,\\n\\t\\t): void;\\n\\t}\\n}\\n\\nconst { loginWithGoogle } = Meteor;\\n\\nconst innerLoginWithGoogleAndTOTP = createOAuthTotpLoginMethod(Google);\\n\\nconst loginWithGoogleAndTOTP = (\\n\\toptions:\\n\\t\\t| (Meteor.LoginWithExternalServiceOptions & {\\n\\t\\t\\t\\tloginUrlParameters?: {\\n\\t\\t\\t\\t\\tinclude_granted_scopes?: boolean;\\n\\t\\t\\t\\t\\thd?: string;\\n\\t\\t\\t\\t};\\n\\t\\t  })\\n\\t\\t| undefined,\\n\\tcode: string,\\n\\tcallback?: LoginCallback,\\n) => {\\n\\tif (Meteor.isCordova && Google.signIn) {\\n\\t\\t// After 20 April 2017, Google OAuth login will no longer work from\\n\\t\\t// a WebView, so Cordova apps must use Google Sign-In instead.\\n\\t\\t// https://github.com/meteor/meteor/issues/8253\\n\\t\\tGoogle.signIn(options, callback);\\n\\t\\treturn;\\n\\t} // Use Google's domain-specific login page if we want to restrict creation to\\n\\n\\t// a particular email domain. (Don't use it if restrictCreationByEmailDomain\\n\\t// is a function.) Note that all this does is change Google's UI ---\\n\\t// accounts-base/accounts_server.js still checks server-side that the server\\n\\t// has the proper email address after the OAuth conversation.\\n\\tif (typeof Accounts._options.restrictCreationByEmailDomain === 'string') {\\n\\t\\toptions = Object.assign({}, options || {});\\n\\t\\toptions.loginUrlParameters = Object.assign({}, options.loginUrlParameters || {});\\n\\t\\toptions.loginUrlParameters.hd = Accounts._options.restrictCreationByEmailDomain;\\n\\t}\\n\\n\\tinnerLoginWithGoogleAndTOTP(options, code, callback);\\n};\\n\\nMeteor.loginWithGoogle = (options, callback) => {\\n\\toverrideLoginMethod(loginWithGoogle, [options], callback, loginWithGoogleAndTOTP);\\n};\\n\\nGoogle.requestCredential = wrapRequestCredentialFn(\\n\\t'google',\\n\\t({ config, loginStyle, options: requestOptions, credentialRequestCompleteCallback }) => {\\n\\t\\tconst credentialToken = Random.secret();\\n\\t\\tconst options = requestOptions as Meteor.LoginWithExternalServiceOptions & {\\n\\t\\t\\tloginUrlParameters?: {\\n\\t\\t\\t\\tinclude_granted_scopes?: boolean;\\n\\t\\t\\t\\thd?: string;\\n\\t\\t\\t};\\n\\t\\t\\tprompt?: string;\\n\\t\\t};\\n\\n\\t\\tconst scope = ['email', ...(options.requestPermissions || ['profile'])].join(' ');\\n\\n\\t\\tconst loginUrlParameters: Record<string, any> = {\\n\\t\\t\\t...options.loginUrlParameters,\\n\\t\\t\\t...(options.requestOfflineToken !== undefined && {\\n\\t\\t\\t\\taccess_type: options.requestOfflineToken ? 'offline' : 'online',\\n\\t\\t\\t}),\\n\\t\\t\\t...((options.prompt || options.forceApprovalPrompt) && { prompt: options.prompt || 'consent' }),\\n\\t\\t\\t...(options.loginHint && { login_hint: options.loginHint }),\\n\\t\\t\\tresponse_type: 'code',\\n\\t\\t\\tclient_id: config.clientId,\\n\\t\\t\\tscope,\\n\\t\\t\\tredirect_uri: OAuth._redirectUri('google', config),\\n\\t\\t\\tstate: OAuth._stateParam(loginStyle, credentialToken, options.redirectUrl),\\n\\t\\t};\\n\\n\\t\\tObject.assign(loginUrlParameters, {\\n\\t\\t\\tresponse_type: 'code',\\n\\t\\t\\tclient_id: config.clientId,\\n\\t\\t\\tscope,\\n\\t\\t\\tredirect_uri: OAuth._redirectUri('google', config),\\n\\t\\t\\tstate: OAuth._stateParam(loginStyle, credentialToken, options.redirectUrl),\\n\\t\\t});\\n\\t\\tconst loginUrl = `https://accounts.google.com/o/oauth2/auth?${Object.keys(loginUrlParameters)\\n\\t\\t\\t.map((param) => `${encodeURIComponent(param)}=${encodeURIComponent(loginUrlParameters[param])}`)\\n\\t\\t\\t.join('&')}`;\\n\\n\\t\\tOAuth.launchLogin({\\n\\t\\t\\tloginService: 'google',\\n\\t\\t\\tloginStyle,\\n\\t\\t\\tloginUrl,\\n\\t\\t\\tcredentialRequestCompleteCallback,\\n\\t\\t\\tcredentialToken,\\n\\t\\t\\tpopupOptions: { height: 600 },\\n\\t\\t});\\n\\t},\\n);\\n\",null],\"names\":[\"_objectSpread\",\"Random\",\"Accounts\",\"Google\",\"Meteor\",\"OAuth\",\"overrideLoginMethod\",\"wrapRequestCredentialFn\",\"createOAuthTotpLoginMethod\",\"module\",\"link\",\"default\",\"v\",\"loginWithGoogle\",\"innerLoginWithGoogleAndTOTP\",\"loginWithGoogleAndTOTP\",\"options\",\"code\",\"callback\",\"isCordova\",\"signIn\",\"_options\",\"restrictCreationByEmailDomain\",\"Object\",\"assign\",\"loginUrlParameters\",\"hd\",\"requestCredential\",\"_ref\",\"config\",\"loginStyle\",\"requestOptions\",\"credentialRequestCompleteCallback\",\"credentialToken\",\"secret\",\"scope\",\"requestPermissions\",\"join\",\"undefined\",\"requestOfflineToken\",\"access_type\",\"prompt\",\"forceApprovalPrompt\",\"loginHint\",\"login_hint\",\"response_type\",\"client_id\",\"clientId\",\"redirect_uri\",\"_redirectUri\",\"state\",\"_stateParam\",\"redirectUrl\",\"loginUrl\",\"concat\",\"keys\",\"map\",\"param\",\"encodeURIComponent\",\"launchLogin\",\"loginService\",\"popupOptions\",\"height\"],\"mappings\":\"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\"}"}