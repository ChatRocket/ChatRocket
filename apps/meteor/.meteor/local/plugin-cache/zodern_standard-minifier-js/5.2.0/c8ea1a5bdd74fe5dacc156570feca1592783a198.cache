{"code":"function module(r,n,a){var e;let l,t,o,i,c;a.link(\"meteor/meteor\",{Meteor(r){l=r}},0),a.link(\"../../app/utils/lib/i18n\",{t(r){t=r}},1),a.link(\"../lib/2fa/process2faReturn\",{process2faReturn(r){o=r},process2faAsyncReturn(r){i=r}},2),a.link(\"../lib/2fa/utils\",{isTotpInvalidError(r){c=r}},3),l.call=(r=>{let n=(n,a,e)=>(l,o)=>r(n,...a,{twoFactorCode:l,twoFactorMethod:o},(r,n)=>{if(c(r)){e(Error(\"password\"===o?t(\"Invalid_password\"):t(\"Invalid_two_factor_code\")));return}e(r,n)}),a=(a,e,l)=>()=>r(a,...e,async(r,t)=>{await o({error:r,result:t,onCode:n(a,e,l),originalCallback:l,emailOrUsername:void 0})});return function(r){for(var n=arguments.length,e=Array(n>1?n-1:0),l=1;l<n;l++)e[l-1]=arguments[l];let t=e.length>0&&\"function\"==typeof e[e.length-1]?e.pop():()=>void 0;return a(r,e,t)()}})(l.call),l.callAsync=(e=l.callAsync,async function r(r){for(var n=arguments.length,a=Array(n>1?n-1:0),t=1;t<n;t++)a[t-1]=arguments[t];try{return await e(r,...a)}catch(n){return i({error:n,onCode:(n,e)=>l.callAsync(r,...a,{twoFactorCode:n,twoFactorMethod:e}),emailOrUsername:void 0})}})}","map":"{\"version\":3,\"sources\":[\"client/meteorOverrides/totpOnCall.ts\",\"<anon>\"],\"sourcesContent\":[\"import { Meteor } from 'meteor/meteor';\\n\\nimport { t } from '../../app/utils/lib/i18n';\\nimport type { LoginCallback } from '../lib/2fa/overrideLoginMethod';\\nimport { process2faReturn, process2faAsyncReturn } from '../lib/2fa/process2faReturn';\\nimport { isTotpInvalidError } from '../lib/2fa/utils';\\n\\nconst withSyncTOTP = (call: (name: string, ...args: any[]) => any) => {\\n\\tconst callWithTotp =\\n\\t\\t(methodName: string, args: unknown[], callback: LoginCallback) =>\\n\\t\\t(twoFactorCode: string, twoFactorMethod: string): unknown =>\\n\\t\\t\\tcall(\\n\\t\\t\\t\\tmethodName,\\n\\t\\t\\t\\t...args,\\n\\t\\t\\t\\t{ twoFactorCode, twoFactorMethod },\\n\\t\\t\\t\\t(error: globalThis.Error | Meteor.Error | Meteor.TypedError | undefined, result: unknown): void => {\\n\\t\\t\\t\\t\\tif (isTotpInvalidError(error)) {\\n\\t\\t\\t\\t\\t\\tcallback(new Error(twoFactorMethod === 'password' ? t('Invalid_password') : t('Invalid_two_factor_code')));\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tcallback(error, result);\\n\\t\\t\\t\\t},\\n\\t\\t\\t);\\n\\n\\tconst callWithoutTotp = (methodName: string, args: unknown[], callback: LoginCallback) => (): unknown =>\\n\\t\\tcall(\\n\\t\\t\\tmethodName,\\n\\t\\t\\t...args,\\n\\t\\t\\tasync (error: globalThis.Error | Meteor.Error | Meteor.TypedError | undefined, result: unknown): Promise<void> => {\\n\\t\\t\\t\\tawait process2faReturn({\\n\\t\\t\\t\\t\\terror,\\n\\t\\t\\t\\t\\tresult,\\n\\t\\t\\t\\t\\tonCode: callWithTotp(methodName, args, callback),\\n\\t\\t\\t\\t\\toriginalCallback: callback,\\n\\t\\t\\t\\t\\temailOrUsername: undefined,\\n\\t\\t\\t\\t});\\n\\t\\t\\t},\\n\\t\\t);\\n\\n\\treturn function (methodName: string, ...args: unknown[]): unknown {\\n\\t\\tconst callback = args.length > 0 && typeof args[args.length - 1] === 'function' ? (args.pop() as LoginCallback) : (): void => undefined;\\n\\n\\t\\treturn callWithoutTotp(methodName, args, callback)();\\n\\t};\\n};\\n\\nconst withAsyncTOTP = (callAsync: (name: string, ...args: any[]) => Promise<any>) => {\\n\\treturn async function callAsyncWithTOTP(methodName: string, ...args: unknown[]): Promise<unknown> {\\n\\t\\ttry {\\n\\t\\t\\treturn await callAsync(methodName, ...args);\\n\\t\\t} catch (error: unknown) {\\n\\t\\t\\treturn process2faAsyncReturn({\\n\\t\\t\\t\\terror,\\n\\t\\t\\t\\tonCode: (twoFactorCode, twoFactorMethod) => Meteor.callAsync(methodName, ...args, { twoFactorCode, twoFactorMethod }),\\n\\t\\t\\t\\temailOrUsername: undefined,\\n\\t\\t\\t});\\n\\t\\t}\\n\\t};\\n};\\n\\nMeteor.call = withSyncTOTP(Meteor.call);\\nMeteor.callAsync = withAsyncTOTP(Meteor.callAsync);\\n\",null],\"names\":[\"callAsync\",\"Meteor\",\"t\",\"process2faReturn\",\"process2faAsyncReturn\",\"isTotpInvalidError\",\"module\",\"link\",\"v\",\"call\",\"withSyncTOTP\",\"callWithTotp\",\"methodName\",\"args\",\"callback\",\"twoFactorCode\",\"twoFactorMethod\",\"error\",\"result\",\"Error\",\"callWithoutTotp\",\"onCode\",\"originalCallback\",\"emailOrUsername\",\"undefined\",\"_len\",\"arguments\",\"length\",\"Array\",\"_key\",\"pop\",\"callAsyncWithTOTP\",\"_len2\",\"_key2\"],\"mappings\":\"2BA+CuBA,MA/CvBC,EAAuCC,EAAAC,EAAAC,EAAAC,EAA9BC,EAAQC,IAAA,CAAM,gBAAgB,CAAAN,OAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,2BAAA,CAAAL,EAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,8BAAA,CAAAJ,iBAAAK,CAAA,EAAAL,EAAAK,CAAA,EAAAJ,sBAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,mBAAA,CAAAF,mBAAAG,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GA6DvCP,EAAOQ,IAAI,CAAGC,AAtDQD,CAAAA,IACrB,IAAME,EACLA,CAACC,EAAoBC,EAAiBC,IACtC,CAACC,EAAuBC,IACvBP,EACCG,KACGC,EACH,CAAEE,cAAAA,EAAeC,gBAAAA,CAAe,EAChC,CAACC,EAAwEC,KACxE,GAAIb,EAAmBY,GAAQ,CAC9BH,EAAS,AAAIK,MAAMH,AAAoB,aAApBA,EAAiCd,EAAE,oBAAsBA,EAAE,6BAC9E,MACD,CAEAY,EAASG,EAAOC,EACjB,GAGGE,EAAkBA,CAACR,EAAoBC,EAAiBC,IAA4B,IACzFL,EACCG,KACGC,EACH,MAAOI,EAAwEC,KAC9E,MAAMf,EAAiB,CACtBc,MAAAA,EACAC,OAAAA,EACAG,OAAQV,EAAaC,EAAYC,EAAMC,GACvCQ,iBAAkBR,EAClBS,gBAAiBC,KAAAA,GAEnB,GAGF,OAAO,SAAUZ,CAAkB,EAAoB,IAAA,IAAAa,EAAAC,UAAAC,MAAA,CAAfd,EAAe,AAAAe,MAAAH,EAAA,EAAAA,EAAA,EAAA,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAfhB,CAAe,CAAAgB,EAAA,EAAA,CAAAH,SAAA,CAAAG,EAAA,CACtD,IAAMf,EAAWD,EAAKc,MAAM,CAAG,GAAK,AAAiC,YAAjC,OAAOd,CAAI,CAACA,EAAKc,MAAM,CAAG,EAAE,CAAmBd,EAAKiB,GAAG,GAAuB,IAAYN,KAAAA,EAE9H,OAAOJ,EAAgBR,EAAYC,EAAMC,IAC1C,CACD,CAAA,EAgB2Bb,EAAOQ,IAAI,EACtCR,EAAOD,SAAS,EAfOA,EAeUC,EAAOD,SAAS,CAdzC,eAAe+B,EAAkBnB,CAAkB,EAAoB,IAAA,IAAAoB,EAAAN,UAAAC,MAAA,CAAfd,EAAe,AAAAe,MAAAI,EAAA,EAAAA,EAAA,EAAA,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAfpB,CAAe,CAAAoB,EAAA,EAAA,CAAAP,SAAA,CAAAO,EAAA,CAC7E,GAAI,CACH,OAAO,MAAMjC,EAAUY,KAAeC,EACvC,CAAE,MAAOI,EAAgB,CACxB,OAAOb,EAAsB,CAC5Ba,MAAAA,EACAI,OAAQA,CAACN,EAAeC,IAAoBf,EAAOD,SAAS,CAACY,KAAeC,EAAM,CAAEE,cAAAA,EAAeC,gBAAAA,CAAe,GAClHO,gBAAiBC,KAAAA,GAEnB,CACD\"}"}