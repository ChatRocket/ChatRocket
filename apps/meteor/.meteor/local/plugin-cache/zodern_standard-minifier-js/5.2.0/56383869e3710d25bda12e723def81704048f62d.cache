{"code":"function module(e,t,o){var l,r;let n,a,i,d,m;let f=[\"onConfirm\",\"onClose\",\"invalidAttempt\"];o.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default(e){n=e}},0),o.export({Method:()=>l}),o.link(\"react\",{default(e){a=e}},0),o.link(\"./TwoFactorEmailModal\",{default(e){i=e}},1),o.link(\"./TwoFactorPasswordModal\",{default(e){d=e}},2),o.link(\"./TwoFactorTotpModal\",{default(e){m=e}},3),(r=l||o.runSetters(l={},[\"Method\"])).TOTP=\"totp\",r.EMAIL=\"email\",r.PASSWORD=\"password\",o.exportDefault(e=>{let{onConfirm:t,onClose:o,invalidAttempt:r}=e,u=n(e,f);if(u.method===l.TOTP)return a.createElement(m,{onConfirm:t,onClose:o,invalidAttempt:r});if(u.method===l.EMAIL){let{emailOrUsername:e}=u;return a.createElement(i,{onConfirm:t,onClose:o,emailOrUsername:e,invalidAttempt:r})}if(u.method===l.PASSWORD)return a.createElement(d,{onConfirm:t,onClose:o,invalidAttempt:r});throw Error(\"Invalid Two Factor method\")})}","map":"{\"version\":3,\"sources\":[\"client/components/TwoFactorModal/TwoFactorModal.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { ReactElement } from 'react';\\nimport React from 'react';\\n\\nimport TwoFactorEmail from './TwoFactorEmailModal';\\nimport TwoFactorPassword from './TwoFactorPasswordModal';\\nimport TwoFactorTotp from './TwoFactorTotpModal';\\n\\nexport enum Method {\\n\\tTOTP = 'totp',\\n\\tEMAIL = 'email',\\n\\tPASSWORD = 'password',\\n}\\n\\nexport type OnConfirm = (code: string, method: Method) => void;\\n\\ntype TwoFactorModalProps = {\\n\\tonConfirm: OnConfirm;\\n\\tonClose: () => void;\\n\\tinvalidAttempt?: boolean;\\n} & (\\n\\t| {\\n\\t\\t\\tmethod: 'totp' | 'password';\\n\\t  }\\n\\t| {\\n\\t\\t\\tmethod: 'email';\\n\\t\\t\\temailOrUsername: string;\\n\\t  }\\n);\\n\\nconst TwoFactorModal = ({ onConfirm, onClose, invalidAttempt, ...props }: TwoFactorModalProps): ReactElement => {\\n\\tif (props.method === Method.TOTP) {\\n\\t\\treturn <TwoFactorTotp onConfirm={onConfirm} onClose={onClose} invalidAttempt={invalidAttempt} />;\\n\\t}\\n\\n\\tif (props.method === Method.EMAIL) {\\n\\t\\tconst { emailOrUsername } = props;\\n\\n\\t\\treturn <TwoFactorEmail onConfirm={onConfirm} onClose={onClose} emailOrUsername={emailOrUsername} invalidAttempt={invalidAttempt} />;\\n\\t}\\n\\n\\tif (props.method === Method.PASSWORD) {\\n\\t\\treturn <TwoFactorPassword onConfirm={onConfirm} onClose={onClose} invalidAttempt={invalidAttempt} />;\\n\\t}\\n\\n\\tthrow new Error('Invalid Two Factor method');\\n};\\n\\nexport default TwoFactorModal;\\n\",null],\"names\":[\"Method\",\"_objectWithoutProperties\",\"React\",\"TwoFactorEmail\",\"TwoFactorPassword\",\"TwoFactorTotp\",\"module\",\"link\",\"default\",\"v\",\"export\",\"runSetters\",\"exportDefault\",\"_ref\",\"onConfirm\",\"onClose\",\"invalidAttempt\",\"props\",\"_excluded\",\"method\",\"TOTP\",\"createElement\",\"EMAIL\",\"emailOrUsername\",\"PASSWORD\",\"Error\"],\"mappings\":\"2BAOYA,EAAAA,MANZC,EAA0BC,EAAAC,EAAAC,EAAAC,iDAAAC,EAAAC,IAAA,CAAA,iDAAA,CAAAC,QAAAC,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAA1BH,EAAOI,MAAK,CAAA,CAAAV,OAAMA,IAAQA,CAAA,GAAAM,EAAAC,IAAA,CAAA,QAAA,CAAAC,QAAAC,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wBAAA,CAAAC,QAAAC,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2BAAA,CAAAC,QAAAC,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uBAAA,CAAAC,QAAAC,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAOzBT,CADWA,EAAAA,GAAMM,EAAAK,UAAA,CAANX,EAAM,CAAA,EAAA,CAAA,SAAA,GACjB,IAAA,CAAA,OACAA,EAAA,KAAA,CAAA,QACAA,EAAA,QAAA,CAAA,WATDM,EAAOM,aAAW,CA4BKC,IAAwF,GAAvF,CAAEC,UAAAA,CAAS,CAAEC,QAAAA,CAAO,CAAEC,eAAAA,CAAAA,CAA+C,CAAAH,EAA5BI,EAAKhB,EAAAY,EAAAK,GACrE,GAAID,EAAME,MAAM,GAAKnB,EAAOoB,IAAI,CAC/B,OAAOlB,EAAAmB,aAAA,CAAChB,EAAa,CAACS,UAAWA,EAAWC,QAASA,EAASC,eAAgBA,CAAe,GAG9F,GAAIC,EAAME,MAAM,GAAKnB,EAAOsB,KAAK,CAAE,CAClC,GAAM,CAAEC,gBAAAA,CAAAA,CAAiB,CAAGN,EAE5B,OAAOf,EAAAmB,aAAA,CAAClB,EAAc,CAACW,UAAWA,EAAWC,QAASA,EAASQ,gBAAiBA,EAAiBP,eAAgBA,CAAe,EACjI,CAEA,GAAIC,EAAME,MAAM,GAAKnB,EAAOwB,QAAQ,CACnC,OAAOtB,EAAAmB,aAAA,CAACjB,EAAiB,CAACU,UAAWA,EAAWC,QAASA,EAASC,eAAgBA,CAAe,EAGlG,OAAM,AAAIS,MAAM,4BACjB\"}"}