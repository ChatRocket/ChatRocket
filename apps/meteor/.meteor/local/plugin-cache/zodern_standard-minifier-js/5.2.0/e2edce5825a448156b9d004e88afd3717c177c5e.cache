{"code":"function module(e,o,l){let a,t,n,r,s,i,u,d,m,c,p,k,b,h;l.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){a=e}},0),l.export({useFileUploadDropTarget:()=>y}),l.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){t=e}},0),l.link(\"@rocket.chat/ui-contexts\",{useSetting(e){n=e},useTranslation(e){r=e},useUser(e){s=e}},1),l.link(\"react\",{useCallback(e){i=e},useMemo(e){u=e}},2),l.link(\"../../../../hooks/omnichannel/useIsRoomOverMacLimit\",{useIsRoomOverMacLimit(e){d=e}},3),l.link(\"../../../../hooks/useReactiveValue\",{useReactiveValue(e){m=e}},4),l.link(\"../../../../lib/rooms/roomCoordinator\",{roomCoordinator(e){c=e}},5),l.link(\"../../contexts/ChatContext\",{useChat(e){p=e}},6),l.link(\"../../contexts/RoomContext\",{useRoom(e){k=e},useRoomSubscription(e){b=e}},7),l.link(\"./useDropTarget\",{useDropTarget(e){h=e}},8);let y=()=>{let e=k(),{triggerProps:o,overlayProps:y}=h(),C=d(e),f=r(),v=n(\"FileUpload_Enabled\"),R=s(),x=m(i(()=>!c.readOnly(e._id,{username:null==R?void 0:R.username}),[e._id,null==R?void 0:R.username])),g=p(),T=b(),w=t(async e=>{let{getMimeType:o}=await l.dynamicImport(\"../../../../../app/utils/lib/mimeTypes\"),a=(()=>{let o=[],l=new Set;return e.forEach(e=>{let a=e.size;l.has(a)||(o.push(e),l.add(a))}),o})(),t=Array.from(a).map(e=>(Object.defineProperty(e,\"type\",{value:o(e.type,e.name)}),e));null==g||g.flows.uploadFiles(t)}),D=u(()=>!v||C?a({enabled:!1,reason:f(\"FileUpload_Disabled\")},y):x&&T?a({enabled:!0,onFileDrop:w},y):a({enabled:!1,reason:f(\"error-not-allowed\")},y),[x,v,C,w,y,T,f]);return[o,D]}}","map":"{\"version\":3,\"sources\":[\"client/views/room/body/hooks/useFileUploadDropTarget.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport { useSetting, useTranslation, useUser } from '@rocket.chat/ui-contexts';\\nimport type { ReactNode } from 'react';\\nimport type React from 'react';\\nimport { useCallback, useMemo } from 'react';\\n\\nimport { useIsRoomOverMacLimit } from '../../../../hooks/omnichannel/useIsRoomOverMacLimit';\\nimport { useReactiveValue } from '../../../../hooks/useReactiveValue';\\nimport { roomCoordinator } from '../../../../lib/rooms/roomCoordinator';\\nimport { useChat } from '../../contexts/ChatContext';\\nimport { useRoom, useRoomSubscription } from '../../contexts/RoomContext';\\nimport { useDropTarget } from './useDropTarget';\\n\\nexport const useFileUploadDropTarget = (): readonly [\\n\\tfileUploadTriggerProps: {\\n\\t\\tonDragEnter: (event: React.DragEvent<Element>) => void;\\n\\t},\\n\\tfileUploadOverlayProps: {\\n\\t\\tvisible: boolean;\\n\\t\\tonDismiss: () => void;\\n\\t\\tenabled: boolean;\\n\\t\\treason?: ReactNode;\\n\\t},\\n] => {\\n\\tconst room = useRoom();\\n\\tconst { triggerProps, overlayProps } = useDropTarget();\\n\\n\\tconst isRoomOverMacLimit = useIsRoomOverMacLimit(room);\\n\\n\\tconst t = useTranslation();\\n\\n\\tconst fileUploadEnabled = useSetting<boolean>('FileUpload_Enabled');\\n\\tconst user = useUser();\\n\\tconst fileUploadAllowedForUser = useReactiveValue(\\n\\t\\tuseCallback(() => !roomCoordinator.readOnly(room._id, { username: user?.username }), [room._id, user?.username]),\\n\\t);\\n\\n\\tconst chat = useChat();\\n\\tconst subscription = useRoomSubscription();\\n\\n\\tconst onFileDrop = useMutableCallback(async (files: File[]) => {\\n\\t\\tconst { getMimeType } = await import('../../../../../app/utils/lib/mimeTypes');\\n\\t\\tconst getUniqueFiles = () => {\\n\\t\\t\\tconst uniqueFiles: File[] = [];\\n\\t\\t\\tconst st: Set<number> = new Set();\\n\\t\\t\\tfiles.forEach((file) => {\\n\\t\\t\\t\\tconst key = file.size;\\n\\t\\t\\t\\tif (!st.has(key)) {\\n\\t\\t\\t\\t\\tuniqueFiles.push(file);\\n\\t\\t\\t\\t\\tst.add(key);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t\\treturn uniqueFiles;\\n\\t\\t};\\n\\t\\tconst uniqueFiles = getUniqueFiles();\\n\\n\\t\\tconst uploads = Array.from(uniqueFiles).map((file) => {\\n\\t\\t\\tObject.defineProperty(file, 'type', { value: getMimeType(file.type, file.name) });\\n\\t\\t\\treturn file;\\n\\t\\t});\\n\\n\\t\\tchat?.flows.uploadFiles(uploads);\\n\\t});\\n\\n\\tconst allOverlayProps = useMemo(() => {\\n\\t\\tif (!fileUploadEnabled || isRoomOverMacLimit) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tenabled: false,\\n\\t\\t\\t\\treason: t('FileUpload_Disabled'),\\n\\t\\t\\t\\t...overlayProps,\\n\\t\\t\\t} as const;\\n\\t\\t}\\n\\n\\t\\tif (!fileUploadAllowedForUser || !subscription) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tenabled: false,\\n\\t\\t\\t\\treason: t('error-not-allowed'),\\n\\t\\t\\t\\t...overlayProps,\\n\\t\\t\\t} as const;\\n\\t\\t}\\n\\n\\t\\treturn {\\n\\t\\t\\tenabled: true,\\n\\t\\t\\tonFileDrop,\\n\\t\\t\\t...overlayProps,\\n\\t\\t} as const;\\n\\t}, [fileUploadAllowedForUser, fileUploadEnabled, isRoomOverMacLimit, onFileDrop, overlayProps, subscription, t]);\\n\\n\\treturn [triggerProps, allOverlayProps] as const;\\n};\\n\",null],\"names\":[\"_objectSpread\",\"useMutableCallback\",\"useSetting\",\"useTranslation\",\"useUser\",\"useCallback\",\"useMemo\",\"useIsRoomOverMacLimit\",\"useReactiveValue\",\"roomCoordinator\",\"useChat\",\"useRoom\",\"useRoomSubscription\",\"useDropTarget\",\"module\",\"link\",\"default\",\"v\",\"export\",\"useFileUploadDropTarget\",\"room\",\"triggerProps\",\"overlayProps\",\"isRoomOverMacLimit\",\"t\",\"fileUploadEnabled\",\"user\",\"fileUploadAllowedForUser\",\"readOnly\",\"_id\",\"username\",\"chat\",\"subscription\",\"onFileDrop\",\"files\",\"getMimeType\",\"dynamicImport\",\"uniqueFiles\",\"getUniqueFiles\",\"st\",\"Set\",\"forEach\",\"file\",\"key\",\"size\",\"has\",\"push\",\"add\",\"uploads\",\"Array\",\"from\",\"map\",\"Object\",\"defineProperty\",\"value\",\"type\",\"name\",\"flows\",\"uploadFiles\",\"allOverlayProps\",\"enabled\",\"reason\"],\"mappings\":\"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\"}"}