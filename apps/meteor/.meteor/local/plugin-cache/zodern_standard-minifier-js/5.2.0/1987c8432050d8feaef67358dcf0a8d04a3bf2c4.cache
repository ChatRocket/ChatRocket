{"code":"function module(e,t,r){let a,l,u,n,i;r.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){a=e}},0),r.export({useAvatarTemplate:()=>d}),r.link(\"@rocket.chat/ui-avatar\",{RoomAvatar(e){l=e}},0),r.link(\"@rocket.chat/ui-contexts\",{useUserPreference(e){u=e}},1),r.link(\"react\",{default(e){n=e},useMemo(e){i=e}},2);let d=(e,t)=>{let r=u(\"sidebarViewMode\"),d=u(\"sidebarDisplayAvatar\"),c=null!=e?e:r,o=null!=t?t:d;return i(()=>{if(!o)return null;let e=(()=>{switch(c){case\"extended\":return\"x36\";case\"medium\":return\"x28\";default:return\"x16\"}})();return t=>n.createElement(l,{size:e,room:a(a({},t),{},{_id:t.rid||t._id,type:t.t})})},[o,c])}}","map":"{\"version\":3,\"sources\":[\"client/sidebar/hooks/useAvatarTemplate.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom } from '@rocket.chat/core-typings';\\nimport { RoomAvatar } from '@rocket.chat/ui-avatar';\\nimport { useUserPreference } from '@rocket.chat/ui-contexts';\\nimport type { ComponentType } from 'react';\\nimport React, { useMemo } from 'react';\\n\\nexport const useAvatarTemplate = (\\n\\tsidebarViewMode?: 'extended' | 'medium' | 'condensed',\\n\\tsidebarDisplayAvatar?: boolean,\\n): null | ComponentType<IRoom & { rid: string }> => {\\n\\tconst sidebarViewModeFromSettings = useUserPreference<'extended' | 'medium' | 'condensed'>('sidebarViewMode');\\n\\tconst sidebarDisplayAvatarFromSettings = useUserPreference('sidebarDisplayAvatar');\\n\\n\\tconst viewMode = sidebarViewMode ?? sidebarViewModeFromSettings;\\n\\tconst displayAvatar = sidebarDisplayAvatar ?? sidebarDisplayAvatarFromSettings;\\n\\treturn useMemo(() => {\\n\\t\\tif (!displayAvatar) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\tconst size = ((): 'x36' | 'x28' | 'x16' => {\\n\\t\\t\\tswitch (viewMode) {\\n\\t\\t\\t\\tcase 'extended':\\n\\t\\t\\t\\t\\treturn 'x36';\\n\\t\\t\\t\\tcase 'medium':\\n\\t\\t\\t\\t\\treturn 'x28';\\n\\t\\t\\t\\tcase 'condensed':\\n\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\treturn 'x16';\\n\\t\\t\\t}\\n\\t\\t})();\\n\\n\\t\\tconst renderRoomAvatar: ComponentType<IRoom & { rid: string }> = (room) => (\\n\\t\\t\\t<RoomAvatar size={size} room={{ ...room, _id: room.rid || room._id, type: room.t }} />\\n\\t\\t);\\n\\n\\t\\treturn renderRoomAvatar;\\n\\t}, [displayAvatar, viewMode]);\\n};\\n\",null],\"names\":[\"_objectSpread\",\"RoomAvatar\",\"useUserPreference\",\"React\",\"useMemo\",\"module\",\"link\",\"default\",\"v\",\"export\",\"useAvatarTemplate\",\"sidebarViewMode\",\"sidebarDisplayAvatar\",\"sidebarViewModeFromSettings\",\"sidebarDisplayAvatarFromSettings\",\"viewMode\",\"displayAvatar\",\"size\",\"room\",\"createElement\",\"_id\",\"rid\",\"type\",\"t\"],\"mappings\":\"2BACAA,EAAoDC,EAAAC,EAAAC,EAAAC,EAA3CC,EAAYC,IAAM,CAAA,uCAAyB,CAAAC,QAAAC,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAApDH,EAAOI,MAAE,CAAA,CAAAC,kBAAkBA,IAAAA,CAAyB,GAAAL,EAAAC,IAAA,CAAA,yBAAA,CAAAL,WAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2BAAA,CAAAJ,kBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAC,QAAAC,CAAA,EAAAL,EAAAK,CAAA,EAAAJ,QAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAK7C,IAAME,EAAoBA,CAChCC,EACAC,KAEA,IAAMC,EAA8BX,EAAuD,mBACrFY,EAAmCZ,EAAkB,wBAErDa,EAAWJ,MAAAA,EAAAA,EAAmBE,EAC9BG,EAAgBJ,MAAAA,EAAAA,EAAwBE,EAC9C,OAAOV,EAAQ,KACd,GAAI,CAACY,EACJ,OAAO,KAGR,IAAMC,EAAO,AAAC,CAAA,KACb,OAAQF,GACP,IAAK,WACJ,MAAO,KACR,KAAK,SACJ,MAAO,KACR,SAEC,MAAO,KACT,CACD,CAAA,IAMA,OAJkEG,GACjEf,EAAAgB,aAAA,CAAClB,EAAU,CAACgB,KAAMA,EAAMC,KAAIlB,EAAAA,EAAA,CAAA,EAAOkB,GAAI,CAAA,EAAA,CAAEE,IAAKF,EAAKG,GAAG,EAAIH,EAAKE,GAAG,CAAEE,KAAMJ,EAAKK,CAAAA,AAAC,EAAG,EAIrF,EAAG,CAACP,EAAeD,EAAS,CAC7B\"}"}