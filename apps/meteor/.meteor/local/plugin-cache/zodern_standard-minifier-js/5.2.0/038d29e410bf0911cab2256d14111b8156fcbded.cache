{"code":"function module(e,t,s){let o,r,i,n,a,d,c,u,l,m,p,v,h;s.export({useAddUserAction:()=>U}),s.link(\"@rocket.chat/core-typings\",{isRoomFederated(e){o=e}},0),s.link(\"@rocket.chat/fuselage-hooks\",{useEffectEvent(e){r=e}},1),s.link(\"@rocket.chat/ui-contexts\",{useTranslation(e){i=e},useUser(e){n=e},useUserRoom(e){a=e},useUserSubscription(e){d=e},useToastMessageDispatch(e){c=e},useAtLeastOnePermission(e){u=e},useEndpoint(e){l=e}},2),s.link(\"react\",{useMemo(e){m=e}},3),s.link(\"../../../../../lib/federation/Federation\",{\"*\"(e){p=e}},4),s.link(\"../../../contextualBar/RoomMembers/AddUsers/AddMatrixUsers/useAddMatrixUsers\",{useAddMatrixUsers(e){v=e}},5),s.link(\"../../../lib/getRoomDirectives\",{getRoomDirectives(e){h=e}},6);let k={c:\"/v1/channels.invite\",p:\"/v1/groups.invite\"},U=(e,t,s)=>{let U=i(),g=a(t),y=n(),A=d(t),b=c(),{username:f,_id:x}=e;if(!g)throw Error(\"Room not provided\");let M=u(m(()=>[(null==g?void 0:g.t)===\"p\"?\"add-user-to-any-p-room\":\"add-user-to-any-c-room\",\"add-user-to-joined-room\"],[null==g?void 0:g.t]),t),R=g&&e&&o(g)?p.isEditableByTheUser(y||void 0,g,A):M,{roomCanInvite:E}=h({room:g,showingUserId:x,userSubscription:A}),w=l(\"POST\",k[\"p\"===g.t?\"p\":\"c\"]),S=r(async e=>{let{users:o}=e,[r]=o;await w({roomId:t,username:r}),null==s||s()}),T=v(),D=r(async()=>{try{let e=[f];o(g)?T.mutate({users:e,handleSave:S}):await S({users:e}),b({type:\"success\",message:U(\"User_added\")})}catch(e){b({type:\"error\",message:e})}}),B=m(()=>E&&R&&!0!==g.archived?{content:U(\"add-to-room\"),icon:\"user-plus\",onClick:D,type:\"management\"}:void 0,[E,R,g.archived,U,D]);return B}}","map":"{\"version\":3,\"sources\":[\"client/views/room/hooks/useUserInfoActions/actions/useAddUserAction.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, IUser } from '@rocket.chat/core-typings';\\nimport { isRoomFederated } from '@rocket.chat/core-typings';\\nimport { useEffectEvent } from '@rocket.chat/fuselage-hooks';\\nimport {\\n\\tuseTranslation,\\n\\tuseUser,\\n\\tuseUserRoom,\\n\\tuseUserSubscription,\\n\\tuseToastMessageDispatch,\\n\\tuseAtLeastOnePermission,\\n\\tuseEndpoint,\\n} from '@rocket.chat/ui-contexts';\\nimport { useMemo } from 'react';\\n\\nimport * as Federation from '../../../../../lib/federation/Federation';\\nimport { useAddMatrixUsers } from '../../../contextualBar/RoomMembers/AddUsers/AddMatrixUsers/useAddMatrixUsers';\\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\\nimport type { UserInfoAction } from '../useUserInfoActions';\\n\\nconst inviteUserEndpoints = {\\n\\tc: '/v1/channels.invite',\\n\\tp: '/v1/groups.invite',\\n} as const;\\n\\nexport const useAddUserAction = (\\n\\tuser: Pick<IUser, '_id' | 'username'>,\\n\\trid: IRoom['_id'],\\n\\treload?: () => void,\\n): UserInfoAction | undefined => {\\n\\tconst t = useTranslation();\\n\\tconst room = useUserRoom(rid);\\n\\tconst currentUser = useUser();\\n\\tconst subscription = useUserSubscription(rid);\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\n\\tconst { username, _id: uid } = user;\\n\\n\\tif (!room) {\\n\\t\\tthrow Error('Room not provided');\\n\\t}\\n\\n\\tconst hasPermissionToAddUsers = useAtLeastOnePermission(\\n\\t\\tuseMemo(() => [room?.t === 'p' ? 'add-user-to-any-p-room' : 'add-user-to-any-c-room', 'add-user-to-joined-room'], [room?.t]),\\n\\t\\trid,\\n\\t);\\n\\n\\tconst userCanAdd =\\n\\t\\troom && user && isRoomFederated(room)\\n\\t\\t\\t? Federation.isEditableByTheUser(currentUser || undefined, room, subscription)\\n\\t\\t\\t: hasPermissionToAddUsers;\\n\\n\\tconst { roomCanInvite } = getRoomDirectives({ room, showingUserId: uid, userSubscription: subscription });\\n\\n\\tconst inviteUser = useEndpoint('POST', inviteUserEndpoints[room.t === 'p' ? 'p' : 'c']);\\n\\n\\tconst handleAddUser = useEffectEvent(async ({ users }) => {\\n\\t\\tconst [username] = users;\\n\\t\\tawait inviteUser({ roomId: rid, username });\\n\\t\\treload?.();\\n\\t});\\n\\n\\tconst addClickHandler = useAddMatrixUsers();\\n\\n\\tconst addUserOptionAction = useEffectEvent(async () => {\\n\\t\\ttry {\\n\\t\\t\\tconst users = [username as string];\\n\\t\\t\\tif (isRoomFederated(room)) {\\n\\t\\t\\t\\taddClickHandler.mutate({\\n\\t\\t\\t\\t\\tusers,\\n\\t\\t\\t\\t\\thandleSave: handleAddUser,\\n\\t\\t\\t\\t});\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tawait handleAddUser({ users });\\n\\t\\t\\t}\\n\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('User_added') });\\n\\t\\t} catch (error) {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error as Error });\\n\\t\\t}\\n\\t});\\n\\n\\tconst addUserOption = useMemo(\\n\\t\\t() =>\\n\\t\\t\\troomCanInvite && userCanAdd && room.archived !== true\\n\\t\\t\\t\\t? {\\n\\t\\t\\t\\t\\t\\tcontent: t('add-to-room'),\\n\\t\\t\\t\\t\\t\\ticon: 'user-plus' as const,\\n\\t\\t\\t\\t\\t\\tonClick: addUserOptionAction,\\n\\t\\t\\t\\t\\t\\ttype: 'management' as const,\\n\\t\\t\\t\\t  }\\n\\t\\t\\t\\t: undefined,\\n\\t\\t[roomCanInvite, userCanAdd, room.archived, t, addUserOptionAction],\\n\\t);\\n\\n\\treturn addUserOption;\\n};\\n\",null],\"names\":[\"isRoomFederated\",\"useEffectEvent\",\"useTranslation\",\"useUser\",\"useUserRoom\",\"useUserSubscription\",\"useToastMessageDispatch\",\"useAtLeastOnePermission\",\"useEndpoint\",\"useMemo\",\"Federation\",\"useAddMatrixUsers\",\"getRoomDirectives\",\"module\",\"export\",\"useAddUserAction\",\"link\",\"v\",\"inviteUserEndpoints\",\"c\",\"p\",\"user\",\"rid\",\"reload\",\"t\",\"room\",\"currentUser\",\"subscription\",\"dispatchToastMessage\",\"username\",\"_id\",\"uid\",\"Error\",\"hasPermissionToAddUsers\",\"userCanAdd\",\"isEditableByTheUser\",\"undefined\",\"roomCanInvite\",\"showingUserId\",\"userSubscription\",\"inviteUser\",\"handleAddUser\",\"_ref\",\"users\",\"roomId\",\"addClickHandler\",\"addUserOptionAction\",\"mutate\",\"handleSave\",\"type\",\"message\",\"error\",\"addUserOption\",\"archived\",\"content\",\"icon\",\"onClick\"],\"mappings\":\"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\"}"}