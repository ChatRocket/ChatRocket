{"code":"Package[\"core-runtime\"].queue(\"github-oauth\",function(){Package.meteor.Meteor,Package.meteor.global,Package.meteor.meteorEnv;var e,t=Package.oauth.OAuth,i=Package.random.Random,o=Package[\"accounts-base\"].Accounts,a=Package[\"service-configuration\"].ServiceConfiguration,n=Package.modules.meteorInstall;return Package.modules.meteorBabelHelpers,Package.promise.Promise,Package[\"ecmascript-runtime-client\"].Symbol,Package[\"ecmascript-runtime-client\"].Map,Package[\"ecmascript-runtime-client\"].Set,{export:function(){return{Github:e}},require:n({node_modules:{meteor:{\"github-oauth\":{\"github_client.js\":function n(){(e={}).requestCredential=function(e,n){n||\"function\"!=typeof e||(n=e,e={});var r,c=a.configurations.findOne({service:\"github\"});if(!c){n&&n(new a.ConfigError);return}var u=i.secret(),l=(e&&e.requestPermissions||[\"user:email\"]).map(encodeURIComponent).join(\"+\"),s=t._loginStyle(\"github\",c,e),g=\"\";null!==(r=o._options)&&void 0!==r&&r.forbidClientAccountCreation&&(g=\"&allow_signup=false\");var m=\"https://github.com/login/oauth/authorize?client_id=\"+c.clientId+\"&scope=\"+l+\"&redirect_uri=\"+t._redirectUri(\"github\",c)+\"&state=\"+t._stateParam(s,u,e&&e.redirectUrl)+g;t.launchLogin({loginService:\"github\",loginStyle:s,loginUrl:m,credentialRequestCompleteCallback:n,credentialToken:u,popupOptions:{width:900,height:450}})}}}}}},{extensions:[\".js\",\".json\"]}),eagerModulePaths:[\"/node_modules/meteor/github-oauth/github_client.js\"]}});","map":"{\"version\":3,\"sources\":[\"packages/github-oauth/github_client.js\",\"<anon>\"],\"sourcesContent\":[\"Github = {};\\n\\n// Request Github credentials for the user\\n// @param options {optional}\\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\\n//   completion. Takes one argument, credentialToken on success, or Error on\\n//   error.\\nGithub.requestCredential = (options, credentialRequestCompleteCallback) => {\\n  // support both (options, callback) and (callback).\\n  if (!credentialRequestCompleteCallback && typeof options === 'function') {\\n    credentialRequestCompleteCallback = options;\\n    options = {};\\n  }\\n\\n  const config = ServiceConfiguration.configurations.findOne({service: 'github'});\\n  if (!config) {\\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(\\n      new ServiceConfiguration.ConfigError());\\n    return;\\n  }\\n  const credentialToken = Random.secret();\\n\\n  const scope = (options && options.requestPermissions) || ['user:email'];\\n  const flatScope = scope.map(encodeURIComponent).join('+');\\n\\n  const loginStyle = OAuth._loginStyle('github', config, options);\\n\\n  let allowSignup = '';\\n  if (Accounts._options?.forbidClientAccountCreation) {\\n    allowSignup = '&allow_signup=false'; // https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps#parameters\\n  }\\n\\n  const loginUrl =\\n    'https://github.com/login/oauth/authorize' +\\n    `?client_id=${config.clientId}` +\\n    `&scope=${flatScope}` +\\n    `&redirect_uri=${OAuth._redirectUri('github', config)}` +\\n    `&state=${OAuth._stateParam(loginStyle, credentialToken, options && options.redirectUrl)}` +\\n    allowSignup;\\n\\n  OAuth.launchLogin({\\n    loginService: \\\"github\\\",\\n    loginStyle,\\n    loginUrl,\\n    credentialRequestCompleteCallback,\\n    credentialToken,\\n    popupOptions: {width: 900, height: 450}\\n  });\\n};\\n\",null],\"names\":[\"Github\",\"requestCredential\",\"options\",\"credentialRequestCompleteCallback\",\"_Accounts$_options\",\"config\",\"ServiceConfiguration\",\"configurations\",\"findOne\",\"service\",\"ConfigError\",\"credentialToken\",\"Random\",\"secret\",\"flatScope\",\"scope\",\"requestPermissions\",\"map\",\"encodeURIComponent\",\"join\",\"loginStyle\",\"OAuth\",\"_loginStyle\",\"allowSignup\",\"Accounts\",\"_options\",\"forbidClientAccountCreation\",\"loginUrl\",\"clientId\",\"_redirectUri\",\"_stateParam\",\"redirectUrl\",\"launchLogin\",\"loginService\",\"popupOptions\",\"width\",\"height\"],\"mappings\":\"mmBAOAA,AAPAA,CAAAA,EAAS,CAAC,CAAA,EAOHC,iBAAiB,CAAG,SAACC,CAAO,CAAEC,CAAiC,EAE/DA,GAAqC,AAAmB,YAAnB,OAAOD,IAC/CC,EAAoCD,EACpCA,EAAU,CAAC,GAGb,IAPyEE,EAOnEC,EAASC,EAAqBC,cAAc,CAACC,OAAO,CAAC,CAACC,QAAS,QAAQ,GAC7E,GAAI,CAACJ,EAAQ,CACXF,GAAqCA,EACnC,IAAIG,EAAqBI,WAAW,EACtC,MACF,CACA,IAAMC,EAAkBC,EAAOC,MAAM,GAG/BC,EAAYC,AADHb,CAAAA,GAAWA,EAAQc,kBAAkB,EAAK,CAAC,aAAa,AAAD,EAC9CC,GAAG,CAACC,oBAAoBC,IAAI,CAAC,KAE/CC,EAAaC,EAAMC,WAAW,CAAC,SAAUjB,EAAQH,GAEnDqB,EAAc,EACG,QAArBnB,CAAAA,EAAIoB,EAASC,QAAQ,AAARA,GAAQrB,AAAA,KAAA,IAAAA,GAAjBA,EAAmBsB,2BAA2B,EAChDH,CAAAA,EAAc,qBAAA,EAGhB,IAAMI,EACJ,sDACctB,EAAOuB,QAAQ,CAAE,UACrBd,EAAW,iBACJO,EAAMQ,YAAY,CAAC,SAAUxB,GAAS,UAC7CgB,EAAMS,WAAW,CAACV,EAAYT,EAAiBT,GAAWA,EAAQ6B,WAAW,EACvFR,EAEFF,EAAMW,WAAW,CAAC,CAChBC,aAAc,SACdb,WAAAA,EACAO,SAAAA,EACAxB,kCAAAA,EACAQ,gBAAAA,EACAuB,aAAc,CAACC,MAAO,IAAKC,OAAQ,GAAG,CACxC,EACF\"}"}