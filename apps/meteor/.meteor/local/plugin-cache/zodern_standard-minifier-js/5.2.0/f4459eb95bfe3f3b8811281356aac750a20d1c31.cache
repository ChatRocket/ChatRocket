{"code":"function module(t,i,n){n.link(\"@babel/runtime/helpers/createClass\",{default:function(t){e=t}},0),n.link(\"@babel/runtime/helpers/inheritsLoose\",{default:function(t){o=t}},1),n.export({ThreadsList:function(){return l}}),n.link(\"@rocket.chat/string-helpers\",{escapeRegExp:function(t){s=t}},0),n.link(\"./MessageList\",{MessageList:function(t){r=t}},1);var e,o,s,r,u=function(t,i){var n,e;return null!==(n=null===(e=t.replies)||void 0===e?void 0:e.includes(i))&&void 0!==n&&n},l=function(t){function i(i){var n;return(n=t.call(this)||this)._options=void 0,n._options=i,n}o(i,t);var n=i.prototype;return n.updateFilters=function(t){this._options=t,this.clear()},n.filter=function(t){var i=this._options.rid;if(t.rid!==i||\"number\"!=typeof t.tcount||\"following\"===this._options.type&&!u(t,this._options.uid))return!1;if(\"unread\"===this._options.type){var n=this._options.tunread;if(null==n||!n.includes(t._id))return!1}return!this._options.text||!!RegExp(s(this._options.text),\"i\").test(t.msg)},n.compare=function(t,i){var n,e;return(null!==(n=i.tlm)&&void 0!==n?n:i.ts).getTime()-(null!==(e=t.tlm)&&void 0!==e?e:t.ts).getTime()},e(i,[{key:\"options\",get:function(){return this._options}}])}(r)}","map":"{\"version\":3,\"sources\":[\"client/lib/lists/ThreadsList.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage, ISubscription, IUser } from '@rocket.chat/core-typings';\\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\\n\\nimport { MessageList } from './MessageList';\\n\\ntype ThreadMessage = Omit<IMessage, 'tcount'> & Required<Pick<IMessage, 'tcount'>>;\\n\\nexport type ThreadsListOptions = {\\n\\trid: IMessage['rid'];\\n\\ttext?: string;\\n} & (\\n\\t| {\\n\\t\\t\\ttype: 'unread';\\n\\t\\t\\ttunread: ISubscription['tunread'];\\n\\t  }\\n\\t| {\\n\\t\\t\\ttype: 'following';\\n\\t\\t\\tuid: IUser['_id'];\\n\\t  }\\n\\t| {\\n\\t\\t\\ttype: undefined;\\n\\t  }\\n);\\n\\nconst isThreadMessageInRoom = (message: IMessage, rid: IMessage['rid']): message is ThreadMessage =>\\n\\tmessage.rid === rid && typeof (message as ThreadMessage).tcount === 'number';\\n\\nconst isThreadFollowedByUser = (threadMessage: ThreadMessage, uid: IUser['_id']): boolean => threadMessage.replies?.includes(uid) ?? false;\\n\\nconst isThreadUnread = (threadMessage: ThreadMessage, tunread: ISubscription['tunread']): boolean =>\\n\\tBoolean(tunread?.includes(threadMessage._id));\\n\\nconst isThreadTextMatching = (threadMessage: ThreadMessage, regex: RegExp): boolean => regex.test(threadMessage.msg);\\n\\nexport class ThreadsList extends MessageList {\\n\\tpublic constructor(private _options: ThreadsListOptions) {\\n\\t\\tsuper();\\n\\t}\\n\\n\\tpublic get options(): ThreadsListOptions {\\n\\t\\treturn this._options;\\n\\t}\\n\\n\\tpublic updateFilters(options: ThreadsListOptions): void {\\n\\t\\tthis._options = options;\\n\\t\\tthis.clear();\\n\\t}\\n\\n\\tprotected filter(message: IMessage): boolean {\\n\\t\\tconst { rid } = this._options;\\n\\n\\t\\tif (!isThreadMessageInRoom(message, rid)) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tif (this._options.type === 'following') {\\n\\t\\t\\tconst { uid } = this._options;\\n\\t\\t\\tif (!isThreadFollowedByUser(message, uid)) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (this._options.type === 'unread') {\\n\\t\\t\\tconst { tunread } = this._options;\\n\\t\\t\\tif (!isThreadUnread(message, tunread)) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (this._options.text) {\\n\\t\\t\\tconst regex = new RegExp(escapeRegExp(this._options.text), 'i');\\n\\t\\t\\tif (!isThreadTextMatching(message, regex)) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\tprotected compare(a: IMessage, b: IMessage): number {\\n\\t\\treturn (b.tlm ?? b.ts).getTime() - (a.tlm ?? a.ts).getTime();\\n\\t}\\n}\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_createClass\",\"_inheritsLoose\",\"export\",\"ThreadsList\",\"escapeRegExp\",\"MessageList\",\"isThreadFollowedByUser\",\"threadMessage\",\"uid\",\"_threadMessage$replie\",\"_threadMessage$replie2\",\"replies\",\"includes\",\"_MessageList\",\"_options\",\"_this\",\"call\",\"_proto\",\"prototype\",\"updateFilters\",\"options\",\"clear\",\"filter\",\"message\",\"rid\",\"tcount\",\"type\",\"tunread\",\"_id\",\"text\",\"regex\",\"RegExp\",\"test\",\"msg\",\"compare\",\"a\",\"b\",\"_b$tlm\",\"_a$tlm\",\"tlm\",\"ts\",\"getTime\",\"key\",\"get\"],\"mappings\":\"uBACSA,EAAcC,IAAA,CAAM,qCAA8B,CAAAC,QAAA,SAAAC,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uCAAA,CAAAC,QAAA,SAAAC,CAAA,EAAAE,EAAAF,CAAA,CAAA,EAAA,GAA3DH,EAAOM,MAAE,CAAA,CAAAC,YAAc,WAAM,OAAAA,CAAA,CAAA,GAA8BP,EAAAC,IAAA,CAAA,8BAAA,CAAAO,aAAA,SAAAL,CAAA,EAAAK,EAAAL,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,gBAAA,CAAAQ,YAAA,SAAAN,CAAA,EAAAM,EAAAN,CAAA,CAAA,EAAA,GA0B3D,IA1BAC,EAA2DC,EAAAG,EAAAC,EA0BrDC,EAAyB,SAACC,CAA4B,CAAEC,CAAiB,EAAA,IAAAC,EAAAC,EAAA,OAAA,AAAkD,OAAlDD,CAAAA,EAAA,AAAmC,OAAnCC,CAAAA,EAAcH,EAAcI,OAAO,AAAPA,GAAOD,AAAA,KAAA,IAAAA,EAAA,KAAA,EAArBA,EAAuBE,QAAQ,CAACJ,EAAG,GAACC,AAAA,KAAA,IAAAA,GAAAA,CAAS,EAO7HN,EAAY,SAAAU,CAAA,EACxB,SAAAV,EAA2BW,CAA4B,EAAA,IAAAC,EAAA,MAC9CA,AAARA,CAAAA,EAAAF,EAAAG,IAAA,CAAA,IAAK,GAAE,IAAA,EADmBF,QAAA,CAAA,KAAA,EAAAC,EAAAD,QAAQ,CAARA,EAA4BC,CAEvD,CAACd,EAAAE,EAAAU,GAAA,IAAAI,EAAAd,EAAAe,SAAA,CA4CA,OA5CAD,EAMME,aAAa,CAAb,SAAcC,CAA2B,EAC/C,IAAI,CAACN,QAAQ,CAAGM,EAChB,IAAI,CAACC,KAAK,EACX,EAACJ,EAESK,MAAM,CAAN,SAAOC,CAAiB,EACjC,IAAQC,EAAQ,IAAI,CAACV,QAAQ,CAArBU,GAAG,CAEX,GA1BDD,AA0B4BA,EA1BpBC,GAAG,GA0B0BA,GA1Bd,AAA6C,UAA7C,OAAQD,AA0BHA,EA1B6BE,MAAM,EA8B1D,AAAuB,cAAvB,IAAI,CAACX,QAAQ,CAACY,IAAI,EAEjB,CAACpB,EAAuBiB,EADZ,IAAI,CAACT,QAAQ,CAArBN,GAAG,EAJX,MAAO,CAAA,EAUR,GAAI,AAAuB,WAAvB,IAAI,CAACM,QAAQ,CAACY,IAAI,CAAe,CACpC,IAAQC,EAAY,IAAI,CAACb,QAAQ,CAAzBa,OAAO,CACf,GAlCMA,MAkCuBA,IAlCvBA,AAkCuBA,EAlCdf,QAAQ,CAACL,AAkCJgB,EAlCkBK,GAAG,EAmCxC,MAAO,CAAA,CAET,OAEI,CAAA,IAAI,CAACd,QAAQ,CAACe,IAAI,IArC+DC,AAsCtE,AAAIC,OAAO3B,EAAa,IAAI,CAACU,QAAQ,CAACe,IAAI,EAAG,KAtC+BG,IAAI,CAACzB,AAuCrEgB,EAvCmFU,GAAG,CA6ClH,EAAChB,EAESiB,OAAO,CAAP,SAAQC,CAAW,CAAEC,CAAW,EAAA,IAAAC,EAAAC,EACzC,MAAO,CAAA,AAAM,OAAND,CAAAA,EAACD,EAAEG,GAAG,AAAHA,GAAGF,AAAA,KAAA,IAAAA,EAAAA,EAAID,EAAEI,EAAE,AAAFA,EAAIC,OAAO,GAAK,CAAA,AAAM,OAANH,CAAAA,EAACH,EAAEI,GAAG,AAAHA,GAAGD,AAAA,KAAA,IAAAA,EAAAA,EAAIH,EAAEK,EAAE,AAAFA,EAAIC,OAAO,EAC3D,EAACzC,EAAAG,EAAA,CAAA,CAAAuC,IAAA,UAAAC,IA1CD,WACC,OAAO,IAAI,CAAC7B,QAAQ,AACrB,CAAC,EAAA,CAAA,EAP+BT\"}"}