{"code":"function module(e,o,t){let n,a,i,l,s,r,c,m,d,u,k,C,h,f,y,g,T,v,p,x,A,I;t.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){n=e}},0),t.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){a=e}},0),t.link(\"@rocket.chat/ui-contexts\",{useSetModal(e){i=e},useToastMessageDispatch(e){l=e},useUserId(e){s=e},usePermission(e){r=e},useMethod(e){c=e},useRouter(e){m=e}},1),t.link(\"react\",{default(e){d=e},useCallback(e){u=e}},2),t.link(\"react-i18next\",{useTranslation(e){k=e}},3),t.link(\"../../../../../definition/IRoomTypeConfig\",{UiTextContext(e){C=e}},4),t.link(\"../../../../components/GenericModal\",{GenericModalDoNotAskAgain(e){h=e}},5),t.link(\"../../../../hooks/useDontAskAgain\",{useDontAskAgain(e){f=e}},6),t.link(\"../../../../hooks/useEndpointAction\",{useEndpointAction(e){y=e}},7),t.link(\"../../../../lib/rooms/roomCoordinator\",{roomCoordinator(e){g=e}},8),t.link(\"../../../hooks/roomActions/useDeleteRoom\",{useDeleteRoom(e){T=e}},9),t.link(\"../../../room/contexts/RoomContext\",{useRoom(e){v=e}},10),t.link(\"../../../room/contexts/RoomToolboxContext\",{useRoomToolbox(e){p=e}},11),t.link(\"../../ConvertToChannelModal\",{default(e){x=e}},12),t.link(\"./LeaveTeam\",{default(e){A=e}},13),t.link(\"./TeamsInfo\",{default(e){I=e}},14),t.exportDefault(e=>{let{openEditing:o}=e,t=v(),{openTab:R,closeTab:b}=p(),{t:D}=k(),_=s(),E=f(\"hideRoom\"),M=l(),S=i(),w=a(()=>S()),O=y(\"POST\",\"/v1/teams.leave\"),P=y(\"POST\",\"/v1/teams.convertToChannel\"),j=c(\"hideRoom\"),G=m(),H=r(\"edit-team-channel\",t._id),{handleDelete:N,canDeleteRoom:U}=T(t),L=a(()=>{let e=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=Object.keys(e),a=Array.isArray(o)&&o.length>0?o:[];try{await O(n({teamId:t.teamId},a.length&&{rooms:a})),M({type:\"success\",message:D(\"Teams_left_team_successfully\")}),G.navigate(\"/home\")}catch(e){M({type:\"error\",message:e})}finally{w()}};S(d.createElement(A,{onConfirm:e,onCancel:w,teamId:t.teamId}))}),V=a(async()=>{let e=async()=>{try{await j(t._id),G.navigate(\"/home\")}catch(e){M({type:\"error\",message:e})}finally{w()}},o=g.getRoomDirectives(t.t).getUiText(C.HIDE_WARNING);if(E)return e();S(d.createElement(h,{variant:\"danger\",confirmText:D(\"Yes_hide_it\"),cancelText:D(\"Cancel\"),onClose:w,onCancel:w,onConfirm:e,dontAskAgain:{action:\"hideRoom\",label:D(\"Hide_room\")}},D(o,{postProcess:\"sprintf\",sprintf:[t.fname]})))}),W=u(()=>R(\"team-channels\"),[R]),Y=a(()=>{let e=async e=>{try{await P({teamId:t.teamId,roomsToRemove:Object.keys(e)}),M({type:\"success\",message:D(\"Success\")})}catch(e){M({type:\"error\",message:e})}finally{w()}};S(d.createElement(x,{onClose:w,onCancel:w,onConfirm:e,teamId:t.teamId,userId:_}))});return d.createElement(I,{room:t,onClickEdit:H?o:void 0,onClickClose:b,onClickDelete:U?N:void 0,onClickLeave:L,onClickHide:V,onClickViewChannels:W,onClickConvertToChannel:H?Y:void 0})})}","map":"{\"version\":3,\"sources\":[\"client/views/teams/contextualBar/info/TeamsInfoWithData.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, Serialized } from '@rocket.chat/core-typings';\\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\\nimport { useSetModal, useToastMessageDispatch, useUserId, usePermission, useMethod, useRouter } from '@rocket.chat/ui-contexts';\\nimport React, { useCallback } from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport { UiTextContext } from '../../../../../definition/IRoomTypeConfig';\\nimport { GenericModalDoNotAskAgain } from '../../../../components/GenericModal';\\nimport { useDontAskAgain } from '../../../../hooks/useDontAskAgain';\\nimport { useEndpointAction } from '../../../../hooks/useEndpointAction';\\nimport { roomCoordinator } from '../../../../lib/rooms/roomCoordinator';\\nimport { useDeleteRoom } from '../../../hooks/roomActions/useDeleteRoom';\\nimport { useRoom } from '../../../room/contexts/RoomContext';\\nimport { useRoomToolbox } from '../../../room/contexts/RoomToolboxContext';\\nimport ConvertToChannelModal from '../../ConvertToChannelModal';\\nimport LeaveTeam from './LeaveTeam';\\nimport TeamsInfo from './TeamsInfo';\\n\\ntype TeamsInfoWithLogicProps = {\\n\\topenEditing: () => void;\\n};\\n\\nconst TeamsInfoWithLogic = ({ openEditing }: TeamsInfoWithLogicProps) => {\\n\\tconst room = useRoom();\\n\\tconst { openTab, closeTab } = useRoomToolbox();\\n\\tconst { t } = useTranslation();\\n\\tconst userId = useUserId();\\n\\n\\tconst dontAskHideRoom = useDontAskAgain('hideRoom');\\n\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst setModal = useSetModal();\\n\\tconst closeModal = useMutableCallback(() => setModal());\\n\\n\\tconst leaveTeam = useEndpointAction('POST', '/v1/teams.leave');\\n\\tconst convertTeamToChannel = useEndpointAction('POST', '/v1/teams.convertToChannel');\\n\\n\\tconst hideTeam = useMethod('hideRoom');\\n\\n\\tconst router = useRouter();\\n\\n\\tconst canEdit = usePermission('edit-team-channel', room._id);\\n\\n\\t// const canLeave = usePermission('leave-team'); /* && room.cl !== false && joined */\\n\\n\\tconst { handleDelete, canDeleteRoom } = useDeleteRoom(room);\\n\\n\\tconst onClickLeave = useMutableCallback(() => {\\n\\t\\tconst onConfirm = async (selectedRooms: { [key: string]: Serialized<IRoom> & { isLastOwner?: boolean } } = {}) => {\\n\\t\\t\\tconst roomsLeft = Object.keys(selectedRooms);\\n\\t\\t\\tconst roomsToLeave = Array.isArray(roomsLeft) && roomsLeft.length > 0 ? roomsLeft : [];\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait leaveTeam({\\n\\t\\t\\t\\t\\tteamId: room.teamId!,\\n\\t\\t\\t\\t\\t...(roomsToLeave.length && { rooms: roomsToLeave }),\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Teams_left_team_successfully') });\\n\\t\\t\\t\\trouter.navigate('/home');\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t} finally {\\n\\t\\t\\t\\tcloseModal();\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\tsetModal(<LeaveTeam onConfirm={onConfirm} onCancel={closeModal} teamId={room.teamId!} />);\\n\\t});\\n\\n\\tconst handleHide = useMutableCallback(async () => {\\n\\t\\tconst hide = async () => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait hideTeam(room._id);\\n\\t\\t\\t\\trouter.navigate('/home');\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t} finally {\\n\\t\\t\\t\\tcloseModal();\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\tconst warnText = roomCoordinator.getRoomDirectives(room.t).getUiText(UiTextContext.HIDE_WARNING) as TranslationKey;\\n\\n\\t\\tif (dontAskHideRoom) {\\n\\t\\t\\treturn hide();\\n\\t\\t}\\n\\n\\t\\tsetModal(\\n\\t\\t\\t<GenericModalDoNotAskAgain\\n\\t\\t\\t\\tvariant='danger'\\n\\t\\t\\t\\tconfirmText={t('Yes_hide_it')}\\n\\t\\t\\t\\tcancelText={t('Cancel')}\\n\\t\\t\\t\\tonClose={closeModal}\\n\\t\\t\\t\\tonCancel={closeModal}\\n\\t\\t\\t\\tonConfirm={hide}\\n\\t\\t\\t\\tdontAskAgain={{\\n\\t\\t\\t\\t\\taction: 'hideRoom',\\n\\t\\t\\t\\t\\tlabel: t('Hide_room'),\\n\\t\\t\\t\\t}}\\n\\t\\t\\t>\\n\\t\\t\\t\\t{t(warnText, { postProcess: 'sprintf', sprintf: [room.fname] })}\\n\\t\\t\\t</GenericModalDoNotAskAgain>,\\n\\t\\t);\\n\\t});\\n\\n\\tconst onClickViewChannels = useCallback(() => openTab('team-channels'), [openTab]);\\n\\n\\tconst onClickConvertToChannel = useMutableCallback(() => {\\n\\t\\tconst onConfirm = async (roomsToRemove: { [key: string]: Serialized<IRoom> }) => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait convertTeamToChannel({\\n\\t\\t\\t\\t\\tteamId: room.teamId!,\\n\\t\\t\\t\\t\\troomsToRemove: Object.keys(roomsToRemove),\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Success') });\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t} finally {\\n\\t\\t\\t\\tcloseModal();\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\tsetModal(\\n\\t\\t\\t<ConvertToChannelModal onClose={closeModal} onCancel={closeModal} onConfirm={onConfirm} teamId={room.teamId!} userId={userId!} />,\\n\\t\\t);\\n\\t});\\n\\n\\treturn (\\n\\t\\t<TeamsInfo\\n\\t\\t\\troom={room}\\n\\t\\t\\tonClickEdit={canEdit ? openEditing : undefined}\\n\\t\\t\\tonClickClose={closeTab}\\n\\t\\t\\tonClickDelete={canDeleteRoom ? handleDelete : undefined}\\n\\t\\t\\tonClickLeave={onClickLeave}\\n\\t\\t\\tonClickHide={handleHide}\\n\\t\\t\\tonClickViewChannels={onClickViewChannels}\\n\\t\\t\\tonClickConvertToChannel={canEdit ? onClickConvertToChannel : undefined}\\n\\t\\t/>\\n\\t);\\n};\\n\\nexport default TeamsInfoWithLogic;\\n\",null],\"names\":[\"_objectSpread\",\"useMutableCallback\",\"useSetModal\",\"useToastMessageDispatch\",\"useUserId\",\"usePermission\",\"useMethod\",\"useRouter\",\"React\",\"useCallback\",\"useTranslation\",\"UiTextContext\",\"GenericModalDoNotAskAgain\",\"useDontAskAgain\",\"useEndpointAction\",\"roomCoordinator\",\"useDeleteRoom\",\"useRoom\",\"useRoomToolbox\",\"ConvertToChannelModal\",\"LeaveTeam\",\"TeamsInfo\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"openEditing\",\"room\",\"openTab\",\"closeTab\",\"t\",\"userId\",\"dontAskHideRoom\",\"dispatchToastMessage\",\"setModal\",\"closeModal\",\"leaveTeam\",\"convertTeamToChannel\",\"hideTeam\",\"router\",\"canEdit\",\"_id\",\"handleDelete\",\"canDeleteRoom\",\"onClickLeave\",\"onConfirm\",\"selectedRooms\",\"arguments\",\"length\",\"undefined\",\"roomsLeft\",\"Object\",\"keys\",\"roomsToLeave\",\"Array\",\"isArray\",\"teamId\",\"rooms\",\"type\",\"message\",\"navigate\",\"error\",\"createElement\",\"onCancel\",\"handleHide\",\"hide\",\"warnText\",\"getRoomDirectives\",\"getUiText\",\"HIDE_WARNING\",\"variant\",\"confirmText\",\"cancelText\",\"onClose\",\"dontAskAgain\",\"action\",\"label\",\"postProcess\",\"sprintf\",\"fname\",\"onClickViewChannels\",\"onClickConvertToChannel\",\"roomsToRemove\",\"onClickEdit\",\"onClickClose\",\"onClickDelete\",\"onClickHide\"],\"mappings\":\"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\"}"}