{"code":"function module(e,s,n){let t,i,o,a,d,u,r,l,c;n.export({useRoomList:()=>g}),n.link(\"@rocket.chat/fuselage-hooks\",{useDebouncedValue(e){t=e}},0),n.link(\"@rocket.chat/ui-contexts\",{useUserPreference(e){i=e},useUserSubscriptions(e){o=e},useSetting(e){a=e}},1),n.link(\"react\",{useMemo(e){d=e}},2),n.link(\"../../contexts/VideoConfContext\",{useVideoConfIncomingCalls(e){u=e}},3),n.link(\"../../hooks/omnichannel/useOmnichannelEnabled\",{useOmnichannelEnabled(e){r=e}},4),n.link(\"../../hooks/omnichannel/useQueuedInquiries\",{useQueuedInquiries(e){l=e}},5),n.link(\"./useQueryOptions\",{useQueryOptions(e){c=e}},6);let h={open:{$ne:!1}},p=[],m=[\"Incoming_Calls\",\"Incoming_Livechats\",\"Open_Livechats\",\"On_Hold_Chats\",\"Unread\",\"Favorites\",\"Teams\",\"Discussions\",\"Channels\",\"Direct_Messages\",\"Conversations\"],g=e=>{var s;let{collapsedGroups:n}=e,g=r(),S=i(\"sidebarGroupByType\"),v=i(\"sidebarShowFavorites\"),C=null!==(s=i(\"sidebarSectionsOrder\"))&&void 0!==s?s:m,w=a(\"Discussion_enabled\"),_=i(\"sidebarShowUnread\"),b=c(),k=o(h,b),z=l(),L=u(),O=z.enabled?z.queue:p,{groupsCount:f,groupsList:I,roomList:D}=t(d(()=>{let e=e=>null==n?void 0:n.includes(e),s=new Set,t=new Set,i=new Set,o=new Set,a=new Set,d=new Set,u=new Set,r=new Set,l=new Set,c=new Set;k.forEach(e=>e.archived?void 0:L.find(s=>s.rid===e.rid)?s.add(e):_&&(e.alert||e.unread)?a.add(e):v&&e.f?t.add(e):S&&e.teamMain?i.add(e):S&&w&&e.prid?r.add(e):((\"c\"===e.t||\"p\"===e.t)&&d.add(e),\"l\"===e.t&&e.onHold)?g&&c.add(e):\"l\"===e.t?g&&o.add(e):void(\"d\"===e.t&&u.add(e),l.add(e)));let h=new Map;s.size&&h.set(\"Incoming_Calls\",s),g&&z.enabled&&O.length&&h.set(\"Incoming_Livechats\",new Set(O)),g&&o.size&&h.set(\"Open_Livechats\",o),g&&c.size&&h.set(\"On_Hold_Chats\",c),_&&a.size&&h.set(\"Unread\",a),v&&t.size&&h.set(\"Favorites\",t),S&&i.size&&h.set(\"Teams\",i),S&&w&&r.size&&h.set(\"Discussions\",r),S&&d.size&&h.set(\"Channels\",d),S&&u.size&&h.set(\"Direct_Messages\",u),S||h.set(\"Conversations\",l);let{groupsCount:p,groupsList:m,roomList:b}=C.reduce((s,n)=>{let t=h.get(n);return t&&((s.groupsList.push(n),e(n))?s.groupsCount.push(0):(s.groupsCount.push(t.size),s.roomList.push(...t))),s},{groupsCount:[],groupsList:[],roomList:[]});return{groupsCount:p,groupsList:m,roomList:b}},[k,g,z.enabled,O,_,v,S,w,C,n,L]),50);return{roomList:D,groupsCount:f,groupsList:I}}}","map":"{\"version\":3,\"sources\":[\"client/sidebarv2/hooks/useRoomList.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { ILivechatInquiryRecord, IRoom, ISubscription } from '@rocket.chat/core-typings';\\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\\nimport { useUserPreference, useUserSubscriptions, useSetting } from '@rocket.chat/ui-contexts';\\nimport { useMemo } from 'react';\\n\\nimport { useVideoConfIncomingCalls } from '../../contexts/VideoConfContext';\\nimport { useOmnichannelEnabled } from '../../hooks/omnichannel/useOmnichannelEnabled';\\nimport { useQueuedInquiries } from '../../hooks/omnichannel/useQueuedInquiries';\\nimport { useQueryOptions } from './useQueryOptions';\\n\\nconst query = { open: { $ne: false } };\\n\\nconst emptyQueue: ILivechatInquiryRecord[] = [];\\n\\nconst order = [\\n\\t'Incoming_Calls',\\n\\t'Incoming_Livechats',\\n\\t'Open_Livechats',\\n\\t'On_Hold_Chats',\\n\\t'Unread',\\n\\t'Favorites',\\n\\t'Teams',\\n\\t'Discussions',\\n\\t'Channels',\\n\\t'Direct_Messages',\\n\\t'Conversations',\\n] as const;\\n\\nexport const useRoomList = ({\\n\\tcollapsedGroups,\\n}: {\\n\\tcollapsedGroups?: string[];\\n}): {\\n\\troomList: Array<ISubscription & IRoom>;\\n\\tgroupsCount: number[];\\n\\tgroupsList: TranslationKey[];\\n} => {\\n\\tconst showOmnichannel = useOmnichannelEnabled();\\n\\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\\n\\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\\n\\tconst sidebarOrder = useUserPreference<typeof order>('sidebarSectionsOrder') ?? order;\\n\\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\\n\\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\\n\\n\\tconst options = useQueryOptions();\\n\\n\\tconst rooms = useUserSubscriptions(query, options);\\n\\n\\tconst inquiries = useQueuedInquiries();\\n\\n\\tconst incomingCalls = useVideoConfIncomingCalls();\\n\\n\\tconst queue = inquiries.enabled ? inquiries.queue : emptyQueue;\\n\\n\\tconst { groupsCount, groupsList, roomList } = useDebouncedValue(\\n\\t\\tuseMemo(() => {\\n\\t\\t\\tconst isCollapsed = (groupTitle: string) => collapsedGroups?.includes(groupTitle);\\n\\n\\t\\t\\tconst incomingCall = new Set();\\n\\t\\t\\tconst favorite = new Set();\\n\\t\\t\\tconst team = new Set();\\n\\t\\t\\tconst omnichannel = new Set();\\n\\t\\t\\tconst unread = new Set();\\n\\t\\t\\tconst channels = new Set();\\n\\t\\t\\tconst direct = new Set();\\n\\t\\t\\tconst discussion = new Set();\\n\\t\\t\\tconst conversation = new Set();\\n\\t\\t\\tconst onHold = new Set();\\n\\n\\t\\t\\trooms.forEach((room) => {\\n\\t\\t\\t\\tif (room.archived) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (incomingCalls.find((call) => call.rid === room.rid)) {\\n\\t\\t\\t\\t\\treturn incomingCall.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (sidebarShowUnread && (room.alert || room.unread)) {\\n\\t\\t\\t\\t\\treturn unread.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (favoritesEnabled && room.f) {\\n\\t\\t\\t\\t\\treturn favorite.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (sidebarGroupByType && room.teamMain) {\\n\\t\\t\\t\\t\\treturn team.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\\n\\t\\t\\t\\t\\treturn discussion.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (room.t === 'c' || room.t === 'p') {\\n\\t\\t\\t\\t\\tchannels.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (room.t === 'l' && room.onHold) {\\n\\t\\t\\t\\t\\treturn showOmnichannel && onHold.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (room.t === 'l') {\\n\\t\\t\\t\\t\\treturn showOmnichannel && omnichannel.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (room.t === 'd') {\\n\\t\\t\\t\\t\\tdirect.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tconversation.add(room);\\n\\t\\t\\t});\\n\\n\\t\\t\\tconst groups = new Map<string, Set<any>>();\\n\\t\\t\\tincomingCall.size && groups.set('Incoming_Calls', incomingCall);\\n\\n\\t\\t\\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', new Set(queue));\\n\\t\\t\\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\\n\\t\\t\\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\\n\\n\\t\\t\\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\\n\\n\\t\\t\\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\\n\\n\\t\\t\\tsidebarGroupByType && team.size && groups.set('Teams', team);\\n\\n\\t\\t\\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\\n\\n\\t\\t\\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\\n\\n\\t\\t\\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\\n\\n\\t\\t\\t!sidebarGroupByType && groups.set('Conversations', conversation);\\n\\n\\t\\t\\tconst { groupsCount, groupsList, roomList } = sidebarOrder.reduce(\\n\\t\\t\\t\\t(acc, key) => {\\n\\t\\t\\t\\t\\tconst value = groups.get(key);\\n\\n\\t\\t\\t\\t\\tif (!value) {\\n\\t\\t\\t\\t\\t\\treturn acc;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tacc.groupsList.push(key as TranslationKey);\\n\\t\\t\\t\\t\\tif (isCollapsed(key)) {\\n\\t\\t\\t\\t\\t\\tacc.groupsCount.push(0);\\n\\t\\t\\t\\t\\t\\treturn acc;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tacc.groupsCount.push(value.size);\\n\\t\\t\\t\\t\\tacc.roomList.push(...value);\\n\\t\\t\\t\\t\\treturn acc;\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tgroupsCount: [],\\n\\t\\t\\t\\t\\tgroupsList: [],\\n\\t\\t\\t\\t\\troomList: [],\\n\\t\\t\\t\\t} as {\\n\\t\\t\\t\\t\\tgroupsCount: number[];\\n\\t\\t\\t\\t\\tgroupsList: TranslationKey[];\\n\\t\\t\\t\\t\\troomList: Array<ISubscription & IRoom>;\\n\\t\\t\\t\\t},\\n\\t\\t\\t);\\n\\n\\t\\t\\treturn { groupsCount, groupsList, roomList };\\n\\t\\t}, [\\n\\t\\t\\trooms,\\n\\t\\t\\tshowOmnichannel,\\n\\t\\t\\tinquiries.enabled,\\n\\t\\t\\tqueue,\\n\\t\\t\\tsidebarShowUnread,\\n\\t\\t\\tfavoritesEnabled,\\n\\t\\t\\tsidebarGroupByType,\\n\\t\\t\\tisDiscussionEnabled,\\n\\t\\t\\tsidebarOrder,\\n\\t\\t\\tcollapsedGroups,\\n\\t\\t\\tincomingCalls,\\n\\t\\t]),\\n\\t\\t50,\\n\\t);\\n\\n\\treturn {\\n\\t\\troomList,\\n\\t\\tgroupsCount,\\n\\t\\tgroupsList,\\n\\t};\\n};\\n\",null],\"names\":[\"useDebouncedValue\",\"useUserPreference\",\"useUserSubscriptions\",\"useSetting\",\"useMemo\",\"useVideoConfIncomingCalls\",\"useOmnichannelEnabled\",\"useQueuedInquiries\",\"useQueryOptions\",\"module\",\"export\",\"useRoomList\",\"link\",\"v\",\"query\",\"open\",\"$ne\",\"emptyQueue\",\"order\",\"_ref\",\"_useUserPreference\",\"collapsedGroups\",\"showOmnichannel\",\"sidebarGroupByType\",\"favoritesEnabled\",\"sidebarOrder\",\"isDiscussionEnabled\",\"sidebarShowUnread\",\"options\",\"rooms\",\"inquiries\",\"incomingCalls\",\"queue\",\"enabled\",\"groupsCount\",\"groupsList\",\"roomList\",\"isCollapsed\",\"groupTitle\",\"includes\",\"incomingCall\",\"Set\",\"favorite\",\"team\",\"omnichannel\",\"unread\",\"channels\",\"direct\",\"discussion\",\"conversation\",\"onHold\",\"forEach\",\"room\",\"archived\",\"find\",\"call\",\"rid\",\"add\",\"alert\",\"f\",\"teamMain\",\"prid\",\"t\",\"groups\",\"Map\",\"size\",\"set\",\"length\",\"reduce\",\"acc\",\"key\",\"value\",\"get\",\"push\"],\"mappings\":\"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\"}"}