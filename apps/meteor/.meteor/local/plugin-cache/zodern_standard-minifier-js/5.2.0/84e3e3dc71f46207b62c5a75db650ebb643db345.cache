{"code":"function module(t,e,o){o.export({formatQueuedAt:function(){return r}}),o.link(\"moment\",{default:function(t){n=t}},0);var n,r=function(t){var e=t||{},o=e.servedBy,r=e.closedAt,u=e.open,f=e.queuedAt,m=e.ts,d=f||m;return o?n(o.ts).from(n(d),!0):u?n(d).fromNow(!0):r&&d?n(r).from(n(d),!0):\"\"}}","map":"{\"version\":3,\"sources\":[\"client/views/omnichannel/directory/utils/formatQueuedAt.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IOmnichannelRoom, Serialized } from '@rocket.chat/core-typings';\\nimport moment from 'moment';\\n\\nexport const formatQueuedAt = (room: Serialized<IOmnichannelRoom>) => {\\n\\tconst { servedBy, closedAt, open, queuedAt, ts } = room || {};\\n\\tconst queueStartedAt = queuedAt || ts;\\n\\n\\t// Room served\\n\\tif (servedBy) {\\n\\t\\treturn moment(servedBy.ts).from(moment(queueStartedAt), true);\\n\\t}\\n\\n\\t// Room open and not served\\n\\tif (open) {\\n\\t\\treturn moment(queueStartedAt).fromNow(true);\\n\\t}\\n\\n\\t// Room closed and not served\\n\\tif (closedAt && queueStartedAt) {\\n\\t\\treturn moment(closedAt).from(moment(queueStartedAt), true);\\n\\t}\\n\\n\\treturn '';\\n};\\n\",null],\"names\":[\"module\",\"export\",\"formatQueuedAt\",\"link\",\"v\",\"moment\",\"room\",\"_ref\",\"servedBy\",\"closedAt\",\"open\",\"queuedAt\",\"ts\",\"queueStartedAt\",\"from\",\"fromNow\"],\"mappings\":\"uBACAA,EAAOC,MAAM,CAAA,CAAAC,eAAe,WAAA,OAAAA,CAAA,CAAA,GAAAF,EAAAG,IAAA,CAAA,SAAA,CAAA,QAAA,SAAAC,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAErB,IAFqBC,EAEfH,EAAiB,SAACI,CAAkC,EAChE,IAAAC,EAAmDD,GAAQ,CAAA,EAAnDE,EAAQD,EAARC,QAAQ,CAAEC,EAAQF,EAARE,QAAQ,CAAEC,EAAIH,EAAJG,IAAI,CAAEC,EAAQJ,EAARI,QAAQ,CAAEC,EAAEL,EAAFK,EAAE,CACxCC,EAAiBF,GAAYC,SAGnC,AAAIJ,EACIH,EAAOG,EAASI,EAAE,EAAEE,IAAI,CAACT,EAAOQ,GAAiB,CAAA,GAIrDH,EACIL,EAAOQ,GAAgBE,OAAO,CAAC,CAAA,GAInCN,GAAYI,EACRR,EAAOI,GAAUK,IAAI,CAACT,EAAOQ,GAAiB,CAAA,GAG/C,EACR\"}"}