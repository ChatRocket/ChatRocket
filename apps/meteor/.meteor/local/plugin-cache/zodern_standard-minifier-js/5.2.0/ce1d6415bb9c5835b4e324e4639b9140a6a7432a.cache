{"code":"function module(t,e,n){let s,u;n.link(\"@rocket.chat/ui-contexts\",{useEndpoint(t){s=t}},0),n.link(\"@tanstack/react-query\",{useQuery(t){u=t}},1),n.exportDefault(t=>{let e=s(\"GET\",\"/v1/users.listByStatus\");return u([\"pendingUsersCount\",t],async()=>e({hasLoggedIn:!1,status:\"deactivated\",type:\"user\",count:1}),{enabled:!!t,select:t=>null==t?void 0:t.total})})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/users/hooks/usePendingUsersCount.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { Serialized } from '@rocket.chat/core-typings';\\nimport type { DefaultUserInfo, UsersListStatusParamsGET } from '@rocket.chat/rest-typings';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useQuery } from '@tanstack/react-query';\\n\\nconst usePendingUsersCount = (users: Serialized<DefaultUserInfo[]> | undefined) => {\\n\\tconst getUsers = useEndpoint('GET', '/v1/users.listByStatus');\\n\\n\\treturn useQuery(\\n\\t\\t['pendingUsersCount', users],\\n\\t\\tasync () => {\\n\\t\\t\\tconst payload: UsersListStatusParamsGET = {\\n\\t\\t\\t\\thasLoggedIn: false,\\n\\t\\t\\t\\tstatus: 'deactivated',\\n\\t\\t\\t\\ttype: 'user',\\n\\t\\t\\t\\tcount: 1,\\n\\t\\t\\t};\\n\\n\\t\\t\\treturn getUsers(payload);\\n\\t\\t},\\n\\t\\t{ enabled: !!users, select: (data) => data?.total },\\n\\t);\\n};\\n\\nexport default usePendingUsersCount;\\n\",null],\"names\":[\"useEndpoint\",\"useQuery\",\"module\",\"link\",\"v\",\"exportDefault\",\"users\",\"getUsers\",\"hasLoggedIn\",\"status\",\"type\",\"count\",\"enabled\",\"select\",\"data\",\"total\"],\"mappings\":\"2BAEAA,EAAuDC,EAA9CC,EAAaC,IAAA,CAAM,2BAA2B,CAAAH,YAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,wBAAA,CAAAF,SAAAG,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAAvDF,EAAOG,aAAa,CAGUC,IAC7B,IAAMC,EAAWP,EAAY,MAAO,0BAEpC,OAAOC,EACN,CAAC,oBAAqBK,EAAM,CAC5B,SAQQC,EAPmC,CACzCC,YAAa,CAAA,EACbC,OAAQ,cACRC,KAAM,OACNC,MAAO,IAKT,CAAEC,QAAS,CAAC,CAACN,EAAOO,OAASC,GAASA,MAAAA,EAAI,KAAA,EAAJA,EAAMC,KAAAA,AAAK,EAEnD\"}"}