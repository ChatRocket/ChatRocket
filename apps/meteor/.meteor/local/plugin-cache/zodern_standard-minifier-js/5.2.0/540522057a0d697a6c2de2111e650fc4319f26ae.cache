{"code":"function module(e,t,u){let n,r,o;u.export({useMessageBoxAutoFocus:()=>c}),u.link(\"react\",{useCallback(e){n=e},useEffect(e){r=e},useRef(e){o=e}},0);let c=e=>{let t=o();return r(()=>{let e=e=>{let{current:u}=t,{target:n}=e;!n||n===u||!(e.keyCode>45&&e.keyCode<91||8===e.keyCode)||/input|textarea|select/i.test(n.tagName)||!0===e.ctrlKey||!0===e.metaKey||null==u||u.focus()};return document.addEventListener(\"keydown\",e),()=>{document.removeEventListener(\"keydown\",e)}},[]),n(u=>{u&&(t.current=u,e&&t.current&&t.current.focus())},[e,t])}}","map":"{\"version\":3,\"sources\":[\"client/views/room/composer/messageBox/hooks/useMessageBoxAutoFocus.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { Ref } from 'react';\\nimport { useCallback, useEffect, useRef } from 'react';\\n\\n/**\\n * if the user is types outside the message box and its not actually typing in any input field\\n * then the message box should be focused\\n * @returns callbackRef to bind the logic to the message box\\n */\\nexport const useMessageBoxAutoFocus = (enabled: boolean): Ref<HTMLElement> => {\\n\\tconst ref = useRef<HTMLElement>();\\n\\n\\tuseEffect(() => {\\n\\t\\tconst handleKeyDown = (e: KeyboardEvent) => {\\n\\t\\t\\tconst { current: node } = ref;\\n\\t\\t\\tconst { target } = e;\\n\\n\\t\\t\\tif (!target) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (target === node) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tif (!((e.keyCode > 45 && e.keyCode < 91) || e.keyCode === 8)) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (/input|textarea|select/i.test((target as HTMLElement).tagName)) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (e.ctrlKey === true || e.metaKey === true) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tnode?.focus();\\n\\t\\t};\\n\\n\\t\\tdocument.addEventListener('keydown', handleKeyDown);\\n\\n\\t\\treturn () => {\\n\\t\\t\\tdocument.removeEventListener('keydown', handleKeyDown);\\n\\t\\t};\\n\\t}, []);\\n\\n\\treturn useCallback(\\n\\t\\t(node: HTMLElement | null) => {\\n\\t\\t\\tif (!node) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tref.current = node;\\n\\n\\t\\t\\tif (!enabled) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ref.current) {\\n\\t\\t\\t\\tref.current.focus();\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t[enabled, ref],\\n\\t);\\n};\\n\",null],\"names\":[\"useCallback\",\"useEffect\",\"useRef\",\"module\",\"export\",\"useMessageBoxAutoFocus\",\"link\",\"v\",\"enabled\",\"ref\",\"handleKeyDown\",\"e\",\"current\",\"node\",\"target\",\"keyCode\",\"test\",\"tagName\",\"ctrlKey\",\"metaKey\",\"focus\",\"document\",\"addEventListener\",\"removeEventListener\"],\"mappings\":\"2BACuDA,EAAAC,EAAAC,EAAvDC,EAAOC,MAAE,CAAA,CAAAC,uBAAwBA,IAAQA,CAAc,GAAAF,EAAAG,IAAA,CAAA,QAAA,CAAAN,YAAAO,CAAA,EAAAP,EAAAO,CAAA,EAAAN,UAAAM,CAAA,EAAAN,EAAAM,CAAA,EAAAL,OAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAOhD,IAAMF,EAA0BG,IACtC,IAAMC,EAAMP,IAoCZ,OAlCAD,EAAU,KACT,IAAMS,EAAiBC,IACtB,GAAM,CAAEC,QAASC,CAAAA,CAAM,CAAGJ,EACpB,CAAEK,OAAAA,CAAAA,CAAQ,CAAGH,CAEf,EAACG,GAIDA,IAAWD,GAGX,CAAGF,CAAAA,EAAEI,OAAO,CAAG,IAAMJ,EAAEI,OAAO,CAAG,IAAOJ,AAAc,IAAdA,EAAEI,OAAO,AAAK,GAItD,yBAAyBC,IAAI,CAAEF,EAAuBG,OAAO,GAI7DN,AAAc,CAAA,IAAdA,EAAEO,OAAO,EAAaP,AAAc,CAAA,IAAdA,EAAEQ,OAAO,EAInCN,MAAAA,GAAAA,EAAMO,KAAK,EACZ,EAIA,OAFAC,SAASC,gBAAgB,CAAC,UAAWZ,GAE9B,KACNW,SAASE,mBAAmB,CAAC,UAAWb,EACzC,CACD,EAAG,EAAE,EAEEV,EACLa,IACKA,IAILJ,EAAIG,OAAO,CAAGC,EAETL,GAIDC,EAAIG,OAAO,EACdH,EAAIG,OAAO,CAACQ,KAAK,GAEnB,EACA,CAACZ,EAASC,EAAI,CAEhB\"}"}