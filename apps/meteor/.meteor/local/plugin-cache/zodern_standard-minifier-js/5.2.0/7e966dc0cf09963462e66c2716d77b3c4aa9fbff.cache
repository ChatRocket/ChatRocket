{"code":"function module(e,n,o){o.link(\"@babel/runtime/regenerator\",{default:function(e){t=e}},0),o.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(e){r=e}},1),o.export({useRemoveUserAction:function(){return I}}),o.link(\"@rocket.chat/core-typings\",{isRoomFederated:function(e){i=e}},0),o.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback:function(e){s=e}},1),o.link(\"@rocket.chat/string-helpers\",{escapeHTML:function(e){u=e}},2),o.link(\"@rocket.chat/ui-contexts\",{usePermission:function(e){a=e},useSetModal:function(e){c=e},useTranslation:function(e){l=e},useUser:function(e){m=e},useUserRoom:function(e){f=e},useUserSubscription:function(e){d=e}},3),o.link(\"react\",{default:function(e){v=e},useMemo:function(e){k=e}},4),o.link(\"../../../../../components/GenericModal\",{default:function(e){_=e}},5),o.link(\"../../../../../hooks/useEndpointAction\",{useEndpointAction:function(e){p=e}},6),o.link(\"../../../../../lib/federation/Federation\",{\"*\":function(e){b=e}},7),o.link(\"../../../../../lib/rooms/roomCoordinator\",{roomCoordinator:function(e){h=e}},8),o.link(\"../../../../teams/contextualBar/members/RemoveUsersModal\",{default:function(e){g=e}},9),o.link(\"../../../lib/getRoomDirectives\",{getRoomDirectives:function(e){C=e}},10);var t,r,i,s,u,a,c,l,m,f,d,v,k,_,p,b,h,g,C,I=function(e,n,o){var I=f(n);if(!I)throw Error(\"Room not provided\");var M=l(),R=m(),x=d(n),U=e._id,w=a(\"remove-user\",n),T=i(I)?b.isEditableByTheUser(R||void 0,I,x):w,y=c(),E=s(function(){return y(null)}),S=(null==I?void 0:I.t)&&u(h.getRoomName(I.t,I)),P=C({room:I,showingUserId:U,userSubscription:x}).roomCanRemove,A=p(\"POST\",\"/v1/teams.removeMember\",{successMessage:M(\"User_has_been_removed_from_team\")}),O=\"p\"===I.t?\"/v1/groups.kick\":\"/v1/channels.kick\",j=p(\"POST\",O,{successMessage:M(\"User_has_been_removed_from_s\",S)}),B=s(function(){if(I.teamMain&&I.teamId)return y(v.createElement(g,{teamId:null==I?void 0:I.teamId,userId:U,onClose:E,onCancel:E,onConfirm:function(e){var n;return t.async(function(i){for(;;)switch(i.prev=i.next){case 0:if(!I.teamId){i.next=6;break}return n=Object.keys(e),i.next=4,t.awrap(A(r({teamId:I.teamId,userId:U},n.length&&{rooms:n})));case 4:E(),null==o||o();case 6:case\"end\":return i.stop()}},null,null,null,Promise)}}));y(v.createElement(_,{variant:\"danger\",confirmText:M(\"Yes_remove_user\"),onClose:E,onCancel:E,onConfirm:function(){return t.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.awrap(j({roomId:n,userId:U}));case 2:E(),null==o||o();case 4:case\"end\":return e.stop()}},null,null,null,Promise)}},M(\"The_user_will_be_removed_from_s\",S)))});return k(function(){return P&&T?{content:null!=I&&I.teamMain?M(\"Remove_from_team\"):M(\"Remove_from_room\"),icon:\"cross\",onClick:B,type:\"moderation\",variant:\"danger\"}:void 0},[I,P,T,B,M])}}","map":"{\"version\":3,\"sources\":[\"client/views/room/hooks/useUserInfoActions/actions/useRemoveUserAction.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, IUser, Serialized } from '@rocket.chat/core-typings';\\nimport { isRoomFederated } from '@rocket.chat/core-typings';\\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport { escapeHTML } from '@rocket.chat/string-helpers';\\nimport { usePermission, useSetModal, useTranslation, useUser, useUserRoom, useUserSubscription } from '@rocket.chat/ui-contexts';\\nimport React, { useMemo } from 'react';\\n\\nimport GenericModal from '../../../../../components/GenericModal';\\nimport { useEndpointAction } from '../../../../../hooks/useEndpointAction';\\nimport * as Federation from '../../../../../lib/federation/Federation';\\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\\nimport RemoveUsersModal from '../../../../teams/contextualBar/members/RemoveUsersModal';\\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\\nimport type { UserInfoAction } from '../useUserInfoActions';\\n\\nexport const useRemoveUserAction = (\\n\\tuser: Pick<IUser, '_id' | 'username'>,\\n\\trid: IRoom['_id'],\\n\\treload?: () => void,\\n): UserInfoAction | undefined => {\\n\\tconst room = useUserRoom(rid);\\n\\n\\tif (!room) {\\n\\t\\tthrow Error('Room not provided');\\n\\t}\\n\\n\\tconst t = useTranslation();\\n\\tconst currentUser = useUser();\\n\\tconst subscription = useUserSubscription(rid);\\n\\n\\tconst { _id: uid } = user;\\n\\n\\tconst hasPermissionToRemove = usePermission('remove-user', rid);\\n\\tconst userCanRemove = isRoomFederated(room)\\n\\t\\t? Federation.isEditableByTheUser(currentUser || undefined, room, subscription)\\n\\t\\t: hasPermissionToRemove;\\n\\tconst setModal = useSetModal();\\n\\tconst closeModal = useMutableCallback(() => setModal(null));\\n\\tconst roomName = room?.t && escapeHTML(roomCoordinator.getRoomName(room.t, room));\\n\\n\\tconst { roomCanRemove } = getRoomDirectives({ room, showingUserId: uid, userSubscription: subscription });\\n\\n\\tconst removeFromTeam = useEndpointAction('POST', '/v1/teams.removeMember', {\\n\\t\\tsuccessMessage: t('User_has_been_removed_from_team'),\\n\\t});\\n\\n\\tconst removeFromRoomEndpoint = room.t === 'p' ? '/v1/groups.kick' : '/v1/channels.kick';\\n\\tconst removeFromRoom = useEndpointAction('POST', removeFromRoomEndpoint, {\\n\\t\\tsuccessMessage: t('User_has_been_removed_from_s', roomName),\\n\\t});\\n\\n\\tconst removeUserOptionAction = useMutableCallback(() => {\\n\\t\\tconst handleRemoveFromTeam = async (rooms: Record<string, Serialized<IRoom>>): Promise<void> => {\\n\\t\\t\\tif (room.teamId) {\\n\\t\\t\\t\\tconst roomKeys = Object.keys(rooms);\\n\\t\\t\\t\\tawait removeFromTeam({\\n\\t\\t\\t\\t\\tteamId: room.teamId,\\n\\t\\t\\t\\t\\tuserId: uid,\\n\\t\\t\\t\\t\\t...(roomKeys.length && { rooms: roomKeys }),\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tcloseModal();\\n\\t\\t\\t\\treload?.();\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\tconst handleRemoveFromRoom = async (rid: IRoom['_id'], uid: IUser['_id']): Promise<void> => {\\n\\t\\t\\tawait removeFromRoom({ roomId: rid, userId: uid });\\n\\t\\t\\tcloseModal();\\n\\t\\t\\treload?.();\\n\\t\\t};\\n\\n\\t\\tif (room.teamMain && room.teamId) {\\n\\t\\t\\treturn setModal(\\n\\t\\t\\t\\t<RemoveUsersModal teamId={room?.teamId} userId={uid} onClose={closeModal} onCancel={closeModal} onConfirm={handleRemoveFromTeam} />,\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\tsetModal(\\n\\t\\t\\t<GenericModal\\n\\t\\t\\t\\tvariant='danger'\\n\\t\\t\\t\\tconfirmText={t('Yes_remove_user')}\\n\\t\\t\\t\\tonClose={closeModal}\\n\\t\\t\\t\\tonCancel={closeModal}\\n\\t\\t\\t\\tonConfirm={(): Promise<void> => handleRemoveFromRoom(rid, uid)}\\n\\t\\t\\t>\\n\\t\\t\\t\\t{t('The_user_will_be_removed_from_s', roomName)}\\n\\t\\t\\t</GenericModal>,\\n\\t\\t);\\n\\t});\\n\\n\\tconst removeUserOption = useMemo(\\n\\t\\t() =>\\n\\t\\t\\troomCanRemove && userCanRemove\\n\\t\\t\\t\\t? {\\n\\t\\t\\t\\t\\t\\tcontent: room?.teamMain ? t('Remove_from_team') : t('Remove_from_room'),\\n\\t\\t\\t\\t\\t\\ticon: 'cross' as const,\\n\\t\\t\\t\\t\\t\\tonClick: removeUserOptionAction,\\n\\t\\t\\t\\t\\t\\ttype: 'moderation' as const,\\n\\t\\t\\t\\t\\t\\tvariant: 'danger' as const,\\n\\t\\t\\t\\t  }\\n\\t\\t\\t\\t: undefined,\\n\\t\\t[room, roomCanRemove, userCanRemove, removeUserOptionAction, t],\\n\\t);\\n\\n\\treturn removeUserOption;\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"_objectSpread\",\"export\",\"useRemoveUserAction\",\"isRoomFederated\",\"useMutableCallback\",\"escapeHTML\",\"usePermission\",\"useSetModal\",\"useTranslation\",\"useUser\",\"useUserRoom\",\"useUserSubscription\",\"React\",\"useMemo\",\"GenericModal\",\"useEndpointAction\",\"Federation\",\"roomCoordinator\",\"RemoveUsersModal\",\"getRoomDirectives\",\"user\",\"rid\",\"reload\",\"room\",\"Error\",\"t\",\"currentUser\",\"subscription\",\"uid\",\"_id\",\"hasPermissionToRemove\",\"userCanRemove\",\"isEditableByTheUser\",\"undefined\",\"setModal\",\"closeModal\",\"roomName\",\"getRoomName\",\"roomCanRemove\",\"_getRoomDirectives\",\"showingUserId\",\"userSubscription\",\"removeFromTeam\",\"successMessage\",\"removeFromRoomEndpoint\",\"removeFromRoom\",\"removeUserOptionAction\",\"teamMain\",\"teamId\",\"createElement\",\"userId\",\"onClose\",\"onCancel\",\"onConfirm\",\"rooms\",\"roomKeys\",\"async\",\"_context\",\"prev\",\"next\",\"Object\",\"keys\",\"awrap\",\"length\",\"stop\",\"Promise\",\"variant\",\"confirmText\",\"_context2\",\"roomId\",\"content\",\"icon\",\"onClick\",\"type\"],\"mappings\":\"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\"}"}