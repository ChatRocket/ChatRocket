{"code":"Package[\"core-runtime\"].queue(\"retry\",function(){var e,t=Package.meteor.Meteor;Package.meteor.global,Package.meteor.meteorEnv;var r=Package.random.Random,i=Package.modules.meteorInstall;return Package.promise.Promise,{export:function(){return{Retry:e}},require:i({node_modules:{meteor:{retry:{\"retry.js\":function e(e,i,o){o.export({Retry:()=>m});class m{constructor(){let{baseTimeout:e=1e3,exponent:t=2.2,maxTimeout:r=3e5,minTimeout:i=10,minCount:o=2,fuzz:m=.5}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.baseTimeout=e,this.exponent=t,this.maxTimeout=r,this.minTimeout=i,this.minCount=o,this.fuzz=m,this.retryTimer=null}clear(){this.retryTimer&&clearTimeout(this.retryTimer),this.retryTimer=null}_timeout(e){return e<this.minCount?this.minTimeout:Math.min(this.maxTimeout,this.baseTimeout*Math.pow(this.exponent,e))*(r.fraction()*this.fuzz+(1-this.fuzz/2))}retryLater(e,r){var i=this._timeout(e);return this.retryTimer&&clearTimeout(this.retryTimer),this.retryTimer=t.setTimeout(r,i),i}}}}}}},{extensions:[\".js\",\".json\"]}),eagerModulePaths:[\"/node_modules/meteor/retry/retry.js\"],mainModulePath:\"/node_modules/meteor/retry/retry.js\"}});","map":"{\"version\":3,\"sources\":[\"packages/retry/retry.js\",\"<anon>\"],\"sourcesContent\":[\"// Retry logic with an exponential backoff.\\n//\\n// options:\\n//  baseTimeout: time for initial reconnect attempt (ms).\\n//  exponent: exponential factor to increase timeout each attempt.\\n//  maxTimeout: maximum time between retries (ms).\\n//  minCount: how many times to reconnect \\\"instantly\\\".\\n//  minTimeout: time to wait for the first `minCount` retries (ms).\\n//  fuzz: factor to randomize retry times by (to avoid retry storms).\\n\\nexport class Retry {\\n  constructor({\\n    baseTimeout = 1000,\\n    exponent = 2.2,\\n    // The default is high-ish to ensure a server can recover from a\\n    // failure caused by load.\\n    maxTimeout = 5 * 60 * 1000,\\n    minTimeout = 10,\\n    minCount = 2,\\n    fuzz = 0.5,\\n  } = {}) {\\n    this.baseTimeout = baseTimeout;\\n    this.exponent = exponent;\\n    this.maxTimeout = maxTimeout;\\n    this.minTimeout = minTimeout;\\n    this.minCount = minCount;\\n    this.fuzz = fuzz;\\n    this.retryTimer = null;\\n  }\\n\\n  // Reset a pending retry, if any.\\n  clear() {\\n    if (this.retryTimer) {\\n      clearTimeout(this.retryTimer);\\n    }\\n    this.retryTimer = null;\\n  }\\n\\n  // Calculate how long to wait in milliseconds to retry, based on the\\n  // `count` of which retry this is.\\n  _timeout(count) {\\n    if (count < this.minCount) {\\n      return this.minTimeout;\\n    }\\n\\n    // fuzz the timeout randomly, to avoid reconnect storms when a\\n    // server goes down.\\n    var timeout = Math.min(\\n      this.maxTimeout,\\n      this.baseTimeout * Math.pow(this.exponent, count)\\n    ) * (\\n      Random.fraction() * this.fuzz + (1 - this.fuzz / 2)\\n    );\\n\\n    return timeout;\\n  }\\n\\n  // Call `fn` after a delay, based on the `count` of which retry this is.\\n  retryLater(count, fn) {\\n    var timeout = this._timeout(count);\\n    if (this.retryTimer)\\n      clearTimeout(this.retryTimer);\\n    this.retryTimer = Meteor.setTimeout(fn, timeout);\\n    return timeout;\\n  }\\n}\\n\",null],\"names\":[\"module\",\"export\",\"Retry\",\"constructor\",\"baseTimeout\",\"exponent\",\"maxTimeout\",\"minTimeout\",\"minCount\",\"fuzz\",\"arguments\",\"length\",\"undefined\",\"retryTimer\",\"clear\",\"clearTimeout\",\"_timeout\",\"count\",\"Math\",\"min\",\"pow\",\"Random\",\"fraction\",\"retryLater\",\"fn\",\"timeout\",\"Meteor\",\"setTimeout\"],\"mappings\":\"kUAAAA,EAAOC,MAAM,CAAC,CAACC,MAAMA,IAAIA,CAAK,EAUvB,OAAMA,EACXC,aASQ,CAAA,GATI,CACVC,YAAAA,EAAc,GAAI,CAClBC,SAAAA,EAAW,GAAG,CAGdC,WAAAA,EAAa,GAAa,CAC1BC,WAAAA,EAAa,EAAE,CACfC,SAAAA,EAAW,CAAC,CACZC,KAAAA,EAAO,EAAA,CACR,CAAAC,UAAAC,MAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,CAAAA,SAAA,CAAA,EAAA,CAAG,CAAC,CACH,CAAA,IAAI,CAACN,WAAW,CAAGA,EACnB,IAAI,CAACC,QAAQ,CAAGA,EAChB,IAAI,CAACC,UAAU,CAAGA,EAClB,IAAI,CAACC,UAAU,CAAGA,EAClB,IAAI,CAACC,QAAQ,CAAGA,EAChB,IAAI,CAACC,IAAI,CAAGA,EACZ,IAAI,CAACI,UAAU,CAAG,IACpB,CAGAC,OAAQ,CACF,IAAI,CAACD,UAAU,EACjBE,aAAa,IAAI,CAACF,UAAU,EAE9B,IAAI,CAACA,UAAU,CAAG,IACpB,CAIAG,SAASC,CAAK,CAAE,QACd,AAAIA,EAAQ,IAAI,CAACT,QAAQ,CAChB,IAAI,CAACD,UAAU,CAKVW,KAAKC,GAAG,CACpB,IAAI,CAACb,UAAU,CACf,IAAI,CAACF,WAAW,CAAGc,KAAKE,GAAG,CAAC,IAAI,CAACf,QAAQ,CAAEY,IAE3CI,CAAAA,EAAOC,QAAQ,GAAK,IAAI,CAACb,IAAI,CAAI,CAAA,EAAI,IAAI,CAACA,IAAI,CAAG,CAAA,CAAC,CAItD,CAGAc,WAAWN,CAAK,CAAEO,CAAE,CAAE,CACpB,IAAIC,EAAU,IAAI,CAACT,QAAQ,CAACC,GAI5B,OAHI,IAAI,CAACJ,UAAU,EACjBE,aAAa,IAAI,CAACF,UAAU,EAC9B,IAAI,CAACA,UAAU,CAAGa,EAAOC,UAAU,CAACH,EAAIC,GACjCA,CACT,CACF\"}"}