{"code":"function module(e,t,n){let l,a,i,o,r,c,u,m,k;n.link(\"@rocket.chat/fuselage\",{States(e){l=e},StatesIcon(e){a=e},StatesTitle(e){i=e}},0),n.link(\"@rocket.chat/ui-contexts\",{useTranslation(e){o=e},useEndpoint(e){r=e}},1),n.link(\"@tanstack/react-query\",{useQuery(e){c=e}},2),n.link(\"react\",{default(e){u=e}},3),n.link(\"../../../components/Skeleton\",{FormSkeleton(e){m=e}},4),n.link(\"./EmailInboxForm\",{default(e){k=e}},5),n.exportDefault(e=>{let{id:t}=e,n=o(),s=r(\"GET\",\"/v1/email-inbox/:_id\",{_id:t}),{data:d,isLoading:x,error:E}=c([\"email-inbox\",t],()=>s());return x?u.createElement(m,null):E||!d?u.createElement(l,null,u.createElement(a,{name:\"circle-exclamation\",variation:\"danger\"}),u.createElement(i,null,n(\"error-email-inbox-not-found\"))):u.createElement(k,{inboxData:d})})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/emailInbox/EmailInboxFormWithData.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IEmailInbox } from '@rocket.chat/core-typings';\\nimport { States, StatesIcon, StatesTitle } from '@rocket.chat/fuselage';\\nimport { useTranslation, useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useQuery } from '@tanstack/react-query';\\nimport type { ReactElement } from 'react';\\nimport React from 'react';\\n\\nimport { FormSkeleton } from '../../../components/Skeleton';\\nimport EmailInboxForm from './EmailInboxForm';\\n\\nconst EmailInboxFormWithData = ({ id }: { id: IEmailInbox['_id'] }): ReactElement => {\\n\\tconst t = useTranslation();\\n\\tconst getEmailInboxById = useEndpoint('GET', '/v1/email-inbox/:_id', { _id: id });\\n\\tconst { data, isLoading, error } = useQuery(['email-inbox', id], () => getEmailInboxById());\\n\\n\\tif (isLoading) {\\n\\t\\treturn <FormSkeleton />;\\n\\t}\\n\\n\\tif (error || !data) {\\n\\t\\treturn (\\n\\t\\t\\t<States>\\n\\t\\t\\t\\t<StatesIcon name='circle-exclamation' variation='danger' />\\n\\t\\t\\t\\t<StatesTitle>{t('error-email-inbox-not-found')}</StatesTitle>\\n\\t\\t\\t</States>\\n\\t\\t);\\n\\t}\\n\\n\\treturn <EmailInboxForm inboxData={data} />;\\n};\\n\\nexport default EmailInboxFormWithData;\\n\",null],\"names\":[\"States\",\"StatesIcon\",\"StatesTitle\",\"useTranslation\",\"useEndpoint\",\"useQuery\",\"React\",\"FormSkeleton\",\"EmailInboxForm\",\"module\",\"link\",\"v\",\"default\",\"exportDefault\",\"_ref\",\"id\",\"t\",\"getEmailInboxById\",\"_id\",\"data\",\"isLoading\",\"error\",\"createElement\",\"name\",\"variation\",\"inboxData\"],\"mappings\":\"2BACAA,EAASC,EAAQC,EAAuDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA3CC,EAAWC,IAAE,CAAA,wBAAM,CAAuBV,OAACW,CAAA,EAAAX,EAAAW,CAAA,EAAAV,WAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,YAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,2BAAA,CAAAP,eAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,YAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,wBAAA,CAAAL,SAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,+BAAA,CAAAH,aAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,mBAAA,CAAAE,QAAAD,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAAxEF,EAAOI,aAAU,CAScC,IAAqD,GAApD,CAAEC,GAAAA,CAAAA,CAAgC,CAAAD,EAC3DE,EAAIb,IACJc,EAAoBb,EAAY,MAAO,uBAAwB,CAAEc,IAAKH,CAAE,GACxE,CAAEI,KAAAA,CAAI,CAAEC,UAAAA,CAAS,CAAEC,MAAAA,CAAAA,CAAO,CAAGhB,EAAS,CAAC,cAAeU,EAAG,CAAE,IAAME,YAEvE,AAAIG,EACId,EAAAgB,aAAA,CAACf,EAAY,MAGjBc,GAAS,CAACF,EAEZb,EAAAgB,aAAA,CAACtB,EAAM,KACNM,EAAAgB,aAAA,CAACrB,EAAU,CAACsB,KAAK,qBAAqBC,UAAU,QAAQ,GACxDlB,EAAAgB,aAAA,CAACpB,EAAW,KAAEc,EAAE,iCAKZV,EAAAgB,aAAA,CAACd,EAAc,CAACiB,UAAWN,CAAK,EACxC\"}"}