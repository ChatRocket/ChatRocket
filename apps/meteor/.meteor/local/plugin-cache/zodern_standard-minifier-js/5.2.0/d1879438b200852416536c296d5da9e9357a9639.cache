{"code":"function module(e,l,t){let n,a,r,c,o,m,i,s,u,d,E,p,f,h;t.link(\"@babel/runtime/helpers/extends\",{default(e){n=e}},0),t.link(\"@rocket.chat/fuselage\",{Field(e){a=e},FieldLabel(e){r=e},FieldRow(e){c=e},FieldError(e){o=e},FieldHint(e){m=e},TextInput(e){i=e},Select(e){s=e},ToggleSwitch(e){u=e}},0),t.link(\"react\",{default(e){d=e},useMemo(e){E=e}},1),t.link(\"react-hook-form\",{useFormContext(e){p=e},Controller(e){f=e}},2),t.link(\"react-i18next\",{useTranslation(e){h=e}},3),t.exportDefault(e=>{let{className:l,editing:t=!1,isProtected:b=!1,isDisabled:k=!1}=e,{t:F}=h(),{register:R,control:S,formState:{errors:g}}=p(),w=E(()=>[[\"Users\",F(\"Global\")],[\"Subscriptions\",F(\"Rooms\")]],[F]);return d.createElement(d.Fragment,null,d.createElement(a,{className:l},d.createElement(r,null,F(\"Role\")),d.createElement(c,null,d.createElement(i,n({disabled:t||k,placeholder:F(\"Role\")},R(\"name\",{required:F(\"Required_field\",{field:F(\"Role\")})})))),(null==g?void 0:g.name)&&d.createElement(o,null,g.name.message)),d.createElement(a,{className:l},d.createElement(r,null,F(\"Description\")),d.createElement(c,null,d.createElement(i,n({placeholder:F(\"Description\"),disabled:k},R(\"description\")))),d.createElement(m,null,\"Leave the description field blank if you dont want to show the role\")),d.createElement(a,{className:l},d.createElement(r,null,F(\"Scope\")),d.createElement(c,null,d.createElement(f,{name:\"scope\",control:S,render:e=>{let{field:l}=e;return d.createElement(s,n({},l,{options:w,disabled:b||k,placeholder:F(\"Scope\")}))}}))),d.createElement(a,{className:l},d.createElement(c,null,d.createElement(r,null,F(\"Users must use Two Factor Authentication\")),d.createElement(f,{name:\"mandatory2fa\",control:S,render:e=>{let{field:l}=e;return d.createElement(u,n({},l,{checked:l.value,disabled:k}))}}))))})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/permissions/RoleForm.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { SelectOption } from '@rocket.chat/fuselage';\\nimport { Field, FieldLabel, FieldRow, FieldError, FieldHint, TextInput, Select, ToggleSwitch } from '@rocket.chat/fuselage';\\nimport type { ReactElement } from 'react';\\nimport React, { useMemo } from 'react';\\nimport { useFormContext, Controller } from 'react-hook-form';\\nimport { useTranslation } from 'react-i18next';\\n\\ntype RoleFormProps = {\\n\\tclassName?: string;\\n\\tediting?: boolean;\\n\\tisProtected?: boolean;\\n\\tisDisabled?: boolean;\\n};\\n\\nconst RoleForm = ({ className, editing = false, isProtected = false, isDisabled = false }: RoleFormProps): ReactElement => {\\n\\tconst { t } = useTranslation();\\n\\tconst {\\n\\t\\tregister,\\n\\t\\tcontrol,\\n\\t\\tformState: { errors },\\n\\t} = useFormContext();\\n\\n\\tconst options: SelectOption[] = useMemo(\\n\\t\\t() => [\\n\\t\\t\\t['Users', t('Global')],\\n\\t\\t\\t['Subscriptions', t('Rooms')],\\n\\t\\t],\\n\\t\\t[t],\\n\\t);\\n\\n\\treturn (\\n\\t\\t<>\\n\\t\\t\\t<Field className={className}>\\n\\t\\t\\t\\t<FieldLabel>{t('Role')}</FieldLabel>\\n\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\t\\tdisabled={editing || isDisabled}\\n\\t\\t\\t\\t\\t\\tplaceholder={t('Role')}\\n\\t\\t\\t\\t\\t\\t{...register('name', { required: t('Required_field', { field: t('Role') }) })}\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t{errors?.name && <FieldError>{errors.name.message}</FieldError>}\\n\\t\\t\\t</Field>\\n\\t\\t\\t<Field className={className}>\\n\\t\\t\\t\\t<FieldLabel>{t('Description')}</FieldLabel>\\n\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t<TextInput placeholder={t('Description')} disabled={isDisabled} {...register('description')} />\\n\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t<FieldHint>Leave the description field blank if you dont want to show the role</FieldHint>\\n\\t\\t\\t</Field>\\n\\t\\t\\t<Field className={className}>\\n\\t\\t\\t\\t<FieldLabel>{t('Scope')}</FieldLabel>\\n\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\tname='scope'\\n\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\trender={({ field }): ReactElement => (\\n\\t\\t\\t\\t\\t\\t\\t<Select {...field} options={options} disabled={isProtected || isDisabled} placeholder={t('Scope')} />\\n\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t</Field>\\n\\t\\t\\t<Field className={className}>\\n\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t<FieldLabel>{t('Users must use Two Factor Authentication')}</FieldLabel>\\n\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\tname='mandatory2fa'\\n\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\trender={({ field }): ReactElement => <ToggleSwitch {...field} checked={field.value} disabled={isDisabled} />}\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t</Field>\\n\\t\\t</>\\n\\t);\\n};\\n\\nexport default RoleForm;\\n\",null],\"names\":[\"_extends\",\"Field\",\"FieldLabel\",\"FieldRow\",\"FieldError\",\"FieldHint\",\"TextInput\",\"Select\",\"ToggleSwitch\",\"React\",\"useMemo\",\"useFormContext\",\"Controller\",\"useTranslation\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"className\",\"editing\",\"isProtected\",\"isDisabled\",\"t\",\"register\",\"control\",\"formState\",\"errors\",\"options\",\"createElement\",\"Fragment\",\"disabled\",\"placeholder\",\"required\",\"field\",\"name\",\"message\",\"render\",\"_ref2\",\"_ref3\",\"checked\",\"value\"],\"mappings\":\"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\"}"}