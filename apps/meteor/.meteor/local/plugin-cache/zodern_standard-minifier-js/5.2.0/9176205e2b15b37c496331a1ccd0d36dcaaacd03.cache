{"code":"function module(n,e,t){var l,i,a,o,u,c,s,r,f;t.link(\"@babel/runtime/helpers/extends\",{default:function(n){l=n}},0),t.link(\"@rocket.chat/fuselage\",{NavBarItem:function(n){i=n}},0),t.link(\"react\",{default:function(n){a=n},useCallback:function(n){o=n}},1),t.link(\"react-i18next\",{useTranslation:function(n){u=n}},2),t.link(\"../../contexts/CallContext\",{useCallerInfo:function(n){c=n},useCallRegisterClient:function(n){s=n},useCallUnregisterClient:function(n){r=n},useVoipNetworkStatus:function(n){f=n}},3),t.exportDefault(function(n){var e=u().t,t=c(),_=r(),d=s(),C=f(),k=![\"ERROR\",\"INITIAL\",\"UNREGISTERED\"].includes(t.state),I=[\"IN_CALL\"].includes(t.state),b=o(function(){if(k){_();return}d()},[k,d,_]);return a.createElement(i,l({icon:\"offline\"===C?\"phone-issue\":k?\"phone\":\"phone-disabled\",disabled:I,\"aria-checked\":k,\"aria-label\":e(\"VoIP_Toggle\"),\"data-tooltip\":e(\"offline\"===C?\"Waiting_for_server_connection\":I?\"Cannot_disable_while_on_call\":k?\"Turn_off_answer_calls\":\"Turn_on_answer_calls\")},n,{success:k,warning:\"offline\"===C,onClick:b}))})}","map":"{\"version\":3,\"sources\":[\"client/NavBarV2/NavBarOmnichannelToolbar/NavBarItemOmnichannelCallToggleReady.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { NavBarItem } from '@rocket.chat/fuselage';\\nimport type { ComponentPropsWithoutRef } from 'react';\\nimport React, { useCallback } from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport { useCallerInfo, useCallRegisterClient, useCallUnregisterClient, useVoipNetworkStatus } from '../../contexts/CallContext';\\n\\ntype NavBarItemOmnichannelCallToggleReadyProps = ComponentPropsWithoutRef<typeof NavBarItem>;\\n\\nconst NavBarItemOmnichannelCallToggleReady = (props: NavBarItemOmnichannelCallToggleReadyProps) => {\\n\\tconst { t } = useTranslation();\\n\\n\\tconst caller = useCallerInfo();\\n\\tconst unregister = useCallUnregisterClient();\\n\\tconst register = useCallRegisterClient();\\n\\n\\tconst networkStatus = useVoipNetworkStatus();\\n\\tconst registered = !['ERROR', 'INITIAL', 'UNREGISTERED'].includes(caller.state);\\n\\tconst inCall = ['IN_CALL'].includes(caller.state);\\n\\n\\tconst onClickVoipButton = useCallback((): void => {\\n\\t\\tif (registered) {\\n\\t\\t\\tunregister();\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tregister();\\n\\t}, [registered, register, unregister]);\\n\\n\\tconst getTitle = (): string => {\\n\\t\\tif (networkStatus === 'offline') {\\n\\t\\t\\treturn t('Waiting_for_server_connection');\\n\\t\\t}\\n\\n\\t\\tif (inCall) {\\n\\t\\t\\treturn t('Cannot_disable_while_on_call');\\n\\t\\t}\\n\\n\\t\\tif (registered) {\\n\\t\\t\\treturn t('Turn_off_answer_calls');\\n\\t\\t}\\n\\n\\t\\treturn t('Turn_on_answer_calls');\\n\\t};\\n\\n\\tconst getIcon = (): 'phone-issue' | 'phone' | 'phone-disabled' => {\\n\\t\\tif (networkStatus === 'offline') {\\n\\t\\t\\treturn 'phone-issue';\\n\\t\\t}\\n\\t\\treturn registered ? 'phone' : 'phone-disabled';\\n\\t};\\n\\n\\treturn (\\n\\t\\t<NavBarItem\\n\\t\\t\\ticon={getIcon()}\\n\\t\\t\\tdisabled={inCall}\\n\\t\\t\\taria-checked={registered}\\n\\t\\t\\taria-label={t('VoIP_Toggle')}\\n\\t\\t\\tdata-tooltip={getTitle()}\\n\\t\\t\\t{...props}\\n\\t\\t\\tsuccess={registered}\\n\\t\\t\\twarning={networkStatus === 'offline'}\\n\\t\\t\\tonClick={onClickVoipButton}\\n\\t\\t/>\\n\\t);\\n};\\n\\nexport default NavBarItemOmnichannelCallToggleReady;\\n\",null],\"names\":[\"_extends\",\"NavBarItem\",\"React\",\"useCallback\",\"useTranslation\",\"useCallerInfo\",\"useCallRegisterClient\",\"useCallUnregisterClient\",\"useVoipNetworkStatus\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"props\",\"t\",\"_useTranslation\",\"caller\",\"unregister\",\"register\",\"networkStatus\",\"registered\",\"includes\",\"state\",\"inCall\",\"onClickVoipButton\",\"createElement\",\"icon\",\"disabled\",\"success\",\"warning\",\"onClick\"],\"mappings\":\"uBASA,IATAA,EAAAC,EAAmDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA1CC,EAAUC,IAAE,CAAA,iCAA8B,CAAAC,QAAA,SAAAC,CAAA,EAAAZ,EAAAY,CAAA,CAAA,EAAA,GAA1CH,EAAYC,IAAA,CAAM,wBAAwB,CAAAT,WAAA,SAAAW,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAA,QAAA,SAAAE,CAAA,EAAAV,EAAAU,CAAA,EAAAT,YAAA,SAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,gBAAA,CAAAN,eAAA,SAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,6BAAA,CAAAL,cAAA,SAAAO,CAAA,EAAAP,EAAAO,CAAA,EAAAN,sBAAA,SAAAM,CAAA,EAAAN,EAAAM,CAAA,EAAAL,wBAAA,SAAAK,CAAA,EAAAL,EAAAK,CAAA,EAAAJ,qBAAA,SAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAnDH,EAAOI,aAAY,CAS0B,SAACC,CAAgD,EAC7F,IAAQC,EAACC,AAAKZ,IAANW,CAAC,CAEHE,EAASZ,IACTa,EAAaX,IACbY,EAAWb,IAEXc,EAAgBZ,IAChBa,EAAa,CAAC,CAAC,QAAS,UAAW,eAAe,CAACC,QAAQ,CAACL,EAAOM,KAAK,EACxEC,EAAS,CAAC,UAAU,CAACF,QAAQ,CAACL,EAAOM,KAAK,EAE1CE,EAAoBtB,EAAY,WACrC,GAAIkB,EAAY,CACfH,IACA,MACD,CACAC,GACD,EAAG,CAACE,EAAYF,EAAUD,EAAW,EAyBrC,OACChB,EAAAwB,aAAA,CAACzB,EAAUD,EAAA,CACV2B,KARD,AAAIP,AAAkB,YAAlBA,EACI,cAEDC,EAAa,QAAU,iBAM7BO,SAAUJ,EACV,eAAcH,EACd,aAAYN,EAAE,eACd,cAAA,CA3BOA,EAAE,AADNK,AAAkB,YAAlBA,EACM,gCAIA,AADNI,EACM,+BAIA,AADNH,EACM,wBAGD,uBAgBiB,EACrBP,EAAK,CACTe,QAASR,EACTS,QAASV,AAAkB,YAAlBA,EACTW,QAASN,CAAkB,GAG9B\"}"}