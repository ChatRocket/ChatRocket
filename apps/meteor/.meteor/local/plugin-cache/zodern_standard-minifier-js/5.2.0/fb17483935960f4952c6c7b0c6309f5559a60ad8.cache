{"code":"function module(e,t,u){let o,i;u.export({useOembedLayout:()=>n}),u.link(\"@rocket.chat/ui-contexts\",{useLayout(e){o=e},useSetting(e){i=e}},0);let n=()=>{let e=i(\"API_Embed\",!1),{isMobile:t}=o();return{enabled:e,maxWidth:t?\"100%\":368,maxHeight:368}}}","map":"{\"version\":3,\"sources\":[\"client/components/message/hooks/useOembedLayout.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useLayout, useSetting } from '@rocket.chat/ui-contexts';\\n\\ntype OembedLayout = {\\n\\tenabled: boolean;\\n\\tmaxWidth: number | '100%';\\n\\tmaxHeight: number;\\n};\\n\\n/**\\n * Returns the layout parameters for oembeds\\n */\\nexport const useOembedLayout = (): OembedLayout => {\\n\\t/*\\n  Note: both `useSetting` and `useLayout` are hooks that don't force a re-render\\n  very often, so this hook is not going to be re-evaluated very often either;\\n  this is why we don't need to memoize the result or store it in a context\\n  */\\n\\tconst enabled = useSetting<boolean>('API_Embed', false);\\n\\tconst { isMobile } = useLayout();\\n\\n\\tconst maxWidth = isMobile ? ('100%' as const) : 368;\\n\\tconst maxHeight = 368;\\n\\n\\treturn { enabled, maxWidth, maxHeight };\\n};\\n\",null],\"names\":[\"useLayout\",\"useSetting\",\"module\",\"export\",\"useOembedLayout\",\"link\",\"v\",\"enabled\",\"isMobile\",\"maxWidth\",\"maxHeight\"],\"mappings\":\"2BAAsCA,EAA2BC,EAAjEC,EAAOC,MAAE,CAAA,CAAAC,gBAAqBA,IAAEA,CAAM,GAA2BF,EAAAG,IAAA,CAAA,2BAAA,CAAAL,UAAAM,CAAA,EAAAN,EAAAM,CAAA,EAAAL,WAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAW1D,IAAMF,EAAkBA,KAM9B,IAAMG,EAAUN,EAAoB,YAAa,CAAA,GAC3C,CAAEO,SAAAA,CAAAA,CAAU,CAAGR,IAKrB,MAAO,CAAEO,QAAAA,EAASE,SAHDD,EAAY,OAAmB,IAGpBE,UAFV,GAEmB,CACtC\"}"}