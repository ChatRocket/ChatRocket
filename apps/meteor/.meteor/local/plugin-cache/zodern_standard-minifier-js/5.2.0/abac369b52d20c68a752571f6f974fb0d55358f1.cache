{"code":"Package[\"core-runtime\"].queue(\"mongo-id\",function(){Package.meteor.Meteor,Package.meteor.global,Package.meteor.meteorEnv,Package.ejson.EJSON,Package.random.Random;var e,t=Package.modules.meteorInstall;return Package.promise.Promise,{export:function(){return{MongoID:e}},require:t({node_modules:{meteor:{\"mongo-id\":{\"id.js\":function e(e,t,r){let o,n;r.export({MongoID:()=>s}),r.link(\"meteor/ejson\",{EJSON(e){o=e}},0),r.link(\"meteor/random\",{Random(e){n=e}},1);let s={};s._looksLikeObjectID=e=>24===e.length&&/^[0-9a-f]*$/.test(e),s.ObjectID=class e{constructor(e){if(e){if(e=e.toLowerCase(),!s._looksLikeObjectID(e))throw Error(\"Invalid hexadecimal string for creating an ObjectID\");this._str=e}else this._str=n.hexString(24)}equals(e){return e instanceof s.ObjectID&&this.valueOf()===e.valueOf()}toString(){return'ObjectID(\"'.concat(this._str,'\")')}clone(){return new s.ObjectID(this._str)}typeName(){return\"oid\"}getTimestamp(){return Number.parseInt(this._str.substr(0,8),16)}valueOf(){return this._str}toJSONValue(){return this.valueOf()}toHexString(){return this.valueOf()}},o.addType(\"oid\",e=>new s.ObjectID(e)),s.idStringify=e=>{if(e instanceof s.ObjectID)return e.valueOf();if(\"string\"==typeof e){var t=e.charAt(0);return\"\"===e?e:\"-\"===t||\"~\"===t||s._looksLikeObjectID(e)||\"{\"===t?\"-\".concat(e):e}if(void 0===e)return\"-\";if(\"object\"!=typeof e||null===e)return\"~\".concat(JSON.stringify(e));throw Error(\"Meteor does not currently support objects other than ObjectID as ids\")},s.idParse=e=>{var t=e.charAt(0);if(\"\"===e)return e;if(\"-\"!==e){if(\"-\"===t)return e.substr(1);if(\"~\"===t)return JSON.parse(e.substr(1));else if(s._looksLikeObjectID(e))return new s.ObjectID(e);else return e}}}}}}},{extensions:[\".js\",\".json\"]}),eagerModulePaths:[\"/node_modules/meteor/mongo-id/id.js\"],mainModulePath:\"/node_modules/meteor/mongo-id/id.js\"}});","map":"{\"version\":3,\"sources\":[\"packages/mongo-id/id.js\",\"<anon>\"],\"sourcesContent\":[\"import { EJSON } from 'meteor/ejson';\\nimport { Random } from 'meteor/random';\\n\\nconst MongoID = {};\\n\\nMongoID._looksLikeObjectID = str => str.length === 24 && /^[0-9a-f]*$/.test(str);\\n\\nMongoID.ObjectID = class ObjectID {\\n  constructor (hexString) {\\n    //random-based impl of Mongo ObjectID\\n    if (hexString) {\\n      hexString = hexString.toLowerCase();\\n      if (!MongoID._looksLikeObjectID(hexString)) {\\n        throw new Error('Invalid hexadecimal string for creating an ObjectID');\\n      }\\n      // meant to work with _.isEqual(), which relies on structural equality\\n      this._str = hexString;\\n    } else {\\n      this._str = Random.hexString(24);\\n    }\\n  }\\n\\n  equals(other) {\\n    return other instanceof MongoID.ObjectID &&\\n    this.valueOf() === other.valueOf();\\n  }\\n\\n  toString() {\\n    return `ObjectID(\\\"${this._str}\\\")`;\\n  }\\n\\n  clone() {\\n    return new MongoID.ObjectID(this._str);\\n  }\\n\\n  typeName() {\\n    return 'oid';\\n  }\\n\\n  getTimestamp() {\\n    return Number.parseInt(this._str.substr(0, 8), 16);\\n  }\\n\\n  valueOf() {\\n    return this._str;\\n  }\\n\\n  toJSONValue() {\\n    return this.valueOf();\\n  }\\n\\n  toHexString() {\\n    return this.valueOf();\\n  }\\n\\n}\\n\\nEJSON.addType('oid', str => new MongoID.ObjectID(str));\\n\\nMongoID.idStringify = (id) => {\\n  if (id instanceof MongoID.ObjectID) {\\n    return id.valueOf();\\n  } else if (typeof id === 'string') {\\n    var firstChar = id.charAt(0);\\n    if (id === '') {\\n      return id;\\n    } else if (firstChar === '-' || // escape previously dashed strings\\n               firstChar === '~' || // escape escaped numbers, true, false\\n               MongoID._looksLikeObjectID(id) || // escape object-id-form strings\\n               firstChar === '{') { // escape object-form strings, for maybe implementing later\\n      return `-${id}`;\\n    } else {\\n      return id; // other strings go through unchanged.\\n    }\\n  } else if (id === undefined) {\\n    return '-';\\n  } else if (typeof id === 'object' && id !== null) {\\n    throw new Error('Meteor does not currently support objects other than ObjectID as ids');\\n  } else { // Numbers, true, false, null\\n    return `~${JSON.stringify(id)}`;\\n  }\\n};\\n\\nMongoID.idParse = (id) => {\\n  var firstChar = id.charAt(0);\\n  if (id === '') {\\n    return id;\\n  } else if (id === '-') {\\n    return undefined;\\n  } else if (firstChar === '-') {\\n    return id.substr(1);\\n  } else if (firstChar === '~') {\\n    return JSON.parse(id.substr(1));\\n  } else if (MongoID._looksLikeObjectID(id)) {\\n    return new MongoID.ObjectID(id);\\n  } else {\\n    return id;\\n  }\\n};\\n\\nexport { MongoID };\\n\",null],\"names\":[\"EJSON\",\"Random\",\"module\",\"export\",\"MongoID\",\"link\",\"v\",\"_looksLikeObjectID\",\"str\",\"length\",\"test\",\"ObjectID\",\"constructor\",\"hexString\",\"toLowerCase\",\"Error\",\"_str\",\"equals\",\"other\",\"valueOf\",\"toString\",\"concat\",\"clone\",\"typeName\",\"getTimestamp\",\"Number\",\"parseInt\",\"substr\",\"toJSONValue\",\"toHexString\",\"addType\",\"idStringify\",\"id\",\"firstChar\",\"charAt\",\"undefined\",\"JSON\",\"stringify\",\"idParse\",\"parse\"],\"mappings\":\"yVAAyCA,EAA4DC,EAArGC,EAAOC,MAAM,CAAC,CAACC,QAAQA,IAAIA,CAAO,GAAaF,EAAOG,IAAI,CAAC,eAAe,CAACL,MAAMM,CAAC,EAAEN,EAAMM,CAAC,CAAC,EAAE,GAAcJ,EAAOG,IAAI,CAAC,gBAAgB,CAACJ,OAAOK,CAAC,EAAEL,EAAOK,CAAC,CAAC,EAAE,GAG9J,IAAMF,EAAU,CAAC,CAEjBA,CAAAA,EAAQG,kBAAkB,CAAGC,GAAOA,AAAe,KAAfA,EAAIC,MAAM,EAAW,cAAcC,IAAI,CAACF,GAE5EJ,EAAQO,QAAQ,CAAG,MAAMA,EACvBC,YAAaC,CAAS,CAAE,CAEtB,GAAIA,EAAW,CAEb,GADAA,EAAYA,EAAUC,WAAW,GAC7B,CAACV,EAAQG,kBAAkB,CAACM,GAC9B,MAAM,AAAIE,MAAM,sDAGlB,CAAA,IAAI,CAACC,IAAI,CAAGH,CACd,MACE,IAAI,CAACG,IAAI,CAAGf,EAAOY,SAAS,CAAC,GAEjC,CAEAI,OAAOC,CAAK,CAAE,CACZ,OAAOA,aAAiBd,EAAQO,QAAQ,EACxC,IAAI,CAACQ,OAAO,KAAOD,EAAMC,OAAO,EAClC,CAEAC,UAAW,CACT,MAAA,aAAAC,MAAA,CAAoB,IAAI,CAACL,IAAI,CAAA,KAC/B,CAEAM,OAAQ,CACN,OAAO,IAAIlB,EAAQO,QAAQ,CAAC,IAAI,CAACK,IAAI,CACvC,CAEAO,UAAW,CACT,MAAO,KACT,CAEAC,cAAe,CACb,OAAOC,OAAOC,QAAQ,CAAC,IAAI,CAACV,IAAI,CAACW,MAAM,CAAC,EAAG,GAAI,GACjD,CAEAR,SAAU,CACR,OAAO,IAAI,CAACH,IAAI,AAClB,CAEAY,aAAc,CACZ,OAAO,IAAI,CAACT,OAAO,EACrB,CAEAU,aAAc,CACZ,OAAO,IAAI,CAACV,OAAO,EACrB,CAEF,EAEAnB,EAAM8B,OAAO,CAAC,MAAOtB,GAAO,IAAIJ,EAAQO,QAAQ,CAACH,IAEjDJ,EAAQ2B,WAAW,CAAIC,IACrB,GAAIA,aAAc5B,EAAQO,QAAQ,CAChC,OAAOqB,EAAGb,OAAO,GACZ,GAAI,AAAc,UAAd,OAAOa,EAAiB,CACjC,IAAIC,EAAYD,EAAGE,MAAM,CAAC,SAC1B,AAAIF,AAAO,KAAPA,EACKA,EACEC,AAAc,MAAdA,GACAA,AAAc,MAAdA,GACA7B,EAAQG,kBAAkB,CAACyB,IAC3BC,AAAc,MAAdA,EACT,IAAAZ,MAAA,CAAWW,GAEJA,CAEX,CAAO,GAAIA,AAAOG,KAAAA,IAAPH,EACT,MAAO,IACF,GAAI,AAAc,UAAd,OAAOA,GAAmBA,AAAO,OAAPA,EAGnC,MAAA,IAAAX,MAAA,CAAWe,KAAKC,SAAS,CAACL,GAF1B,OAAM,AAAIjB,MAAM,uEAIpB,EAEAX,EAAQkC,OAAO,CAAIN,IACjB,IAAIC,EAAYD,EAAGE,MAAM,CAAC,GAC1B,GAAIF,AAAO,KAAPA,EACF,OAAOA,EACF,GAAIA,AAAO,MAAPA,GAEJ,GAAIC,AAAc,MAAdA,EACT,OAAOD,EAAGL,MAAM,CAAC,GACZ,GAAIM,AAAc,MAAdA,EACT,OAAOG,KAAKG,KAAK,CAACP,EAAGL,MAAM,CAAC,SACvB,GAAIvB,EAAQG,kBAAkB,CAACyB,GACpC,OAAO,IAAI5B,EAAQO,QAAQ,CAACqB,QAE5B,OAAOA,EAEX\"}"}