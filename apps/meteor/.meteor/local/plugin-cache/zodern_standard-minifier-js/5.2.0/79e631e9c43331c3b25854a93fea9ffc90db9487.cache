{"code":"function module(n,e,t){var o,r,u,a,l,i,c,s,f,m,d,k,x;t.link(\"@babel/runtime/regenerator\",{default:function(n){o=n}},0),t.link(\"@rocket.chat/ui-contexts\",{useEndpoint:function(n){r=n},useRouter:function(n){u=n},useToastMessageDispatch:function(n){a=n},useTranslation:function(n){l=n}},0),t.link(\"@tanstack/react-query\",{useQuery:function(n){i=n}},1),t.link(\"react\",{default:function(n){c=n}},2),t.link(\"../../../components/Contextualbar\",{Contextualbar:function(n){s=n},ContextualbarHeader:function(n){f=n},ContextualbarTitle:function(n){m=n},ContextualbarClose:function(n){d=n},ContextualbarSkeleton:function(n){k=n}},3),t.link(\"./EditRoom\",{default:function(n){x=n}},4),t.exportDefault(function(n){var e=n.rid,t=n.onReload,E=l(),b=u(),p=a(),C=r(\"GET\",\"/v1/rooms.adminRooms.getRoom\"),g=i([\"rooms\",e,\"admin\"],function(){var n;return o.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,o.awrap(C({rid:e}));case 2:return n=t.sent,t.abrupt(\"return\",n);case 4:case\"end\":return t.stop()}},null,null,null,Promise)},{onError:function(n){p({type:\"error\",message:n})}}),v=g.data,R=g.isLoading,h=g.refetch;return R?c.createElement(k,null):v?c.createElement(s,null,c.createElement(f,null,c.createElement(m,null,E(\"Room_Info\")),c.createElement(d,{onClick:function(){return b.navigate(\"/admin/rooms\")}})),c.createElement(x,{room:v,onChange:function(){h(),t()},onDelete:function(){t()}})):null})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/rooms/EditRoomWithData.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom } from '@rocket.chat/core-typings';\\nimport { useEndpoint, useRouter, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\\nimport { useQuery } from '@tanstack/react-query';\\nimport React from 'react';\\n\\nimport {\\n\\tContextualbar,\\n\\tContextualbarHeader,\\n\\tContextualbarTitle,\\n\\tContextualbarClose,\\n\\tContextualbarSkeleton,\\n} from '../../../components/Contextualbar';\\nimport EditRoom from './EditRoom';\\n\\ntype EditRoomWithDataProps = { rid?: IRoom['_id']; onReload: () => void };\\n\\nconst EditRoomWithData = ({ rid, onReload }: EditRoomWithDataProps) => {\\n\\tconst t = useTranslation();\\n\\tconst router = useRouter();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\n\\tconst getAdminRooms = useEndpoint('GET', '/v1/rooms.adminRooms.getRoom');\\n\\n\\tconst { data, isLoading, refetch } = useQuery(\\n\\t\\t['rooms', rid, 'admin'],\\n\\t\\tasync () => {\\n\\t\\t\\tconst rooms = await getAdminRooms({ rid });\\n\\t\\t\\treturn rooms;\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tonError: (error) => {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t},\\n\\t\\t},\\n\\t);\\n\\n\\tif (isLoading) {\\n\\t\\treturn <ContextualbarSkeleton />;\\n\\t}\\n\\n\\tconst handleChange = (): void => {\\n\\t\\trefetch();\\n\\t\\tonReload();\\n\\t};\\n\\n\\tconst handleDelete = (): void => {\\n\\t\\tonReload();\\n\\t};\\n\\n\\treturn data ? (\\n\\t\\t<Contextualbar>\\n\\t\\t\\t<ContextualbarHeader>\\n\\t\\t\\t\\t<ContextualbarTitle>{t('Room_Info')}</ContextualbarTitle>\\n\\t\\t\\t\\t<ContextualbarClose onClick={() => router.navigate('/admin/rooms')} />\\n\\t\\t\\t</ContextualbarHeader>\\n\\t\\t\\t<EditRoom room={data as IRoom} onChange={handleChange} onDelete={handleDelete} />\\n\\t\\t</Contextualbar>\\n\\t) : null;\\n};\\n\\nexport default EditRoomWithData;\\n\",null],\"names\":[\"_regeneratorRuntime\",\"useEndpoint\",\"useRouter\",\"useToastMessageDispatch\",\"useTranslation\",\"useQuery\",\"React\",\"Contextualbar\",\"ContextualbarHeader\",\"ContextualbarTitle\",\"ContextualbarClose\",\"ContextualbarSkeleton\",\"EditRoom\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"rid\",\"onReload\",\"t\",\"router\",\"dispatchToastMessage\",\"getAdminRooms\",\"_useQuery\",\"rooms\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"sent\",\"abrupt\",\"stop\",\"Promise\",\"onError\",\"error\",\"type\",\"message\",\"data\",\"isLoading\",\"refetch\",\"createElement\",\"onClick\",\"navigate\",\"room\",\"onChange\",\"onDelete\"],\"mappings\":\"uBAgBA,IAfAA,EAAAC,EAASC,EAAaC,EAAWC,EAA0EC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAArFC,EAASC,IAAE,CAAA,6BAAyB,CAAAC,QAAgB,SAAMC,CAAA,EAAAhB,EAA0BgB,CAAC,CAAA,EAAA,GAAjDH,EAAcC,IAAE,CAAA,2BAAM,CAAAb,YAA2B,SAAAe,CAAA,EAAAf,EAAAe,CAAA,EAAAd,UAAA,SAAAc,CAAA,EAAAd,EAAAc,CAAA,EAAAb,wBAAA,SAAAa,CAAA,EAAAb,EAAAa,CAAA,EAAAZ,eAAA,SAAAY,CAAA,EAAAZ,EAAAY,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wBAAA,CAAAT,SAAA,SAAAW,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAA,QAAA,SAAAE,CAAA,EAAAV,EAAAU,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,oCAAA,CAAAP,cAAA,SAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,oBAAA,SAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,mBAAA,SAAAO,CAAA,EAAAP,EAAAO,CAAA,EAAAN,mBAAA,SAAAM,CAAA,EAAAN,EAAAM,CAAA,EAAAL,sBAAA,SAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,aAAA,CAAA,QAAA,SAAAE,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAA3GH,EAAOI,aAAa,CAeK,SAAAC,CAAA,EAA6C,IAA1CC,EAAGD,EAAHC,GAAG,CAAEC,EAAQF,EAARE,QAAQ,CAClCC,EAAIjB,IACJkB,EAASpB,IACTqB,EAAuBpB,IAEvBqB,EAAgBvB,EAAY,MAAO,gCAEzCwB,EAAqCpB,EACpC,CAAC,QAASc,EAAK,QAAQ,CACvB,WAAA,IAAAO,EAAA,OAAA1B,EAAA2B,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAE,IAAA,CAAA,EAAA9B,EAAA+B,KAAA,CACqBP,EAAc,CAAEL,IAAAA,CAAG,GAAG,MAAA,EAA/B,OAALO,EAAKE,EAAAI,IAAA,CAAAJ,EAAAK,MAAA,CAAA,SACJP,EAAK,MAAA,EAAA,IAAA,MAAA,OAAAE,EAAAM,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAAA,EAEb,CACCC,QAAS,SAACC,CAAK,EACdd,EAAqB,CAAEe,KAAM,QAASC,QAASF,CAAK,EACrD,IATMG,EAAIf,EAAJe,IAAI,CAAEC,EAAShB,EAATgB,SAAS,CAAEC,EAAOjB,EAAPiB,OAAO,QAahC,AAAID,EACInC,EAAAqC,aAAA,CAAChC,EAAqB,MAYvB6B,EACNlC,EAAAqC,aAAA,CAACpC,EAAa,KACbD,EAAAqC,aAAA,CAACnC,EAAmB,KACnBF,EAAAqC,aAAA,CAAClC,EAAkB,KAAEY,EAAE,cACvBf,EAAAqC,aAAA,CAACjC,EAAkB,CAACkC,QAAS,WAAA,OAAMtB,EAAOuB,QAAQ,CAAC,eAAe,CAAC,IAEpEvC,EAAAqC,aAAA,CAAC/B,EAAQ,CAACkC,KAAMN,EAAeO,SAfZ,WACpBL,IACAtB,GACD,EAYyD4B,SAVpC,WACpB5B,GACD,CAQgF,IAE5E,IACL\"}"}