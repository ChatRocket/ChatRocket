{"code":"function module(n,t,r){r.export({createReactiveSubscriptionFactory:function(){return e}}),r.link(\"meteor/tracker\",{Tracker:function(n){u=n}},0),r.link(\"./utils/queueMicrotask\",{queueMicrotask:function(n){o=n}},1);var u,o,e=function(n){return function(){for(var t,r=arguments.length,e=Array(r),i=0;i<r;i++)e[i]=arguments[i];var c=new Set,a=n.apply(void 0,e),f=function(){a=n.apply(void 0,e),o(function(){c.forEach(function(n){n()})})};return o(function(){t=u.autorun(f)}),[function(n){return c.add(n),function(){c.delete(n),0===c.size&&o(function(){var n;return null===(n=t)||void 0===n?void 0:n.stop()})}},function(){return a}]}}}","map":"{\"version\":3,\"sources\":[\"client/lib/createReactiveSubscriptionFactory.ts\",\"<anon>\"],\"sourcesContent\":[\"import { Tracker } from 'meteor/tracker';\\n\\nimport { queueMicrotask } from './utils/queueMicrotask';\\n\\ninterface ISubscriptionFactory<T> {\\n\\t(...args: any[]): [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => T];\\n}\\n\\nexport const createReactiveSubscriptionFactory =\\n\\t<T>(computeCurrentValueWith: (...args: any[]) => T): ISubscriptionFactory<T> =>\\n\\t(...args: any[]): [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => T] => {\\n\\t\\tconst callbacks = new Set<() => void>();\\n\\n\\t\\tlet currentValue = computeCurrentValueWith(...args);\\n\\n\\t\\tconst reactiveFn = (): void => {\\n\\t\\t\\tcurrentValue = computeCurrentValueWith(...args);\\n\\t\\t\\tqueueMicrotask(() => {\\n\\t\\t\\t\\tcallbacks.forEach((callback) => {\\n\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\t\\t};\\n\\n\\t\\tlet computation: Tracker.Computation | undefined;\\n\\n\\t\\tqueueMicrotask(() => {\\n\\t\\t\\tcomputation = Tracker.autorun(reactiveFn);\\n\\t\\t});\\n\\n\\t\\treturn [\\n\\t\\t\\t(callback): (() => void) => {\\n\\t\\t\\t\\tcallbacks.add(callback);\\n\\n\\t\\t\\t\\treturn (): void => {\\n\\t\\t\\t\\t\\tcallbacks.delete(callback);\\n\\n\\t\\t\\t\\t\\tif (callbacks.size === 0) {\\n\\t\\t\\t\\t\\t\\tqueueMicrotask(() => computation?.stop());\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\t\\t\\t},\\n\\t\\t\\t(): T => currentValue,\\n\\t\\t];\\n\\t};\\n\",null],\"names\":[\"module\",\"export\",\"createReactiveSubscriptionFactory\",\"link\",\"Tracker\",\"v\",\"queueMicrotask\",\"computeCurrentValueWith\",\"computation\",\"_len\",\"arguments\",\"length\",\"args\",\"Array\",\"_key\",\"callbacks\",\"Set\",\"currentValue\",\"apply\",\"reactiveFn\",\"forEach\",\"callback\",\"autorun\",\"add\",\"delete\",\"size\",\"_computation\",\"stop\"],\"mappings\":\"uBAAAA,EAAOC,MAAE,CAAA,CAAAC,kCAAgC,WAAA,OAAAA,CAAA,CAAA,GAAAF,EAAAG,IAAA,CAAA,iBAAA,CAAAC,QAAA,SAAAC,CAAA,EAAAD,EAAAC,CAAA,CAAA,EAAA,GAAAL,EAAAG,IAAA,CAAA,yBAAA,CAAAG,eAAA,SAAAD,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAQlC,IARkCD,EAAAE,EAQ5BJ,EACZ,SAAIK,CAA8C,EAAA,OAClD,WAAiG,IAAA,IAc5FC,EAd4FC,EAAAC,UAAAC,MAAA,CAA7FC,EAAW,AAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAXF,CAAW,CAAAE,EAAA,CAAAJ,SAAA,CAAAI,EAAA,CACd,IAAMC,EAAY,IAAIC,IAElBC,EAAeV,EAAuBW,KAAA,CAAA,KAAA,EAAIN,GAExCO,EAAa,WAClBF,EAAeV,EAAuBW,KAAA,CAAA,KAAA,EAAIN,GAC1CN,EAAe,WACdS,EAAUK,OAAO,CAAC,SAACC,CAAQ,EAC1BA,GACD,EACD,EACD,EAQA,OAJAf,EAAe,WACdE,EAAcJ,EAAQkB,OAAO,CAACH,EAC/B,GAEO,CACN,SAACE,CAAQ,EAGR,OAFAN,EAAUQ,GAAG,CAACF,GAEP,WACNN,EAAUS,MAAM,CAACH,GAEM,IAAnBN,EAAUU,IAAI,EACjBnB,EAAe,WAAA,IAAAoB,EAAA,OAAA,AAAiB,OAAjBA,CAAAA,EAAMlB,CAAAA,GAAWkB,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAXA,EAAaC,IAAI,EAAE,EAE1C,CACD,EACA,WAAA,OAASV,CAAY,EACrB,AACF,CAAC\"}"}