{"code":"function module(e,n,o){o.export({useUserHasRoomRole:function(){return l}}),o.link(\"react\",{useCallback:function(e){u=e}},0),o.link(\"../../../../app/models/client\",{RoomRoles:function(e){i=e}},1),o.link(\"../../../hooks/useReactiveValue\",{useReactiveValue:function(e){t=e}},2);var u,i,t,l=function(e,n,o){return t(u(function(){return!!i.findOne({rid:n,\"u._id\":e,roles:o})},[e,n,o]))}}","map":"{\"version\":3,\"sources\":[\"client/views/room/hooks/useUserHasRoomRole.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRole, IRoom, IUser } from '@rocket.chat/core-typings';\\nimport { useCallback } from 'react';\\n\\nimport { RoomRoles } from '../../../../app/models/client';\\nimport { useReactiveValue } from '../../../hooks/useReactiveValue';\\n\\nexport const useUserHasRoomRole = (uid: IUser['_id'], rid: IRoom['_id'], role: IRole['name']): boolean =>\\n\\tuseReactiveValue(useCallback(() => !!RoomRoles.findOne({ rid, 'u._id': uid, 'roles': role }), [uid, rid, role]));\\n\",null],\"names\":[\"module\",\"export\",\"useUserHasRoomRole\",\"link\",\"useCallback\",\"v\",\"RoomRoles\",\"useReactiveValue\",\"uid\",\"rid\",\"role\",\"findOne\"],\"mappings\":\"uBACAA,EAAOC,MAAE,CAAA,CAAAC,mBAAmB,WAAQ,OAAAA,CAAA,CAAA,GAAAF,EAAAG,IAAA,CAAA,QAAA,CAAAC,YAAA,SAAAC,CAAA,EAAAD,EAAAC,CAAA,CAAA,EAAA,GAAAL,EAAAG,IAAA,CAAA,gCAAA,CAAAG,UAAA,SAAAD,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAAAL,EAAAG,IAAA,CAAA,kCAAA,CAAAI,iBAAA,SAAAF,CAAA,EAAAE,EAAAF,CAAA,CAAA,EAAA,GAK7B,IAL6BD,EAAAE,EAAAC,EAKvBL,EAAqB,SAACM,CAAiB,CAAEC,CAAiB,CAAEC,CAAmB,EAAA,OAC3FH,EAAiBH,EAAY,WAAA,MAAM,CAAC,CAACE,EAAUK,OAAO,CAAC,CAAEF,IAAAA,EAAK,QAASD,EAAK,MAASE,CAAI,EAAG,EAAE,CAACF,EAAKC,EAAKC,EAAK,EAAE\"}"}