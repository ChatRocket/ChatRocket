{"code":"function module(e,t,c){let u,n,o;c.export({useCurrentChats:()=>r}),c.link(\"@rocket.chat/fuselage-hooks\",{useDebouncedValue(e){u=e}},0),c.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){n=e}},1),c.link(\"@tanstack/react-query\",{useQuery(e){o=e}},2);let r=e=>{let t=n(\"GET\",\"/v1/livechat/rooms\"),c=u(e,500);return o([\"current-chats\",c],()=>t(c),{refetchOnWindowFocus:!1,cacheTime:0})}}","map":"{\"version\":3,\"sources\":[\"client/views/omnichannel/currentChats/hooks/useCurrentChats.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\\nimport type { GETLivechatRoomsParams, OperationResult } from '@rocket.chat/rest-typings';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport type { UseQueryResult } from '@tanstack/react-query';\\nimport { useQuery } from '@tanstack/react-query';\\n\\nexport const useCurrentChats = (query: GETLivechatRoomsParams): UseQueryResult<OperationResult<'GET', '/v1/livechat/rooms'>> => {\\n\\tconst currentChats = useEndpoint('GET', '/v1/livechat/rooms');\\n\\n\\tconst debouncedQuery = useDebouncedValue(query, 500);\\n\\n\\treturn useQuery(['current-chats', debouncedQuery], () => currentChats(debouncedQuery), {\\n\\t\\t// TODO: Update this to use an stream of room changes instead of polling\\n\\t\\trefetchOnWindowFocus: false,\\n\\t\\tcacheTime: 0,\\n\\t});\\n};\\n\",null],\"names\":[\"useDebouncedValue\",\"useEndpoint\",\"useQuery\",\"module\",\"export\",\"useCurrentChats\",\"link\",\"v\",\"query\",\"currentChats\",\"debouncedQuery\",\"refetchOnWindowFocus\",\"cacheTime\"],\"mappings\":\"2BAAkCA,EAA8BC,EAAAC,EAAhEC,EAAOC,MAAE,CAAA,CAAAC,gBAAmBA,IAAMA,CAAA,GAA8BF,EAAAG,IAAA,CAAA,8BAAA,CAAAN,kBAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,2BAAA,CAAAL,YAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,wBAAA,CAAAJ,SAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAMzD,IAAMF,EAAmBG,IAC/B,IAAMC,EAAeR,EAAY,MAAO,sBAElCS,EAAiBV,EAAkBQ,EAAO,KAEhD,OAAON,EAAS,CAAC,gBAAiBQ,EAAe,CAAE,IAAMD,EAAaC,GAAiB,CAEtFC,qBAAsB,CAAA,EACtBC,UAAW,GAEb\"}"}