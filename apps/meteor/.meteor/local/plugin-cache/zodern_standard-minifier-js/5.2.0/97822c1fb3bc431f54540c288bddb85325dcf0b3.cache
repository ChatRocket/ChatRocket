{"code":"function module(e,t,l){let a,r,i,s,n,o,c,g,u;l.export({useCategories:()=>h}),l.link(\"react\",{useCallback(e){a=e},useEffect(e){r=e},useMemo(e){i=e},useState(e){s=e}},0),l.link(\"react-i18next\",{useTranslation(e){n=e}},1),l.link(\"../../../apps/orchestrator\",{AppClientOrchestratorInstance(e){o=e}},2),l.link(\"../helpers/handleAPIError\",{handleAPIError(e){c=e}},3),l.link(\"./useCategoryFlatList\",{useCategoryFlatList(e){g=e}},4),l.link(\"./useCategoryToggle\",{useCategoryToggle(e){u=e}},5);let h=()=>{let{t:e}=n(),[t,l]=s([]),h=a(async()=>{try{let t=await o.getCategories(),a=t.filter(e=>!e.hidden).map(e=>({id:e.id,label:e.title,checked:!1}));l([{items:[{id:\"all\",label:e(\"All_categories\")}]},{label:e(\"Filter_by_category\"),items:a}])}catch(e){c(e)}},[e]);r(()=>{let e=async()=>{await h()};e()},[h]);let d=u(l),k=g(t),y=g(t).length,C=i(()=>k.filter(e=>!!e.checked),[k]);return[t,C,y===C.length?[]:C,d]}}","map":"{\"version\":3,\"sources\":[\"client/views/marketplace/hooks/useCategories.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useCallback, useEffect, useMemo, useState } from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport { AppClientOrchestratorInstance } from '../../../apps/orchestrator';\\nimport type {\\n\\tCategoryDropDownGroups,\\n\\tCategoryDropdownItem,\\n\\tCategoryDropDownListProps,\\n\\tCategoryOnSelected,\\n\\tselectedCategoriesList,\\n} from '../definitions/CategoryDropdownDefinitions';\\nimport { handleAPIError } from '../helpers/handleAPIError';\\nimport { useCategoryFlatList } from './useCategoryFlatList';\\nimport { useCategoryToggle } from './useCategoryToggle';\\n\\nexport const useCategories = (): [CategoryDropDownGroups, selectedCategoriesList, selectedCategoriesList, CategoryOnSelected] => {\\n\\tconst { t } = useTranslation();\\n\\tconst [categories, setCategories] = useState<CategoryDropDownListProps['categories']>([]);\\n\\n\\tconst fetchCategories = useCallback(async (): Promise<void> => {\\n\\t\\ttry {\\n\\t\\t\\tconst fetchedCategories = await AppClientOrchestratorInstance.getCategories();\\n\\n\\t\\t\\tconst mappedCategories = fetchedCategories\\n\\t\\t\\t\\t.filter((currentCategory) => !currentCategory.hidden)\\n\\t\\t\\t\\t.map((currentCategory) => ({\\n\\t\\t\\t\\t\\tid: currentCategory.id,\\n\\t\\t\\t\\t\\tlabel: currentCategory.title,\\n\\t\\t\\t\\t\\tchecked: false,\\n\\t\\t\\t\\t}));\\n\\n\\t\\t\\tsetCategories([\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\titems: [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tid: 'all',\\n\\t\\t\\t\\t\\t\\t\\tlabel: t('All_categories'),\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t],\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tlabel: t('Filter_by_category'),\\n\\t\\t\\t\\t\\titems: mappedCategories,\\n\\t\\t\\t\\t},\\n\\t\\t\\t]);\\n\\t\\t} catch (e: any) {\\n\\t\\t\\thandleAPIError(e);\\n\\t\\t}\\n\\t}, [t]);\\n\\n\\tuseEffect(() => {\\n\\t\\tconst fetchCategoriesWrapper = async (): Promise<void> => {\\n\\t\\t\\tawait fetchCategories();\\n\\t\\t};\\n\\n\\t\\tfetchCategoriesWrapper();\\n\\t}, [fetchCategories]);\\n\\n\\tconst onSelected = useCategoryToggle(setCategories);\\n\\tconst flatCategories = useCategoryFlatList(categories);\\n\\tconst originalSize = useCategoryFlatList(categories).length;\\n\\n\\tconst selectedCategories = useMemo(\\n\\t\\t() => flatCategories.filter((category) => Boolean(category.checked)),\\n\\t\\t[flatCategories],\\n\\t) as (CategoryDropdownItem & { checked: true })[];\\n\\treturn [categories, selectedCategories, originalSize === selectedCategories.length ? [] : selectedCategories, onSelected];\\n};\\n\",null],\"names\":[\"useCallback\",\"useEffect\",\"useMemo\",\"useState\",\"useTranslation\",\"AppClientOrchestratorInstance\",\"handleAPIError\",\"useCategoryFlatList\",\"useCategoryToggle\",\"module\",\"export\",\"useCategories\",\"link\",\"v\",\"t\",\"categories\",\"setCategories\",\"fetchCategories\",\"fetchedCategories\",\"getCategories\",\"mappedCategories\",\"filter\",\"currentCategory\",\"hidden\",\"map\",\"id\",\"label\",\"title\",\"checked\",\"items\",\"e\",\"fetchCategoriesWrapper\",\"onSelected\",\"flatCategories\",\"originalSize\",\"length\",\"selectedCategories\",\"category\",\"Boolean\"],\"mappings\":\"2BAAoDA,EAAaC,EAACC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAlEC,EAAOC,MAAE,CAAA,CAAAC,cAAaA,IAAWA,CAAS,GAAwBF,EAAAG,IAAA,CAAA,QAAA,CAAAZ,YAAAa,CAAA,EAAAb,EAAAa,CAAA,EAAAZ,UAAAY,CAAA,EAAAZ,EAAAY,CAAA,EAAAX,QAAAW,CAAA,EAAAX,EAAAW,CAAA,EAAAV,SAAAU,CAAA,EAAAV,EAAAU,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,gBAAA,CAAAR,eAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,6BAAA,CAAAP,8BAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,4BAAA,CAAAN,eAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,wBAAA,CAAAL,oBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,sBAAA,CAAAJ,kBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAe3D,IAAMF,EAAgBA,KAC5B,GAAM,CAAEG,EAAAA,CAAAA,CAAG,CAAGV,IACR,CAACW,EAAYC,EAAc,CAAGb,EAAkD,EAAE,EAElFc,EAAkBjB,EAAY,UACnC,GAAI,CACH,IAAMkB,EAAoB,MAAMb,EAA8Bc,aAAa,GAErEC,EAAmBF,EACvBG,MAAM,CAAEC,GAAoB,CAACA,EAAgBC,MAAM,EACnDC,GAAG,CAAEF,GAAqB,CAAA,CAC1BG,GAAIH,EAAgBG,EAAE,CACtBC,MAAOJ,EAAgBK,KAAK,CAC5BC,QAAS,CAAA,KAGXZ,EAAc,CACb,CACCa,MAAO,CACN,CACCJ,GAAI,MACJC,MAAOZ,EAAE,mBACT,EAGH,CACCY,MAAOZ,EAAE,sBACTe,MAAOT,GAER,CACF,CAAE,MAAOU,EAAQ,CAChBxB,EAAewB,EAChB,CACD,EAAG,CAAChB,EAAE,EAENb,EAAU,KACT,IAAM8B,EAAyB,UAC9B,MAAMd,GACP,EAEAc,GACD,EAAG,CAACd,EAAgB,EAEpB,IAAMe,EAAaxB,EAAkBQ,GAC/BiB,EAAiB1B,EAAoBQ,GACrCmB,EAAe3B,EAAoBQ,GAAYoB,MAAM,CAErDC,EAAqBlC,EAC1B,IAAM+B,EAAeZ,MAAM,CAAEgB,GAAaC,CAAAA,CAAQD,EAAST,OAAO,EAClE,CAACK,EAAe,EAEjB,MAAO,CAAClB,EAAYqB,EAAoBF,IAAiBE,EAAmBD,MAAM,CAAG,EAAE,CAAGC,EAAoBJ,EAAW,AAC1H\"}"}