{"code":"Package[\"core-runtime\"].queue(\"localstorage\",function(){var e=Package.meteor.Meteor,t=Package.meteor.global;Package.meteor.meteorEnv;var o=Package.random.Random;return(function(){var a,r,n=Object.prototype.hasOwnProperty,c=\"_localstorage_test_\"+o.id();try{(r=t.localStorage)&&(r.setItem(c,c),a=r.getItem(c),r.removeItem(c))}catch(e){}c===a&&(e.isServer?e._localStorage=r:[\"getItem\",\"setItem\",\"removeItem\"].forEach(function(e){this[e]=function(){return r[e].apply(r,arguments)}},e._localStorage={})),e._localStorage||(e.isClient&&e._debug(\"You are running a browser with no localStorage or userData support. Logging in from one tab will not cause another tab to be logged in.\"),e._localStorage=Object.create({setItem:function(e,t){this[e]=t},removeItem:function(e){delete this[e]},getItem:function(e){return n.call(this,e)?this[e]:null}}))}).call(this),{}});","map":"{\"version\":3,\"sources\":[\"packages/localstorage/localstorage.js\",\"<anon>\"],\"sourcesContent\":[\"// Meteor._localStorage is not an ideal name, but we can change it later.\\n\\n// Let's test to make sure that localStorage actually works. For example, in\\n// Safari with private browsing on, window.localStorage exists but actually\\n// trying to use it throws.\\n// Accessing window.localStorage can also immediately throw an error in IE (#1291).\\n\\nvar hasOwn = Object.prototype.hasOwnProperty;\\nvar key = '_localstorage_test_' + Random.id();\\nvar retrieved;\\nvar storage;\\n\\ntry {\\n  storage = global.localStorage;\\n\\n  if (storage) {\\n    storage.setItem(key, key);\\n    retrieved = storage.getItem(key);\\n    storage.removeItem(key);\\n  }\\n} catch (ignored) {}\\n\\nif (key === retrieved) {\\n  if (Meteor.isServer) {\\n    Meteor._localStorage = storage;\\n  } else {\\n    // Some browsers (e.g. IE11) don't properly handle attempts to change\\n    // window.localStorage methods. By using proxy methods to expose\\n    // window.localStorage functionality, developers can change the\\n    // behavior of Meteor._localStorage methods without breaking\\n    // window.localStorage.\\n    [\\\"getItem\\\",\\n     \\\"setItem\\\",\\n     \\\"removeItem\\\",\\n    ].forEach(function (name) {\\n      this[name] = function () {\\n        return storage[name].apply(storage, arguments);\\n      };\\n    }, Meteor._localStorage = {});\\n  }\\n}\\n\\nif (! Meteor._localStorage) {\\n  if (Meteor.isClient) {\\n    Meteor._debug(\\n      \\\"You are running a browser with no localStorage or userData \\\"\\n        + \\\"support. Logging in from one tab will not cause another \\\"\\n        + \\\"tab to be logged in.\\\");\\n  }\\n\\n  Meteor._localStorage = Object.create({\\n    setItem: function (key, val) {\\n      this[key] = val;\\n    },\\n\\n    removeItem: function (key) {\\n      delete this[key];\\n    },\\n\\n    getItem: function (key) {\\n      return hasOwn.call(this, key) ? this[key] : null;\\n    }\\n  });\\n}\\n\\n\",null],\"names\":[\"retrieved\",\"storage\",\"hasOwn\",\"Object\",\"prototype\",\"hasOwnProperty\",\"key\",\"Random\",\"id\",\"global\",\"localStorage\",\"setItem\",\"getItem\",\"removeItem\",\"ignored\",\"Meteor\",\"isServer\",\"_localStorage\",\"forEach\",\"name\",\"apply\",\"arguments\",\"isClient\",\"_debug\",\"create\",\"val\",\"call\"],\"mappings\":\"mLAOA,IAEAA,EACAC,EAHAC,EAAAC,OAAAC,SAAA,CAAAC,cAAA,CACAC,EAAA,sBAAAC,EAAAC,EAAA,GAIA,GAAA,CACAP,CAAAA,EAAAQ,EAAAC,YAAA,IAGAT,EAAAU,OAAA,CAAAL,EAAAA,GACAN,EAAAC,EAAAW,OAAA,CAAAN,GACAL,EAAAY,UAAA,CAAAP,GAEA,CAAA,MAAAQ,EAAA,CAAA,CAEAR,IAAAN,IACAe,EAAAC,QAAA,CACAD,EAAAE,aAAA,CAAAhB,EAOA,CAAA,UACA,UACA,aACA,CAAAiB,OAAA,CAAA,SAAAC,CAAA,EACA,IAAA,CAAAA,EAAA,CAAA,WACA,OAAAlB,CAAA,CAAAkB,EAAA,CAAAC,KAAA,CAAAnB,EAAAoB,UACA,CACA,EAAAN,EAAAE,aAAA,CAAA,CAAA,IAIAF,EAAAE,aAAA,GACAF,EAAAO,QAAA,EACAP,EAAAQ,MAAA,CACA,2IAKAR,EAAAE,aAAA,CAAAd,OAAAqB,MAAA,CAAA,CACAb,QAAA,SAAAL,CAAA,CAAAmB,CAAA,EACA,IAAA,CAAAnB,EAAA,CAAAmB,CACA,EAEAZ,WAAA,SAAAP,CAAA,EACA,OAAA,IAAA,CAAAA,EAAA,AACA,EAEAM,QAAA,SAAAN,CAAA,EACA,OAAAJ,EAAAwB,IAAA,CAAA,IAAA,CAAApB,GAAA,IAAA,CAAAA,EAAA,CAAA,IACA,CACA\"}"}