{"code":"function module(e,s,t){let i,a,n,l,o;t.export({useGetMessageByID:()=>c}),t.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){i=e}},0),t.link(\"react\",{useCallback(e){a=e}},1),t.link(\"../../../../../../app/models/client\",{Messages(e){n=e}},2),t.link(\"../../../../../lib/onClientMessageReceived\",{onClientMessageReceived(e){l=e}},3),t.link(\"../../../../../lib/utils/mapMessageFromApi\",{mapMessageFromApi(e){o=e}},4);let c=()=>{let e=i(\"GET\",\"/v1/chat.getMessage\");return a(async s=>{try{let{message:t}=await e({msgId:s}),i=o(t),a=await l(i)||i;return n.upsert({_id:a._id},{$set:a}),a}catch(e){if(\"object\"==typeof e&&null!==e&&\"success\"in e)throw Error(\"Message not found\");throw e}},[e])}}","map":"{\"version\":3,\"sources\":[\"client/views/room/contextualBar/Threads/hooks/useGetMessageByID.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage } from '@rocket.chat/core-typings';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useCallback } from 'react';\\n\\nimport { Messages } from '../../../../../../app/models/client';\\nimport { onClientMessageReceived } from '../../../../../lib/onClientMessageReceived';\\nimport { mapMessageFromApi } from '../../../../../lib/utils/mapMessageFromApi';\\n\\nexport const useGetMessageByID = () => {\\n\\tconst getMessage = useEndpoint('GET', '/v1/chat.getMessage');\\n\\n\\treturn useCallback(\\n\\t\\tasync (mid: IMessage['_id']) => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tconst { message: rawMessage } = await getMessage({ msgId: mid });\\n\\t\\t\\t\\tconst mappedMessage = mapMessageFromApi(rawMessage);\\n\\t\\t\\t\\tconst message = (await onClientMessageReceived(mappedMessage)) || mappedMessage;\\n\\t\\t\\t\\tMessages.upsert({ _id: message._id }, { $set: message as any });\\n\\t\\t\\t\\treturn message;\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tif (typeof error === 'object' && error !== null && 'success' in error) {\\n\\t\\t\\t\\t\\tthrow new Error('Message not found');\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthrow error;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t[getMessage],\\n\\t);\\n};\\n\",null],\"names\":[\"useEndpoint\",\"useCallback\",\"Messages\",\"onClientMessageReceived\",\"mapMessageFromApi\",\"module\",\"export\",\"useGetMessageByID\",\"link\",\"v\",\"getMessage\",\"mid\",\"message\",\"rawMessage\",\"msgId\",\"mappedMessage\",\"upsert\",\"_id\",\"$set\",\"error\",\"Error\"],\"mappings\":\"2BACuDA,EAAAC,EAAAC,EAAAC,EAAAC,EAAvDC,EAAOC,MAAE,CAAA,CAAAC,kBAAmBA,IAAAA,CAA0B,GAACF,EAAAG,IAAA,CAAA,2BAAA,CAAAR,YAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,QAAA,CAAAP,YAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,sCAAA,CAAAN,SAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,6CAAA,CAAAL,wBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,6CAAA,CAAAJ,kBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAOhD,IAAMF,EAAoBA,KAChC,IAAMG,EAAaV,EAAY,MAAO,uBAEtC,OAAOC,EACN,MAAOU,IACN,GAAI,CACH,GAAM,CAAEC,QAASC,CAAAA,CAAY,CAAG,MAAMH,EAAW,CAAEI,MAAOH,CAAG,GACvDI,EAAgBX,EAAkBS,GAClCD,EAAU,AAAC,MAAMT,EAAwBY,IAAmBA,EAElE,OADAb,EAASc,MAAM,CAAC,CAAEC,IAAKL,EAAQK,GAAAA,AAAG,EAAI,CAAEC,KAAMN,CAAc,GACrDA,CACR,CAAE,MAAOO,EAAO,CACf,GAAI,AAAiB,UAAjB,OAAOA,GAAsBA,AAAU,OAAVA,GAAkB,YAAaA,EAC/D,MAAM,AAAIC,MAAM,oBAGjB,OAAMD,CACP,CACD,EACA,CAACT,EAAW,CAEd\"}"}