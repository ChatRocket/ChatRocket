{"code":"function module(e,n,t){var a,r,u,c,i,l,s,o,f,d,h,p,k,b=[\"params\",\"reloadRef\"];t.link(\"@babel/runtime/regenerator\",{default:function(e){a=e}},0),t.link(\"@babel/runtime/helpers/extends\",{default:function(e){r=e}},1),t.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(e){u=e}},2),t.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default:function(e){c=e}},3),t.link(\"react\",{default:function(e){i=e},useRef:function(e){l=e},useEffect:function(e){s=e}},0),t.link(\"react-i18next\",{useTranslation:function(e){o=e}},1),t.link(\"../../../../../app/livechat/client/lib/chartHandler\",{drawLineChart:function(e){f=e}},2),t.link(\"../../../../hooks/useAsyncState\",{AsyncStatePhase:function(e){d=e}},3),t.link(\"../../../../hooks/useEndpointData\",{useEndpointData:function(e){h=e}},4),t.link(\"./Chart\",{default:function(e){p=e}},5),t.link(\"./useUpdateChartData\",{useUpdateChartData:function(e){k=e}},6);var m=function(e,n,t){return f(e,n,[t(\"Open\"),t(\"Closed\"),t(\"On_Hold_Chats\")],[],[[],[]],{legends:!0,anim:!0,smallTicks:!0})};t.exportDefault(function(e){var n=e.params,t=e.reloadRef,f=c(e,b),v=o().t,x=l(null),C=l(),E=k({context:C,canvas:x,t:v,init:m}),D=h(\"/v1/livechat/analytics/dashboards/charts/chats-per-agent\",{params:n}),y=D.value,R=void 0===y?{}:y,g=D.phase,A=D.reload;return t.current.chatsPerAgentChart=A,s(function(){a.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(x.current){e.next=2;break}return e.abrupt(\"return\");case 2:return e.next=4,a.awrap(m(x.current,C.current,v));case 4:C.current=e.sent;case 5:case\"end\":return e.stop()}},null,null,null,Promise)},[v]),s(function(){g===d.RESOLVED&&Object.entries(R).forEach(function(e){var n=u(e,2),t=n[0],a=n[1];\"success\"!==t&&E(t,[a.open,a.closed,a.onhold])})},[R,g,v,E]),i.createElement(p,r({canvasRef:x},f))})}","map":"{\"version\":3,\"sources\":[\"client/views/omnichannel/realTimeMonitoring/charts/ChatsPerAgentChart.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { Box } from '@rocket.chat/fuselage';\\nimport type { OperationParams } from '@rocket.chat/rest-typings';\\nimport type * as chartjs from 'chart.js';\\nimport type { TFunction } from 'i18next';\\nimport type { ComponentPropsWithoutRef, MutableRefObject } from 'react';\\nimport React, { useRef, useEffect } from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport { drawLineChart } from '../../../../../app/livechat/client/lib/chartHandler';\\nimport { AsyncStatePhase } from '../../../../hooks/useAsyncState';\\nimport { useEndpointData } from '../../../../hooks/useEndpointData';\\nimport Chart from './Chart';\\nimport { useUpdateChartData } from './useUpdateChartData';\\n\\nconst init = (canvas: HTMLCanvasElement, context: chartjs.Chart<'line'> | undefined, t: TFunction) =>\\n\\tdrawLineChart(canvas, context, [t('Open'), t('Closed'), t('On_Hold_Chats')], [], [[], []], {\\n\\t\\tlegends: true,\\n\\t\\tanim: true,\\n\\t\\tsmallTicks: true,\\n\\t});\\n\\ntype ChatsPerAgentChartProps = {\\n\\tparams: OperationParams<'GET', '/v1/livechat/analytics/dashboards/charts/chats-per-agent'>;\\n\\treloadRef: MutableRefObject<{ [x: string]: () => void }>;\\n} & Omit<ComponentPropsWithoutRef<typeof Box>, 'data'>;\\n\\nconst ChatsPerAgentChart = ({ params, reloadRef, ...props }: ChatsPerAgentChartProps) => {\\n\\tconst { t } = useTranslation();\\n\\n\\tconst canvas = useRef<HTMLCanvasElement | null>(null);\\n\\tconst context = useRef<chartjs.Chart<'line'>>();\\n\\n\\tconst updateChartData = useUpdateChartData({\\n\\t\\tcontext,\\n\\t\\tcanvas,\\n\\t\\tt,\\n\\t\\tinit,\\n\\t});\\n\\n\\tconst {\\n\\t\\tvalue: data = {},\\n\\t\\tphase: state,\\n\\t\\treload,\\n\\t} = useEndpointData('/v1/livechat/analytics/dashboards/charts/chats-per-agent', { params });\\n\\n\\treloadRef.current.chatsPerAgentChart = reload;\\n\\n\\tuseEffect(() => {\\n\\t\\tconst initChart = async () => {\\n\\t\\t\\tif (!canvas.current) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tcontext.current = await init(canvas.current, context.current, t);\\n\\t\\t};\\n\\t\\tinitChart();\\n\\t}, [t]);\\n\\n\\tuseEffect(() => {\\n\\t\\tif (state === AsyncStatePhase.RESOLVED) {\\n\\t\\t\\tObject.entries(data).forEach(([name, value]) => {\\n\\t\\t\\t\\tif (name === 'success') {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tupdateChartData(name, [value.open, value.closed, value.onhold]);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}, [data, state, t, updateChartData]);\\n\\n\\treturn <Chart canvasRef={canvas} {...props} />;\\n};\\n\\nexport default ChatsPerAgentChart;\\n\",null],\"names\":[\"_regeneratorRuntime\",\"_extends\",\"_slicedToArray\",\"_objectWithoutProperties\",\"React\",\"useRef\",\"useEffect\",\"useTranslation\",\"drawLineChart\",\"AsyncStatePhase\",\"useEndpointData\",\"Chart\",\"useUpdateChartData\",\"module\",\"link\",\"default\",\"v\",\"init\",\"canvas\",\"context\",\"t\",\"legends\",\"anim\",\"smallTicks\",\"exportDefault\",\"_ref\",\"params\",\"reloadRef\",\"props\",\"_excluded\",\"_useTranslation\",\"updateChartData\",\"_useEndpointData\",\"_useEndpointData$valu\",\"value\",\"data\",\"state\",\"phase\",\"reload\",\"current\",\"chatsPerAgentChart\",\"async\",\"_context\",\"prev\",\"next\",\"abrupt\",\"awrap\",\"sent\",\"stop\",\"Promise\",\"RESOLVED\",\"Object\",\"entries\",\"forEach\",\"_ref2\",\"_ref3\",\"name\",\"open\",\"closed\",\"onhold\",\"createElement\",\"canvasRef\"],\"mappings\":\"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\"}"}