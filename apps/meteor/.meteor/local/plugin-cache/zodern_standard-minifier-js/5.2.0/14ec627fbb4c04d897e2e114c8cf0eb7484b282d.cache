{"code":"function module(e,i,n){let o;n.export({useAccountPreferencesValues:()=>t}),n.link(\"@rocket.chat/ui-contexts\",{useUserPreference(e){o=e}},0);let t=()=>{var e,i;let n=o(\"language\")||\"\",t=o(\"dontAskAgainList\")||[],a=t.map(e=>{let{action:i}=e;return i}),s=o(\"enableAutoAway\"),l=o(\"idleTimeLimit\"),r=o(\"desktopNotificationRequireInteraction\"),d=o(\"desktopNotifications\"),u=o(\"pushNotifications\"),c=o(\"emailNotificationMode\"),f=o(\"receiveLoginDetectionEmail\"),h=o(\"notifyCalendarEvents\"),m=o(\"enableMobileRinging\"),g=o(\"unreadAlert\"),v=o(\"showThreadsInMainChannel\"),A=o(\"alsoSendThreadToChannel\"),p=o(\"useEmojis\"),M=o(\"convertAsciiEmoji\"),N=o(\"autoImageLoad\"),b=o(\"saveMobileBandwidth\"),k=o(\"collapseMediaByDefault\"),w=o(\"hideFlexTab\"),E=o(\"sendOnEnter\"),T=o(\"displayAvatars\"),y=null!==(e=null===(i=o(\"highlights\"))||void 0===i?void 0:i.join(\",\\n\"))&&void 0!==e?e:\"\",C=o(\"newRoomNotification\"),L=o(\"newMessageNotification\"),j=o(\"muteFocusedConversations\"),x=o(\"notificationsSoundVolume\");return{language:n,dontAskAgainList:a,enableAutoAway:s,idleTimeLimit:l,desktopNotificationRequireInteraction:r,desktopNotifications:d,pushNotifications:u,emailNotificationMode:c,receiveLoginDetectionEmail:f,notifyCalendarEvents:h,enableMobileRinging:m,unreadAlert:g,showThreadsInMainChannel:v,alsoSendThreadToChannel:A,useEmojis:p,convertAsciiEmoji:M,autoImageLoad:N,saveMobileBandwidth:b,collapseMediaByDefault:k,hideFlexTab:w,sendOnEnter:E,displayAvatars:T,highlights:y,newRoomNotification:C,newMessageNotification:L,muteFocusedConversations:j,notificationsSoundVolume:x}}}","map":"{\"version\":3,\"sources\":[\"client/views/account/preferences/useAccountPreferencesValues.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useUserPreference } from '@rocket.chat/ui-contexts';\\n\\nexport type AccountPreferencesData = {\\n\\tlanguage?: string;\\n\\tdontAskAgainList?: string[];\\n\\tenableAutoAway?: boolean;\\n\\tidleTimeLimit?: number;\\n\\tdesktopNotificationRequireInteraction?: boolean;\\n\\tdesktopNotifications?: string;\\n\\tpushNotifications?: string;\\n\\temailNotificationMode?: string;\\n\\treceiveLoginDetectionEmail?: boolean;\\n\\tnotifyCalendarEvents?: boolean;\\n\\tenableMobileRinging?: boolean;\\n\\tunreadAlert?: boolean;\\n\\tshowThreadsInMainChannel?: boolean;\\n\\talsoSendThreadToChannel?: 'default' | 'always' | 'never';\\n\\tuseEmojis?: boolean;\\n\\tconvertAsciiEmoji?: boolean;\\n\\tautoImageLoad?: boolean;\\n\\tsaveMobileBandwidth?: boolean;\\n\\tcollapseMediaByDefault?: boolean;\\n\\thideFlexTab?: boolean;\\n\\tsendOnEnter?: 'normal' | 'alternative' | 'desktop';\\n\\thighlights?: string;\\n\\tnewRoomNotification?: string;\\n\\tnewMessageNotification?: string;\\n\\tmuteFocusedConversations?: boolean;\\n\\n\\tenableNewMessageTemplate?: boolean;\\n\\tdisplayAvatars?: boolean;\\n\\tsidebarShowFavorites?: boolean;\\n\\tsidebarShowUnread?: boolean;\\n\\tsidebarSortby?: string;\\n\\tsidebarViewMode?: string;\\n\\tsidebarDisplayAvatar?: boolean;\\n\\tsidebarGroupByType?: boolean;\\n\\tnotificationsSoundVolume?: number;\\n};\\n\\nexport const useAccountPreferencesValues = (): AccountPreferencesData => {\\n\\tconst language = useUserPreference<string>('language') || '';\\n\\tconst userDontAskAgainList = useUserPreference<{ action: string; label: string }[]>('dontAskAgainList') || [];\\n\\tconst dontAskAgainList = userDontAskAgainList.map(({ action }) => action);\\n\\tconst enableAutoAway = useUserPreference<boolean>('enableAutoAway');\\n\\tconst idleTimeLimit = useUserPreference<number>('idleTimeLimit');\\n\\n\\tconst desktopNotificationRequireInteraction = useUserPreference<boolean>('desktopNotificationRequireInteraction');\\n\\tconst desktopNotifications = useUserPreference<string>('desktopNotifications');\\n\\tconst pushNotifications = useUserPreference<string>('pushNotifications');\\n\\tconst emailNotificationMode = useUserPreference<string>('emailNotificationMode');\\n\\tconst receiveLoginDetectionEmail = useUserPreference<boolean>('receiveLoginDetectionEmail');\\n\\tconst notifyCalendarEvents = useUserPreference<boolean>('notifyCalendarEvents');\\n\\tconst enableMobileRinging = useUserPreference<boolean>('enableMobileRinging');\\n\\n\\tconst unreadAlert = useUserPreference<boolean>('unreadAlert');\\n\\tconst showThreadsInMainChannel = useUserPreference<boolean>('showThreadsInMainChannel');\\n\\tconst alsoSendThreadToChannel = useUserPreference<'default' | 'always' | 'never'>('alsoSendThreadToChannel');\\n\\tconst useEmojis = useUserPreference<boolean>('useEmojis');\\n\\tconst convertAsciiEmoji = useUserPreference<boolean>('convertAsciiEmoji');\\n\\tconst autoImageLoad = useUserPreference<boolean>('autoImageLoad');\\n\\tconst saveMobileBandwidth = useUserPreference<boolean>('saveMobileBandwidth');\\n\\tconst collapseMediaByDefault = useUserPreference<boolean>('collapseMediaByDefault');\\n\\tconst hideFlexTab = useUserPreference<boolean>('hideFlexTab');\\n\\tconst sendOnEnter = useUserPreference<'normal' | 'alternative' | 'desktop'>('sendOnEnter');\\n\\tconst displayAvatars = useUserPreference<boolean>('displayAvatars');\\n\\n\\tconst highlights = useUserPreference<string[]>('highlights')?.join(',\\\\n') ?? '';\\n\\n\\tconst newRoomNotification = useUserPreference<string>('newRoomNotification');\\n\\tconst newMessageNotification = useUserPreference<string>('newMessageNotification');\\n\\tconst muteFocusedConversations = useUserPreference<boolean>('muteFocusedConversations');\\n\\tconst notificationsSoundVolume = useUserPreference<number>('notificationsSoundVolume');\\n\\n\\treturn {\\n\\t\\tlanguage,\\n\\t\\tdontAskAgainList,\\n\\t\\tenableAutoAway,\\n\\t\\tidleTimeLimit,\\n\\t\\tdesktopNotificationRequireInteraction,\\n\\t\\tdesktopNotifications,\\n\\t\\tpushNotifications,\\n\\t\\temailNotificationMode,\\n\\t\\treceiveLoginDetectionEmail,\\n\\t\\tnotifyCalendarEvents,\\n\\t\\tenableMobileRinging,\\n\\t\\tunreadAlert,\\n\\t\\tshowThreadsInMainChannel,\\n\\t\\talsoSendThreadToChannel,\\n\\t\\tuseEmojis,\\n\\t\\tconvertAsciiEmoji,\\n\\t\\tautoImageLoad,\\n\\t\\tsaveMobileBandwidth,\\n\\t\\tcollapseMediaByDefault,\\n\\t\\thideFlexTab,\\n\\t\\tsendOnEnter,\\n\\t\\tdisplayAvatars,\\n\\t\\thighlights,\\n\\t\\tnewRoomNotification,\\n\\t\\tnewMessageNotification,\\n\\t\\tmuteFocusedConversations,\\n\\t\\tnotificationsSoundVolume,\\n\\t};\\n};\\n\",null],\"names\":[\"useUserPreference\",\"module\",\"export\",\"useAccountPreferencesValues\",\"link\",\"v\",\"_useUserPreference$jo\",\"_useUserPreference\",\"language\",\"userDontAskAgainList\",\"dontAskAgainList\",\"map\",\"_ref\",\"action\",\"enableAutoAway\",\"idleTimeLimit\",\"desktopNotificationRequireInteraction\",\"desktopNotifications\",\"pushNotifications\",\"emailNotificationMode\",\"receiveLoginDetectionEmail\",\"notifyCalendarEvents\",\"enableMobileRinging\",\"unreadAlert\",\"showThreadsInMainChannel\",\"alsoSendThreadToChannel\",\"useEmojis\",\"convertAsciiEmoji\",\"autoImageLoad\",\"saveMobileBandwidth\",\"collapseMediaByDefault\",\"hideFlexTab\",\"sendOnEnter\",\"displayAvatars\",\"highlights\",\"join\",\"newRoomNotification\",\"newMessageNotification\",\"muteFocusedConversations\",\"notificationsSoundVolume\"],\"mappings\":\"2BAA6DA,EAA7DC,EAAOC,MAAE,CAAA,CAAAC,4BAAyBA,IAAAA,CAA2B,GAAAF,EAAAG,IAAA,CAAA,2BAAA,CAAAJ,kBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAwCtD,IAAMF,EAA8BA,KAA6B,IAAAG,EAAAC,EACvE,IAAMC,EAAWR,EAA0B,aAAe,GACpDS,EAAuBT,EAAuD,qBAAuB,EAAE,CACvGU,EAAmBD,EAAqBE,GAAG,CAACC,IAAA,GAAC,CAAEC,OAAAA,CAAAA,CAAQ,CAAAD,EAAA,OAAKC,CAAM,GAClEC,EAAiBd,EAA2B,kBAC5Ce,EAAgBf,EAA0B,iBAE1CgB,EAAwChB,EAA2B,yCACnEiB,EAAuBjB,EAA0B,wBACjDkB,EAAoBlB,EAA0B,qBAC9CmB,EAAwBnB,EAA0B,yBAClDoB,EAA6BpB,EAA2B,8BACxDqB,EAAuBrB,EAA2B,wBAClDsB,EAAsBtB,EAA2B,uBAEjDuB,EAAcvB,EAA2B,eACzCwB,EAA2BxB,EAA2B,4BACtDyB,EAA0BzB,EAAkD,2BAC5E0B,EAAY1B,EAA2B,aACvC2B,EAAoB3B,EAA2B,qBAC/C4B,EAAgB5B,EAA2B,iBAC3C6B,EAAsB7B,EAA2B,uBACjD8B,EAAyB9B,EAA2B,0BACpD+B,EAAc/B,EAA2B,eACzCgC,EAAchC,EAAwD,eACtEiC,EAAiBjC,EAA2B,kBAE5CkC,EAAU,AAAyD,OAAzD5B,CAAAA,EAAA,AAA4C,OAA5CC,CAAAA,EAAGP,EAA4B,aAAY,GAACO,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAzCA,EAA2C4B,IAAI,CAAC,MAAK,GAAC7B,AAAA,KAAA,IAAAA,EAAAA,EAAI,GAEvE8B,EAAsBpC,EAA0B,uBAChDqC,EAAyBrC,EAA0B,0BACnDsC,EAA2BtC,EAA2B,4BACtDuC,EAA2BvC,EAA0B,4BAE3D,MAAO,CACNQ,SAAAA,EACAE,iBAAAA,EACAI,eAAAA,EACAC,cAAAA,EACAC,sCAAAA,EACAC,qBAAAA,EACAC,kBAAAA,EACAC,sBAAAA,EACAC,2BAAAA,EACAC,qBAAAA,EACAC,oBAAAA,EACAC,YAAAA,EACAC,yBAAAA,EACAC,wBAAAA,EACAC,UAAAA,EACAC,kBAAAA,EACAC,cAAAA,EACAC,oBAAAA,EACAC,uBAAAA,EACAC,YAAAA,EACAC,YAAAA,EACAC,eAAAA,EACAC,WAAAA,EACAE,oBAAAA,EACAC,uBAAAA,EACAC,yBAAAA,EACAC,yBAAAA,EAEF\"}"}