{"code":"function module(e,a,t){let i,r,s,n,l,o,u,c,d,g,m,_,v,k,p,y,S,h,w,b,z,f;t.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){i=e}},0),t.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){r=e}},0),t.link(\"@rocket.chat/ui-contexts\",{useToastMessageDispatch(e){s=e},useSessionDispatch(e){n=e},useLoginWithPassword(e){l=e},useSettingSetValue(e){o=e},useSettingsDispatch(e){u=e},useMethod(e){c=e},useEndpoint(e){d=e},useTranslation(e){g=e}},1),t.link(\"meteor/meteor\",{Meteor(e){m=e}},2),t.link(\"react\",{default(e){_=e},useCallback(e){v=e},useMemo(e){k=e},useState(e){p=e}},3),t.link(\"../../../../lib/callbacks\",{callbacks(e){y=e}},4),t.link(\"../../../../lib/emailValidator\",{validateEmail(e){S=e}},5),t.link(\"../../../hooks/useLicense\",{useInvalidateLicense(e){h=e}},6),t.link(\"../../../lib/queryClient\",{queryClient(e){w=e}},7),t.link(\"../contexts/SetupWizardContext\",{SetupWizardContext(e){b=e}},8),t.link(\"../hooks/useParameters\",{useParameters(e){z=e}},9),t.link(\"../hooks/useStepRouting\",{useStepRouting(e){f=e}},10);let C={organizationData:{organizationName:\"\",organizationIndustry:\"\",organizationSize:\"\",country:\"\"},serverData:{agreement:!1,email:\"\",updates:!1},registrationData:{cloudEmail:\"\",device_code:\"\",user_code:\"\"}};t.exportDefault(e=>{let{children:a}=e,t=h(),E=g(),[R,D]=p(C),[x,M]=f(),{isSuccess:P,data:A}=z(),I=s(),W=u(),L=o(\"Show_Setup_Wizard\"),T=c(\"registerUser\"),O=c(\"setUsername\"),q=l(),N=n(\"forceLogin\"),U=d(\"POST\",\"/v1/cloud.createRegistrationIntent\"),V=v(()=>M(e=>e-1),[M]),j=v(()=>M(e=>e+1),[M]),Q=v(e=>M(()=>e),[M]),Y=v(e=>!!S(e)||E(\"Invalid_email\"),[E]),B=v(async e=>{let{fullname:a,username:t,email:i,password:r}=e;await T({name:a,username:t,email:i,pass:r}),y.run(\"userRegistered\",{});try{await q(i,r)}catch(e){if(e instanceof m.Error&&\"error-invalid-email\"===e.error){I({type:\"success\",message:E(\"We_have_sent_registration_email\")});return}throw(e instanceof Error||\"string\"==typeof e)&&I({type:\"error\",message:e}),e}N(!1),await O(t),await W([{_id:\"Organization_Email\",value:i}]),y.run(\"usernameSet\",{})},[T,N,O,W,q,I,E]),F=v(async e=>{await W([{_id:\"Cloud_Service_Agree_PrivacyTerms\",value:e}])},[W]),G=v(async()=>{let{serverData:{updates:e,agreement:a}}=R;await W([{_id:\"Register_Server\",value:!0},{_id:\"Allow_Marketing_Emails\",value:e}]),await F(a)},[W,F,R]),H=v(async e=>{let{organizationName:a,organizationIndustry:t,organizationSize:i,country:r}=e;await W([{_id:\"Country\",value:r},{_id:\"Industry\",value:t},{_id:\"Size\",value:i},{_id:\"Organization_Name\",value:a}])},[W]),J=r(async e=>{let{email:a,resend:r=!1}=e;try{let{intentData:e}=await U({resend:r,email:a});t(100),w.invalidateQueries([\"getRegistrationStatus\"]),D(t=>i(i({},t),{},{registrationData:i(i({},e),{},{cloudEmail:a})})),Q(4),L(\"in_progress\")}catch(e){I({type:\"error\",message:E(\"Cloud_register_error\")})}}),K=r(async()=>(I({type:\"success\",message:E(\"Your_workspace_is_ready\")}),L(\"completed\"))),X=k(()=>({setupWizardData:R,setSetupWizardData:D,currentStep:x,loaded:P,settings:A.settings,skipCloudRegistration:A.serverAlreadyRegistered,goToPreviousStep:V,goToNextStep:j,goToStep:Q,registerAdminUser:B,validateEmail:Y,registerServer:J,saveAgreementData:F,saveWorkspaceData:G,saveOrganizationData:H,completeSetupWizard:K,maxSteps:A.serverAlreadyRegistered?2:4}),[R,x,P,A.settings,A.serverAlreadyRegistered,V,j,Q,B,Y,J,F,G,H,K]);return _.createElement(b.Provider,{value:X},a)})}","map":"{\"version\":3,\"sources\":[\"client/views/setupWizard/providers/SetupWizardProvider.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport {\\n\\tuseToastMessageDispatch,\\n\\tuseSessionDispatch,\\n\\tuseLoginWithPassword,\\n\\tuseSettingSetValue,\\n\\tuseSettingsDispatch,\\n\\tuseMethod,\\n\\tuseEndpoint,\\n\\tuseTranslation,\\n} from '@rocket.chat/ui-contexts';\\nimport { Meteor } from 'meteor/meteor';\\nimport type { ReactElement, ContextType } from 'react';\\nimport React, { useCallback, useMemo, useState } from 'react';\\n\\nimport { callbacks } from '../../../../lib/callbacks';\\nimport { validateEmail } from '../../../../lib/emailValidator';\\nimport { useInvalidateLicense } from '../../../hooks/useLicense';\\nimport { queryClient } from '../../../lib/queryClient';\\nimport { SetupWizardContext } from '../contexts/SetupWizardContext';\\nimport { useParameters } from '../hooks/useParameters';\\nimport { useStepRouting } from '../hooks/useStepRouting';\\n\\nconst initialData: ContextType<typeof SetupWizardContext>['setupWizardData'] = {\\n\\torganizationData: {\\n\\t\\torganizationName: '',\\n\\t\\torganizationIndustry: '',\\n\\t\\torganizationSize: '',\\n\\t\\tcountry: '',\\n\\t},\\n\\tserverData: {\\n\\t\\tagreement: false,\\n\\t\\temail: '',\\n\\t\\tupdates: false,\\n\\t},\\n\\tregistrationData: { cloudEmail: '', device_code: '', user_code: '' },\\n};\\n\\ntype HandleRegisterServer = (params: { email: string; resend?: boolean }) => Promise<void>;\\n\\nconst SetupWizardProvider = ({ children }: { children: ReactElement }): ReactElement => {\\n\\tconst invalidateLicenseQuery = useInvalidateLicense();\\n\\tconst t = useTranslation();\\n\\tconst [setupWizardData, setSetupWizardData] = useState<ContextType<typeof SetupWizardContext>['setupWizardData']>(initialData);\\n\\tconst [currentStep, setCurrentStep] = useStepRouting();\\n\\tconst { isSuccess, data } = useParameters();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst dispatchSettings = useSettingsDispatch();\\n\\n\\tconst setShowSetupWizard = useSettingSetValue('Show_Setup_Wizard');\\n\\tconst registerUser = useMethod('registerUser');\\n\\tconst defineUsername = useMethod('setUsername');\\n\\tconst loginWithPassword = useLoginWithPassword();\\n\\tconst setForceLogin = useSessionDispatch('forceLogin');\\n\\tconst createRegistrationIntent = useEndpoint('POST', '/v1/cloud.createRegistrationIntent');\\n\\n\\tconst goToPreviousStep = useCallback(() => setCurrentStep((currentStep) => currentStep - 1), [setCurrentStep]);\\n\\tconst goToNextStep = useCallback(() => setCurrentStep((currentStep) => currentStep + 1), [setCurrentStep]);\\n\\tconst goToStep = useCallback((step) => setCurrentStep(() => step), [setCurrentStep]);\\n\\n\\tconst _validateEmail = useCallback(\\n\\t\\t(email: string): true | string => {\\n\\t\\t\\tif (!validateEmail(email)) {\\n\\t\\t\\t\\treturn t('Invalid_email');\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\t\\t},\\n\\t\\t[t],\\n\\t);\\n\\n\\tconst registerAdminUser = useCallback(\\n\\t\\tasync ({ fullname, username, email, password }): Promise<void> => {\\n\\t\\t\\tawait registerUser({ name: fullname, username, email, pass: password });\\n\\t\\t\\tvoid callbacks.run('userRegistered', {});\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait loginWithPassword(email, password);\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tif (error instanceof Meteor.Error && error.error === 'error-invalid-email') {\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('We_have_sent_registration_email') });\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (error instanceof Error || typeof error === 'string') {\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tthrow error;\\n\\t\\t\\t}\\n\\n\\t\\t\\tsetForceLogin(false);\\n\\n\\t\\t\\tawait defineUsername(username);\\n\\t\\t\\tawait dispatchSettings([{ _id: 'Organization_Email', value: email }]);\\n\\t\\t\\tvoid callbacks.run('usernameSet', {});\\n\\t\\t},\\n\\t\\t[registerUser, setForceLogin, defineUsername, dispatchSettings, loginWithPassword, dispatchToastMessage, t],\\n\\t);\\n\\n\\tconst saveAgreementData = useCallback(\\n\\t\\tasync (agreement): Promise<void> => {\\n\\t\\t\\tawait dispatchSettings([\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t_id: 'Cloud_Service_Agree_PrivacyTerms',\\n\\t\\t\\t\\t\\tvalue: agreement,\\n\\t\\t\\t\\t},\\n\\t\\t\\t]);\\n\\t\\t},\\n\\t\\t[dispatchSettings],\\n\\t);\\n\\n\\tconst saveWorkspaceData = useCallback(async (): Promise<void> => {\\n\\t\\tconst {\\n\\t\\t\\tserverData: { updates, agreement },\\n\\t\\t} = setupWizardData;\\n\\n\\t\\tawait dispatchSettings([\\n\\t\\t\\t{\\n\\t\\t\\t\\t_id: 'Register_Server',\\n\\t\\t\\t\\tvalue: true,\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t_id: 'Allow_Marketing_Emails',\\n\\t\\t\\t\\tvalue: updates,\\n\\t\\t\\t},\\n\\t\\t]);\\n\\t\\tawait saveAgreementData(agreement);\\n\\t}, [dispatchSettings, saveAgreementData, setupWizardData]);\\n\\n\\tconst saveOrganizationData = useCallback(\\n\\t\\tasync (organizationData: ContextType<typeof SetupWizardContext>['setupWizardData']['organizationData']): Promise<void> => {\\n\\t\\t\\tconst { organizationName, organizationIndustry, organizationSize, country } = organizationData;\\n\\n\\t\\t\\tawait dispatchSettings([\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t_id: 'Country',\\n\\t\\t\\t\\t\\tvalue: country,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t_id: 'Industry',\\n\\t\\t\\t\\t\\tvalue: organizationIndustry,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t_id: 'Size',\\n\\t\\t\\t\\t\\tvalue: organizationSize,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t_id: 'Organization_Name',\\n\\t\\t\\t\\t\\tvalue: organizationName,\\n\\t\\t\\t\\t},\\n\\t\\t\\t]);\\n\\t\\t},\\n\\t\\t[dispatchSettings],\\n\\t);\\n\\n\\tconst registerServer: HandleRegisterServer = useMutableCallback(async ({ email, resend = false }): Promise<void> => {\\n\\t\\ttry {\\n\\t\\t\\tconst { intentData } = await createRegistrationIntent({ resend, email });\\n\\t\\t\\tinvalidateLicenseQuery(100);\\n\\t\\t\\tqueryClient.invalidateQueries(['getRegistrationStatus']);\\n\\n\\t\\t\\tsetSetupWizardData((prevState) => ({\\n\\t\\t\\t\\t...prevState,\\n\\t\\t\\t\\tregistrationData: { ...intentData, cloudEmail: email },\\n\\t\\t\\t}));\\n\\n\\t\\t\\tgoToStep(4);\\n\\t\\t\\tsetShowSetupWizard('in_progress');\\n\\t\\t} catch (e) {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: t('Cloud_register_error') });\\n\\t\\t}\\n\\t});\\n\\n\\tconst completeSetupWizard = useMutableCallback(async (): Promise<void> => {\\n\\t\\tdispatchToastMessage({ type: 'success', message: t('Your_workspace_is_ready') });\\n\\t\\treturn setShowSetupWizard('completed');\\n\\t});\\n\\n\\tconst value = useMemo(\\n\\t\\t() => ({\\n\\t\\t\\tsetupWizardData,\\n\\t\\t\\tsetSetupWizardData,\\n\\t\\t\\tcurrentStep,\\n\\t\\t\\tloaded: isSuccess,\\n\\t\\t\\tsettings: data.settings,\\n\\t\\t\\tskipCloudRegistration: data.serverAlreadyRegistered,\\n\\t\\t\\tgoToPreviousStep,\\n\\t\\t\\tgoToNextStep,\\n\\t\\t\\tgoToStep,\\n\\t\\t\\tregisterAdminUser,\\n\\t\\t\\tvalidateEmail: _validateEmail,\\n\\t\\t\\tregisterServer,\\n\\t\\t\\tsaveAgreementData,\\n\\t\\t\\tsaveWorkspaceData,\\n\\t\\t\\tsaveOrganizationData,\\n\\t\\t\\tcompleteSetupWizard,\\n\\t\\t\\tmaxSteps: data.serverAlreadyRegistered ? 2 : 4,\\n\\t\\t}),\\n\\t\\t[\\n\\t\\t\\tsetupWizardData,\\n\\t\\t\\tcurrentStep,\\n\\t\\t\\tisSuccess,\\n\\t\\t\\tdata.settings,\\n\\t\\t\\tdata.serverAlreadyRegistered,\\n\\t\\t\\tgoToPreviousStep,\\n\\t\\t\\tgoToNextStep,\\n\\t\\t\\tgoToStep,\\n\\t\\t\\tregisterAdminUser,\\n\\t\\t\\t_validateEmail,\\n\\t\\t\\tregisterServer,\\n\\t\\t\\tsaveAgreementData,\\n\\t\\t\\tsaveWorkspaceData,\\n\\t\\t\\tsaveOrganizationData,\\n\\t\\t\\tcompleteSetupWizard,\\n\\t\\t],\\n\\t);\\n\\n\\treturn <SetupWizardContext.Provider value={value}>{children}</SetupWizardContext.Provider>;\\n};\\n\\nexport default SetupWizardProvider;\\n\",null],\"names\":[\"_objectSpread\",\"useMutableCallback\",\"useToastMessageDispatch\",\"useSessionDispatch\",\"useLoginWithPassword\",\"useSettingSetValue\",\"useSettingsDispatch\",\"useMethod\",\"useEndpoint\",\"useTranslation\",\"Meteor\",\"React\",\"useCallback\",\"useMemo\",\"useState\",\"callbacks\",\"validateEmail\",\"useInvalidateLicense\",\"queryClient\",\"SetupWizardContext\",\"useParameters\",\"useStepRouting\",\"module\",\"link\",\"default\",\"v\",\"initialData\",\"organizationData\",\"organizationName\",\"organizationIndustry\",\"organizationSize\",\"country\",\"serverData\",\"agreement\",\"email\",\"updates\",\"registrationData\",\"cloudEmail\",\"device_code\",\"user_code\",\"exportDefault\",\"_ref\",\"children\",\"invalidateLicenseQuery\",\"t\",\"setupWizardData\",\"setSetupWizardData\",\"currentStep\",\"setCurrentStep\",\"isSuccess\",\"data\",\"dispatchToastMessage\",\"dispatchSettings\",\"setShowSetupWizard\",\"registerUser\",\"defineUsername\",\"loginWithPassword\",\"setForceLogin\",\"createRegistrationIntent\",\"goToPreviousStep\",\"goToNextStep\",\"goToStep\",\"step\",\"_validateEmail\",\"registerAdminUser\",\"_ref2\",\"fullname\",\"username\",\"password\",\"name\",\"pass\",\"run\",\"error\",\"Error\",\"type\",\"message\",\"_id\",\"value\",\"saveAgreementData\",\"saveWorkspaceData\",\"saveOrganizationData\",\"registerServer\",\"_ref3\",\"resend\",\"intentData\",\"invalidateQueries\",\"prevState\",\"e\",\"completeSetupWizard\",\"loaded\",\"settings\",\"skipCloudRegistration\",\"serverAlreadyRegistered\",\"maxSteps\",\"createElement\",\"Provider\"],\"mappings\":\"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\"}"}