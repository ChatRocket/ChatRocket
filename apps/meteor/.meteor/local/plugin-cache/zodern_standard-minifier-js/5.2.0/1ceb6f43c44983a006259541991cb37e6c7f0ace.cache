{"code":"function module(n,t,e){var r,o,u,a,i,c,s,l,f,k,m,p;e.link(\"@babel/runtime/regenerator\",{default:function(n){r=n}},0),e.link(\"@rocket.chat/fuselage\",{Button:function(n){o=n},ButtonGroup:function(n){u=n},Box:function(n){a=n}},0),e.link(\"@rocket.chat/ui-contexts\",{useSessionDispatch:function(n){i=n},useSetting:function(n){c=n},useTranslation:function(n){s=n},useLoginWithToken:function(n){l=n},useToastMessageDispatch:function(n){f=n},useMethod:function(n){k=n}},1),e.link(\"@tanstack/react-query\",{useMutation:function(n){m=n}},2),e.link(\"react\",{default:function(n){p=n}},3),e.exportDefault(function(){var n=s(),t=f(),e=c(\"Accounts_AllowAnonymousWrite\"),g=l(),y=k(\"registerUser\"),_=i(\"forceLogin\"),d=m(function(){var n,t=arguments;return r.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,r.awrap(y.apply(void 0,t));case 2:if(!(\"string\"!=typeof(n=e.sent)&&n.token)){e.next=6;break}return e.next=6,r.awrap(g(n.token));case 6:return e.abrupt(\"return\",n);case 7:case\"end\":return e.stop()}},null,null,null,Promise)},{onError:function(n){t({type:\"error\",message:n})}}),h=function(){d.mutate({email:null})};return p.createElement(a,{mb:16},p.createElement(u,null,p.createElement(o,{small:!0,primary:!0,onClick:function(){return _(!0)}},n(\"Sign_in_to_start_talking\")),e&&p.createElement(o,{small:!0,secondary:!0,onClick:function(){return h()}},n(\"Or_talk_as_anonymous\"))))})}","map":"{\"version\":3,\"sources\":[\"client/views/room/composer/ComposerAnonymous.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { Button, ButtonGroup, Box } from '@rocket.chat/fuselage';\\nimport {\\n\\tuseSessionDispatch,\\n\\tuseSetting,\\n\\tuseTranslation,\\n\\tuseLoginWithToken,\\n\\tuseToastMessageDispatch,\\n\\tuseMethod,\\n} from '@rocket.chat/ui-contexts';\\nimport { useMutation } from '@tanstack/react-query';\\nimport type { ReactElement } from 'react';\\nimport React from 'react';\\n\\nconst ComposerAnonymous = (): ReactElement => {\\n\\tconst t = useTranslation();\\n\\tconst dispatch = useToastMessageDispatch();\\n\\tconst isAnonymousWriteEnabled = useSetting('Accounts_AllowAnonymousWrite');\\n\\n\\tconst loginWithToken = useLoginWithToken();\\n\\tconst anonymousUser = useMethod('registerUser');\\n\\tconst setForceLogin = useSessionDispatch('forceLogin');\\n\\n\\tconst registerAnonymous = useMutation(\\n\\t\\tasync (...params: Parameters<typeof anonymousUser>) => {\\n\\t\\t\\tconst result = await anonymousUser(...params);\\n\\t\\t\\tif (typeof result !== 'string' && result.token) {\\n\\t\\t\\t\\tawait loginWithToken(result.token);\\n\\t\\t\\t}\\n\\t\\t\\treturn result;\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tonError: (error) => {\\n\\t\\t\\t\\tdispatch({ type: 'error', message: error });\\n\\t\\t\\t},\\n\\t\\t},\\n\\t);\\n\\n\\tconst joinAnonymous = () => {\\n\\t\\tregisterAnonymous.mutate({ email: null });\\n\\t};\\n\\n\\treturn (\\n\\t\\t<Box mb={16}>\\n\\t\\t\\t<ButtonGroup>\\n\\t\\t\\t\\t<Button small primary onClick={() => setForceLogin(true)}>\\n\\t\\t\\t\\t\\t{t('Sign_in_to_start_talking')}\\n\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t{isAnonymousWriteEnabled && (\\n\\t\\t\\t\\t\\t<Button small secondary onClick={() => joinAnonymous()}>\\n\\t\\t\\t\\t\\t\\t{t('Or_talk_as_anonymous')}\\n\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t)}\\n\\t\\t\\t</ButtonGroup>\\n\\t\\t</Box>\\n\\t);\\n};\\n\\nexport default ComposerAnonymous;\\n\",null],\"names\":[\"_regeneratorRuntime\",\"Button\",\"ButtonGroup\",\"Box\",\"useSessionDispatch\",\"useSetting\",\"useTranslation\",\"useLoginWithToken\",\"useToastMessageDispatch\",\"useMethod\",\"useMutation\",\"React\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"t\",\"dispatch\",\"isAnonymousWriteEnabled\",\"loginWithToken\",\"anonymousUser\",\"setForceLogin\",\"registerAnonymous\",\"result\",\"_args\",\"arguments\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"apply\",\"sent\",\"token\",\"abrupt\",\"stop\",\"Promise\",\"onError\",\"error\",\"type\",\"message\",\"joinAnonymous\",\"mutate\",\"email\",\"createElement\",\"mb\",\"small\",\"primary\",\"onClick\",\"secondary\"],\"mappings\":\"uBAaA,IAbAA,EAAAC,EAASC,EAAQC,EAAgDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAhDC,EAAaC,IAAK,CAAA,6BAA8B,CAAAC,QAAA,SAAAC,CAAA,EAAAf,EAAAe,CAAA,CAAA,EAAA,GAAhDH,EAAgBC,IAAE,CAAA,wBAAM,CAAuBZ,OAAC,SAAAc,CAAA,EAAAd,EAAAc,CAAA,EAAAb,YAAA,SAAAa,CAAA,EAAAb,EAAAa,CAAA,EAAAZ,IAAA,SAAAY,CAAA,EAAAZ,EAAAY,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2BAAA,CAAAT,mBAAA,SAAAW,CAAA,EAAAX,EAAAW,CAAA,EAAAV,WAAA,SAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,eAAA,SAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,kBAAA,SAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,wBAAA,SAAAO,CAAA,EAAAP,EAAAO,CAAA,EAAAN,UAAA,SAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wBAAA,CAAAH,YAAA,SAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAA,QAAA,SAAAE,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAjEH,EAAOI,aAAU,CAaS,WACzB,IAAMC,EAAIX,IACJY,EAAWV,IACXW,EAA0Bd,EAAW,gCAErCe,EAAiBb,IACjBc,EAAgBZ,EAAU,gBAC1Ba,EAAgBlB,EAAmB,cAEnCmB,EAAoBb,EACzB,WAAA,IAAAc,EAAAC,EAAAC,UAAA,OAAA1B,EAAA2B,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAE,IAAA,CAAA,EAAA9B,EAAA+B,KAAA,CACsBV,EAAaW,KAAA,CAAA,KAAA,EAAAP,GAAW,MAAA,EAAjC,GAAA,CACR,CAAA,AAAkB,UAAlB,MADED,CAAAA,EAAMI,EAAAK,IAAA,AAAAA,GACsBT,EAAOU,KAAK,AAALA,EAAK,CAAAN,EAAAE,IAAA,CAAA,EAAA,KAAA,CAAA,OAAAF,EAAAE,IAAA,CAAA,EAAA9B,EAAA+B,KAAA,CACvCX,EAAeI,EAAOU,KAAK,EAAC,MAAA,EAAA,OAAAN,EAAAO,MAAA,CAAA,SAE5BX,EAAM,MAAA,EAAA,IAAA,MAAA,OAAAI,EAAAQ,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAAA,EAEd,CACCC,QAAS,SAACC,CAAK,EACdrB,EAAS,CAAEsB,KAAM,QAASC,QAASF,CAAK,EACzC,IAIIG,EAAgB,WACrBnB,EAAkBoB,MAAM,CAAC,CAAEC,MAAO,IAAI,EACvC,EAEA,OACCjC,EAAAkC,aAAA,CAAC1C,EAAG,CAAC2C,GAAI,EAAG,EACXnC,EAAAkC,aAAA,CAAC3C,EAAW,KACXS,EAAAkC,aAAA,CAAC5C,EAAM,CAAC8C,MAAK,CAAA,EAACC,QAAO,CAAA,EAACC,QAAS,WAAA,OAAM3B,EAAc,CAAA,EAAK,CAAC,EACvDL,EAAE,6BAEHE,GACAR,EAAAkC,aAAA,CAAC5C,EAAM,CAAC8C,MAAK,CAAA,EAACG,UAAS,CAAA,EAACD,QAAS,WAAA,OAAMP,GAAe,CAAC,EACrDzB,EAAE,0BAMT\"}"}