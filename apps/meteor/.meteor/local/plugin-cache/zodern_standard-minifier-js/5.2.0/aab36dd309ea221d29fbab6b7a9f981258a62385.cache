{"code":"function module(t,e,r){let a,s,n,i,p,l;r.link(\"@babel/runtime/helpers/objectSpread2\",{default(t){a=t}},0),r.export({AppClientOrchestratorInstance:()=>c}),r.link(\"@rocket.chat/apps-engine/client/AppClientManager\",{AppClientManager(t){s=t}},0),r.link(\"../../app/authorization/client\",{hasAtLeastOnePermission(t){n=t}},1),r.link(\"../../app/utils/client/lib/SDKClient\",{sdk(t){i=t}},2),r.link(\"../lib/toast\",{dispatchToastMessage(t){p=t}},3),r.link(\"./RealAppsEngineUIHost\",{RealAppsEngineUIHost(t){l=t}},4);let o=t=>\"object\"==typeof t&&null!==t&&\"error\"in t&&\"string\"==typeof t.error,c=new class t{constructor(){this._appClientUIHost=void 0,this._manager=void 0,this._isLoaded=void 0,this._appClientUIHost=new l,this._manager=new s(this._appClientUIHost),this._isLoaded=!1}async load(){this._isLoaded||(this._isLoaded=!0)}getAppClientManager(){return this._manager}handleError(t){n([\"manage-apps\"])&&p({type:\"error\",message:t})}async getInstalledApps(){let t=await i.rest.get(\"/apps/installed\");if(\"apps\"in t)return t.apps;throw Error(\"Invalid response from API\")}async getAppsFromMarketplace(t){let e=[];try{e=await i.rest.get(\"/apps/marketplace\",{isAdminUser:t?t.toString():\"false\"})}catch(t){if(o(t))return{apps:[],error:t.error};if(\"string\"==typeof t)return{apps:[],error:t}}if(!Array.isArray(e))return{apps:[],error:\"Invalid response from API\"};let r=e.map(t=>{let{latest:e,appRequestStats:r,price:s,pricingPlans:n,purchaseType:i,isEnterpriseOnly:p,modifiedAt:l,bundledIn:o,requestedEndUser:c}=t;return a(a({},e),{},{appRequestStats:r,price:s,pricingPlans:n,purchaseType:i,isEnterpriseOnly:p,modifiedAt:l,bundledIn:o,requestedEndUser:c})});return{apps:r,error:void 0}}async getAppsOnBundle(t){let{apps:e}=await i.rest.get(\"/apps/bundles/\".concat(t,\"/apps\"));return e}async getApp(t){let{app:e}=await i.rest.get(\"/apps/\".concat(t));return e}async setAppSettings(t,e){await i.rest.post(\"/apps/\".concat(t,\"/settings\"),{settings:e})}async installApp(t,e,r){let{app:a}=await i.rest.post(\"/apps\",{appId:t,marketplace:!0,version:e,permissionsGranted:r});return a}async updateApp(t,e,r){let a=await i.rest.post(\"/apps/\".concat(t),{appId:t,marketplace:!0,version:e,permissionsGranted:r});if(\"app\"in a)return a.app;throw Error(\"App not found\")}async buildExternalUrl(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"buy\",r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=await i.rest.get(\"/apps/buildExternalUrl\",{appId:t,purchaseType:e,details:\"\".concat(r)});if(\"url\"in a)return a;throw Error(\"Failed to build external url\")}async buildExternalAppRequest(t){let e=await i.rest.get(\"/apps/buildExternalAppRequest\",{appId:t});if(\"url\"in e)return e;throw Error(\"Failed to build App Request external url\")}async buildIncompatibleExternalUrl(t,e,r){let a=await i.rest.get(\"/apps/incompatibleModal\",{appId:t,appVersion:e,action:r});if(\"url\"in a)return a;throw Error(\"Failed to build external url\")}async getCategories(){let t=await i.rest.get(\"/apps/categories\");if(Array.isArray(t))return t;throw Error(\"Failed to get categories\")}}}","map":"{\"version\":3,\"sources\":[\"client/apps/orchestrator.ts\",\"<anon>\"],\"sourcesContent\":[\"import { AppClientManager } from '@rocket.chat/apps-engine/client/AppClientManager';\\nimport type { AppsEngineUIHost } from '@rocket.chat/apps-engine/client/AppsEngineUIHost';\\nimport type { IPermission } from '@rocket.chat/apps-engine/definition/permissions/IPermission';\\nimport type { ISetting } from '@rocket.chat/apps-engine/definition/settings';\\nimport type { Serialized } from '@rocket.chat/core-typings';\\n\\nimport { hasAtLeastOnePermission } from '../../app/authorization/client';\\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\\nimport { dispatchToastMessage } from '../lib/toast';\\nimport type { App } from '../views/marketplace/types';\\nimport type { IAppExternalURL, ICategory } from './@types/IOrchestrator';\\nimport { RealAppsEngineUIHost } from './RealAppsEngineUIHost';\\n\\nconst isErrorObject = (e: unknown): e is { error: string } =>\\n\\ttypeof e === 'object' && e !== null && 'error' in e && typeof e.error === 'string';\\n\\nclass AppClientOrchestrator {\\n\\tprivate _appClientUIHost: AppsEngineUIHost;\\n\\n\\tprivate _manager: AppClientManager;\\n\\n\\tprivate _isLoaded: boolean;\\n\\n\\tconstructor() {\\n\\t\\tthis._appClientUIHost = new RealAppsEngineUIHost();\\n\\t\\tthis._manager = new AppClientManager(this._appClientUIHost);\\n\\t\\tthis._isLoaded = false;\\n\\t}\\n\\n\\tpublic async load(): Promise<void> {\\n\\t\\tif (!this._isLoaded) {\\n\\t\\t\\tthis._isLoaded = true;\\n\\t\\t}\\n\\t}\\n\\n\\tpublic getAppClientManager(): AppClientManager {\\n\\t\\treturn this._manager;\\n\\t}\\n\\n\\tpublic handleError(error: unknown): void {\\n\\t\\tif (hasAtLeastOnePermission(['manage-apps'])) {\\n\\t\\t\\tdispatchToastMessage({\\n\\t\\t\\t\\ttype: 'error',\\n\\t\\t\\t\\tmessage: error,\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\tpublic async getInstalledApps(): Promise<App[]> {\\n\\t\\tconst result = await sdk.rest.get<'/apps/installed'>('/apps/installed');\\n\\n\\t\\tif ('apps' in result) {\\n\\t\\t\\t// TODO: chapter day: multiple results are returned, but we only need one\\n\\t\\t\\treturn result.apps as App[];\\n\\t\\t}\\n\\t\\tthrow new Error('Invalid response from API');\\n\\t}\\n\\n\\tpublic async getAppsFromMarketplace(isAdminUser?: boolean): Promise<{ apps: App[]; error?: unknown }> {\\n\\t\\tlet result: App[] = [];\\n\\t\\ttry {\\n\\t\\t\\tresult = await sdk.rest.get('/apps/marketplace', { isAdminUser: isAdminUser ? isAdminUser.toString() : 'false' });\\n\\t\\t} catch (e) {\\n\\t\\t\\tif (isErrorObject(e)) {\\n\\t\\t\\t\\treturn { apps: [], error: e.error };\\n\\t\\t\\t}\\n\\t\\t\\tif (typeof e === 'string') {\\n\\t\\t\\t\\treturn { apps: [], error: e };\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (!Array.isArray(result)) {\\n\\t\\t\\t// TODO: chapter day: multiple results are returned, but we only need one\\n\\t\\t\\treturn { apps: [], error: 'Invalid response from API' };\\n\\t\\t}\\n\\n\\t\\tconst apps = (result as App[]).map((app: App) => {\\n\\t\\t\\tconst { latest, appRequestStats, price, pricingPlans, purchaseType, isEnterpriseOnly, modifiedAt, bundledIn, requestedEndUser } = app;\\n\\t\\t\\treturn {\\n\\t\\t\\t\\t...latest,\\n\\t\\t\\t\\tappRequestStats,\\n\\t\\t\\t\\tprice,\\n\\t\\t\\t\\tpricingPlans,\\n\\t\\t\\t\\tpurchaseType,\\n\\t\\t\\t\\tisEnterpriseOnly,\\n\\t\\t\\t\\tmodifiedAt,\\n\\t\\t\\t\\tbundledIn,\\n\\t\\t\\t\\trequestedEndUser,\\n\\t\\t\\t};\\n\\t\\t});\\n\\n\\t\\treturn { apps, error: undefined };\\n\\t}\\n\\n\\tpublic async getAppsOnBundle(bundleId: string): Promise<App[]> {\\n\\t\\tconst { apps } = await sdk.rest.get(`/apps/bundles/${bundleId}/apps`);\\n\\t\\treturn apps;\\n\\t}\\n\\n\\tpublic async getApp(appId: string): Promise<App> {\\n\\t\\tconst { app } = await sdk.rest.get(`/apps/${appId}` as any);\\n\\t\\treturn app;\\n\\t}\\n\\n\\tpublic async setAppSettings(appId: string, settings: ISetting[]): Promise<void> {\\n\\t\\tawait sdk.rest.post(`/apps/${appId}/settings`, { settings });\\n\\t}\\n\\n\\tpublic async installApp(appId: string, version: string, permissionsGranted?: IPermission[]): Promise<App> {\\n\\t\\tconst { app } = (await sdk.rest.post<'/apps'>('/apps', {\\n\\t\\t\\tappId,\\n\\t\\t\\tmarketplace: true,\\n\\t\\t\\tversion,\\n\\t\\t\\tpermissionsGranted,\\n\\t\\t})) as { app: App };\\n\\t\\treturn app;\\n\\t}\\n\\n\\tpublic async updateApp(appId: string, version: string, permissionsGranted?: IPermission[]): Promise<App> {\\n\\t\\tconst result = await sdk.rest.post<'/apps/:id'>(`/apps/${appId}`, {\\n\\t\\t\\tappId,\\n\\t\\t\\tmarketplace: true,\\n\\t\\t\\tversion,\\n\\t\\t\\tpermissionsGranted,\\n\\t\\t});\\n\\n\\t\\tif ('app' in result) {\\n\\t\\t\\treturn result.app;\\n\\t\\t}\\n\\t\\tthrow new Error('App not found');\\n\\t}\\n\\n\\tpublic async buildExternalUrl(appId: string, purchaseType: 'buy' | 'subscription' = 'buy', details = false): Promise<IAppExternalURL> {\\n\\t\\tconst result = await sdk.rest.get('/apps/buildExternalUrl', {\\n\\t\\t\\tappId,\\n\\t\\t\\tpurchaseType,\\n\\t\\t\\tdetails: `${details}`,\\n\\t\\t});\\n\\n\\t\\tif ('url' in result) {\\n\\t\\t\\treturn result;\\n\\t\\t}\\n\\n\\t\\tthrow new Error('Failed to build external url');\\n\\t}\\n\\n\\tpublic async buildExternalAppRequest(appId: string) {\\n\\t\\tconst result = await sdk.rest.get('/apps/buildExternalAppRequest', {\\n\\t\\t\\tappId,\\n\\t\\t});\\n\\n\\t\\tif ('url' in result) {\\n\\t\\t\\treturn result;\\n\\t\\t}\\n\\t\\tthrow new Error('Failed to build App Request external url');\\n\\t}\\n\\n\\tpublic async buildIncompatibleExternalUrl(appId: string, appVersion: string, action: string): Promise<IAppExternalURL> {\\n\\t\\tconst result = await sdk.rest.get('/apps/incompatibleModal', {\\n\\t\\t\\tappId,\\n\\t\\t\\tappVersion,\\n\\t\\t\\taction,\\n\\t\\t});\\n\\n\\t\\tif ('url' in result) {\\n\\t\\t\\treturn result;\\n\\t\\t}\\n\\n\\t\\tthrow new Error('Failed to build external url');\\n\\t}\\n\\n\\tpublic async getCategories(): Promise<Serialized<ICategory[]>> {\\n\\t\\tconst result = await sdk.rest.get('/apps/categories');\\n\\n\\t\\tif (Array.isArray(result)) {\\n\\t\\t\\t// TODO: chapter day: multiple results are returned, but we only need one\\n\\t\\t\\treturn result as Serialized<ICategory>[];\\n\\t\\t}\\n\\t\\tthrow new Error('Failed to get categories');\\n\\t}\\n}\\n\\nexport const AppClientOrchestratorInstance = new AppClientOrchestrator();\\n\",null],\"names\":[\"_objectSpread\",\"AppClientManager\",\"hasAtLeastOnePermission\",\"sdk\",\"dispatchToastMessage\",\"RealAppsEngineUIHost\",\"module\",\"link\",\"default\",\"v\",\"export\",\"AppClientOrchestratorInstance\",\"isErrorObject\",\"e\",\"error\",\"AppClientOrchestrator\",\"constructor\",\"_appClientUIHost\",\"_manager\",\"_isLoaded\",\"load\",\"getAppClientManager\",\"handleError\",\"type\",\"message\",\"getInstalledApps\",\"result\",\"rest\",\"get\",\"apps\",\"Error\",\"getAppsFromMarketplace\",\"isAdminUser\",\"toString\",\"Array\",\"isArray\",\"map\",\"app\",\"latest\",\"appRequestStats\",\"price\",\"pricingPlans\",\"purchaseType\",\"isEnterpriseOnly\",\"modifiedAt\",\"bundledIn\",\"requestedEndUser\",\"undefined\",\"getAppsOnBundle\",\"bundleId\",\"concat\",\"getApp\",\"appId\",\"setAppSettings\",\"settings\",\"post\",\"installApp\",\"version\",\"permissionsGranted\",\"marketplace\",\"updateApp\",\"buildExternalUrl\",\"arguments\",\"length\",\"details\",\"buildExternalAppRequest\",\"buildIncompatibleExternalUrl\",\"appVersion\",\"action\",\"getCategories\"],\"mappings\":\"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\"}"}