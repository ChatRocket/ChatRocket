{"code":"function module(e,n,t){var r,i,o,u,c,a,s,l,f,d,b,p,v,h,g=[\"_id\"],k=[\"_id\"];t.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(e){r=e}},0),t.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default:function(e){i=e}},1),t.link(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\",{default:function(e){o=e}},2),t.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback:function(e){u=e}},0),t.link(\"@rocket.chat/ui-contexts\",{useSettings:function(e){c=e}},1),t.link(\"meteor/mongo\",{Mongo:function(e){a=e}},2),t.link(\"meteor/tracker\",{Tracker:function(e){s=e}},3),t.link(\"react\",{default:function(e){l=e},useEffect:function(e){f=e},useMemo:function(e){d=e},useRef:function(e){b=e}},4),t.link(\"../../../hooks/useIsEnterprise\",{useIsEnterprise:function(e){p=e}},5),t.link(\"../../../lib/createReactiveSubscriptionFactory\",{createReactiveSubscriptionFactory:function(e){v=e}},6),t.link(\"../EditableSettingsContext\",{EditableSettingsContext:function(e){h=e}},7);var m={};t.exportDefault(function(e){var n,t=e.children,y=e.query,S=b(null),$=c(void 0===y?m:y),E=u(function(){return S.current||(S.current=new a.Collection(null)),S.current});f(function(){var e=E();e.remove({_id:{$nin:$.map(function(e){return e._id})}});for(var n,t=o($);!(n=t()).done;){var u=n.value,c=u._id,a=i(u,g);e.upsert(c,{$set:r({},a),$unset:{changed:!0}})}},[E,$]);var _=d(function(){var e=function(e,n){return!e||[].concat(\"string\"==typeof e?JSON.parse(e):e).every(function(e){return n.find(e).count()>0})};return v(function(n){var t=E(),i=t.findOne(n);if(i)return r(r({},i),{},{disabled:i.blocked||!e(i.enableQuery,t),invisible:!e(i.displayQuery,t)})})},[E]),x=d(function(){return v(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return E().find(r(r(r(r({},\"_id\"in e&&{_id:{$in:e._id}}),\"group\"in e&&{group:e.group}),\"changed\"in e&&{changed:e.changed}),{},{$and:[r({},\"section\"in e&&(e.section?{section:e.section}:{$or:[{section:{$exists:!1}},{section:\"\"}]})),r({},\"tab\"in e&&(e.tab?{tab:e.tab}:{$or:[{tab:{$exists:!1}},{tab:\"\"}]}))]}),{sort:{section:1,sorter:1,i18nLabel:1}}).fetch()})},[E]),q=d(function(){return v(function(e,n){return Array.from(new Set(E().find(r({group:e},void 0!==n?{tab:n}:{$or:[{tab:{$exists:!1}},{tab:\"\"}]}),{fields:{section:1},sort:{sorter:1,section:1,i18nLabel:1}}).fetch().map(function(e){return e.section||\"\"})))})},[E]),C=d(function(){return v(function(e){return Array.from(new Set(E().find({group:e},{fields:{tab:1},sort:{sorter:1,tab:1,i18nLabel:1}}).fetch().map(function(e){return e.tab||\"\"})))})},[E]),L=u(function(e){for(var n,t=o(e);!(n=t()).done;){var r=n.value,u=r._id,c=i(r,k);u&&E().update(u,{$set:c})}s.flush()}),w=p().data,F=null!==(n=null==w?void 0:w.isEnterprise)&&void 0!==n&&n,I=d(function(){return{queryEditableSetting:_,queryEditableSettings:x,queryGroupSections:q,queryGroupTabs:C,dispatch:L,isEnterprise:F}},[_,x,q,C,L,F]);return l.createElement(h.Provider,{children:t,value:I})})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/settings/EditableSettingsProvider.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { SettingId, GroupId, ISetting, TabId } from '@rocket.chat/core-typings';\\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport type { SettingsContextQuery } from '@rocket.chat/ui-contexts';\\nimport { useSettings } from '@rocket.chat/ui-contexts';\\nimport { Mongo } from 'meteor/mongo';\\nimport { Tracker } from 'meteor/tracker';\\nimport type { FilterOperators } from 'mongodb';\\nimport type { MutableRefObject, ReactNode } from 'react';\\nimport React, { useEffect, useMemo, useRef } from 'react';\\n\\nimport { useIsEnterprise } from '../../../hooks/useIsEnterprise';\\nimport { createReactiveSubscriptionFactory } from '../../../lib/createReactiveSubscriptionFactory';\\nimport type { EditableSetting, EditableSettingsContextValue } from '../EditableSettingsContext';\\nimport { EditableSettingsContext } from '../EditableSettingsContext';\\n\\nconst defaultQuery: SettingsContextQuery = {};\\n\\ntype EditableSettingsProviderProps = {\\n\\tchildren?: ReactNode;\\n\\tquery?: SettingsContextQuery;\\n};\\n\\nconst EditableSettingsProvider = ({ children, query = defaultQuery }: EditableSettingsProviderProps) => {\\n\\tconst settingsCollectionRef = useRef<Mongo.Collection<EditableSetting>>(null) as MutableRefObject<Mongo.Collection<EditableSetting>>;\\n\\tconst persistedSettings = useSettings(query);\\n\\n\\tconst getSettingsCollection = useMutableCallback(() => {\\n\\t\\tif (!settingsCollectionRef.current) {\\n\\t\\t\\tsettingsCollectionRef.current = new Mongo.Collection<any>(null);\\n\\t\\t}\\n\\n\\t\\treturn settingsCollectionRef.current;\\n\\t}) as () => Mongo.Collection<EditableSetting>;\\n\\n\\tuseEffect(() => {\\n\\t\\tconst settingsCollection = getSettingsCollection();\\n\\n\\t\\tsettingsCollection.remove({ _id: { $nin: persistedSettings.map(({ _id }) => _id) } });\\n\\t\\tfor (const { _id, ...fields } of persistedSettings) {\\n\\t\\t\\tsettingsCollection.upsert(_id, { $set: { ...fields }, $unset: { changed: true } });\\n\\t\\t}\\n\\t}, [getSettingsCollection, persistedSettings]);\\n\\n\\tconst queryEditableSetting = useMemo(() => {\\n\\t\\tconst validateSettingQueries = (\\n\\t\\t\\tquery: undefined | string | FilterOperators<ISetting> | FilterOperators<ISetting>[],\\n\\t\\t\\tsettingsCollection: Mongo.Collection<EditableSetting>,\\n\\t\\t): boolean => {\\n\\t\\t\\tif (!query) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst queries = [].concat(typeof query === 'string' ? JSON.parse(query) : query);\\n\\t\\t\\treturn queries.every((query) => settingsCollection.find(query).count() > 0);\\n\\t\\t};\\n\\n\\t\\treturn createReactiveSubscriptionFactory((_id: SettingId): EditableSetting | undefined => {\\n\\t\\t\\tconst settingsCollection = getSettingsCollection();\\n\\t\\t\\tconst editableSetting = settingsCollection.findOne(_id);\\n\\n\\t\\t\\tif (!editableSetting) {\\n\\t\\t\\t\\treturn undefined;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\t...editableSetting,\\n\\t\\t\\t\\tdisabled: editableSetting.blocked || !validateSettingQueries(editableSetting.enableQuery, settingsCollection),\\n\\t\\t\\t\\tinvisible: !validateSettingQueries(editableSetting.displayQuery, settingsCollection),\\n\\t\\t\\t};\\n\\t\\t});\\n\\t}, [getSettingsCollection]);\\n\\n\\tconst queryEditableSettings = useMemo(\\n\\t\\t() =>\\n\\t\\t\\tcreateReactiveSubscriptionFactory((query = {}) =>\\n\\t\\t\\t\\tgetSettingsCollection()\\n\\t\\t\\t\\t\\t.find(\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t...('_id' in query && { _id: { $in: query._id } }),\\n\\t\\t\\t\\t\\t\\t\\t...('group' in query && { group: query.group }),\\n\\t\\t\\t\\t\\t\\t\\t...('changed' in query && { changed: query.changed }),\\n\\t\\t\\t\\t\\t\\t\\t$and: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t...('section' in query &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(query.section\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t? { section: query.section }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t$or: [{ section: { $exists: false } }, { section: '' }],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  })),\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t...('tab' in query &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(query.tab\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t? { tab: query.tab }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t$or: [{ tab: { $exists: false } }, { tab: '' }],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  })),\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t],\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tsort: {\\n\\t\\t\\t\\t\\t\\t\\t\\tsection: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\tsorter: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\ti18nLabel: 1,\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t.fetch(),\\n\\t\\t\\t),\\n\\t\\t[getSettingsCollection],\\n\\t);\\n\\n\\tconst queryGroupSections = useMemo(\\n\\t\\t() =>\\n\\t\\t\\tcreateReactiveSubscriptionFactory((_id: GroupId, tab?: TabId) =>\\n\\t\\t\\t\\tArray.from(\\n\\t\\t\\t\\t\\tnew Set(\\n\\t\\t\\t\\t\\t\\tgetSettingsCollection()\\n\\t\\t\\t\\t\\t\\t\\t.find(\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tgroup: _id,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t...(tab !== undefined\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t? { tab }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t$or: [{ tab: { $exists: false } }, { tab: '' }],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  }),\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfields: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsection: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsort: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsorter: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsection: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ti18nLabel: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t\\t.fetch()\\n\\t\\t\\t\\t\\t\\t\\t.map(({ section }) => section || ''),\\n\\t\\t\\t\\t\\t),\\n\\t\\t\\t\\t),\\n\\t\\t\\t),\\n\\t\\t[getSettingsCollection],\\n\\t);\\n\\n\\tconst queryGroupTabs = useMemo(\\n\\t\\t() =>\\n\\t\\t\\tcreateReactiveSubscriptionFactory((_id: GroupId) =>\\n\\t\\t\\t\\tArray.from(\\n\\t\\t\\t\\t\\tnew Set(\\n\\t\\t\\t\\t\\t\\tgetSettingsCollection()\\n\\t\\t\\t\\t\\t\\t\\t.find(\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tgroup: _id,\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfields: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttab: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsort: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsorter: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttab: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ti18nLabel: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t\\t.fetch()\\n\\t\\t\\t\\t\\t\\t\\t.map(({ tab }) => tab || ''),\\n\\t\\t\\t\\t\\t),\\n\\t\\t\\t\\t),\\n\\t\\t\\t),\\n\\t\\t[getSettingsCollection],\\n\\t);\\n\\n\\tconst dispatch = useMutableCallback((changes: Partial<EditableSetting>[]): void => {\\n\\t\\tfor (const { _id, ...data } of changes) {\\n\\t\\t\\tif (!_id) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tgetSettingsCollection().update(_id, { $set: data });\\n\\t\\t}\\n\\t\\tTracker.flush();\\n\\t});\\n\\n\\tconst { data } = useIsEnterprise();\\n\\n\\tconst isEnterprise = data?.isEnterprise ?? false;\\n\\n\\tconst contextValue = useMemo<EditableSettingsContextValue>(\\n\\t\\t() => ({\\n\\t\\t\\tqueryEditableSetting,\\n\\t\\t\\tqueryEditableSettings,\\n\\t\\t\\tqueryGroupSections,\\n\\t\\t\\tqueryGroupTabs,\\n\\t\\t\\tdispatch,\\n\\t\\t\\tisEnterprise,\\n\\t\\t}),\\n\\t\\t[queryEditableSetting, queryEditableSettings, queryGroupSections, queryGroupTabs, dispatch, isEnterprise],\\n\\t);\\n\\n\\treturn <EditableSettingsContext.Provider children={children} value={contextValue} />;\\n};\\n\\nexport default EditableSettingsProvider;\\n\",null],\"names\":[\"_objectSpread\",\"_objectWithoutProperties\",\"_createForOfIteratorHelperLoose\",\"useMutableCallback\",\"useSettings\",\"Mongo\",\"Tracker\",\"React\",\"useEffect\",\"useMemo\",\"useRef\",\"useIsEnterprise\",\"createReactiveSubscriptionFactory\",\"EditableSettingsContext\",\"module\",\"link\",\"default\",\"v\",\"defaultQuery\",\"exportDefault\",\"_ref\",\"_data$isEnterprise\",\"children\",\"_ref$query\",\"query\",\"settingsCollectionRef\",\"persistedSettings\",\"getSettingsCollection\",\"current\",\"Collection\",\"settingsCollection\",\"remove\",\"_id\",\"$nin\",\"map\",\"_ref2\",\"_step\",\"_iterator\",\"done\",\"_ref4\",\"value\",\"fields\",\"_excluded\",\"upsert\",\"$set\",\"$unset\",\"changed\",\"queryEditableSetting\",\"validateSettingQueries\",\"queries\",\"concat\",\"JSON\",\"parse\",\"every\",\"find\",\"count\",\"editableSetting\",\"findOne\",\"disabled\",\"blocked\",\"enableQuery\",\"invisible\",\"displayQuery\",\"queryEditableSettings\",\"arguments\",\"length\",\"undefined\",\"$in\",\"group\",\"$and\",\"section\",\"$or\",\"$exists\",\"tab\",\"sort\",\"sorter\",\"i18nLabel\",\"fetch\",\"queryGroupSections\",\"Array\",\"from\",\"Set\",\"_ref5\",\"queryGroupTabs\",\"_ref6\",\"dispatch\",\"changes\",\"_step2\",\"_iterator2\",\"_ref8\",\"data\",\"_excluded2\",\"update\",\"flush\",\"_useIsEnterprise\",\"isEnterprise\",\"contextValue\",\"createElement\",\"Provider\"],\"mappings\":\"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\"}"}