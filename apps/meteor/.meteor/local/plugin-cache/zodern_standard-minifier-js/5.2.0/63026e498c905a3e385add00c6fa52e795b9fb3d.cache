{"code":"function module(e,t,n){let i,l,o,r,a,u,d,s,c,g,m,v,f,R,p;n.export({useHandleUnread:()=>k}),n.link(\"@rocket.chat/ui-contexts\",{useRouter(e){i=e}},0),n.link(\"react\",{useCallback(e){l=e},useEffect(e){o=e},useMemo(e){r=e},useRef(e){a=e},useState(e){u=e}},1),n.link(\"../../../../../app/models/client\",{ChatMessage(e){d=e}},2),n.link(\"../../../../../app/ui-utils/client\",{LegacyRoomManager(e){s=e},RoomHistoryManager(e){c=e}},3),n.link(\"../../../../../lib/utils/highOrderFunctions\",{withDebouncing(e){g=e},withThrottling(e){m=e}},4),n.link(\"../../../../hooks/useReactiveValue\",{useReactiveValue(e){v=e}},5),n.link(\"../../../../lib/rooms/roomCoordinator\",{roomCoordinator(e){f=e}},6),n.link(\"../../../../lib/utils/setMessageJumpQueryStringParameter\",{setMessageJumpQueryStringParameter(e){R=e}},7),n.link(\"../../contexts/ChatContext\",{useChat(e){p=e}},8);let h=e=>{let t=v(l(()=>c.getRoom(e._id).unreadNotLoaded.get(),[e._id])),[n,i]=u(0),o=r(()=>t+n,[t,n]),a=v(l(()=>{var t;return null===(t=s.getOpenedRoomByRid(e._id))||void 0===t?void 0:t.unreadSince.get()},[e._id]));return r(()=>o&&a?[{count:o,since:a},i]:[void 0,i],[o,a])},k=(e,t)=>{var n;let s=a(null),v=!!t,[k,C]=h(e),[w,M]=u(),_=p();if(!_)throw Error(\"No ChatContext provided\");let S=l(()=>{var t;let n=e._id,{firstUnread:i}=c.getRoom(n),l=null==i?void 0:i.get();l||(l=d.findOne({rid:n,ts:{$gt:null==k?void 0:k.since}},{sort:{ts:1},limit:1})),l&&(R(null===(t=l)||void 0===t?void 0:t._id),C(0))},[e._id,null==k?void 0:k.since,C]),b=l(()=>{_.readStateManager.markAsRead(),C(0)},[_.readStateManager,C]);o(()=>{if(!v){C(0);return}let n=d.find({rid:e._id,ts:{$lte:w,$gt:null==t?void 0:t.ls}}).count();C(n)},[w,e._id,C,v,null==t?void 0:t.ls]);let x=i(),y=r(()=>g({wait:500})(()=>{v&&_.readStateManager.attemptMarkAsRead()}),[_.readStateManager,v]);o(()=>x.subscribeToRouteChange(()=>{let e=x.getRouteName();e&&f.isRouteNameKnown(e)&&y()}),[y,e._id,x,v,null==t?void 0:t.alert,null==t?void 0:t.unread]),o(()=>{if(!(null!=k&&k.count))return y()},[y,e._id,null==k?void 0:k.count]);let O=l(e=>{if(!e)return;let t=function(){var e;let t;let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,i=s.current;if(!i)return;let l=i.getBoundingClientRect().left+window.pageXOffset,o=i.getBoundingClientRect().top+window.pageYOffset,r=parseFloat(getComputedStyle(i).width);if(null!==(e=t=\"rtl\"===document.dir?document.elementFromPoint(l+r-2,o+n+2):document.elementFromPoint(l+2,o+n+2))&&void 0!==e&&e.classList.contains(\"rcx-message\")||null!=t&&t.classList.contains(\"rcx-message--sequential\"))return t};e.addEventListener(\"scroll\",m({wait:300})(()=>{Tracker.afterFlush(()=>{let e=t(0)||t(20)||t(40);if(!e){C(0);return}let n=d.findOne(e.id);if(!n){C(0);return}M(n.ts)})}))},[C]);return{innerRef:O,wrapperRef:s,handleUnreadBarJumpToButtonClick:S,handleMarkAsReadButtonClick:b,counter:[null!==(n=null==k?void 0:k.count)&&void 0!==n?n:0,null==k?void 0:k.since]}}}","map":"{\"version\":3,\"sources\":[\"client/views/room/body/hooks/useUnreadMessages.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, ISubscription } from '@rocket.chat/core-typings';\\nimport { useRouter } from '@rocket.chat/ui-contexts';\\nimport type { Dispatch, SetStateAction } from 'react';\\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\\n\\nimport { ChatMessage } from '../../../../../app/models/client';\\nimport { LegacyRoomManager, RoomHistoryManager } from '../../../../../app/ui-utils/client';\\nimport { withDebouncing, withThrottling } from '../../../../../lib/utils/highOrderFunctions';\\nimport { useReactiveValue } from '../../../../hooks/useReactiveValue';\\nimport { roomCoordinator } from '../../../../lib/rooms/roomCoordinator';\\nimport { setMessageJumpQueryStringParameter } from '../../../../lib/utils/setMessageJumpQueryStringParameter';\\nimport { useChat } from '../../contexts/ChatContext';\\n\\ninterface IUnreadMessages {\\n\\tcount: number;\\n\\tsince: Date;\\n}\\n\\nconst useUnreadMessages = (room: IRoom): readonly [data: IUnreadMessages | undefined, setUnreadCount: Dispatch<SetStateAction<number>>] => {\\n\\tconst notLoadedCount = useReactiveValue(useCallback(() => RoomHistoryManager.getRoom(room._id).unreadNotLoaded.get(), [room._id]));\\n\\tconst [loadedCount, setLoadedCount] = useState(0);\\n\\n\\tconst count = useMemo(() => notLoadedCount + loadedCount, [notLoadedCount, loadedCount]);\\n\\n\\tconst since = useReactiveValue(useCallback(() => LegacyRoomManager.getOpenedRoomByRid(room._id)?.unreadSince.get(), [room._id]));\\n\\n\\treturn useMemo(() => {\\n\\t\\tif (count && since) {\\n\\t\\t\\treturn [{ count, since }, setLoadedCount];\\n\\t\\t}\\n\\n\\t\\treturn [undefined, setLoadedCount];\\n\\t}, [count, since]);\\n};\\n\\nexport const useHandleUnread = (\\n\\troom: IRoom,\\n\\tsubscription?: ISubscription,\\n): {\\n\\tinnerRef: (wrapper: HTMLDivElement | null) => void;\\n\\twrapperRef: React.MutableRefObject<HTMLDivElement | null>;\\n\\thandleUnreadBarJumpToButtonClick: () => void;\\n\\thandleMarkAsReadButtonClick: () => void;\\n\\tcounter: readonly [number, Date | undefined];\\n} => {\\n\\tconst messagesBoxRef = useRef<HTMLDivElement>(null);\\n\\n\\tconst subscribed = Boolean(subscription);\\n\\tconst [unread, setUnreadCount] = useUnreadMessages(room);\\n\\n\\tconst [lastMessageDate, setLastMessageDate] = useState<Date | undefined>();\\n\\n\\tconst chat = useChat();\\n\\n\\tif (!chat) {\\n\\t\\tthrow new Error('No ChatContext provided');\\n\\t}\\n\\tconst handleUnreadBarJumpToButtonClick = useCallback(() => {\\n\\t\\tconst rid = room._id;\\n\\t\\tconst { firstUnread } = RoomHistoryManager.getRoom(rid);\\n\\t\\tlet message = firstUnread?.get();\\n\\t\\tif (!message) {\\n\\t\\t\\tmessage = ChatMessage.findOne({ rid, ts: { $gt: unread?.since } }, { sort: { ts: 1 }, limit: 1 });\\n\\t\\t}\\n\\t\\tif (!message) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tsetMessageJumpQueryStringParameter(message?._id);\\n\\t\\tsetUnreadCount(0);\\n\\t}, [room._id, unread?.since, setUnreadCount]);\\n\\n\\tconst handleMarkAsReadButtonClick = useCallback(() => {\\n\\t\\tchat.readStateManager.markAsRead();\\n\\t\\tsetUnreadCount(0);\\n\\t}, [chat.readStateManager, setUnreadCount]);\\n\\n\\tuseEffect(() => {\\n\\t\\tif (!subscribed) {\\n\\t\\t\\tsetUnreadCount(0);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst count = ChatMessage.find({\\n\\t\\t\\trid: room._id,\\n\\t\\t\\tts: { $lte: lastMessageDate, $gt: subscription?.ls },\\n\\t\\t}).count();\\n\\n\\t\\tsetUnreadCount(count);\\n\\t}, [lastMessageDate, room._id, setUnreadCount, subscribed, subscription?.ls]);\\n\\n\\tconst router = useRouter();\\n\\n\\tconst debouncedReadMessageRead = useMemo(\\n\\t\\t() =>\\n\\t\\t\\twithDebouncing({ wait: 500 })(() => {\\n\\t\\t\\t\\tif (subscribed) {\\n\\t\\t\\t\\t\\tchat.readStateManager.attemptMarkAsRead();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}),\\n\\t\\t[chat.readStateManager, subscribed],\\n\\t);\\n\\n\\tuseEffect(\\n\\t\\t() =>\\n\\t\\t\\trouter.subscribeToRouteChange(() => {\\n\\t\\t\\t\\tconst routeName = router.getRouteName();\\n\\t\\t\\t\\tif (!routeName || !roomCoordinator.isRouteNameKnown(routeName)) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tdebouncedReadMessageRead();\\n\\t\\t\\t}),\\n\\t\\t[debouncedReadMessageRead, room._id, router, subscribed, subscription?.alert, subscription?.unread],\\n\\t);\\n\\n\\tuseEffect(() => {\\n\\t\\tif (!unread?.count) {\\n\\t\\t\\treturn debouncedReadMessageRead();\\n\\t\\t}\\n\\t}, [debouncedReadMessageRead, room._id, unread?.count]);\\n\\n\\tconst ref = useCallback(\\n\\t\\t(wrapper: HTMLDivElement | null) => {\\n\\t\\t\\tif (!wrapper) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst getElementFromPoint = (topOffset = 0): Element | undefined => {\\n\\t\\t\\t\\tconst messagesBox = messagesBoxRef.current;\\n\\n\\t\\t\\t\\tif (!messagesBox) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tconst messagesBoxLeft = messagesBox.getBoundingClientRect().left + window.pageXOffset;\\n\\t\\t\\t\\tconst messagesBoxTop = messagesBox.getBoundingClientRect().top + window.pageYOffset;\\n\\t\\t\\t\\tconst messagesBoxWidth = parseFloat(getComputedStyle(messagesBox).width);\\n\\n\\t\\t\\t\\tlet element;\\n\\t\\t\\t\\tif (document.dir === 'rtl') {\\n\\t\\t\\t\\t\\telement = document.elementFromPoint(messagesBoxLeft + messagesBoxWidth - 2, messagesBoxTop + topOffset + 2);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\telement = document.elementFromPoint(messagesBoxLeft + 2, messagesBoxTop + topOffset + 2);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (element?.classList.contains('rcx-message') || element?.classList.contains('rcx-message--sequential')) {\\n\\t\\t\\t\\t\\treturn element;\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t\\twrapper.addEventListener(\\n\\t\\t\\t\\t'scroll',\\n\\t\\t\\t\\twithThrottling({ wait: 300 })(() => {\\n\\t\\t\\t\\t\\tTracker.afterFlush(() => {\\n\\t\\t\\t\\t\\t\\tconst lastInvisibleMessageOnScreen = getElementFromPoint(0) || getElementFromPoint(20) || getElementFromPoint(40);\\n\\n\\t\\t\\t\\t\\t\\tif (!lastInvisibleMessageOnScreen) {\\n\\t\\t\\t\\t\\t\\t\\tsetUnreadCount(0);\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tconst lastMessage = ChatMessage.findOne(lastInvisibleMessageOnScreen.id);\\n\\t\\t\\t\\t\\t\\tif (!lastMessage) {\\n\\t\\t\\t\\t\\t\\t\\tsetUnreadCount(0);\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tsetLastMessageDate(lastMessage.ts);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}),\\n\\t\\t\\t);\\n\\t\\t},\\n\\t\\t[setUnreadCount],\\n\\t);\\n\\n\\treturn {\\n\\t\\tinnerRef: ref,\\n\\t\\twrapperRef: messagesBoxRef,\\n\\t\\thandleUnreadBarJumpToButtonClick,\\n\\t\\thandleMarkAsReadButtonClick,\\n\\t\\tcounter: [unread?.count ?? 0, unread?.since] as const,\\n\\t};\\n};\\n\",null],\"names\":[\"useRouter\",\"useCallback\",\"useEffect\",\"useMemo\",\"useRef\",\"useState\",\"ChatMessage\",\"LegacyRoomManager\",\"RoomHistoryManager\",\"withDebouncing\",\"withThrottling\",\"useReactiveValue\",\"roomCoordinator\",\"setMessageJumpQueryStringParameter\",\"useChat\",\"module\",\"export\",\"useHandleUnread\",\"link\",\"v\",\"useUnreadMessages\",\"room\",\"notLoadedCount\",\"getRoom\",\"_id\",\"unreadNotLoaded\",\"get\",\"loadedCount\",\"setLoadedCount\",\"count\",\"since\",\"_LegacyRoomManager$ge\",\"getOpenedRoomByRid\",\"unreadSince\",\"undefined\",\"subscription\",\"_unread$count\",\"messagesBoxRef\",\"subscribed\",\"Boolean\",\"unread\",\"setUnreadCount\",\"lastMessageDate\",\"setLastMessageDate\",\"chat\",\"Error\",\"handleUnreadBarJumpToButtonClick\",\"_message\",\"rid\",\"firstUnread\",\"message\",\"findOne\",\"ts\",\"$gt\",\"sort\",\"limit\",\"handleMarkAsReadButtonClick\",\"readStateManager\",\"markAsRead\",\"find\",\"$lte\",\"ls\",\"router\",\"debouncedReadMessageRead\",\"wait\",\"attemptMarkAsRead\",\"subscribeToRouteChange\",\"routeName\",\"getRouteName\",\"isRouteNameKnown\",\"alert\",\"ref\",\"wrapper\",\"getElementFromPoint\",\"_element\",\"element\",\"topOffset\",\"arguments\",\"length\",\"messagesBox\",\"current\",\"messagesBoxLeft\",\"getBoundingClientRect\",\"left\",\"window\",\"pageXOffset\",\"messagesBoxTop\",\"top\",\"pageYOffset\",\"messagesBoxWidth\",\"parseFloat\",\"getComputedStyle\",\"width\",\"document\",\"dir\",\"elementFromPoint\",\"classList\",\"contains\",\"_element2\",\"addEventListener\",\"Tracker\",\"afterFlush\",\"lastInvisibleMessageOnScreen\",\"lastMessage\",\"id\",\"innerRef\",\"wrapperRef\",\"counter\"],\"mappings\":\"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\"}"}