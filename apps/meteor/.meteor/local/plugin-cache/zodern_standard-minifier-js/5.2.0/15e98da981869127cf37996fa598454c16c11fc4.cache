{"code":"function module(e,t,a){let s,n,l,m,r,u,o,i,c,d,g,k,E,y,h,M,p,v,f,C,b,S,x,U,D,q,B,F,T,N;a.link(\"@babel/runtime/helpers/extends\",{default(e){s=e}},0),a.link(\"@rocket.chat/core-typings\",{isQuoteAttachment(e){n=e}},0),a.link(\"@rocket.chat/fuselage\",{Message(e){l=e},MessageLeftContainer(e){m=e},MessageContainer(e){r=e},MessageBody(e){u=e},MessageDivider(e){o=e},MessageName(e){i=e},MessageUsername(e){c=e},MessageTimestamp(e){d=e},MessageHeader(e){g=e},MessageSystem(e){k=e},MessageSystemLeftContainer(e){E=e},MessageSystemContainer(e){y=e},MessageSystemBlock(e){h=e},MessageSystemName(e){M=e},MessageSystemBody(e){p=e},MessageSystemTimestamp(e){v=e}},1),a.link(\"@rocket.chat/ui-avatar\",{UserAvatar(e){f=e}},2),a.link(\"react\",{default(e){C=e},memo(e){b=e}},3),a.link(\"react-i18next\",{useTranslation(e){S=e}},4),a.link(\"../../../../../lib/getUserDisplayName\",{getUserDisplayName(e){x=e}},5),a.link(\"../../../../components/message/MessageContentBody\",{default(e){U=e}},6),a.link(\"../../../../components/message/StatusIndicators\",{default(e){D=e}},7),a.link(\"../../../../components/message/content/Attachments\",{default(e){q=e}},8),a.link(\"../../../../components/message/uikit/UiKitMessageBlock\",{default(e){B=e}},9),a.link(\"../../../../hooks/useFormatDate\",{useFormatDate(e){F=e}},10),a.link(\"../../../../hooks/useFormatTime\",{useFormatTime(e){T=e}},11),a.link(\"../../../room/contexts/UserCardContext\",{useUserCard(e){N=e}},12),a.exportDefault(b(e=>{var t,a;let{message:b,sequential:A,isNewDay:z,showUserAvatar:L}=e,{t:_}=S(),{triggerProps:H,openUserCard:I}=N(),K=F(),P=T(),Q=(null==b?void 0:null===(t=b.attachments)||void 0===t?void 0:t.filter(n))||[],j=(null==b?void 0:null===(a=b.attachments)||void 0===a?void 0:a.filter(e=>!n(e)))||[];return\"livechat-close\"===b.t?C.createElement(k,null,C.createElement(E,null,L&&C.createElement(f,s({url:b.avatar,username:b.u.username,size:\"x18\",onClick:e=>I(e,b.u.username),style:{cursor:\"pointer\"},role:\"button\"},H))),C.createElement(y,null,C.createElement(h,null,C.createElement(M,{\"data-username\":b.u.username,\"data-qa-type\":\"username\"},\"@\",b.u.username),C.createElement(p,{title:b.msg},_(\"Conversation_closed\",{comment:b.msg})),C.createElement(v,{title:P(b.ts)},P(b.ts))))):C.createElement(C.Fragment,null,z&&C.createElement(o,null,K(b.ts)),C.createElement(l,{isPending:b.temp,sequential:A,role:\"listitem\",\"data-qa\":\"chat-history-message\"},C.createElement(m,null,!A&&b.u.username&&L&&C.createElement(f,s({url:b.avatar,username:b.u.username,size:\"x36\",onClick:e=>I(e,b.u.username),style:{cursor:\"pointer\"},role:\"button\"},H)),A&&C.createElement(D,{message:b})),C.createElement(r,null,!A&&C.createElement(g,null,C.createElement(i,{title:\"@\".concat(b.u.username),\"data-username\":b.u.username},b.alias||x(b.u.name,b.u.username,!1)),C.createElement(c,{\"data-username\":b.u.username,\"data-qa-type\":\"username\"},\"@\",b.u.username),C.createElement(d,{title:P(b.ts)},P(b.ts)),C.createElement(D,{message:b})),!!(null!=Q&&Q.length)&&C.createElement(q,{attachments:Q}),!b.blocks&&b.md&&C.createElement(u,{\"data-qa-type\":\"message-body\",dir:\"auto\"},C.createElement(U,{md:b.md,mentions:b.mentions,channels:b.channels})),b.blocks&&C.createElement(B,{rid:b.rid,mid:b._id,blocks:b.blocks}),!!j&&C.createElement(q,{attachments:j}))))}))}","map":"{\"version\":3,\"sources\":[\"client/views/omnichannel/contactHistory/MessageList/ContactHistoryMessage.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { isQuoteAttachment, type IMessage, type MessageAttachment } from '@rocket.chat/core-typings';\\nimport {\\n\\tMessage as MessageTemplate,\\n\\tMessageLeftContainer,\\n\\tMessageContainer,\\n\\tMessageBody,\\n\\tMessageDivider,\\n\\tMessageName,\\n\\tMessageUsername,\\n\\tMessageTimestamp,\\n\\tMessageHeader as MessageHeaderTemplate,\\n\\tMessageSystem,\\n\\tMessageSystemLeftContainer,\\n\\tMessageSystemContainer,\\n\\tMessageSystemBlock,\\n\\tMessageSystemName,\\n\\tMessageSystemBody,\\n\\tMessageSystemTimestamp,\\n} from '@rocket.chat/fuselage';\\nimport { UserAvatar } from '@rocket.chat/ui-avatar';\\nimport React, { memo } from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport { getUserDisplayName } from '../../../../../lib/getUserDisplayName';\\nimport MessageContentBody from '../../../../components/message/MessageContentBody';\\nimport StatusIndicators from '../../../../components/message/StatusIndicators';\\nimport Attachments from '../../../../components/message/content/Attachments';\\nimport UiKitMessageBlock from '../../../../components/message/uikit/UiKitMessageBlock';\\nimport { useFormatDate } from '../../../../hooks/useFormatDate';\\nimport { useFormatTime } from '../../../../hooks/useFormatTime';\\nimport { useUserCard } from '../../../room/contexts/UserCardContext';\\n\\ntype ContactHistoryMessageProps = {\\n\\tmessage: IMessage;\\n\\tsequential: boolean;\\n\\tisNewDay: boolean;\\n\\tshowUserAvatar: boolean;\\n};\\n\\nconst ContactHistoryMessage = ({ message, sequential, isNewDay, showUserAvatar }: ContactHistoryMessageProps) => {\\n\\tconst { t } = useTranslation();\\n\\tconst { triggerProps, openUserCard } = useUserCard();\\n\\n\\tconst format = useFormatDate();\\n\\tconst formatTime = useFormatTime();\\n\\n\\tconst quotes = message?.attachments?.filter(isQuoteAttachment) || [];\\n\\n\\tconst attachments = message?.attachments?.filter((attachment: MessageAttachment) => !isQuoteAttachment(attachment)) || [];\\n\\n\\tif (message.t === 'livechat-close') {\\n\\t\\treturn (\\n\\t\\t\\t<MessageSystem>\\n\\t\\t\\t\\t<MessageSystemLeftContainer>\\n\\t\\t\\t\\t\\t{showUserAvatar && (\\n\\t\\t\\t\\t\\t\\t<UserAvatar\\n\\t\\t\\t\\t\\t\\t\\turl={message.avatar}\\n\\t\\t\\t\\t\\t\\t\\tusername={message.u.username}\\n\\t\\t\\t\\t\\t\\t\\tsize='x18'\\n\\t\\t\\t\\t\\t\\t\\tonClick={(e) => openUserCard(e, message.u.username)}\\n\\t\\t\\t\\t\\t\\t\\tstyle={{ cursor: 'pointer' }}\\n\\t\\t\\t\\t\\t\\t\\trole='button'\\n\\t\\t\\t\\t\\t\\t\\t{...triggerProps}\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t</MessageSystemLeftContainer>\\n\\t\\t\\t\\t<MessageSystemContainer>\\n\\t\\t\\t\\t\\t<MessageSystemBlock>\\n\\t\\t\\t\\t\\t\\t<MessageSystemName data-username={message.u.username} data-qa-type='username'>\\n\\t\\t\\t\\t\\t\\t\\t@{message.u.username}\\n\\t\\t\\t\\t\\t\\t</MessageSystemName>\\n\\t\\t\\t\\t\\t\\t<MessageSystemBody title={message.msg}>{t('Conversation_closed', { comment: message.msg })}</MessageSystemBody>\\n\\t\\t\\t\\t\\t\\t<MessageSystemTimestamp title={formatTime(message.ts)}>{formatTime(message.ts)}</MessageSystemTimestamp>\\n\\t\\t\\t\\t\\t</MessageSystemBlock>\\n\\t\\t\\t\\t</MessageSystemContainer>\\n\\t\\t\\t</MessageSystem>\\n\\t\\t);\\n\\t}\\n\\n\\treturn (\\n\\t\\t<>\\n\\t\\t\\t{isNewDay && <MessageDivider>{format(message.ts)}</MessageDivider>}\\n\\t\\t\\t<MessageTemplate isPending={message.temp} sequential={sequential} role='listitem' data-qa='chat-history-message'>\\n\\t\\t\\t\\t<MessageLeftContainer>\\n\\t\\t\\t\\t\\t{!sequential && message.u.username && showUserAvatar && (\\n\\t\\t\\t\\t\\t\\t<UserAvatar\\n\\t\\t\\t\\t\\t\\t\\turl={message.avatar}\\n\\t\\t\\t\\t\\t\\t\\tusername={message.u.username}\\n\\t\\t\\t\\t\\t\\t\\tsize='x36'\\n\\t\\t\\t\\t\\t\\t\\tonClick={(e) => openUserCard(e, message.u.username)}\\n\\t\\t\\t\\t\\t\\t\\tstyle={{ cursor: 'pointer' }}\\n\\t\\t\\t\\t\\t\\t\\trole='button'\\n\\t\\t\\t\\t\\t\\t\\t{...triggerProps}\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t{sequential && <StatusIndicators message={message} />}\\n\\t\\t\\t\\t</MessageLeftContainer>\\n\\n\\t\\t\\t\\t<MessageContainer>\\n\\t\\t\\t\\t\\t{!sequential && (\\n\\t\\t\\t\\t\\t\\t<MessageHeaderTemplate>\\n\\t\\t\\t\\t\\t\\t\\t<MessageName title={`@${message.u.username}`} data-username={message.u.username}>\\n\\t\\t\\t\\t\\t\\t\\t\\t{message.alias || getUserDisplayName(message.u.name, message.u.username, false)}\\n\\t\\t\\t\\t\\t\\t\\t</MessageName>\\n\\t\\t\\t\\t\\t\\t\\t<MessageUsername data-username={message.u.username} data-qa-type='username'>\\n\\t\\t\\t\\t\\t\\t\\t\\t@{message.u.username}\\n\\t\\t\\t\\t\\t\\t\\t</MessageUsername>\\n\\t\\t\\t\\t\\t\\t\\t<MessageTimestamp title={formatTime(message.ts)}>{formatTime(message.ts)}</MessageTimestamp>\\n\\t\\t\\t\\t\\t\\t\\t<StatusIndicators message={message} />\\n\\t\\t\\t\\t\\t\\t</MessageHeaderTemplate>\\n\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t{!!quotes?.length && <Attachments attachments={quotes} />}\\n\\t\\t\\t\\t\\t{!message.blocks && message.md && (\\n\\t\\t\\t\\t\\t\\t<MessageBody data-qa-type='message-body' dir='auto'>\\n\\t\\t\\t\\t\\t\\t\\t<MessageContentBody md={message.md} mentions={message.mentions} channels={message.channels} />\\n\\t\\t\\t\\t\\t\\t</MessageBody>\\n\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t{message.blocks && <UiKitMessageBlock rid={message.rid} mid={message._id} blocks={message.blocks} />}\\n\\t\\t\\t\\t\\t{!!attachments && <Attachments attachments={attachments} />}\\n\\t\\t\\t\\t</MessageContainer>\\n\\t\\t\\t</MessageTemplate>\\n\\t\\t</>\\n\\t);\\n};\\n\\nexport default memo(ContactHistoryMessage);\\n\",null],\"names\":[\"_extends\",\"isQuoteAttachment\",\"MessageTemplate\",\"MessageLeftContainer\",\"MessageContainer\",\"MessageBody\",\"MessageDivider\",\"MessageName\",\"MessageUsername\",\"MessageTimestamp\",\"MessageHeaderTemplate\",\"MessageSystem\",\"MessageSystemLeftContainer\",\"MessageSystemContainer\",\"MessageSystemBlock\",\"MessageSystemName\",\"MessageSystemBody\",\"MessageSystemTimestamp\",\"UserAvatar\",\"React\",\"memo\",\"useTranslation\",\"getUserDisplayName\",\"MessageContentBody\",\"StatusIndicators\",\"Attachments\",\"UiKitMessageBlock\",\"useFormatDate\",\"useFormatTime\",\"useUserCard\",\"module\",\"link\",\"default\",\"v\",\"Message\",\"MessageHeader\",\"exportDefault\",\"_ref\",\"_message$attachments\",\"_message$attachments2\",\"message\",\"sequential\",\"isNewDay\",\"showUserAvatar\",\"t\",\"triggerProps\",\"openUserCard\",\"format\",\"formatTime\",\"quotes\",\"attachments\",\"filter\",\"attachment\",\"createElement\",\"url\",\"avatar\",\"username\",\"u\",\"size\",\"onClick\",\"e\",\"style\",\"cursor\",\"role\",\"title\",\"msg\",\"comment\",\"ts\",\"Fragment\",\"isPending\",\"temp\",\"concat\",\"alias\",\"name\",\"length\",\"blocks\",\"md\",\"dir\",\"mentions\",\"channels\",\"rid\",\"mid\",\"_id\"],\"mappings\":\"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\"}"}