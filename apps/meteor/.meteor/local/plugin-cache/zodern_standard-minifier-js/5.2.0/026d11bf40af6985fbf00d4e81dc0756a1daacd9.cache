{"code":"function module(e,t,s){let n,r,i;s.export({useStreamUpdatesForMessageList:()=>o}),s.link(\"@rocket.chat/ui-contexts\",{useStream(e){n=e}},0),s.link(\"react\",{useEffect(e){r=e}},1),s.link(\"../../lib/minimongo\",{createFilterFromQuery(e){i=e}},2);let l=e=>{var t;let s={};return e.ids?s._id={$in:e.ids}:s.ts=e.ts,e.excludePinned&&(s.pinned={$ne:!0}),e.ignoreDiscussion&&(s.drid={$exists:!1}),null!==(t=e.users)&&void 0!==t&&t.length&&(s[\"u.username\"]={$in:e.users}),i(s)},o=(e,t,s)=>{let i=n(\"room-messages\"),o=n(\"notify-room\");r(()=>{if(!t||!s){e.clear();return}let n=i(s,t=>{e.handle(t)}),r=o(\"\".concat(s,\"/deleteMessage\"),t=>{let{_id:s}=t;e.remove(s)}),u=o(\"\".concat(s,\"/deleteMessageBulk\"),t=>{let s=l(t);e.prune(s)});return()=>{n(),r(),u()}},[i,o,t,s,e])}}","map":"{\"version\":3,\"sources\":[\"client/hooks/lists/useStreamUpdatesForMessageList.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage, IRoom, IUser } from '@rocket.chat/core-typings';\\nimport { useStream } from '@rocket.chat/ui-contexts';\\nimport { useEffect } from 'react';\\n\\nimport type { MessageList } from '../../lib/lists/MessageList';\\nimport type { FieldExpression, Query } from '../../lib/minimongo';\\nimport { createFilterFromQuery } from '../../lib/minimongo';\\n\\ntype NotifyRoomRidDeleteMessageBulkEvent = {\\n\\trid: IMessage['rid'];\\n\\texcludePinned: boolean;\\n\\tignoreDiscussion: boolean;\\n\\tts: FieldExpression<Date>;\\n\\tusers: string[];\\n\\tids?: string[]; // message ids have priority over ts\\n\\tshowDeletedStatus?: boolean;\\n};\\n\\nconst createDeleteCriteria = (params: NotifyRoomRidDeleteMessageBulkEvent): ((message: IMessage) => boolean) => {\\n\\tconst query: Query<IMessage> = {};\\n\\n\\tif (params.ids) {\\n\\t\\tquery._id = { $in: params.ids };\\n\\t} else {\\n\\t\\tquery.ts = params.ts;\\n\\t}\\n\\n\\tif (params.excludePinned) {\\n\\t\\tquery.pinned = { $ne: true };\\n\\t}\\n\\n\\tif (params.ignoreDiscussion) {\\n\\t\\tquery.drid = { $exists: false };\\n\\t}\\n\\tif (params.users?.length) {\\n\\t\\tquery['u.username'] = { $in: params.users };\\n\\t}\\n\\n\\treturn createFilterFromQuery<IMessage>(query);\\n};\\n\\nexport const useStreamUpdatesForMessageList = (messageList: MessageList, uid: IUser['_id'] | null, rid: IRoom['_id'] | null): void => {\\n\\tconst subscribeToRoomMessages = useStream('room-messages');\\n\\tconst subscribeToNotifyRoom = useStream('notify-room');\\n\\n\\tuseEffect(() => {\\n\\t\\tif (!uid || !rid) {\\n\\t\\t\\tmessageList.clear();\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst unsubscribeFromRoomMessages = subscribeToRoomMessages(rid, (message) => {\\n\\t\\t\\tmessageList.handle(message);\\n\\t\\t});\\n\\n\\t\\tconst unsubscribeFromDeleteMessage = subscribeToNotifyRoom(`${rid}/deleteMessage`, ({ _id: mid }) => {\\n\\t\\t\\tmessageList.remove(mid);\\n\\t\\t});\\n\\n\\t\\tconst unsubscribeFromDeleteMessageBulk = subscribeToNotifyRoom(`${rid}/deleteMessageBulk`, (params) => {\\n\\t\\t\\tconst matchDeleteCriteria = createDeleteCriteria(params);\\n\\t\\t\\tmessageList.prune(matchDeleteCriteria);\\n\\t\\t});\\n\\n\\t\\treturn (): void => {\\n\\t\\t\\tunsubscribeFromRoomMessages();\\n\\t\\t\\tunsubscribeFromDeleteMessage();\\n\\t\\t\\tunsubscribeFromDeleteMessageBulk();\\n\\t\\t};\\n\\t}, [subscribeToRoomMessages, subscribeToNotifyRoom, uid, rid, messageList]);\\n};\\n\",null],\"names\":[\"useStream\",\"useEffect\",\"createFilterFromQuery\",\"module\",\"export\",\"useStreamUpdatesForMessageList\",\"link\",\"v\",\"createDeleteCriteria\",\"params\",\"_params$users\",\"query\",\"ids\",\"_id\",\"$in\",\"ts\",\"excludePinned\",\"pinned\",\"$ne\",\"ignoreDiscussion\",\"drid\",\"$exists\",\"users\",\"length\",\"messageList\",\"uid\",\"rid\",\"subscribeToRoomMessages\",\"subscribeToNotifyRoom\",\"clear\",\"unsubscribeFromRoomMessages\",\"message\",\"handle\",\"unsubscribeFromDeleteMessage\",\"concat\",\"_ref\",\"mid\",\"remove\",\"unsubscribeFromDeleteMessageBulk\",\"matchDeleteCriteria\",\"prune\"],\"mappings\":\"2BACqDA,EAAAC,EAAAC,EAArDC,EAAOC,MAAE,CAAA,CAAAC,+BAAiBA,IAAAA,CAA2B,GAAAF,EAAAG,IAAA,CAAA,2BAAA,CAAAN,UAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,QAAA,CAAAL,UAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,sBAAA,CAAAJ,sBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAiBrD,IAAMC,EAAwBC,IAAiF,IAAAC,EAC9G,IAAMC,EAAyB,CAAA,EAmB/B,OAjBIF,EAAOG,GAAG,CACbD,EAAME,GAAG,CAAG,CAAEC,IAAKL,EAAOG,GAAAA,AAAG,EAE7BD,EAAMI,EAAE,CAAGN,EAAOM,EAAE,CAGjBN,EAAOO,aAAa,EACvBL,CAAAA,EAAMM,MAAM,CAAG,CAAEC,IAAK,CAAA,CAAI,CAAA,EAGvBT,EAAOU,gBAAgB,EAC1BR,CAAAA,EAAMS,IAAI,CAAG,CAAEC,QAAS,CAAA,CAAK,CAAA,EAEd,OAAhBX,CAAAA,EAAID,EAAOa,KAAK,AAALA,GAAKZ,AAAA,KAAA,IAAAA,GAAZA,EAAca,MAAM,EACvBZ,CAAAA,CAAK,CAAC,aAAa,CAAG,CAAEG,IAAKL,EAAOa,KAAAA,AAAK,CAAA,EAGnCpB,EAAgCS,EACxC,EAEaN,EAAiCA,CAACmB,EAA0BC,EAA0BC,KAClG,IAAMC,EAA0B3B,EAAU,iBACpC4B,EAAwB5B,EAAU,eAExCC,EAAU,KACT,GAAI,CAACwB,GAAO,CAACC,EAAK,CACjBF,EAAYK,KAAK,GACjB,MACD,CAEA,IAAMC,EAA8BH,EAAwBD,EAAMK,IACjEP,EAAYQ,MAAM,CAACD,EACpB,GAEME,EAA+BL,EAAqB,GAAAM,MAAA,CAAIR,EAAG,kBAAkBS,IAAiB,GAAhB,CAAEtB,IAAKuB,CAAAA,CAAK,CAAAD,EAC/FX,EAAYa,MAAM,CAACD,EACpB,GAEME,EAAmCV,EAAqB,GAAAM,MAAA,CAAIR,EAAG,sBAAuBjB,IAC3F,IAAM8B,EAAsB/B,EAAqBC,GACjDe,EAAYgB,KAAK,CAACD,EACnB,GAEA,MAAO,KACNT,IACAG,IACAK,GACD,CACD,EAAG,CAACX,EAAyBC,EAAuBH,EAAKC,EAAKF,EAAY,CAC3E\"}"}