{"code":"function module(e,n){\"use strict\";var t=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var a=Object.getOwnPropertyDescriptor(n,t);(!a||(\"get\"in a?!n.__esModule:a.writable||a.configurable))&&(a={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,a)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),r=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,\"default\",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var a in e)\"default\"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&t(n,e,a);return r(n,e),n};Object.defineProperty(n,\"__esModule\",{value:!0}),n.createValidatePrune=n.createIsPrune=n.createAssertPrune=n.createPrune=n.createValidateClone=n.createIsClone=n.createAssertClone=n.createClone=n.validatePrune=n.isPrune=n.assertPrune=n.prune=n.validateClone=n.isClone=n.assertClone=n.clone=void 0,n.literals=function(){_(\"literals\")};var s=a(e(\"./functional/Namespace\")),i=Object.assign(function(){_(\"clone\")},s.misc.clone(\"clone\"));n.clone=i;var c=Object.assign(function(){_(\"assertClone\")},s.assert(\"misc.assertClone\"),s.misc.clone(\"assertClone\"));n.assertClone=c;var o=Object.assign(function(){_(\"isClone\")},s.is(),s.misc.clone(\"isClone\"));n.isClone=o;var u=Object.assign(function(){_(\"validateClone\")},s.validate(),s.misc.clone(\"validateClone\"));n.validateClone=u;var l=Object.assign(function(){_(\"prune\")},s.misc.prune(\"prune\"));n.prune=l;var f=Object.assign(function(){_(\"assertPrune\")},s.assert(\"misc.assertPrune\"),s.misc.prune(\"assertPrune\"));n.assertPrune=f;var d=Object.assign(function(){_(\"isPrune\")},s.is(),s.misc.prune(\"isPrune\"));n.isPrune=d;var v=Object.assign(function(){_(\"validatePrune\")},s.misc.prune(\"validatePrune\"),s.validate());n.validatePrune=v;var P=Object.assign(function(){_(\"createClone\")},i);n.createClone=P;var b=Object.assign(function(){_(\"createAssertClone\")},c);n.createAssertClone=b;var C=Object.assign(function(){_(\"createIsClone\")},o);n.createIsClone=C;var O=Object.assign(function(){_(\"createValidateClone\")},u);n.createValidateClone=O;var j=Object.assign(function(){_(\"createPrune\")},l);n.createPrune=j;var p=Object.assign(function(){_(\"createAssertPrune\")},f);n.createAssertPrune=p;var g=Object.assign(function(){_(\"createIsPrune\")},d);n.createIsPrune=g;var m=Object.assign(function(){_(\"createValidatePrune\")},v);function _(e){throw Error(\"Error on typia.misc.\".concat(e,\"(): no transform has been configured. Read and follow https://typia.io/docs/setup please.\"))}n.createValidatePrune=m}","map":"{\"version\":3,\"sources\":[\"<anon>\"],\"names\":[],\"mappings\":\"\"}"}