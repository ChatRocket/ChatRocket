{"code":"function module(e,n,i){i.export({useStreamUpdatesForMessageList:function(){return s}}),i.link(\"@rocket.chat/ui-contexts\",{useStream:function(e){t=e}},0),i.link(\"react\",{useEffect:function(e){r=e}},1),i.link(\"../../lib/minimongo\",{createFilterFromQuery:function(e){u=e}},2);var t,r,u,o=function(e){var n,i={};return e.ids?i._id={$in:e.ids}:i.ts=e.ts,e.excludePinned&&(i.pinned={$ne:!0}),e.ignoreDiscussion&&(i.drid={$exists:!1}),null!==(n=e.users)&&void 0!==n&&n.length&&(i[\"u.username\"]={$in:e.users}),u(i)},s=function(e,n,i){var u=t(\"room-messages\"),s=t(\"notify-room\");r(function(){if(!n||!i){e.clear();return}var t=u(i,function(n){e.handle(n)}),r=s(i+\"/deleteMessage\",function(n){var i=n._id;e.remove(i)}),c=s(i+\"/deleteMessageBulk\",function(n){var i=o(n);e.prune(i)});return function(){t(),r(),c()}},[u,s,n,i,e])}}","map":"{\"version\":3,\"sources\":[\"client/hooks/lists/useStreamUpdatesForMessageList.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage, IRoom, IUser } from '@rocket.chat/core-typings';\\nimport { useStream } from '@rocket.chat/ui-contexts';\\nimport { useEffect } from 'react';\\n\\nimport type { MessageList } from '../../lib/lists/MessageList';\\nimport type { FieldExpression, Query } from '../../lib/minimongo';\\nimport { createFilterFromQuery } from '../../lib/minimongo';\\n\\ntype NotifyRoomRidDeleteMessageBulkEvent = {\\n\\trid: IMessage['rid'];\\n\\texcludePinned: boolean;\\n\\tignoreDiscussion: boolean;\\n\\tts: FieldExpression<Date>;\\n\\tusers: string[];\\n\\tids?: string[]; // message ids have priority over ts\\n\\tshowDeletedStatus?: boolean;\\n};\\n\\nconst createDeleteCriteria = (params: NotifyRoomRidDeleteMessageBulkEvent): ((message: IMessage) => boolean) => {\\n\\tconst query: Query<IMessage> = {};\\n\\n\\tif (params.ids) {\\n\\t\\tquery._id = { $in: params.ids };\\n\\t} else {\\n\\t\\tquery.ts = params.ts;\\n\\t}\\n\\n\\tif (params.excludePinned) {\\n\\t\\tquery.pinned = { $ne: true };\\n\\t}\\n\\n\\tif (params.ignoreDiscussion) {\\n\\t\\tquery.drid = { $exists: false };\\n\\t}\\n\\tif (params.users?.length) {\\n\\t\\tquery['u.username'] = { $in: params.users };\\n\\t}\\n\\n\\treturn createFilterFromQuery<IMessage>(query);\\n};\\n\\nexport const useStreamUpdatesForMessageList = (messageList: MessageList, uid: IUser['_id'] | null, rid: IRoom['_id'] | null): void => {\\n\\tconst subscribeToRoomMessages = useStream('room-messages');\\n\\tconst subscribeToNotifyRoom = useStream('notify-room');\\n\\n\\tuseEffect(() => {\\n\\t\\tif (!uid || !rid) {\\n\\t\\t\\tmessageList.clear();\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst unsubscribeFromRoomMessages = subscribeToRoomMessages(rid, (message) => {\\n\\t\\t\\tmessageList.handle(message);\\n\\t\\t});\\n\\n\\t\\tconst unsubscribeFromDeleteMessage = subscribeToNotifyRoom(`${rid}/deleteMessage`, ({ _id: mid }) => {\\n\\t\\t\\tmessageList.remove(mid);\\n\\t\\t});\\n\\n\\t\\tconst unsubscribeFromDeleteMessageBulk = subscribeToNotifyRoom(`${rid}/deleteMessageBulk`, (params) => {\\n\\t\\t\\tconst matchDeleteCriteria = createDeleteCriteria(params);\\n\\t\\t\\tmessageList.prune(matchDeleteCriteria);\\n\\t\\t});\\n\\n\\t\\treturn (): void => {\\n\\t\\t\\tunsubscribeFromRoomMessages();\\n\\t\\t\\tunsubscribeFromDeleteMessage();\\n\\t\\t\\tunsubscribeFromDeleteMessageBulk();\\n\\t\\t};\\n\\t}, [subscribeToRoomMessages, subscribeToNotifyRoom, uid, rid, messageList]);\\n};\\n\",null],\"names\":[\"module\",\"export\",\"useStreamUpdatesForMessageList\",\"link\",\"useStream\",\"v\",\"useEffect\",\"createFilterFromQuery\",\"createDeleteCriteria\",\"params\",\"_params$users\",\"query\",\"ids\",\"_id\",\"$in\",\"ts\",\"excludePinned\",\"pinned\",\"$ne\",\"ignoreDiscussion\",\"drid\",\"$exists\",\"users\",\"length\",\"messageList\",\"uid\",\"rid\",\"subscribeToRoomMessages\",\"subscribeToNotifyRoom\",\"clear\",\"unsubscribeFromRoomMessages\",\"message\",\"handle\",\"unsubscribeFromDeleteMessage\",\"_ref\",\"mid\",\"remove\",\"unsubscribeFromDeleteMessageBulk\",\"matchDeleteCriteria\",\"prune\"],\"mappings\":\"uBACAA,EAAOC,MAAE,CAAA,CAAAC,+BAAiB,WAA2B,OAAAA,CAAA,CAAA,GAAAF,EAAAG,IAAA,CAAA,2BAAA,CAAAC,UAAA,SAAAC,CAAA,EAAAD,EAAAC,CAAA,CAAA,EAAA,GAAAL,EAAAG,IAAA,CAAA,QAAA,CAAAG,UAAA,SAAAD,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAAAL,EAAAG,IAAA,CAAA,sBAAA,CAAAI,sBAAA,SAAAF,CAAA,EAAAE,EAAAF,CAAA,CAAA,EAAA,GAiBrD,IAjBqDD,EAAAE,EAAAC,EAiB/CC,EAAuB,SAACC,CAA2C,EACxE,IAD8GC,EACxGC,EAAyB,CAAA,EAmB/B,OAjBIF,EAAOG,GAAG,CACbD,EAAME,GAAG,CAAG,CAAEC,IAAKL,EAAOG,GAAAA,AAAG,EAE7BD,EAAMI,EAAE,CAAGN,EAAOM,EAAE,CAGjBN,EAAOO,aAAa,EACvBL,CAAAA,EAAMM,MAAM,CAAG,CAAEC,IAAK,CAAA,CAAI,CAAA,EAGvBT,EAAOU,gBAAgB,EAC1BR,CAAAA,EAAMS,IAAI,CAAG,CAAEC,QAAS,CAAA,CAAK,CAAA,EAEd,OAAhBX,CAAAA,EAAID,EAAOa,KAAK,AAALA,GAAKZ,AAAA,KAAA,IAAAA,GAAZA,EAAca,MAAM,EACvBZ,CAAAA,CAAK,CAAC,aAAa,CAAG,CAAEG,IAAKL,EAAOa,KAAAA,AAAK,CAAA,EAGnCf,EAAgCI,EACxC,EAEaT,EAAiC,SAACsB,CAAwB,CAAEC,CAAwB,CAAEC,CAAwB,EAC1H,IAAMC,EAA0BvB,EAAU,iBACpCwB,EAAwBxB,EAAU,eAExCE,EAAU,WACT,GAAI,CAACmB,GAAO,CAACC,EAAK,CACjBF,EAAYK,KAAK,GACjB,MACD,CAEA,IAAMC,EAA8BH,EAAwBD,EAAK,SAACK,CAAO,EACxEP,EAAYQ,MAAM,CAACD,EACpB,GAEME,EAA+BL,EAAyBF,EAAG,iBAAkB,SAAAQ,CAAA,EAAiB,IAATC,EAAGD,EAARrB,GAAG,CACxFW,EAAYY,MAAM,CAACD,EACpB,GAEME,EAAmCT,EAAyBF,EAAG,qBAAsB,SAACjB,CAAM,EACjG,IAAM6B,EAAsB9B,EAAqBC,GACjDe,EAAYe,KAAK,CAACD,EACnB,GAEA,OAAO,WACNR,IACAG,IACAI,GACD,CACD,EAAG,CAACV,EAAyBC,EAAuBH,EAAKC,EAAKF,EAAY,CAC3E\"}"}