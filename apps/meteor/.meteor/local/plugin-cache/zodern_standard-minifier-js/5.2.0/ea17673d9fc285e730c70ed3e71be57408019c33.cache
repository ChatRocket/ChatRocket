{"code":"function module(e,r,a){let o,t;a.export({AppsContext:()=>p}),a.link(\"react\",{createContext(e){o=e}},0),a.link(\"../lib/asyncState\",{AsyncStatePhase(e){t=e}},1);let p=o({installedApps:{phase:t.LOADING,value:void 0,error:void 0},marketplaceApps:{phase:t.LOADING,value:void 0,error:void 0},privateApps:{phase:t.LOADING,value:void 0,error:void 0},reload:()=>Promise.resolve(),orchestrator:void 0,privateAppsEnabled:!1})}","map":"{\"version\":3,\"sources\":[\"client/contexts/AppsContext.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { AppClientManager } from '@rocket.chat/apps-engine/client/AppClientManager';\\nimport type { IPermission } from '@rocket.chat/apps-engine/definition/permissions/IPermission';\\nimport type { ISetting } from '@rocket.chat/apps-engine/definition/settings';\\nimport type { Serialized } from '@rocket.chat/core-typings';\\nimport { createContext } from 'react';\\n\\nimport type { IAppExternalURL, ICategory } from '../apps/@types/IOrchestrator';\\nimport type { AsyncState } from '../lib/asyncState';\\nimport { AsyncStatePhase } from '../lib/asyncState';\\nimport type { App } from '../views/marketplace/types';\\n\\nexport interface IAppsOrchestrator {\\n\\tload(): Promise<void>;\\n\\tgetAppClientManager(): AppClientManager;\\n\\thandleError(error: unknown): void;\\n\\tgetInstalledApps(): Promise<App[]>;\\n\\tgetAppsFromMarketplace(isAdminUser?: boolean): Promise<{ apps: App[]; error?: unknown }>;\\n\\tgetAppsOnBundle(bundleId: string): Promise<App[]>;\\n\\tgetApp(appId: string): Promise<App>;\\n\\tsetAppSettings(appId: string, settings: ISetting[]): Promise<void>;\\n\\tinstallApp(appId: string, version: string, permissionsGranted?: IPermission[]): Promise<App>;\\n\\tupdateApp(appId: string, version: string, permissionsGranted?: IPermission[]): Promise<App>;\\n\\tbuildExternalUrl(appId: string, purchaseType?: 'buy' | 'subscription', details?: boolean): Promise<IAppExternalURL>;\\n\\tbuildExternalAppRequest(appId: string): Promise<{ url: string }>;\\n\\tbuildIncompatibleExternalUrl(appId: string, appVersion: string, action: string): Promise<IAppExternalURL>;\\n\\tgetCategories(): Promise<Serialized<ICategory[]>>;\\n}\\n\\nexport type AppsContextValue = {\\n\\tinstalledApps: AsyncState<{ apps: App[] }>;\\n\\tmarketplaceApps: AsyncState<{ apps: App[] }>;\\n\\tprivateApps: AsyncState<{ apps: App[] }>;\\n\\treload: () => Promise<void>;\\n\\torchestrator?: IAppsOrchestrator;\\n\\tprivateAppsEnabled: boolean;\\n};\\n\\nexport const AppsContext = createContext<AppsContextValue>({\\n\\tinstalledApps: {\\n\\t\\tphase: AsyncStatePhase.LOADING,\\n\\t\\tvalue: undefined,\\n\\t\\terror: undefined,\\n\\t},\\n\\tmarketplaceApps: {\\n\\t\\tphase: AsyncStatePhase.LOADING,\\n\\t\\tvalue: undefined,\\n\\t\\terror: undefined,\\n\\t},\\n\\tprivateApps: {\\n\\t\\tphase: AsyncStatePhase.LOADING,\\n\\t\\tvalue: undefined,\\n\\t\\terror: undefined,\\n\\t},\\n\\treload: () => Promise.resolve(),\\n\\torchestrator: undefined,\\n\\tprivateAppsEnabled: false,\\n});\\n\",null],\"names\":[\"createContext\",\"AsyncStatePhase\",\"module\",\"export\",\"AppsContext\",\"link\",\"v\",\"installedApps\",\"phase\",\"LOADING\",\"value\",\"undefined\",\"error\",\"marketplaceApps\",\"privateApps\",\"reload\",\"Promise\",\"resolve\",\"orchestrator\",\"privateAppsEnabled\"],\"mappings\":\"2BAIsCA,EAAAC,EAAtCC,EAAOC,MAAE,CAAA,CAAAC,YAAeA,IAAMA,CAAQ,GAAAF,EAAAG,IAAA,CAAA,QAAA,CAAAL,cAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,oBAAA,CAAAJ,gBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAiC/B,IAAMF,EAAcJ,EAAgC,CAC1DO,cAAe,CACdC,MAAOP,EAAgBQ,OAAO,CAC9BC,MAAOC,KAAAA,EACPC,MAAOD,KAAAA,GAERE,gBAAiB,CAChBL,MAAOP,EAAgBQ,OAAO,CAC9BC,MAAOC,KAAAA,EACPC,MAAOD,KAAAA,GAERG,YAAa,CACZN,MAAOP,EAAgBQ,OAAO,CAC9BC,MAAOC,KAAAA,EACPC,MAAOD,KAAAA,GAERI,OAAQA,IAAMC,QAAQC,OAAO,GAC7BC,aAAcP,KAAAA,EACdQ,mBAAoB,CAAA\"}"}