{"code":"function module(e,n,t){let a,o,i,s,r,c,u,l,f;t.export({useVoipTransferModal:()=>m},!0),t.link(\"react/jsx-runtime\",{jsx(e){a=e}},0),t.link(\"@rocket.chat/ui-contexts\",{useSetModal(e){o=e},useToastMessageDispatch(e){i=e}},1),t.link(\"@tanstack/react-query\",{useMutation(e){s=e}},2),t.link(\"react\",{useCallback(e){r=e},useEffect(e){c=e}},3),t.link(\"react-i18next\",{useTranslation(e){u=e}},4),t.link(\"../components/VoipTransferModal\",{default(e){l=e}},5),t.link(\"./useVoipAPI\",{useVoipAPI(e){f=e}},6);var d=this&&this.__awaiter||function(e,n,t,a){return new(t||(t=Promise))(function(o,i){function s(e){try{c(a.next(e))}catch(e){i(e)}}function r(e){try{c(a.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?o(e.value):((n=e.value)instanceof t?n:new t(function(e){e(n)})).then(s,r)}c((a=a.apply(e,n||[])).next())})};let m=({session:e})=>{let{t:n}=u(),t=o(),m=i(),{transferCall:p}=f(),_=r(()=>t(null),[t]);c(()=>()=>_(),[_]);let k=s({mutationFn:e=>d(void 0,[e],void 0,function*({extension:e,name:n}){return yield p(e),n||e}),onSuccess:e=>{m({type:\"success\",message:n(\"Call_transfered_to__name__\",{name:e})}),_()},onError:()=>{m({type:\"error\",message:n(\"Failed_to_transfer_call\")}),_()}}),h=r(()=>{t(a(l,{extension:e.contact.id,isLoading:k.isLoading,onCancel:()=>t(null),onConfirm:k.mutate}))},[k.isLoading,k.mutate,e,t]);return{startTransfer:h,cancelTransfer:_}}}","map":"{\"version\":3,\"sources\":[\"<anon>\"],\"names\":[],\"mappings\":\"\"}"}