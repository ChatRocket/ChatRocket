{"code":"function module(e,t,r){let c,i,n;r.export({useReactiveValue:()=>a}),r.link(\"react\",{useMemo(e){c=e}},0),r.link(\"use-sync-external-store/shim\",{useSyncExternalStore(e){i=e}},1),r.link(\"../lib/createReactiveSubscriptionFactory\",{createReactiveSubscriptionFactory(e){n=e}},2);let a=e=>{let[t,r]=c(()=>n(e)(),[e]);return i(t,r)}}","map":"{\"version\":3,\"sources\":[\"client/hooks/useReactiveValue.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useMemo } from 'react';\\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\\n\\nimport { createReactiveSubscriptionFactory } from '../lib/createReactiveSubscriptionFactory';\\n\\nexport const useReactiveValue = <T>(computeCurrentValue: () => T): T => {\\n\\tconst [subscribe, getSnapshot] = useMemo(() => createReactiveSubscriptionFactory<T>(computeCurrentValue)(), [computeCurrentValue]);\\n\\n\\treturn useSyncExternalStore(subscribe, getSnapshot);\\n};\\n\",null],\"names\":[\"useMemo\",\"useSyncExternalStore\",\"createReactiveSubscriptionFactory\",\"module\",\"export\",\"useReactiveValue\",\"link\",\"v\",\"computeCurrentValue\",\"subscribe\",\"getSnapshot\"],\"mappings\":\"2BAAgCA,EAAAC,EAAAC,EAAhCC,EAAOC,MAAE,CAAA,CAAAC,iBAAuBA,IAAAA,CAAA,GAAAF,EAAAG,IAAA,CAAA,QAAA,CAAAN,QAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,+BAAA,CAAAL,qBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,2CAAA,CAAAJ,kCAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAKzB,IAAMF,EAAuBG,IACnC,GAAM,CAACC,EAAWC,EAAY,CAAGV,EAAQ,IAAME,EAAqCM,KAAwB,CAACA,EAAoB,EAEjI,OAAOP,EAAqBQ,EAAWC,EACxC\"}"}