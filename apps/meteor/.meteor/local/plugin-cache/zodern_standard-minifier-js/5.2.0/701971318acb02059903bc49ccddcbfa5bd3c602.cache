{"code":"function module(e,l,n){let r;n.link(\"../../app/models/client/models/Users\",{Users(e){r=e}},0),Meteor.users=r,Meteor.user=function e(){var e;let l=Meteor.userId();return l&&null!==(e=r.findOne({_id:l}))&&void 0!==e?e:null}}","map":"{\"version\":3,\"sources\":[\"client/meteorOverrides/userAndUsers.ts\",\"<anon>\"],\"sourcesContent\":[\"import { Users } from '../../app/models/client/models/Users';\\n\\nMeteor.users = Users as typeof Meteor.users;\\n\\n// overwrite Meteor.users collection so records on it don't get erased whenever the client reconnects to websocket\\nMeteor.user = function user(): Meteor.User | null {\\n\\tconst uid = Meteor.userId();\\n\\n\\tif (!uid) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\treturn (Users.findOne({ _id: uid }) ?? null) as Meteor.User | null;\\n};\\n\",null],\"names\":[\"Users\",\"module\",\"link\",\"v\",\"Meteor\",\"users\",\"user\",\"_Users$findOne\",\"uid\",\"userId\",\"findOne\",\"_id\"],\"mappings\":\"uBAAA,IAAAA,EAASC,EAAOC,IAAA,CAAM,uCAAuC,CAAAF,MAAAG,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAE7DC,OAAOC,KAAK,CAAGL,EAGfI,OAAOE,IAAI,CAAG,SAASA,IAAI,IAAAC,EAC1B,IAAMC,EAAMJ,OAAOK,MAAM,UAEpBD,GAIL,AAAmC,OAAnCD,CAAAA,EAAQP,EAAMU,OAAO,CAAC,CAAEC,IAAKH,CAAG,EAAE,GAACD,AAAA,KAAA,IAAAA,EAAAA,EAAI,IACxC\"}"}