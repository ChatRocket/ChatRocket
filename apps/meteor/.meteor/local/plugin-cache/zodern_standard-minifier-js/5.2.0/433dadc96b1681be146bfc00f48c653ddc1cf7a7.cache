{"code":"function module(e,t,n){let l,a,r;n.link(\"react\",{default(e){l=e},memo(e){a=e}},0),n.link(\"./RoomMembersItem\",{default(e){r=e}},1),n.exportDefault(a(e=>{let{user:t,data:{onClickView:n,rid:a},index:d,reload:i,useRealName:m}=e;return null!=t&&t._id?l.createElement(r,{key:d,useRealName:m,username:t.username,_id:t._id,rid:a,name:t.name,federated:t.federated,freeSwitchExtension:t.freeSwitchExtension,onClickView:n,reload:i}):l.createElement(r.Skeleton,null)}))}","map":"{\"version\":3,\"sources\":[\"client/views/room/contextualBar/RoomMembers/RoomMembersRow.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IUser, IRoom } from '@rocket.chat/core-typings';\\nimport type { MouseEvent, ReactElement } from 'react';\\nimport React, { memo } from 'react';\\n\\nimport RoomMembersItem from './RoomMembersItem';\\n\\ntype RoomMembersRowProps = {\\n\\tuser: Pick<IUser, 'federated' | 'username' | 'name' | '_id' | 'freeSwitchExtension'>;\\n\\tdata: {\\n\\t\\tonClickView: (e: MouseEvent<HTMLElement>) => void;\\n\\t\\trid: IRoom['_id'];\\n\\t};\\n\\tindex: number;\\n\\treload: () => void;\\n\\tuseRealName: boolean;\\n};\\n\\nconst RoomMembersRow = ({ user, data: { onClickView, rid }, index, reload, useRealName }: RoomMembersRowProps): ReactElement => {\\n\\tif (!user?._id) {\\n\\t\\treturn <RoomMembersItem.Skeleton />;\\n\\t}\\n\\n\\treturn (\\n\\t\\t<RoomMembersItem\\n\\t\\t\\tkey={index}\\n\\t\\t\\tuseRealName={useRealName}\\n\\t\\t\\tusername={user.username}\\n\\t\\t\\t_id={user._id}\\n\\t\\t\\trid={rid}\\n\\t\\t\\tname={user.name}\\n\\t\\t\\tfederated={user.federated}\\n\\t\\t\\tfreeSwitchExtension={user.freeSwitchExtension}\\n\\t\\t\\tonClickView={onClickView}\\n\\t\\t\\treload={reload}\\n\\t\\t/>\\n\\t);\\n};\\n\\nexport default memo(RoomMembersRow);\\n\",null],\"names\":[\"React\",\"memo\",\"RoomMembersItem\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"user\",\"data\",\"onClickView\",\"rid\",\"index\",\"reload\",\"useRealName\",\"_id\",\"createElement\",\"key\",\"username\",\"name\",\"federated\",\"freeSwitchExtension\",\"Skeleton\"],\"mappings\":\"2BAEAA,EAAOC,EAA6BC,EAAtBC,EAAQC,IAAA,CAAA,QAAa,CAACC,QAAAC,CAAA,EAAAN,EAAAM,CAAA,EAAAL,KAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,oBAAA,CAAAC,QAAAC,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAApCH,EAAOI,aAAa,CAoCLN,EArBQO,IAAwG,GAAvG,CAAEC,KAAAA,CAAI,CAAEC,KAAM,CAAEC,YAAAA,CAAW,CAAEC,IAAAA,CAAAA,CAAK,CAAEC,MAAAA,CAAK,CAAEC,OAAAA,CAAM,CAAEC,YAAAA,CAAAA,CAAkC,CAAAP,SAC5G,AAAKC,MAAAA,GAAAA,EAAMO,GAAG,CAKbhB,EAAAiB,aAAA,CAACf,EAAe,CACfgB,IAAKL,EACLE,YAAaA,EACbI,SAAUV,EAAKU,QAAS,CACxBH,IAAKP,EAAKO,GAAI,CACdJ,IAAKA,EACLQ,KAAMX,EAAKW,IAAK,CAChBC,UAAWZ,EAAKY,SAAU,CAC1BC,oBAAqBb,EAAKa,mBAAoB,CAC9CX,YAAaA,EACbG,OAAQA,CAAO,GAdTd,EAAAiB,aAAA,CAACf,EAAgBqB,QAAQ,CAAA,KAiBlC\"}"}