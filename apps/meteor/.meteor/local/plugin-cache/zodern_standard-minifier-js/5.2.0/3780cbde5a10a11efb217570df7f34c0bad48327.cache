{"code":"function module(e,t,n){let l,r,a,i,o,m,s;function u(e){let t=r({},(l(e),e));if(t.msg){t.msg=m(t.msg),delete t.mentions;let e=t.msg?i(t.msg,{emoticons:!0}):void 0;return e?o.createElement(s,null,o.createElement(a,{tokens:e})):null}if(t.attachments){let e=t.attachments.find(e=>e.title||e.description);if(null!=e&&e.description)return o.createElement(o.Fragment,null,e.description);if(null!=e&&e.title)return o.createElement(o.Fragment,null,e.title)}return null}n.link(\"@babel/runtime/helpers/objectDestructuringEmpty\",{default(e){l=e}},0),n.link(\"@babel/runtime/helpers/extends\",{default(e){r=e}},1),n.export({normalizeThreadMessage:()=>u}),n.link(\"@rocket.chat/gazzodown\",{Markup(e){a=e}},0),n.link(\"@rocket.chat/message-parser\",{parse(e){i=e}},1),n.link(\"react\",{default(e){o=e}},2),n.link(\"../../app/markdown/lib/markdown\",{filterMarkdown(e){m=e}},3),n.link(\"../components/GazzodownText\",{default(e){s=e}},4)}","map":"{\"version\":3,\"sources\":[\"client/lib/normalizeThreadMessage.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage } from '@rocket.chat/core-typings';\\nimport { Markup } from '@rocket.chat/gazzodown';\\nimport { parse } from '@rocket.chat/message-parser';\\nimport type { ReactElement } from 'react';\\nimport React from 'react';\\n\\nimport { filterMarkdown } from '../../app/markdown/lib/markdown';\\nimport GazzodownText from '../components/GazzodownText';\\n\\nexport function normalizeThreadMessage({ ...message }: Readonly<Pick<IMessage, 'msg' | 'mentions' | 'attachments'>>): ReactElement | null {\\n\\tif (message.msg) {\\n\\t\\tmessage.msg = filterMarkdown(message.msg);\\n\\t\\tdelete message.mentions;\\n\\n\\t\\tconst tokens = message.msg ? parse(message.msg, { emoticons: true }) : undefined;\\n\\n\\t\\tif (!tokens) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\treturn (\\n\\t\\t\\t<GazzodownText>\\n\\t\\t\\t\\t<Markup tokens={tokens} />\\n\\t\\t\\t</GazzodownText>\\n\\t\\t);\\n\\t}\\n\\n\\tif (message.attachments) {\\n\\t\\tconst attachment = message.attachments.find((attachment) => attachment.title || attachment.description);\\n\\n\\t\\tif (attachment?.description) {\\n\\t\\t\\treturn <>{attachment.description}</>;\\n\\t\\t}\\n\\n\\t\\tif (attachment?.title) {\\n\\t\\t\\treturn <>{attachment.title}</>;\\n\\t\\t}\\n\\t}\\n\\n\\treturn null;\\n}\\n\",null],\"names\":[\"_objectDestructuringEmpty\",\"_extends\",\"Markup\",\"parse\",\"React\",\"filterMarkdown\",\"GazzodownText\",\"normalizeThreadMessage\",\"_ref\",\"message\",\"msg\",\"mentions\",\"tokens\",\"emoticons\",\"undefined\",\"createElement\",\"attachments\",\"attachment\",\"find\",\"title\",\"description\",\"Fragment\",\"module\",\"link\",\"default\",\"v\",\"export\"],\"mappings\":\"2BACAA,EAAgDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAQ1C,SAAUC,EAAsBC,CAAA,EAA6E,IAAvEC,EAAOR,EAAA,CAAA,EAAAD,CAAAA,EAAAQ,GAAAA,CAAAA,GAClD,GAAIC,EAAQC,GAAG,CAAE,CAChBD,EAAQC,GAAG,CAAGL,EAAeI,EAAQC,GAAG,EACxC,OAAOD,EAAQE,QAAQ,CAEvB,IAAMC,EAASH,EAAQC,GAAG,CAAGP,EAAMM,EAAQC,GAAG,CAAE,CAAEG,UAAW,CAAA,CAAI,GAAMC,KAAAA,SAEvE,AAAKF,EAKJR,EAAAW,aAAA,CAACT,EAAa,KACbF,EAAAW,aAAA,CAACb,EAAM,CAACU,OAAQA,CAAO,IALjB,IAQT,CAEA,GAAIH,EAAQO,WAAW,CAAE,CACxB,IAAMC,EAAaR,EAAQO,WAAW,CAACE,IAAI,CAAED,GAAeA,EAAWE,KAAK,EAAIF,EAAWG,WAAW,EAEtG,GAAIH,MAAAA,GAAAA,EAAYG,WAAW,CAC1B,OAAOhB,EAAAW,aAAA,CAAAX,EAAAiB,QAAA,CAAA,KAAGJ,EAAWG,WAAY,EAGlC,GAAIH,MAAAA,GAAAA,EAAYE,KAAK,CACpB,OAAOf,EAAAW,aAAA,CAAAX,EAAAiB,QAAA,CAAA,KAAGJ,EAAWE,KAAM,CAE7B,CAEA,OAAO,IACR,CAvCuBG,EAAAC,IAAA,CAAA,kDAAyB,CAAAC,QAAAC,CAAA,EAAAzB,EAAAyB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,iCAAA,CAAAC,QAAAC,CAAA,EAAAxB,EAAAwB,CAAA,CAAA,EAAA,GAAhDH,EAAOI,MAAE,CAAA,CAAMnB,uBAAQA,IAAAA,CAAyB,GAAAe,EAAAC,IAAA,CAAA,yBAAA,CAAArB,OAAAuB,CAAA,EAAAvB,EAAAuB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,8BAAA,CAAApB,MAAAsB,CAAA,EAAAtB,EAAAsB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAC,QAAAC,CAAA,EAAArB,EAAAqB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,kCAAA,CAAAlB,eAAAoB,CAAA,EAAApB,EAAAoB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,8BAAA,CAAAC,QAAAC,CAAA,EAAAnB,EAAAmB,CAAA,CAAA,EAAA\"}"}