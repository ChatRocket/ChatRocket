{"code":"function module(e,s,a){let l,t,i,r,n,o,u,d,c,g,h,m,k,f,M,b,y,p,S,L,T,v,E,N;let _=[\"innerRef\",\"bubbleRef\",\"listStyle\"];a.link(\"@babel/runtime/helpers/extends\",{default(e){l=e}},0),a.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default(e){t=e}},1),a.link(\"@rocket.chat/fuselage\",{Box(e){i=e}},0),a.link(\"@rocket.chat/fuselage-hooks\",{useMergedRefs(e){r=e}},1),a.link(\"@rocket.chat/ui-contexts\",{useSetting(e){n=e},useUserPreference(e){o=e}},2),a.link(\"date-fns\",{differenceInSeconds(e){u=e}},3),a.link(\"react\",{default(e){d=e},Fragment(e){c=e}},4),a.link(\"react-i18next\",{useTranslation(e){g=e}},5),a.link(\"../../../../../../app/ui-utils/client\",{MessageTypes(e){h=e}},6),a.link(\"../../../../../../lib/isTruthy\",{isTruthy(e){m=e}},7),a.link(\"../../../../../components/CustomScrollbars\",{CustomScrollbars(e){k=e}},8),a.link(\"../../../BubbleDate\",{BubbleDate(e){f=e}},9),a.link(\"../../../MessageList/lib/isMessageNewDay\",{isMessageNewDay(e){M=e}},10),a.link(\"../../../MessageList/providers/MessageListProvider\",{default(e){b=e}},11),a.link(\"../../../body/LoadingMessagesIndicator\",{default(e){y=e}},12),a.link(\"../../../hooks/useDateScroll\",{useDateScroll(e){p=e}},13),a.link(\"../../../hooks/useFirstUnreadMessageId\",{useFirstUnreadMessageId(e){S=e}},14),a.link(\"../../../hooks/useMessageListNavigation\",{useMessageListNavigation(e){L=e}},15),a.link(\"../hooks/useLegacyThreadMessageJump\",{useLegacyThreadMessageJump(e){T=e}},16),a.link(\"../hooks/useLegacyThreadMessageListScrolling\",{useLegacyThreadMessageListScrolling(e){v=e}},17),a.link(\"../hooks/useLegacyThreadMessages\",{useLegacyThreadMessages(e){E=e}},18),a.link(\"./ThreadMessageItem\",{ThreadMessageItem(e){N=e}},19);let D=(e,s,a)=>!(!s||h.isSystemMessage(e)||h.isSystemMessage(s))&&!1!==e.groupable&&e.u._id===s.u._id&&e.alias===s.alias&&u(e.ts,s.ts)<a&&!M(e,s);a.exportDefault(e=>{let{mainMessage:s}=e,{t:a}=g(),u=p(),{innerRef:R,bubbleRef:w,listStyle:I}=u,U=t(u,_),{messages:x,loading:B}=E(s._id),{listWrapperRef:P,listRef:j,onScroll:A}=v(s),{parentRef:F}=T({enabled:!B}),q=o(\"hideUsernames\"),C=!!o(\"displayAvatars\"),J=S(),W=Number(n(\"Message_GroupingPeriod\")),{messageListRef:X}=L(),G=r(j,X),z=r(R,P,F);return d.createElement(\"div\",{className:[\"thread-list js-scroll-thread\",q&&\"hide-usernames\"].filter(m).join(\" \")},d.createElement(f,l({ref:w},U)),d.createElement(k,{ref:z,onScroll:e=>{A(e)},style:{scrollBehavior:\"smooth\",overflowX:\"hidden\"}},d.createElement(i,{is:\"ul\",className:[I,\"thread\"],ref:G,\"aria-label\":a(\"Thread_message_list\"),style:{scrollBehavior:\"smooth\",overflowX:\"hidden\"}},B?d.createElement(\"li\",{className:\"load-more\"},d.createElement(y,null)):d.createElement(b,{messageListRef:F},[s,...x].map((e,s,a)=>{let{[s-1]:l}=a,t=D(e,l,W),i=M(e,l),r=J===e._id,n=h.isSystemMessage(e);return d.createElement(c,{key:e._id},d.createElement(N,{message:e,previous:l,sequential:t,shouldShowAsSequential:t&&!i,showUserAvatar:C,firstUnread:r,system:n}))})))))})}","map":"{\"version\":3,\"sources\":[\"client/views/room/contextualBar/Threads/components/ThreadMessageList.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage, IThreadMainMessage } from '@rocket.chat/core-typings';\\nimport { Box } from '@rocket.chat/fuselage';\\nimport { useMergedRefs } from '@rocket.chat/fuselage-hooks';\\nimport { useSetting, useUserPreference } from '@rocket.chat/ui-contexts';\\nimport { differenceInSeconds } from 'date-fns';\\nimport type { ReactElement } from 'react';\\nimport React, { Fragment } from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport { MessageTypes } from '../../../../../../app/ui-utils/client';\\nimport { isTruthy } from '../../../../../../lib/isTruthy';\\nimport { CustomScrollbars } from '../../../../../components/CustomScrollbars';\\nimport { BubbleDate } from '../../../BubbleDate';\\nimport { isMessageNewDay } from '../../../MessageList/lib/isMessageNewDay';\\nimport MessageListProvider from '../../../MessageList/providers/MessageListProvider';\\nimport LoadingMessagesIndicator from '../../../body/LoadingMessagesIndicator';\\nimport { useDateScroll } from '../../../hooks/useDateScroll';\\nimport { useFirstUnreadMessageId } from '../../../hooks/useFirstUnreadMessageId';\\nimport { useMessageListNavigation } from '../../../hooks/useMessageListNavigation';\\nimport { useLegacyThreadMessageJump } from '../hooks/useLegacyThreadMessageJump';\\nimport { useLegacyThreadMessageListScrolling } from '../hooks/useLegacyThreadMessageListScrolling';\\nimport { useLegacyThreadMessages } from '../hooks/useLegacyThreadMessages';\\nimport { ThreadMessageItem } from './ThreadMessageItem';\\n\\nconst isMessageSequential = (current: IMessage, previous: IMessage | undefined, groupingRange: number): boolean => {\\n\\tif (!previous) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tif (MessageTypes.isSystemMessage(current) || MessageTypes.isSystemMessage(previous)) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tif (current.groupable === false) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tif (current.u._id !== previous.u._id) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tif (current.alias !== previous.alias) {\\n\\t\\treturn false;\\n\\t}\\n\\treturn differenceInSeconds(current.ts, previous.ts) < groupingRange && !isMessageNewDay(current, previous);\\n};\\n\\ntype ThreadMessageListProps = {\\n\\tmainMessage: IThreadMainMessage;\\n};\\n\\nconst ThreadMessageList = ({ mainMessage }: ThreadMessageListProps): ReactElement => {\\n\\tconst { t } = useTranslation();\\n\\tconst { innerRef, bubbleRef, listStyle, ...bubbleDate } = useDateScroll();\\n\\n\\tconst { messages, loading } = useLegacyThreadMessages(mainMessage._id);\\n\\tconst {\\n\\t\\tlistWrapperRef: listWrapperScrollRef,\\n\\t\\tlistRef: listScrollRef,\\n\\t\\tonScroll: handleScroll,\\n\\t} = useLegacyThreadMessageListScrolling(mainMessage);\\n\\tconst { parentRef: listJumpRef } = useLegacyThreadMessageJump({ enabled: !loading });\\n\\n\\tconst hideUsernames = useUserPreference<boolean>('hideUsernames');\\n\\tconst showUserAvatar = !!useUserPreference<boolean>('displayAvatars');\\n\\tconst firstUnreadMessageId = useFirstUnreadMessageId();\\n\\tconst messageGroupingPeriod = Number(useSetting('Message_GroupingPeriod'));\\n\\n\\tconst { messageListRef } = useMessageListNavigation();\\n\\tconst listRef = useMergedRefs<HTMLElement | null>(listScrollRef, messageListRef);\\n\\n\\tconst scrollRef = useMergedRefs<HTMLElement | null>(innerRef, listWrapperScrollRef, listJumpRef);\\n\\n\\treturn (\\n\\t\\t<div className={['thread-list js-scroll-thread', hideUsernames && 'hide-usernames'].filter(isTruthy).join(' ')}>\\n\\t\\t\\t<BubbleDate ref={bubbleRef} {...bubbleDate} />\\n\\t\\t\\t<CustomScrollbars\\n\\t\\t\\t\\tref={scrollRef}\\n\\t\\t\\t\\tonScroll={(args) => {\\n\\t\\t\\t\\t\\thandleScroll(args);\\n\\t\\t\\t\\t}}\\n\\t\\t\\t\\tstyle={{ scrollBehavior: 'smooth', overflowX: 'hidden' }}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<Box\\n\\t\\t\\t\\t\\tis='ul'\\n\\t\\t\\t\\t\\tclassName={[listStyle, 'thread']}\\n\\t\\t\\t\\t\\tref={listRef}\\n\\t\\t\\t\\t\\taria-label={t('Thread_message_list')}\\n\\t\\t\\t\\t\\tstyle={{ scrollBehavior: 'smooth', overflowX: 'hidden' }}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t{loading ? (\\n\\t\\t\\t\\t\\t\\t<li className='load-more'>\\n\\t\\t\\t\\t\\t\\t\\t<LoadingMessagesIndicator />\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t) : (\\n\\t\\t\\t\\t\\t\\t<MessageListProvider messageListRef={listJumpRef}>\\n\\t\\t\\t\\t\\t\\t\\t{[mainMessage, ...messages].map((message, index, { [index - 1]: previous }) => {\\n\\t\\t\\t\\t\\t\\t\\t\\tconst sequential = isMessageSequential(message, previous, messageGroupingPeriod);\\n\\t\\t\\t\\t\\t\\t\\t\\tconst newDay = isMessageNewDay(message, previous);\\n\\t\\t\\t\\t\\t\\t\\t\\tconst shouldShowAsSequential = sequential && !newDay;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tconst firstUnread = firstUnreadMessageId === message._id;\\n\\t\\t\\t\\t\\t\\t\\t\\tconst system = MessageTypes.isSystemMessage(message);\\n\\n\\t\\t\\t\\t\\t\\t\\t\\treturn (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Fragment key={message._id}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ThreadMessageItem\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmessage={message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tprevious={previous}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsequential={sequential}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tshouldShowAsSequential={shouldShowAsSequential}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tshowUserAvatar={showUserAvatar}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfirstUnread={firstUnread}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsystem={system}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Fragment>\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t})}\\n\\t\\t\\t\\t\\t\\t</MessageListProvider>\\n\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t</Box>\\n\\t\\t\\t</CustomScrollbars>\\n\\t\\t</div>\\n\\t);\\n};\\n\\nexport default ThreadMessageList;\\n\",null],\"names\":[\"_extends\",\"_objectWithoutProperties\",\"Box\",\"useMergedRefs\",\"useSetting\",\"useUserPreference\",\"differenceInSeconds\",\"React\",\"Fragment\",\"useTranslation\",\"MessageTypes\",\"isTruthy\",\"CustomScrollbars\",\"BubbleDate\",\"isMessageNewDay\",\"MessageListProvider\",\"LoadingMessagesIndicator\",\"useDateScroll\",\"useFirstUnreadMessageId\",\"useMessageListNavigation\",\"useLegacyThreadMessageJump\",\"useLegacyThreadMessageListScrolling\",\"useLegacyThreadMessages\",\"ThreadMessageItem\",\"module\",\"link\",\"default\",\"v\",\"isMessageSequential\",\"current\",\"previous\",\"groupingRange\",\"isSystemMessage\",\"groupable\",\"u\",\"_id\",\"alias\",\"ts\",\"exportDefault\",\"_ref\",\"mainMessage\",\"t\",\"_useDateScroll\",\"innerRef\",\"bubbleRef\",\"listStyle\",\"bubbleDate\",\"_excluded\",\"messages\",\"loading\",\"listWrapperRef\",\"listWrapperScrollRef\",\"listRef\",\"listScrollRef\",\"onScroll\",\"handleScroll\",\"parentRef\",\"listJumpRef\",\"enabled\",\"hideUsernames\",\"showUserAvatar\",\"firstUnreadMessageId\",\"messageGroupingPeriod\",\"Number\",\"messageListRef\",\"scrollRef\",\"createElement\",\"className\",\"filter\",\"join\",\"ref\",\"args\",\"style\",\"scrollBehavior\",\"overflowX\",\"is\",\"map\",\"message\",\"index\",\"_ref2\",\"sequential\",\"newDay\",\"firstUnread\",\"system\",\"key\",\"shouldShowAsSequential\"],\"mappings\":\"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\"}"}