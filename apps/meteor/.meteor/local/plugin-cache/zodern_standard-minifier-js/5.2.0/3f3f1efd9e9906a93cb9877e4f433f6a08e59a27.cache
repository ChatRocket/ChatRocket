{"code":"function module(e,t,n){let a,l,r,c,o,s,i,u,m,d,k,p,h,E,y,f,g,_,b,S,C;let x=[\"_id\",\"i18nLabel\",\"onClickBack\"];n.link(\"@babel/runtime/helpers/extends\",{default(e){a=e}},0),n.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default(e){l=e}},1),n.link(\"@rocket.chat/fuselage\",{Button(e){r=e},Box(e){c=e},TextInput(e){o=e},Field(e){s=e},FieldLabel(e){i=e},FieldRow(e){u=e}},0),n.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){m=e}},1),n.link(\"@rocket.chat/ui-contexts\",{useSetModal(e){d=e},useToastMessageDispatch(e){k=e},useSetting(e){p=e},useEndpoint(e){h=e}},2),n.link(\"react\",{default(e){E=e},memo(e){y=e},useMemo(e){f=e}},3),n.link(\"react-i18next\",{useTranslation(e){g=e}},4),n.link(\"../../../../components/GenericModal\",{default(e){_=e}},5),n.link(\"../../../../hooks/useExternalLink\",{useExternalLink(e){b=e}},6),n.link(\"../../EditableSettingsContext\",{useEditableSettings(e){S=e}},7),n.link(\"./BaseGroupPage\",{default(e){C=e}},8),n.exportDefault(y(function(e){let{_id:t,i18nLabel:n,onClickBack:y}=e,T=l(e,x),{t:D}=g(),L=k(),P=h(\"POST\",\"/v1/ldap.testConnection\"),w=h(\"POST\",\"/v1/ldap.syncNow\"),v=h(\"POST\",\"/v1/ldap.testSearch\"),A=p(\"LDAP_Enable\"),B=d(),F=m(()=>B()),M=b(),N=S(f(()=>({group:t}),[t])),O=f(()=>N.some(e=>{let{changed:t}=e;return t}),[N]),G=async()=>{try{let{message:e}=await P();L({type:\"success\",message:D(e)})}catch(e){e instanceof Error&&L({type:\"error\",message:e})}},j=async()=>{try{await P();let e=async()=>{F();try{let{message:e}=await w();L({type:\"success\",message:D(e)})}catch(e){e instanceof Error&&L({type:\"error\",message:e})}};B(E.createElement(_,{variant:\"info\",confirmText:D(\"Sync\"),cancelText:D(\"Cancel\"),title:D(\"Execute_Synchronization_Now\"),onConfirm:e,onClose:F},D(\"LDAP_Sync_Now_Description\")))}catch(e){e instanceof Error&&L({type:\"error\",message:e})}},z=async()=>{try{await P();let e=\"\",t=async()=>{try{let{message:t}=await v({username:e});L({type:\"success\",message:D(t)})}catch(e){e instanceof Error&&L({type:\"error\",message:e})}};B(E.createElement(_,{wrapperFunction:e=>E.createElement(c,a({is:\"form\",onSubmit:e=>{e.preventDefault(),t()}},e)),variant:\"info\",confirmText:D(\"Search\"),cancelText:D(\"Cancel\"),title:D(\"Test_LDAP_Search\"),onClose:F},E.createElement(s,null,E.createElement(c,{display:\"flex\"},E.createElement(i,null,D(\"LDAP_Username_To_Search\"))),E.createElement(u,null,E.createElement(o,{onChange:t=>{e=t.currentTarget.value}})))))}catch(e){e instanceof Error&&L({type:\"error\",message:e})}};return E.createElement(C,a({_id:t,i18nLabel:n,onClickBack:y},T,{headerButtons:E.createElement(E.Fragment,null,E.createElement(r,{children:D(\"Test_Connection\"),disabled:!A||O,onClick:G}),E.createElement(r,{children:D(\"Test_LDAP_Search\"),disabled:!A||O,onClick:z}),E.createElement(r,{children:D(\"LDAP_Sync_Now\"),disabled:!A||O,onClick:j}),E.createElement(r,{role:\"link\",onClick:()=>M(\"https://go.rocket.chat/i/ldap-docs\")},D(\"LDAP_Documentation\")))}))}))}","map":"{\"version\":3,\"sources\":[\"client/views/admin/settings/groups/LDAPGroupPage.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { ISetting } from '@rocket.chat/core-typings';\\nimport { Button, Box, TextInput, Field, FieldLabel, FieldRow } from '@rocket.chat/fuselage';\\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport { useSetModal, useToastMessageDispatch, useSetting, useEndpoint } from '@rocket.chat/ui-contexts';\\nimport type { FormEvent } from 'react';\\nimport React, { memo, useMemo } from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport GenericModal from '../../../../components/GenericModal';\\nimport { useExternalLink } from '../../../../hooks/useExternalLink';\\nimport { useEditableSettings } from '../../EditableSettingsContext';\\nimport BaseGroupPage from './BaseGroupPage';\\n\\ntype LDAPGroupPageProps = ISetting & {\\n\\tonClickBack?: () => void;\\n};\\n\\nfunction LDAPGroupPage({ _id, i18nLabel, onClickBack, ...group }: LDAPGroupPageProps) {\\n\\tconst { t } = useTranslation();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst testConnection = useEndpoint('POST', '/v1/ldap.testConnection');\\n\\tconst syncNow = useEndpoint('POST', '/v1/ldap.syncNow');\\n\\tconst testSearch = useEndpoint('POST', '/v1/ldap.testSearch');\\n\\tconst ldapEnabled = useSetting('LDAP_Enable');\\n\\tconst setModal = useSetModal();\\n\\tconst closeModal = useMutableCallback(() => setModal());\\n\\n\\tconst handleLinkClick = useExternalLink();\\n\\n\\tconst editableSettings = useEditableSettings(\\n\\t\\tuseMemo(\\n\\t\\t\\t() => ({\\n\\t\\t\\t\\tgroup: _id,\\n\\t\\t\\t}),\\n\\t\\t\\t[_id],\\n\\t\\t),\\n\\t);\\n\\n\\tconst changed = useMemo(() => editableSettings.some(({ changed }) => changed), [editableSettings]);\\n\\n\\tconst handleTestConnectionButtonClick = async (): Promise<void> => {\\n\\t\\ttry {\\n\\t\\t\\tconst { message } = await testConnection();\\n\\t\\t\\tdispatchToastMessage({ type: 'success', message: t(message as Parameters<typeof t>[0]) });\\n\\t\\t} catch (error) {\\n\\t\\t\\terror instanceof Error && dispatchToastMessage({ type: 'error', message: error });\\n\\t\\t}\\n\\t};\\n\\n\\tconst handleSyncNowButtonClick = async (): Promise<void> => {\\n\\t\\ttry {\\n\\t\\t\\tawait testConnection();\\n\\t\\t\\tconst confirmSync = async (): Promise<void> => {\\n\\t\\t\\t\\tcloseModal();\\n\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tconst { message } = await syncNow();\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t(message as Parameters<typeof t>[0]) });\\n\\t\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\t\\terror instanceof Error && dispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\t\\tsetModal(\\n\\t\\t\\t\\t<GenericModal\\n\\t\\t\\t\\t\\tvariant='info'\\n\\t\\t\\t\\t\\tconfirmText={t('Sync')}\\n\\t\\t\\t\\t\\tcancelText={t('Cancel')}\\n\\t\\t\\t\\t\\ttitle={t('Execute_Synchronization_Now')}\\n\\t\\t\\t\\t\\tonConfirm={confirmSync}\\n\\t\\t\\t\\t\\tonClose={closeModal}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t{t('LDAP_Sync_Now_Description')}\\n\\t\\t\\t\\t</GenericModal>,\\n\\t\\t\\t);\\n\\t\\t} catch (error) {\\n\\t\\t\\terror instanceof Error && dispatchToastMessage({ type: 'error', message: error });\\n\\t\\t}\\n\\t};\\n\\n\\tconst handleSearchTestButtonClick = async (): Promise<void> => {\\n\\t\\ttry {\\n\\t\\t\\tawait testConnection();\\n\\t\\t\\tlet username = '';\\n\\t\\t\\tconst handleChangeUsername = (event: FormEvent<HTMLInputElement>): void => {\\n\\t\\t\\t\\tusername = event.currentTarget.value;\\n\\t\\t\\t};\\n\\n\\t\\t\\tconst confirmSearch = async (): Promise<void> => {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tconst { message } = await testSearch({ username });\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t(message as Parameters<typeof t>[0]) });\\n\\t\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\t\\terror instanceof Error && dispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\t\\tsetModal(\\n\\t\\t\\t\\t<GenericModal\\n\\t\\t\\t\\t\\twrapperFunction={(props) => (\\n\\t\\t\\t\\t\\t\\t<Box\\n\\t\\t\\t\\t\\t\\t\\tis='form'\\n\\t\\t\\t\\t\\t\\t\\tonSubmit={(e: FormEvent) => {\\n\\t\\t\\t\\t\\t\\t\\t\\te.preventDefault();\\n\\t\\t\\t\\t\\t\\t\\t\\tconfirmSearch();\\n\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\t{...props}\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\tvariant='info'\\n\\t\\t\\t\\t\\tconfirmText={t('Search')}\\n\\t\\t\\t\\t\\tcancelText={t('Cancel')}\\n\\t\\t\\t\\t\\ttitle={t('Test_LDAP_Search')}\\n\\t\\t\\t\\t\\tonClose={closeModal}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t<Box display='flex'>\\n\\t\\t\\t\\t\\t\\t\\t<FieldLabel>{t('LDAP_Username_To_Search')}</FieldLabel>\\n\\t\\t\\t\\t\\t\\t</Box>\\n\\n\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t<TextInput onChange={handleChangeUsername} />\\n\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t</GenericModal>,\\n\\t\\t\\t);\\n\\t\\t} catch (error) {\\n\\t\\t\\terror instanceof Error && dispatchToastMessage({ type: 'error', message: error });\\n\\t\\t}\\n\\t};\\n\\n\\treturn (\\n\\t\\t<BaseGroupPage\\n\\t\\t\\t_id={_id}\\n\\t\\t\\ti18nLabel={i18nLabel}\\n\\t\\t\\tonClickBack={onClickBack}\\n\\t\\t\\t{...group}\\n\\t\\t\\theaderButtons={\\n\\t\\t\\t\\t<>\\n\\t\\t\\t\\t\\t<Button children={t('Test_Connection')} disabled={!ldapEnabled || changed} onClick={handleTestConnectionButtonClick} />\\n\\t\\t\\t\\t\\t<Button children={t('Test_LDAP_Search')} disabled={!ldapEnabled || changed} onClick={handleSearchTestButtonClick} />\\n\\t\\t\\t\\t\\t<Button children={t('LDAP_Sync_Now')} disabled={!ldapEnabled || changed} onClick={handleSyncNowButtonClick} />\\n\\t\\t\\t\\t\\t<Button role='link' onClick={() => handleLinkClick('https://go.rocket.chat/i/ldap-docs')}>\\n\\t\\t\\t\\t\\t\\t{t('LDAP_Documentation')}\\n\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t</>\\n\\t\\t\\t}\\n\\t\\t/>\\n\\t);\\n}\\n\\nexport default memo(LDAPGroupPage);\\n\",null],\"names\":[\"_extends\",\"_objectWithoutProperties\",\"Button\",\"Box\",\"TextInput\",\"Field\",\"FieldLabel\",\"FieldRow\",\"useMutableCallback\",\"useSetModal\",\"useToastMessageDispatch\",\"useSetting\",\"useEndpoint\",\"React\",\"memo\",\"useMemo\",\"useTranslation\",\"GenericModal\",\"useExternalLink\",\"useEditableSettings\",\"BaseGroupPage\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"_id\",\"i18nLabel\",\"onClickBack\",\"group\",\"_excluded\",\"t\",\"dispatchToastMessage\",\"testConnection\",\"syncNow\",\"testSearch\",\"ldapEnabled\",\"setModal\",\"closeModal\",\"handleLinkClick\",\"editableSettings\",\"changed\",\"some\",\"_ref2\",\"handleTestConnectionButtonClick\",\"message\",\"type\",\"error\",\"Error\",\"handleSyncNowButtonClick\",\"confirmSync\",\"createElement\",\"variant\",\"confirmText\",\"cancelText\",\"title\",\"onConfirm\",\"onClose\",\"handleSearchTestButtonClick\",\"username\",\"confirmSearch\",\"wrapperFunction\",\"props\",\"is\",\"onSubmit\",\"e\",\"preventDefault\",\"display\",\"onChange\",\"event\",\"currentTarget\",\"value\",\"headerButtons\",\"Fragment\",\"children\",\"disabled\",\"onClick\",\"role\"],\"mappings\":\"2BACAA,EAAoEC,EAApEC,EAASC,EAAMC,EAAOC,EAASC,EAASC,EAAoDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,0CAAnFC,EAAWC,IAAE,CAAA,iCAA8B,CAAAC,QAAUC,CAAM,EAAAxB,EAAAwB,CAAA,CAAA,EAAA,GAAwBH,EAAAC,IAAA,CAAA,iDAAA,CAAAC,QAAAC,CAAA,EAAAvB,EAAAuB,CAAA,CAAA,EAAA,GAA1CH,EAAEC,IAAU,CAAA,wBAAM,CAAApB,OAAwBsB,CAAA,EAAAtB,EAAAsB,CAAA,EAAArB,IAAAqB,CAAA,EAAArB,EAAAqB,CAAA,EAAApB,UAAAoB,CAAA,EAAApB,EAAAoB,CAAA,EAAAnB,MAAAmB,CAAA,EAAAnB,EAAAmB,CAAA,EAAAlB,WAAAkB,CAAA,EAAAlB,EAAAkB,CAAA,EAAAjB,SAAAiB,CAAA,EAAAjB,EAAAiB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,8BAAA,CAAAd,mBAAAgB,CAAA,EAAAhB,EAAAgB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2BAAA,CAAAb,YAAAe,CAAA,EAAAf,EAAAe,CAAA,EAAAd,wBAAAc,CAAA,EAAAd,EAAAc,CAAA,EAAAb,WAAAa,CAAA,EAAAb,EAAAa,CAAA,EAAAZ,YAAAY,CAAA,EAAAZ,EAAAY,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAC,QAAAC,CAAA,EAAAX,EAAAW,CAAA,EAAAV,KAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,QAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,gBAAA,CAAAN,eAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,sCAAA,CAAAC,QAAAC,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,oCAAA,CAAAJ,gBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,gCAAA,CAAAH,oBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,kBAAA,CAAAC,QAAAC,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAA5FH,EAAOI,aAAa,CAsJLX,EAtIf,SAAsBY,CAAA,EAA8D,GAA7D,CAAEC,IAAAA,CAAG,CAAEC,UAAAA,CAAS,CAAEC,YAAAA,CAAAA,CAA2C,CAAAH,EAA3BI,EAAK7B,EAAAyB,EAAAK,GACvD,CAAEC,EAAAA,CAAAA,CAAG,CAAGhB,IACRiB,EAAuBvB,IACvBwB,EAAiBtB,EAAY,OAAQ,2BACrCuB,EAAUvB,EAAY,OAAQ,oBAC9BwB,EAAaxB,EAAY,OAAQ,uBACjCyB,EAAc1B,EAAW,eACzB2B,EAAW7B,IACX8B,EAAa/B,EAAmB,IAAM8B,KAEtCE,EAAkBtB,IAElBuB,EAAmBtB,EACxBJ,EACC,IAAO,CAAA,CACNe,MAAOH,IAER,CAACA,EAAI,GAIDe,EAAU3B,EAAQ,IAAM0B,EAAiBE,IAAI,CAACC,IAAA,GAAC,CAAEF,QAAAA,CAAAA,CAAS,CAAAE,EAAA,OAAKF,CAAO,GAAG,CAACD,EAAiB,EAE3FI,EAAkC,UACvC,GAAI,CACH,GAAM,CAAEC,QAAAA,CAAAA,CAAS,CAAG,MAAMZ,IAC1BD,EAAqB,CAAEc,KAAM,UAAWD,QAASd,EAAEc,EAAmC,EACvF,CAAE,MAAOE,EAAO,CACfA,aAAiBC,OAAShB,EAAqB,CAAEc,KAAM,QAASD,QAASE,CAAK,EAC/E,CACD,EAEME,EAA2B,UAChC,GAAI,CACH,MAAMhB,IACN,IAAMiB,EAAc,UACnBZ,IAEA,GAAI,CACH,GAAM,CAAEO,QAAAA,CAAAA,CAAS,CAAG,MAAMX,IAC1BF,EAAqB,CAAEc,KAAM,UAAWD,QAASd,EAAEc,EAAmC,EACvF,CAAE,MAAOE,EAAO,CACfA,aAAiBC,OAAShB,EAAqB,CAAEc,KAAM,QAASD,QAASE,CAAK,EAC/E,CACD,EAEAV,EACCzB,EAAAuC,aAAA,CAACnC,EAAY,CACZoC,QAAQ,OACRC,YAAatB,EAAE,QACfuB,WAAYvB,EAAE,UACdwB,MAAOxB,EAAE,+BACTyB,UAAWN,EACXO,QAASnB,CAAW,EAEnBP,EAAE,8BAGN,CAAE,MAAOgB,EAAO,CACfA,aAAiBC,OAAShB,EAAqB,CAAEc,KAAM,QAASD,QAASE,CAAK,EAC/E,CACD,EAEMW,EAA8B,UACnC,GAAI,CACH,MAAMzB,IACN,IAAI0B,EAAW,GAKTC,EAAgB,UACrB,GAAI,CACH,GAAM,CAAEf,QAAAA,CAAAA,CAAS,CAAG,MAAMV,EAAW,CAAEwB,SAAAA,CAAQ,GAC/C3B,EAAqB,CAAEc,KAAM,UAAWD,QAASd,EAAEc,EAAmC,EACvF,CAAE,MAAOE,EAAO,CACfA,aAAiBC,OAAShB,EAAqB,CAAEc,KAAM,QAASD,QAASE,CAAK,EAC/E,CACD,EAEAV,EACCzB,EAAAuC,aAAA,CAACnC,EAAY,CACZ6C,gBAAkBC,GACjBlD,EAAAuC,aAAA,CAACjD,EAAGH,EAAA,CACHgE,GAAG,OACHC,SAAWC,IACVA,EAAEC,cAAc,GAChBN,GACD,CAAE,EACEE,IAGNV,QAAQ,OACRC,YAAatB,EAAE,UACfuB,WAAYvB,EAAE,UACdwB,MAAOxB,EAAE,oBACT0B,QAASnB,CAAW,EAEpB1B,EAAAuC,aAAA,CAAC/C,EAAK,KACLQ,EAAAuC,aAAA,CAACjD,EAAG,CAACiE,QAAQ,MAAM,EAClBvD,EAAAuC,aAAA,CAAC9C,EAAU,KAAE0B,EAAE,6BAGhBnB,EAAAuC,aAAA,CAAC7C,EAAQ,KACRM,EAAAuC,aAAA,CAAChD,EAAS,CAACiE,SArCeC,IAC7BV,EAAWU,EAAMC,aAAa,CAACC,KAAK,AACrC,CAmC8C,MAK/C,CAAE,MAAOxB,EAAO,CACfA,aAAiBC,OAAShB,EAAqB,CAAEc,KAAM,QAASD,QAASE,CAAK,EAC/E,CACD,EAEA,OACCnC,EAAAuC,aAAA,CAAChC,EAAapB,EAAA,CACb2B,IAAKA,EACLC,UAAWA,EACXC,YAAaA,CAAY,EACrBC,EAAK,CACT2C,cACC5D,EAAAuC,aAAA,CAAAvC,EAAA6D,QAAA,CAAA,KACC7D,EAAAuC,aAAA,CAAClD,EAAM,CAACyE,SAAU3C,EAAE,mBAAoB4C,SAAU,CAACvC,GAAeK,EAASmC,QAAShC,CAAgC,GACpHhC,EAAAuC,aAAA,CAAClD,EAAM,CAACyE,SAAU3C,EAAE,oBAAqB4C,SAAU,CAACvC,GAAeK,EAASmC,QAASlB,CAA4B,GACjH9C,EAAAuC,aAAA,CAAClD,EAAM,CAACyE,SAAU3C,EAAE,iBAAkB4C,SAAU,CAACvC,GAAeK,EAASmC,QAAS3B,CAAyB,GAC3GrC,EAAAuC,aAAA,CAAClD,EAAM,CAAC4E,KAAK,OAAOD,QAASA,IAAMrC,EAAgB,qCAAsC,EACvFR,EAAE,uBAGL,GAGJ\"}"}