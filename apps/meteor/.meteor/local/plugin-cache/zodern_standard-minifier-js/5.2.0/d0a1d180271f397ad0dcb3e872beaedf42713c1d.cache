{"code":"function module(t,e,n){n.export({useOembedLayout:function(){return o}}),n.link(\"@rocket.chat/ui-contexts\",{useLayout:function(t){u=t},useSetting:function(t){i=t}},0);var u,i,o=function(){return{enabled:i(\"API_Embed\",!1),maxWidth:u().isMobile?\"100%\":368,maxHeight:368}}}","map":"{\"version\":3,\"sources\":[\"client/components/message/hooks/useOembedLayout.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useLayout, useSetting } from '@rocket.chat/ui-contexts';\\n\\ntype OembedLayout = {\\n\\tenabled: boolean;\\n\\tmaxWidth: number | '100%';\\n\\tmaxHeight: number;\\n};\\n\\n/**\\n * Returns the layout parameters for oembeds\\n */\\nexport const useOembedLayout = (): OembedLayout => {\\n\\t/*\\n  Note: both `useSetting` and `useLayout` are hooks that don't force a re-render\\n  very often, so this hook is not going to be re-evaluated very often either;\\n  this is why we don't need to memoize the result or store it in a context\\n  */\\n\\tconst enabled = useSetting<boolean>('API_Embed', false);\\n\\tconst { isMobile } = useLayout();\\n\\n\\tconst maxWidth = isMobile ? ('100%' as const) : 368;\\n\\tconst maxHeight = 368;\\n\\n\\treturn { enabled, maxWidth, maxHeight };\\n};\\n\",null],\"names\":[\"module\",\"export\",\"useOembedLayout\",\"link\",\"useLayout\",\"v\",\"useSetting\",\"enabled\",\"maxWidth\",\"isMobile\",\"_useLayout\",\"maxHeight\"],\"mappings\":\"uBAAAA,EAAOC,MAAE,CAAA,CAAAC,gBAAqB,WAAQ,OAAAA,CAA0B,CAAC,GAAAF,EAAAG,IAAA,CAAA,2BAAA,CAAAC,UAAA,SAAAC,CAAA,EAAAD,EAAAC,CAAA,EAAAC,WAAA,SAAAD,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAW1D,IAX0DD,EAAAE,EAWpDJ,EAAkB,WAY9B,MAAO,CAAEK,QANOD,EAAoB,YAAa,CAAA,GAM/BE,SAHDC,AAFDC,AAAKN,IAAbK,QAAQ,CAEa,OAAmB,IAGpBE,UAFV,GAEmB,CACtC\"}"}