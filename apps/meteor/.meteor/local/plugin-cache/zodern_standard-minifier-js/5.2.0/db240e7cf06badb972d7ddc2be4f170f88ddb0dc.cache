{"code":"Package[\"core-runtime\"].queue(\"autoupdate\",function(){var e,t=Package.meteor.Meteor;Package.meteor.global,Package.meteor.meteorEnv,Package.tracker.Tracker,Package.tracker.Deps;var n=Package.retry.Retry;Package[\"ddp-client\"].DDP;var r=Package.modules.meteorInstall,o=Package.promise.Promise;return{export:function(){return{Autoupdate:e}},require:r({node_modules:{meteor:{autoupdate:{\"autoupdate_client.js\":function e(e,r,a){(function(e){let r;e.export({Autoupdate:()=>i}),e.link(\"./client_versions.js\",{ClientVersions(e){r=e}},0);let a=t.isCordova?\"web.cordova\":t.isModern?\"web.browser\":\"web.browser.legacy\",s=((__meteor_runtime_config__.autoupdate||{}).versions||{})[a]||{version:\"unknown\",versionRefreshable:\"unknown\",versionNonRefreshable:\"unknown\",assets:[]},i={},l=i._clientVersions=new r;t.connection.registerStoreClient(\"meteor_autoupdate_clientVersions\",l.createStore()),i.newClientAvailable=function(){return l.newClientAvailable(a,[\"versionRefreshable\",\"versionNonRefreshable\"],s)};let c=!1,u=new n({minCount:0,baseTimeout:3e4}),d=0;i._retrySubscription=()=>{t.subscribe(\"meteor_autoupdate_clientVersions\",{onError(e){t._debug(\"autoupdate subscription failed\",e),d++,u.retryLater(d,function(){i._retrySubscription()})},onReady(){let e=o.resolve(),n=l.watch(function(o){e.then(()=>(function(e){if(e._id===a){if(e.versionNonRefreshable!==s.versionNonRefreshable){n&&n(),Package.reload&&(console.warn(\"Client version changed from\",s.versionNonRefreshable,\"to\",e.versionNonRefreshable,\"Page will reload in \".concat(r,\" seconds\")),setTimeout(()=>{Package.reload.Reload._reload()},1e3*r));return}if(e.versionRefreshable!==s.versionRefreshable){s.versionRefreshable=e.versionRefreshable;var o=e.assets||[],i=[];Array.prototype.forEach.call(document.getElementsByTagName(\"link\"),function(e){\"__meteor-css__\"===e.className&&i.push(e)});let n=o.length;function l(){i.length>0&&--n<1&&i.splice(0).forEach(e=>{e.parentNode.removeChild(e)})}o.length>0?o.forEach(e=>{let n=document.createElement(\"link\");n.setAttribute(\"rel\",\"stylesheet\"),n.setAttribute(\"type\",\"text/css\"),n.setAttribute(\"class\",\"__meteor-css__\"),n.setAttribute(\"href\",e.url),function(e,n){var r;if(e.onload=function(){c=!0,r||(r=!0,n())},!c)var o=t.setInterval(function(){e.sheet&&(r||(r=!0,n()),t.clearInterval(o))},50)}(n,function(){t.setTimeout(l,200)});let r=document.getElementsByTagName(\"head\").item(0);r.appendChild(n)}):l()}}})(o))}),r=t.isProduction?60:0}})},i._retrySubscription()}).call(this,a)},\"client_versions.js\":function e(e,t,n){let r,a;n.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){r=e}},0),n.export({ClientVersions:()=>s}),n.link(\"meteor/tracker\",{Tracker(e){a=e}},0);class s{constructor(){this._versions=new Map,this._watchCallbacks=new Set}createStore(){return{update:e=>{let{id:t,msg:n,fields:r}=e;(\"added\"===n||\"changed\"===n)&&this.set(t,r)}}}hasVersions(){return this._versions.size>0}get(e){return this._versions.get(e)}set(e,t){let n=this._versions.get(e),o=!1;n?Object.assign(n,t):(n=r({_id:e},t),o=!0,this._versions.set(e,n)),this._watchCallbacks.forEach(e=>{let{fn:t,filter:r}=e;r&&r!==n._id||t(n,o)})}watch(e){let{skipInitial:t,filter:n}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!t){let t=o.resolve();this._versions.forEach(r=>{n&&n!==r._id||t.then(()=>e(r,!0))})}let r={fn:e,filter:n};return this._watchCallbacks.add(r),()=>this._watchCallbacks.delete(r)}newClientAvailable(e,t,n){function r(r){return r._id===e&&t.some(e=>r[e]!==n[e])}let o=new a.Dependency,s=this.get(e);o.depend();let i=this.watch(e=>{r(e)&&(o.changed(),i())},{skipInitial:!0});return!!s&&r(s)}}}}}}},{extensions:[\".js\",\".json\"]}),eagerModulePaths:[\"/node_modules/meteor/autoupdate/autoupdate_client.js\"],mainModulePath:\"/node_modules/meteor/autoupdate/autoupdate_client.js\"}});","map":"{\"version\":3,\"sources\":[\"packages/autoupdate/autoupdate_client.js\",\"packages/autoupdate/client_versions.js\",\"<anon>\"],\"sourcesContent\":[\"// Subscribe to the `meteor_autoupdate_clientVersions` collection,\\n// which contains the set of acceptable client versions.\\n//\\n// A \\\"hard code push\\\" occurs when the running client version is not in\\n// the set of acceptable client versions (or the server updates the\\n// collection, there is a published client version marked `current` and\\n// the running client version is no longer in the set).\\n//\\n// When the `reload` package is loaded, a hard code push causes\\n// the browser to reload, so that it will load the latest client\\n// version from the server.\\n//\\n// A \\\"soft code push\\\" represents the situation when the running client\\n// version is in the set of acceptable versions, but there is a newer\\n// version available on the server.\\n//\\n// `Autoupdate.newClientAvailable` is a reactive data source which\\n// becomes `true` if a new version of the client is available on\\n// the server.\\n//\\n// This package doesn't implement a soft code reload process itself,\\n// but `newClientAvailable` could be used for example to display a\\n// \\\"click to reload\\\" link to the user.\\n\\n// The client version of the client code currently running in the\\n// browser.\\n\\nimport { ClientVersions } from './client_versions.js';\\n\\nconst clientArch = Meteor.isCordova ? 'web.cordova' : Meteor.isModern ? 'web.browser' : 'web.browser.legacy';\\n\\nconst autoupdateVersions = ((__meteor_runtime_config__.autoupdate || {}).versions || {})[clientArch] || {\\n\\tversion: 'unknown',\\n\\tversionRefreshable: 'unknown',\\n\\tversionNonRefreshable: 'unknown',\\n\\tassets: [],\\n};\\n\\nexport const Autoupdate = {};\\n\\n// Stores acceptable client versions.\\nconst clientVersions = (Autoupdate._clientVersions = // Used by a self-test and hot-module-replacement\\n\\tnew ClientVersions());\\n\\nMeteor.connection.registerStoreClient('meteor_autoupdate_clientVersions', clientVersions.createStore());\\n\\nAutoupdate.newClientAvailable = function () {\\n\\treturn clientVersions.newClientAvailable(clientArch, ['versionRefreshable', 'versionNonRefreshable'], autoupdateVersions);\\n};\\n\\n// Set to true if the link.onload callback ever fires for any <link> node.\\nlet knownToSupportCssOnLoad = false;\\n\\nconst retry = new Retry({\\n\\t// Unlike the stream reconnect use of Retry, which we want to be instant\\n\\t// in normal operation, this is a wacky failure. We don't want to retry\\n\\t// right away, we can start slowly.\\n\\t//\\n\\t// A better way than timeconstants here might be to use the knowledge\\n\\t// of when we reconnect to help trigger these retries. Typically, the\\n\\t// server fixing code will result in a restart and reconnect, but\\n\\t// potentially the subscription could have a transient error.\\n\\tminCount: 0, // don't do any immediate retries\\n\\tbaseTimeout: 30 * 1000, // start with 30s\\n});\\n\\nlet failures = 0;\\n\\nAutoupdate._retrySubscription = () => {\\n\\tMeteor.subscribe('meteor_autoupdate_clientVersions', {\\n\\t\\tonError(error) {\\n\\t\\t\\tMeteor._debug('autoupdate subscription failed', error);\\n\\t\\t\\tfailures++;\\n\\t\\t\\tretry.retryLater(failures, function () {\\n\\t\\t\\t\\t// Just retry making the subscription, don't reload the whole\\n\\t\\t\\t\\t// page. While reloading would catch more cases (for example,\\n\\t\\t\\t\\t// the server went back a version and is now doing old-style hot\\n\\t\\t\\t\\t// code push), it would also be more prone to reload loops,\\n\\t\\t\\t\\t// which look really bad to the user. Just retrying the\\n\\t\\t\\t\\t// subscription over DDP means it is at least possible to fix by\\n\\t\\t\\t\\t// updating the server.\\n\\t\\t\\t\\tAutoupdate._retrySubscription();\\n\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\tonReady() {\\n\\t\\t\\t// Call checkNewVersionDocument with a slight delay, so that the\\n\\t\\t\\t// const handle declaration is guaranteed to be initialized, even if\\n\\t\\t\\t// the added or changed callbacks are called synchronously.\\n\\t\\t\\tconst resolved = Promise.resolve();\\n\\t\\t\\tfunction check(doc) {\\n\\t\\t\\t\\tresolved.then(() => checkNewVersionDocument(doc));\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst stop = clientVersions.watch(check);\\n\\n\\t\\t\\tconst reloadDelayInSeconds = Meteor.isProduction ? 60 : 0;\\n\\n\\t\\t\\tfunction checkNewVersionDocument(doc) {\\n\\t\\t\\t\\tif (doc._id !== clientArch) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (doc.versionNonRefreshable !== autoupdateVersions.versionNonRefreshable) {\\n\\t\\t\\t\\t\\t// Non-refreshable assets have changed, so we have to reload the\\n\\t\\t\\t\\t\\t// whole page rather than just replacing <link> tags.\\n\\t\\t\\t\\t\\tif (stop) stop();\\n\\t\\t\\t\\t\\tif (Package.reload) {\\n\\t\\t\\t\\t\\t\\t// The reload package should be provided by ddp-client, which\\n\\t\\t\\t\\t\\t\\t// is provided by the ddp package that autoupdate depends on.\\n\\n\\t\\t\\t\\t\\t\\t// Delay reload in 60 seconds\\n\\t\\t\\t\\t\\t\\tconsole.warn(\\n\\t\\t\\t\\t\\t\\t\\t'Client version changed from',\\n\\t\\t\\t\\t\\t\\t\\tautoupdateVersions.versionNonRefreshable,\\n\\t\\t\\t\\t\\t\\t\\t'to',\\n\\t\\t\\t\\t\\t\\t\\tdoc.versionNonRefreshable,\\n\\t\\t\\t\\t\\t\\t\\t`Page will reload in ${reloadDelayInSeconds} seconds`,\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tsetTimeout(() => {\\n\\t\\t\\t\\t\\t\\t\\tPackage.reload.Reload._reload();\\n\\t\\t\\t\\t\\t\\t}, reloadDelayInSeconds * 1000);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (doc.versionRefreshable !== autoupdateVersions.versionRefreshable) {\\n\\t\\t\\t\\t\\tautoupdateVersions.versionRefreshable = doc.versionRefreshable;\\n\\n\\t\\t\\t\\t\\t// Switch out old css links for the new css links. Inspired by:\\n\\t\\t\\t\\t\\t// https://github.com/guard/guard-livereload/blob/master/js/livereload.js#L710\\n\\t\\t\\t\\t\\tvar newCss = doc.assets || [];\\n\\t\\t\\t\\t\\tvar oldLinks = [];\\n\\n\\t\\t\\t\\t\\tArray.prototype.forEach.call(document.getElementsByTagName('link'), function (link) {\\n\\t\\t\\t\\t\\t\\tif (link.className === '__meteor-css__') {\\n\\t\\t\\t\\t\\t\\t\\toldLinks.push(link);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t\\tfunction waitUntilCssLoads(link, callback) {\\n\\t\\t\\t\\t\\t\\tvar called;\\n\\n\\t\\t\\t\\t\\t\\tlink.onload = function () {\\n\\t\\t\\t\\t\\t\\t\\tknownToSupportCssOnLoad = true;\\n\\t\\t\\t\\t\\t\\t\\tif (!called) {\\n\\t\\t\\t\\t\\t\\t\\t\\tcalled = true;\\n\\t\\t\\t\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\t\\tif (!knownToSupportCssOnLoad) {\\n\\t\\t\\t\\t\\t\\t\\tvar id = Meteor.setInterval(function () {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (link.sheet) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (!called) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcalled = true;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tMeteor.clearInterval(id);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}, 50);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tlet newLinksLeftToLoad = newCss.length;\\n\\t\\t\\t\\t\\tfunction removeOldLinks() {\\n\\t\\t\\t\\t\\t\\tif (oldLinks.length > 0 && --newLinksLeftToLoad < 1) {\\n\\t\\t\\t\\t\\t\\t\\toldLinks.splice(0).forEach((link) => {\\n\\t\\t\\t\\t\\t\\t\\t\\tlink.parentNode.removeChild(link);\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (newCss.length > 0) {\\n\\t\\t\\t\\t\\t\\tnewCss.forEach((css) => {\\n\\t\\t\\t\\t\\t\\t\\tconst newLink = document.createElement('link');\\n\\t\\t\\t\\t\\t\\t\\tnewLink.setAttribute('rel', 'stylesheet');\\n\\t\\t\\t\\t\\t\\t\\tnewLink.setAttribute('type', 'text/css');\\n\\t\\t\\t\\t\\t\\t\\tnewLink.setAttribute('class', '__meteor-css__');\\n\\t\\t\\t\\t\\t\\t\\tnewLink.setAttribute('href', css.url);\\n\\n\\t\\t\\t\\t\\t\\t\\twaitUntilCssLoads(newLink, function () {\\n\\t\\t\\t\\t\\t\\t\\t\\tMeteor.setTimeout(removeOldLinks, 200);\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t\\t\\t\\tconst head = document.getElementsByTagName('head').item(0);\\n\\t\\t\\t\\t\\t\\t\\thead.appendChild(newLink);\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tremoveOldLinks();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t});\\n};\\n\\nAutoupdate._retrySubscription();\\n\",\"import { Tracker } from 'meteor/tracker';\\n\\nexport class ClientVersions {\\n\\tconstructor() {\\n\\t\\tthis._versions = new Map();\\n\\t\\tthis._watchCallbacks = new Set();\\n\\t}\\n\\n\\t// Creates a Livedata store for use with `Meteor.connection.registerStore`.\\n\\t// After the store is registered, document updates reported by Livedata are\\n\\t// merged with the documents in this `ClientVersions` instance.\\n\\tcreateStore() {\\n\\t\\treturn {\\n\\t\\t\\tupdate: ({ id, msg, fields }) => {\\n\\t\\t\\t\\tif (msg === 'added' || msg === 'changed') {\\n\\t\\t\\t\\t\\tthis.set(id, fields);\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t};\\n\\t}\\n\\n\\thasVersions() {\\n\\t\\treturn this._versions.size > 0;\\n\\t}\\n\\n\\tget(id) {\\n\\t\\treturn this._versions.get(id);\\n\\t}\\n\\n\\t// Adds or updates a version document and invokes registered callbacks for the\\n\\t// added/updated document. If a document with the given ID already exists, its\\n\\t// fields are merged with `fields`.\\n\\tset(id, fields) {\\n\\t\\tlet version = this._versions.get(id);\\n\\t\\tlet isNew = false;\\n\\n\\t\\tif (version) {\\n\\t\\t\\tObject.assign(version, fields);\\n\\t\\t} else {\\n\\t\\t\\tversion = {\\n\\t\\t\\t\\t_id: id,\\n\\t\\t\\t\\t...fields,\\n\\t\\t\\t};\\n\\n\\t\\t\\tisNew = true;\\n\\t\\t\\tthis._versions.set(id, version);\\n\\t\\t}\\n\\n\\t\\tthis._watchCallbacks.forEach(({ fn, filter }) => {\\n\\t\\t\\tif (!filter || filter === version._id) {\\n\\t\\t\\t\\tfn(version, isNew);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\n\\t// Registers a callback that will be invoked when a version document is added\\n\\t// or changed. Calling the function returned by `watch` removes the callback.\\n\\t// If `skipInitial` is true, the callback isn't be invoked for existing\\n\\t// documents. If `filter` is set, the callback is only invoked for documents\\n\\t// with ID `filter`.\\n\\twatch(fn, { skipInitial, filter } = {}) {\\n\\t\\tif (!skipInitial) {\\n\\t\\t\\tconst resolved = Promise.resolve();\\n\\n\\t\\t\\tthis._versions.forEach((version) => {\\n\\t\\t\\t\\tif (!filter || filter === version._id) {\\n\\t\\t\\t\\t\\tresolved.then(() => fn(version, true));\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tconst callback = { fn, filter };\\n\\t\\tthis._watchCallbacks.add(callback);\\n\\n\\t\\treturn () => this._watchCallbacks.delete(callback);\\n\\t}\\n\\n\\t// A reactive data source for `Autoupdate.newClientAvailable`.\\n\\tnewClientAvailable(id, fields, currentVersion) {\\n\\t\\tfunction isNewVersion(version) {\\n\\t\\t\\treturn version._id === id && fields.some((field) => version[field] !== currentVersion[field]);\\n\\t\\t}\\n\\n\\t\\tconst dependency = new Tracker.Dependency();\\n\\t\\tconst version = this.get(id);\\n\\n\\t\\tdependency.depend();\\n\\n\\t\\tconst stop = this.watch(\\n\\t\\t\\t(version) => {\\n\\t\\t\\t\\tif (isNewVersion(version)) {\\n\\t\\t\\t\\t\\tdependency.changed();\\n\\t\\t\\t\\t\\tstop();\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t{ skipInitial: true },\\n\\t\\t);\\n\\n\\t\\treturn !!version && isNewVersion(version);\\n\\t}\\n}\\n\",null],\"names\":[\"ClientVersions\",\"module1\",\"export\",\"Autoupdate\",\"link\",\"v\",\"clientArch\",\"Meteor\",\"isCordova\",\"isModern\",\"autoupdateVersions\",\"__meteor_runtime_config__\",\"autoupdate\",\"versions\",\"version\",\"versionRefreshable\",\"versionNonRefreshable\",\"assets\",\"clientVersions\",\"_clientVersions\",\"connection\",\"registerStoreClient\",\"createStore\",\"newClientAvailable\",\"knownToSupportCssOnLoad\",\"retry\",\"Retry\",\"minCount\",\"baseTimeout\",\"failures\",\"_retrySubscription\",\"subscribe\",\"onError\",\"error\",\"_debug\",\"retryLater\",\"onReady\",\"resolved\",\"Promise\",\"resolve\",\"stop\",\"watch\",\"doc\",\"then\",\"checkNewVersionDocument\",\"_id\",\"Package\",\"reload\",\"console\",\"warn\",\"concat\",\"reloadDelayInSeconds\",\"setTimeout\",\"Reload\",\"_reload\",\"newCss\",\"oldLinks\",\"Array\",\"prototype\",\"forEach\",\"call\",\"document\",\"getElementsByTagName\",\"className\",\"push\",\"newLinksLeftToLoad\",\"length\",\"removeOldLinks\",\"splice\",\"parentNode\",\"removeChild\",\"css\",\"newLink\",\"createElement\",\"setAttribute\",\"url\",\"waitUntilCssLoads\",\"callback\",\"called\",\"onload\",\"id\",\"setInterval\",\"sheet\",\"clearInterval\",\"head\",\"item\",\"appendChild\",\"isProduction\",\"module\",\"_objectSpread\",\"Tracker\",\"default\",\"constructor\",\"_versions\",\"Map\",\"_watchCallbacks\",\"Set\",\"update\",\"_ref\",\"msg\",\"fields\",\"set\",\"hasVersions\",\"size\",\"get\",\"isNew\",\"Object\",\"assign\",\"_ref2\",\"fn\",\"filter\",\"skipInitial\",\"arguments\",\"undefined\",\"add\",\"delete\",\"currentVersion\",\"isNewVersion\",\"some\",\"field\",\"dependency\",\"Dependency\",\"depend\",\"changed\"],\"mappings\":\"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\"}"}