{"code":"function module(e,n,r){r.link(\"@babel/runtime/regenerator\",{default:function(e){t=e}},0),r.export({joinEncryptedData:function(){return c},encryptAES:function(){return a},digest:function(){return i},deriveBits:function(){return s},importKey:function(){return o},importKeyRaw:function(){return l},exportKey:function(){return p},generateKeyPair:function(){return f},decryptAES:function(){return y}});var t,u=global.crypto.subtle,c=function(e){var n=e.encryptedData,r=e.iv,t=new Uint8Array(n),u=new Uint8Array(r.length+t.length);return u.set(r,0),u.set(t,r.length),u},a=function(e){var n,r,c;return t.async(function(t){for(;;)switch(t.prev=t.next){case 0:return n=e.iv,r=e._sessionKey,c=e.data,t.abrupt(\"return\",u.encrypt({name:\"AES-GCM\",iv:n},r,c));case 2:case\"end\":return t.stop()}},null,null,null,Promise)},i=function(e){return t.async(function(n){for(;;)switch(n.prev=n.next){case 0:return n.abrupt(\"return\",u.digest({name:\"SHA-256\"},e));case 1:case\"end\":return n.stop()}},null,null,null,Promise)},s=function(e){var n,r;return t.async(function(t){for(;;)switch(t.prev=t.next){case 0:if(n=e.ecdhObj,(r=e._keyPair).privateKey){t.next=3;break}throw Error(\"No private key\");case 3:return t.abrupt(\"return\",u.deriveBits(n,r.privateKey,256));case 4:case\"end\":return t.stop()}},null,null,null,Promise)},o=function(e){return t.async(function(n){for(;;)switch(n.prev=n.next){case 0:return n.abrupt(\"return\",u.importKey(\"jwk\",e,{name:\"ECDH\",namedCurve:\"P-256\"},!1,[]));case 1:case\"end\":return n.stop()}},null,null,null,Promise)},l=function(e){return t.async(function(n){for(;;)switch(n.prev=n.next){case 0:return n.abrupt(\"return\",u.importKey(\"raw\",e,{name:\"AES-GCM\"},!1,[\"encrypt\",\"decrypt\"]));case 1:case\"end\":return n.stop()}},null,null,null,Promise)},p=function(e){return t.async(function(n){for(;;)switch(n.prev=n.next){case 0:return n.abrupt(\"return\",u.exportKey(\"jwk\",e));case 1:case\"end\":return n.stop()}},null,null,null,Promise)},f=function(){return t.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",u.generateKey({name:\"ECDH\",namedCurve:\"P-256\"},!1,[\"deriveKey\",\"deriveBits\"]));case 1:case\"end\":return e.stop()}},null,null,null,Promise)},y=function(e,n){var r,c;return t.async(function(a){for(;;)switch(a.prev=a.next){case 0:return r=e.slice(0,12),e=e.slice(12),a.next=4,t.awrap(u.decrypt({name:\"AES-GCM\",iv:r},n,e));case 4:return c=a.sent,a.abrupt(\"return\",c);case 6:case\"end\":return a.stop()}},null,null,null,Promise)}}","map":"{\"version\":3,\"sources\":[\"app/otr/lib/functions.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IOTRAlgorithm } from './IOTR';\\n\\nconst { subtle } = global.crypto;\\n\\nexport const joinEncryptedData = ({ encryptedData, iv }: { encryptedData: ArrayBuffer; iv: Uint8Array }): Uint8Array => {\\n\\tconst cipherText = new Uint8Array(encryptedData);\\n\\tconst output = new Uint8Array(iv.length + cipherText.length);\\n\\toutput.set(iv, 0);\\n\\toutput.set(cipherText, iv.length);\\n\\treturn output;\\n};\\nexport const encryptAES = async ({\\n\\tiv,\\n\\t_sessionKey,\\n\\tdata,\\n}: {\\n\\tiv: Uint8Array;\\n\\t_sessionKey: CryptoKey;\\n\\tdata: Uint8Array;\\n}): Promise<ArrayBuffer> =>\\n\\tsubtle.encrypt(\\n\\t\\t{\\n\\t\\t\\tname: 'AES-GCM',\\n\\t\\t\\tiv,\\n\\t\\t},\\n\\t\\t_sessionKey,\\n\\t\\tdata,\\n\\t);\\nexport const digest = async (bits: ArrayBuffer): Promise<ArrayBuffer> =>\\n\\tsubtle.digest(\\n\\t\\t{\\n\\t\\t\\tname: 'SHA-256',\\n\\t\\t},\\n\\t\\tbits,\\n\\t);\\nexport const deriveBits = async ({ ecdhObj, _keyPair }: { ecdhObj: IOTRAlgorithm; _keyPair: CryptoKeyPair }): Promise<ArrayBuffer> => {\\n\\tif (!_keyPair.privateKey) {\\n\\t\\tthrow new Error('No private key');\\n\\t}\\n\\n\\treturn subtle.deriveBits(ecdhObj, _keyPair.privateKey, 256);\\n};\\n\\nexport const importKey = async (publicKeyObject: JsonWebKey): Promise<CryptoKey> =>\\n\\tsubtle.importKey(\\n\\t\\t'jwk',\\n\\t\\tpublicKeyObject,\\n\\t\\t{\\n\\t\\t\\tname: 'ECDH',\\n\\t\\t\\tnamedCurve: 'P-256',\\n\\t\\t},\\n\\t\\tfalse,\\n\\t\\t[],\\n\\t);\\nexport const importKeyRaw = async (sessionKeyData: Uint8Array): Promise<CryptoKey> =>\\n\\tsubtle.importKey(\\n\\t\\t'raw',\\n\\t\\tsessionKeyData,\\n\\t\\t{\\n\\t\\t\\tname: 'AES-GCM',\\n\\t\\t},\\n\\t\\tfalse,\\n\\t\\t['encrypt', 'decrypt'],\\n\\t);\\nexport const exportKey = async (_keyPair: CryptoKey): Promise<JsonWebKey> => subtle.exportKey('jwk', _keyPair);\\nexport const generateKeyPair = async (): Promise<CryptoKeyPair> =>\\n\\tsubtle.generateKey(\\n\\t\\t{\\n\\t\\t\\tname: 'ECDH',\\n\\t\\t\\tnamedCurve: 'P-256',\\n\\t\\t},\\n\\t\\tfalse,\\n\\t\\t['deriveKey', 'deriveBits'],\\n\\t);\\nexport const decryptAES = async (cipherText: Uint8Array, _sessionKey: CryptoKey): Promise<ArrayBuffer> => {\\n\\tconst iv = cipherText.slice(0, 12);\\n\\tcipherText = cipherText.slice(12);\\n\\tconst data = await subtle.decrypt(\\n\\t\\t{\\n\\t\\t\\tname: 'AES-GCM',\\n\\t\\t\\tiv,\\n\\t\\t},\\n\\t\\t_sessionKey,\\n\\t\\tcipherText,\\n\\t);\\n\\treturn data;\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"export\",\"joinEncryptedData\",\"encryptAES\",\"digest\",\"deriveBits\",\"importKey\",\"importKeyRaw\",\"exportKey\",\"generateKeyPair\",\"decryptAES\",\"subtle\",\"global\",\"crypto\",\"_ref\",\"encryptedData\",\"iv\",\"cipherText\",\"Uint8Array\",\"output\",\"length\",\"set\",\"_ref2\",\"_sessionKey\",\"data\",\"async\",\"_context\",\"prev\",\"next\",\"abrupt\",\"encrypt\",\"name\",\"stop\",\"Promise\",\"bits\",\"_context2\",\"_ref3\",\"ecdhObj\",\"_keyPair\",\"_context3\",\"privateKey\",\"Error\",\"publicKeyObject\",\"_context4\",\"namedCurve\",\"sessionKeyData\",\"_context5\",\"_context6\",\"_context7\",\"generateKey\",\"_context8\",\"slice\",\"awrap\",\"decrypt\",\"sent\"],\"mappings\":\"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\"}"}