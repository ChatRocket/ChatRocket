{"code":"function module(e,s,r){let a,t,o,i,c,u;r.export({useMessageSearchQuery:()=>l}),r.link(\"@rocket.chat/ui-contexts\",{useMethod(e){a=e},useToastMessageDispatch(e){t=e},useTranslation(e){o=e},useUserId(e){i=e}},0),r.link(\"@tanstack/react-query\",{useQuery(e){c=e}},1),r.link(\"../../../contexts/RoomContext\",{useRoom(e){u=e}},2);let l=e=>{var s;let{searchText:r,limit:l,globalSearch:n}=e,d=null!==(s=i())&&void 0!==s?s:void 0,h=u(),m=o(),v=t(),k=a(\"rocketchatSearch.search\");return c([\"rooms\",h._id,\"message-search\",{uid:d,rid:h._id,searchText:r,limit:l,globalSearch:n}],async()=>{var e,s;let a=await k(r,{uid:d,rid:h._id},{limit:l,searchAll:n});return null!==(e=null===(s=a.message)||void 0===s?void 0:s.docs)&&void 0!==e?e:[]},{keepPreviousData:!0,onError:()=>{v({type:\"error\",message:m(\"Search_message_search_failed\")})}})}}","map":"{\"version\":3,\"sources\":[\"client/views/room/contextualBar/MessageSearchTab/hooks/useMessageSearchQuery.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useMethod, useToastMessageDispatch, useTranslation, useUserId } from '@rocket.chat/ui-contexts';\\nimport { useQuery } from '@tanstack/react-query';\\n\\nimport { useRoom } from '../../../contexts/RoomContext';\\n\\nexport const useMessageSearchQuery = ({\\n\\tsearchText,\\n\\tlimit,\\n\\tglobalSearch,\\n}: {\\n\\tsearchText: string;\\n\\tlimit: number;\\n\\tglobalSearch: boolean;\\n}) => {\\n\\tconst uid = useUserId() ?? undefined;\\n\\tconst room = useRoom();\\n\\n\\tconst t = useTranslation();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\n\\tconst searchMessages = useMethod('rocketchatSearch.search');\\n\\treturn useQuery(\\n\\t\\t['rooms', room._id, 'message-search', { uid, rid: room._id, searchText, limit, globalSearch }] as const,\\n\\t\\tasync () => {\\n\\t\\t\\tconst result = await searchMessages(searchText, { uid, rid: room._id }, { limit, searchAll: globalSearch });\\n\\t\\t\\treturn result.message?.docs ?? [];\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tkeepPreviousData: true,\\n\\t\\t\\tonError: () => {\\n\\t\\t\\t\\tdispatchToastMessage({\\n\\t\\t\\t\\t\\ttype: 'error',\\n\\t\\t\\t\\t\\tmessage: t('Search_message_search_failed'),\\n\\t\\t\\t\\t});\\n\\t\\t\\t},\\n\\t\\t},\\n\\t);\\n};\\n\",null],\"names\":[\"useMethod\",\"useToastMessageDispatch\",\"useTranslation\",\"useUserId\",\"useQuery\",\"useRoom\",\"module\",\"export\",\"useMessageSearchQuery\",\"link\",\"v\",\"_ref\",\"_useUserId\",\"searchText\",\"limit\",\"globalSearch\",\"uid\",\"undefined\",\"room\",\"t\",\"dispatchToastMessage\",\"searchMessages\",\"_id\",\"rid\",\"_result$message$docs\",\"_result$message\",\"result\",\"searchAll\",\"message\",\"docs\",\"keepPreviousData\",\"onError\",\"type\"],\"mappings\":\"2BAA6DA,EAAiBC,EAAAC,EAA2BC,EAAAC,EAAAC,EAAzGC,EAAOC,MAAE,CAAA,CAAAC,sBAAWA,IAAAA,CAAyC,GAA4CF,EAAAG,IAAA,CAAA,2BAAA,CAAAT,UAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,wBAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,eAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,UAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,wBAAA,CAAAL,SAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,gCAAA,CAAAJ,QAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAKlG,IAAMF,EAAwBG,IAQhC,IAAAC,EAAA,GARiC,CACrCC,WAAAA,CAAU,CACVC,MAAAA,CAAK,CACLC,aAAAA,CAAAA,CAKA,CAAAJ,EACMK,EAAG,AAAc,OAAdJ,CAAAA,EAAGT,GAAS,GAAES,AAAA,KAAA,IAAAA,EAAAA,EAAIK,KAAAA,EACrBC,EAAOb,IAEPc,EAAIjB,IACJkB,EAAuBnB,IAEvBoB,EAAiBrB,EAAU,2BACjC,OAAOI,EACN,CAAC,QAASc,EAAKI,GAAG,CAAE,iBAAkB,CAAEN,IAAAA,EAAKO,IAAKL,EAAKI,GAAG,CAAET,WAAAA,EAAYC,MAAAA,EAAOC,aAAAA,CAAY,EAAY,CACvG,UAAW,IAAAS,EAAAC,EACV,IAAMC,EAAS,MAAML,EAAeR,EAAY,CAAEG,IAAAA,EAAKO,IAAKL,EAAKI,GAAAA,AAAG,EAAI,CAAER,MAAAA,EAAOa,UAAWZ,CAAY,GACxG,OAAA,AAA2B,OAA3BS,CAAAA,EAAA,AAAqB,OAArBC,CAAAA,EAAOC,EAAOE,OAAO,AAAPA,GAAOH,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAdA,EAAgBI,IAAI,AAAJA,GAAIL,AAAA,KAAA,IAAAA,EAAAA,EAAI,EAAE,AAClC,EACA,CACCM,iBAAkB,CAAA,EAClBC,QAASA,KACRX,EAAqB,CACpBY,KAAM,QACNJ,QAAST,EAAE,iCAEb,GAGH\"}"}