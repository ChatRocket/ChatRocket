{"code":"function module(e,t,i){let a,n,r,d,l,o;let s=[\"type\",\"id\"],c=[\"ldap\",\"lastLogin\",\"services\"],u=[\"email\",\"cloud\",\"resume\",\"email2fa\",\"emailCode\"];i.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default(e){a=e}},0),i.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){n=e}},1),i.export({isSyncReady:()=>p,synchronizeUserData:()=>w,removeLocalUserData:()=>v}),i.link(\"meteor/reactive-var\",{ReactiveVar(e){r=e}},0),i.link(\"../../app/models/client\",{Users(e){d=e}},1),i.link(\"../../app/utils/client/lib/SDKClient\",{sdk(e){l=e}},2);let p=new r(!1),m=e=>{let t=d.findOne({_id:e._id});if(!(null!=t&&t._updatedAt)||t._updatedAt.getTime()<e._updatedAt.getTime()){d.upsert({_id:e._id},e);return}Object.keys(t).forEach(t=>{delete e[t]}),d.update({_id:t._id},{$set:n({},e)})},w=async e=>{var t;if(!e)return;d.remove({_id:{$ne:e}}),null===(t=o)||void 0===t||t();let i=l.stream(\"notify-user\",[\"\".concat(e,\"/userData\")],t=>{switch(t.type){case\"inserted\":let{type:i,id:n}=t,r=a(t,s);d.insert(r);break;case\"updated\":d.upsert({_id:e},{$set:t.diff,$unset:t.unset});break;case\"removed\":d.remove({_id:e})}});o=i.stop,await i.ready();let r=await l.rest.get(\"/v1/me\"),{ldap:w,lastLogin:v,services:A}=r,f=a(r,c);if(f){let e=A||{},{email:t,cloud:i,resume:r,email2fa:d,emailCode:l}=e,o=a(e,u);m(n(n(n(n({},f),A&&{services:n(n(n(n(n(n({},o?n({},o):{}),r?{resume:n({},r.loginTokens&&{loginTokens:r.loginTokens.map(e=>n(n({},e),{},{when:new Date(\"when\"in e?e.when:\"\"),createdAt:\"createdAt\"in e?new Date(e.createdAt):void 0,twoFactorAuthorizedUntil:e.twoFactorAuthorizedUntil?new Date(e.twoFactorAuthorizedUntil):void 0}))})}:{}),i?{cloud:n(n({},i),{},{expiresAt:new Date(i.expiresAt)})}:{}),l?n(n({},l),{},{expire:new Date(l.expire)}):{}),d?{email2fa:n(n({},d),{},{changedAt:new Date(d.changedAt)})}:{}),(null==t?void 0:t.verificationTokens)&&{email:{verificationTokens:t.verificationTokens.map(e=>n(n({},e),{},{when:new Date(e.when)}))}})}),v&&{lastLogin:new Date(v)}),{},{ldap:!!w,createdAt:new Date(f.createdAt),_updatedAt:new Date(f._updatedAt)}))}return p.set(!0),f},v=()=>d.remove({})}","map":"{\"version\":3,\"sources\":[\"client/lib/userData.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { ILivechatAgent, IUser, Serialized } from '@rocket.chat/core-typings';\\nimport { ReactiveVar } from 'meteor/reactive-var';\\n\\nimport { Users } from '../../app/models/client';\\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\\n\\nexport const isSyncReady = new ReactiveVar(false);\\n\\ntype RawUserData = Serialized<\\n\\tPick<\\n\\t\\tIUser,\\n\\t\\t| '_id'\\n\\t\\t| 'type'\\n\\t\\t| 'name'\\n\\t\\t| 'username'\\n\\t\\t| 'emails'\\n\\t\\t| 'status'\\n\\t\\t| 'statusDefault'\\n\\t\\t| 'statusText'\\n\\t\\t| 'statusConnection'\\n\\t\\t| 'avatarOrigin'\\n\\t\\t| 'utcOffset'\\n\\t\\t| 'language'\\n\\t\\t| 'settings'\\n\\t\\t| 'roles'\\n\\t\\t| 'active'\\n\\t\\t| 'defaultRoom'\\n\\t\\t| 'customFields'\\n\\t\\t| 'oauth'\\n\\t\\t| 'createdAt'\\n\\t\\t| '_updatedAt'\\n\\t\\t| 'avatarETag'\\n\\t> & { statusLivechat?: ILivechatAgent['statusLivechat'] }\\n>;\\n\\nconst updateUser = (userData: IUser): void => {\\n\\tconst user = Users.findOne({ _id: userData._id }) as IUser | undefined;\\n\\n\\tif (!user?._updatedAt || user._updatedAt.getTime() < userData._updatedAt.getTime()) {\\n\\t\\tUsers.upsert({ _id: userData._id }, userData);\\n\\t\\treturn;\\n\\t}\\n\\n\\t// delete data already on user's collection as those are newer\\n\\tObject.keys(user).forEach((key) => {\\n\\t\\tdelete userData[key as keyof IUser];\\n\\t});\\n\\tUsers.update({ _id: user._id }, { $set: { ...userData } });\\n};\\n\\nlet cancel: undefined | (() => void);\\nexport const synchronizeUserData = async (uid: IUser['_id']): Promise<RawUserData | void> => {\\n\\tif (!uid) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t// Remove data from any other user that we may have retained\\n\\tUsers.remove({ _id: { $ne: uid } });\\n\\n\\tcancel?.();\\n\\n\\tconst result = sdk.stream('notify-user', [`${uid}/userData`], (data) => {\\n\\t\\tswitch (data.type) {\\n\\t\\t\\tcase 'inserted':\\n\\t\\t\\t\\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\\n\\t\\t\\t\\tconst { type, id, ...user } = data;\\n\\t\\t\\t\\tUsers.insert(user as unknown as IUser);\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 'updated':\\n\\t\\t\\t\\tUsers.upsert({ _id: uid }, { $set: data.diff, $unset: data.unset as any });\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 'removed':\\n\\t\\t\\t\\tUsers.remove({ _id: uid });\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t});\\n\\n\\tcancel = result.stop;\\n\\tawait result.ready();\\n\\n\\tconst { ldap, lastLogin, services: rawServices, ...userData } = await sdk.rest.get('/v1/me');\\n\\n\\t// email?: {\\n\\t// \\tverificationTokens?: IUserEmailVerificationToken[];\\n\\t// };\\n\\t// export interface IUserEmailVerificationToken {\\n\\t// \\ttoken: string;\\n\\t// \\taddress: string;\\n\\t// \\twhen: Date;\\n\\t// }\\n\\n\\tif (userData) {\\n\\t\\tconst { email, cloud, resume, email2fa, emailCode, ...services } = rawServices || {};\\n\\n\\t\\tupdateUser({\\n\\t\\t\\t...userData,\\n\\t\\t\\t...(rawServices && {\\n\\t\\t\\t\\tservices: {\\n\\t\\t\\t\\t\\t...(services ? { ...services } : {}),\\n\\t\\t\\t\\t\\t...(resume\\n\\t\\t\\t\\t\\t\\t? {\\n\\t\\t\\t\\t\\t\\t\\t\\tresume: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t...(resume.loginTokens && {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tloginTokens: resume.loginTokens.map((token) => ({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t...token,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\twhen: new Date('when' in token ? token.when : ''),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcreatedAt: ('createdAt' in token ? new Date(token.createdAt) : undefined) as Date,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttwoFactorAuthorizedUntil: token.twoFactorAuthorizedUntil ? new Date(token.twoFactorAuthorizedUntil) : undefined,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t})),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}),\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t  }\\n\\t\\t\\t\\t\\t\\t: {}),\\n\\t\\t\\t\\t\\t...(cloud\\n\\t\\t\\t\\t\\t\\t? {\\n\\t\\t\\t\\t\\t\\t\\t\\tcloud: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t...cloud,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\texpiresAt: new Date(cloud.expiresAt),\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t  }\\n\\t\\t\\t\\t\\t\\t: {}),\\n\\t\\t\\t\\t\\t...(emailCode ? { ...emailCode, expire: new Date(emailCode.expire) } : {}),\\n\\t\\t\\t\\t\\t...(email2fa ? { email2fa: { ...email2fa, changedAt: new Date(email2fa.changedAt) } } : {}),\\n\\t\\t\\t\\t\\t...(email?.verificationTokens && {\\n\\t\\t\\t\\t\\t\\temail: {\\n\\t\\t\\t\\t\\t\\t\\tverificationTokens: email.verificationTokens.map((token) => ({\\n\\t\\t\\t\\t\\t\\t\\t\\t...token,\\n\\t\\t\\t\\t\\t\\t\\t\\twhen: new Date(token.when),\\n\\t\\t\\t\\t\\t\\t\\t})),\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t}),\\n\\t\\t\\t\\t},\\n\\t\\t\\t}),\\n\\t\\t\\t...(lastLogin && {\\n\\t\\t\\t\\tlastLogin: new Date(lastLogin),\\n\\t\\t\\t}),\\n\\t\\t\\tldap: Boolean(ldap),\\n\\t\\t\\tcreatedAt: new Date(userData.createdAt),\\n\\t\\t\\t_updatedAt: new Date(userData._updatedAt),\\n\\t\\t});\\n\\t}\\n\\tisSyncReady.set(true);\\n\\n\\treturn userData;\\n};\\n\\nexport const removeLocalUserData = (): number => Users.remove({});\\n\",null],\"names\":[\"_objectWithoutProperties\",\"_objectSpread\",\"ReactiveVar\",\"Users\",\"sdk\",\"cancel\",\"module\",\"link\",\"default\",\"v\",\"export\",\"isSyncReady\",\"synchronizeUserData\",\"removeLocalUserData\",\"updateUser\",\"userData\",\"user\",\"findOne\",\"_id\",\"_updatedAt\",\"getTime\",\"upsert\",\"Object\",\"keys\",\"forEach\",\"key\",\"update\",\"$set\",\"uid\",\"_cancel\",\"remove\",\"$ne\",\"result\",\"stream\",\"concat\",\"data\",\"type\",\"id\",\"_excluded\",\"insert\",\"diff\",\"$unset\",\"unset\",\"stop\",\"ready\",\"_await$sdk$rest$get\",\"rest\",\"get\",\"ldap\",\"lastLogin\",\"services\",\"rawServices\",\"_excluded2\",\"_ref\",\"email\",\"cloud\",\"resume\",\"email2fa\",\"emailCode\",\"_excluded3\",\"loginTokens\",\"map\",\"token\",\"when\",\"Date\",\"createdAt\",\"undefined\",\"twoFactorAuthorizedUntil\",\"expiresAt\",\"expire\",\"changedAt\",\"verificationTokens\",\"Boolean\",\"set\"],\"mappings\":\"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\"}"}