{"code":"function module(e,t,i){let o,r,n,s,h,a,c,u,l,d;i.export({CustomOAuth:()=>m}),i.link(\"@rocket.chat/random\",{Random(e){o=e}},0),i.link(\"@rocket.chat/string-helpers\",{capitalize(e){r=e}},1),i.link(\"meteor/accounts-base\",{Accounts(e){n=e}},2),i.link(\"meteor/check\",{Match(e){s=e}},3),i.link(\"meteor/meteor\",{Meteor(e){h=e}},4),i.link(\"meteor/oauth\",{OAuth(e){a=e}},5),i.link(\"../../../client/lib/2fa/overrideLoginMethod\",{overrideLoginMethod(e){c=e}},6),i.link(\"../../../client/lib/loginServices\",{loginServices(e){u=e}},7),i.link(\"../../../client/meteorOverrides/login/oauth\",{createOAuthTotpLoginMethod(e){l=e}},8),i.link(\"../../../lib/utils/isURL\",{isURL(e){d=e}},9);class m{constructor(e,t){if(this.name=void 0,this.serverURL=void 0,this.authorizePath=void 0,this.scope=void 0,this.responseType=void 0,this.name=e,this.name=e,!s.test(this.name,String))throw new h.Error(\"CustomOAuth: Name is required and must be String\");this.configure(t),n.oauth.registerService(this.name),this.configureLogin()}configure(e){if(!s.test(e,Object))throw new h.Error(\"CustomOAuth: Options is required and must be Object\");if(!s.test(e.serverURL,String))throw new h.Error(\"CustomOAuth: Options.serverURL is required and must be String\");s.test(e.authorizePath,String)||(e.authorizePath=\"/oauth/authorize\"),s.test(e.scope,String)||(e.scope=\"openid\"),this.serverURL=e.serverURL,this.authorizePath=e.authorizePath,this.scope=e.scope,this.responseType=e.responseType||\"code\",d(this.authorizePath)||(this.authorizePath=this.serverURL+this.authorizePath)}configureLogin(){let e=\"loginWith\".concat(r(String(this.name||\"\"))),t=l(this),i=async(e,t)=>{let i=n.oauth.credentialRequestCompleteHandler(t);await this.requestCredential(e,i)};h[e]=(e,o)=>{c(i,[e],o,t)}}async requestCredential(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0,i=await u.loadLoginService(this.name);if(!i){t&&t(new n.ConfigError);return}let r=o.secret(),s=a._loginStyle(this.name,i),h=-1!==this.authorizePath.indexOf(\"?\")?\"&\":\"?\",c=\"\".concat(this.authorizePath).concat(h,\"client_id=\").concat(i.clientId,\"&redirect_uri=\").concat(encodeURIComponent(a._redirectUri(this.name,i)),\"&response_type=\").concat(encodeURIComponent(this.responseType))+\"&state=\".concat(encodeURIComponent(a._stateParam(s,r,e.redirectUrl)),\"&scope=\").concat(encodeURIComponent(this.scope));a.launchLogin({loginService:this.name,loginStyle:s,loginUrl:c,credentialRequestCompleteCallback:t,credentialToken:r,popupOptions:{width:900,height:450}})}}}","map":"{\"version\":3,\"sources\":[\"app/custom-oauth/client/CustomOAuth.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { OAuthConfiguration, OauthConfig } from '@rocket.chat/core-typings';\\nimport { Random } from '@rocket.chat/random';\\nimport { capitalize } from '@rocket.chat/string-helpers';\\nimport { Accounts } from 'meteor/accounts-base';\\nimport { Match } from 'meteor/check';\\nimport { Meteor } from 'meteor/meteor';\\nimport { OAuth } from 'meteor/oauth';\\n\\nimport type { IOAuthProvider } from '../../../client/definitions/IOAuthProvider';\\nimport { overrideLoginMethod, type LoginCallback } from '../../../client/lib/2fa/overrideLoginMethod';\\nimport { loginServices } from '../../../client/lib/loginServices';\\nimport { createOAuthTotpLoginMethod } from '../../../client/meteorOverrides/login/oauth';\\nimport { isURL } from '../../../lib/utils/isURL';\\n\\n// Request custom OAuth credentials for the user\\n// @param options {optional}\\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\\n//   completion. Takes one argument, credentialToken on success, or Error on\\n//   error.\\n\\nexport class CustomOAuth implements IOAuthProvider {\\n\\tpublic serverURL: string;\\n\\n\\tpublic authorizePath: string;\\n\\n\\tpublic scope: string;\\n\\n\\tpublic responseType: string;\\n\\n\\tconstructor(public readonly name: string, options: OauthConfig) {\\n\\t\\tthis.name = name;\\n\\t\\tif (!Match.test(this.name, String)) {\\n\\t\\t\\tthrow new Meteor.Error('CustomOAuth: Name is required and must be String');\\n\\t\\t}\\n\\n\\t\\tthis.configure(options);\\n\\n\\t\\tAccounts.oauth.registerService(this.name);\\n\\n\\t\\tthis.configureLogin();\\n\\t}\\n\\n\\tconfigure(options: OauthConfig) {\\n\\t\\tif (!Match.test(options, Object)) {\\n\\t\\t\\tthrow new Meteor.Error('CustomOAuth: Options is required and must be Object');\\n\\t\\t}\\n\\n\\t\\tif (!Match.test(options.serverURL, String)) {\\n\\t\\t\\tthrow new Meteor.Error('CustomOAuth: Options.serverURL is required and must be String');\\n\\t\\t}\\n\\n\\t\\tif (!Match.test(options.authorizePath, String)) {\\n\\t\\t\\toptions.authorizePath = '/oauth/authorize';\\n\\t\\t}\\n\\n\\t\\tif (!Match.test(options.scope, String)) {\\n\\t\\t\\toptions.scope = 'openid';\\n\\t\\t}\\n\\n\\t\\tthis.serverURL = options.serverURL;\\n\\t\\tthis.authorizePath = options.authorizePath;\\n\\t\\tthis.scope = options.scope;\\n\\t\\tthis.responseType = options.responseType || 'code';\\n\\n\\t\\tif (!isURL(this.authorizePath)) {\\n\\t\\t\\tthis.authorizePath = this.serverURL + this.authorizePath;\\n\\t\\t}\\n\\t}\\n\\n\\tconfigureLogin() {\\n\\t\\tconst loginWithService = `loginWith${capitalize(String(this.name || ''))}` as const;\\n\\n\\t\\tconst loginWithOAuthTokenAndTOTP = createOAuthTotpLoginMethod(this);\\n\\n\\t\\tconst loginWithOAuthToken = async (options?: Meteor.LoginWithExternalServiceOptions, callback?: LoginCallback) => {\\n\\t\\t\\tconst credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\\n\\t\\t\\tawait this.requestCredential(options, credentialRequestCompleteCallback);\\n\\t\\t};\\n\\n\\t\\t(Meteor as any)[loginWithService] = (options: Meteor.LoginWithExternalServiceOptions, callback: LoginCallback) => {\\n\\t\\t\\toverrideLoginMethod(loginWithOAuthToken, [options], callback, loginWithOAuthTokenAndTOTP);\\n\\t\\t};\\n\\t}\\n\\n\\tasync requestCredential(\\n\\t\\toptions: Meteor.LoginWithExternalServiceOptions = {},\\n\\t\\tcredentialRequestCompleteCallback: (credentialTokenOrError?: string | Error) => void,\\n\\t) {\\n\\t\\tconst config = await loginServices.loadLoginService<OAuthConfiguration>(this.name);\\n\\t\\tif (!config) {\\n\\t\\t\\tif (credentialRequestCompleteCallback) {\\n\\t\\t\\t\\tcredentialRequestCompleteCallback(new Accounts.ConfigError());\\n\\t\\t\\t}\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst credentialToken = Random.secret();\\n\\t\\tconst loginStyle = OAuth._loginStyle(this.name, config);\\n\\n\\t\\tconst separator = this.authorizePath.indexOf('?') !== -1 ? '&' : '?';\\n\\n\\t\\tconst loginUrl =\\n\\t\\t\\t`${this.authorizePath}${separator}client_id=${config.clientId}&redirect_uri=${encodeURIComponent(\\n\\t\\t\\t\\tOAuth._redirectUri(this.name, config),\\n\\t\\t\\t)}&response_type=${encodeURIComponent(this.responseType)}` +\\n\\t\\t\\t`&state=${encodeURIComponent(OAuth._stateParam(loginStyle, credentialToken, options.redirectUrl))}&scope=${encodeURIComponent(\\n\\t\\t\\t\\tthis.scope,\\n\\t\\t\\t)}`;\\n\\n\\t\\tOAuth.launchLogin({\\n\\t\\t\\tloginService: this.name,\\n\\t\\t\\tloginStyle,\\n\\t\\t\\tloginUrl,\\n\\t\\t\\tcredentialRequestCompleteCallback,\\n\\t\\t\\tcredentialToken,\\n\\t\\t\\tpopupOptions: {\\n\\t\\t\\t\\twidth: 900,\\n\\t\\t\\t\\theight: 450,\\n\\t\\t\\t},\\n\\t\\t});\\n\\t}\\n}\\n\",null],\"names\":[\"Random\",\"capitalize\",\"Accounts\",\"Match\",\"Meteor\",\"OAuth\",\"overrideLoginMethod\",\"loginServices\",\"createOAuthTotpLoginMethod\",\"isURL\",\"module\",\"export\",\"CustomOAuth\",\"link\",\"v\",\"constructor\",\"name\",\"options\",\"serverURL\",\"authorizePath\",\"scope\",\"responseType\",\"test\",\"String\",\"Error\",\"configure\",\"oauth\",\"registerService\",\"configureLogin\",\"Object\",\"loginWithService\",\"concat\",\"loginWithOAuthTokenAndTOTP\",\"loginWithOAuthToken\",\"callback\",\"credentialRequestCompleteCallback\",\"credentialRequestCompleteHandler\",\"requestCredential\",\"arguments\",\"length\",\"undefined\",\"config\",\"loadLoginService\",\"ConfigError\",\"credentialToken\",\"secret\",\"loginStyle\",\"_loginStyle\",\"separator\",\"indexOf\",\"loginUrl\",\"clientId\",\"encodeURIComponent\",\"_redirectUri\",\"_stateParam\",\"redirectUrl\",\"launchLogin\",\"loginService\",\"popupOptions\",\"width\",\"height\"],\"mappings\":\"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\"}"}