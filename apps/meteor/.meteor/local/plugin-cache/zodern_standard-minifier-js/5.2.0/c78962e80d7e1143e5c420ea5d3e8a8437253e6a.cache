{"code":"function module(e,t,r){r.link(\"@babel/runtime/helpers/typeof\",{default:function(e){n=e}},0),r.link(\"@babel/runtime/regenerator\",{default:function(e){s=e}},1),r.export({OTRRoom:function(){return O}}),r.link(\"@rocket.chat/core-typings\",{UserStatus:function(e){i=e}},0),r.link(\"@rocket.chat/random\",{Random:function(e){o=e}},1),r.link(\"ejson\",{default:function(e){a=e}},2),r.link(\"meteor/meteor\",{Meteor:function(e){c=e}},3),r.link(\"meteor/reactive-var\",{ReactiveVar:function(e){u=e}},4),r.link(\"meteor/tracker\",{Tracker:function(e){l=e}},5),r.link(\"../../../client/components/GenericModal\",{default:function(e){h=e}},6),r.link(\"../../../client/lib/imperativeModal\",{imperativeModal:function(e){p=e}},7),r.link(\"../../../client/lib/presence\",{Presence:function(e){d=e}},8),r.link(\"../../../client/lib/toast\",{dispatchToastMessage:function(e){f=e}},9),r.link(\"../../../client/lib/utils/getUidDirectMessage\",{getUidDirectMessage:function(e){y=e}},10),r.link(\"../../../client/lib/utils/goToRoomById\",{goToRoomById:function(e){m=e}},11),r.link(\"../../utils/client/lib/SDKClient\",{sdk:function(e){_=e}},12),r.link(\"../../utils/lib/i18n\",{t:function(e){b=e}},13),r.link(\"../lib/OtrRoomState\",{OtrRoomState:function(e){k=e}},14),r.link(\"../lib/constants\",{otrSystemMessages:function(e){E=e}},15),r.link(\"../lib/functions\",{decryptAES:function(e){S=e},deriveBits:function(e){v=e},digest:function(e){w=e},encryptAES:function(e){x=e},exportKey:function(e){I=e},generateKeyPair:function(e){T=e},importKey:function(e){R=e},importKeyRaw:function(e){g=e},joinEncryptedData:function(e){P=e}},16);var n,s,i,o,a,c,u,l,h,p,d,f,y,m,_,b,k,E,S,v,w,x,I,T,R,g,P,O=function(){function e(e,t,r){this._userId=void 0,this._roomId=void 0,this._keyPair=void 0,this._exportedPublicKey=void 0,this._sessionKey=void 0,this._userOnlineComputation=void 0,this.peerId=void 0,this.state=new u(k.NOT_STARTED),this.isFirstOTR=void 0,this.onPresenceEventHook=void 0,this._userId=e,this._roomId=t,this._keyPair=null,this._sessionKey=null,this.peerId=r,this.isFirstOTR=!0,this.onPresenceEventHook=this.onPresenceEvent.bind(this)}e.create=function(t,r){var n=y(r);if(n)return new e(t,r,n)};var t=e.prototype;return t.getPeerId=function(){return this.peerId},t.getState=function(){return this.state.get()},t.setState=function(e){this.getState()!==e&&this.state.set(e)},t.handshake=function(e){return s.async(function(t){for(;;)switch(t.prev=t.next){case 0:return this.setState(k.ESTABLISHING),t.next=3,s.awrap(this.generateKeyPair());case 3:if(_.publish(\"notify-user\",[this.peerId+\"/otr\",\"handshake\",{roomId:this._roomId,userId:this._userId,publicKey:a.stringify(this._exportedPublicKey),refresh:e}]),!e){t.next=11;break}if(c.user()){t.next=8;break}return t.abrupt(\"return\");case 8:return t.next=10,s.awrap(_.rest.post(\"/v1/chat.otr\",{roomId:this._roomId,type:E.USER_REQUESTED_OTR_KEY_REFRESH}));case 10:this.isFirstOTR=!1;case 11:case\"end\":return t.stop()}},null,this,null,Promise)},t.onPresenceEvent=function(e){e&&e.status===i.OFFLINE&&(console.warn(\"OTR Room \"+this._roomId+\" ended because \"+this.peerId+\" went offline\"),this.end(),p.open({component:h,props:{variant:\"warning\",title:b(\"OTR\"),children:b(\"OTR_Session_ended_other_user_went_offline\",{username:e.username}),confirmText:b(\"Ok\"),onClose:p.close,onConfirm:p.close}}))},t.listenToUserStatus=function(){d.listen(this.peerId,this.onPresenceEventHook)},t.acknowledge=function(){_.rest.post(\"/v1/statistics.telemetry\",{params:[{eventName:\"otrStats\",timestamp:Date.now(),rid:this._roomId}]}),_.publish(\"notify-user\",[this.peerId+\"/otr\",\"acknowledge\",{roomId:this._roomId,userId:this._userId,publicKey:a.stringify(this._exportedPublicKey)}])},t.deny=function(){this.reset(),this.setState(k.DECLINED),_.publish(\"notify-user\",[this.peerId+\"/otr\",\"deny\",{roomId:this._roomId,userId:this._userId}])},t.softReset=function(){this.isFirstOTR=!0,this.setState(k.NOT_STARTED),this._keyPair=null,this._exportedPublicKey={},this._sessionKey=null},t.end=function(){this.isFirstOTR=!0,this.reset(),this.setState(k.NOT_STARTED),d.stop(this.peerId,this.onPresenceEventHook),_.publish(\"notify-user\",[this.peerId+\"/otr\",\"end\",{roomId:this._roomId,userId:this._userId}])},t.reset=function(){this._keyPair=null,this._exportedPublicKey={},this._sessionKey=null,_.call(\"deleteOldOTRMessages\",this._roomId)},t.generateKeyPair=function(){var e=this;return s.async(function(t){for(;;)switch(t.prev=t.next){case 0:return this._userOnlineComputation&&this._userOnlineComputation.stop(),this._userOnlineComputation=l.autorun(function(){var t,r=document.querySelector(\"#chat-window-\"+e._roomId),n=null==r?void 0:r.querySelector(\".rc-header__title\");e.getState()===k.ESTABLISHED?r&&n&&!n.querySelector(\".otr-icon\")&&n.prepend(\"<i class='otr-icon icon-key'></i>\"):n&&(null===(t=n.querySelector(\".otr-icon\"))||void 0===t||t.remove())}),t.prev=2,t.next=5,s.awrap(T());case 5:if(this._keyPair=t.sent,this._keyPair.publicKey){t.next=8;break}throw Error(\"Public key is not generated\");case 8:return t.next=10,s.awrap(I(this._keyPair.publicKey));case 10:this._exportedPublicKey=t.sent,_.call(\"deleteOldOTRMessages\",this._roomId),t.next=18;break;case 14:throw t.prev=14,t.t0=t.catch(2),this.setState(k.ERROR),t.t0;case 18:case\"end\":return t.stop()}},null,this,[[2,14]],Promise)},t.importPublicKey=function(e){var t,r,n,i,o;return s.async(function(c){for(;;)switch(c.prev=c.next){case 0:if(c.prev=0,this._keyPair){c.next=3;break}throw Error(\"No key pair\");case 3:return t=a.parse(e),c.next=6,s.awrap(R(t));case 6:return r={name:\"ECDH\",namedCurve:\"P-256\",public:c.sent},c.next=10,s.awrap(v({ecdhObj:r,_keyPair:this._keyPair}));case 10:return n=c.sent,c.next=13,s.awrap(w(n));case 13:return i=c.sent,o=new Uint8Array(i).slice(0,16),c.next=17,s.awrap(g(o));case 17:this._sessionKey=c.sent,c.next=24;break;case 20:throw c.prev=20,c.t0=c.catch(0),this.setState(k.ERROR),c.t0;case 24:case\"end\":return c.stop()}},null,this,[[0,20]],Promise)},t.encryptText=function(e){var t,r,n;return s.async(function(i){for(;;)switch(i.prev=i.next){case 0:if(\"string\"==typeof e&&(e=new TextEncoder().encode(a.stringify({text:e,ack:o.id((o.fraction()+1)*20)}))),i.prev=1,this._sessionKey){i.next=4;break}throw Error(\"Session Key not available\");case 4:return t=crypto.getRandomValues(new Uint8Array(12)),i.next=7,s.awrap(x({iv:t,_sessionKey:this._sessionKey,data:e}));case 7:return r=i.sent,n=P({encryptedData:r,iv:t}),i.abrupt(\"return\",a.stringify(n));case 12:throw i.prev=12,i.t0=i.catch(1),this.setState(k.ERROR),new c.Error(\"encryption-error\",\"Encryption error.\");case 16:case\"end\":return i.stop()}},null,this,[[1,12]],Promise)},t.encrypt=function(e){var t,r;return s.async(function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,t=new TextEncoder().encode(a.stringify({_id:e._id,text:e.msg,userId:this._userId,ack:o.id((o.fraction()+1)*20),ts:new Date})),n.next=4,s.awrap(this.encryptText(t));case 4:return r=n.sent,n.abrupt(\"return\",r);case 8:throw n.prev=8,n.t0=n.catch(0),new c.Error(\"encryption-error\",\"Encryption error.\");case 11:case\"end\":return n.stop()}},null,this,[[0,8]],Promise)},t.decrypt=function(e){var t,r,i;return s.async(function(o){for(;;)switch(o.prev=o.next){case 0:if(o.prev=0,this._sessionKey){o.next=3;break}throw Error(\"Session Key not available.\");case 3:return t=a.parse(e),o.next=6,s.awrap(S(t,this._sessionKey));case 6:if(r=o.sent,!((i=a.parse(new TextDecoder(\"UTF-8\").decode(new Uint8Array(r))))&&\"object\"===n(i))){o.next=10;break}return o.abrupt(\"return\",i);case 10:return o.abrupt(\"return\",e);case 13:return o.prev=13,o.t0=o.catch(0),f({type:\"error\",message:o.t0}),this.setState(k.ERROR),o.abrupt(\"return\",e);case 18:case\"end\":return o.stop()}},null,this,[[0,13]],Promise)},t.onUserStream=function(e,t){var r,n,i,o,a,u=this;return s.async(function(l){for(;;)switch(l.prev=l.next){case 0:l.t0=e,l.next=\"handshake\"===l.t0?3:\"acknowledge\"===l.t0?29:\"deny\"===l.t0?46:\"end\"===l.t0?48:61;break;case 3:return n=function e(){return s.async(function e(e){for(;;)switch(e.prev=e.next){case 0:if(u.setState(k.ESTABLISHING),clearTimeout(r),e.prev=2,t.publicKey){e.next=5;break}throw Error(\"Public key is not generated\");case 5:return e.next=7,s.awrap(u.generateKeyPair());case 7:return e.next=9,s.awrap(u.importPublicKey(t.publicKey));case 9:return e.next=11,s.awrap(m(t.roomId));case 11:setTimeout(function e(){return s.async(function e(e){for(;;)switch(e.prev=e.next){case 0:if(u.setState(k.ESTABLISHED),u.acknowledge(),u.listenToUserStatus(),!t.refresh){e.next=6;break}return e.next=6,s.awrap(_.rest.post(\"/v1/chat.otr\",{roomId:u._roomId,type:E.USER_KEY_REFRESHED_SUCCESSFULLY}));case 6:case\"end\":return e.stop()}},null,null,null,Promise)},0),e.next=18;break;case 14:throw e.prev=14,e.t0=e.catch(2),f({type:\"error\",message:e.t0}),new c.Error(\"establish-connection-error\",\"Establish connection error.\");case 18:case\"end\":return e.stop()}},null,null,[[2,14]],Promise)},i=function(){clearTimeout(r),u.deny(),p.close()},l.prev=5,l.next=8,s.awrap(d.get(t.userId));case 8:if(null!=(o=l.sent)&&o.username){l.next=11;break}throw new c.Error(\"user-not-defined\",\"User not defined.\");case 11:if(!(t.refresh&&this.getState()===k.ESTABLISHED)){l.next=17;break}return this.reset(),l.next=15,s.awrap(n());case 15:l.next=23;break;case 17:if(this.getState()!==k.REQUESTED){l.next=19;break}return l.abrupt(\"return\");case 19:this.getState()===k.ESTABLISHED&&this.reset(),this.setState(k.REQUESTED),p.open({component:h,props:{variant:\"warning\",title:b(\"OTR\"),children:b(\"Username_wants_to_start_otr_Do_you_want_to_accept\",{username:o.username}),confirmText:b(\"Yes\"),cancelText:b(\"No\"),onClose:function(){return i()},onCancel:function(){return i()},onConfirm:function e(){return s.async(function e(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,s.awrap(n());case 2:p.close();case 3:case\"end\":return e.stop()}},null,null,null,Promise)}}}),r=setTimeout(function(){u.setState(k.TIMEOUT),p.close()},1e4);case 23:l.next=28;break;case 25:l.prev=25,l.t1=l.catch(5),f({type:\"error\",message:l.t1});case 28:return l.abrupt(\"break\",61);case 29:if(l.prev=29,t.publicKey){l.next=32;break}throw Error(\"Public key is not generated\");case 32:return l.next=34,s.awrap(this.importPublicKey(t.publicKey));case 34:if(this.setState(k.ESTABLISHED),!this.isFirstOTR){l.next=39;break}return this.listenToUserStatus(),l.next=39,s.awrap(_.rest.post(\"/v1/chat.otr\",{roomId:this._roomId,type:E.USER_JOINED_OTR}));case 39:this.isFirstOTR=!1,l.next=45;break;case 42:l.prev=42,l.t2=l.catch(29),f({type:\"error\",message:l.t2});case 45:return l.abrupt(\"break\",61);case 46:return this.getState()===k.ESTABLISHING&&(this.reset(),this.setState(k.DECLINED)),l.abrupt(\"break\",61);case 48:return l.prev=48,l.next=51,s.awrap(d.get(this.peerId));case 51:if(null!=(a=l.sent)&&a.username){l.next=54;break}throw new c.Error(\"user-not-defined\",\"User not defined.\");case 54:this.getState()===k.ESTABLISHED&&(this.reset(),this.setState(k.NOT_STARTED),p.open({component:h,props:{variant:\"warning\",title:b(\"OTR\"),children:b(\"Username_ended_the_OTR_session\",{username:a.username}),confirmText:b(\"Ok\"),onClose:p.close,onConfirm:p.close}})),l.next=60;break;case 57:l.prev=57,l.t3=l.catch(48),f({type:\"error\",message:l.t3});case 60:return l.abrupt(\"break\",61);case 61:case\"end\":return l.stop()}},null,this,[[5,25],[29,42],[48,57]],Promise)},e}()}","map":"{\"version\":3,\"sources\":[\"app/otr/client/OTRRoom.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, IMessage, IUser } from '@rocket.chat/core-typings';\\nimport { UserStatus } from '@rocket.chat/core-typings';\\nimport { Random } from '@rocket.chat/random';\\nimport EJSON from 'ejson';\\nimport { Meteor } from 'meteor/meteor';\\nimport { ReactiveVar } from 'meteor/reactive-var';\\nimport { Tracker } from 'meteor/tracker';\\n\\nimport GenericModal from '../../../client/components/GenericModal';\\nimport { imperativeModal } from '../../../client/lib/imperativeModal';\\nimport type { UserPresence } from '../../../client/lib/presence';\\nimport { Presence } from '../../../client/lib/presence';\\nimport { dispatchToastMessage } from '../../../client/lib/toast';\\nimport { getUidDirectMessage } from '../../../client/lib/utils/getUidDirectMessage';\\nimport { goToRoomById } from '../../../client/lib/utils/goToRoomById';\\nimport { sdk } from '../../utils/client/lib/SDKClient';\\nimport { t } from '../../utils/lib/i18n';\\nimport type { IOnUserStreamData, IOTRAlgorithm, IOTRDecrypt, IOTRRoom } from '../lib/IOTR';\\nimport { OtrRoomState } from '../lib/OtrRoomState';\\nimport { otrSystemMessages } from '../lib/constants';\\nimport {\\n\\tdecryptAES,\\n\\tderiveBits,\\n\\tdigest,\\n\\tencryptAES,\\n\\texportKey,\\n\\tgenerateKeyPair,\\n\\timportKey,\\n\\timportKeyRaw,\\n\\tjoinEncryptedData,\\n} from '../lib/functions';\\n\\nexport class OTRRoom implements IOTRRoom {\\n\\tprivate _userId: string;\\n\\n\\tprivate _roomId: string;\\n\\n\\tprivate _keyPair: CryptoKeyPair | null;\\n\\n\\tprivate _exportedPublicKey: JsonWebKey;\\n\\n\\tprivate _sessionKey: CryptoKey | null;\\n\\n\\tprivate _userOnlineComputation: Tracker.Computation;\\n\\n\\tprivate peerId: string;\\n\\n\\tprivate state: ReactiveVar<OtrRoomState> = new ReactiveVar(OtrRoomState.NOT_STARTED);\\n\\n\\tprivate isFirstOTR: boolean;\\n\\n\\tprivate onPresenceEventHook: (event: UserPresence | undefined) => void;\\n\\n\\tprotected constructor(uid: IUser['_id'], rid: IRoom['_id'], peerId: IUser['_id']) {\\n\\t\\tthis._userId = uid;\\n\\t\\tthis._roomId = rid;\\n\\t\\tthis._keyPair = null;\\n\\t\\tthis._sessionKey = null;\\n\\t\\tthis.peerId = peerId;\\n\\t\\tthis.isFirstOTR = true;\\n\\t\\tthis.onPresenceEventHook = this.onPresenceEvent.bind(this);\\n\\t}\\n\\n\\tpublic static create(uid: IUser['_id'], rid: IRoom['_id']): OTRRoom | undefined {\\n\\t\\tconst peerId = getUidDirectMessage(rid);\\n\\n\\t\\tif (!peerId) {\\n\\t\\t\\treturn undefined;\\n\\t\\t}\\n\\n\\t\\treturn new OTRRoom(uid, rid, peerId);\\n\\t}\\n\\n\\tgetPeerId(): string {\\n\\t\\treturn this.peerId;\\n\\t}\\n\\n\\tgetState(): OtrRoomState {\\n\\t\\treturn this.state.get();\\n\\t}\\n\\n\\tsetState(nextState: OtrRoomState): void {\\n\\t\\tif (this.getState() === nextState) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.state.set(nextState);\\n\\t}\\n\\n\\tasync handshake(refresh?: boolean): Promise<void> {\\n\\t\\tthis.setState(OtrRoomState.ESTABLISHING);\\n\\n\\t\\tawait this.generateKeyPair();\\n\\t\\tsdk.publish('notify-user', [\\n\\t\\t\\t`${this.peerId}/otr`,\\n\\t\\t\\t'handshake',\\n\\t\\t\\t{\\n\\t\\t\\t\\troomId: this._roomId,\\n\\t\\t\\t\\tuserId: this._userId,\\n\\t\\t\\t\\tpublicKey: EJSON.stringify(this._exportedPublicKey),\\n\\t\\t\\t\\trefresh,\\n\\t\\t\\t},\\n\\t\\t]);\\n\\n\\t\\tif (refresh) {\\n\\t\\t\\tconst user = Meteor.user();\\n\\t\\t\\tif (!user) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tawait sdk.rest.post('/v1/chat.otr', {\\n\\t\\t\\t\\troomId: this._roomId,\\n\\t\\t\\t\\ttype: otrSystemMessages.USER_REQUESTED_OTR_KEY_REFRESH,\\n\\t\\t\\t});\\n\\t\\t\\tthis.isFirstOTR = false;\\n\\t\\t}\\n\\t}\\n\\n\\tonPresenceEvent(event: UserPresence | undefined): void {\\n\\t\\tif (!event) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tif (event.status !== UserStatus.OFFLINE) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tconsole.warn(`OTR Room ${this._roomId} ended because ${this.peerId} went offline`);\\n\\t\\tthis.end();\\n\\n\\t\\timperativeModal.open({\\n\\t\\t\\tcomponent: GenericModal,\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\tvariant: 'warning',\\n\\t\\t\\t\\ttitle: t('OTR'),\\n\\t\\t\\t\\tchildren: t('OTR_Session_ended_other_user_went_offline', { username: event.username }),\\n\\t\\t\\t\\tconfirmText: t('Ok'),\\n\\t\\t\\t\\tonClose: imperativeModal.close,\\n\\t\\t\\t\\tonConfirm: imperativeModal.close,\\n\\t\\t\\t},\\n\\t\\t});\\n\\t}\\n\\n\\t// Starts listening to other user's status changes and end OTR if any of the Users goes offline\\n\\t// this should be called in 2 places: on acknowledge (meaning user accepted OTR) or on establish (meaning user initiated OTR)\\n\\tlistenToUserStatus(): void {\\n\\t\\tPresence.listen(this.peerId, this.onPresenceEventHook);\\n\\t}\\n\\n\\tacknowledge(): void {\\n\\t\\tvoid sdk.rest.post('/v1/statistics.telemetry', { params: [{ eventName: 'otrStats', timestamp: Date.now(), rid: this._roomId }] });\\n\\n\\t\\tsdk.publish('notify-user', [\\n\\t\\t\\t`${this.peerId}/otr`,\\n\\t\\t\\t'acknowledge',\\n\\t\\t\\t{\\n\\t\\t\\t\\troomId: this._roomId,\\n\\t\\t\\t\\tuserId: this._userId,\\n\\t\\t\\t\\tpublicKey: EJSON.stringify(this._exportedPublicKey),\\n\\t\\t\\t},\\n\\t\\t]);\\n\\t}\\n\\n\\tdeny(): void {\\n\\t\\tthis.reset();\\n\\t\\tthis.setState(OtrRoomState.DECLINED);\\n\\t\\tsdk.publish('notify-user', [\\n\\t\\t\\t`${this.peerId}/otr`,\\n\\t\\t\\t'deny',\\n\\t\\t\\t{\\n\\t\\t\\t\\troomId: this._roomId,\\n\\t\\t\\t\\tuserId: this._userId,\\n\\t\\t\\t},\\n\\t\\t]);\\n\\t}\\n\\n\\tsoftReset(): void {\\n\\t\\tthis.isFirstOTR = true;\\n\\t\\tthis.setState(OtrRoomState.NOT_STARTED);\\n\\t\\tthis._keyPair = null;\\n\\t\\tthis._exportedPublicKey = {};\\n\\t\\tthis._sessionKey = null;\\n\\t}\\n\\n\\tend(): void {\\n\\t\\tthis.isFirstOTR = true;\\n\\t\\tthis.reset();\\n\\t\\tthis.setState(OtrRoomState.NOT_STARTED);\\n\\t\\tPresence.stop(this.peerId, this.onPresenceEventHook);\\n\\t\\tsdk.publish('notify-user', [\\n\\t\\t\\t`${this.peerId}/otr`,\\n\\t\\t\\t'end',\\n\\t\\t\\t{\\n\\t\\t\\t\\troomId: this._roomId,\\n\\t\\t\\t\\tuserId: this._userId,\\n\\t\\t\\t},\\n\\t\\t]);\\n\\t}\\n\\n\\treset(): void {\\n\\t\\tthis._keyPair = null;\\n\\t\\tthis._exportedPublicKey = {};\\n\\t\\tthis._sessionKey = null;\\n\\t\\tvoid sdk.call('deleteOldOTRMessages', this._roomId);\\n\\t}\\n\\n\\tasync generateKeyPair(): Promise<void> {\\n\\t\\tif (this._userOnlineComputation) {\\n\\t\\t\\tthis._userOnlineComputation.stop();\\n\\t\\t}\\n\\n\\t\\tthis._userOnlineComputation = Tracker.autorun(() => {\\n\\t\\t\\tconst $room = document.querySelector(`#chat-window-${this._roomId}`);\\n\\t\\t\\tconst $title = $room?.querySelector('.rc-header__title');\\n\\t\\t\\tif (this.getState() === OtrRoomState.ESTABLISHED) {\\n\\t\\t\\t\\tif ($room && $title && !$title.querySelector('.otr-icon')) {\\n\\t\\t\\t\\t\\t$title.prepend(\\\"<i class='otr-icon icon-key'></i>\\\");\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if ($title) {\\n\\t\\t\\t\\t$title.querySelector('.otr-icon')?.remove();\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\ttry {\\n\\t\\t\\t// Generate an ephemeral key pair.\\n\\t\\t\\tthis._keyPair = await generateKeyPair();\\n\\n\\t\\t\\tif (!this._keyPair.publicKey) {\\n\\t\\t\\t\\tthrow new Error('Public key is not generated');\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis._exportedPublicKey = await exportKey(this._keyPair.publicKey);\\n\\n\\t\\t\\t// Once we have generated new keys, it's safe to delete old messages\\n\\t\\t\\tvoid sdk.call('deleteOldOTRMessages', this._roomId);\\n\\t\\t} catch (e) {\\n\\t\\t\\tthis.setState(OtrRoomState.ERROR);\\n\\t\\t\\tthrow e;\\n\\t\\t}\\n\\t}\\n\\n\\tasync importPublicKey(publicKey: string): Promise<void> {\\n\\t\\ttry {\\n\\t\\t\\tif (!this._keyPair) throw new Error('No key pair');\\n\\t\\t\\tconst publicKeyObject: JsonWebKey = EJSON.parse(publicKey);\\n\\t\\t\\tconst peerPublicKey = await importKey(publicKeyObject);\\n\\t\\t\\tconst ecdhObj: IOTRAlgorithm = {\\n\\t\\t\\t\\tname: 'ECDH',\\n\\t\\t\\t\\tnamedCurve: 'P-256',\\n\\t\\t\\t\\tpublic: peerPublicKey,\\n\\t\\t\\t};\\n\\t\\t\\tconst bits = await deriveBits({ ecdhObj, _keyPair: this._keyPair });\\n\\t\\t\\tconst hashedBits = await digest(bits);\\n\\t\\t\\t// We truncate the hash to 128 bits.\\n\\t\\t\\tconst sessionKeyData = new Uint8Array(hashedBits).slice(0, 16);\\n\\t\\t\\t// Session key available.\\n\\t\\t\\tthis._sessionKey = await importKeyRaw(sessionKeyData);\\n\\t\\t} catch (e) {\\n\\t\\t\\tthis.setState(OtrRoomState.ERROR);\\n\\t\\t\\tthrow e;\\n\\t\\t}\\n\\t}\\n\\n\\tasync encryptText(data: string | Uint8Array): Promise<string> {\\n\\t\\tif (typeof data === 'string') {\\n\\t\\t\\tdata = new TextEncoder().encode(EJSON.stringify({ text: data, ack: Random.id((Random.fraction() + 1) * 20) }));\\n\\t\\t}\\n\\t\\ttry {\\n\\t\\t\\tif (!this._sessionKey) throw new Error('Session Key not available');\\n\\n\\t\\t\\tconst iv = crypto.getRandomValues(new Uint8Array(12));\\n\\t\\t\\tconst encryptedData = await encryptAES({ iv, _sessionKey: this._sessionKey, data });\\n\\n\\t\\t\\tconst output = joinEncryptedData({ encryptedData, iv });\\n\\n\\t\\t\\treturn EJSON.stringify(output);\\n\\t\\t} catch (e) {\\n\\t\\t\\tthis.setState(OtrRoomState.ERROR);\\n\\t\\t\\tthrow new Meteor.Error('encryption-error', 'Encryption error.');\\n\\t\\t}\\n\\t}\\n\\n\\tasync encrypt(message: Pick<IMessage, '_id' | 'msg'>): Promise<string> {\\n\\t\\ttry {\\n\\t\\t\\tconst data = new TextEncoder().encode(\\n\\t\\t\\t\\tEJSON.stringify({\\n\\t\\t\\t\\t\\t_id: message._id,\\n\\t\\t\\t\\t\\ttext: message.msg,\\n\\t\\t\\t\\t\\tuserId: this._userId,\\n\\t\\t\\t\\t\\tack: Random.id((Random.fraction() + 1) * 20),\\n\\t\\t\\t\\t\\tts: new Date(),\\n\\t\\t\\t\\t}),\\n\\t\\t\\t);\\n\\t\\t\\tconst enc = await this.encryptText(data);\\n\\t\\t\\treturn enc;\\n\\t\\t} catch (e) {\\n\\t\\t\\tthrow new Meteor.Error('encryption-error', 'Encryption error.');\\n\\t\\t}\\n\\t}\\n\\n\\tasync decrypt(message: string): Promise<IOTRDecrypt | string> {\\n\\t\\ttry {\\n\\t\\t\\tif (!this._sessionKey) throw new Error('Session Key not available.');\\n\\n\\t\\t\\tconst cipherText: Uint8Array = EJSON.parse(message);\\n\\t\\t\\tconst data = await decryptAES(cipherText, this._sessionKey);\\n\\t\\t\\tconst msgDecoded: IOTRDecrypt = EJSON.parse(new TextDecoder('UTF-8').decode(new Uint8Array(data)));\\n\\t\\t\\tif (msgDecoded && typeof msgDecoded === 'object') {\\n\\t\\t\\t\\treturn msgDecoded;\\n\\t\\t\\t}\\n\\t\\t\\treturn message;\\n\\t\\t} catch (e) {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: e });\\n\\t\\t\\tthis.setState(OtrRoomState.ERROR);\\n\\t\\t\\treturn message;\\n\\t\\t}\\n\\t}\\n\\n\\tasync onUserStream(type: string, data: IOnUserStreamData): Promise<void> {\\n\\t\\tswitch (type) {\\n\\t\\t\\tcase 'handshake':\\n\\t\\t\\t\\tlet timeout: NodeJS.Timeout;\\n\\n\\t\\t\\t\\tconst establishConnection = async (): Promise<void> => {\\n\\t\\t\\t\\t\\tthis.setState(OtrRoomState.ESTABLISHING);\\n\\t\\t\\t\\t\\tclearTimeout(timeout);\\n\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\tif (!data.publicKey) throw new Error('Public key is not generated');\\n\\t\\t\\t\\t\\t\\tawait this.generateKeyPair();\\n\\t\\t\\t\\t\\t\\tawait this.importPublicKey(data.publicKey);\\n\\t\\t\\t\\t\\t\\tawait goToRoomById(data.roomId);\\n\\t\\t\\t\\t\\t\\tsetTimeout(async () => {\\n\\t\\t\\t\\t\\t\\t\\tthis.setState(OtrRoomState.ESTABLISHED);\\n\\t\\t\\t\\t\\t\\t\\tthis.acknowledge();\\n\\t\\t\\t\\t\\t\\t\\tthis.listenToUserStatus();\\n\\n\\t\\t\\t\\t\\t\\t\\tif (data.refresh) {\\n\\t\\t\\t\\t\\t\\t\\t\\tawait sdk.rest.post('/v1/chat.otr', {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\troomId: this._roomId,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype: otrSystemMessages.USER_KEY_REFRESHED_SUCCESSFULLY,\\n\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}, 0);\\n\\t\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: e });\\n\\t\\t\\t\\t\\t\\tthrow new Meteor.Error('establish-connection-error', 'Establish connection error.');\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\tconst closeOrCancelModal = (): void => {\\n\\t\\t\\t\\t\\tclearTimeout(timeout);\\n\\t\\t\\t\\t\\tthis.deny();\\n\\t\\t\\t\\t\\timperativeModal.close();\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tconst obj = await Presence.get(data.userId);\\n\\t\\t\\t\\t\\tif (!obj?.username) {\\n\\t\\t\\t\\t\\t\\tthrow new Meteor.Error('user-not-defined', 'User not defined.');\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (data.refresh && this.getState() === OtrRoomState.ESTABLISHED) {\\n\\t\\t\\t\\t\\t\\tthis.reset();\\n\\t\\t\\t\\t\\t\\tawait establishConnection();\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t/* \\tWe have to check if there's an in progress handshake request because\\n\\t\\t\\t\\t\\t\\t\\tNotifications.notifyUser will sometimes dispatch 2 events */\\n\\t\\t\\t\\t\\t\\tif (this.getState() === OtrRoomState.REQUESTED) {\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif (this.getState() === OtrRoomState.ESTABLISHED) {\\n\\t\\t\\t\\t\\t\\t\\tthis.reset();\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tthis.setState(OtrRoomState.REQUESTED);\\n\\t\\t\\t\\t\\t\\timperativeModal.open({\\n\\t\\t\\t\\t\\t\\t\\tcomponent: GenericModal,\\n\\t\\t\\t\\t\\t\\t\\tprops: {\\n\\t\\t\\t\\t\\t\\t\\t\\tvariant: 'warning',\\n\\t\\t\\t\\t\\t\\t\\t\\ttitle: t('OTR'),\\n\\t\\t\\t\\t\\t\\t\\t\\tchildren: t('Username_wants_to_start_otr_Do_you_want_to_accept', {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tusername: obj.username,\\n\\t\\t\\t\\t\\t\\t\\t\\t}),\\n\\t\\t\\t\\t\\t\\t\\t\\tconfirmText: t('Yes'),\\n\\t\\t\\t\\t\\t\\t\\t\\tcancelText: t('No'),\\n\\t\\t\\t\\t\\t\\t\\t\\tonClose: (): void => closeOrCancelModal(),\\n\\t\\t\\t\\t\\t\\t\\t\\tonCancel: (): void => closeOrCancelModal(),\\n\\t\\t\\t\\t\\t\\t\\t\\tonConfirm: async (): Promise<void> => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tawait establishConnection();\\n\\t\\t\\t\\t\\t\\t\\t\\t\\timperativeModal.close();\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\ttimeout = setTimeout(() => {\\n\\t\\t\\t\\t\\t\\t\\tthis.setState(OtrRoomState.TIMEOUT);\\n\\t\\t\\t\\t\\t\\t\\timperativeModal.close();\\n\\t\\t\\t\\t\\t\\t}, 10000);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: e });\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 'acknowledge':\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tif (!data.publicKey) throw new Error('Public key is not generated');\\n\\t\\t\\t\\t\\tawait this.importPublicKey(data.publicKey);\\n\\n\\t\\t\\t\\t\\tthis.setState(OtrRoomState.ESTABLISHED);\\n\\n\\t\\t\\t\\t\\tif (this.isFirstOTR) {\\n\\t\\t\\t\\t\\t\\tthis.listenToUserStatus();\\n\\t\\t\\t\\t\\t\\tawait sdk.rest.post('/v1/chat.otr', {\\n\\t\\t\\t\\t\\t\\t\\troomId: this._roomId,\\n\\t\\t\\t\\t\\t\\t\\ttype: otrSystemMessages.USER_JOINED_OTR,\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tthis.isFirstOTR = false;\\n\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: e });\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 'deny':\\n\\t\\t\\t\\tif (this.getState() === OtrRoomState.ESTABLISHING) {\\n\\t\\t\\t\\t\\tthis.reset();\\n\\t\\t\\t\\t\\tthis.setState(OtrRoomState.DECLINED);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 'end':\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tconst obj = await Presence.get(this.peerId);\\n\\t\\t\\t\\t\\tif (!obj?.username) {\\n\\t\\t\\t\\t\\t\\tthrow new Meteor.Error('user-not-defined', 'User not defined.');\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (this.getState() === OtrRoomState.ESTABLISHED) {\\n\\t\\t\\t\\t\\t\\tthis.reset();\\n\\t\\t\\t\\t\\t\\tthis.setState(OtrRoomState.NOT_STARTED);\\n\\t\\t\\t\\t\\t\\timperativeModal.open({\\n\\t\\t\\t\\t\\t\\t\\tcomponent: GenericModal,\\n\\t\\t\\t\\t\\t\\t\\tprops: {\\n\\t\\t\\t\\t\\t\\t\\t\\tvariant: 'warning',\\n\\t\\t\\t\\t\\t\\t\\t\\ttitle: t('OTR'),\\n\\t\\t\\t\\t\\t\\t\\t\\tchildren: t('Username_ended_the_OTR_session', { username: obj.username }),\\n\\t\\t\\t\\t\\t\\t\\t\\tconfirmText: t('Ok'),\\n\\t\\t\\t\\t\\t\\t\\t\\tonClose: imperativeModal.close,\\n\\t\\t\\t\\t\\t\\t\\t\\tonConfirm: imperativeModal.close,\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: e });\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n}\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_typeof\",\"_regeneratorRuntime\",\"export\",\"OTRRoom\",\"UserStatus\",\"Random\",\"EJSON\",\"Meteor\",\"ReactiveVar\",\"Tracker\",\"GenericModal\",\"imperativeModal\",\"Presence\",\"dispatchToastMessage\",\"getUidDirectMessage\",\"goToRoomById\",\"sdk\",\"t\",\"OtrRoomState\",\"otrSystemMessages\",\"decryptAES\",\"deriveBits\",\"digest\",\"encryptAES\",\"exportKey\",\"generateKeyPair\",\"importKey\",\"importKeyRaw\",\"joinEncryptedData\",\"uid\",\"rid\",\"peerId\",\"_userId\",\"_roomId\",\"_keyPair\",\"_exportedPublicKey\",\"_sessionKey\",\"_userOnlineComputation\",\"state\",\"NOT_STARTED\",\"isFirstOTR\",\"onPresenceEventHook\",\"onPresenceEvent\",\"bind\",\"create\",\"_proto\",\"prototype\",\"getPeerId\",\"getState\",\"get\",\"setState\",\"nextState\",\"set\",\"handshake\",\"refresh\",\"async\",\"_context\",\"prev\",\"next\",\"ESTABLISHING\",\"awrap\",\"publish\",\"roomId\",\"userId\",\"publicKey\",\"stringify\",\"user\",\"abrupt\",\"rest\",\"post\",\"type\",\"USER_REQUESTED_OTR_KEY_REFRESH\",\"stop\",\"Promise\",\"event\",\"status\",\"OFFLINE\",\"console\",\"warn\",\"end\",\"open\",\"component\",\"props\",\"variant\",\"title\",\"children\",\"username\",\"confirmText\",\"onClose\",\"close\",\"onConfirm\",\"listenToUserStatus\",\"listen\",\"acknowledge\",\"params\",\"eventName\",\"timestamp\",\"Date\",\"now\",\"deny\",\"reset\",\"DECLINED\",\"softReset\",\"call\",\"_this\",\"_context2\",\"autorun\",\"_$title$querySelector\",\"$room\",\"document\",\"querySelector\",\"$title\",\"ESTABLISHED\",\"prepend\",\"remove\",\"sent\",\"Error\",\"t0\",\"ERROR\",\"importPublicKey\",\"publicKeyObject\",\"ecdhObj\",\"bits\",\"hashedBits\",\"sessionKeyData\",\"_context3\",\"parse\",\"name\",\"namedCurve\",\"Uint8Array\",\"slice\",\"encryptText\",\"data\",\"iv\",\"encryptedData\",\"output\",\"_context4\",\"TextEncoder\",\"encode\",\"text\",\"ack\",\"id\",\"fraction\",\"crypto\",\"getRandomValues\",\"encrypt\",\"message\",\"enc\",\"_context5\",\"_id\",\"msg\",\"ts\",\"decrypt\",\"cipherText\",\"msgDecoded\",\"_context6\",\"TextDecoder\",\"decode\",\"onUserStream\",\"timeout\",\"establishConnection\",\"closeOrCancelModal\",\"obj\",\"_obj\",\"_this2\",\"_context10\",\"_callee2\",\"_callee2$\",\"_context8\",\"clearTimeout\",\"setTimeout\",\"_callee\",\"_callee$\",\"_context7\",\"USER_KEY_REFRESHED_SUCCESSFULLY\",\"REQUESTED\",\"cancelText\",\"onCancel\",\"_callee3\",\"_callee3$\",\"_context9\",\"TIMEOUT\",\"t1\",\"USER_JOINED_OTR\",\"t2\",\"t3\"],\"mappings\":\"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\"}"}