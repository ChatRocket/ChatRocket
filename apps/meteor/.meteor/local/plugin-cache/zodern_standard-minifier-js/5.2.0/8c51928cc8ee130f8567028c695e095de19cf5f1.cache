{"code":"function module(e,n,t){var r,a,o,c,u,l,i,f,s,d,E,m;t.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(e){r=e}},0),t.link(\"@rocket.chat/fuselage\",{States:function(e){a=e},StatesAction:function(e){o=e},StatesActions:function(e){c=e},StatesIcon:function(e){u=e},StatesSubtitle:function(e){l=e},StatesTitle:function(e){i=e}},0),t.link(\"@tanstack/react-query\",{QueryErrorResetBoundary:function(e){f=e}},1),t.link(\"react\",{default:function(e){s=e},useState:function(e){d=e}},2),t.link(\"react-error-boundary\",{ErrorBoundary:function(e){E=e}},3),t.link(\"react-i18next\",{useTranslation:function(e){m=e}},4),t.exportDefault(function(e){var n=e.children,t=m().t,k=d(),y=r(k,2),S=y[0],g=y[1],h=function(e,n){g(e),console.error(\"Uncaught Error:\",e,n)};return s.createElement(f,null,function(e){var r=e.reset;return s.createElement(E,{children:n,onError:h,onReset:r,fallbackRender:function(e){var n=e.resetErrorBoundary;return s.createElement(a,null,s.createElement(u,{name:\"circle-exclamation\"}),s.createElement(i,null,t(\"Something_went_wrong\")),s.createElement(l,null,S instanceof Error&&(null==S?void 0:S.message)),s.createElement(c,{\"data-qa\":\"EngagementDashboardCardErrorBoundary\"},s.createElement(o,{onClick:function(){return n()}},t(\"Retry\"))))}})})})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/engagementDashboard/EngagementDashboardCardErrorBoundary.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { States, StatesAction, StatesActions, StatesIcon, StatesSubtitle, StatesTitle } from '@rocket.chat/fuselage';\\nimport { QueryErrorResetBoundary } from '@tanstack/react-query';\\nimport type { ReactElement, ReactNode } from 'react';\\nimport React, { useState } from 'react';\\nimport { ErrorBoundary } from 'react-error-boundary';\\nimport { useTranslation } from 'react-i18next';\\n\\ntype EngagementDashboardCardErrorBoundaryProps = {\\n\\tchildren?: ReactNode;\\n};\\n\\nconst EngagementDashboardCardErrorBoundary = ({ children }: EngagementDashboardCardErrorBoundaryProps): ReactElement => {\\n\\tconst { t } = useTranslation();\\n\\n\\tconst [error, setError] = useState<Error>();\\n\\tconst isError = (error: unknown): error is Error => error instanceof Error;\\n\\n\\tconst errorHandler = (error: Error, info: { componentStack: string }): void => {\\n\\t\\tsetError(error);\\n\\t\\tconsole.error('Uncaught Error:', error, info);\\n\\t};\\n\\n\\treturn (\\n\\t\\t<QueryErrorResetBoundary>\\n\\t\\t\\t{({ reset }): ReactElement => (\\n\\t\\t\\t\\t<ErrorBoundary\\n\\t\\t\\t\\t\\tchildren={children}\\n\\t\\t\\t\\t\\tonError={errorHandler}\\n\\t\\t\\t\\t\\tonReset={reset}\\n\\t\\t\\t\\t\\tfallbackRender={({ resetErrorBoundary }): ReactElement => (\\n\\t\\t\\t\\t\\t\\t<States>\\n\\t\\t\\t\\t\\t\\t\\t<StatesIcon name='circle-exclamation' />\\n\\t\\t\\t\\t\\t\\t\\t<StatesTitle>{t('Something_went_wrong')}</StatesTitle>\\n\\t\\t\\t\\t\\t\\t\\t<StatesSubtitle>{isError(error) && error?.message}</StatesSubtitle>\\n\\t\\t\\t\\t\\t\\t\\t<StatesActions data-qa='EngagementDashboardCardErrorBoundary'>\\n\\t\\t\\t\\t\\t\\t\\t\\t<StatesAction onClick={(): void => resetErrorBoundary()}>{t('Retry')}</StatesAction>\\n\\t\\t\\t\\t\\t\\t\\t</StatesActions>\\n\\t\\t\\t\\t\\t\\t</States>\\n\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t)}\\n\\t\\t</QueryErrorResetBoundary>\\n\\t);\\n};\\n\\nexport default EngagementDashboardCardErrorBoundary;\\n\",null],\"names\":[\"_slicedToArray\",\"States\",\"StatesAction\",\"StatesActions\",\"StatesIcon\",\"StatesSubtitle\",\"StatesTitle\",\"QueryErrorResetBoundary\",\"React\",\"useState\",\"ErrorBoundary\",\"useTranslation\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"children\",\"t\",\"_useTranslation\",\"_useState\",\"_useState2\",\"error\",\"setError\",\"errorHandler\",\"info\",\"console\",\"createElement\",\"_ref2\",\"reset\",\"onError\",\"onReset\",\"fallbackRender\",\"_ref3\",\"resetErrorBoundary\",\"name\",\"isError\",\"Error\",\"message\",\"onClick\"],\"mappings\":\"uBAWA,IAXAA,EAAAC,EAASC,EAAQC,EAAcC,EAAeC,EAAYC,EAA2DC,EAAAC,EAAAC,EAAAC,EAAAC,EAApGC,EAAAC,IAAY,CAAE,uCAA2B,CAAAC,QAAgB,SAAaC,CAAA,EAAAf,EAAMe,CAAA,CAAA,EAAA,GAAnBH,EAAAC,IAAa,CAAA,wBAAM,CAAAZ,OAAwB,SAAAc,CAAA,EAAAd,EAAAc,CAAA,EAAAb,aAAA,SAAAa,CAAA,EAAAb,EAAAa,CAAA,EAAAZ,cAAA,SAAAY,CAAA,EAAAZ,EAAAY,CAAA,EAAAX,WAAA,SAAAW,CAAA,EAAAX,EAAAW,CAAA,EAAAV,eAAA,SAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,YAAA,SAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wBAAA,CAAAN,wBAAA,SAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAA,QAAA,SAAAE,CAAA,EAAAP,EAAAO,CAAA,EAAAN,SAAA,SAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uBAAA,CAAAH,cAAA,SAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,gBAAA,CAAAF,eAAA,SAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAArHH,EAAOI,aAAU,CAW4B,SAAAC,CAAA,EAA0E,IAAvEC,EAAQD,EAARC,QAAQ,CAC/CC,EAACC,AAAKT,IAANQ,CAAC,CAETE,EAA0BZ,IAAiBa,EAAAtB,EAAAqB,EAAA,GAApCE,EAAKD,CAAA,CAAA,EAAA,CAAEE,EAAQF,CAAA,CAAA,EAAA,CAGhBG,EAAe,SAACF,CAAY,CAAEG,CAAgC,EACnEF,EAASD,GACTI,QAAQJ,KAAK,CAAC,kBAAmBA,EAAOG,EACzC,EAEA,OACClB,EAAAoB,aAAA,CAACrB,EAAuB,KACtB,SAAAsB,CAAA,EAAA,IAAGC,EAAKD,EAALC,KAAK,CAAA,OACRtB,EAAAoB,aAAA,CAAClB,EAAa,CACbQ,SAAUA,EACVa,QAASN,EACTO,QAASF,EACTG,eAAgB,SAAAC,CAAA,EAAA,IAAGC,EAAkBD,EAAlBC,kBAAkB,CAAA,OACpC3B,EAAAoB,aAAA,CAAC3B,EAAM,KACNO,EAAAoB,aAAA,CAACxB,EAAU,CAACgC,KAAK,oBAAoB,GACrC5B,EAAAoB,aAAA,CAACtB,EAAW,KAAEa,EAAE,yBAChBX,EAAAoB,aAAA,CAACvB,EAAc,KAAEgC,AAAQd,aAlBsCe,OAkB5Bf,CAAAA,MAAAA,EAAK,KAAA,EAALA,EAAOgB,OAAO,AAAPA,GAC1C/B,EAAAoB,aAAA,CAACzB,EAAa,CAAC,UAAQ,sCAAsC,EAC5DK,EAAAoB,aAAA,CAAC1B,EAAY,CAACsC,QAAS,WAAA,OAAYL,GAAoB,CAAC,EAAEhB,EAAE,WAErD,CACR,EACD,EAIN\"}"}