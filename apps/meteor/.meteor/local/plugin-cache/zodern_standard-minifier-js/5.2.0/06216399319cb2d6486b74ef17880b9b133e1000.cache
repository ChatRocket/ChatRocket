{"code":"function module(e,t,n){n.link(\"@babel/runtime/regenerator\",{default:function(e){r=e}},0),n.export({useE2EEResetRoomKey:function(){return s}}),n.link(\"@rocket.chat/ui-contexts\",{useEndpoint:function(e){a=e}},0),n.link(\"@tanstack/react-query\",{useMutation:function(e){o=e}},1),n.link(\"../../../../app/e2e/client\",{e2e:function(e){c=e}},2);var r,a,o,c,s=function(e){var t=a(\"POST\",\"/v1/e2e.resetRoomKey\");return o(function(e){var n,a,o,s,u,i;return r.async(function(f){for(;;)switch(f.prev=f.next){case 0:return a=e.roomId,f.next=3,r.awrap(c.getInstanceByRoomId(a));case 3:if(o=f.sent){f.next=6;break}throw Error(\"Cannot reset room key\");case 6:return f.next=8,r.awrap(o.resetRoomKey());case 8:if(f.t1=n=f.sent,f.t0=null!==f.t1,!f.t0){f.next=12;break}f.t0=void 0!==n;case 12:if(!f.t0){f.next=16;break}f.t2=n,f.next=17;break;case 16:f.t2={};case 17:if(u=(s=f.t2).e2eKey,i=s.e2eKeyId,!(!u||!i)){f.next=22;break}throw Error(\"Cannot reset room key\");case 22:return f.prev=22,f.next=25,r.awrap(t({rid:a,e2eKeyId:i,e2eKey:u}));case 25:f.next=30;break;case 27:throw f.prev=27,f.t3=f.catch(22),f.t3;case 30:case\"end\":return f.stop()}},null,null,[[22,27]],Promise)},e)}}","map":"{\"version\":3,\"sources\":[\"client/views/room/hooks/useE2EEResetRoomKey.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { RoomID } from '@rocket.chat/core-typings';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport type { UseMutationOptions, UseMutationResult } from '@tanstack/react-query';\\nimport { useMutation } from '@tanstack/react-query';\\n\\nimport { e2e } from '../../../../app/e2e/client';\\n\\ntype UseE2EEResetRoomKeyVariables = {\\n\\troomId: RoomID;\\n};\\n\\nexport const useE2EEResetRoomKey = (\\n\\toptions?: Omit<UseMutationOptions<void, Error, UseE2EEResetRoomKeyVariables>, 'mutationFn'>,\\n): UseMutationResult<void, Error, UseE2EEResetRoomKeyVariables> => {\\n\\tconst resetRoomKey = useEndpoint('POST', '/v1/e2e.resetRoomKey');\\n\\n\\treturn useMutation(async ({ roomId }) => {\\n\\t\\tconst e2eRoom = await e2e.getInstanceByRoomId(roomId);\\n\\t\\tif (!e2eRoom) {\\n\\t\\t\\tthrow new Error('Cannot reset room key');\\n\\t\\t}\\n\\n\\t\\tconst { e2eKey, e2eKeyId } = (await e2eRoom.resetRoomKey()) ?? {};\\n\\n\\t\\tif (!e2eKey || !e2eKeyId) {\\n\\t\\t\\tthrow new Error('Cannot reset room key');\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tawait resetRoomKey({ rid: roomId, e2eKeyId, e2eKey });\\n\\t\\t} catch (error) {\\n\\t\\t\\tthrow error;\\n\\t\\t}\\n\\t}, options);\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"export\",\"useE2EEResetRoomKey\",\"useEndpoint\",\"useMutation\",\"e2e\",\"options\",\"resetRoomKey\",\"_ref\",\"_await$e2eRoom$resetR\",\"roomId\",\"e2eRoom\",\"_ref2\",\"e2eKey\",\"e2eKeyId\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"getInstanceByRoomId\",\"sent\",\"Error\",\"t1\",\"t0\",\"t2\",\"rid\",\"t3\",\"stop\",\"Promise\"],\"mappings\":\"uBACsBA,EAAMC,IAAA,CAAA,6BAA2B,CAAAC,QAAA,SAAAC,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAAvDH,EAAOK,MAAE,CAAA,CAAAC,oBAAmB,WAAA,OAAAA,CAA2B,CAAA,GAAAN,EAAAC,IAAA,CAAA,2BAAA,CAAAM,YAAA,SAAAJ,CAAA,EAAAI,EAAAJ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wBAAA,CAAAO,YAAA,SAAAL,CAAA,EAAAK,EAAAL,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,6BAAA,CAAAQ,IAAA,SAAAN,CAAA,EAAAM,EAAAN,CAAA,CAAA,EAAA,GAUhD,IAVPC,EAAuDG,EAAAC,EAAAC,EAU1CH,EAAsB,SAClCI,CAA2F,EAE3F,IAAMC,EAAeJ,EAAY,OAAQ,wBAEzC,OAAOC,EAAY,SAAAI,CAAA,MAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAd,EAAAe,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAe,OAANR,EAAMF,EAANE,MAAM,CAAAM,EAAAE,IAAA,CAAA,EAAAlB,EAAAmB,KAAA,CACXd,EAAIe,mBAAmB,CAACV,GAAO,MAAA,EAAxC,GAAPC,EAAOK,EAAAK,IAAA,CACD,CAAAL,EAAAE,IAAA,CAAA,EAAA,KAAA,CAAA,MACL,AAAII,MAAM,wBAAwB,MAAA,EAAA,OAAAN,EAAAE,IAAA,CAAA,EAAAlB,EAAAmB,KAAA,CAGLR,EAAQJ,YAAY,GAAE,MAAA,EAAA,GAAAS,EAAAO,EAAA,CAAAd,EAAAO,EAAAK,IAAA,CAAAL,EAAAQ,EAAA,CAAAR,AAAA,OAAAA,EAAAO,EAAA,CAAA,CAAAP,EAAAQ,EAAA,CAAA,CAAAR,EAAAE,IAAA,CAAA,GAAA,KAAA,CAAAF,EAAAQ,EAAA,CAAAf,AAAA,KAAA,IAAAA,CAAA,MAAA,GAAA,GAAA,CAAAO,EAAAQ,EAAA,CAAA,CAAAR,EAAAE,IAAA,CAAA,GAAA,KAAA,CAAAF,EAAAS,EAAA,CAAAhB,EAAAO,EAAAE,IAAA,CAAA,GAAA,KAAA,MAAA,GAAAF,EAAAS,EAAA,CAAK,CAAA,CAAE,MAAA,GAAzC,GAAhBZ,EAAMD,AAAmDA,CAAAA,EAAAI,EAAAS,EAAA,AAAAA,EAAzDZ,MAAM,CAAEC,EAAQF,EAARE,QAAQ,CAAA,CAEpB,CAAA,CAACD,GAAU,CAACC,CAAAA,EAAQ,CAAAE,EAAAE,IAAA,CAAA,GAAA,KAAA,CAAA,MACjB,AAAII,MAAM,wBAAwB,MAAA,GAAA,OAAAN,EAAAC,IAAA,CAAA,GAAAD,EAAAE,IAAA,CAAA,GAAAlB,EAAAmB,KAAA,CAIlCZ,EAAa,CAAEmB,IAAKhB,EAAQI,SAAAA,EAAUD,OAAAA,CAAM,GAAG,MAAA,GAAAG,EAAAE,IAAA,CAAA,GAAA,KAAA,MAAA,GAAA,MAAAF,EAAAC,IAAA,CAAA,GAAAD,EAAAW,EAAA,CAAAX,EAAA,KAAA,CAAA,IAAAA,EAAAW,EAAA,MAAA,GAAA,IAAA,MAAA,OAAAX,EAAAY,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAAC,QAAA,EAIpDvB,EACJ\"}"}