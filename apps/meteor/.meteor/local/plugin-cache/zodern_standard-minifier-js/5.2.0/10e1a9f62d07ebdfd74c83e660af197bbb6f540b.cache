{"code":"function module(e,t,n){var r,i,a,o,u,s,d,c=[\"type\",\"id\"],l=[\"ldap\",\"lastLogin\",\"services\"],p=[\"email\",\"cloud\",\"resume\",\"email2fa\",\"emailCode\"];n.link(\"@babel/runtime/regenerator\",{default:function(e){r=e}},0),n.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default:function(e){i=e}},1),n.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(e){a=e}},2),n.export({isSyncReady:function(){return f},synchronizeUserData:function(){return v},removeLocalUserData:function(){return w}}),n.link(\"meteor/reactive-var\",{ReactiveVar:function(e){o=e}},0),n.link(\"../../app/models/client\",{Users:function(e){u=e}},1),n.link(\"../../app/utils/client/lib/SDKClient\",{sdk:function(e){s=e}},2);var f=new o(!1),m=function(e){var t=u.findOne({_id:e._id});if(!(null!=t&&t._updatedAt)||t._updatedAt.getTime()<e._updatedAt.getTime()){u.upsert({_id:e._id},e);return}Object.keys(t).forEach(function(t){delete e[t]}),u.update({_id:t._id},{$set:a({},e)})},v=function(e){var t,n,o,v,w,h,k,A,b,D,_,g,y,x;return r.async(function(T){for(;;)switch(T.prev=T.next){case 0:if(e){T.next=2;break}return T.abrupt(\"return\");case 2:return u.remove({_id:{$ne:e}}),null===(t=d)||void 0===t||t(),d=(n=s.stream(\"notify-user\",[e+\"/userData\"],function(t){switch(t.type){case\"inserted\":t.type,t.id;var n=i(t,c);u.insert(n);break;case\"updated\":u.upsert({_id:e},{$set:t.diff,$unset:t.unset});break;case\"removed\":u.remove({_id:e})}})).stop,T.next=8,r.awrap(n.ready());case 8:return T.next=10,r.awrap(s.rest.get(\"/v1/me\"));case 10:return v=(o=T.sent).ldap,w=o.lastLogin,h=o.services,(k=i(o,l))&&(b=(A=h||{}).email,D=A.cloud,_=A.resume,g=A.email2fa,y=A.emailCode,x=i(A,p),m(a(a(a(a({},k),h&&{services:a(a(a(a(a(a({},x?a({},x):{}),_?{resume:a({},_.loginTokens&&{loginTokens:_.loginTokens.map(function(e){return a(a({},e),{},{when:new Date(\"when\"in e?e.when:\"\"),createdAt:\"createdAt\"in e?new Date(e.createdAt):void 0,twoFactorAuthorizedUntil:e.twoFactorAuthorizedUntil?new Date(e.twoFactorAuthorizedUntil):void 0})})})}:{}),D?{cloud:a(a({},D),{},{expiresAt:new Date(D.expiresAt)})}:{}),y?a(a({},y),{},{expire:new Date(y.expire)}):{}),g?{email2fa:a(a({},g),{},{changedAt:new Date(g.changedAt)})}:{}),(null==b?void 0:b.verificationTokens)&&{email:{verificationTokens:b.verificationTokens.map(function(e){return a(a({},e),{},{when:new Date(e.when)})})}})}),w&&{lastLogin:new Date(w)}),{},{ldap:!!v,createdAt:new Date(k.createdAt),_updatedAt:new Date(k._updatedAt)}))),f.set(!0),T.abrupt(\"return\",k);case 18:case\"end\":return T.stop()}},null,null,null,Promise)},w=function(){return u.remove({})}}","map":"{\"version\":3,\"sources\":[\"client/lib/userData.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { ILivechatAgent, IUser, Serialized } from '@rocket.chat/core-typings';\\nimport { ReactiveVar } from 'meteor/reactive-var';\\n\\nimport { Users } from '../../app/models/client';\\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\\n\\nexport const isSyncReady = new ReactiveVar(false);\\n\\ntype RawUserData = Serialized<\\n\\tPick<\\n\\t\\tIUser,\\n\\t\\t| '_id'\\n\\t\\t| 'type'\\n\\t\\t| 'name'\\n\\t\\t| 'username'\\n\\t\\t| 'emails'\\n\\t\\t| 'status'\\n\\t\\t| 'statusDefault'\\n\\t\\t| 'statusText'\\n\\t\\t| 'statusConnection'\\n\\t\\t| 'avatarOrigin'\\n\\t\\t| 'utcOffset'\\n\\t\\t| 'language'\\n\\t\\t| 'settings'\\n\\t\\t| 'roles'\\n\\t\\t| 'active'\\n\\t\\t| 'defaultRoom'\\n\\t\\t| 'customFields'\\n\\t\\t| 'oauth'\\n\\t\\t| 'createdAt'\\n\\t\\t| '_updatedAt'\\n\\t\\t| 'avatarETag'\\n\\t> & { statusLivechat?: ILivechatAgent['statusLivechat'] }\\n>;\\n\\nconst updateUser = (userData: IUser): void => {\\n\\tconst user = Users.findOne({ _id: userData._id }) as IUser | undefined;\\n\\n\\tif (!user?._updatedAt || user._updatedAt.getTime() < userData._updatedAt.getTime()) {\\n\\t\\tUsers.upsert({ _id: userData._id }, userData);\\n\\t\\treturn;\\n\\t}\\n\\n\\t// delete data already on user's collection as those are newer\\n\\tObject.keys(user).forEach((key) => {\\n\\t\\tdelete userData[key as keyof IUser];\\n\\t});\\n\\tUsers.update({ _id: user._id }, { $set: { ...userData } });\\n};\\n\\nlet cancel: undefined | (() => void);\\nexport const synchronizeUserData = async (uid: IUser['_id']): Promise<RawUserData | void> => {\\n\\tif (!uid) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t// Remove data from any other user that we may have retained\\n\\tUsers.remove({ _id: { $ne: uid } });\\n\\n\\tcancel?.();\\n\\n\\tconst result = sdk.stream('notify-user', [`${uid}/userData`], (data) => {\\n\\t\\tswitch (data.type) {\\n\\t\\t\\tcase 'inserted':\\n\\t\\t\\t\\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\\n\\t\\t\\t\\tconst { type, id, ...user } = data;\\n\\t\\t\\t\\tUsers.insert(user as unknown as IUser);\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 'updated':\\n\\t\\t\\t\\tUsers.upsert({ _id: uid }, { $set: data.diff, $unset: data.unset as any });\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 'removed':\\n\\t\\t\\t\\tUsers.remove({ _id: uid });\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t});\\n\\n\\tcancel = result.stop;\\n\\tawait result.ready();\\n\\n\\tconst { ldap, lastLogin, services: rawServices, ...userData } = await sdk.rest.get('/v1/me');\\n\\n\\t// email?: {\\n\\t// \\tverificationTokens?: IUserEmailVerificationToken[];\\n\\t// };\\n\\t// export interface IUserEmailVerificationToken {\\n\\t// \\ttoken: string;\\n\\t// \\taddress: string;\\n\\t// \\twhen: Date;\\n\\t// }\\n\\n\\tif (userData) {\\n\\t\\tconst { email, cloud, resume, email2fa, emailCode, ...services } = rawServices || {};\\n\\n\\t\\tupdateUser({\\n\\t\\t\\t...userData,\\n\\t\\t\\t...(rawServices && {\\n\\t\\t\\t\\tservices: {\\n\\t\\t\\t\\t\\t...(services ? { ...services } : {}),\\n\\t\\t\\t\\t\\t...(resume\\n\\t\\t\\t\\t\\t\\t? {\\n\\t\\t\\t\\t\\t\\t\\t\\tresume: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t...(resume.loginTokens && {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tloginTokens: resume.loginTokens.map((token) => ({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t...token,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\twhen: new Date('when' in token ? token.when : ''),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcreatedAt: ('createdAt' in token ? new Date(token.createdAt) : undefined) as Date,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttwoFactorAuthorizedUntil: token.twoFactorAuthorizedUntil ? new Date(token.twoFactorAuthorizedUntil) : undefined,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t})),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}),\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t  }\\n\\t\\t\\t\\t\\t\\t: {}),\\n\\t\\t\\t\\t\\t...(cloud\\n\\t\\t\\t\\t\\t\\t? {\\n\\t\\t\\t\\t\\t\\t\\t\\tcloud: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t...cloud,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\texpiresAt: new Date(cloud.expiresAt),\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t  }\\n\\t\\t\\t\\t\\t\\t: {}),\\n\\t\\t\\t\\t\\t...(emailCode ? { ...emailCode, expire: new Date(emailCode.expire) } : {}),\\n\\t\\t\\t\\t\\t...(email2fa ? { email2fa: { ...email2fa, changedAt: new Date(email2fa.changedAt) } } : {}),\\n\\t\\t\\t\\t\\t...(email?.verificationTokens && {\\n\\t\\t\\t\\t\\t\\temail: {\\n\\t\\t\\t\\t\\t\\t\\tverificationTokens: email.verificationTokens.map((token) => ({\\n\\t\\t\\t\\t\\t\\t\\t\\t...token,\\n\\t\\t\\t\\t\\t\\t\\t\\twhen: new Date(token.when),\\n\\t\\t\\t\\t\\t\\t\\t})),\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t}),\\n\\t\\t\\t\\t},\\n\\t\\t\\t}),\\n\\t\\t\\t...(lastLogin && {\\n\\t\\t\\t\\tlastLogin: new Date(lastLogin),\\n\\t\\t\\t}),\\n\\t\\t\\tldap: Boolean(ldap),\\n\\t\\t\\tcreatedAt: new Date(userData.createdAt),\\n\\t\\t\\t_updatedAt: new Date(userData._updatedAt),\\n\\t\\t});\\n\\t}\\n\\tisSyncReady.set(true);\\n\\n\\treturn userData;\\n};\\n\\nexport const removeLocalUserData = (): number => Users.remove({});\\n\",null],\"names\":[\"_regeneratorRuntime\",\"_objectWithoutProperties\",\"_objectSpread\",\"ReactiveVar\",\"Users\",\"sdk\",\"cancel\",\"module\",\"link\",\"default\",\"v\",\"export\",\"isSyncReady\",\"synchronizeUserData\",\"removeLocalUserData\",\"updateUser\",\"userData\",\"user\",\"findOne\",\"_id\",\"_updatedAt\",\"getTime\",\"upsert\",\"Object\",\"keys\",\"forEach\",\"key\",\"update\",\"$set\",\"uid\",\"_cancel\",\"result\",\"_await$sdk$rest$get\",\"ldap\",\"lastLogin\",\"rawServices\",\"_ref\",\"email\",\"cloud\",\"resume\",\"email2fa\",\"emailCode\",\"services\",\"async\",\"_context\",\"prev\",\"next\",\"abrupt\",\"remove\",\"$ne\",\"stream\",\"data\",\"type\",\"id\",\"_excluded\",\"insert\",\"diff\",\"$unset\",\"unset\",\"stop\",\"awrap\",\"ready\",\"rest\",\"get\",\"sent\",\"_excluded2\",\"_excluded3\",\"loginTokens\",\"map\",\"token\",\"when\",\"Date\",\"createdAt\",\"undefined\",\"twoFactorAuthorizedUntil\",\"expiresAt\",\"expire\",\"changedAt\",\"verificationTokens\",\"Boolean\",\"set\",\"Promise\"],\"mappings\":\"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\"}"}