{"code":"function module(e,t,o){let i,n,l,r,s,u,c,a,m,d,I,C,p;o.export({useApplyButtonFilters:()=>T,useApplyButtonAuthFilter:()=>P}),o.link(\"@rocket.chat/apps-engine/definition/ui\",{RoomTypeFilter(e){i=e}},0),o.link(\"@rocket.chat/core-typings\",{isDirectMessageRoom(e){n=e},isMultipleDirectMessageRoom(e){l=e},isOmnichannelRoom(e){r=e},isPrivateDiscussion(e){s=e},isPrivateTeamRoom(e){u=e},isPublicDiscussion(e){c=e},isPublicTeamRoom(e){a=e}},1),o.link(\"@rocket.chat/ui-contexts\",{AuthorizationContext(e){m=e},useUserId(e){d=e}},2),o.link(\"react\",{useCallback(e){I=e},useContext(e){C=e}},3),o.link(\"../views/room/contexts/RoomContext\",{useRoom(e){p=e}},4);let A={[i.PUBLIC_CHANNEL]:e=>\"c\"===e.t,[i.PRIVATE_CHANNEL]:e=>\"p\"===e.t,[i.PUBLIC_TEAM]:a,[i.PRIVATE_TEAM]:u,[i.PUBLIC_DISCUSSION]:c,[i.PRIVATE_DISCUSSION]:s,[i.DIRECT]:n,[i.DIRECT_MULTIPLE]:l,[i.LIVE_CHAT]:r},R=(e,t)=>{let{roomTypes:o}=e.when||{};return!o||o.some(e=>{var o;return null===(o=A[e])||void 0===o?void 0:o.call(A,t)})},E=(e,t)=>{let{category:o}=e;return\"default\"===t?!o||\"default\"===o:o===t},T=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"default\",t=p();if(!t)throw Error(\"useApplyButtonFilters must be used inside a room context\");let o=P();return I(i=>o(i)&&(!t||R(i,t))&&E(i,e),[o,e,t])},P=()=>{let e=d(),{queryAllPermissions:t,queryAtLeastOnePermission:o,queryRole:i}=C(m);return I((n,l)=>{let{hasAllPermissions:r,hasOnePermission:s,hasAllRoles:u,hasOneRole:c}=n.when||{},a=!r||t(r)[1](),m=!s||o(s)[1](),d=!u||!!e&&u.every(e=>i(e,null==l?void 0:l._id)),I=!c||!!e&&c.some(e=>i(e,null==l?void 0:l._id)[1]());return a&&m&&d&&I},[t,o,i,e])}}","map":"{\"version\":3,\"sources\":[\"client/hooks/useApplyButtonFilters.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IUIActionButton } from '@rocket.chat/apps-engine/definition/ui';\\nimport { RoomTypeFilter } from '@rocket.chat/apps-engine/definition/ui';\\nimport type { IRoom } from '@rocket.chat/core-typings';\\nimport {\\n\\tisDirectMessageRoom,\\n\\tisMultipleDirectMessageRoom,\\n\\tisOmnichannelRoom,\\n\\tisPrivateDiscussion,\\n\\tisPrivateTeamRoom,\\n\\tisPublicDiscussion,\\n\\tisPublicTeamRoom,\\n} from '@rocket.chat/core-typings';\\nimport { AuthorizationContext, useUserId } from '@rocket.chat/ui-contexts';\\nimport { useCallback, useContext } from 'react';\\n\\nimport { useRoom } from '../views/room/contexts/RoomContext';\\n\\nconst enumToFilter: { [k in RoomTypeFilter]: (room: IRoom) => boolean } = {\\n\\t[RoomTypeFilter.PUBLIC_CHANNEL]: (room) => room.t === 'c',\\n\\t[RoomTypeFilter.PRIVATE_CHANNEL]: (room) => room.t === 'p',\\n\\t[RoomTypeFilter.PUBLIC_TEAM]: isPublicTeamRoom,\\n\\t[RoomTypeFilter.PRIVATE_TEAM]: isPrivateTeamRoom,\\n\\t[RoomTypeFilter.PUBLIC_DISCUSSION]: isPublicDiscussion,\\n\\t[RoomTypeFilter.PRIVATE_DISCUSSION]: isPrivateDiscussion,\\n\\t[RoomTypeFilter.DIRECT]: isDirectMessageRoom,\\n\\t[RoomTypeFilter.DIRECT_MULTIPLE]: isMultipleDirectMessageRoom,\\n\\t[RoomTypeFilter.LIVE_CHAT]: isOmnichannelRoom,\\n};\\n\\nconst applyRoomFilter = (button: IUIActionButton, room: IRoom): boolean => {\\n\\tconst { roomTypes } = button.when || {};\\n\\treturn !roomTypes || roomTypes.some((filter): boolean => enumToFilter[filter]?.(room));\\n};\\n\\nconst applyCategoryFilter = (button: IUIActionButton, category: string): boolean => {\\n\\tconst { category: buttonCategory } = button;\\n\\n\\tif (category === 'default') {\\n\\t\\treturn !buttonCategory || buttonCategory === 'default';\\n\\t}\\n\\n\\treturn buttonCategory === category;\\n};\\n\\nexport const useApplyButtonFilters = (category = 'default'): ((button: IUIActionButton) => boolean) => {\\n\\tconst room = useRoom();\\n\\tif (!room) {\\n\\t\\tthrow new Error('useApplyButtonFilters must be used inside a room context');\\n\\t}\\n\\tconst applyAuthFilter = useApplyButtonAuthFilter();\\n\\treturn useCallback(\\n\\t\\t(button: IUIActionButton) =>\\n\\t\\t\\tapplyAuthFilter(button) && (!room || applyRoomFilter(button, room)) && applyCategoryFilter(button, category),\\n\\t\\t[applyAuthFilter, category, room],\\n\\t);\\n};\\n\\nexport const useApplyButtonAuthFilter = (): ((button: IUIActionButton) => boolean) => {\\n\\tconst uid = useUserId();\\n\\n\\tconst { queryAllPermissions, queryAtLeastOnePermission, queryRole } = useContext(AuthorizationContext);\\n\\n\\treturn useCallback(\\n\\t\\t(button: IUIActionButton, room?: IRoom) => {\\n\\t\\t\\tconst { hasAllPermissions, hasOnePermission, hasAllRoles, hasOneRole } = button.when || {};\\n\\n\\t\\t\\tconst hasAllPermissionsResult = hasAllPermissions ? queryAllPermissions(hasAllPermissions)[1]() : true;\\n\\t\\t\\tconst hasOnePermissionResult = hasOnePermission ? queryAtLeastOnePermission(hasOnePermission)[1]() : true;\\n\\t\\t\\tconst hasAllRolesResult = hasAllRoles ? !!uid && hasAllRoles.every((role) => queryRole(role, room?._id)) : true;\\n\\t\\t\\tconst hasOneRoleResult = hasOneRole ? !!uid && hasOneRole.some((role) => queryRole(role, room?._id)[1]()) : true;\\n\\n\\t\\t\\treturn hasAllPermissionsResult && hasOnePermissionResult && hasAllRolesResult && hasOneRoleResult;\\n\\t\\t},\\n\\t\\t[queryAllPermissions, queryAtLeastOnePermission, queryRole, uid],\\n\\t);\\n};\\n\",null],\"names\":[\"RoomTypeFilter\",\"isDirectMessageRoom\",\"isMultipleDirectMessageRoom\",\"isOmnichannelRoom\",\"isPrivateDiscussion\",\"isPrivateTeamRoom\",\"isPublicDiscussion\",\"isPublicTeamRoom\",\"AuthorizationContext\",\"useUserId\",\"useCallback\",\"useContext\",\"useRoom\",\"module\",\"export\",\"useApplyButtonFilters\",\"useApplyButtonAuthFilter\",\"link\",\"v\",\"enumToFilter\",\"PUBLIC_CHANNEL\",\"room\",\"t\",\"PRIVATE_CHANNEL\",\"PUBLIC_TEAM\",\"PRIVATE_TEAM\",\"PUBLIC_DISCUSSION\",\"PRIVATE_DISCUSSION\",\"DIRECT\",\"DIRECT_MULTIPLE\",\"LIVE_CHAT\",\"applyRoomFilter\",\"button\",\"roomTypes\",\"when\",\"some\",\"filter\",\"_enumToFilter$filter\",\"call\",\"applyCategoryFilter\",\"category\",\"buttonCategory\",\"arguments\",\"length\",\"undefined\",\"Error\",\"applyAuthFilter\",\"uid\",\"queryAllPermissions\",\"queryAtLeastOnePermission\",\"queryRole\",\"hasAllPermissions\",\"hasOnePermission\",\"hasAllRoles\",\"hasOneRole\",\"hasAllPermissionsResult\",\"hasOnePermissionResult\",\"hasAllRolesResult\",\"every\",\"role\",\"_id\",\"hasOneRoleResult\"],\"mappings\":\"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\"}"}