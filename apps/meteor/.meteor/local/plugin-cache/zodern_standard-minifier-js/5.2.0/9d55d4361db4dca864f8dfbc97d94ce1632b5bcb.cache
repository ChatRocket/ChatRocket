{"code":"function module(e,n,t){t.link(\"@babel/runtime/helpers/toConsumableArray\",{default:function(e){s=e}},0),t.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(e){i=e}},1),t.export({useRoomList:function(){return S}}),t.link(\"@rocket.chat/fuselage-hooks\",{useDebouncedState:function(e){a=e}},0),t.link(\"@rocket.chat/ui-contexts\",{useUserPreference:function(e){o=e},useUserSubscriptions:function(e){u=e},useSetting:function(e){r=e}},1),t.link(\"react\",{useEffect:function(e){d=e}},2),t.link(\"../../contexts/VideoConfContext\",{useVideoConfIncomingCalls:function(e){c=e}},3),t.link(\"../../hooks/omnichannel/useOmnichannelEnabled\",{useOmnichannelEnabled:function(e){l=e}},4),t.link(\"../../hooks/omnichannel/useQueuedInquiries\",{useQueuedInquiries:function(e){f=e}},5),t.link(\"./useQueryOptions\",{useQueryOptions:function(e){h=e}},6);var s,i,a,o,u,r,d,c,l,f,h,m={open:{$ne:!1}},v=[],b=[\"Incoming_Calls\",\"Incoming_Livechats\",\"Open_Livechats\",\"On_Hold_Chats\",\"Unread\",\"Favorites\",\"Teams\",\"Discussions\",\"Channels\",\"Direct_Messages\",\"Conversations\"],S=function(){var e,n=a([],150),t=i(n,2),S=t[0],p=t[1],k=l(),w=o(\"sidebarGroupByType\"),C=o(\"sidebarShowFavorites\"),_=null!==(e=o(\"sidebarSectionsOrder\"))&&void 0!==e?e:b,g=r(\"Discussion_enabled\"),z=o(\"sidebarShowUnread\"),O=h(),I=u(m,O),y=f(),D=c(),U=v;return y.enabled&&(U=y.queue),d(function(){p(function(){var e=new Set,n=new Set,t=new Set,i=new Set,a=new Set,o=new Set,u=new Set,r=new Set,d=new Set,c=new Set;I.forEach(function(s){return s.archived?void 0:D.find(function(e){return e.rid===s.rid})?e.add(s):z&&(s.alert||s.unread)&&!s.hideUnreadStatus?a.add(s):C&&s.f?n.add(s):w&&s.teamMain?t.add(s):w&&g&&s.prid?r.add(s):((\"c\"===s.t||\"p\"===s.t)&&o.add(s),\"l\"===s.t&&s.onHold)?k&&c.add(s):\"l\"===s.t?k&&i.add(s):void(\"d\"===s.t&&u.add(s),d.add(s))});var l=new Map;return e.size&&l.set(\"Incoming_Calls\",e),k&&y.enabled&&U.length&&l.set(\"Incoming_Livechats\",U),k&&i.size&&l.set(\"Open_Livechats\",i),k&&c.size&&l.set(\"On_Hold_Chats\",c),z&&a.size&&l.set(\"Unread\",a),C&&n.size&&l.set(\"Favorites\",n),w&&t.size&&l.set(\"Teams\",t),w&&g&&r.size&&l.set(\"Discussions\",r),w&&o.size&&l.set(\"Channels\",o),w&&u.size&&l.set(\"Direct_Messages\",u),w||l.set(\"Conversations\",d),_.map(function(e){var n=l.get(e);return n?[e].concat(s(n)):[]}).flat()})},[I,k,D,y.enabled,U,z,C,w,p,g,_]),S}}","map":"{\"version\":3,\"sources\":[\"client/sidebar/hooks/useRoomList.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { ILivechatInquiryRecord, IRoom, ISubscription } from '@rocket.chat/core-typings';\\nimport { useDebouncedState } from '@rocket.chat/fuselage-hooks';\\nimport { useUserPreference, useUserSubscriptions, useSetting } from '@rocket.chat/ui-contexts';\\nimport { useEffect } from 'react';\\n\\nimport { useVideoConfIncomingCalls } from '../../contexts/VideoConfContext';\\nimport { useOmnichannelEnabled } from '../../hooks/omnichannel/useOmnichannelEnabled';\\nimport { useQueuedInquiries } from '../../hooks/omnichannel/useQueuedInquiries';\\nimport { useQueryOptions } from './useQueryOptions';\\n\\nconst query = { open: { $ne: false } };\\n\\nconst emptyQueue: ILivechatInquiryRecord[] = [];\\n\\nconst order: (\\n\\t| 'Incoming_Calls'\\n\\t| 'Incoming_Livechats'\\n\\t| 'Open_Livechats'\\n\\t| 'On_Hold_Chats'\\n\\t| 'Unread'\\n\\t| 'Favorites'\\n\\t| 'Teams'\\n\\t| 'Discussions'\\n\\t| 'Channels'\\n\\t| 'Direct_Messages'\\n\\t| 'Conversations'\\n)[] = [\\n\\t'Incoming_Calls',\\n\\t'Incoming_Livechats',\\n\\t'Open_Livechats',\\n\\t'On_Hold_Chats',\\n\\t'Unread',\\n\\t'Favorites',\\n\\t'Teams',\\n\\t'Discussions',\\n\\t'Channels',\\n\\t'Direct_Messages',\\n\\t'Conversations',\\n];\\n\\nexport const useRoomList = (): Array<ISubscription & IRoom> => {\\n\\tconst [roomList, setRoomList] = useDebouncedState<(ISubscription & IRoom)[]>([], 150);\\n\\n\\tconst showOmnichannel = useOmnichannelEnabled();\\n\\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\\n\\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\\n\\tconst sidebarOrder = useUserPreference<typeof order>('sidebarSectionsOrder') ?? order;\\n\\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\\n\\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\\n\\n\\tconst options = useQueryOptions();\\n\\n\\tconst rooms = useUserSubscriptions(query, options);\\n\\n\\tconst inquiries = useQueuedInquiries();\\n\\n\\tconst incomingCalls = useVideoConfIncomingCalls();\\n\\n\\tlet queue = emptyQueue;\\n\\tif (inquiries.enabled) {\\n\\t\\tqueue = inquiries.queue;\\n\\t}\\n\\n\\tuseEffect(() => {\\n\\t\\tsetRoomList(() => {\\n\\t\\t\\tconst incomingCall = new Set();\\n\\t\\t\\tconst favorite = new Set();\\n\\t\\t\\tconst team = new Set();\\n\\t\\t\\tconst omnichannel = new Set();\\n\\t\\t\\tconst unread = new Set();\\n\\t\\t\\tconst channels = new Set();\\n\\t\\t\\tconst direct = new Set();\\n\\t\\t\\tconst discussion = new Set();\\n\\t\\t\\tconst conversation = new Set();\\n\\t\\t\\tconst onHold = new Set();\\n\\n\\t\\t\\trooms.forEach((room) => {\\n\\t\\t\\t\\tif (room.archived) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (incomingCalls.find((call) => call.rid === room.rid)) {\\n\\t\\t\\t\\t\\treturn incomingCall.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (sidebarShowUnread && (room.alert || room.unread) && !room.hideUnreadStatus) {\\n\\t\\t\\t\\t\\treturn unread.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (favoritesEnabled && room.f) {\\n\\t\\t\\t\\t\\treturn favorite.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (sidebarGroupByType && room.teamMain) {\\n\\t\\t\\t\\t\\treturn team.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\\n\\t\\t\\t\\t\\treturn discussion.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (room.t === 'c' || room.t === 'p') {\\n\\t\\t\\t\\t\\tchannels.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (room.t === 'l' && room.onHold) {\\n\\t\\t\\t\\t\\treturn showOmnichannel && onHold.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (room.t === 'l') {\\n\\t\\t\\t\\t\\treturn showOmnichannel && omnichannel.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (room.t === 'd') {\\n\\t\\t\\t\\t\\tdirect.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tconversation.add(room);\\n\\t\\t\\t});\\n\\n\\t\\t\\tconst groups = new Map();\\n\\t\\t\\tincomingCall.size && groups.set('Incoming_Calls', incomingCall);\\n\\t\\t\\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', queue);\\n\\t\\t\\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\\n\\t\\t\\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\\n\\t\\t\\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\\n\\t\\t\\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\\n\\t\\t\\tsidebarGroupByType && team.size && groups.set('Teams', team);\\n\\t\\t\\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\\n\\t\\t\\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\\n\\t\\t\\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\\n\\t\\t\\t!sidebarGroupByType && groups.set('Conversations', conversation);\\n\\t\\t\\treturn sidebarOrder\\n\\t\\t\\t\\t.map((key) => {\\n\\t\\t\\t\\t\\tconst group = groups.get(key);\\n\\t\\t\\t\\t\\tif (!group) {\\n\\t\\t\\t\\t\\t\\treturn [];\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn [key, ...group];\\n\\t\\t\\t\\t})\\n\\t\\t\\t\\t.flat();\\n\\t\\t});\\n\\t}, [\\n\\t\\trooms,\\n\\t\\tshowOmnichannel,\\n\\t\\tincomingCalls,\\n\\t\\tinquiries.enabled,\\n\\t\\tqueue,\\n\\t\\tsidebarShowUnread,\\n\\t\\tfavoritesEnabled,\\n\\t\\tsidebarGroupByType,\\n\\t\\tsetRoomList,\\n\\t\\tisDiscussionEnabled,\\n\\t\\tsidebarOrder,\\n\\t]);\\n\\n\\treturn roomList;\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_toConsumableArray\",\"_slicedToArray\",\"export\",\"useRoomList\",\"useDebouncedState\",\"useUserPreference\",\"useUserSubscriptions\",\"useSetting\",\"useEffect\",\"useVideoConfIncomingCalls\",\"useOmnichannelEnabled\",\"useQueuedInquiries\",\"useQueryOptions\",\"query\",\"open\",\"$ne\",\"emptyQueue\",\"order\",\"_useUserPreference\",\"_useDebouncedState\",\"_useDebouncedState2\",\"roomList\",\"setRoomList\",\"showOmnichannel\",\"sidebarGroupByType\",\"favoritesEnabled\",\"sidebarOrder\",\"isDiscussionEnabled\",\"sidebarShowUnread\",\"options\",\"rooms\",\"inquiries\",\"incomingCalls\",\"queue\",\"enabled\",\"incomingCall\",\"Set\",\"favorite\",\"team\",\"omnichannel\",\"unread\",\"channels\",\"direct\",\"discussion\",\"conversation\",\"onHold\",\"forEach\",\"room\",\"archived\",\"find\",\"call\",\"rid\",\"add\",\"alert\",\"hideUnreadStatus\",\"f\",\"teamMain\",\"prid\",\"t\",\"groups\",\"Map\",\"size\",\"set\",\"length\",\"map\",\"key\",\"group\",\"get\",\"concat\",\"flat\"],\"mappings\":\"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\"}"}