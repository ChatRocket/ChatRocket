{"code":"function module(e,a,t){let s;t.export({getPeriod:()=>y,getPeriodRange:()=>d}),t.link(\"moment\",{default(e){s=e}},0);let l=e=>[e],n=e=>a=>{let t=new Date,l=-(t.getTimezoneOffset()/60),n=a?s.utc().startOf(\"day\").subtract(e,\"days\").toDate():s().subtract(e,\"days\").startOf(\"day\").utcOffset(l).toDate(),r=a?s.utc().endOf(\"day\").toDate():s().endOf(\"day\").utcOffset(l).toDate();return{start:n,end:r}},r=[{key:\"today\",label:l(\"Today\"),range:n(0)},{key:\"this week\",label:l(\"This_week\"),range:n(7)},{key:\"last 7 days\",label:l(\"Last_7_days\"),range:n(7)},{key:\"last 15 days\",label:l(\"Last_15_days\"),range:n(15)},{key:\"this month\",label:l(\"This_month\"),range:n(30)},{key:\"last 30 days\",label:l(\"Last_30_days\"),range:n(30)},{key:\"last 90 days\",label:l(\"Last_90_days\"),range:n(90)},{key:\"last 6 months\",label:l(\"Last_6_months\"),range:n(180)},{key:\"last year\",label:l(\"Last_year\"),range:n(365)}],y=e=>{let a=r.find(a=>a.key===e);if(!a)throw Error('\"'.concat(e,'\" is not a valid period key'));return a},d=function(e){let a=!(arguments.length>1)||void 0===arguments[1]||arguments[1],t=r.find(a=>a.key===e);if(!t)throw Error('\"'.concat(e,'\" is not a valid period key'));return t.range(a)}}","map":"{\"version\":3,\"sources\":[\"client/components/dashboards/periods.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { TranslationKey } from '@rocket.chat/ui-contexts';\\nimport moment from 'moment';\\n\\nconst label = (translationKey: TranslationKey): readonly [translationKey: TranslationKey] => [translationKey];\\n\\nconst lastNDays =\\n\\t(\\n\\t\\tn: number,\\n\\t): ((utc: boolean) => {\\n\\t\\tstart: Date;\\n\\t\\tend: Date;\\n\\t}) =>\\n\\t(utc): { start: Date; end: Date } => {\\n\\t\\tconst date = new Date();\\n\\t\\tconst offsetForMoment = -(date.getTimezoneOffset() / 60);\\n\\n\\t\\tconst start = utc\\n\\t\\t\\t? moment.utc().startOf('day').subtract(n, 'days').toDate()\\n\\t\\t\\t: moment().subtract(n, 'days').startOf('day').utcOffset(offsetForMoment).toDate();\\n\\n\\t\\tconst end = utc ? moment.utc().endOf('day').toDate() : moment().endOf('day').utcOffset(offsetForMoment).toDate();\\n\\n\\t\\treturn { start, end };\\n\\t};\\n\\nconst periods = [\\n\\t{\\n\\t\\tkey: 'today',\\n\\t\\tlabel: label('Today'),\\n\\t\\trange: lastNDays(0),\\n\\t},\\n\\t{\\n\\t\\tkey: 'this week',\\n\\t\\tlabel: label('This_week'),\\n\\t\\trange: lastNDays(7),\\n\\t},\\n\\t{\\n\\t\\tkey: 'last 7 days',\\n\\t\\tlabel: label('Last_7_days'),\\n\\t\\trange: lastNDays(7),\\n\\t},\\n\\t{\\n\\t\\tkey: 'last 15 days',\\n\\t\\tlabel: label('Last_15_days'),\\n\\t\\trange: lastNDays(15),\\n\\t},\\n\\t{\\n\\t\\tkey: 'this month',\\n\\t\\tlabel: label('This_month'),\\n\\t\\trange: lastNDays(30),\\n\\t},\\n\\t{\\n\\t\\tkey: 'last 30 days',\\n\\t\\tlabel: label('Last_30_days'),\\n\\t\\trange: lastNDays(30),\\n\\t},\\n\\t{\\n\\t\\tkey: 'last 90 days',\\n\\t\\tlabel: label('Last_90_days'),\\n\\t\\trange: lastNDays(90),\\n\\t},\\n\\t{\\n\\t\\tkey: 'last 6 months',\\n\\t\\tlabel: label('Last_6_months'),\\n\\t\\trange: lastNDays(180),\\n\\t},\\n\\t{\\n\\t\\tkey: 'last year',\\n\\t\\tlabel: label('Last_year'),\\n\\t\\trange: lastNDays(365),\\n\\t},\\n] as const;\\n\\nexport type Period = (typeof periods)[number];\\n\\nexport const getPeriod = (key: (typeof periods)[number]['key']): Period => {\\n\\tconst period = periods.find((period) => period.key === key);\\n\\n\\tif (!period) {\\n\\t\\tthrow new Error(`\\\"${key}\\\" is not a valid period key`);\\n\\t}\\n\\n\\treturn period;\\n};\\n\\nexport const getPeriodRange = (\\n\\tkey: (typeof periods)[number]['key'],\\n\\tutc = true,\\n): {\\n\\tstart: Date;\\n\\tend: Date;\\n} => {\\n\\tconst period = periods.find((period) => period.key === key);\\n\\n\\tif (!period) {\\n\\t\\tthrow new Error(`\\\"${key}\\\" is not a valid period key`);\\n\\t}\\n\\n\\treturn period.range(utc);\\n};\\n\",null],\"names\":[\"moment\",\"module\",\"export\",\"getPeriod\",\"getPeriodRange\",\"link\",\"default\",\"v\",\"label\",\"translationKey\",\"lastNDays\",\"n\",\"utc\",\"date\",\"Date\",\"offsetForMoment\",\"getTimezoneOffset\",\"start\",\"startOf\",\"subtract\",\"toDate\",\"utcOffset\",\"end\",\"endOf\",\"periods\",\"key\",\"range\",\"period\",\"find\",\"Error\",\"concat\",\"arguments\",\"length\",\"undefined\"],\"mappings\":\"2BAC4BA,EAA5BC,EAAOC,MAAM,CAAA,CAAAC,UAAMA,IAASA,EAAAC,eAAAA,IAAAA,CAAA,GAAAH,EAAAI,IAAA,CAAA,SAAA,CAAAC,QAAAC,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAE5B,IAAMC,EAASC,GAA8E,CAACA,EAAe,CAEvGC,EAEJC,GAKAC,IACA,IAAMC,EAAO,IAAIC,KACXC,EAAkB,CAAEF,CAAAA,EAAKG,iBAAiB,GAAK,EAAA,EAE/CC,EAAQL,EACXZ,EAAOY,GAAG,GAAGM,OAAO,CAAC,OAAOC,QAAQ,CAACR,EAAG,QAAQS,MAAM,GACtDpB,IAASmB,QAAQ,CAACR,EAAG,QAAQO,OAAO,CAAC,OAAOG,SAAS,CAACN,GAAiBK,MAAM,GAE1EE,EAAMV,EAAMZ,EAAOY,GAAG,GAAGW,KAAK,CAAC,OAAOH,MAAM,GAAKpB,IAASuB,KAAK,CAAC,OAAOF,SAAS,CAACN,GAAiBK,MAAM,GAE9G,MAAO,CAAEH,MAAAA,EAAOK,IAAAA,CAAG,CACpB,EAEKE,EAAU,CACf,CACCC,IAAK,QACLjB,MAAOA,EAAM,SACbkB,MAAOhB,EAAU,IAElB,CACCe,IAAK,YACLjB,MAAOA,EAAM,aACbkB,MAAOhB,EAAU,IAElB,CACCe,IAAK,cACLjB,MAAOA,EAAM,eACbkB,MAAOhB,EAAU,IAElB,CACCe,IAAK,eACLjB,MAAOA,EAAM,gBACbkB,MAAOhB,EAAU,KAElB,CACCe,IAAK,aACLjB,MAAOA,EAAM,cACbkB,MAAOhB,EAAU,KAElB,CACCe,IAAK,eACLjB,MAAOA,EAAM,gBACbkB,MAAOhB,EAAU,KAElB,CACCe,IAAK,eACLjB,MAAOA,EAAM,gBACbkB,MAAOhB,EAAU,KAElB,CACCe,IAAK,gBACLjB,MAAOA,EAAM,iBACbkB,MAAOhB,EAAU,MAElB,CACCe,IAAK,YACLjB,MAAOA,EAAM,aACbkB,MAAOhB,EAAU,MAET,CAIGP,EAAasB,IACzB,IAAME,EAASH,EAAQI,IAAI,CAAED,GAAWA,EAAOF,GAAG,GAAKA,GAEvD,GAAI,CAACE,EACJ,MAAM,AAAIE,MAAK,IAAAC,MAAA,CAAKL,EAAG,gCAGxB,OAAOE,CACR,EAEavB,EAAiB,SAC7BqB,CAAoC,EAKjC,IAJHb,EAAGmB,CAAAA,CAAAA,UAAAC,MAAA,CAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,EAAAA,SAAA,CAAA,EAAA,CAKGJ,EAASH,EAAQI,IAAI,CAAED,GAAWA,EAAOF,GAAG,GAAKA,GAEvD,GAAI,CAACE,EACJ,MAAM,AAAIE,MAAK,IAAAC,MAAA,CAAKL,EAAG,gCAGxB,OAAOE,EAAOD,KAAK,CAACd,EACrB\"}"}