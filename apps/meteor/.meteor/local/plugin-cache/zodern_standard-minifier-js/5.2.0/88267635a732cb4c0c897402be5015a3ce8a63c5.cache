{"code":"function module(t,e,n){n.link(\"@babel/runtime/regenerator\",{default:function(t){s=t}},0),n.export({useThreadsList:function(){return f}}),n.link(\"@rocket.chat/ui-contexts\",{useEndpoint:function(t){i=t}},0),n.link(\"react\",{useCallback:function(t){r=t},useMemo:function(t){o=t}},1),n.link(\"../../../../../hooks/lists/useScrollableMessageList\",{useScrollableMessageList:function(t){u=t}},2),n.link(\"../../../../../hooks/lists/useStreamUpdatesForMessageList\",{useStreamUpdatesForMessageList:function(t){a=t}},3),n.link(\"../../../../../lib/lists/ThreadsList\",{ThreadsList:function(t){l=t}},4),n.link(\"../../../../../lib/utils/getConfig\",{getConfig:function(t){c=t}},5);var s,i,r,o,u,a,l,c,f=function(t,e){var n=o(function(){return new l(t)},[t]),f=i(\"GET\",\"/v1/chat.getThreadsList\"),d=r(function(e,n){var i,r,o;return s.async(function(u){for(;;)switch(u.prev=u.next){case 0:return u.next=2,s.awrap(f({rid:t.rid,type:t.type,text:t.text,offset:e,count:n}));case 2:return r=(i=u.sent).threads,o=i.total,u.abrupt(\"return\",{items:r,itemCount:o});case 6:case\"end\":return u.stop()}},null,null,null,Promise)},[f,t.rid,t.text,t.type]),h=u(n,d,o(function(){return parseInt(\"\"+c(\"threadsListSize\",10))},[])),m=h.loadMoreItems,p=h.initialItemCount;return a(n,e,t.rid),{threadsList:n,loadMoreItems:m,initialItemCount:p}}}","map":"{\"version\":3,\"sources\":[\"client/views/room/contextualBar/Threads/hooks/useThreadsList.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IUser } from '@rocket.chat/core-typings';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useCallback, useMemo } from 'react';\\n\\nimport { useScrollableMessageList } from '../../../../../hooks/lists/useScrollableMessageList';\\nimport { useStreamUpdatesForMessageList } from '../../../../../hooks/lists/useStreamUpdatesForMessageList';\\nimport type { ThreadsListOptions } from '../../../../../lib/lists/ThreadsList';\\nimport { ThreadsList } from '../../../../../lib/lists/ThreadsList';\\nimport { getConfig } from '../../../../../lib/utils/getConfig';\\n\\nexport const useThreadsList = (\\n\\toptions: ThreadsListOptions,\\n\\tuid: IUser['_id'] | null,\\n): {\\n\\tthreadsList: ThreadsList;\\n\\tinitialItemCount: number;\\n\\tloadMoreItems: (start: number, end: number) => void;\\n} => {\\n\\tconst threadsList = useMemo(() => new ThreadsList(options), [options]);\\n\\n\\tconst getThreadsList = useEndpoint('GET', '/v1/chat.getThreadsList');\\n\\n\\tconst fetchMessages = useCallback(\\n\\t\\tasync (start, end) => {\\n\\t\\t\\tconst { threads, total } = await getThreadsList({\\n\\t\\t\\t\\trid: options.rid,\\n\\t\\t\\t\\ttype: options.type,\\n\\t\\t\\t\\ttext: options.text,\\n\\t\\t\\t\\toffset: start,\\n\\t\\t\\t\\tcount: end,\\n\\t\\t\\t});\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\titems: threads,\\n\\t\\t\\t\\titemCount: total,\\n\\t\\t\\t};\\n\\t\\t},\\n\\t\\t[getThreadsList, options.rid, options.text, options.type],\\n\\t);\\n\\n\\tconst { loadMoreItems, initialItemCount } = useScrollableMessageList(\\n\\t\\tthreadsList,\\n\\t\\tfetchMessages,\\n\\t\\tuseMemo(() => parseInt(`${getConfig('threadsListSize', 10)}`), []),\\n\\t);\\n\\tuseStreamUpdatesForMessageList(threadsList, uid, options.rid);\\n\\n\\treturn {\\n\\t\\tthreadsList,\\n\\t\\tloadMoreItems,\\n\\t\\tinitialItemCount,\\n\\t};\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"export\",\"useThreadsList\",\"useEndpoint\",\"useCallback\",\"useMemo\",\"useScrollableMessageList\",\"useStreamUpdatesForMessageList\",\"ThreadsList\",\"getConfig\",\"options\",\"uid\",\"threadsList\",\"getThreadsList\",\"fetchMessages\",\"start\",\"end\",\"_await$getThreadsList\",\"threads\",\"total\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"rid\",\"type\",\"text\",\"offset\",\"count\",\"sent\",\"abrupt\",\"items\",\"itemCount\",\"stop\",\"Promise\",\"_useScrollableMessage\",\"parseInt\",\"loadMoreItems\",\"initialItemCount\"],\"mappings\":\"uBACsBA,EAAMC,IAAA,CAAA,6BAA2B,CAAAC,QAAA,SAAAC,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAAvDH,EAAOK,MAAE,CAAA,CAAAC,eAAmB,WAAA,OAAAA,CAA2B,CAAA,GAAAN,EAAAC,IAAA,CAAA,2BAAA,CAAAM,YAAA,SAAAJ,CAAA,EAAAI,EAAAJ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAO,YAAA,SAAAL,CAAA,EAAAK,EAAAL,CAAA,EAAAM,QAAA,SAAAN,CAAA,EAAAM,EAAAN,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,sDAAA,CAAAS,yBAAA,SAAAP,CAAA,EAAAO,EAAAP,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,4DAAA,CAAAU,+BAAA,SAAAR,CAAA,EAAAQ,EAAAR,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uCAAA,CAAAW,YAAA,SAAAT,CAAA,EAAAS,EAAAT,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,qCAAA,CAAAY,UAAA,SAAAV,CAAA,EAAAU,EAAAV,CAAA,CAAA,EAAA,GAShD,IATPC,EAAuDG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAS1CP,EAAiB,SAC7BQ,CAA2B,CAC3BC,CAAwB,EAMxB,IAAMC,EAAcP,EAAQ,WAAA,OAAM,IAAIG,EAAYE,EAAQ,EAAE,CAACA,EAAQ,EAE/DG,EAAiBV,EAAY,MAAO,2BAEpCW,EAAgBV,EACrB,SAAOW,CAAK,CAAEC,CAAG,EAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAnB,EAAAoB,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAE,IAAA,CAAA,EAAAvB,EAAAwB,KAAA,CACiBX,EAAe,CAC/CY,IAAKf,EAAQe,GAAG,CAChBC,KAAMhB,EAAQgB,IAAI,CAClBC,KAAMjB,EAAQiB,IAAI,CAClBC,OAAQb,EACRc,MAAOb,IACN,MAAA,EANoB,OAAdE,EAAOD,AAMbA,CAAAA,EAAAI,EAAAS,IAAA,AAAAA,EANMZ,OAAO,CAAEC,EAAKF,EAALE,KAAK,CAAAE,EAAAU,MAAA,CAAA,SAQf,CACNC,MAAOd,EACPe,UAAWd,GACX,MAAA,EAAA,IAAA,MAAA,OAAAE,EAAAa,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAAA,EAEF,CAACtB,EAAgBH,EAAQe,GAAG,CAAEf,EAAQiB,IAAI,CAAEjB,EAAQgB,IAAI,CAAC,EAG1DU,EAA4C9B,EAC3CM,EACAE,EACAT,EAAQ,WAAA,OAAMgC,SAAQ,GAAI5B,EAAU,kBAAmB,IAAM,EAAE,EAAE,GAH1D6B,EAAaF,EAAbE,aAAa,CAAEC,EAAgBH,EAAhBG,gBAAgB,CAOvC,OAFAhC,EAA+BK,EAAaD,EAAKD,EAAQe,GAAG,EAErD,CACNb,YAAAA,EACA0B,cAAAA,EACAC,iBAAAA,EAEF\"}"}