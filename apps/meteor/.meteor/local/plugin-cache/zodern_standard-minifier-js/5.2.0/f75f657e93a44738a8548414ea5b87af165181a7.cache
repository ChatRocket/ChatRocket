{"code":"function module(n,e,t){var u,r,o,i,a,l,c,f,s;t.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(n){u=n}},0),t.link(\"@rocket.chat/fuselage\",{Select:function(n){r=n}},0),t.link(\"react\",{default:function(n){o=n},useMemo:function(n){i=n},useState:function(n){a=n}},1),t.link(\"react-i18next\",{useTranslation:function(n){l=n}},2),t.link(\"../EngagementDashboardCardFilter\",{default:function(n){c=n}},3),t.link(\"./ContentForDays\",{default:function(n){f=n}},4),t.link(\"./ContentForHours\",{default:function(n){s=n}},5),t.exportDefault(function(n){var e=n.timezone,t=l().t,d=a(\"hours\"),m=u(d,2),k=m[0],h=m[1],g=i(function(){return[[\"hours\",t(\"Hours\")],[\"days\",t(\"Days\")]]},[t]),C=a(0),D=u(C,2),p=D[0],y=D[1],E=function(n){h(n),y(0)},b={hours:s,days:f}[k];return o.createElement(o.Fragment,null,o.createElement(c,null,o.createElement(r,{options:g,value:k,onChange:function(n){return E(String(n))},\"aria-label\":t(\"Select_period\")})),o.createElement(b,{displacement:p,onPreviousDateClick:function(){return y(function(n){return n+1})},onNextDateClick:function(){return y(function(n){return n-1})},timezone:e}))})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/engagementDashboard/users/BusiestChatTimesSection.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { Select } from '@rocket.chat/fuselage';\\nimport type { ReactElement } from 'react';\\nimport React, { useMemo, useState } from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport EngagementDashboardCardFilter from '../EngagementDashboardCardFilter';\\nimport ContentForDays from './ContentForDays';\\nimport ContentForHours from './ContentForHours';\\n\\ntype TimeUnit = 'hours' | 'days';\\n\\ntype BusiestChatTimesSectionProps = {\\n\\ttimezone: 'utc' | 'local';\\n};\\n\\nconst BusiestChatTimesSection = ({ timezone }: BusiestChatTimesSectionProps): ReactElement => {\\n\\tconst { t } = useTranslation();\\n\\n\\tconst [timeUnit, setTimeUnit] = useState<TimeUnit>('hours');\\n\\tconst timeUnitOptions = useMemo<[timeUnit: TimeUnit, label: string][]>(\\n\\t\\t() => [\\n\\t\\t\\t['hours', t('Hours')],\\n\\t\\t\\t['days', t('Days')],\\n\\t\\t],\\n\\t\\t[t],\\n\\t);\\n\\n\\tconst [displacement, setDisplacement] = useState(0);\\n\\n\\tconst handleTimeUnitChange = (timeUnit: string): void => {\\n\\t\\tsetTimeUnit(timeUnit as TimeUnit);\\n\\t\\tsetDisplacement(0);\\n\\t};\\n\\n\\tconst handlePreviousDateClick = (): void => setDisplacement((displacement) => displacement + 1);\\n\\tconst handleNextDateClick = (): void => setDisplacement((displacement) => displacement - 1);\\n\\n\\tconst Content = (\\n\\t\\t{\\n\\t\\t\\thours: ContentForHours,\\n\\t\\t\\tdays: ContentForDays,\\n\\t\\t} as const\\n\\t)[timeUnit];\\n\\n\\treturn (\\n\\t\\t<>\\n\\t\\t\\t<EngagementDashboardCardFilter>\\n\\t\\t\\t\\t<Select\\n\\t\\t\\t\\t\\toptions={timeUnitOptions}\\n\\t\\t\\t\\t\\tvalue={timeUnit}\\n\\t\\t\\t\\t\\tonChange={(value) => handleTimeUnitChange(String(value))}\\n\\t\\t\\t\\t\\taria-label={t('Select_period')}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</EngagementDashboardCardFilter>\\n\\t\\t\\t<Content\\n\\t\\t\\t\\tdisplacement={displacement}\\n\\t\\t\\t\\tonPreviousDateClick={handlePreviousDateClick}\\n\\t\\t\\t\\tonNextDateClick={handleNextDateClick}\\n\\t\\t\\t\\ttimezone={timezone}\\n\\t\\t\\t/>\\n\\t\\t</>\\n\\t);\\n};\\n\\nexport default BusiestChatTimesSection;\\n\",null],\"names\":[\"_slicedToArray\",\"Select\",\"React\",\"useMemo\",\"useState\",\"useTranslation\",\"EngagementDashboardCardFilter\",\"ContentForDays\",\"ContentForHours\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"timezone\",\"t\",\"_useTranslation\",\"_useState\",\"_useState2\",\"timeUnit\",\"setTimeUnit\",\"timeUnitOptions\",\"_useState3\",\"_useState4\",\"displacement\",\"setDisplacement\",\"handleTimeUnitChange\",\"Content\",\"hours\",\"days\",\"createElement\",\"Fragment\",\"options\",\"value\",\"onChange\",\"String\",\"onPreviousDateClick\",\"onNextDateClick\"],\"mappings\":\"uBAeA,IAfAA,EAAAC,EAA+CC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA9BC,EAAMC,IAAA,CAAA,uCAAwB,CAAAC,QAAA,SAAAC,CAAA,EAAAZ,EAAAY,CAAA,CAAA,EAAA,GAAtCH,EAAQC,IAAA,CAAM,wBAAwB,CAAAT,OAAA,SAAAW,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAA,QAAA,SAAAE,CAAA,EAAAV,EAAAU,CAAA,EAAAT,QAAA,SAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,SAAA,SAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,gBAAA,CAAAL,eAAA,SAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,mCAAA,CAAA,QAAA,SAAAE,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,mBAAA,CAAA,QAAA,SAAAE,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,oBAAA,CAAA,QAAA,SAAAE,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAA/CH,EAAOI,aAAU,CAee,SAAAC,CAAA,EAA6D,IAA1DC,EAAQD,EAARC,QAAQ,CAClCC,EAACC,AAAKZ,IAANW,CAAC,CAETE,EAAgCd,EAAmB,SAAQe,EAAAnB,EAAAkB,EAAA,GAApDE,EAAQD,CAAA,CAAA,EAAA,CAAEE,EAAWF,CAAA,CAAA,EAAA,CACtBG,EAAkBnB,EACvB,WAAA,MAAM,CACL,CAAC,QAASa,EAAE,SAAS,CACrB,CAAC,OAAQA,EAAE,QAAQ,CACnB,EACD,CAACA,EAAE,EAGJO,EAAwCnB,EAAS,GAAEoB,EAAAxB,EAAAuB,EAAA,GAA5CE,EAAYD,CAAA,CAAA,EAAA,CAAEE,EAAeF,CAAA,CAAA,EAAA,CAE9BG,EAAuB,SAACP,CAAgB,EAC7CC,EAAYD,GACZM,EAAgB,EACjB,EAKME,EACL,CACCC,MAAOrB,EACPsB,KAAMvB,EAEP,CAACa,EAAS,CAEX,OACClB,EAAA6B,aAAA,CAAA7B,EAAA8B,QAAA,CAAA,KACC9B,EAAA6B,aAAA,CAACzB,EAA6B,KAC7BJ,EAAA6B,aAAA,CAAC9B,EAAM,CACNgC,QAASX,EACTY,MAAOd,EACPe,SAAU,SAACD,CAAK,EAAA,OAAKP,EAAqBS,OAAOF,GAAO,EACxD,aAAYlB,EAAE,gBAAiB,IAGjCd,EAAA6B,aAAA,CAACH,EAAO,CACPH,aAAcA,EACdY,oBAtB6B,WAAA,OAAYX,EAAgB,SAACD,CAAY,EAAA,OAAKA,EAAe,CAAC,EAAC,EAuB5Fa,gBAtByB,WAAA,OAAYZ,EAAgB,SAACD,CAAY,EAAA,OAAKA,EAAe,CAAC,EAAC,EAuBxFV,SAAUA,CAAS,GAIvB\"}"}