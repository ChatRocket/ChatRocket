{"code":"function module(e,t,n){n.export({EmojiPickerContext:function(){return r},useEmojiPicker:function(){return c},usePreviewEmoji:function(){return s},useEmojiPickerData:function(){return m}}),n.link(\"react\",{createContext:function(e){o=e},useContext:function(e){i=e}},0);var o,i,r=o(void 0),u=function(){var e=i(r);if(!e)throw Error(\"Must be running in EmojiPicker Context\");return e},c=function(){return{open:u().open,isOpen:u().isOpen,close:u().close}},s=function(){return{emojiToPreview:u().emojiToPreview,handlePreview:u().handlePreview,handleRemovePreview:u().handleRemovePreview}},m=function(){var e=u(),t=e.actualTone,n=e.addRecentEmoji,o=e.currentCategory,i=e.customItemsLimit,r=e.getEmojiListsByCategory,c=e.quickReactions,s=e.recentEmojis,m=e.setActualTone,a=e.setCurrentCategory,j=e.setCustomItemsLimit;return{addRecentEmoji:n,getEmojiListsByCategory:r,recentEmojis:s,setRecentEmojis:e.setRecentEmojis,actualTone:t,currentCategory:o,setCurrentCategory:a,customItemsLimit:i,setCustomItemsLimit:j,setActualTone:m,quickReactions:c}}}","map":"{\"version\":3,\"sources\":[\"client/contexts/EmojiPickerContext.ts\",\"<anon>\"],\"sourcesContent\":[\"import { createContext, useContext } from 'react';\\n\\nimport type { EmojiByCategory } from '../../app/emoji/client';\\n\\ntype EmojiPickerContextValue = {\\n\\topen: (ref: Element, callback: (emoji: string) => void) => void;\\n\\tisOpen: boolean;\\n\\tclose: () => void;\\n\\temojiToPreview: { emoji: string; name: string } | null;\\n\\thandlePreview: (emoji: string, name: string) => void;\\n\\thandleRemovePreview: () => void;\\n\\taddRecentEmoji: (emoji: string) => void;\\n\\tgetEmojiListsByCategory: () => EmojiByCategory[];\\n\\trecentEmojis: string[];\\n\\tsetRecentEmojis: (emoji: string[]) => void;\\n\\tactualTone: number;\\n\\tcurrentCategory: string;\\n\\tsetCurrentCategory: (category: string) => void;\\n\\tcustomItemsLimit: number;\\n\\tsetCustomItemsLimit: (limit: number) => void;\\n\\tsetActualTone: (tone: number) => void;\\n\\tquickReactions: { emoji: string; image: string }[];\\n};\\n\\nexport const EmojiPickerContext = createContext<EmojiPickerContextValue | undefined>(undefined);\\nconst useEmojiPickerContext = (): EmojiPickerContextValue => {\\n\\tconst context = useContext(EmojiPickerContext);\\n\\tif (!context) {\\n\\t\\tthrow new Error('Must be running in EmojiPicker Context');\\n\\t}\\n\\n\\treturn context;\\n};\\n\\nexport const useEmojiPicker = () => ({\\n\\topen: useEmojiPickerContext().open,\\n\\tisOpen: useEmojiPickerContext().isOpen,\\n\\tclose: useEmojiPickerContext().close,\\n});\\n\\nexport const usePreviewEmoji = () => ({\\n\\temojiToPreview: useEmojiPickerContext().emojiToPreview,\\n\\thandlePreview: useEmojiPickerContext().handlePreview,\\n\\thandleRemovePreview: useEmojiPickerContext().handleRemovePreview,\\n});\\n\\nexport const useEmojiPickerData = () => {\\n\\tconst {\\n\\t\\tactualTone,\\n\\t\\taddRecentEmoji,\\n\\t\\tcurrentCategory,\\n\\t\\tcustomItemsLimit,\\n\\t\\tgetEmojiListsByCategory,\\n\\t\\tquickReactions,\\n\\t\\trecentEmojis,\\n\\t\\tsetActualTone,\\n\\t\\tsetCurrentCategory,\\n\\t\\tsetCustomItemsLimit,\\n\\t\\tsetRecentEmojis,\\n\\t} = useEmojiPickerContext();\\n\\n\\treturn {\\n\\t\\taddRecentEmoji,\\n\\t\\tgetEmojiListsByCategory,\\n\\t\\trecentEmojis,\\n\\t\\tsetRecentEmojis,\\n\\t\\tactualTone,\\n\\t\\tcurrentCategory,\\n\\t\\tsetCurrentCategory,\\n\\t\\tcustomItemsLimit,\\n\\t\\tsetCustomItemsLimit,\\n\\t\\tsetActualTone,\\n\\t\\tquickReactions,\\n\\t};\\n};\\n\",null],\"names\":[\"module\",\"export\",\"EmojiPickerContext\",\"useEmojiPicker\",\"usePreviewEmoji\",\"useEmojiPickerData\",\"link\",\"createContext\",\"v\",\"useContext\",\"undefined\",\"useEmojiPickerContext\",\"context\",\"Error\",\"open\",\"isOpen\",\"close\",\"emojiToPreview\",\"handlePreview\",\"handleRemovePreview\",\"_useEmojiPickerContex\",\"actualTone\",\"addRecentEmoji\",\"currentCategory\",\"customItemsLimit\",\"getEmojiListsByCategory\",\"quickReactions\",\"recentEmojis\",\"setActualTone\",\"setCurrentCategory\",\"setCustomItemsLimit\",\"setRecentEmojis\"],\"mappings\":\"uBAAAA,EAAOC,MAAE,CAAA,CAAAC,mBAAyB,WAAQ,OAAQA,CAAA,EAAAC,eAAA,WAAA,OAAAA,CAAA,EAAAC,gBAAA,WAAA,OAAAA,CAAA,EAAAC,mBAAA,WAAA,OAAAA,CAAA,CAAA,GAAAL,EAAAM,IAAA,CAAA,QAAA,CAAAC,cAAA,SAAAC,CAAA,EAAAD,EAAAC,CAAA,EAAAC,WAAA,SAAAD,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAwB3C,IAxB2CD,EAAAE,EAwBrCP,EAAqBK,EAAmDG,KAAAA,GAC/EC,EAAwB,WAC7B,IAAMC,EAAUH,EAAWP,GAC3B,GAAI,CAACU,EACJ,MAAM,AAAIC,MAAM,0CAGjB,OAAOD,CACR,EAEaT,EAAiB,WAAA,MAAO,CACpCW,KAAMH,IAAwBG,IAAI,CAClCC,OAAQJ,IAAwBI,MAAM,CACtCC,MAAOL,IAAwBK,KAAAA,CAC/B,EAEYZ,EAAkB,WAAA,MAAO,CACrCa,eAAgBN,IAAwBM,cAAc,CACtDC,cAAeP,IAAwBO,aAAa,CACpDC,oBAAqBR,IAAwBQ,mBAAAA,CAC7C,EAEYd,EAAqB,WACjC,IAAAe,EAYIT,IAXHU,EAAUD,EAAVC,UAAU,CACVC,EAAcF,EAAdE,cAAc,CACdC,EAAeH,EAAfG,eAAe,CACfC,EAAgBJ,EAAhBI,gBAAgB,CAChBC,EAAuBL,EAAvBK,uBAAuB,CACvBC,EAAcN,EAAdM,cAAc,CACdC,EAAYP,EAAZO,YAAY,CACZC,EAAaR,EAAbQ,aAAa,CACbC,EAAkBT,EAAlBS,kBAAkB,CAClBC,EAAmBV,EAAnBU,mBAAmB,CAIpB,MAAO,CACNR,eAAAA,EACAG,wBAAAA,EACAE,aAAAA,EACAI,gBAPeX,EAAfW,eAAe,CAQfV,WAAAA,EACAE,gBAAAA,EACAM,mBAAAA,EACAL,iBAAAA,EACAM,oBAAAA,EACAF,cAAAA,EACAF,eAAAA,EAEF\"}"}