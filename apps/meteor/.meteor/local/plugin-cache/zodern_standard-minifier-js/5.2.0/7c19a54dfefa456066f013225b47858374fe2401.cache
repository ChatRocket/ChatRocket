{"code":"function module(e,t,o){let s,r;o.export({AudioEncoder:()=>i}),o.link(\"@rocket.chat/emitter\",{Emitter(e){s=e}},0),o.link(\"meteor/meteor\",{Meteor(e){r=e}},1);class i extends s{constructor(e){let{bufferLen:t=4096,numChannels:o=1,bitRate:s=32}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.worker=void 0,this.scriptNode=void 0,this.handleWorkerMessage=e=>{if(\"end\"===e.data.command){let t=new Int8Array([73,68,51,3,0,0,0,0,0,0]),o=[t,...e.data.buffer],s=new Blob(o,{type:\"audio/mpeg\"});this.emit(\"encoded\",s),this.worker.terminate()}},this.handleAudioProcess=e=>{for(let t=0;t<e.inputBuffer.numberOfChannels;t++){let o=e.inputBuffer.getChannelData(t);this.worker.postMessage({command:\"encode\",buffer:o})}};let i=r.absoluteUrl(\"workers/mp3-encoder/index.js\");this.worker=new Worker(i),this.worker.onmessage=this.handleWorkerMessage,this.worker.postMessage({command:\"init\",config:{sampleRate:e.context.sampleRate,numChannels:o,bitRate:s}}),this.scriptNode=e.context.createScriptProcessor(t,o,o),this.scriptNode.onaudioprocess=this.handleAudioProcess,e.connect(this.scriptNode),this.scriptNode.connect(e.context.destination)}close(){this.worker.postMessage({command:\"finish\"})}}}","map":"{\"version\":3,\"sources\":[\"app/ui/client/lib/recorderjs/AudioEncoder.ts\",\"<anon>\"],\"sourcesContent\":[\"import { Emitter } from '@rocket.chat/emitter';\\nimport { Meteor } from 'meteor/meteor';\\n\\nexport class AudioEncoder extends Emitter {\\n\\tprivate worker: Worker;\\n\\n\\tprivate scriptNode: ScriptProcessorNode;\\n\\n\\tconstructor(source: MediaStreamAudioSourceNode, { bufferLen = 4096, numChannels = 1, bitRate = 32 } = {}) {\\n\\t\\tsuper();\\n\\n\\t\\tconst workerPath = Meteor.absoluteUrl('workers/mp3-encoder/index.js');\\n\\n\\t\\tthis.worker = new Worker(workerPath);\\n\\t\\tthis.worker.onmessage = this.handleWorkerMessage;\\n\\n\\t\\tthis.worker.postMessage({\\n\\t\\t\\tcommand: 'init',\\n\\t\\t\\tconfig: {\\n\\t\\t\\t\\tsampleRate: source.context.sampleRate,\\n\\t\\t\\t\\tnumChannels,\\n\\t\\t\\t\\tbitRate,\\n\\t\\t\\t},\\n\\t\\t});\\n\\n\\t\\tthis.scriptNode = source.context.createScriptProcessor(bufferLen, numChannels, numChannels);\\n\\t\\tthis.scriptNode.onaudioprocess = this.handleAudioProcess;\\n\\n\\t\\tsource.connect(this.scriptNode);\\n\\t\\tthis.scriptNode.connect(source.context.destination);\\n\\t}\\n\\n\\tclose() {\\n\\t\\tthis.worker.postMessage({ command: 'finish' });\\n\\t}\\n\\n\\thandleWorkerMessage = (event: MessageEvent) => {\\n\\t\\tswitch (event.data.command) {\\n\\t\\t\\tcase 'end': {\\n\\t\\t\\t\\t// prepend mp3 magic number to the buffer\\n\\t\\t\\t\\tconst magicNoPrefix = new Int8Array([73, 68, 51, 3, 0, 0, 0, 0, 0, 0]);\\n\\t\\t\\t\\tconst bufferWithMagicNo = [magicNoPrefix, ...event.data.buffer];\\n\\t\\t\\t\\tconst blob = new Blob(bufferWithMagicNo, { type: 'audio/mpeg' });\\n\\t\\t\\t\\tthis.emit('encoded', blob);\\n\\t\\t\\t\\tthis.worker.terminate();\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\thandleAudioProcess = (event: AudioProcessingEvent) => {\\n\\t\\tfor (let channel = 0; channel < event.inputBuffer.numberOfChannels; channel++) {\\n\\t\\t\\tconst buffer = event.inputBuffer.getChannelData(channel);\\n\\t\\t\\tthis.worker.postMessage({\\n\\t\\t\\t\\tcommand: 'encode',\\n\\t\\t\\t\\tbuffer,\\n\\t\\t\\t});\\n\\t\\t}\\n\\t};\\n}\\n\",null],\"names\":[\"Emitter\",\"Meteor\",\"module\",\"export\",\"AudioEncoder\",\"link\",\"v\",\"constructor\",\"source\",\"bufferLen\",\"numChannels\",\"bitRate\",\"arguments\",\"length\",\"undefined\",\"worker\",\"scriptNode\",\"handleWorkerMessage\",\"event\",\"data\",\"command\",\"magicNoPrefix\",\"Int8Array\",\"bufferWithMagicNo\",\"buffer\",\"blob\",\"Blob\",\"type\",\"emit\",\"terminate\",\"handleAudioProcess\",\"channel\",\"inputBuffer\",\"numberOfChannels\",\"getChannelData\",\"postMessage\",\"workerPath\",\"absoluteUrl\",\"Worker\",\"onmessage\",\"config\",\"sampleRate\",\"context\",\"createScriptProcessor\",\"onaudioprocess\",\"connect\",\"destination\",\"close\"],\"mappings\":\"2BAA+CA,EAAAC,EAA/CC,EAAOC,MAAE,CAAA,CAAAC,aAAeA,IAAAA,CAAA,GAAuBF,EAAAG,IAAA,CAAA,uBAAA,CAAAL,QAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,gBAAA,CAAAJ,OAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,EAGzC,OAAOF,UAAqBJ,EAKjCO,YAAYC,CAAkC,CAA0D,CAAA,GAAxD,CAAEC,UAAAA,EAAY,IAAI,CAAEC,YAAAA,EAAc,CAAC,CAAEC,QAAAA,EAAU,EAAA,CAAI,CAAAC,UAAAC,MAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,CAAAA,SAAA,CAAA,EAAA,CAAG,CAAA,EACrG,KAAK,GAAG,IAAA,CALDG,MAAM,CAAA,KAAA,EAAA,IAAA,CAENC,UAAU,CAAA,KAAA,EAAA,IAAA,CA8BlBC,mBAAmB,CAAIC,IACtB,GACM,QADEA,EAAMC,IAAI,CAACC,OAAO,CACb,CAEX,IAAMC,EAAgB,IAAIC,UAAU,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,EAC/DC,EAAoB,CAACF,KAAkBH,EAAMC,IAAI,CAACK,MAAM,CAAC,CACzDC,EAAO,IAAIC,KAAKH,EAAmB,CAAEI,KAAM,YAAY,GAC7D,IAAI,CAACC,IAAI,CAAC,UAAWH,GACrB,IAAI,CAACV,MAAM,CAACc,SAAS,EAEtB,CAEF,EAAC,IAAA,CAEDC,kBAAkB,CAAIZ,IACrB,IAAK,IAAIa,EAAU,EAAGA,EAAUb,EAAMc,WAAW,CAACC,gBAAgB,CAAEF,IAAW,CAC9E,IAAMP,EAASN,EAAMc,WAAW,CAACE,cAAc,CAACH,GAChD,IAAI,CAAChB,MAAM,CAACoB,WAAW,CAAC,CACvBf,QAAS,SACTI,OAAAA,GAEF,CACD,EA/CC,IAAMY,EAAanC,EAAOoC,WAAW,CAAC,+BAEtC,CAAA,IAAI,CAACtB,MAAM,CAAG,IAAIuB,OAAOF,GACzB,IAAI,CAACrB,MAAM,CAACwB,SAAS,CAAG,IAAI,CAACtB,mBAAmB,CAEhD,IAAI,CAACF,MAAM,CAACoB,WAAW,CAAC,CACvBf,QAAS,OACToB,OAAQ,CACPC,WAAYjC,EAAOkC,OAAO,CAACD,UAAU,CACrC/B,YAAAA,EACAC,QAAAA,KAIF,IAAI,CAACK,UAAU,CAAGR,EAAOkC,OAAO,CAACC,qBAAqB,CAAClC,EAAWC,EAAaA,GAC/E,IAAI,CAACM,UAAU,CAAC4B,cAAc,CAAG,IAAI,CAACd,kBAAkB,CAExDtB,EAAOqC,OAAO,CAAC,IAAI,CAAC7B,UAAU,EAC9B,IAAI,CAACA,UAAU,CAAC6B,OAAO,CAACrC,EAAOkC,OAAO,CAACI,WAAW,CACnD,CAEAC,OAAK,CACJ,IAAI,CAAChC,MAAM,CAACoB,WAAW,CAAC,CAAEf,QAAS,QAAQ,EAC5C\"}"}