{"code":"function module(e,n,o){o.export({useVideoConfRoomName:function(){return s}}),o.link(\"@rocket.chat/core-typings\",{isDirectMessageRoom:function(e){i=e}},0),o.link(\"@rocket.chat/ui-contexts\",{useUserSubscription:function(e){t=e}},1),o.link(\"../../../../../hooks/useUserDisplayName\",{useUserDisplayName:function(e){u=e}},2);var i,t,u,s=function(e){var n=t(e._id),o=u({name:null==n?void 0:n.fname,username:null==n?void 0:n.name});return i(e)?o:e.fname||e.name}}","map":"{\"version\":3,\"sources\":[\"client/views/room/contextualBar/VideoConference/hooks/useVideoConfRoomName.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom } from '@rocket.chat/core-typings';\\nimport { isDirectMessageRoom } from '@rocket.chat/core-typings';\\nimport { useUserSubscription } from '@rocket.chat/ui-contexts';\\n\\nimport { useUserDisplayName } from '../../../../../hooks/useUserDisplayName';\\n\\nexport const useVideoConfRoomName = (room: IRoom): string | undefined => {\\n\\tconst subscription = useUserSubscription(room._id);\\n\\tconst username = useUserDisplayName({ name: subscription?.fname, username: subscription?.name });\\n\\n\\treturn isDirectMessageRoom(room) ? username : room.fname || room.name;\\n};\\n\",null],\"names\":[\"module\",\"export\",\"useVideoConfRoomName\",\"link\",\"isDirectMessageRoom\",\"v\",\"useUserSubscription\",\"useUserDisplayName\",\"room\",\"subscription\",\"_id\",\"username\",\"name\",\"fname\"],\"mappings\":\"uBACAA,EAAOC,MAAE,CAAA,CAAAC,qBAA2B,WAAA,OAAAA,CAA4B,CAAA,GAAAF,EAAAG,IAAA,CAAA,4BAAA,CAAAC,oBAAA,SAAAC,CAAA,EAAAD,EAAAC,CAAA,CAAA,EAAA,GAAAL,EAAAG,IAAA,CAAA,2BAAA,CAAAG,oBAAA,SAAAD,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAAAL,EAAAG,IAAA,CAAA,0CAAA,CAAAI,mBAAA,SAAAF,CAAA,EAAAE,EAAAF,CAAA,CAAA,EAAA,GAKzD,IALyDD,EAAAE,EAAAC,EAKnDL,EAAuB,SAACM,CAAW,EAC/C,IAAMC,EAAeH,EAAoBE,EAAKE,GAAG,EAC3CC,EAAWJ,EAAmB,CAAEK,KAAMH,MAAAA,EAAY,KAAA,EAAZA,EAAcI,KAAK,CAAEF,SAAUF,MAAAA,EAAY,KAAA,EAAZA,EAAcG,IAAAA,AAAI,GAE7F,OAAOR,EAAoBI,GAAQG,EAAWH,EAAKK,KAAK,EAAIL,EAAKI,IAAI,AACtE\"}"}