{"code":"function module(e,t,a){let s,n,i,r,l,o,d,u,m,g,c,k,h,f,M,E,C,p,v,x;a.link(\"@babel/runtime/helpers/extends\",{default(e){s=e}},0),a.link(\"@rocket.chat/core-typings\",{isVideoConfMessage(e){n=e}},0),a.link(\"@rocket.chat/fuselage\",{Message(e){i=e},MessageLeftContainer(e){r=e},MessageContainer(e){l=e}},1),a.link(\"@rocket.chat/fuselage-hooks\",{useToggle(e){o=e}},2),a.link(\"@rocket.chat/ui-avatar\",{MessageAvatar(e){d=e}},3),a.link(\"@rocket.chat/ui-contexts\",{useTranslation(e){u=e},useUserId(e){m=e}},4),a.link(\"react\",{default(e){g=e},memo(e){c=e}},5),a.link(\"../../../views/room/MessageList/contexts/MessageHighlightContext\",{useIsMessageHighlight(e){k=e}},6),a.link(\"../../../views/room/MessageList/hooks/useJumpToMessage\",{useJumpToMessage(e){h=e}},7),a.link(\"../../../views/room/contexts/UserCardContext\",{useUserCard(e){f=e}},8),a.link(\"../../Emoji\",{default(e){M=e}},9),a.link(\"../IgnoredContent\",{default(e){E=e}},10),a.link(\"../MessageHeader\",{default(e){C=e}},11),a.link(\"../MessageToolbarHolder\",{default(e){p=e}},12),a.link(\"../StatusIndicators\",{default(e){v=e}},13),a.link(\"./thread/ThreadMessageContent\",{default(e){x=e}},14),a.exportDefault(c(e=>{let{message:t,sequential:a,unread:c,showUserAvatar:_}=e,I=u(),T=m(),b=k(t._id),[j,w]=o(t.ignored),{openUserCard:H,triggerProps:q}=f(),U=n(t)?\"videoconf-threads\":\"threads\",y=h(t._id);return g.createElement(i,{role:\"listitem\",\"aria-roledescription\":I(\"thread_message\"),tabIndex:0,id:t._id,ref:y,isEditing:b,isPending:t.temp,sequential:a,\"data-qa-editing\":b,\"data-id\":t._id,\"data-mid\":t._id,\"data-unread\":c,\"data-sequential\":a,\"data-own\":t.u._id===T,\"data-qa-type\":\"message\"},g.createElement(r,null,!a&&t.u.username&&_&&g.createElement(d,s({emoji:t.emoji?g.createElement(M,{emojiHandle:t.emoji,fillContainer:!0}):void 0,avatarUrl:t.avatar,username:t.u.username,size:\"x36\",onClick:e=>H(e,t.u.username),style:{cursor:\"pointer\"},role:\"button\"},q)),a&&g.createElement(v,{message:t})),g.createElement(l,null,!a&&g.createElement(C,{message:t}),j?g.createElement(E,{onShowMessageIgnored:w}):g.createElement(x,{message:t})),!t.private&&g.createElement(p,{message:t,context:U}))}))}","map":"{\"version\":3,\"sources\":[\"client/components/message/variants/ThreadMessage.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { type IThreadMessage, type IThreadMainMessage, isVideoConfMessage } from '@rocket.chat/core-typings';\\nimport { Message, MessageLeftContainer, MessageContainer } from '@rocket.chat/fuselage';\\nimport { useToggle } from '@rocket.chat/fuselage-hooks';\\nimport { MessageAvatar } from '@rocket.chat/ui-avatar';\\nimport { useTranslation, useUserId } from '@rocket.chat/ui-contexts';\\nimport type { ReactElement } from 'react';\\nimport React, { memo } from 'react';\\n\\nimport type { MessageActionContext } from '../../../../app/ui-utils/client/lib/MessageAction';\\nimport { useIsMessageHighlight } from '../../../views/room/MessageList/contexts/MessageHighlightContext';\\nimport { useJumpToMessage } from '../../../views/room/MessageList/hooks/useJumpToMessage';\\nimport { useUserCard } from '../../../views/room/contexts/UserCardContext';\\nimport Emoji from '../../Emoji';\\nimport IgnoredContent from '../IgnoredContent';\\nimport MessageHeader from '../MessageHeader';\\nimport MessageToolbarHolder from '../MessageToolbarHolder';\\nimport StatusIndicators from '../StatusIndicators';\\nimport ThreadMessageContent from './thread/ThreadMessageContent';\\n\\ntype ThreadMessageProps = {\\n\\tmessage: IThreadMessage | IThreadMainMessage;\\n\\tunread: boolean;\\n\\tsequential: boolean;\\n\\tshowUserAvatar: boolean;\\n};\\n\\nconst ThreadMessage = ({ message, sequential, unread, showUserAvatar }: ThreadMessageProps): ReactElement => {\\n\\tconst t = useTranslation();\\n\\tconst uid = useUserId();\\n\\tconst editing = useIsMessageHighlight(message._id);\\n\\tconst [ignored, toggleIgnoring] = useToggle((message as { ignored?: boolean }).ignored);\\n\\tconst { openUserCard, triggerProps } = useUserCard();\\n\\n\\t// Checks if is videoconf message to limit toolbox actions\\n\\tconst messageContext: MessageActionContext = isVideoConfMessage(message) ? 'videoconf-threads' : 'threads';\\n\\n\\tconst messageRef = useJumpToMessage(message._id);\\n\\n\\treturn (\\n\\t\\t<Message\\n\\t\\t\\trole='listitem'\\n\\t\\t\\taria-roledescription={t('thread_message')}\\n\\t\\t\\ttabIndex={0}\\n\\t\\t\\tid={message._id}\\n\\t\\t\\tref={messageRef}\\n\\t\\t\\tisEditing={editing}\\n\\t\\t\\tisPending={message.temp}\\n\\t\\t\\tsequential={sequential}\\n\\t\\t\\tdata-qa-editing={editing}\\n\\t\\t\\tdata-id={message._id}\\n\\t\\t\\tdata-mid={message._id}\\n\\t\\t\\tdata-unread={unread}\\n\\t\\t\\tdata-sequential={sequential}\\n\\t\\t\\tdata-own={message.u._id === uid}\\n\\t\\t\\tdata-qa-type='message'\\n\\t\\t>\\n\\t\\t\\t<MessageLeftContainer>\\n\\t\\t\\t\\t{!sequential && message.u.username && showUserAvatar && (\\n\\t\\t\\t\\t\\t<MessageAvatar\\n\\t\\t\\t\\t\\t\\temoji={message.emoji ? <Emoji emojiHandle={message.emoji} fillContainer /> : undefined}\\n\\t\\t\\t\\t\\t\\tavatarUrl={message.avatar}\\n\\t\\t\\t\\t\\t\\tusername={message.u.username}\\n\\t\\t\\t\\t\\t\\tsize='x36'\\n\\t\\t\\t\\t\\t\\tonClick={(e) => openUserCard(e, message.u.username)}\\n\\t\\t\\t\\t\\t\\tstyle={{ cursor: 'pointer' }}\\n\\t\\t\\t\\t\\t\\trole='button'\\n\\t\\t\\t\\t\\t\\t{...triggerProps}\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t)}\\n\\t\\t\\t\\t{sequential && <StatusIndicators message={message} />}\\n\\t\\t\\t</MessageLeftContainer>\\n\\n\\t\\t\\t<MessageContainer>\\n\\t\\t\\t\\t{!sequential && <MessageHeader message={message} />}\\n\\n\\t\\t\\t\\t{ignored ? <IgnoredContent onShowMessageIgnored={toggleIgnoring} /> : <ThreadMessageContent message={message} />}\\n\\t\\t\\t</MessageContainer>\\n\\t\\t\\t{!message.private && <MessageToolbarHolder message={message} context={messageContext} />}\\n\\t\\t</Message>\\n\\t);\\n};\\n\\nexport default memo(ThreadMessage);\\n\",null],\"names\":[\"_extends\",\"isVideoConfMessage\",\"Message\",\"MessageLeftContainer\",\"MessageContainer\",\"useToggle\",\"MessageAvatar\",\"useTranslation\",\"useUserId\",\"React\",\"memo\",\"useIsMessageHighlight\",\"useJumpToMessage\",\"useUserCard\",\"Emoji\",\"IgnoredContent\",\"MessageHeader\",\"MessageToolbarHolder\",\"StatusIndicators\",\"ThreadMessageContent\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"message\",\"sequential\",\"unread\",\"showUserAvatar\",\"t\",\"uid\",\"editing\",\"_id\",\"ignored\",\"toggleIgnoring\",\"openUserCard\",\"triggerProps\",\"messageContext\",\"messageRef\",\"createElement\",\"role\",\"tabIndex\",\"id\",\"ref\",\"isEditing\",\"isPending\",\"temp\",\"u\",\"username\",\"emoji\",\"emojiHandle\",\"fillContainer\",\"undefined\",\"avatarUrl\",\"avatar\",\"size\",\"onClick\",\"e\",\"style\",\"cursor\",\"onShowMessageIgnored\",\"private\",\"context\"],\"mappings\":\"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\"}"}