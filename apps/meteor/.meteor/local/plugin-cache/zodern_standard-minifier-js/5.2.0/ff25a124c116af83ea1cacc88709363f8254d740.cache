{"code":"function module(e,t,n){let r,a,l,i,o,c,m,u,s,p,g,d;n.link(\"@rocket.chat/fuselage\",{TableRow(e){r=e},TableCell(e){a=e}},0),n.link(\"@rocket.chat/ui-contexts\",{useRouter(e){l=e}},1),n.link(\"react\",{default(e){i=e},useMemo(e){o=e}},2),n.link(\"react-i18next\",{useTranslation(e){c=e}},3),n.link(\"../../../../app/importer/lib/ImporterProgressStep\",{ImportWaitingStates(e){m=e},ImportFileReadyStates(e){u=e},ImportPreparingStartedStates(e){s=e},ImportingStartedStates(e){p=e},ProgressStep(e){g=e}},4),n.link(\"../../../hooks/useFormatDateAndTime\",{useFormatDateAndTime(e){d=e}},5),n.exportDefault(function(e){let{type:t,_updatedAt:n,status:E,file:k=\"\",user:S,small:f,count:{users:I=0,channels:T=0,messages:_=0,total:x=0}={},valid:b}=e,{t:h}=c(),F=d(),R=o(()=>{if(!k)return\"\";let e=\"_\".concat(S,\"_\"),t=k.indexOf(e);return t>=0?k.slice(t+e.length):k},[k,S]),C=o(()=>b&&[g.USER_SELECTION,...m,...u,...s].includes(E),[b,E]),D=o(()=>b&&p.includes(E),[b,E]),P=l();return i.createElement(r,C||D?{tabIndex:0,role:\"link\",action:!0,onClick:()=>{if(C){P.navigate(\"/admin/import/prepare\");return}D&&P.navigate(\"/admin/import/progress\")}}:{},i.createElement(a,null,t),i.createElement(a,null,F(n)),!f&&i.createElement(i.Fragment,null,i.createElement(a,null,E&&h(E.replace(\"importer_\",\"importer_status_\"))),i.createElement(a,null,R),i.createElement(a,{align:\"center\"},I),i.createElement(a,{align:\"center\"},T),i.createElement(a,{align:\"center\"},_),i.createElement(a,{align:\"center\"},x)))})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/import/ImportOperationSummary.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { Serialized } from '@rocket.chat/core-typings';\\nimport { TableRow, TableCell } from '@rocket.chat/fuselage';\\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\\nimport { useRouter } from '@rocket.chat/ui-contexts';\\nimport React, { useMemo } from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport {\\n\\tImportWaitingStates,\\n\\tImportFileReadyStates,\\n\\tImportPreparingStartedStates,\\n\\tImportingStartedStates,\\n\\tProgressStep,\\n} from '../../../../app/importer/lib/ImporterProgressStep';\\nimport { useFormatDateAndTime } from '../../../hooks/useFormatDateAndTime';\\n\\ntype ImportOperationSummaryProps = {\\n\\ttype: string;\\n\\t_updatedAt: Serialized<Date>;\\n\\tstatus: (typeof ProgressStep)[keyof typeof ProgressStep];\\n\\tfile?: string;\\n\\tuser: string;\\n\\tsmall?: boolean;\\n\\tcount?: {\\n\\t\\tusers?: number;\\n\\t\\tchannels?: number;\\n\\t\\tmessages?: number;\\n\\t\\ttotal?: number;\\n\\t};\\n\\tvalid?: boolean;\\n};\\n\\n// TODO: review inner logic\\nfunction ImportOperationSummary({\\n\\ttype,\\n\\t_updatedAt,\\n\\tstatus,\\n\\tfile = '',\\n\\tuser,\\n\\tsmall,\\n\\tcount: { users = 0, channels = 0, messages = 0, total = 0 } = {},\\n\\tvalid,\\n}: ImportOperationSummaryProps) {\\n\\tconst { t } = useTranslation();\\n\\tconst formatDateAndTime = useFormatDateAndTime();\\n\\n\\tconst fileName = useMemo(() => {\\n\\t\\tif (!file) {\\n\\t\\t\\treturn '';\\n\\t\\t}\\n\\n\\t\\tconst fileName = file;\\n\\n\\t\\tconst userPattern = `_${user}_`;\\n\\t\\tconst idx = fileName.indexOf(userPattern);\\n\\t\\tif (idx >= 0) {\\n\\t\\t\\treturn fileName.slice(idx + userPattern.length);\\n\\t\\t}\\n\\n\\t\\treturn fileName;\\n\\t}, [file, user]);\\n\\n\\tconst canContinue = useMemo(\\n\\t\\t() =>\\n\\t\\t\\tvalid &&\\n\\t\\t\\t[ProgressStep.USER_SELECTION, ...ImportWaitingStates, ...ImportFileReadyStates, ...ImportPreparingStartedStates].includes(status),\\n\\t\\t[valid, status],\\n\\t);\\n\\n\\tconst canCheckProgress = useMemo(() => valid && ImportingStartedStates.includes(status), [valid, status]);\\n\\n\\tconst router = useRouter();\\n\\n\\tconst handleClick = () => {\\n\\t\\tif (canContinue) {\\n\\t\\t\\trouter.navigate('/admin/import/prepare');\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (canCheckProgress) {\\n\\t\\t\\trouter.navigate('/admin/import/progress');\\n\\t\\t}\\n\\t};\\n\\n\\tconst hasAction = canContinue || canCheckProgress;\\n\\n\\tconst props = hasAction\\n\\t\\t? {\\n\\t\\t\\t\\ttabIndex: 0,\\n\\t\\t\\t\\trole: 'link',\\n\\t\\t\\t\\taction: true,\\n\\t\\t\\t\\tonClick: handleClick,\\n\\t\\t  }\\n\\t\\t: {};\\n\\n\\treturn (\\n\\t\\t<TableRow {...props}>\\n\\t\\t\\t<TableCell>{type}</TableCell>\\n\\t\\t\\t<TableCell>{formatDateAndTime(_updatedAt)}</TableCell>\\n\\t\\t\\t{!small && (\\n\\t\\t\\t\\t<>\\n\\t\\t\\t\\t\\t<TableCell>{status && t(status.replace('importer_', 'importer_status_') as TranslationKey)}</TableCell>\\n\\t\\t\\t\\t\\t<TableCell>{fileName}</TableCell>\\n\\t\\t\\t\\t\\t<TableCell align='center'>{users}</TableCell>\\n\\t\\t\\t\\t\\t<TableCell align='center'>{channels}</TableCell>\\n\\t\\t\\t\\t\\t<TableCell align='center'>{messages}</TableCell>\\n\\t\\t\\t\\t\\t<TableCell align='center'>{total}</TableCell>\\n\\t\\t\\t\\t</>\\n\\t\\t\\t)}\\n\\t\\t</TableRow>\\n\\t);\\n}\\n\\nexport default ImportOperationSummary;\\n\",null],\"names\":[\"TableRow\",\"TableCell\",\"useRouter\",\"React\",\"useMemo\",\"useTranslation\",\"ImportWaitingStates\",\"ImportFileReadyStates\",\"ImportPreparingStartedStates\",\"ImportingStartedStates\",\"ProgressStep\",\"useFormatDateAndTime\",\"module\",\"link\",\"v\",\"default\",\"exportDefault\",\"_ref\",\"type\",\"_updatedAt\",\"status\",\"file\",\"user\",\"small\",\"count\",\"users\",\"channels\",\"messages\",\"total\",\"valid\",\"t\",\"formatDateAndTime\",\"fileName\",\"userPattern\",\"concat\",\"idx\",\"indexOf\",\"slice\",\"length\",\"canContinue\",\"USER_SELECTION\",\"includes\",\"canCheckProgress\",\"router\",\"createElement\",\"hasAction\",\"tabIndex\",\"role\",\"action\",\"onClick\",\"handleClick\",\"navigate\",\"Fragment\",\"replace\",\"align\"],\"mappings\":\"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\"}"}