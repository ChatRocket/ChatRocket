{"code":"function module(e,t,l){let n,a,i,r,u,d,c,o;l.link(\"@rocket.chat/fuselage\",{FieldLabel(e){n=e},MultiSelectFiltered(e){a=e},MultiSelect(e){i=e},Field(e){r=e},FieldRow(e){u=e}},0),l.link(\"react\",{default(e){d=e}},1),l.link(\"react-i18next\",{useTranslation(e){c=e}},2),l.link(\"../ResetSettingButton\",{default(e){o=e}},3),l.exportDefault(function(e){let{_id:t,label:l,value:m,placeholder:s,readonly:f,disabled:k,required:E,values:g=[],hasResetButton:h,onChangeValue:F,onResetButtonClick:p,autocomplete:q}=e,{t:x}=c(),S=q?a:i;return d.createElement(r,null,d.createElement(u,null,d.createElement(n,{htmlFor:t,title:t,required:E},l),h&&d.createElement(o,{\"data-qa-reset-setting-id\":t,onClick:p})),d.createElement(u,null,d.createElement(S,{\"max-width\":\"full\",\"data-qa-setting-id\":t,id:t,value:m,placeholder:s,disabled:k,readOnly:f,onChange:e=>{null==F||F(e)},options:g.map(e=>{let{key:t,i18nLabel:l}=e;return[t,x(l)]})})))})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/settings/Setting/inputs/MultiSelectSettingInput.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { FieldLabel, MultiSelectFiltered, MultiSelect, Field, FieldRow } from '@rocket.chat/fuselage';\\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\\nimport type { ReactElement } from 'react';\\nimport React from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport ResetSettingButton from '../ResetSettingButton';\\nimport type { SettingInputProps } from './types';\\n\\nexport type valuesOption = { key: string; i18nLabel: TranslationKey };\\ntype MultiSelectSettingInputProps = SettingInputProps<[string, string], string[]> & {\\n\\tvalues: valuesOption[];\\n};\\n\\nfunction MultiSelectSettingInput({\\n\\t_id,\\n\\tlabel,\\n\\tvalue,\\n\\tplaceholder,\\n\\treadonly,\\n\\tdisabled,\\n\\trequired,\\n\\tvalues = [],\\n\\thasResetButton,\\n\\tonChangeValue,\\n\\tonResetButtonClick,\\n\\tautocomplete,\\n}: MultiSelectSettingInputProps): ReactElement {\\n\\tconst { t } = useTranslation();\\n\\n\\tconst handleChange = (value: string[]): void => {\\n\\t\\tonChangeValue?.(value);\\n\\t\\t// onChangeValue && onChangeValue([...event.currentTarget.querySelectorAll('option')].filter((e) => e.selected).map((el) => el.value));\\n\\t};\\n\\tconst Component = autocomplete ? MultiSelectFiltered : MultiSelect;\\n\\treturn (\\n\\t\\t<Field>\\n\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t<FieldLabel htmlFor={_id} title={_id} required={required}>\\n\\t\\t\\t\\t\\t{label}\\n\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t{hasResetButton && <ResetSettingButton data-qa-reset-setting-id={_id} onClick={onResetButtonClick} />}\\n\\t\\t\\t</FieldRow>\\n\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t<Component\\n\\t\\t\\t\\t\\tmax-width='full'\\n\\t\\t\\t\\t\\tdata-qa-setting-id={_id}\\n\\t\\t\\t\\t\\tid={_id}\\n\\t\\t\\t\\t\\tvalue={value}\\n\\t\\t\\t\\t\\tplaceholder={placeholder}\\n\\t\\t\\t\\t\\tdisabled={disabled}\\n\\t\\t\\t\\t\\treadOnly={readonly}\\n\\t\\t\\t\\t\\t// autoComplete={autocomplete === false ? 'off' : undefined}\\n\\t\\t\\t\\t\\tonChange={handleChange}\\n\\t\\t\\t\\t\\toptions={values.map(({ key, i18nLabel }) => [key, t(i18nLabel)])}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</FieldRow>\\n\\t\\t</Field>\\n\\t);\\n}\\n\\nexport default MultiSelectSettingInput;\\n\",null],\"names\":[\"FieldLabel\",\"MultiSelectFiltered\",\"MultiSelect\",\"Field\",\"FieldRow\",\"React\",\"useTranslation\",\"ResetSettingButton\",\"module\",\"link\",\"v\",\"default\",\"exportDefault\",\"_ref\",\"_id\",\"label\",\"value\",\"placeholder\",\"readonly\",\"disabled\",\"required\",\"values\",\"hasResetButton\",\"onChangeValue\",\"onResetButtonClick\",\"autocomplete\",\"t\",\"Component\",\"createElement\",\"htmlFor\",\"title\",\"onClick\",\"id\",\"readOnly\",\"onChange\",\"options\",\"map\",\"_ref2\",\"key\",\"i18nLabel\"],\"mappings\":\"2BAAAA,EAASC,EAAYC,EAAqBC,EAAWC,EAAiDC,EAAAC,EAAAC,EAAxCC,EAAAC,IAAU,CAAA,wBAAM,CAAAT,WAAwBU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,oBAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,YAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,MAAAO,CAAA,EAAAP,EAAAO,CAAA,EAAAN,SAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,gBAAA,CAAAH,eAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,wBAAA,CAAAE,QAAAD,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAAtGF,EAAOI,aAAY,CAcnB,SAAgCC,CAAA,EAaD,GAbE,CAChCC,IAAAA,CAAG,CACHC,MAAAA,CAAK,CACLC,MAAAA,CAAK,CACLC,YAAAA,CAAW,CACXC,SAAAA,CAAQ,CACRC,SAAAA,CAAQ,CACRC,SAAAA,CAAQ,CACRC,OAAAA,EAAS,EAAE,CACXC,eAAAA,CAAc,CACdC,cAAAA,CAAa,CACbC,mBAAAA,CAAkB,CAClBC,aAAAA,CAAAA,CAC8B,CAAAZ,EACxB,CAAEa,EAAAA,CAAAA,CAAG,CAAGpB,IAMRqB,EAAYF,EAAexB,EAAsBC,EACvD,OACCG,EAAAuB,aAAA,CAACzB,EAAK,KACLE,EAAAuB,aAAA,CAACxB,EAAQ,KACRC,EAAAuB,aAAA,CAAC5B,EAAU,CAAC6B,QAASf,EAAKgB,MAAOhB,EAAKM,SAAUA,CAAS,EACvDL,GAEDO,GAAkBjB,EAAAuB,aAAA,CAACrB,EAAkB,CAAC,2BAA0BO,EAAKiB,QAASP,CAAmB,IAEnGnB,EAAAuB,aAAA,CAACxB,EAAQ,KACRC,EAAAuB,aAAA,CAACD,EAAS,CACT,YAAU,OACV,qBAAoBb,EACpBkB,GAAIlB,EACJE,MAAOA,EACPC,YAAaA,EACbE,SAAUA,EACVc,SAAUf,EAEVgB,SAvBkBlB,IACrBO,MAAAA,GAAAA,EAAgBP,EAEjB,EAqBImB,QAASd,EAAOe,GAAG,CAACC,IAAA,GAAC,CAAEC,IAAAA,CAAG,CAAEC,UAAAA,CAAAA,CAAW,CAAAF,EAAA,MAAK,CAACC,EAAKZ,EAAEa,GAAW,EAAE,IAKtE\"}"}