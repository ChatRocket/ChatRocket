{"code":"function module(e,l,a){let n,t,r;a.link(\"react\",{default(e){n=e}},0),a.link(\"./PlanCard/PlanCardPremium\",{default(e){t=e}},1),a.link(\"./PlanCard/PlanCardTrial\",{default(e){r=e}},2),a.exportDefault(e=>{let{licenseInformation:l,licenseLimits:a}=e,i=l.trial;return i?n.createElement(r,{licenseInformation:l}):n.createElement(t,{licenseInformation:l,licenseLimits:a})})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/subscription/components/cards/PlanCard.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { ILicenseV3 } from '@rocket.chat/core-typings';\\nimport type { ReactElement } from 'react';\\nimport React from 'react';\\n\\nimport PlanCardPremium from './PlanCard/PlanCardPremium';\\nimport PlanCardTrial from './PlanCard/PlanCardTrial';\\n\\ntype LicenseLimits = {\\n\\tactiveUsers: { max: number; value?: number };\\n};\\n\\ntype PlanCardProps = {\\n\\tlicenseInformation: ILicenseV3['information'];\\n\\tlicenseLimits: LicenseLimits;\\n};\\n\\nconst PlanCard = ({ licenseInformation, licenseLimits }: PlanCardProps): ReactElement => {\\n\\tconst isTrial = licenseInformation.trial;\\n\\n\\treturn isTrial ? (\\n\\t\\t<PlanCardTrial licenseInformation={licenseInformation} />\\n\\t) : (\\n\\t\\t<PlanCardPremium licenseInformation={licenseInformation} licenseLimits={licenseLimits} />\\n\\t);\\n};\\n\\nexport default PlanCard;\\n\",null],\"names\":[\"React\",\"PlanCardPremium\",\"PlanCardTrial\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"licenseInformation\",\"licenseLimits\",\"isTrial\",\"trial\",\"createElement\"],\"mappings\":\"2BAEAA,EAA0BC,EAAAC,EAAnBC,EAAKC,IAAM,CAAA,QAAQ,CAAAC,QAAAC,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,6BAAA,CAAAC,QAAAC,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2BAAA,CAAAC,QAAAC,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAA1BH,EAAOI,aAAW,CAcDC,IAAuE,GAAtE,CAAEC,mBAAAA,CAAkB,CAAEC,cAAAA,CAAAA,CAA8B,CAAAF,EAC/DG,EAAUF,EAAmBG,KAAK,CAExC,OAAOD,EACNX,EAAAa,aAAA,CAACX,EAAa,CAACO,mBAAoBA,CAAmB,GAEtDT,EAAAa,aAAA,CAACZ,EAAe,CAACQ,mBAAoBA,EAAoBC,cAAeA,CAAc,EAExF\"}"}