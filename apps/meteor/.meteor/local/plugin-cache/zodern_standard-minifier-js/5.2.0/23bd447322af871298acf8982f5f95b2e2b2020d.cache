{"code":"function module(e,s,o){let t,a,u,c;function r(e){let s=c(),o=u();return t(e,{onCopySuccess:a(()=>o({type:\"success\",message:s(\"Copied\")})),onCopyError:a(e=>o({type:\"error\",message:e}))})}o.export({default:()=>r}),o.link(\"@rocket.chat/fuselage-hooks\",{useClipboard(e){t=e},useMutableCallback(e){a=e}},0),o.link(\"@rocket.chat/ui-contexts\",{useToastMessageDispatch(e){u=e},useTranslation(e){c=e}},1)}","map":"{\"version\":3,\"sources\":[\"client/hooks/useClipboardWithToast.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { UseClipboardReturn } from '@rocket.chat/fuselage-hooks';\\nimport { useClipboard, useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport { useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\\n\\nexport default function useClipboardWithToast(text: string): UseClipboardReturn {\\n\\tconst t = useTranslation();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\n\\treturn useClipboard(text, {\\n\\t\\tonCopySuccess: useMutableCallback(() => dispatchToastMessage({ type: 'success', message: t('Copied') })),\\n\\t\\tonCopyError: useMutableCallback((e) => dispatchToastMessage({ type: 'error', message: e })),\\n\\t});\\n}\\n\",null],\"names\":[\"useClipboard\",\"useMutableCallback\",\"useToastMessageDispatch\",\"useTranslation\",\"useClipboardWithToast\",\"text\",\"t\",\"dispatchToastMessage\",\"onCopySuccess\",\"type\",\"message\",\"onCopyError\",\"e\",\"module\",\"export\",\"default\",\"link\",\"v\"],\"mappings\":\"2BACiDA,EAAAC,EAA8BC,EAAAC,EAGjE,SAAUC,EAAsBC,CAAY,EACzD,IAAMC,EAAIH,IACJI,EAAuBL,IAE7B,OAAOF,EAAaK,EAAM,CACzBG,cAAeP,EAAmB,IAAMM,EAAqB,CAAEE,KAAM,UAAWC,QAASJ,EAAE,SAAS,IACpGK,YAAaV,EAAoBW,GAAML,EAAqB,CAAEE,KAAM,QAASC,QAASE,CAAC,KAEzF,CAXAC,EAAOC,MAAE,CAAA,CAAAC,QAAcA,IAAAX,CAAoB,GAAoCS,EAAAG,IAAA,CAAA,8BAAA,CAAAhB,aAAAiB,CAAA,EAAAjB,EAAAiB,CAAA,EAAAhB,mBAAAgB,CAAA,EAAAhB,EAAAgB,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,2BAAA,CAAAd,wBAAAe,CAAA,EAAAf,EAAAe,CAAA,EAAAd,eAAAc,CAAA,EAAAd,EAAAc,CAAA,CAAA,EAAA\"}"}