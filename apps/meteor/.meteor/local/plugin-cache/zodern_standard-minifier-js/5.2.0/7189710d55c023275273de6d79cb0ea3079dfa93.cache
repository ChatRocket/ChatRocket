{"code":"function module(e,t,n){let o,r,l,a,i,c,s,m,f;n.link(\"@rocket.chat/core-typings\",{isVoipRoom(e){o=e},isDirectMessageRoom(e){r=e}},0),n.link(\"@rocket.chat/fuselage\",{Flex(e){l=e},Box(e){a=e}},1),n.link(\"@rocket.chat/ui-avatar\",{UserAvatar(e){i=e}},2),n.link(\"react\",{default(e){c=e}},3),n.link(\"react-i18next\",{useTranslation(e){s=e}},4),n.link(\"../../../../components/voip/room/VoipRoomForeword\",{VoipRoomForeword(e){m=e}},5),n.link(\"./RoomForewordUsernameList\",{default(e){f=e}},6),n.exportDefault(e=>{var t;let{user:n,room:u}=e,{t:d}=s();if(o(u))return c.createElement(m,{room:u});if(!r(u))return c.createElement(a,{fontScale:\"c1\",color:\"default\",display:\"flex\",justifyContent:\"center\",mb:8},d(\"Start_of_conversation\"));let p=null===(t=u.usernames)||void 0===t?void 0:t.filter(e=>e!==(null==n?void 0:n.username));return!p||p.length<1?null:c.createElement(a,{is:\"div\",flexGrow:1,display:\"flex\",justifyContent:\"center\",flexDirection:\"column\",mb:8},c.createElement(l.Item,{grow:1},c.createElement(a,{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"},p.map((e,t)=>c.createElement(a,{is:\"span\",mi:4,key:t},c.createElement(i,{size:\"x48\",username:e}))))),c.createElement(a,{display:\"flex\",color:\"default\",fontScale:\"h4\",flexGrow:1,justifyContent:\"center\",mb:16},d(\"Direct_message_you_have_joined\")),c.createElement(a,{is:\"div\",flexGrow:1,display:\"flex\",justifyContent:\"center\"},c.createElement(f,{usernames:p})))})}","map":"{\"version\":3,\"sources\":[\"client/views/room/body/RoomForeword/RoomForeword.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, IUser } from '@rocket.chat/core-typings';\\nimport { isVoipRoom, isDirectMessageRoom } from '@rocket.chat/core-typings';\\nimport { Flex, Box } from '@rocket.chat/fuselage';\\nimport { UserAvatar } from '@rocket.chat/ui-avatar';\\nimport type { ReactElement } from 'react';\\nimport React from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport { VoipRoomForeword } from '../../../../components/voip/room/VoipRoomForeword';\\nimport RoomForewordUsernameList from './RoomForewordUsernameList';\\n\\ntype RoomForewordProps = { user: IUser | null; room: IRoom };\\n\\nconst RoomForeword = ({ user, room }: RoomForewordProps): ReactElement | null => {\\n\\tconst { t } = useTranslation();\\n\\n\\tif (isVoipRoom(room)) {\\n\\t\\treturn <VoipRoomForeword room={room} />;\\n\\t}\\n\\n\\tif (!isDirectMessageRoom(room)) {\\n\\t\\treturn (\\n\\t\\t\\t<Box fontScale='c1' color='default' display='flex' justifyContent='center' mb={8}>\\n\\t\\t\\t\\t{t('Start_of_conversation')}\\n\\t\\t\\t</Box>\\n\\t\\t);\\n\\t}\\n\\n\\tconst usernames = room.usernames?.filter((username) => username !== user?.username);\\n\\n\\tif (!usernames || usernames.length < 1) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\treturn (\\n\\t\\t<Box is='div' flexGrow={1} display='flex' justifyContent='center' flexDirection='column' mb={8}>\\n\\t\\t\\t<Flex.Item grow={1}>\\n\\t\\t\\t\\t<Box display='flex' alignItems='center' justifyContent='center'>\\n\\t\\t\\t\\t\\t{usernames.map((username, index) => (\\n\\t\\t\\t\\t\\t\\t<Box is='span' mi={4} key={index}>\\n\\t\\t\\t\\t\\t\\t\\t<UserAvatar size='x48' username={username} />\\n\\t\\t\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t\\t))}\\n\\t\\t\\t\\t</Box>\\n\\t\\t\\t</Flex.Item>\\n\\t\\t\\t<Box display='flex' color='default' fontScale='h4' flexGrow={1} justifyContent='center' mb={16}>\\n\\t\\t\\t\\t{t('Direct_message_you_have_joined')}\\n\\t\\t\\t</Box>\\n\\t\\t\\t<Box is='div' flexGrow={1} display='flex' justifyContent='center'>\\n\\t\\t\\t\\t<RoomForewordUsernameList usernames={usernames} />\\n\\t\\t\\t</Box>\\n\\t\\t</Box>\\n\\t);\\n};\\n\\nexport default RoomForeword;\\n\",null],\"names\":[\"isVoipRoom\",\"isDirectMessageRoom\",\"Flex\",\"Box\",\"UserAvatar\",\"React\",\"useTranslation\",\"VoipRoomForeword\",\"RoomForewordUsernameList\",\"module\",\"link\",\"v\",\"default\",\"exportDefault\",\"_ref\",\"_room$usernames\",\"user\",\"room\",\"t\",\"createElement\",\"fontScale\",\"color\",\"display\",\"justifyContent\",\"mb\",\"usernames\",\"filter\",\"username\",\"length\",\"is\",\"flexGrow\",\"flexDirection\",\"Item\",\"grow\",\"alignItems\",\"map\",\"index\",\"mi\",\"key\",\"size\"],\"mappings\":\"2BACAA,EAASC,EAAmEC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAvDC,EAAqBC,IAAA,CAAA,4BAAiC,CAACV,WAAAW,CAAA,EAAAX,EAAAW,CAAA,EAAAV,oBAAAU,CAAA,EAAAV,EAAAU,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,wBAAA,CAAAR,KAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,IAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,yBAAA,CAAAN,WAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,gBAAA,CAAAJ,eAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,oDAAA,CAAAH,iBAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,6BAAA,CAAAE,QAAAD,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAA5EF,EAAOI,aAAY,CAYEC,IAA2D,IAAAC,EAAA,GAA1D,CAAEC,KAAAA,CAAI,CAAEC,KAAAA,CAAAA,CAAyB,CAAAH,EAChD,CAAEI,EAAAA,CAAAA,CAAG,CAAGZ,IAEd,GAAIN,EAAWiB,GACd,OAAOZ,EAAAc,aAAA,CAACZ,EAAgB,CAACU,KAAMA,CAAK,GAGrC,GAAI,CAAChB,EAAoBgB,GACxB,OACCZ,EAAAc,aAAA,CAAChB,EAAG,CAACiB,UAAU,KAAKC,MAAM,UAAUC,QAAQ,OAAOC,eAAe,SAASC,GAAI,CAAE,EAC/EN,EAAE,0BAKN,IAAMO,EAAS,AAAiB,OAAjBV,CAAAA,EAAGE,EAAKQ,SAAS,AAATA,GAASV,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAdA,EAAgBW,MAAM,CAAEC,GAAaA,IAAaX,CAAAA,MAAAA,EAAI,KAAA,EAAJA,EAAMW,QAAQ,AAARA,SAE1E,AAAI,CAACF,GAAaA,EAAUG,MAAM,CAAG,EAC7B,KAIPvB,EAAAc,aAAA,CAAChB,EAAG,CAAC0B,GAAG,MAAMC,SAAU,EAAGR,QAAQ,OAAOC,eAAe,SAASQ,cAAc,SAASP,GAAI,CAAE,EAC9FnB,EAAAc,aAAA,CAACjB,EAAK8B,IAAI,CAAA,CAACC,KAAM,CAAE,EAClB5B,EAAAc,aAAA,CAAChB,EAAG,CAACmB,QAAQ,OAAOY,WAAW,SAASX,eAAe,QAAQ,EAC7DE,EAAUU,GAAG,CAAC,CAACR,EAAUS,IACzB/B,EAAAc,aAAA,CAAChB,EAAG,CAAC0B,GAAG,OAAOQ,GAAI,EAAGC,IAAKF,CAAM,EAChC/B,EAAAc,aAAA,CAACf,EAAU,CAACmC,KAAK,MAAMZ,SAAUA,CAAS,OAK9CtB,EAAAc,aAAA,CAAChB,EAAG,CAACmB,QAAQ,OAAOD,MAAM,UAAUD,UAAU,KAAKU,SAAU,EAAGP,eAAe,SAASC,GAAI,EAAG,EAC7FN,EAAE,mCAEJb,EAAAc,aAAA,CAAChB,EAAG,CAAC0B,GAAG,MAAMC,SAAU,EAAGR,QAAQ,OAAOC,eAAe,QAAQ,EAChElB,EAAAc,aAAA,CAACX,EAAwB,CAACiB,UAAWA,CAAU,IAInD\"}"}