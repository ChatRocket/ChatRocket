{"code":"function module(n,o,s){s.export({useMessageComposerIsAnonymous:function(){return u}}),s.link(\"@rocket.chat/ui-contexts\",{useSetting:function(n){e=n},useUserId:function(n){t=n}},0);var e,t,u=function(){var n=e(\"Accounts_AllowAnonymousRead\"),o=e(\"Accounts_AllowAnonymousWrite\"),s=t();if(!s&&!n&&!o)throw Error(\"Anonymous access is disabled\");return!s}}","map":"{\"version\":3,\"sources\":[\"client/views/room/composer/hooks/useMessageComposerIsAnonymous.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useSetting, useUserId } from '@rocket.chat/ui-contexts';\\n\\nexport const useMessageComposerIsAnonymous = (): boolean => {\\n\\tconst isAnonymousReadEnabled = useSetting('Accounts_AllowAnonymousRead');\\n\\tconst isAnonymousWriteEnabled = useSetting('Accounts_AllowAnonymousWrite');\\n\\n\\tconst uid = useUserId();\\n\\n\\tif (!uid && !isAnonymousReadEnabled && !isAnonymousWriteEnabled) {\\n\\t\\tthrow new Error('Anonymous access is disabled');\\n\\t}\\n\\treturn Boolean(!uid);\\n};\\n\",null],\"names\":[\"module\",\"export\",\"useMessageComposerIsAnonymous\",\"link\",\"useSetting\",\"v\",\"useUserId\",\"isAnonymousReadEnabled\",\"isAnonymousWriteEnabled\",\"uid\",\"Error\"],\"mappings\":\"uBAAAA,EAAOC,MAAE,CAAA,CAAAC,8BAA6B,WAAA,OAAAA,CAA2B,CAAA,GAAAF,EAAAG,IAAA,CAAA,2BAAA,CAAAC,WAAA,SAAAC,CAAA,EAAAD,EAAAC,CAAA,EAAAC,UAAA,SAAAD,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAE1D,IAF0DD,EAAAE,EAEpDJ,EAAgC,WAC5C,IAAMK,EAAyBH,EAAW,+BACpCI,EAA0BJ,EAAW,gCAErCK,EAAMH,IAEZ,GAAI,CAACG,GAAO,CAACF,GAA0B,CAACC,EACvC,MAAM,AAAIE,MAAM,gCAEjB,MAAe,CAACD,CACjB\"}"}