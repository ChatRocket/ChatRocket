{"code":"function module(e,i,n){let s,t,l,a,r,d,o,u,m;n.link(\"meteor/meteor\",{Meteor(e){s=e}},0),n.link(\"../../../../client/lib/onClientMessageReceived\",{onClientMessageReceived(e){t=e}},1),n.link(\"../../../../client/lib/toast\",{dispatchToastMessage(e){l=e}},2),n.link(\"../../../../lib/callbacks\",{callbacks(e){a=e}},3),n.link(\"../../../../lib/utils/stringUtils\",{trim(e){r=e}},4),n.link(\"../../../models/client\",{ChatMessage(e){d=e},ChatRoom(e){o=e}},5),n.link(\"../../../settings/client\",{settings(e){u=e}},6),n.link(\"../../../utils/lib/i18n\",{t(e){m=e}},7),s.methods({async sendMessage(e){let i=s.userId();if(!i||\"\"===r(e.msg))return!1;let n=e._id&&d.findOne({_id:e._id});if(n)return l({type:\"error\",message:m(\"Message_Already_Sent\")});let g=s.user();if(!(null!=g&&g.username))throw new s.Error(\"error-invalid-user\",\"Invalid user\",{method:\"sendMessage\"});e.ts=new Date,e.u={_id:i,username:g.username,name:g.name||\"\"},e.temp=!0,u.get(\"Message_Read_Receipt_Enabled\")&&(e.unread=!0);let c=o.findOne({_id:e.rid},{fields:{federated:1,name:1}});null!=c&&c.federated||await t(e).then(e=>(d.insert(e),a.run(\"afterSaveMessage\",e,{room:c})))}})}","map":"{\"version\":3,\"sources\":[\"app/lib/client/methods/sendMessage.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage, IUser } from '@rocket.chat/core-typings';\\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\\nimport { Meteor } from 'meteor/meteor';\\n\\nimport { onClientMessageReceived } from '../../../../client/lib/onClientMessageReceived';\\nimport { dispatchToastMessage } from '../../../../client/lib/toast';\\nimport { callbacks } from '../../../../lib/callbacks';\\nimport { trim } from '../../../../lib/utils/stringUtils';\\nimport { ChatMessage, ChatRoom } from '../../../models/client';\\nimport { settings } from '../../../settings/client';\\nimport { t } from '../../../utils/lib/i18n';\\n\\nMeteor.methods<ServerMethods>({\\n\\tasync sendMessage(message) {\\n\\t\\tconst uid = Meteor.userId();\\n\\t\\tif (!uid || trim(message.msg) === '') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t\\tconst messageAlreadyExists = message._id && ChatMessage.findOne({ _id: message._id });\\n\\t\\tif (messageAlreadyExists) {\\n\\t\\t\\treturn dispatchToastMessage({ type: 'error', message: t('Message_Already_Sent') });\\n\\t\\t}\\n\\t\\tconst user = Meteor.user() as IUser | null;\\n\\t\\tif (!user?.username) {\\n\\t\\t\\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'sendMessage' });\\n\\t\\t}\\n\\t\\tmessage.ts = new Date();\\n\\t\\tmessage.u = {\\n\\t\\t\\t_id: uid,\\n\\t\\t\\tusername: user.username,\\n\\t\\t\\tname: user.name || '',\\n\\t\\t};\\n\\t\\tmessage.temp = true;\\n\\t\\tif (settings.get('Message_Read_Receipt_Enabled')) {\\n\\t\\t\\tmessage.unread = true;\\n\\t\\t}\\n\\n\\t\\t// If the room is federated, send the message to matrix only\\n\\t\\tconst room = ChatRoom.findOne({ _id: message.rid }, { fields: { federated: 1, name: 1 } });\\n\\t\\tif (room?.federated) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tawait onClientMessageReceived(message as IMessage).then((message) => {\\n\\t\\t\\tChatMessage.insert(message);\\n\\t\\t\\treturn callbacks.run('afterSaveMessage', message, { room });\\n\\t\\t});\\n\\t},\\n});\\n\",null],\"names\":[\"Meteor\",\"onClientMessageReceived\",\"dispatchToastMessage\",\"callbacks\",\"trim\",\"ChatMessage\",\"ChatRoom\",\"settings\",\"t\",\"module\",\"link\",\"v\",\"methods\",\"sendMessage\",\"message\",\"uid\",\"userId\",\"msg\",\"messageAlreadyExists\",\"_id\",\"findOne\",\"type\",\"user\",\"username\",\"Error\",\"method\",\"ts\",\"Date\",\"u\",\"name\",\"temp\",\"get\",\"unread\",\"room\",\"rid\",\"fields\",\"federated\",\"then\",\"insert\",\"run\"],\"mappings\":\"2BAEAA,EAAuCC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA9BC,EAAQC,IAAA,CAAM,gBAAgB,CAAAV,OAAAW,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,iDAAA,CAAAT,wBAAAU,CAAA,EAAAV,EAAAU,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,+BAAA,CAAAR,qBAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,4BAAA,CAAAP,UAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,oCAAA,CAAAN,KAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,yBAAA,CAAAL,YAAAM,CAAA,EAAAN,EAAAM,CAAA,EAAAL,SAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,2BAAA,CAAAH,SAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,0BAAA,CAAAF,EAAAG,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAUvCX,EAAOY,OAAO,CAAgB,CAC7B,MAAMC,YAAYC,CAAO,EACxB,IAAMC,EAAMf,EAAOgB,MAAM,GACzB,GAAI,CAACD,GAAOX,AAAsB,KAAtBA,EAAKU,EAAQG,GAAG,EAC3B,MAAO,CAAA,EAER,IAAMC,EAAuBJ,EAAQK,GAAG,EAAId,EAAYe,OAAO,CAAC,CAAED,IAAKL,EAAQK,GAAAA,AAAG,GAClF,GAAID,EACH,OAAOhB,EAAqB,CAAEmB,KAAM,QAASP,QAASN,EAAE,uBAAuB,GAEhF,IAAMc,EAAOtB,EAAOsB,IAAI,GACxB,GAAI,CAACA,CAAAA,MAAAA,GAAAA,EAAMC,QAAQ,AAARA,EACV,MAAM,IAAIvB,EAAOwB,KAAK,CAAC,qBAAsB,eAAgB,CAAEC,OAAQ,aAAa,EAErFX,CAAAA,EAAQY,EAAE,CAAG,IAAIC,KACjBb,EAAQc,CAAC,CAAG,CACXT,IAAKJ,EACLQ,SAAUD,EAAKC,QAAQ,CACvBM,KAAMP,EAAKO,IAAI,EAAI,IAEpBf,EAAQgB,IAAI,CAAG,CAAA,EACXvB,EAASwB,GAAG,CAAC,iCAChBjB,CAAAA,EAAQkB,MAAM,CAAG,CAAA,CAAA,EAIlB,IAAMC,EAAO3B,EAASc,OAAO,CAAC,CAAED,IAAKL,EAAQoB,GAAAA,AAAG,EAAI,CAAEC,OAAQ,CAAEC,UAAW,EAAGP,KAAM,CAAC,CAAE,SACnFI,GAAAA,EAAMG,SAAS,EAInB,MAAMnC,EAAwBa,GAAqBuB,IAAI,CAAEvB,IACxDT,EAAYiC,MAAM,CAACxB,GACZX,EAAUoC,GAAG,CAAC,mBAAoBzB,EAAS,CAAEmB,KAAAA,CAAI,IAE1D\"}"}