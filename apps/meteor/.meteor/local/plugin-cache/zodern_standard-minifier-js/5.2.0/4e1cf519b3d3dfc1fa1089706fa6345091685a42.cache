{"code":"function module(e,t,n){n.link(\"@babel/runtime/regenerator\",{default:function(e){i=e}},0),n.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(e){o=e}},1),n.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(e){s=e}},2),n.export({useHistoryList:function(){return m}}),n.link(\"@rocket.chat/ui-contexts\",{useEndpoint:function(e){r=e}},0),n.link(\"react\",{useCallback:function(e){l=e},useState:function(e){u=e}},1),n.link(\"../../../hooks/lists/useScrollableRecordList\",{useScrollableRecordList:function(e){a=e}},2),n.link(\"../../../hooks/useComponentDidUpdate\",{useComponentDidUpdate:function(e){c=e}},3),n.link(\"../../../lib/lists/RecordList\",{RecordList:function(e){d=e}},4),n.link(\"../../../lib/utils/mapMessageFromApi\",{mapMessageFromApi:function(e){f=e}},5);var i,o,s,r,l,u,a,c,d,f,m=function(e){var t=u(function(){return new d}),n=s(t,2),m=n[0],v=n[1],p=l(function(){return v(new d)},[]),b=r(\"GET\",\"/v1/livechat/visitors.searchChats/room/:roomId/visitor/:visitorId\",{roomId:e.roomId,visitorId:e.visitorId});c(function(){e&&p()},[e,p]);var h=l(function(t,n){var s,r,l;return i.async(function(u){for(;;)switch(u.prev=u.next){case 0:return u.next=2,i.awrap(b(o(o({},e.filter&&{searchText:e.filter}),{},{closedChatsOnly:\"true\",servedChatsOnly:\"false\",offset:t,count:n+t})));case 2:return r=(s=u.sent).history,l=s.total,u.abrupt(\"return\",{items:r.map(function(e){return o(o({},e),{},{ts:new Date(e.ts),_updatedAt:new Date(e.ts),closedAt:e.closedAt?new Date(e.closedAt):void 0,servedBy:e.servedBy?o(o({},e.servedBy),{},{ts:new Date(e.servedBy.ts)}):void 0,closingMessage:e.closingMessage?f(e.closingMessage):void 0})}),itemCount:l});case 6:case\"end\":return u.stop()}},null,null,null,Promise)},[b,e]),k=a(m,h,25);return{itemsList:m,loadMoreItems:k.loadMoreItems,initialItemCount:k.initialItemCount}}}","map":"{\"version\":3,\"sources\":[\"client/views/omnichannel/contactHistory/useHistoryList.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { VisitorSearchChatsResult } from '@rocket.chat/rest-typings';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useCallback, useState } from 'react';\\n\\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\\nimport { RecordList } from '../../../lib/lists/RecordList';\\nimport { mapMessageFromApi } from '../../../lib/utils/mapMessageFromApi';\\n\\ntype HistoryListOptions = {\\n\\tfilter: string;\\n\\troomId: string;\\n\\tvisitorId: string;\\n};\\n\\nexport const useHistoryList = (\\n\\toptions: HistoryListOptions,\\n): {\\n\\titemsList: RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>;\\n\\tinitialItemCount: number;\\n\\tloadMoreItems: (start: number, end: number) => void;\\n} => {\\n\\tconst [itemsList, setItemsList] = useState(() => new RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>());\\n\\tconst reload = useCallback(() => setItemsList(new RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>()), []);\\n\\n\\tconst getHistory = useEndpoint('GET', '/v1/livechat/visitors.searchChats/room/:roomId/visitor/:visitorId', {\\n\\t\\troomId: options.roomId,\\n\\t\\tvisitorId: options.visitorId,\\n\\t});\\n\\n\\tuseComponentDidUpdate(() => {\\n\\t\\toptions && reload();\\n\\t}, [options, reload]);\\n\\n\\tconst fetchData = useCallback(\\n\\t\\tasync (start, end) => {\\n\\t\\t\\tconst { history, total } = await getHistory({\\n\\t\\t\\t\\t...(options.filter && { searchText: options.filter }),\\n\\t\\t\\t\\tclosedChatsOnly: 'true',\\n\\t\\t\\t\\tservedChatsOnly: 'false',\\n\\t\\t\\t\\toffset: start,\\n\\t\\t\\t\\tcount: end + start,\\n\\t\\t\\t});\\n\\t\\t\\treturn {\\n\\t\\t\\t\\titems: history.map((history) => ({\\n\\t\\t\\t\\t\\t...history,\\n\\t\\t\\t\\t\\tts: new Date(history.ts),\\n\\t\\t\\t\\t\\t_updatedAt: new Date(history.ts),\\n\\t\\t\\t\\t\\tclosedAt: history.closedAt ? new Date(history.closedAt) : undefined,\\n\\t\\t\\t\\t\\tservedBy: history.servedBy ? { ...history.servedBy, ts: new Date(history.servedBy.ts) } : undefined,\\n\\t\\t\\t\\t\\tclosingMessage: history.closingMessage ? mapMessageFromApi(history.closingMessage) : undefined,\\n\\t\\t\\t\\t})),\\n\\t\\t\\t\\titemCount: total,\\n\\t\\t\\t};\\n\\t\\t},\\n\\t\\t[getHistory, options],\\n\\t);\\n\\n\\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\\n\\n\\treturn {\\n\\t\\titemsList,\\n\\t\\tloadMoreItems,\\n\\t\\tinitialItemCount,\\n\\t};\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"_objectSpread\",\"_slicedToArray\",\"export\",\"useHistoryList\",\"useEndpoint\",\"useCallback\",\"useState\",\"useScrollableRecordList\",\"useComponentDidUpdate\",\"RecordList\",\"mapMessageFromApi\",\"options\",\"_useState\",\"_useState2\",\"itemsList\",\"setItemsList\",\"reload\",\"getHistory\",\"roomId\",\"visitorId\",\"fetchData\",\"start\",\"end\",\"_await$getHistory\",\"history\",\"total\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"filter\",\"searchText\",\"closedChatsOnly\",\"servedChatsOnly\",\"offset\",\"count\",\"sent\",\"abrupt\",\"items\",\"map\",\"ts\",\"Date\",\"_updatedAt\",\"closedAt\",\"undefined\",\"servedBy\",\"closingMessage\",\"itemCount\",\"stop\",\"Promise\",\"_useScrollableRecordL\",\"loadMoreItems\",\"initialItemCount\"],\"mappings\":\"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\"}"}