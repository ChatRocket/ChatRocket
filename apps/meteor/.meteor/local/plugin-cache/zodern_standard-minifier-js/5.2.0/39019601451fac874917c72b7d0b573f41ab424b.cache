{"code":"function module(e,t,l){let a,r,n,u,o,i,s,c,m,d,p,h,f,k,b,v,E,g;let x=[\"onChange\",\"value\",\"placeholder\"];l.link(\"@babel/runtime/helpers/extends\",{default(e){a=e}},0),l.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){r=e}},1),l.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default(e){n=e}},2),l.link(\"@rocket.chat/fuselage\",{MultiSelectFiltered(e){u=e},Icon(e){o=e},Box(e){i=e},Chip(e){s=e}},0),l.link(\"@rocket.chat/fuselage-hooks\",{useDebouncedValue(e){c=e}},1),l.link(\"@rocket.chat/ui-avatar\",{UserAvatar(e){m=e}},2),l.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){d=e}},3),l.link(\"@tanstack/react-query\",{useQuery(e){p=e}},4),l.link(\"react\",{default(e){h=e},memo(e){f=e},useState(e){k=e},useCallback(e){b=e},useMemo(e){v=e}},5),l.link(\"./UserAutoCompleteMultipleOptions\",{default(e){E=e},OptionsContext(e){g=e}},6);let C=RegExp(\"@(.*:.*)\");l.exportDefault(f(e=>{let{onChange:t,value:l,placeholder:f}=e,y=n(e,x),[S,M]=k(\"\"),[O,A]=k({}),D=c(S,500),j=d(\"GET\",\"/v1/users.autocomplete\"),{data:q}=p([\"users.autocomplete\",D],async()=>{let e=await j({selector:JSON.stringify({term:D})}),t=e.items.map(e=>[e.username,e]);return C.test(D)&&t.unshift([D,{name:D,username:D,_federated:!0}]),t},{keepPreviousData:!0}),w=v(()=>q||[],[q]),P=b(e=>{var t;let l=null===(t=w.find(t=>{let[l]=t;return l===e}))||void 0===t?void 0:t[1];if(!l)throw Error(\"UserAutoCompleteMultiple - onAddSelected - failed to cache option\");A(t=>r(r({},t),{},{[e]:l}))},[A,w]),U=b(e=>A(t=>{let l=r({},t);return delete l[e],l}),[A]),z=b(e=>{t(e);let a=e.filter(e=>!l.includes(e))[0],r=l.filter(t=>!e.includes(t))[0];M(\"\"),a&&P(a),r&&U(r)},[t,M,P,U,l]);return h.createElement(g.Provider,{value:{options:w}},h.createElement(u,a({},y,{\"data-qa-type\":\"user-auto-complete-input\",placeholder:f,value:l,onChange:z,filter:S,setFilter:M,renderSelected:e=>{let{value:t,onMouseDown:l}=e,a=O[t]||{};return h.createElement(s,{key:t,height:\"x20\",onMouseDown:l,mie:4,mb:2},a._federated?h.createElement(o,{size:\"x20\",name:\"globe\"}):h.createElement(m,{size:\"x20\",username:t}),h.createElement(i,{is:\"span\",margin:\"none\",mis:4},a.name||a.username||t))},renderOptions:E,options:w.concat(Object.entries(O)).map(e=>{let[,t]=e;return[t.username,t.name||t.username]}),\"data-qa\":\"create-channel-users-autocomplete\"})))}))}","map":"{\"version\":3,\"sources\":[\"client/components/UserAutoCompleteMultiple/UserAutoCompleteMultipleFederated.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { MultiSelectFiltered, Icon, Box, Chip } from '@rocket.chat/fuselage';\\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\\nimport { UserAvatar } from '@rocket.chat/ui-avatar';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useQuery } from '@tanstack/react-query';\\nimport type { ReactElement, AllHTMLAttributes } from 'react';\\nimport React, { memo, useState, useCallback, useMemo } from 'react';\\n\\nimport AutocompleteOptions, { OptionsContext } from './UserAutoCompleteMultipleOptions';\\n\\ntype UserAutoCompleteMultipleFederatedProps = {\\n\\tonChange: (value: Array<string>) => void;\\n\\tvalue: Array<string>;\\n\\tplaceholder?: string;\\n} & Omit<AllHTMLAttributes<HTMLElement>, 'is' | 'onChange'>;\\n\\ntype UserAutoCompleteOptionType = {\\n\\tname: string;\\n\\tusername: string;\\n\\t_federated?: boolean;\\n};\\n\\ntype UserAutoCompleteOptions = {\\n\\t[k: string]: UserAutoCompleteOptionType;\\n};\\n\\nconst matrixRegex = new RegExp('@(.*:.*)');\\n\\nconst UserAutoCompleteMultipleFederated = ({\\n\\tonChange,\\n\\tvalue,\\n\\tplaceholder,\\n\\t...props\\n}: UserAutoCompleteMultipleFederatedProps): ReactElement => {\\n\\tconst [filter, setFilter] = useState('');\\n\\tconst [selectedCache, setSelectedCache] = useState<UserAutoCompleteOptions>({});\\n\\n\\tconst debouncedFilter = useDebouncedValue(filter, 500);\\n\\tconst getUsers = useEndpoint('GET', '/v1/users.autocomplete');\\n\\n\\tconst { data } = useQuery(\\n\\t\\t['users.autocomplete', debouncedFilter],\\n\\t\\tasync () => {\\n\\t\\t\\tconst users = await getUsers({ selector: JSON.stringify({ term: debouncedFilter }) });\\n\\t\\t\\tconst options = users.items.map((item): [string, UserAutoCompleteOptionType] => [item.username, item]);\\n\\n\\t\\t\\t// Add extra option if filter text matches `username:server`\\n\\t\\t\\t// Used to add federated users that do not exist yet\\n\\t\\t\\tif (matrixRegex.test(debouncedFilter)) {\\n\\t\\t\\t\\toptions.unshift([debouncedFilter, { name: debouncedFilter, username: debouncedFilter, _federated: true }]);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn options;\\n\\t\\t},\\n\\t\\t{ keepPreviousData: true },\\n\\t);\\n\\n\\tconst options = useMemo(() => data || [], [data]);\\n\\n\\tconst onAddUser = useCallback(\\n\\t\\t(username: string): void => {\\n\\t\\t\\tconst user = options.find(([val]) => val === username)?.[1];\\n\\t\\t\\tif (!user) {\\n\\t\\t\\t\\tthrow new Error('UserAutoCompleteMultiple - onAddSelected - failed to cache option');\\n\\t\\t\\t}\\n\\t\\t\\tsetSelectedCache((selectedCache) => ({ ...selectedCache, [username]: user }));\\n\\t\\t},\\n\\t\\t[setSelectedCache, options],\\n\\t);\\n\\n\\tconst onRemoveUser = useCallback(\\n\\t\\t(username: string): void =>\\n\\t\\t\\tsetSelectedCache((selectedCache) => {\\n\\t\\t\\t\\tconst users = { ...selectedCache };\\n\\t\\t\\t\\tdelete users[username];\\n\\t\\t\\t\\treturn users;\\n\\t\\t\\t}),\\n\\t\\t[setSelectedCache],\\n\\t);\\n\\n\\tconst handleOnChange = useCallback(\\n\\t\\t(usernames: string[]) => {\\n\\t\\t\\tonChange(usernames);\\n\\t\\t\\tconst newAddedUsername = usernames.filter((username) => !value.includes(username))[0];\\n\\t\\t\\tconst removedUsername = value.filter((username) => !usernames.includes(username))[0];\\n\\t\\t\\tsetFilter('');\\n\\t\\t\\tnewAddedUsername && onAddUser(newAddedUsername);\\n\\t\\t\\tremovedUsername && onRemoveUser(removedUsername);\\n\\t\\t},\\n\\t\\t[onChange, setFilter, onAddUser, onRemoveUser, value],\\n\\t);\\n\\n\\treturn (\\n\\t\\t<OptionsContext.Provider value={{ options }}>\\n\\t\\t\\t<MultiSelectFiltered\\n\\t\\t\\t\\t{...props}\\n\\t\\t\\t\\tdata-qa-type='user-auto-complete-input'\\n\\t\\t\\t\\tplaceholder={placeholder}\\n\\t\\t\\t\\tvalue={value}\\n\\t\\t\\t\\tonChange={handleOnChange}\\n\\t\\t\\t\\tfilter={filter}\\n\\t\\t\\t\\tsetFilter={setFilter}\\n\\t\\t\\t\\trenderSelected={({ value, onMouseDown }: { value: string; onMouseDown: () => void }) => {\\n\\t\\t\\t\\t\\tconst currentCachedOption = selectedCache[value] || {};\\n\\n\\t\\t\\t\\t\\treturn (\\n\\t\\t\\t\\t\\t\\t<Chip key={value} height='x20' onMouseDown={onMouseDown} mie={4} mb={2}>\\n\\t\\t\\t\\t\\t\\t\\t{currentCachedOption._federated ? <Icon size='x20' name='globe' /> : <UserAvatar size='x20' username={value} />}\\n\\t\\t\\t\\t\\t\\t\\t<Box is='span' margin='none' mis={4}>\\n\\t\\t\\t\\t\\t\\t\\t\\t{currentCachedOption.name || currentCachedOption.username || value}\\n\\t\\t\\t\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t\\t\\t</Chip>\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}}\\n\\t\\t\\t\\trenderOptions={AutocompleteOptions}\\n\\t\\t\\t\\toptions={options.concat(Object.entries(selectedCache)).map(([, item]) => [item.username, item.name || item.username])}\\n\\t\\t\\t\\tdata-qa='create-channel-users-autocomplete'\\n\\t\\t\\t/>\\n\\t\\t</OptionsContext.Provider>\\n\\t);\\n};\\n\\nexport default memo(UserAutoCompleteMultipleFederated);\\n\",null],\"names\":[\"_extends\",\"_objectSpread\",\"_objectWithoutProperties\",\"MultiSelectFiltered\",\"Icon\",\"Box\",\"Chip\",\"useDebouncedValue\",\"UserAvatar\",\"useEndpoint\",\"useQuery\",\"React\",\"memo\",\"useState\",\"useCallback\",\"useMemo\",\"AutocompleteOptions\",\"OptionsContext\",\"module\",\"link\",\"default\",\"v\",\"matrixRegex\",\"RegExp\",\"exportDefault\",\"_ref\",\"onChange\",\"value\",\"placeholder\",\"props\",\"_excluded\",\"filter\",\"setFilter\",\"selectedCache\",\"setSelectedCache\",\"debouncedFilter\",\"getUsers\",\"data\",\"users\",\"selector\",\"JSON\",\"stringify\",\"term\",\"options\",\"items\",\"map\",\"item\",\"username\",\"test\",\"unshift\",\"name\",\"_federated\",\"keepPreviousData\",\"onAddUser\",\"_options$find\",\"user\",\"find\",\"_ref2\",\"val\",\"Error\",\"onRemoveUser\",\"handleOnChange\",\"usernames\",\"newAddedUsername\",\"includes\",\"removedUsername\",\"createElement\",\"Provider\",\"renderSelected\",\"_ref3\",\"onMouseDown\",\"currentCachedOption\",\"key\",\"height\",\"mie\",\"mb\",\"size\",\"is\",\"margin\",\"mis\",\"renderOptions\",\"concat\",\"Object\",\"entries\",\"_ref4\"],\"mappings\":\"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\"}"}