{"code":"function module(e,t,r){let n,a,l,i,s,o,m,u,c,p,d,g,h,E,f,_,k,S,I,v,b,C,P,y,T,w,x,F,B,D,U,O;r.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){n=e}},0),r.link(\"@rocket.chat/fuselage\",{Badge(e){a=e},Box(e){l=e},Button(e){i=e},ButtonGroup(e){s=e},Margins(e){o=e},ProgressBar(e){m=e},Throbber(e){u=e},Tabs(e){c=e}},0),r.link(\"@rocket.chat/fuselage-hooks\",{useDebouncedValue(e){p=e},useSafely(e){d=e}},1),r.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){g=e},useTranslation(e){h=e},useStream(e){E=e},useRouter(e){f=e}},2),r.link(\"react\",{default(e){_=e},useEffect(e){k=e},useState(e){S=e},useMemo(e){I=e}},3),r.link(\"../../../../app/importer/lib/ImporterProgressStep\",{ProgressStep(e){v=e},ImportWaitingStates(e){b=e},ImportFileReadyStates(e){C=e},ImportPreparingStartedStates(e){P=e},ImportingStartedStates(e){y=e},ImportingErrorStates(e){T=e}},4),r.link(\"../../../../lib/utils/stringUtils\",{numberFormat(e){w=e}},5),r.link(\"../../../components/Page\",{Page(e){x=e},PageHeader(e){F=e},PageScrollableContentWithShadow(e){B=e}},6),r.link(\"./PrepareChannels\",{default(e){D=e}},7),r.link(\"./PrepareUsers\",{default(e){U=e}},8),r.link(\"./useErrorHandler\",{useErrorHandler(e){O=e}},9);let M=(e,t)=>new Promise((r,n)=>{let a=()=>{e().then(e=>{if(t(e)){r(e);return}setTimeout(a,1e3)},n)};a()});r.exportDefault(function(){let e=h(),t=O(),[r,j]=d(S(!0)),[G,H]=d(S(null)),[L,R]=d(S(null)),[W,N]=d(S(0)),[V,q]=S([]),[z,A]=S([]),[J,K]=d(S(!1)),Q=I(()=>V.filter(e=>{let{do_import:t}=e;return t}).length,[V]),X=I(()=>z.filter(e=>{let{do_import:t}=e;return t}).length,[z]),Y=f(),Z=g(\"GET\",\"/v1/getImportFileData\"),$=g(\"GET\",\"/v1/getCurrentImportOperation\"),ee=g(\"POST\",\"/v1/startImport\"),et=E(\"importers\");k(()=>et(\"progress\",e=>{\"rate\"in e&&H(e.rate)}),[et,H]),k(()=>{let r=async()=>{try{let r=await M(Z,e=>e&&(!(\"waiting\"in e)||!e.waiting));if(!r){t(e(\"Importer_not_setup\")),Y.navigate(\"/admin/import\");return}N(r.message_count),q(r.users.map(e=>{var t;return n(n({},e),{},{username:null!==(t=e.username)&&void 0!==t?t:\"\",do_import:!0})})),A(r.channels.map(e=>{var t;return n(n({},e),{},{name:null!==(t=e.name)&&void 0!==t?t:\"\",do_import:!0})})),j(!1),H(null)}catch(r){t(r,e(\"Failed_To_Load_Import_Data\")),Y.navigate(\"/admin/import\")}},a=async()=>{try{let{operation:n}=await M($,e=>e.operation.valid&&!b.includes(e.operation.status));if(!n.valid){Y.navigate(\"/admin/import/new\");return}if(y.includes(n.status)){Y.navigate(\"/admin/import/progress\");return}if(n.status===v.USER_SELECTION||P.includes(n.status)||C.includes(n.status)){R(n.status),r();return}if(T.includes(n.status)){t(e(\"Import_Operation_Failed\")),Y.navigate(\"/admin/import\");return}if(n.status===v.DONE){Y.navigate(\"/admin/import\");return}t(e(\"Unknown_Import_State\")),Y.navigate(\"/admin/import\")}catch(r){t(e(\"Failed_To_Load_Import_Data\")),Y.navigate(\"/admin/import\")}};a()},[$,Z,t,Y,N,j,H,R,e]);let er=async()=>{K(!0);try{let e=V.filter(e=>{let{do_import:t}=e;return t}).map(e=>{let{user_id:t}=e;return t}),t=z.filter(e=>{let{do_import:t}=e;return t}).map(e=>{let{channel_id:t}=e;return t});await ee({input:{users:{all:V.length>0&&e.length===V.length,list:e.length!==V.length&&e||void 0},channels:{all:z.length>0&&t.length===z.length,list:t.length!==z.length&&t||void 0}}}),Y.navigate(\"/admin/import/progress\")}catch(r){t(r,e(\"Failed_To_Start_Import\")),Y.navigate(\"/admin/import\")}},[en,ea]=S(\"users\"),el=I(()=>e=>()=>ea(e),[]),ei=p(L,100),es=!!(!Q&&!X&&!W||!Q&&!X&&0!==W);return _.createElement(x,null,_.createElement(F,{title:e(\"Importing_Data\"),onClickBack:()=>Y.navigate(\"/admin/import\")},_.createElement(s,null,_.createElement(i,{primary:!0,disabled:J||es,onClick:er},e(\"Importer_Prepare_Start_Import\")))),_.createElement(B,null,_.createElement(l,{marginInline:\"auto\",marginBlock:\"x24\",width:\"full\",maxWidth:\"590px\"},_.createElement(l,{is:\"h2\",fontScale:\"p2m\"},ei&&e(ei.replace(\"importer_\",\"importer_status_\"))),!r&&_.createElement(c,{flexShrink:0},_.createElement(c.Item,{selected:\"users\"===en,onClick:el(\"users\")},e(\"Users\"),\" \",_.createElement(a,null,Q)),_.createElement(c.Item,{selected:\"channels\"===en,onClick:el(\"channels\")},e(\"Channels\"),\" \",_.createElement(a,null,X)),_.createElement(c.Item,{disabled:!0},e(\"Messages\"),_.createElement(a,null,W))),_.createElement(o,{block:\"x24\"},r&&_.createElement(_.Fragment,null,G?_.createElement(l,{display:\"flex\",justifyContent:\"center\",fontScale:\"p2\"},_.createElement(m,{percentage:Math.floor(G)}),_.createElement(l,{is:\"span\",mis:\"x24\"},w(G,0),\"%\")):_.createElement(u,{justifyContent:\"center\"})),!r&&\"users\"===en&&_.createElement(U,{usersCount:Q,users:V,setUsers:q}),!r&&\"channels\"===en&&_.createElement(D,{channels:z,channelsCount:X,setChannels:A})))))})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/import/PrepareImportPage.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IImport, IImporterSelection, Serialized } from '@rocket.chat/core-typings';\\nimport { Badge, Box, Button, ButtonGroup, Margins, ProgressBar, Throbber, Tabs } from '@rocket.chat/fuselage';\\nimport { useDebouncedValue, useSafely } from '@rocket.chat/fuselage-hooks';\\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\\nimport { useEndpoint, useTranslation, useStream, useRouter } from '@rocket.chat/ui-contexts';\\nimport React, { useEffect, useState, useMemo } from 'react';\\n\\nimport {\\n\\tProgressStep,\\n\\tImportWaitingStates,\\n\\tImportFileReadyStates,\\n\\tImportPreparingStartedStates,\\n\\tImportingStartedStates,\\n\\tImportingErrorStates,\\n} from '../../../../app/importer/lib/ImporterProgressStep';\\nimport { numberFormat } from '../../../../lib/utils/stringUtils';\\nimport { Page, PageHeader, PageScrollableContentWithShadow } from '../../../components/Page';\\nimport type { ChannelDescriptor } from './ChannelDescriptor';\\nimport PrepareChannels from './PrepareChannels';\\nimport PrepareUsers from './PrepareUsers';\\nimport type { UserDescriptor } from './UserDescriptor';\\nimport { useErrorHandler } from './useErrorHandler';\\n\\nconst waitFor = <T, U extends T>(fn: () => Promise<T>, predicate: (arg: T) => arg is U) =>\\n\\tnew Promise<U>((resolve, reject) => {\\n\\t\\tconst callPromise = () => {\\n\\t\\t\\tfn().then((result) => {\\n\\t\\t\\t\\tif (predicate(result)) {\\n\\t\\t\\t\\t\\tresolve(result);\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tsetTimeout(callPromise, 1000);\\n\\t\\t\\t}, reject);\\n\\t\\t};\\n\\n\\t\\tcallPromise();\\n\\t});\\n\\n// TODO: review inner logic\\nfunction PrepareImportPage() {\\n\\tconst t = useTranslation();\\n\\tconst handleError = useErrorHandler();\\n\\n\\tconst [isPreparing, setPreparing] = useSafely(useState(true));\\n\\tconst [progressRate, setProgressRate] = useSafely(useState<number | null>(null));\\n\\tconst [status, setStatus] = useSafely(useState<string | null>(null));\\n\\tconst [messageCount, setMessageCount] = useSafely(useState(0));\\n\\tconst [users, setUsers] = useState<UserDescriptor[]>([]);\\n\\tconst [channels, setChannels] = useState<ChannelDescriptor[]>([]);\\n\\tconst [isImporting, setImporting] = useSafely(useState(false));\\n\\n\\tconst usersCount = useMemo(() => users.filter(({ do_import }) => do_import).length, [users]);\\n\\tconst channelsCount = useMemo(() => channels.filter(({ do_import }) => do_import).length, [channels]);\\n\\n\\tconst router = useRouter();\\n\\n\\tconst getImportFileData = useEndpoint('GET', '/v1/getImportFileData');\\n\\tconst getCurrentImportOperation = useEndpoint('GET', '/v1/getCurrentImportOperation');\\n\\tconst startImport = useEndpoint('POST', '/v1/startImport');\\n\\n\\tconst streamer = useStream('importers');\\n\\n\\tuseEffect(\\n\\t\\t() =>\\n\\t\\t\\tstreamer('progress', (progress) => {\\n\\t\\t\\t\\t// Ignore any update without the rate since we're not showing any other info anyway\\n\\t\\t\\t\\tif ('rate' in progress) {\\n\\t\\t\\t\\t\\tsetProgressRate(progress.rate);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}),\\n\\t\\t[streamer, setProgressRate],\\n\\t);\\n\\n\\tuseEffect(() => {\\n\\t\\tconst loadImportFileData = async () => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tconst data = await waitFor(\\n\\t\\t\\t\\t\\tgetImportFileData,\\n\\t\\t\\t\\t\\t(data): data is IImporterSelection => data && (!('waiting' in data) || !data.waiting),\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\tif (!data) {\\n\\t\\t\\t\\t\\thandleError(t('Importer_not_setup'));\\n\\t\\t\\t\\t\\trouter.navigate('/admin/import');\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tsetMessageCount(data.message_count);\\n\\t\\t\\t\\tsetUsers(data.users.map((user) => ({ ...user, username: user.username ?? '', do_import: true })));\\n\\t\\t\\t\\tsetChannels(data.channels.map((channel) => ({ ...channel, name: channel.name ?? '', do_import: true })));\\n\\t\\t\\t\\tsetPreparing(false);\\n\\t\\t\\t\\tsetProgressRate(null);\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\thandleError(error, t('Failed_To_Load_Import_Data'));\\n\\t\\t\\t\\trouter.navigate('/admin/import');\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\tconst loadCurrentOperation = async () => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tconst { operation } = await waitFor(\\n\\t\\t\\t\\t\\tgetCurrentImportOperation,\\n\\t\\t\\t\\t\\t(data): data is Serialized<{ operation: IImport }> =>\\n\\t\\t\\t\\t\\t\\tdata.operation.valid && !ImportWaitingStates.includes(data.operation.status),\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\tif (!operation.valid) {\\n\\t\\t\\t\\t\\trouter.navigate('/admin/import/new');\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (ImportingStartedStates.includes(operation.status)) {\\n\\t\\t\\t\\t\\trouter.navigate('/admin/import/progress');\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\toperation.status === ProgressStep.USER_SELECTION ||\\n\\t\\t\\t\\t\\tImportPreparingStartedStates.includes(operation.status) ||\\n\\t\\t\\t\\t\\tImportFileReadyStates.includes(operation.status)\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\tsetStatus(operation.status);\\n\\t\\t\\t\\t\\tloadImportFileData();\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (ImportingErrorStates.includes(operation.status)) {\\n\\t\\t\\t\\t\\thandleError(t('Import_Operation_Failed'));\\n\\t\\t\\t\\t\\trouter.navigate('/admin/import');\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (operation.status === ProgressStep.DONE) {\\n\\t\\t\\t\\t\\trouter.navigate('/admin/import');\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\thandleError(t('Unknown_Import_State'));\\n\\t\\t\\t\\trouter.navigate('/admin/import');\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\thandleError(t('Failed_To_Load_Import_Data'));\\n\\t\\t\\t\\trouter.navigate('/admin/import');\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\tloadCurrentOperation();\\n\\t}, [getCurrentImportOperation, getImportFileData, handleError, router, setMessageCount, setPreparing, setProgressRate, setStatus, t]);\\n\\n\\tconst handleStartButtonClick = async () => {\\n\\t\\tsetImporting(true);\\n\\n\\t\\ttry {\\n\\t\\t\\tconst usersToImport = users.filter(({ do_import }) => do_import).map(({ user_id }) => user_id);\\n\\t\\t\\tconst channelsToImport = channels.filter(({ do_import }) => do_import).map(({ channel_id }) => channel_id);\\n\\n\\t\\t\\tawait startImport({\\n\\t\\t\\t\\tinput: {\\n\\t\\t\\t\\t\\tusers: {\\n\\t\\t\\t\\t\\t\\tall: users.length > 0 && usersToImport.length === users.length,\\n\\t\\t\\t\\t\\t\\tlist: (usersToImport.length !== users.length && usersToImport) || undefined,\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\tchannels: {\\n\\t\\t\\t\\t\\t\\tall: channels.length > 0 && channelsToImport.length === channels.length,\\n\\t\\t\\t\\t\\t\\tlist: (channelsToImport.length !== channels.length && channelsToImport) || undefined,\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t},\\n\\t\\t\\t});\\n\\t\\t\\trouter.navigate('/admin/import/progress');\\n\\t\\t} catch (error) {\\n\\t\\t\\thandleError(error, t('Failed_To_Start_Import'));\\n\\t\\t\\trouter.navigate('/admin/import');\\n\\t\\t}\\n\\t};\\n\\n\\tconst [tab, setTab] = useState('users');\\n\\tconst handleTabClick = useMemo(() => (tab: string) => () => setTab(tab), []);\\n\\n\\tconst statusDebounced = useDebouncedValue(status, 100);\\n\\n\\tconst handleMinimumImportData = !!(\\n\\t\\t(!usersCount && !channelsCount && !messageCount) ||\\n\\t\\t(!usersCount && !channelsCount && messageCount !== 0)\\n\\t);\\n\\n\\treturn (\\n\\t\\t<Page>\\n\\t\\t\\t<PageHeader title={t('Importing_Data')} onClickBack={() => router.navigate('/admin/import')}>\\n\\t\\t\\t\\t<ButtonGroup>\\n\\t\\t\\t\\t\\t<Button primary disabled={isImporting || handleMinimumImportData} onClick={handleStartButtonClick}>\\n\\t\\t\\t\\t\\t\\t{t('Importer_Prepare_Start_Import')}\\n\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t</PageHeader>\\n\\t\\t\\t<PageScrollableContentWithShadow>\\n\\t\\t\\t\\t<Box marginInline='auto' marginBlock='x24' width='full' maxWidth='590px'>\\n\\t\\t\\t\\t\\t<Box is='h2' fontScale='p2m'>\\n\\t\\t\\t\\t\\t\\t{statusDebounced && t(statusDebounced.replace('importer_', 'importer_status_') as TranslationKey)}\\n\\t\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t\\t{!isPreparing && (\\n\\t\\t\\t\\t\\t\\t<Tabs flexShrink={0}>\\n\\t\\t\\t\\t\\t\\t\\t<Tabs.Item selected={tab === 'users'} onClick={handleTabClick('users')}>\\n\\t\\t\\t\\t\\t\\t\\t\\t{t('Users')} <Badge>{usersCount}</Badge>\\n\\t\\t\\t\\t\\t\\t\\t</Tabs.Item>\\n\\t\\t\\t\\t\\t\\t\\t<Tabs.Item selected={tab === 'channels'} onClick={handleTabClick('channels')}>\\n\\t\\t\\t\\t\\t\\t\\t\\t{t('Channels')} <Badge>{channelsCount}</Badge>\\n\\t\\t\\t\\t\\t\\t\\t</Tabs.Item>\\n\\t\\t\\t\\t\\t\\t\\t<Tabs.Item disabled>\\n\\t\\t\\t\\t\\t\\t\\t\\t{t('Messages')}\\n\\t\\t\\t\\t\\t\\t\\t\\t<Badge>{messageCount}</Badge>\\n\\t\\t\\t\\t\\t\\t\\t</Tabs.Item>\\n\\t\\t\\t\\t\\t\\t</Tabs>\\n\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t<Margins block='x24'>\\n\\t\\t\\t\\t\\t\\t{isPreparing && (\\n\\t\\t\\t\\t\\t\\t\\t<>\\n\\t\\t\\t\\t\\t\\t\\t\\t{progressRate ? (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Box display='flex' justifyContent='center' fontScale='p2'>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ProgressBar percentage={Math.floor(progressRate)} />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Box is='span' mis='x24'>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{numberFormat(progressRate, 0)}%\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t\\t\\t\\t\\t) : (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Throbber justifyContent='center' />\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</>\\n\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t{!isPreparing && tab === 'users' && <PrepareUsers usersCount={usersCount} users={users} setUsers={setUsers} />}\\n\\t\\t\\t\\t\\t\\t{!isPreparing && tab === 'channels' && (\\n\\t\\t\\t\\t\\t\\t\\t<PrepareChannels channels={channels} channelsCount={channelsCount} setChannels={setChannels} />\\n\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t</Margins>\\n\\t\\t\\t\\t</Box>\\n\\t\\t\\t</PageScrollableContentWithShadow>\\n\\t\\t</Page>\\n\\t);\\n}\\n\\nexport default PrepareImportPage;\\n\",null],\"names\":[\"_objectSpread\",\"Badge\",\"Box\",\"Button\",\"ButtonGroup\",\"Margins\",\"ProgressBar\",\"Throbber\",\"Tabs\",\"useDebouncedValue\",\"useSafely\",\"useEndpoint\",\"useTranslation\",\"useStream\",\"useRouter\",\"React\",\"useEffect\",\"useState\",\"useMemo\",\"ProgressStep\",\"ImportWaitingStates\",\"ImportFileReadyStates\",\"ImportPreparingStartedStates\",\"ImportingStartedStates\",\"ImportingErrorStates\",\"numberFormat\",\"Page\",\"PageHeader\",\"PageScrollableContentWithShadow\",\"PrepareChannels\",\"PrepareUsers\",\"useErrorHandler\",\"module\",\"link\",\"default\",\"v\",\"waitFor\",\"fn\",\"predicate\",\"Promise\",\"resolve\",\"reject\",\"callPromise\",\"then\",\"result\",\"setTimeout\",\"exportDefault\",\"t\",\"handleError\",\"isPreparing\",\"setPreparing\",\"progressRate\",\"setProgressRate\",\"status\",\"setStatus\",\"messageCount\",\"setMessageCount\",\"users\",\"setUsers\",\"channels\",\"setChannels\",\"isImporting\",\"setImporting\",\"usersCount\",\"filter\",\"_ref\",\"do_import\",\"length\",\"channelsCount\",\"_ref2\",\"router\",\"getImportFileData\",\"getCurrentImportOperation\",\"startImport\",\"streamer\",\"progress\",\"rate\",\"loadImportFileData\",\"data\",\"waiting\",\"navigate\",\"message_count\",\"map\",\"user\",\"_user$username\",\"username\",\"channel\",\"_channel$name\",\"name\",\"error\",\"loadCurrentOperation\",\"operation\",\"valid\",\"includes\",\"USER_SELECTION\",\"DONE\",\"handleStartButtonClick\",\"usersToImport\",\"_ref3\",\"_ref4\",\"user_id\",\"channelsToImport\",\"_ref5\",\"_ref6\",\"channel_id\",\"input\",\"all\",\"list\",\"undefined\",\"tab\",\"setTab\",\"handleTabClick\",\"statusDebounced\",\"handleMinimumImportData\",\"createElement\",\"title\",\"onClickBack\",\"primary\",\"disabled\",\"onClick\",\"marginInline\",\"marginBlock\",\"width\",\"maxWidth\",\"is\",\"fontScale\",\"replace\",\"flexShrink\",\"Item\",\"selected\",\"block\",\"Fragment\",\"display\",\"justifyContent\",\"percentage\",\"Math\",\"floor\",\"mis\"],\"mappings\":\"2BACAA,EAAAC,EAASC,EAAKC,EAAOC,EAAQC,EAAWC,EAAWC,EAAWC,EAAgDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA9FC,EAAKC,IAAQ,CAAA,uCAAmC,CAAAC,QAAcC,CAAA,EAAEnC,EAAMmC,CAAA,CAAA,EAAA,GAAtBH,EAAUC,IAAI,CAAA,wBAAQ,CAAAhC,MAAwBkC,CAAA,EAAAlC,EAAAkC,CAAA,EAAAjC,IAAAiC,CAAA,EAAAjC,EAAAiC,CAAA,EAAAhC,OAAAgC,CAAA,EAAAhC,EAAAgC,CAAA,EAAA/B,YAAA+B,CAAA,EAAA/B,EAAA+B,CAAA,EAAA9B,QAAA8B,CAAA,EAAA9B,EAAA8B,CAAA,EAAA7B,YAAA6B,CAAA,EAAA7B,EAAA6B,CAAA,EAAA5B,SAAA4B,CAAA,EAAA5B,EAAA4B,CAAA,EAAA3B,KAAA2B,CAAA,EAAA3B,EAAA2B,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,8BAAA,CAAAxB,kBAAA0B,CAAA,EAAA1B,EAAA0B,CAAA,EAAAzB,UAAAyB,CAAA,EAAAzB,EAAAyB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2BAAA,CAAAtB,YAAAwB,CAAA,EAAAxB,EAAAwB,CAAA,EAAAvB,eAAAuB,CAAA,EAAAvB,EAAAuB,CAAA,EAAAtB,UAAAsB,CAAA,EAAAtB,EAAAsB,CAAA,EAAArB,UAAAqB,CAAA,EAAArB,EAAAqB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAC,QAAAC,CAAA,EAAApB,EAAAoB,CAAA,EAAAnB,UAAAmB,CAAA,EAAAnB,EAAAmB,CAAA,EAAAlB,SAAAkB,CAAA,EAAAlB,EAAAkB,CAAA,EAAAjB,QAAAiB,CAAA,EAAAjB,EAAAiB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,oDAAA,CAAAd,aAAAgB,CAAA,EAAAhB,EAAAgB,CAAA,EAAAf,oBAAAe,CAAA,EAAAf,EAAAe,CAAA,EAAAd,sBAAAc,CAAA,EAAAd,EAAAc,CAAA,EAAAb,6BAAAa,CAAA,EAAAb,EAAAa,CAAA,EAAAZ,uBAAAY,CAAA,EAAAZ,EAAAY,CAAA,EAAAX,qBAAAW,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,oCAAA,CAAAR,aAAAU,CAAA,EAAAV,EAAAU,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2BAAA,CAAAP,KAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,WAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,gCAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,oBAAA,CAAAC,QAAAC,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,iBAAA,CAAAC,QAAAC,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,oBAAA,CAAAF,gBAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAsB9G,IAAMC,EAAUA,CAAiBC,EAAsBC,IACtD,IAAIC,QAAW,CAACC,EAASC,KACxB,IAAMC,EAAcA,KACnBL,IAAKM,IAAI,CAAEC,IACV,GAAIN,EAAUM,GAAS,CACtBJ,EAAQI,GACR,MACD,CAEAC,WAAWH,EAAa,IACzB,EAAGD,EACJ,EAEAC,GACD,GApCDV,EAAOc,aAAY,CAuCnB,WACC,IAAMC,EAAInC,IACJoC,EAAcjB,IAEd,CAACkB,EAAaC,EAAa,CAAGxC,EAAUO,EAAS,CAAA,IACjD,CAACkC,EAAcC,EAAgB,CAAG1C,EAAUO,EAAwB,OACpE,CAACoC,EAAQC,EAAU,CAAG5C,EAAUO,EAAwB,OACxD,CAACsC,EAAcC,EAAgB,CAAG9C,EAAUO,EAAS,IACrD,CAACwC,EAAOC,EAAS,CAAGzC,EAA2B,EAAE,EACjD,CAAC0C,EAAUC,EAAY,CAAG3C,EAA8B,EAAE,EAC1D,CAAC4C,EAAaC,EAAa,CAAGpD,EAAUO,EAAS,CAAA,IAEjD8C,EAAa7C,EAAQ,IAAMuC,EAAMO,MAAM,CAACC,IAAA,GAAC,CAAEC,UAAAA,CAAAA,CAAW,CAAAD,EAAA,OAAKC,CAAS,GAAEC,MAAM,CAAE,CAACV,EAAM,EACrFW,EAAgBlD,EAAQ,IAAMyC,EAASK,MAAM,CAACK,IAAA,GAAC,CAAEH,UAAAA,CAAAA,CAAW,CAAAG,EAAA,OAAKH,CAAS,GAAEC,MAAM,CAAE,CAACR,EAAS,EAE9FW,EAASxD,IAETyD,EAAoB5D,EAAY,MAAO,yBACvC6D,EAA4B7D,EAAY,MAAO,iCAC/C8D,GAAc9D,EAAY,OAAQ,mBAElC+D,GAAW7D,EAAU,aAE3BG,EACC,IACC0D,GAAS,WAAaC,IAEjB,SAAUA,GACbvB,EAAgBuB,EAASC,IAAI,CAE/B,GACD,CAACF,GAAUtB,EAAgB,EAG5BpC,EAAU,KACT,IAAM6D,EAAqB,UAC1B,GAAI,CACH,IAAMC,EAAO,MAAM1C,EAClBmC,EACCO,GAAqCA,GAAS,CAAA,CAAE,CAAA,YAAaA,CAAAA,GAAS,CAACA,EAAKC,OAAO,AAAPA,GAG9E,GAAI,CAACD,EAAM,CACV9B,EAAYD,EAAE,uBACduB,EAAOU,QAAQ,CAAC,iBAChB,MACD,CAEAxB,EAAgBsB,EAAKG,aAAa,EAClCvB,EAASoB,EAAKrB,KAAK,CAACyB,GAAG,CAAEC,IAAI,IAAAC,EAAA,OAAApF,EAAAA,EAAA,CAAA,EAAWmF,GAAI,CAAA,EAAA,CAAEE,SAAQ,AAAe,OAAfD,CAAAA,EAAED,EAAKE,QAAQ,AAARA,GAAQD,AAAA,KAAA,IAAAA,EAAAA,EAAI,GAAIlB,UAAW,CAAA,CAAI,EAAA,IAC5FN,EAAYkB,EAAKnB,QAAQ,CAACuB,GAAG,CAAEI,IAAO,IAAAC,EAAA,OAAAvF,EAAAA,EAAA,CAAA,EAAWsF,GAAO,CAAA,EAAA,CAAEE,KAAI,AAAc,OAAdD,CAAAA,EAAED,EAAQE,IAAI,AAAJA,GAAID,AAAA,KAAA,IAAAA,EAAAA,EAAI,GAAIrB,UAAW,CAAA,CAAI,EAAA,IACnGhB,EAAa,CAAA,GACbE,EAAgB,KACjB,CAAE,MAAOqC,EAAO,CACfzC,EAAYyC,EAAO1C,EAAE,+BACrBuB,EAAOU,QAAQ,CAAC,gBACjB,CACD,EAEMU,EAAuB,UAC5B,GAAI,CACH,GAAM,CAAEC,UAAAA,CAAAA,CAAW,CAAG,MAAMvD,EAC3BoC,EACCM,GACAA,EAAKa,SAAS,CAACC,KAAK,EAAI,CAACxE,EAAoByE,QAAQ,CAACf,EAAKa,SAAS,CAACtC,MAAM,GAG7E,GAAI,CAACsC,EAAUC,KAAK,CAAE,CACrBtB,EAAOU,QAAQ,CAAC,qBAChB,MACD,CAEA,GAAIzD,EAAuBsE,QAAQ,CAACF,EAAUtC,MAAM,EAAG,CACtDiB,EAAOU,QAAQ,CAAC,0BAChB,MACD,CAEA,GACCW,EAAUtC,MAAM,GAAKlC,EAAa2E,cAAc,EAChDxE,EAA6BuE,QAAQ,CAACF,EAAUtC,MAAM,GACtDhC,EAAsBwE,QAAQ,CAACF,EAAUtC,MAAM,EAC9C,CACDC,EAAUqC,EAAUtC,MAAM,EAC1BwB,IACA,MACD,CAEA,GAAIrD,EAAqBqE,QAAQ,CAACF,EAAUtC,MAAM,EAAG,CACpDL,EAAYD,EAAE,4BACduB,EAAOU,QAAQ,CAAC,iBAChB,MACD,CAEA,GAAIW,EAAUtC,MAAM,GAAKlC,EAAa4E,IAAI,CAAE,CAC3CzB,EAAOU,QAAQ,CAAC,iBAChB,MACD,CAEAhC,EAAYD,EAAE,yBACduB,EAAOU,QAAQ,CAAC,gBACjB,CAAE,MAAOS,EAAO,CACfzC,EAAYD,EAAE,+BACduB,EAAOU,QAAQ,CAAC,gBACjB,CACD,EAEAU,GACD,EAAG,CAAClB,EAA2BD,EAAmBvB,EAAasB,EAAQd,EAAiBN,EAAcE,EAAiBE,EAAWP,EAAE,EAEpI,IAAMiD,GAAyB,UAC9BlC,EAAa,CAAA,GAEb,GAAI,CACH,IAAMmC,EAAgBxC,EAAMO,MAAM,CAACkC,IAAA,GAAC,CAAEhC,UAAAA,CAAAA,CAAW,CAAAgC,EAAA,OAAKhC,CAAS,GAAEgB,GAAG,CAACiB,IAAA,GAAC,CAAEC,QAAAA,CAAAA,CAAS,CAAAD,EAAA,OAAKC,CAAO,GACvFC,EAAmB1C,EAASK,MAAM,CAACsC,IAAA,GAAC,CAAEpC,UAAAA,CAAAA,CAAW,CAAAoC,EAAA,OAAKpC,CAAS,GAAEgB,GAAG,CAACqB,IAAA,GAAC,CAAEC,WAAAA,CAAAA,CAAY,CAAAD,EAAA,OAAKC,CAAU,EAEzG,OAAM/B,GAAY,CACjBgC,MAAO,CACNhD,MAAO,CACNiD,IAAKjD,EAAMU,MAAM,CAAG,GAAK8B,EAAc9B,MAAM,GAAKV,EAAMU,MAAM,CAC9DwC,KAAOV,EAAc9B,MAAM,GAAKV,EAAMU,MAAM,EAAI8B,GAAkBW,KAAAA,GAEnEjD,SAAU,CACT+C,IAAK/C,EAASQ,MAAM,CAAG,GAAKkC,EAAiBlC,MAAM,GAAKR,EAASQ,MAAM,CACvEwC,KAAON,EAAiBlC,MAAM,GAAKR,EAASQ,MAAM,EAAIkC,GAAqBO,KAAAA,MAI9EtC,EAAOU,QAAQ,CAAC,yBACjB,CAAE,MAAOS,EAAO,CACfzC,EAAYyC,EAAO1C,EAAE,2BACrBuB,EAAOU,QAAQ,CAAC,gBACjB,CACD,EAEM,CAAC6B,GAAKC,GAAO,CAAG7F,EAAS,SACzB8F,GAAiB7F,EAAQ,IAAO2F,GAAgB,IAAMC,GAAOD,GAAM,EAAE,EAErEG,GAAkBvG,EAAkB4C,EAAQ,KAE5C4D,GAA0B,CAAC,CAC/B,CAAA,CAAClD,GAAc,CAACK,GAAiB,CAACb,GAClC,CAACQ,GAAc,CAACK,GAAiBb,AAAiB,IAAjBA,CAAiB,EAGpD,OACCxC,EAAAmG,aAAA,CAACxF,EAAI,KACJX,EAAAmG,aAAA,CAACvF,EAAU,CAACwF,MAAOpE,EAAE,kBAAmBqE,YAAaA,IAAM9C,EAAOU,QAAQ,CAAC,gBAAiB,EAC3FjE,EAAAmG,aAAA,CAAC9G,EAAW,KACXW,EAAAmG,aAAA,CAAC/G,EAAM,CAACkH,QAAO,CAAA,EAACC,SAAUzD,GAAeoD,GAAyBM,QAASvB,EAAuB,EAChGjD,EAAE,oCAINhC,EAAAmG,aAAA,CAACtF,EAA+B,KAC/Bb,EAAAmG,aAAA,CAAChH,EAAG,CAACsH,aAAa,OAAOC,YAAY,MAAMC,MAAM,OAAOC,SAAS,OAAO,EACvE5G,EAAAmG,aAAA,CAAChH,EAAG,CAAC0H,GAAG,KAAKC,UAAU,KAAK,EAC1Bb,IAAmBjE,EAAEiE,GAAgBc,OAAO,CAAC,YAAa,sBAE3D,CAAC7E,GACDlC,EAAAmG,aAAA,CAAC1G,EAAI,CAACuH,WAAY,CAAE,EACnBhH,EAAAmG,aAAA,CAAC1G,EAAKwH,IAAI,CAAA,CAACC,SAAUpB,AAAQ,UAARA,GAAiBU,QAASR,GAAe,QAAS,EACrEhE,EAAE,SAAU,IAAAhC,EAAAmG,aAAA,CAACjH,EAAK,KAAE8D,IAEtBhD,EAAAmG,aAAA,CAAC1G,EAAKwH,IAAI,CAAA,CAACC,SAAUpB,AAAQ,aAARA,GAAoBU,QAASR,GAAe,WAAY,EAC3EhE,EAAE,YAAa,IAAAhC,EAAAmG,aAAA,CAACjH,EAAK,KAAEmE,IAEzBrD,EAAAmG,aAAA,CAAC1G,EAAKwH,IAAI,CAAA,CAACV,SAAQ,CAAA,CAAA,EACjBvE,EAAE,YACHhC,EAAAmG,aAAA,CAACjH,EAAK,KAAEsD,KAIXxC,EAAAmG,aAAA,CAAC7G,EAAO,CAAC6H,MAAM,KAAK,EAClBjF,GACAlC,EAAAmG,aAAA,CAAAnG,EAAAoH,QAAA,CAAA,KACEhF,EACApC,EAAAmG,aAAA,CAAChH,EAAG,CAACkI,QAAQ,OAAOC,eAAe,SAASR,UAAU,IAAI,EACzD9G,EAAAmG,aAAA,CAAC5G,EAAW,CAACgI,WAAYC,KAAKC,KAAK,CAACrF,EAAc,GAClDpC,EAAAmG,aAAA,CAAChH,EAAG,CAAC0H,GAAG,OAAOa,IAAI,KAAK,EACtBhH,EAAa0B,EAAc,GAAG,MAIjCpC,EAAAmG,aAAA,CAAC3G,EAAQ,CAAC8H,eAAe,QAAQ,IAInC,CAACpF,GAAe4D,AAAQ,UAARA,IAAmB9F,EAAAmG,aAAA,CAACpF,EAAY,CAACiC,WAAYA,EAAYN,MAAOA,EAAOC,SAAUA,CAAS,GAC1G,CAACT,GAAe4D,AAAQ,aAARA,IAChB9F,EAAAmG,aAAA,CAACrF,EAAe,CAAC8B,SAAUA,EAAUS,cAAeA,EAAeR,YAAaA,CAAY,MAOnG\"}"}