{"code":"function module(e,o,t){let r,c;t.export({useMessageBoxPlaceholder:()=>a}),t.link(\"@rocket.chat/core-typings\",{isDirectMessageRoom(e){r=e}},0),t.link(\"../../../../../hooks/useRoomName\",{useRoomName(e){c=e}},1);let a=(e,o)=>{if(!o)throw Error(\"In order to get the placeholder a `room` must be provided\");let t=c(o);return r(o)?\"\".concat(e,\" @\").concat(t):\"\".concat(e,\" #\").concat(t)}}","map":"{\"version\":3,\"sources\":[\"client/views/room/composer/messageBox/hooks/useMessageBoxPlaceholder.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom } from '@rocket.chat/core-typings';\\nimport { isDirectMessageRoom } from '@rocket.chat/core-typings';\\n\\nimport { useRoomName } from '../../../../../hooks/useRoomName';\\n\\nexport const useMessageBoxPlaceholder = (placeholder: string, room?: IRoom) => {\\n\\tif (!room) {\\n\\t\\tthrow new Error('In order to get the placeholder a `room` must be provided');\\n\\t}\\n\\n\\tconst roomName = useRoomName(room);\\n\\n\\tif (isDirectMessageRoom(room)) {\\n\\t\\treturn `${placeholder} @${roomName}`;\\n\\t}\\n\\n\\treturn `${placeholder} #${roomName}`;\\n};\\n\",null],\"names\":[\"isDirectMessageRoom\",\"useRoomName\",\"module\",\"export\",\"useMessageBoxPlaceholder\",\"link\",\"v\",\"placeholder\",\"room\",\"Error\",\"roomName\",\"concat\"],\"mappings\":\"2BACgEA,EAAAC,EAAhEC,EAAOC,MAAE,CAAA,CAAAC,yBAA2BA,IAAAA,CAA4B,GAAAF,EAAAG,IAAA,CAAA,4BAAA,CAAAL,oBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,mCAAA,CAAAJ,YAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAIzD,IAAMF,EAA2BA,CAACG,EAAqBC,KAC7D,GAAI,CAACA,EACJ,MAAM,AAAIC,MAAM,6DAGjB,IAAMC,EAAWT,EAAYO,UAE7B,AAAIR,EAAoBQ,GACvB,GAAAG,MAAA,CAAUJ,EAAW,MAAAI,MAAA,CAAKD,GAG3B,GAAAC,MAAA,CAAUJ,EAAW,MAAAI,MAAA,CAAKD,EAC3B\"}"}