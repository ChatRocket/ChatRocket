{"code":"function module(e,r,t){let o,l,n,a;t.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){o=e}},0),t.export({convertError:()=>u,createOAuthTotpLoginMethod:()=>g}),t.link(\"meteor/accounts-base\",{Accounts(e){l=e}},0),t.link(\"meteor/meteor\",{Meteor(e){n=e}},1),t.link(\"meteor/oauth\",{OAuth(e){a=e}},2);let i=e=>e instanceof n.Error&&e.error===l.LoginCancelledError.numericError,u=e=>i(e)?new l.LoginCancelledError(e.reason):e,c=null,d=null,s=a._retrieveCredentialSecret;a._retrieveCredentialSecret=e=>{let r=s.call(a,e);if(!r){let t=\"\".concat(a._storageTokenPrefix).concat(e);r=localStorage.getItem(t),localStorage.removeItem(t)}return r};let m=(e,r,t,n)=>{n=n||a._retrieveCredentialSecret(e)||null;let i=o({oauth:{credentialToken:e,credentialSecret:n}},\"string\"==typeof t&&!!t&&{totp:{code:t}});c=e,d=n,\"string\"==typeof t&&t&&(i.totp={code:t}),l.callLoginMethod({methodArguments:[i],userCallback:e=>{null==r||r(u(e))}})},f=(e,r)=>t=>{if(!t){null==e||e(new n.Error(\"No credential token passed\"));return}if(t instanceof Error){null==e||e(t);return}m(t,e,r)},g=e=>(r,t,o)=>{if(c&&d)m(c,o,t,d);else{let l=f(o,t);e.requestCredential(r,l)}c=null,d=null};l.oauth.credentialRequestCompleteHandler=f,l.onPageLoadLogin(async e=>{var r;if((null==e?void 0:null===(r=e.error)||void 0===r?void 0:r.error)!==\"totp-required\")return;let{methodArguments:o}=e;if(!(null!=o&&o.length))return;let l=o.find(e=>e.oauth),{credentialToken:n,credentialSecret:a}=l.oauth,i=e.userCallback,{process2faReturn:u}=await t.dynamicImport(\"../../lib/2fa/process2faReturn\");await u({error:e.error,originalCallback:i,onCode:e=>{m(n,i,e,a)},emailOrUsername:void 0,result:void 0})})}","map":"{\"version\":3,\"sources\":[\"client/meteorOverrides/login/oauth.ts\",\"<anon>\"],\"sourcesContent\":[\"import { Accounts } from 'meteor/accounts-base';\\nimport { Meteor } from 'meteor/meteor';\\nimport { OAuth } from 'meteor/oauth';\\n\\nimport type { IOAuthProvider } from '../../definitions/IOAuthProvider';\\nimport type { LoginCallback } from '../../lib/2fa/overrideLoginMethod';\\n\\nconst isLoginCancelledError = (error: unknown): error is Meteor.Error =>\\n\\terror instanceof Meteor.Error && error.error === Accounts.LoginCancelledError.numericError;\\n\\nexport const convertError = <T>(error: T): Accounts.LoginCancelledError | T => {\\n\\tif (isLoginCancelledError(error)) {\\n\\t\\treturn new Accounts.LoginCancelledError(error.reason);\\n\\t}\\n\\n\\treturn error;\\n};\\n\\nlet lastCredentialToken: string | null = null;\\nlet lastCredentialSecret: string | null | undefined = null;\\n\\nconst meteorOAuthRetrieveCredentialSecret = OAuth._retrieveCredentialSecret;\\nOAuth._retrieveCredentialSecret = (credentialToken: string): string | null => {\\n\\tlet secret = meteorOAuthRetrieveCredentialSecret.call(OAuth, credentialToken);\\n\\tif (!secret) {\\n\\t\\tconst localStorageKey = `${OAuth._storageTokenPrefix}${credentialToken}`;\\n\\t\\tsecret = localStorage.getItem(localStorageKey);\\n\\t\\tlocalStorage.removeItem(localStorageKey);\\n\\t}\\n\\n\\treturn secret;\\n};\\n\\nconst tryLoginAfterPopupClosed = (\\n\\tcredentialToken: string,\\n\\tcallback?: (error?: globalThis.Error | Meteor.Error | Meteor.TypedError) => void,\\n\\ttotpCode?: string,\\n\\tcredentialSecret?: string | null,\\n) => {\\n\\tcredentialSecret = credentialSecret || OAuth._retrieveCredentialSecret(credentialToken) || null;\\n\\tconst methodArgument = {\\n\\t\\toauth: {\\n\\t\\t\\tcredentialToken,\\n\\t\\t\\tcredentialSecret,\\n\\t\\t},\\n\\t\\t...(typeof totpCode === 'string' &&\\n\\t\\t\\t!!totpCode && {\\n\\t\\t\\t\\ttotp: {\\n\\t\\t\\t\\t\\tcode: totpCode,\\n\\t\\t\\t\\t},\\n\\t\\t\\t}),\\n\\t};\\n\\n\\tlastCredentialToken = credentialToken;\\n\\tlastCredentialSecret = credentialSecret;\\n\\n\\tif (typeof totpCode === 'string' && !!totpCode) {\\n\\t\\tmethodArgument.totp = {\\n\\t\\t\\tcode: totpCode,\\n\\t\\t};\\n\\t}\\n\\n\\tAccounts.callLoginMethod({\\n\\t\\tmethodArguments: [methodArgument],\\n\\t\\tuserCallback: (err) => {\\n\\t\\t\\tcallback?.(convertError(err));\\n\\t\\t},\\n\\t});\\n};\\n\\nconst credentialRequestCompleteHandler =\\n\\t(callback?: (error?: globalThis.Error | Meteor.Error | Meteor.TypedError) => void, totpCode?: string) =>\\n\\t(credentialTokenOrError?: string | globalThis.Error | Meteor.Error | Meteor.TypedError) => {\\n\\t\\tif (!credentialTokenOrError) {\\n\\t\\t\\tcallback?.(new Meteor.Error('No credential token passed'));\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (credentialTokenOrError instanceof Error) {\\n\\t\\t\\tcallback?.(credentialTokenOrError);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\ttryLoginAfterPopupClosed(credentialTokenOrError, callback, totpCode);\\n\\t};\\n\\nexport const createOAuthTotpLoginMethod =\\n\\t(provider: IOAuthProvider) => (options: Meteor.LoginWithExternalServiceOptions | undefined, code: string, callback?: LoginCallback) => {\\n\\t\\tif (lastCredentialToken && lastCredentialSecret) {\\n\\t\\t\\ttryLoginAfterPopupClosed(lastCredentialToken, callback, code, lastCredentialSecret);\\n\\t\\t} else {\\n\\t\\t\\tconst credentialRequestCompleteCallback = credentialRequestCompleteHandler(callback, code);\\n\\t\\t\\tprovider.requestCredential(options, credentialRequestCompleteCallback);\\n\\t\\t}\\n\\n\\t\\tlastCredentialToken = null;\\n\\t\\tlastCredentialSecret = null;\\n\\t};\\n\\nAccounts.oauth.credentialRequestCompleteHandler = credentialRequestCompleteHandler;\\n\\nAccounts.onPageLoadLogin(async (loginAttempt: any) => {\\n\\tif (loginAttempt?.error?.error !== 'totp-required') {\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst { methodArguments } = loginAttempt;\\n\\tif (!methodArguments?.length) {\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst oAuthArgs = methodArguments.find((arg: any) => arg.oauth);\\n\\tconst { credentialToken, credentialSecret } = oAuthArgs.oauth;\\n\\tconst cb = loginAttempt.userCallback;\\n\\n\\tconst { process2faReturn } = await import('../../lib/2fa/process2faReturn');\\n\\n\\tawait process2faReturn({\\n\\t\\terror: loginAttempt.error,\\n\\t\\toriginalCallback: cb,\\n\\t\\tonCode: (code) => {\\n\\t\\t\\ttryLoginAfterPopupClosed(credentialToken, cb, code, credentialSecret);\\n\\t\\t},\\n\\t\\temailOrUsername: undefined,\\n\\t\\tresult: undefined,\\n\\t});\\n});\\n\",null],\"names\":[\"_objectSpread\",\"Accounts\",\"Meteor\",\"OAuth\",\"module\",\"link\",\"default\",\"v\",\"export\",\"convertError\",\"createOAuthTotpLoginMethod\",\"isLoginCancelledError\",\"error\",\"Error\",\"LoginCancelledError\",\"numericError\",\"reason\",\"lastCredentialToken\",\"lastCredentialSecret\",\"meteorOAuthRetrieveCredentialSecret\",\"_retrieveCredentialSecret\",\"credentialToken\",\"secret\",\"call\",\"localStorageKey\",\"concat\",\"_storageTokenPrefix\",\"localStorage\",\"getItem\",\"removeItem\",\"tryLoginAfterPopupClosed\",\"callback\",\"totpCode\",\"credentialSecret\",\"methodArgument\",\"oauth\",\"totp\",\"code\",\"callLoginMethod\",\"methodArguments\",\"userCallback\",\"err\",\"credentialRequestCompleteHandler\",\"credentialTokenOrError\",\"provider\",\"options\",\"credentialRequestCompleteCallback\",\"requestCredential\",\"onPageLoadLogin\",\"loginAttempt\",\"_loginAttempt$error\",\"length\",\"oAuthArgs\",\"find\",\"arg\",\"cb\",\"process2faReturn\",\"dynamicImport\",\"originalCallback\",\"onCode\",\"emailOrUsername\",\"undefined\",\"result\"],\"mappings\":\"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\"}"}