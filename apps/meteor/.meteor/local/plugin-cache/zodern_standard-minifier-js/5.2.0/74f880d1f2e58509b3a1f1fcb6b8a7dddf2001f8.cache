{"code":"function module(e,l,t){var a;let n,r,c,i,o;t.link(\"@babel/runtime/helpers/extends\",{default(e){n=e}},0),t.link(\"@babel/runtime/helpers/taggedTemplateLiteral\",{default(e){r=e}},1),t.link(\"@rocket.chat/css-in-js\",{css(e){c=e}},0),t.link(\"@rocket.chat/fuselage\",{Box(e){i=e}},1),t.link(\"react\",{default(e){o=e}},2);let s=c(a||(a=r([\"\\n\tword-break: break-word;\\n\"])));t.exportDefault(e=>o.createElement(i,n({mb:8,fontScale:\"p2\",color:\"hint\",className:s},e)))}","map":"{\"version\":3,\"sources\":[\"client/components/InfoPanel/InfoPanelText.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { css } from '@rocket.chat/css-in-js';\\nimport { Box } from '@rocket.chat/fuselage';\\nimport type { ComponentPropsWithoutRef } from 'react';\\nimport React from 'react';\\n\\nconst wordBreak = css`\\n\\tword-break: break-word;\\n`;\\n\\ntype InfoPanelTextProps = ComponentPropsWithoutRef<typeof Box>;\\n\\nconst InfoPanelText = (props: InfoPanelTextProps) => <Box mb={8} fontScale='p2' color='hint' className={wordBreak} {...props} />;\\n\\nexport default InfoPanelText;\\n\",null],\"names\":[\"_extends\",\"_taggedTemplateLiteral\",\"css\",\"Box\",\"React\",\"module\",\"link\",\"default\",\"v\",\"wordBreak\",\"_templateObject\",\"exportDefault\",\"props\",\"createElement\",\"mb\",\"fontScale\",\"color\",\"className\"],\"mappings\":\"iCAAAA,EAA6CC,EAA7CC,EAA6CC,EAAAC,EAAjCC,EAAQC,IAAA,CAAA,iCAAyB,CAAAC,QAAAC,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,+CAAA,CAAAC,QAAAC,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAtCH,EAAOC,IAAA,CAAM,yBAAyB,CAAAJ,IAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wBAAA,CAAAH,IAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAC,QAAAC,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAK7C,IAAMC,EAAYP,EAAGQ,GAAAA,CAAAA,EAAAT,EAAA,CAAA,+BAAA,CAAA,GALrBI,EAAOM,aAAa,CAWGC,GAA8BR,EAAAS,aAAA,CAACV,EAAGH,EAAA,CAACc,GAAI,EAAGC,UAAU,KAAKC,MAAM,OAAOC,UAAWR,CAAU,EAAKG\"}"}