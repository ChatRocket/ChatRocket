{"code":"function module(e,n,t){var r,a,c,i,l,u,o,m,f,s,d,h,p,g;t.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(e){r=e}},0),t.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(e){a=e}},1),t.link(\"@rocket.chat/fuselage\",{CheckBox:function(e){c=e},Table:function(e){i=e},Tag:function(e){l=e},Pagination:function(e){u=e},TableHead:function(e){o=e},TableRow:function(e){m=e},TableCell:function(e){f=e},TableBody:function(e){s=e}},0),t.link(\"react\",{default:function(e){d=e},useState:function(e){h=e},useCallback:function(e){p=e}},1),t.link(\"react-i18next\",{useTranslation:function(e){g=e}},2),t.exportDefault(function(e){var n=e.channels,t=e.channelsCount,E=e.setChannels,_=g().t,b=h(0),k=a(b,2),v=k[0],P=k[1],T=h(25),C=a(T,2),w=C[0],x=C[1],S=p(function(e){var n=e.count,t=e.current;return _(\"Showing_results_of\",{postProcess:\"sprintf\",sprintf:[t+1,Math.min(t+e.itemsPerPage,n),n]})},[_]),y=p(function(){return _(\"Items_per_page:\")},[_]);return n.length?d.createElement(d.Fragment,null,d.createElement(i,null,d.createElement(o,null,d.createElement(m,null,d.createElement(f,{width:\"x36\"},d.createElement(c,{checked:t>0,indeterminate:t>0&&t!==n.length,onChange:function(){E(function(e){var n=e.some(function(e){var n=e.is_archived,t=e.do_import;return n&&t});return 0===t?e.map(function(e){return r(r({},e),{},{do_import:!0})}):n?e.map(function(e){return e.is_archived?r(r({},e),{},{do_import:!1}):e}):e.map(function(e){return r(r({},e),{},{do_import:!1})})})}})),d.createElement(f,{is:\"th\"},_(\"Name\")),d.createElement(f,{is:\"th\",align:\"end\"}))),d.createElement(s,null,n.slice(v,v+w).map(function(e){return d.createElement(m,{key:e.channel_id},d.createElement(f,{width:\"x36\"},d.createElement(c,{checked:e.do_import,onChange:function(n){var t=n.currentTarget.checked;E(function(n){return n.map(function(n){return n===e?r(r({},n),{},{do_import:t}):n})})}})),d.createElement(f,null,e.name),d.createElement(f,{align:\"end\"},e.is_archived&&d.createElement(l,{variant:\"danger\"},_(\"Importer_Archived\"))))}))),d.createElement(u,{current:v,itemsPerPage:w,itemsPerPageLabel:y,showingResultsLabel:S,count:n.length||0,onSetItemsPerPage:x,onSetCurrent:P})):null})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/import/PrepareChannels.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { CheckBox, Table, Tag, Pagination, TableHead, TableRow, TableCell, TableBody } from '@rocket.chat/fuselage';\\nimport type { Dispatch, SetStateAction, ChangeEvent } from 'react';\\nimport React, { useState, useCallback } from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport type { ChannelDescriptor } from './ChannelDescriptor';\\n\\ntype PrepareChannelsProps = {\\n\\tchannelsCount: number;\\n\\tchannels: ChannelDescriptor[];\\n\\tsetChannels: Dispatch<SetStateAction<ChannelDescriptor[]>>;\\n};\\n\\n// TODO: review inner logic\\nconst PrepareChannels = ({ channels, channelsCount, setChannels }: PrepareChannelsProps) => {\\n\\tconst { t } = useTranslation();\\n\\tconst [current, setCurrent] = useState(0);\\n\\tconst [itemsPerPage, setItemsPerPage] = useState<25 | 50 | 100>(25);\\n\\tconst showingResultsLabel = useCallback(\\n\\t\\t({ count, current, itemsPerPage }) =>\\n\\t\\t\\tt('Showing_results_of', { postProcess: 'sprintf', sprintf: [current + 1, Math.min(current + itemsPerPage, count), count] }),\\n\\t\\t[t],\\n\\t);\\n\\tconst itemsPerPageLabel = useCallback(() => t('Items_per_page:'), [t]);\\n\\n\\tif (!channels.length) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\treturn (\\n\\t\\t<>\\n\\t\\t\\t<Table>\\n\\t\\t\\t\\t<TableHead>\\n\\t\\t\\t\\t\\t<TableRow>\\n\\t\\t\\t\\t\\t\\t<TableCell width='x36'>\\n\\t\\t\\t\\t\\t\\t\\t<CheckBox\\n\\t\\t\\t\\t\\t\\t\\t\\tchecked={channelsCount > 0}\\n\\t\\t\\t\\t\\t\\t\\t\\tindeterminate={channelsCount > 0 && channelsCount !== channels.length}\\n\\t\\t\\t\\t\\t\\t\\t\\tonChange={(): void => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsetChannels((channels) => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tconst hasCheckedArchivedChannels = channels.some(({ is_archived, do_import }) => is_archived && do_import);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tconst isChecking = channelsCount === 0;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (isChecking) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn channels.map((channel) => ({ ...channel, do_import: true }));\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (hasCheckedArchivedChannels) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn channels.map((channel) => (channel.is_archived ? { ...channel, do_import: false } : channel));\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn channels.map((channel) => ({ ...channel, do_import: false }));\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t<TableCell is='th'>{t('Name')}</TableCell>\\n\\t\\t\\t\\t\\t\\t<TableCell is='th' align='end'></TableCell>\\n\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t</TableHead>\\n\\t\\t\\t\\t<TableBody>\\n\\t\\t\\t\\t\\t{channels.slice(current, current + itemsPerPage).map((channel) => (\\n\\t\\t\\t\\t\\t\\t<TableRow key={channel.channel_id}>\\n\\t\\t\\t\\t\\t\\t\\t<TableCell width='x36'>\\n\\t\\t\\t\\t\\t\\t\\t\\t<CheckBox\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tchecked={channel.do_import}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonChange={(event: ChangeEvent<HTMLInputElement>): void => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tconst { checked } = event.currentTarget;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetChannels((channels) =>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tchannels.map((_channel) => (_channel === channel ? { ..._channel, do_import: checked } : _channel)),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t<TableCell>{channel.name}</TableCell>\\n\\t\\t\\t\\t\\t\\t\\t<TableCell align='end'>{channel.is_archived && <Tag variant='danger'>{t('Importer_Archived')}</Tag>}</TableCell>\\n\\t\\t\\t\\t\\t\\t</TableRow>\\n\\t\\t\\t\\t\\t))}\\n\\t\\t\\t\\t</TableBody>\\n\\t\\t\\t</Table>\\n\\t\\t\\t<Pagination\\n\\t\\t\\t\\tcurrent={current}\\n\\t\\t\\t\\titemsPerPage={itemsPerPage}\\n\\t\\t\\t\\titemsPerPageLabel={itemsPerPageLabel}\\n\\t\\t\\t\\tshowingResultsLabel={showingResultsLabel}\\n\\t\\t\\t\\tcount={channels.length || 0}\\n\\t\\t\\t\\tonSetItemsPerPage={setItemsPerPage}\\n\\t\\t\\t\\tonSetCurrent={setCurrent}\\n\\t\\t\\t/>\\n\\t\\t</>\\n\\t);\\n};\\n\\nexport default PrepareChannels;\\n\",null],\"names\":[\"_objectSpread\",\"_slicedToArray\",\"CheckBox\",\"Table\",\"Tag\",\"Pagination\",\"TableHead\",\"TableRow\",\"TableCell\",\"TableBody\",\"React\",\"useState\",\"useCallback\",\"useTranslation\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"channels\",\"channelsCount\",\"setChannels\",\"t\",\"_useTranslation\",\"_useState\",\"_useState2\",\"current\",\"setCurrent\",\"_useState3\",\"_useState4\",\"itemsPerPage\",\"setItemsPerPage\",\"showingResultsLabel\",\"_ref2\",\"count\",\"postProcess\",\"sprintf\",\"Math\",\"min\",\"itemsPerPageLabel\",\"length\",\"createElement\",\"Fragment\",\"width\",\"checked\",\"indeterminate\",\"onChange\",\"hasCheckedArchivedChannels\",\"some\",\"_ref3\",\"is_archived\",\"do_import\",\"map\",\"channel\",\"is\",\"align\",\"slice\",\"key\",\"channel_id\",\"event\",\"currentTarget\",\"_channel\",\"name\",\"variant\",\"onSetItemsPerPage\",\"onSetCurrent\"],\"mappings\":\"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\"}"}