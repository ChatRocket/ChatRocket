{"code":"function module(e,r,t){let s,n,i;t.link(\"../../_virtual/util.mjs\",{__exports(e){s=e}},0),t.link(\"./types.mjs\",{t(e){n=e}},1),t.link(\"./sets.mjs\"),t.link(\"../../_virtual/sets.mjs\",{__exports(e){i=e}},2),function(e){let r=n,t=i,s={0:0,t:9,n:10,v:11,f:12,r:13};e.strToChars=function(e){return e=e.replace(/(\\[\\\\b\\])|(\\\\)?\\\\(?:u([A-F0-9]{4})|x([A-F0-9]{2})|(0?[0-7]{2})|c([@A-Z[\\\\\\]^?])|([0tnvfr]))/g,function(e,r,t,n,i,o,l,a){if(t)return e;var u=String.fromCharCode(r?8:n?parseInt(n,16):i?parseInt(i,16):o?parseInt(o,8):l?\"@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^ ?\".indexOf(l):s[a]);return/[[\\]{}^$.|?*+()]/.test(u)&&(u=\"\\\\\"+u),u})},e.tokenizeClass=(s,n)=>{for(var i,o,l=[],a=/\\\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\\\)(.)|([^\\]\\\\]))-(?:\\\\)?([^\\]]))|(\\])|(?:\\\\)?([^])/g;null!=(i=a.exec(s));)if(i[1])l.push(t.words());else if(i[2])l.push(t.ints());else if(i[3])l.push(t.whitespace());else if(i[4])l.push(t.notWords());else if(i[5])l.push(t.notInts());else if(i[6])l.push(t.notWhitespace());else if(i[7])l.push({type:r.RANGE,from:(i[8]||i[9]).charCodeAt(0),to:i[10].charCodeAt(0)});else{if(!(o=i[12]))return[l,a.lastIndex];l.push({type:r.CHAR,value:o.charCodeAt(0)})}e.error(n,\"Unterminated character class\")},e.error=(e,r)=>{throw SyntaxError(\"Invalid regular expression: /\"+e+\"/: \"+r)}}(s)}","map":"{\"version\":3,\"sources\":[\"../../../node_modules/ret/lib/util.js\",\"<anon>\"],\"sourcesContent\":[\"const types = require('./types');\\nconst sets  = require('./sets');\\n\\n\\nconst CTRL = '@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\\\\\]^ ?';\\nconst SLSH = { '0': 0, 't': 9, 'n': 10, 'v': 11, 'f': 12, 'r': 13 };\\n\\n/**\\n * Finds character representations in str and convert all to\\n * their respective characters\\n *\\n * @param {String} str\\n * @return {String}\\n */\\nexports.strToChars = function(str) {\\n  /* jshint maxlen: false */\\n  var chars_regex = /(\\\\[\\\\\\\\b\\\\])|(\\\\\\\\)?\\\\\\\\(?:u([A-F0-9]{4})|x([A-F0-9]{2})|(0?[0-7]{2})|c([@A-Z[\\\\\\\\\\\\]^?])|([0tnvfr]))/g;\\n  str = str.replace(chars_regex, function(s, b, lbs, a16, b16, c8, dctrl, eslsh) {\\n    if (lbs) {\\n      return s;\\n    }\\n\\n    var code = b ? 8 :\\n      a16   ? parseInt(a16, 16) :\\n      b16   ? parseInt(b16, 16) :\\n      c8    ? parseInt(c8,   8) :\\n      dctrl ? CTRL.indexOf(dctrl) :\\n      SLSH[eslsh];\\n\\n    var c = String.fromCharCode(code);\\n\\n    // Escape special regex characters.\\n    if (/[[\\\\]{}^$.|?*+()]/.test(c)) {\\n      c = '\\\\\\\\' + c;\\n    }\\n\\n    return c;\\n  });\\n\\n  return str;\\n};\\n\\n\\n/**\\n * turns class into tokens\\n * reads str until it encounters a ] not preceeded by a \\\\\\n *\\n * @param {String} str\\n * @param {String} regexpStr\\n * @return {Array.<Array.<Object>, Number>}\\n */\\nexports.tokenizeClass = (str, regexpStr) => {\\n  /* jshint maxlen: false */\\n  var tokens = [];\\n  var regexp = /\\\\\\\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\\\\\\\)(.)|([^\\\\]\\\\\\\\]))-(?:\\\\\\\\)?([^\\\\]]))|(\\\\])|(?:\\\\\\\\)?([^])/g;\\n  var rs, c;\\n\\n\\n  while ((rs = regexp.exec(str)) != null) {\\n    if (rs[1]) {\\n      tokens.push(sets.words());\\n\\n    } else if (rs[2]) {\\n      tokens.push(sets.ints());\\n\\n    } else if (rs[3]) {\\n      tokens.push(sets.whitespace());\\n\\n    } else if (rs[4]) {\\n      tokens.push(sets.notWords());\\n\\n    } else if (rs[5]) {\\n      tokens.push(sets.notInts());\\n\\n    } else if (rs[6]) {\\n      tokens.push(sets.notWhitespace());\\n\\n    } else if (rs[7]) {\\n      tokens.push({\\n        type: types.RANGE,\\n        from: (rs[8] || rs[9]).charCodeAt(0),\\n        to: rs[10].charCodeAt(0),\\n      });\\n\\n    } else if ((c = rs[12])) {\\n      tokens.push({\\n        type: types.CHAR,\\n        value: c.charCodeAt(0),\\n      });\\n\\n    } else {\\n      return [tokens, regexp.lastIndex];\\n    }\\n  }\\n\\n  exports.error(regexpStr, 'Unterminated character class');\\n};\\n\\n\\n/**\\n * Shortcut to throw errors.\\n *\\n * @param {String} regexp\\n * @param {String} msg\\n */\\nexports.error = (regexp, msg) => {\\n  throw new SyntaxError('Invalid regular expression: /' + regexp + '/: ' + msg);\\n};\\n\",null],\"names\":[\"types$1\",\"types\",\"sets$1\",\"sets\",\"SLSH\",\"exports\",\"strToChars\",\"str\",\"replace\",\"s\",\"b\",\"lbs\",\"a16\",\"b16\",\"c8\",\"dctrl\",\"eslsh\",\"c\",\"String\",\"fromCharCode\",\"parseInt\",\"CTRL\",\"indexOf\",\"test\",\"tokenizeClass\",\"regexpStr\",\"rs\",\"tokens\",\"regexp\",\"exec\",\"push\",\"words\",\"ints\",\"whitespace\",\"notWords\",\"notInts\",\"notWhitespace\",\"type\",\"RANGE\",\"from\",\"charCodeAt\",\"to\",\"lastIndex\",\"CHAR\",\"value\",\"error\",\"msg\",\"SyntaxError\"],\"mappings\":\"sNAAA,IAAMA,EAAQC,EACRC,EAAQC,EAIRC,EAAO,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,GAAI,EAAK,GAAI,EAAK,GAAI,EAAK,EAAE,CASjEC,CAAAA,EAAqBC,UAAA,CAAA,SAASC,CAAG,EAyB/B,OAtBAA,EAAMA,EAAIC,OAAO,CADC,+FACa,SAASC,CAAC,CAAEC,CAAC,CAAEC,CAAG,CAAEC,CAAG,CAAEC,CAAG,CAAEC,CAAE,CAAEC,CAAK,CAAEC,CAAK,EAC3E,GAAIL,EACF,OAAOF,EAUT,IAAIQ,EAAIC,OAAOC,YAAY,CAPhBT,EAAI,EACbE,EAAQQ,SAASR,EAAK,IACtBC,EAAQO,SAASP,EAAK,IACtBC,EAAQM,SAASN,EAAM,GACvBC,EAAQM,AAtBD,qCAsBMC,OAAO,CAACP,GACrBX,CAAI,CAACY,EAAM,EASb,MAJI,mBAAmBO,IAAI,CAACN,IAC1BA,CAAAA,EAAI,KAAOA,CAAAA,EAGNA,CACX,EAGA,EAWAZ,EAAAmB,aAAA,CAAwB,CAACjB,EAAKkB,KAO5B,IALA,IAEIC,EAAIT,EAFJU,EAAS,EAAE,CACXC,EAAS,4FAIN,AAA2B,MAA1BF,CAAAA,EAAKE,EAAOC,IAAI,CAACtB,EAAG,GAC1B,GAAImB,CAAE,CAAC,EAAE,CACPC,EAAOG,IAAI,CAAC5B,EAAK6B,KAAK,SAEjB,GAAIL,CAAE,CAAC,EAAE,CACdC,EAAOG,IAAI,CAAC5B,EAAK8B,IAAI,SAEhB,GAAIN,CAAE,CAAC,EAAE,CACdC,EAAOG,IAAI,CAAC5B,EAAK+B,UAAU,SAEtB,GAAIP,CAAE,CAAC,EAAE,CACdC,EAAOG,IAAI,CAAC5B,EAAKgC,QAAQ,SAEpB,GAAIR,CAAE,CAAC,EAAE,CACdC,EAAOG,IAAI,CAAC5B,EAAKiC,OAAO,SAEnB,GAAIT,CAAE,CAAC,EAAE,CACdC,EAAOG,IAAI,CAAC5B,EAAKkC,aAAa,SAEzB,GAAIV,CAAE,CAAC,EAAE,CACdC,EAAOG,IAAI,CAAC,CACVO,KAAMrC,EAAMsC,KAAK,CACjBC,KAAM,AAACb,CAAAA,CAAE,CAAC,EAAE,EAAIA,CAAE,CAAC,EAAE,AAAD,EAAGc,UAAU,CAAC,GAClCC,GAAIf,CAAE,CAAC,GAAG,CAACc,UAAU,CAAC,EAC9B,QAEW,IAAKvB,CAAAA,EAAIS,CAAE,CAAC,GAAG,AAAD,EAOnB,MAAO,CAACC,EAAQC,EAAOc,SAAS,CAAC,CANjCf,EAAOG,IAAI,CAAC,CACVO,KAAMrC,EAAM2C,IAAI,CAChBC,MAAO3B,EAAEuB,UAAU,CAAC,EAC5B,GAOEnC,EAAQwC,KAAK,CAACpB,EAAW,+BAC3B,EASApB,EAAAwC,KAAA,CAAgB,CAACjB,EAAQkB,KACvB,MAAM,AAAIC,YAAY,gCAAkCnB,EAAS,MAAQkB\"}"}