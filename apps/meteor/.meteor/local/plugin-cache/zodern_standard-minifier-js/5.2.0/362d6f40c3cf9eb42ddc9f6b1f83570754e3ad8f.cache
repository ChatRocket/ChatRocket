{"code":"function module(e,n,t){var o,l,a,c,i,u,r;t.link(\"@rocket.chat/fuselage\",{Box:function(e){o=e}},0),t.link(\"react\",{default:function(e){l=e}},1),t.link(\"react-i18next\",{useTranslation:function(e){a=e}},2),t.link(\"../../../../components/RoomIcon/OmnichannelRoomIcon\",{OmnichannelRoomIcon:function(e){c=e}},3),t.link(\"../../components/Field\",{default:function(e){i=e}},4),t.link(\"../../components/Info\",{default:function(e){u=e}},5),t.link(\"../../components/Label\",{default:function(e){r=e}},6),t.exportDefault(function(e){var n=e.room,t=a().t,s=n.source.alias||n.source.id||n.source.type,m={widget:t(\"Livechat\"),email:t(\"Email\"),sms:t(\"SMS\"),app:n.source.alias||t(\"Custom_Integration\"),api:n.source.alias||t(\"Custom_Integration\"),other:t(\"Custom_Integration\")},f={widget:\"\",email:null==n?void 0:n.source.id,sms:t(\"External\"),app:n.source.label||t(\"External\"),api:n.source.label||t(\"External\"),other:t(\"External\")};return l.createElement(i,null,l.createElement(r,null,t(\"Channel\")),l.createElement(u,null,l.createElement(o,{display:\"flex\",alignItems:\"center\"},l.createElement(c,{source:n.source,status:n.v.status,size:\"x24\"}),l.createElement(r,{mi:8,mbe:\"0\"},m[n.source.type]||s),f[n.source.type])))})}","map":"{\"version\":3,\"sources\":[\"client/views/omnichannel/directory/components/SourceField.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IOmnichannelRoom } from '@rocket.chat/core-typings';\\nimport { Box } from '@rocket.chat/fuselage';\\nimport React from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport { OmnichannelRoomIcon } from '../../../../components/RoomIcon/OmnichannelRoomIcon';\\nimport Field from '../../components/Field';\\nimport Info from '../../components/Info';\\nimport Label from '../../components/Label';\\n\\ntype SourceFieldProps = {\\n\\troom: IOmnichannelRoom;\\n};\\n\\nconst SourceField = ({ room }: SourceFieldProps) => {\\n\\tconst { t } = useTranslation();\\n\\n\\tconst roomSource = room.source.alias || room.source.id || room.source.type;\\n\\n\\t// TODO: create a hook that gets the default types values (alias, icons, ids, etc...)\\n\\t// so we don't have to write this object again and again\\n\\tconst defaultTypesLabels: {\\n\\t\\twidget: string;\\n\\t\\temail: string;\\n\\t\\tsms: string;\\n\\t\\tapp: string;\\n\\t\\tapi: string;\\n\\t\\tother: string;\\n\\t} = {\\n\\t\\twidget: t('Livechat'),\\n\\t\\temail: t('Email'),\\n\\t\\tsms: t('SMS'),\\n\\t\\tapp: room.source.alias || t('Custom_Integration'),\\n\\t\\tapi: room.source.alias || t('Custom_Integration'),\\n\\t\\tother: t('Custom_Integration'),\\n\\t};\\n\\n\\tconst defaultTypesVisitorData: {\\n\\t\\twidget: string | undefined;\\n\\t\\temail: string | undefined;\\n\\t\\tsms: string;\\n\\t\\tapp: string;\\n\\t\\tapi: string;\\n\\t\\tother: string;\\n\\t} = {\\n\\t\\twidget: '',\\n\\t\\temail: room?.source.id,\\n\\t\\tsms: t('External'),\\n\\t\\tapp: room.source.label || t('External'),\\n\\t\\tapi: room.source.label || t('External'),\\n\\t\\tother: t('External'),\\n\\t};\\n\\n\\treturn (\\n\\t\\t<Field>\\n\\t\\t\\t<Label>{t('Channel')}</Label>\\n\\t\\t\\t<Info>\\n\\t\\t\\t\\t<Box display='flex' alignItems='center'>\\n\\t\\t\\t\\t\\t<OmnichannelRoomIcon source={room.source} status={room.v.status} size='x24' />\\n\\t\\t\\t\\t\\t<Label mi={8} mbe='0'>\\n\\t\\t\\t\\t\\t\\t{defaultTypesLabels[room.source.type] || roomSource}\\n\\t\\t\\t\\t\\t</Label>\\n\\t\\t\\t\\t\\t{defaultTypesVisitorData[room.source.type]}\\n\\t\\t\\t\\t</Box>\\n\\t\\t\\t</Info>\\n\\t\\t</Field>\\n\\t);\\n};\\n\\nexport default SourceField;\\n\",null],\"names\":[\"Box\",\"React\",\"useTranslation\",\"OmnichannelRoomIcon\",\"Field\",\"Info\",\"Label\",\"module\",\"link\",\"v\",\"exportDefault\",\"_ref\",\"room\",\"t\",\"_useTranslation\",\"roomSource\",\"source\",\"alias\",\"id\",\"type\",\"defaultTypesLabels\",\"widget\",\"email\",\"sms\",\"app\",\"api\",\"other\",\"defaultTypesVisitorData\",\"label\",\"createElement\",\"display\",\"alignItems\",\"status\",\"size\",\"mi\",\"mbe\"],\"mappings\":\"uBAcA,IAbAA,EAA4CC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAArCC,EAAOC,IAAA,CAAM,wBAAwB,CAAAR,IAAA,SAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,QAAA,CAAA,QAAA,SAAAC,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,gBAAA,CAAAN,eAAA,SAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,sDAAA,CAAAL,oBAAA,SAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,yBAAA,CAAA,QAAA,SAAAC,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,wBAAA,CAAA,QAAA,SAAAC,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,yBAAA,CAAA,QAAA,SAAAC,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAA5CF,EAAOG,aAAa,CAaA,SAAAC,CAAA,EAA+B,IAA5BC,EAAID,EAAJC,IAAI,CAClBC,EAACC,AAAKZ,IAANW,CAAC,CAEHE,EAAaH,EAAKI,MAAM,CAACC,KAAK,EAAIL,EAAKI,MAAM,CAACE,EAAE,EAAIN,EAAKI,MAAM,CAACG,IAAI,CAIpEC,EAOF,CACHC,OAAQR,EAAE,YACVS,MAAOT,EAAE,SACTU,IAAKV,EAAE,OACPW,IAAKZ,EAAKI,MAAM,CAACC,KAAK,EAAIJ,EAAE,sBAC5BY,IAAKb,EAAKI,MAAM,CAACC,KAAK,EAAIJ,EAAE,sBAC5Ba,MAAOb,EAAE,uBAGJc,EAOF,CACHN,OAAQ,GACRC,MAAOV,MAAAA,EAAI,KAAA,EAAJA,EAAMI,MAAM,CAACE,EAAE,CACtBK,IAAKV,EAAE,YACPW,IAAKZ,EAAKI,MAAM,CAACY,KAAK,EAAIf,EAAE,YAC5BY,IAAKb,EAAKI,MAAM,CAACY,KAAK,EAAIf,EAAE,YAC5Ba,MAAOb,EAAE,aAGV,OACCZ,EAAA4B,aAAA,CAACzB,EAAK,KACLH,EAAA4B,aAAA,CAACvB,EAAK,KAAEO,EAAE,YACVZ,EAAA4B,aAAA,CAACxB,EAAI,KACJJ,EAAA4B,aAAA,CAAC7B,EAAG,CAAC8B,QAAQ,OAAOC,WAAW,QAAQ,EACtC9B,EAAA4B,aAAA,CAAC1B,EAAmB,CAACa,OAAQJ,EAAKI,MAAO,CAACgB,OAAQpB,EAAKH,CAAC,CAACuB,MAAO,CAACC,KAAK,KAAK,GAC3EhC,EAAA4B,aAAA,CAACvB,EAAK,CAAC4B,GAAI,EAAGC,IAAI,GAAG,EACnBf,CAAkB,CAACR,EAAKI,MAAM,CAACG,IAAI,CAAC,EAAIJ,GAEzCY,CAAuB,CAACf,EAAKI,MAAM,CAACG,IAAI,CACrC,GAIT\"}"}