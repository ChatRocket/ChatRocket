{"code":"Package[\"core-runtime\"].queue(\"autoupdate\",function(){var e,t=Package.meteor.Meteor;Package.meteor.global,Package.meteor.meteorEnv,Package.tracker.Tracker,Package.tracker.Deps;var n=Package.retry.Retry;Package[\"ddp-client\"].DDP;var r=Package.modules.meteorInstall;Package.modules.meteorBabelHelpers;var o=Package.promise.Promise;Package[\"ecmascript-runtime-client\"].Symbol;var a=Package[\"ecmascript-runtime-client\"].Map,i=Package[\"ecmascript-runtime-client\"].Set;return{export:function(){return{Autoupdate:e}},require:r({node_modules:{meteor:{autoupdate:{\"autoupdate_client.js\":function e(e,r,a){(function(e){e.export({Autoupdate:function(){return s}}),e.link(\"./client_versions.js\",{ClientVersions:function(e){r=e}},0);var r,a=t.isCordova?\"web.cordova\":t.isModern?\"web.browser\":\"web.browser.legacy\",i=((__meteor_runtime_config__.autoupdate||{}).versions||{})[a]||{version:\"unknown\",versionRefreshable:\"unknown\",versionNonRefreshable:\"unknown\",assets:[]},s={},c=s._clientVersions=new r;t.connection.registerStoreClient(\"meteor_autoupdate_clientVersions\",c.createStore()),s.newClientAvailable=function(){return c.newClientAvailable(a,[\"versionRefreshable\",\"versionNonRefreshable\"],i)};var u=!1,l=new n({minCount:0,baseTimeout:3e4}),f=0;s._retrySubscription=function(){t.subscribe(\"meteor_autoupdate_clientVersions\",{onError:function(e){t._debug(\"autoupdate subscription failed\",e),f++,l.retryLater(f,function(){s._retrySubscription()})},onReady:function(){var e=o.resolve(),n=c.watch(function(o){e.then(function(){return function(e){if(e._id===a){if(e.versionNonRefreshable!==i.versionNonRefreshable){n&&n(),Package.reload&&(console.warn(\"Client version changed from\",i.versionNonRefreshable,\"to\",e.versionNonRefreshable,\"Page will reload in \"+r+\" seconds\"),setTimeout(function(){Package.reload.Reload._reload()},1e3*r));return}if(e.versionRefreshable!==i.versionRefreshable){var o=function(e,n){var r;if(e.onload=function(){u=!0,r||(r=!0,n())},!u)var o=t.setInterval(function(){e.sheet&&(r||(r=!0,n()),t.clearInterval(o))},50)},s=function(){l.length>0&&--f<1&&l.splice(0).forEach(function(e){e.parentNode.removeChild(e)})};i.versionRefreshable=e.versionRefreshable;var c=e.assets||[],l=[];Array.prototype.forEach.call(document.getElementsByTagName(\"link\"),function(e){\"__meteor-css__\"===e.className&&l.push(e)});var f=c.length;c.length>0?c.forEach(function(e){var n=document.createElement(\"link\");n.setAttribute(\"rel\",\"stylesheet\"),n.setAttribute(\"type\",\"text/css\"),n.setAttribute(\"class\",\"__meteor-css__\"),n.setAttribute(\"href\",e.url),o(n,function(){t.setTimeout(s,200)}),document.getElementsByTagName(\"head\").item(0).appendChild(n)}):s()}}}(o)})}),r=t.isProduction?60:0}})},s._retrySubscription()}).call(this,a)},\"client_versions.js\":function e(e,t,n){n.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(e){r=e}},0),n.export({ClientVersions:function(){return c}}),n.link(\"meteor/tracker\",{Tracker:function(e){s=e}},0);var r,s,c=function(){function e(){this._versions=new a,this._watchCallbacks=new i}var t=e.prototype;return t.createStore=function(){var e=this;return{update:function(t){var n=t.id,r=t.msg,o=t.fields;(\"added\"===r||\"changed\"===r)&&e.set(n,o)}}},t.hasVersions=function(){return this._versions.size>0},t.get=function(e){return this._versions.get(e)},t.set=function(e,t){var n=this._versions.get(e),o=!1;n?Object.assign(n,t):(n=r({_id:e},t),o=!0,this._versions.set(e,n)),this._watchCallbacks.forEach(function(e){var t=e.fn,r=e.filter;r&&r!==n._id||t(n,o)})},t.watch=function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=n.skipInitial,a=n.filter;if(!r){var i=o.resolve();this._versions.forEach(function(t){a&&a!==t._id||i.then(function(){return e(t,!0)})})}var s={fn:e,filter:a};return this._watchCallbacks.add(s),function(){return t._watchCallbacks.delete(s)}},t.newClientAvailable=function(e,t,n){function r(r){return r._id===e&&t.some(function(e){return r[e]!==n[e]})}var o=new s.Dependency,a=this.get(e);o.depend();var i=this.watch(function(e){r(e)&&(o.changed(),i())},{skipInitial:!0});return!!a&&r(a)},e}()}}}}},{extensions:[\".js\",\".json\"]}),eagerModulePaths:[\"/node_modules/meteor/autoupdate/autoupdate_client.js\"],mainModulePath:\"/node_modules/meteor/autoupdate/autoupdate_client.js\"}});","map":"{\"version\":3,\"sources\":[\"packages/autoupdate/autoupdate_client.js\",\"packages/autoupdate/client_versions.js\",\"<anon>\"],\"sourcesContent\":[\"// Subscribe to the `meteor_autoupdate_clientVersions` collection,\\n// which contains the set of acceptable client versions.\\n//\\n// A \\\"hard code push\\\" occurs when the running client version is not in\\n// the set of acceptable client versions (or the server updates the\\n// collection, there is a published client version marked `current` and\\n// the running client version is no longer in the set).\\n//\\n// When the `reload` package is loaded, a hard code push causes\\n// the browser to reload, so that it will load the latest client\\n// version from the server.\\n//\\n// A \\\"soft code push\\\" represents the situation when the running client\\n// version is in the set of acceptable versions, but there is a newer\\n// version available on the server.\\n//\\n// `Autoupdate.newClientAvailable` is a reactive data source which\\n// becomes `true` if a new version of the client is available on\\n// the server.\\n//\\n// This package doesn't implement a soft code reload process itself,\\n// but `newClientAvailable` could be used for example to display a\\n// \\\"click to reload\\\" link to the user.\\n\\n// The client version of the client code currently running in the\\n// browser.\\n\\nimport { ClientVersions } from './client_versions.js';\\n\\nconst clientArch = Meteor.isCordova ? 'web.cordova' : Meteor.isModern ? 'web.browser' : 'web.browser.legacy';\\n\\nconst autoupdateVersions = ((__meteor_runtime_config__.autoupdate || {}).versions || {})[clientArch] || {\\n\\tversion: 'unknown',\\n\\tversionRefreshable: 'unknown',\\n\\tversionNonRefreshable: 'unknown',\\n\\tassets: [],\\n};\\n\\nexport const Autoupdate = {};\\n\\n// Stores acceptable client versions.\\nconst clientVersions = (Autoupdate._clientVersions = // Used by a self-test and hot-module-replacement\\n\\tnew ClientVersions());\\n\\nMeteor.connection.registerStoreClient('meteor_autoupdate_clientVersions', clientVersions.createStore());\\n\\nAutoupdate.newClientAvailable = function () {\\n\\treturn clientVersions.newClientAvailable(clientArch, ['versionRefreshable', 'versionNonRefreshable'], autoupdateVersions);\\n};\\n\\n// Set to true if the link.onload callback ever fires for any <link> node.\\nlet knownToSupportCssOnLoad = false;\\n\\nconst retry = new Retry({\\n\\t// Unlike the stream reconnect use of Retry, which we want to be instant\\n\\t// in normal operation, this is a wacky failure. We don't want to retry\\n\\t// right away, we can start slowly.\\n\\t//\\n\\t// A better way than timeconstants here might be to use the knowledge\\n\\t// of when we reconnect to help trigger these retries. Typically, the\\n\\t// server fixing code will result in a restart and reconnect, but\\n\\t// potentially the subscription could have a transient error.\\n\\tminCount: 0, // don't do any immediate retries\\n\\tbaseTimeout: 30 * 1000, // start with 30s\\n});\\n\\nlet failures = 0;\\n\\nAutoupdate._retrySubscription = () => {\\n\\tMeteor.subscribe('meteor_autoupdate_clientVersions', {\\n\\t\\tonError(error) {\\n\\t\\t\\tMeteor._debug('autoupdate subscription failed', error);\\n\\t\\t\\tfailures++;\\n\\t\\t\\tretry.retryLater(failures, function () {\\n\\t\\t\\t\\t// Just retry making the subscription, don't reload the whole\\n\\t\\t\\t\\t// page. While reloading would catch more cases (for example,\\n\\t\\t\\t\\t// the server went back a version and is now doing old-style hot\\n\\t\\t\\t\\t// code push), it would also be more prone to reload loops,\\n\\t\\t\\t\\t// which look really bad to the user. Just retrying the\\n\\t\\t\\t\\t// subscription over DDP means it is at least possible to fix by\\n\\t\\t\\t\\t// updating the server.\\n\\t\\t\\t\\tAutoupdate._retrySubscription();\\n\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\tonReady() {\\n\\t\\t\\t// Call checkNewVersionDocument with a slight delay, so that the\\n\\t\\t\\t// const handle declaration is guaranteed to be initialized, even if\\n\\t\\t\\t// the added or changed callbacks are called synchronously.\\n\\t\\t\\tconst resolved = Promise.resolve();\\n\\t\\t\\tfunction check(doc) {\\n\\t\\t\\t\\tresolved.then(() => checkNewVersionDocument(doc));\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst stop = clientVersions.watch(check);\\n\\n\\t\\t\\tconst reloadDelayInSeconds = Meteor.isProduction ? 60 : 0;\\n\\n\\t\\t\\tfunction checkNewVersionDocument(doc) {\\n\\t\\t\\t\\tif (doc._id !== clientArch) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (doc.versionNonRefreshable !== autoupdateVersions.versionNonRefreshable) {\\n\\t\\t\\t\\t\\t// Non-refreshable assets have changed, so we have to reload the\\n\\t\\t\\t\\t\\t// whole page rather than just replacing <link> tags.\\n\\t\\t\\t\\t\\tif (stop) stop();\\n\\t\\t\\t\\t\\tif (Package.reload) {\\n\\t\\t\\t\\t\\t\\t// The reload package should be provided by ddp-client, which\\n\\t\\t\\t\\t\\t\\t// is provided by the ddp package that autoupdate depends on.\\n\\n\\t\\t\\t\\t\\t\\t// Delay reload in 60 seconds\\n\\t\\t\\t\\t\\t\\tconsole.warn(\\n\\t\\t\\t\\t\\t\\t\\t'Client version changed from',\\n\\t\\t\\t\\t\\t\\t\\tautoupdateVersions.versionNonRefreshable,\\n\\t\\t\\t\\t\\t\\t\\t'to',\\n\\t\\t\\t\\t\\t\\t\\tdoc.versionNonRefreshable,\\n\\t\\t\\t\\t\\t\\t\\t`Page will reload in ${reloadDelayInSeconds} seconds`,\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tsetTimeout(() => {\\n\\t\\t\\t\\t\\t\\t\\tPackage.reload.Reload._reload();\\n\\t\\t\\t\\t\\t\\t}, reloadDelayInSeconds * 1000);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (doc.versionRefreshable !== autoupdateVersions.versionRefreshable) {\\n\\t\\t\\t\\t\\tautoupdateVersions.versionRefreshable = doc.versionRefreshable;\\n\\n\\t\\t\\t\\t\\t// Switch out old css links for the new css links. Inspired by:\\n\\t\\t\\t\\t\\t// https://github.com/guard/guard-livereload/blob/master/js/livereload.js#L710\\n\\t\\t\\t\\t\\tvar newCss = doc.assets || [];\\n\\t\\t\\t\\t\\tvar oldLinks = [];\\n\\n\\t\\t\\t\\t\\tArray.prototype.forEach.call(document.getElementsByTagName('link'), function (link) {\\n\\t\\t\\t\\t\\t\\tif (link.className === '__meteor-css__') {\\n\\t\\t\\t\\t\\t\\t\\toldLinks.push(link);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t\\tfunction waitUntilCssLoads(link, callback) {\\n\\t\\t\\t\\t\\t\\tvar called;\\n\\n\\t\\t\\t\\t\\t\\tlink.onload = function () {\\n\\t\\t\\t\\t\\t\\t\\tknownToSupportCssOnLoad = true;\\n\\t\\t\\t\\t\\t\\t\\tif (!called) {\\n\\t\\t\\t\\t\\t\\t\\t\\tcalled = true;\\n\\t\\t\\t\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\t\\tif (!knownToSupportCssOnLoad) {\\n\\t\\t\\t\\t\\t\\t\\tvar id = Meteor.setInterval(function () {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (link.sheet) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (!called) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcalled = true;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tMeteor.clearInterval(id);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}, 50);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tlet newLinksLeftToLoad = newCss.length;\\n\\t\\t\\t\\t\\tfunction removeOldLinks() {\\n\\t\\t\\t\\t\\t\\tif (oldLinks.length > 0 && --newLinksLeftToLoad < 1) {\\n\\t\\t\\t\\t\\t\\t\\toldLinks.splice(0).forEach((link) => {\\n\\t\\t\\t\\t\\t\\t\\t\\tlink.parentNode.removeChild(link);\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (newCss.length > 0) {\\n\\t\\t\\t\\t\\t\\tnewCss.forEach((css) => {\\n\\t\\t\\t\\t\\t\\t\\tconst newLink = document.createElement('link');\\n\\t\\t\\t\\t\\t\\t\\tnewLink.setAttribute('rel', 'stylesheet');\\n\\t\\t\\t\\t\\t\\t\\tnewLink.setAttribute('type', 'text/css');\\n\\t\\t\\t\\t\\t\\t\\tnewLink.setAttribute('class', '__meteor-css__');\\n\\t\\t\\t\\t\\t\\t\\tnewLink.setAttribute('href', css.url);\\n\\n\\t\\t\\t\\t\\t\\t\\twaitUntilCssLoads(newLink, function () {\\n\\t\\t\\t\\t\\t\\t\\t\\tMeteor.setTimeout(removeOldLinks, 200);\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t\\t\\t\\tconst head = document.getElementsByTagName('head').item(0);\\n\\t\\t\\t\\t\\t\\t\\thead.appendChild(newLink);\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tremoveOldLinks();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t});\\n};\\n\\nAutoupdate._retrySubscription();\\n\",\"import { Tracker } from 'meteor/tracker';\\n\\nexport class ClientVersions {\\n\\tconstructor() {\\n\\t\\tthis._versions = new Map();\\n\\t\\tthis._watchCallbacks = new Set();\\n\\t}\\n\\n\\t// Creates a Livedata store for use with `Meteor.connection.registerStore`.\\n\\t// After the store is registered, document updates reported by Livedata are\\n\\t// merged with the documents in this `ClientVersions` instance.\\n\\tcreateStore() {\\n\\t\\treturn {\\n\\t\\t\\tupdate: ({ id, msg, fields }) => {\\n\\t\\t\\t\\tif (msg === 'added' || msg === 'changed') {\\n\\t\\t\\t\\t\\tthis.set(id, fields);\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t};\\n\\t}\\n\\n\\thasVersions() {\\n\\t\\treturn this._versions.size > 0;\\n\\t}\\n\\n\\tget(id) {\\n\\t\\treturn this._versions.get(id);\\n\\t}\\n\\n\\t// Adds or updates a version document and invokes registered callbacks for the\\n\\t// added/updated document. If a document with the given ID already exists, its\\n\\t// fields are merged with `fields`.\\n\\tset(id, fields) {\\n\\t\\tlet version = this._versions.get(id);\\n\\t\\tlet isNew = false;\\n\\n\\t\\tif (version) {\\n\\t\\t\\tObject.assign(version, fields);\\n\\t\\t} else {\\n\\t\\t\\tversion = {\\n\\t\\t\\t\\t_id: id,\\n\\t\\t\\t\\t...fields,\\n\\t\\t\\t};\\n\\n\\t\\t\\tisNew = true;\\n\\t\\t\\tthis._versions.set(id, version);\\n\\t\\t}\\n\\n\\t\\tthis._watchCallbacks.forEach(({ fn, filter }) => {\\n\\t\\t\\tif (!filter || filter === version._id) {\\n\\t\\t\\t\\tfn(version, isNew);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\n\\t// Registers a callback that will be invoked when a version document is added\\n\\t// or changed. Calling the function returned by `watch` removes the callback.\\n\\t// If `skipInitial` is true, the callback isn't be invoked for existing\\n\\t// documents. If `filter` is set, the callback is only invoked for documents\\n\\t// with ID `filter`.\\n\\twatch(fn, { skipInitial, filter } = {}) {\\n\\t\\tif (!skipInitial) {\\n\\t\\t\\tconst resolved = Promise.resolve();\\n\\n\\t\\t\\tthis._versions.forEach((version) => {\\n\\t\\t\\t\\tif (!filter || filter === version._id) {\\n\\t\\t\\t\\t\\tresolved.then(() => fn(version, true));\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tconst callback = { fn, filter };\\n\\t\\tthis._watchCallbacks.add(callback);\\n\\n\\t\\treturn () => this._watchCallbacks.delete(callback);\\n\\t}\\n\\n\\t// A reactive data source for `Autoupdate.newClientAvailable`.\\n\\tnewClientAvailable(id, fields, currentVersion) {\\n\\t\\tfunction isNewVersion(version) {\\n\\t\\t\\treturn version._id === id && fields.some((field) => version[field] !== currentVersion[field]);\\n\\t\\t}\\n\\n\\t\\tconst dependency = new Tracker.Dependency();\\n\\t\\tconst version = this.get(id);\\n\\n\\t\\tdependency.depend();\\n\\n\\t\\tconst stop = this.watch(\\n\\t\\t\\t(version) => {\\n\\t\\t\\t\\tif (isNewVersion(version)) {\\n\\t\\t\\t\\t\\tdependency.changed();\\n\\t\\t\\t\\t\\tstop();\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t{ skipInitial: true },\\n\\t\\t);\\n\\n\\t\\treturn !!version && isNewVersion(version);\\n\\t}\\n}\\n\",null],\"names\":[\"module1\",\"export\",\"Autoupdate\",\"link\",\"ClientVersions\",\"v\",\"clientArch\",\"Meteor\",\"isCordova\",\"isModern\",\"autoupdateVersions\",\"__meteor_runtime_config__\",\"autoupdate\",\"versions\",\"version\",\"versionRefreshable\",\"versionNonRefreshable\",\"assets\",\"clientVersions\",\"_clientVersions\",\"connection\",\"registerStoreClient\",\"createStore\",\"newClientAvailable\",\"knownToSupportCssOnLoad\",\"retry\",\"Retry\",\"minCount\",\"baseTimeout\",\"failures\",\"_retrySubscription\",\"subscribe\",\"onError\",\"error\",\"_debug\",\"retryLater\",\"onReady\",\"resolved\",\"Promise\",\"resolve\",\"stop\",\"watch\",\"doc\",\"then\",\"checkNewVersionDocument\",\"_id\",\"Package\",\"reload\",\"console\",\"warn\",\"reloadDelayInSeconds\",\"setTimeout\",\"Reload\",\"_reload\",\"waitUntilCssLoads\",\"callback\",\"called\",\"onload\",\"id\",\"setInterval\",\"sheet\",\"clearInterval\",\"removeOldLinks\",\"oldLinks\",\"length\",\"newLinksLeftToLoad\",\"splice\",\"forEach\",\"parentNode\",\"removeChild\",\"newCss\",\"Array\",\"prototype\",\"call\",\"document\",\"getElementsByTagName\",\"className\",\"push\",\"css\",\"newLink\",\"createElement\",\"setAttribute\",\"url\",\"head\",\"item\",\"appendChild\",\"isProduction\",\"module\",\"default\",\"_objectSpread\",\"Tracker\",\"_versions\",\"Map\",\"_watchCallbacks\",\"Set\",\"_proto\",\"_this\",\"update\",\"_ref\",\"msg\",\"fields\",\"set\",\"hasVersions\",\"size\",\"get\",\"isNew\",\"Object\",\"assign\",\"_ref2\",\"fn\",\"filter\",\"_this2\",\"_ref3\",\"arguments\",\"undefined\",\"skipInitial\",\"add\",\"delete\",\"currentVersion\",\"isNewVersion\",\"some\",\"field\",\"dependency\",\"Dependency\",\"depend\",\"changed\"],\"mappings\":\"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\"}"}