{"code":"function module(e,t,r){var n,s,a,i,o,c,u,p,l,h,y,d,f,x,v,E,m,b,g,k,K,S,w,R,I,A,D,T,P,_,O,C,G,N,Y,F,M,U,B,H,V=[\"_id\"],W=[\"msg\",\"attachments\"];r.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(e){s=e}},0),r.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default:function(e){a=e}},1),r.link(\"@babel/runtime/regenerator\",{default:function(e){i=e}},2),r.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(e){o=e}},3),r.link(\"@babel/runtime/helpers/createClass\",{default:function(e){c=e}},4),r.link(\"@babel/runtime/helpers/inheritsLoose\",{default:function(e){u=e}},5),r.link(\"@babel/runtime/helpers/asyncIterator\",{default:function(e){p=e}},6),r.export({E2ERoom:function(){return q}}),r.link(\"@rocket.chat/base64\",{Base64:function(e){l=e}},0),r.link(\"@rocket.chat/emitter\",{Emitter:function(e){h=e}},1),r.link(\"ejson\",{default:function(e){y=e}},2),r.link(\"../../../client/lib/RoomManager\",{RoomManager:function(e){d=e}},3),r.link(\"../../../client/lib/rooms/roomCoordinator\",{roomCoordinator:function(e){f=e}},4),r.link(\"../../../definition/IRoomTypeConfig\",{RoomSettingsEnum:function(e){x=e}},5),r.link(\"../../models/client\",{ChatRoom:function(e){v=e},Subscriptions:function(e){E=e},Messages:function(e){m=e}},6),r.link(\"../../utils/client/lib/SDKClient\",{sdk:function(e){b=e}},7),r.link(\"../../utils/lib/i18n\",{t:function(e){g=e}},8),r.link(\"./E2ERoomState\",{E2ERoomState:function(e){k=e}},9),r.link(\"./helper\",{toString:function(e){K=e},toArrayBuffer:function(e){S=e},joinVectorAndEcryptedData:function(e){w=e},splitVectorAndEcryptedData:function(e){R=e},encryptRSA:function(e){I=e},encryptAES:function(e){A=e},decryptRSA:function(e){D=e},decryptAES:function(e){T=e},generateAESKey:function(e){P=e},exportJWKKey:function(e){_=e},importAESKey:function(e){O=e},importRSAKey:function(e){C=e},readFileAsArrayBuffer:function(e){G=e},encryptAESCTR:function(e){N=e},generateAESCTRKey:function(e){Y=e},sha256HashFromArrayBuffer:function(e){F=e},createSha256HashFromText:function(e){M=e}},10),r.link(\"./logger\",{log:function(e){U=e},logError:function(e){B=e}},11),r.link(\"./rocketchat.e2e\",{e2e:function(e){H=e}},12);var L=Symbol(\"keyID\"),j=Symbol(\"PAUSED\"),J=((n={})[k.NOT_STARTED]=[k.ESTABLISHING,k.DISABLED,k.KEYS_RECEIVED],n[k.READY]=[k.DISABLED,k.CREATING_KEYS,k.WAITING_KEYS],n[k.ERROR]=[k.KEYS_RECEIVED,k.NOT_STARTED],n[k.WAITING_KEYS]=[k.KEYS_RECEIVED,k.ERROR,k.DISABLED],n[k.ESTABLISHING]=[k.READY,k.KEYS_RECEIVED,k.ERROR,k.DISABLED,k.WAITING_KEYS,k.CREATING_KEYS],n),q=function(e){function t(t,r){var n;return(n=e.call(this)||this).state=void 0,n[j]=void 0,n[L]=void 0,n.userId=void 0,n.roomId=void 0,n.typeOfRoom=void 0,n.roomKeyId=void 0,n.groupSessionKey=void 0,n.oldKeys=void 0,n.sessionKeyExportedString=void 0,n.sessionKeyExported=void 0,n.userId=t,n.roomId=r._id,n.typeOfRoom=r.t,n.roomKeyId=r.e2eKeyId,n.once(k.READY,function(){return i.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,i.awrap(n.decryptOldRoomKeys());case 2:return e.abrupt(\"return\",n.decryptPendingMessages());case 3:case\"end\":return e.stop()}},null,null,null,Promise)}),n.once(k.READY,function(){return n.decryptSubscription()}),n.on(\"STATE_CHANGED\",function(e){n.roomId===d.opened&&n.log(\"[PREV: \"+e+\"]\",\"State CHANGED\")}),n.on(\"STATE_CHANGED\",function(){return n.handshake()}),n.setState(k.NOT_STARTED),n}u(t,e);var r=t.prototype;return r.log=function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];U.apply(void 0,[\"E2E ROOM { state: \"+this.state+\", rid: \"+this.roomId+\" }\"].concat(t))},r.error=function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];B.apply(void 0,[\"E2E ROOM { state: \"+this.state+\", rid: \"+this.roomId+\" }\"].concat(t))},r.hasSessionKey=function(){return!!this.groupSessionKey},r.getState=function(){return this.state},r.setState=function(e){var t=this.state,r=t===e?e===k.ERROR:!!(!(t in J)||J[t].includes(e))&&e;if(!r){this.error(\"invalid state \"+t+\" -> \"+e);return}this.state=r,this.log(t,\"->\",r),this.emit(\"STATE_CHANGED\",t),this.emit(r,this)},r.isReady=function(){return this.state===k.READY},r.isDisabled=function(){return this.state===k.DISABLED},r.enable=function(){this.state!==k.READY&&this.setState(k.READY)},r.disable=function(){this.setState(k.DISABLED)},r.pause=function(){this.log(\"PAUSED\",this[j],\"->\",!0),this[j]=!0,this.emit(\"PAUSED\",!0)},r.resume=function(){this.log(\"PAUSED\",this[j],\"->\",!1),this[j]=!1,this.emit(\"PAUSED\",!1)},r.keyReceived=function(){this.setState(k.KEYS_RECEIVED)},r.shouldConvertSentMessages=function(e){var t=this;return i.async(function(r){for(;;)switch(r.prev=r.next){case 0:if(!(!this.isReady()||this[j])){r.next=2;break}return r.abrupt(\"return\",!1);case 2:if(void 0!==this[j]){r.next=4;break}return r.abrupt(\"return\",new Promise(function(e){t.once(\"PAUSED\",e)}));case 4:if(\"/\"!==e.msg[0]){r.next=6;break}return r.abrupt(\"return\",!1);case 6:return r.abrupt(\"return\",!0);case 7:case\"end\":return r.stop()}},null,this,null,Promise)},r.shouldConvertReceivedMessages=function(){return this.isReady()},r.isWaitingKeys=function(){return this.state===k.WAITING_KEYS},r.decryptSubscription=function(){var e,t,r;return i.async(function(n){for(;;)switch(n.prev=n.next){case 0:if(!((null==(t=E.findOne({rid:this.roomId}))?void 0:null===(e=t.lastMessage)||void 0===e?void 0:e.t)!==\"e2e\")){n.next=4;break}return this.log(\"decryptSubscriptions nothing to do\"),n.abrupt(\"return\");case 4:return n.next=6,i.awrap(this.decryptMessage(t.lastMessage));case 6:r=n.sent,E.update({_id:t._id},{$set:{lastMessage:r}}),this.log(\"decryptSubscriptions Done\");case 9:case\"end\":return n.stop()}},null,this,null,Promise)},r.decryptOldRoomKeys=function(){var e,t,r,n,s,a,c,u,l;return i.async(function(h){for(;;)switch(h.prev=h.next){case 0:if(!(!(null!=(e=E.findOne({rid:this.roomId}))&&e.oldRoomKeys)||(null==e?void 0:e.oldRoomKeys.length)===0)){h.next=4;break}return this.log(\"decryptOldRoomKeys nothing to do\"),h.abrupt(\"return\");case 4:t=[],r=!1,n=!1,h.prev=7,a=p(e.oldRoomKeys);case 9:return h.next=11,i.awrap(a.next());case 11:if(!(r=!(c=h.sent).done)){h.next=27;break}return u=c.value,h.prev=13,h.next=16,i.awrap(this.decryptSessionKey(u.E2EKey));case 16:l=h.sent,t.push(o(o({},u),{},{E2EKey:l})),h.next=24;break;case 20:h.prev=20,h.t0=h.catch(13),this.error(\"Cannot decrypt old room key with id \"+u.e2eKeyId+\". This is likely because user private key changed or is missing. Skipping\"),t.push(o(o({},u),{},{E2EKey:null}));case 24:r=!1,h.next=9;break;case 27:h.next=33;break;case 29:h.prev=29,h.t1=h.catch(7),n=!0,s=h.t1;case 33:if(h.prev=33,h.prev=34,!(r&&null!=a.return)){h.next=38;break}return h.next=38,i.awrap(a.return());case 38:if(h.prev=38,!n){h.next=41;break}throw s;case 41:return h.finish(38);case 42:return h.finish(33);case 43:this.oldKeys=t,this.log(\"decryptOldRoomKeys Done\");case 45:case\"end\":return h.stop()}},null,this,[[7,29,33,43],[13,20],[34,,38,42]],Promise)},r.exportOldRoomKeys=function(e){var t,r,n,s,a,c,u,l;return i.async(function(h){for(;;)switch(h.prev=h.next){case 0:if(this.log(\"exportOldRoomKeys starting\"),!(!e||0===e.length)){h.next=4;break}return this.log(\"exportOldRoomKeys nothing to do\"),h.abrupt(\"return\");case 4:t=[],r=!1,n=!1,h.prev=7,a=p(e);case 9:return h.next=11,i.awrap(a.next());case 11:if(!(r=!(c=h.sent).done)){h.next=28;break}if(u=c.value,h.prev=13,u.E2EKey){h.next=16;break}return h.abrupt(\"continue\",25);case 16:return h.next=18,i.awrap(this.exportSessionKey(u.E2EKey));case 18:l=h.sent,t.push(o(o({},u),{},{E2EKey:l})),h.next=25;break;case 22:h.prev=22,h.t0=h.catch(13),this.error(\"Cannot decrypt old room key with id \"+u.e2eKeyId+\". This is likely because user private key changed or is missing. Skipping\");case 25:r=!1,h.next=9;break;case 28:h.next=34;break;case 30:h.prev=30,h.t1=h.catch(7),n=!0,s=h.t1;case 34:if(h.prev=34,h.prev=35,!(r&&null!=a.return)){h.next=39;break}return h.next=39,i.awrap(a.return());case 39:if(h.prev=39,!n){h.next=42;break}throw s;case 42:return h.finish(39);case 43:return h.finish(34);case 44:return this.log(\"exportOldRoomKeys Done: \"+t.length+\" keys exported\"),h.abrupt(\"return\",t);case 46:case\"end\":return h.stop()}},null,this,[[7,30,34,44],[13,22],[35,,39,43]],Promise)},r.decryptPendingMessages=function(){var e=this;return i.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt(\"return\",m.find({rid:this.roomId,t:\"e2e\",e2e:\"pending\"}).forEach(function t(t){var r,n;return i.async(function s(s){for(;;)switch(s.prev=s.next){case 0:return r=t._id,n=a(t,V),s.t0=m,s.t1={_id:r},s.next=5,i.awrap(e.decryptMessage(n));case 5:s.t2=s.sent,s.t0.update.call(s.t0,s.t1,s.t2);case 7:case\"end\":return s.stop()}},null,null,null,Promise)}));case 1:case\"end\":return t.stop()}},null,this,null,Promise)},r.handshake=function(){var e,t,r;return i.async(function(n){for(;;)switch(n.prev=n.next){case 0:if(H.isReady()){n.next=2;break}return n.abrupt(\"return\");case 2:if(!(this.state!==k.KEYS_RECEIVED&&this.state!==k.NOT_STARTED)){n.next=4;break}return n.abrupt(\"return\");case 4:if(this.setState(k.ESTABLISHING),n.prev=5,!(t=null===(e=E.findOne({rid:this.roomId}))||void 0===e?void 0:e.E2EKey)){n.next=12;break}return n.next=10,i.awrap(this.importGroupKey(t));case 10:case 25:return this.setState(k.READY),n.abrupt(\"return\");case 12:n.next=19;break;case 14:return n.prev=14,n.t0=n.catch(5),this.setState(k.ERROR),this.error(\"Error fetching group key: \",n.t0),n.abrupt(\"return\");case 19:if(n.prev=19,!(!(r=v.findOne({_id:this.roomId})).e2eKeyId&&this.userShouldCreateKeys(r))){n.next=27;break}return this.setState(k.CREATING_KEYS),n.next=25,i.awrap(this.createGroupKey());case 27:this.setState(k.WAITING_KEYS),this.log(\"Requesting room key\"),b.publish(\"notify-room-users\",[this.roomId+\"/e2ekeyRequest\",this.roomId,r.e2eKeyId]),n.next=35;break;case 32:n.prev=32,n.t1=n.catch(19),this.setState(k.ERROR);case 35:case\"end\":return n.stop()}},null,this,[[5,14],[19,32]],Promise)},r.userShouldCreateKeys=function(e){return\"d\"===e.t||e.u._id===this.userId},r.isSupportedRoomType=function(e){return f.getRoomDirectives(e).allowRoomSettingChange({},x.E2E)},r.decryptSessionKey=function(e){return i.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.t0=O,t.t1=JSON,t.next=4,i.awrap(this.exportSessionKey(e));case 4:return t.t2=t.sent,t.t3=t.t1.parse.call(t.t1,t.t2),t.abrupt(\"return\",(0,t.t0)(t.t3));case 7:case\"end\":return t.stop()}},null,this,null,Promise)},r.exportSessionKey=function(e){var t;return i.async(function(r){for(;;)switch(r.prev=r.next){case 0:return e=e.slice(12),e=l.decode(e),r.next=4,i.awrap(D(H.privateKey,e));case 4:return t=r.sent,r.abrupt(\"return\",K(t));case 6:case\"end\":return r.stop()}},null,null,null,Promise)},r.importGroupKey=function(e){var t,r;return i.async(function(n){for(;;)switch(n.prev=n.next){case 0:return this.log(\"Importing room key ->\",this.roomId),e=e.slice(12),e=l.decode(e),n.prev=3,n.next=6,i.awrap(D(H.privateKey,e));case 6:t=n.sent,this.sessionKeyExportedString=K(t),n.next=14;break;case 10:return n.prev=10,n.t0=n.catch(3),this.error(\"Error decrypting group key: \",n.t0),n.abrupt(\"return\",!1);case 14:if(this.keyID){n.next=21;break}if(n.t1=this.roomKeyId,n.t1){n.next=20;break}return n.next=19,i.awrap(M(this.sessionKeyExportedString));case 19:n.t1=n.sent.slice(0,12);case 20:this.keyID=n.t1;case 21:return n.prev=21,n.next=24,i.awrap(O(JSON.parse(this.sessionKeyExportedString)));case 24:r=n.sent,this.groupSessionKey=r,n.next=32;break;case 28:return n.prev=28,n.t2=n.catch(21),this.error(\"Error importing group key: \",n.t2),n.abrupt(\"return\",!1);case 32:return n.abrupt(\"return\",!0);case 33:case\"end\":return n.stop()}},null,this,[[3,10],[21,28]],Promise)},r.createNewGroupKey=function(){var e;return i.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,i.awrap(P());case 2:return this.groupSessionKey=t.sent,t.next=5,i.awrap(_(this.groupSessionKey));case 5:return e=t.sent,this.sessionKeyExportedString=JSON.stringify(e),t.next=9,i.awrap(M(this.sessionKeyExportedString));case 9:this.keyID=t.sent.slice(0,12);case 10:case\"end\":return t.stop()}},null,this,null,Promise)},r.createGroupKey=function(){return i.async(function(e){for(;;)switch(e.prev=e.next){case 0:return this.log(\"Creating room key\"),e.prev=1,e.next=4,i.awrap(this.createNewGroupKey());case 4:return e.next=6,i.awrap(b.call(\"e2e.setRoomKeyID\",this.roomId,this.keyID));case 6:return e.t0=i,e.t1=b.rest,e.t2=this.roomId,e.t3=this.userId,e.next=12,i.awrap(this.encryptGroupKeyForParticipant(H.publicKey));case 12:return e.t4=e.sent,e.t5={rid:e.t2,uid:e.t3,key:e.t4},e.t6=e.t1.post.call(e.t1,\"/v1/e2e.updateGroupKey\",e.t5),e.next=17,e.t0.awrap.call(e.t0,e.t6);case 17:return e.next=19,i.awrap(this.encryptKeyForOtherParticipants());case 19:e.next=25;break;case 21:throw e.prev=21,e.t7=e.catch(1),this.error(\"Error exporting group key: \",e.t7),e.t7;case 25:case\"end\":return e.stop()}},null,this,[[1,21]],Promise)},r.resetRoomKey=function(){var e;return i.async(function(t){for(;;)switch(t.prev=t.next){case 0:if(this.log(\"Resetting room key\"),H.publicKey){t.next=4;break}return this.error(\"Cannot reset room key. No public key found.\"),t.abrupt(\"return\");case 4:return this.setState(k.CREATING_KEYS),t.prev=5,t.next=8,i.awrap(this.createNewGroupKey());case 8:return t.t0=this.keyID,t.next=11,i.awrap(this.encryptGroupKeyForParticipant(H.publicKey));case 11:return t.t1=t.sent,e={e2eKeyId:t.t0,e2eKey:t.t1},this.setState(k.READY),this.log(\"Room key reset done for room \"+this.roomId),t.abrupt(\"return\",e);case 18:throw t.prev=18,t.t2=t.catch(5),this.error(\"Error resetting group key: \",t.t2),t.t2;case 22:case\"end\":return t.stop()}},null,this,[[5,18]],Promise)},r.onRoomKeyReset=function(e){this.log(\"Room keyID was reset. New keyID: \"+e+\" Previous keyID: \"+this.keyID),this.setState(k.WAITING_KEYS),this.keyID=e,this.groupSessionKey=void 0,this.sessionKeyExportedString=void 0,this.sessionKeyExported=void 0,this.oldKeys=void 0},r.encryptKeyForOtherParticipants=function(){var e,t,r,n,s,a,c,u,l,h,y,d,f,x;return i.async(function(v){for(;;)switch(v.prev=v.next){case 0:return v.prev=0,t=E.findOne({rid:this.roomId}),v.next=4,i.awrap(this.exportOldRoomKeys(null==t?void 0:t.oldRoomKeys));case 4:return r=v.sent,v.next=7,i.awrap(b.call(\"e2e.getUsersOfRoomWithoutKey\",this.roomId));case 7:if((n=v.sent.users.filter(function(e){var t;return null==e?void 0:null===(t=e.e2e)||void 0===t?void 0:t.public_key})).length){v.next=10;break}return v.abrupt(\"return\");case 10:(e={})[this.roomId]=[],s=e,a=!1,c=!1,v.prev=13,l=p(n);case 15:return v.next=17,i.awrap(l.next());case 17:if(!(a=!(h=v.sent).done)){v.next=29;break}return y=h.value,v.next=21,i.awrap(this.encryptGroupKeyForParticipant(y.e2e.public_key));case 21:return f=v.sent,v.next=24,i.awrap(this.encryptOldKeysForParticipant(null===(d=y.e2e)||void 0===d?void 0:d.public_key,r));case 24:x=v.sent,s[this.roomId].push(o({_id:y._id,key:f},x&&{oldKeys:x}));case 26:a=!1,v.next=15;break;case 29:v.next=35;break;case 31:v.prev=31,v.t0=v.catch(13),c=!0,u=v.t0;case 35:if(v.prev=35,v.prev=36,!(a&&null!=l.return)){v.next=40;break}return v.next=40,i.awrap(l.return());case 40:if(v.prev=40,!c){v.next=43;break}throw u;case 43:return v.finish(40);case 44:return v.finish(35);case 45:return v.next=47,i.awrap(b.rest.post(\"/v1/e2e.provideUsersSuggestedGroupKeys\",{usersSuggestedGroupKeys:s}));case 47:v.next=52;break;case 49:return v.prev=49,v.t1=v.catch(0),v.abrupt(\"return\",this.error(\"Error getting room users: \",v.t1));case 52:case\"end\":return v.stop()}},null,this,[[0,49],[13,31,35,45],[36,,40,44]],Promise)},r.encryptOldKeysForParticipant=function(e,t){var r,n,s,a,c,u,h,y,d,f;return i.async(function(x){for(;;)switch(x.prev=x.next){case 0:if(!(!t||0===t.length)){x.next=2;break}return x.abrupt(\"return\");case 2:return x.prev=2,x.next=5,i.awrap(C(JSON.parse(e),[\"encrypt\"]));case 5:r=x.sent,x.next=11;break;case 8:return x.prev=8,x.t0=x.catch(2),x.abrupt(\"return\",this.error(\"Error importing user key: \",x.t0));case 11:x.prev=11,n=[],s=!1,a=!1,x.prev=15,u=p(t);case 17:return x.next=19,i.awrap(u.next());case 19:if(!(s=!(h=x.sent).done)){x.next=31;break}if((y=h.value).E2EKey){x.next=23;break}return x.abrupt(\"continue\",28);case 23:return x.next=25,i.awrap(I(r,S(y.E2EKey)));case 25:d=x.sent,f=y.e2eKeyId+l.encode(new Uint8Array(d)),n.push(o(o({},y),{},{E2EKey:f}));case 28:s=!1,x.next=17;break;case 31:x.next=37;break;case 33:x.prev=33,x.t1=x.catch(15),a=!0,c=x.t1;case 37:if(x.prev=37,x.prev=38,!(s&&null!=u.return)){x.next=42;break}return x.next=42,i.awrap(u.return());case 42:if(x.prev=42,!a){x.next=45;break}throw c;case 45:return x.finish(42);case 46:return x.finish(37);case 47:return x.abrupt(\"return\",n);case 50:return x.prev=50,x.t2=x.catch(11),x.abrupt(\"return\",this.error(\"Error encrypting user key: \",x.t2));case 53:case\"end\":return x.stop()}},null,this,[[2,8],[11,50],[15,33,37,47],[38,,42,46]],Promise)},r.encryptGroupKeyForParticipant=function(e){var t,r,n;return i.async(function(s){for(;;)switch(s.prev=s.next){case 0:return s.prev=0,s.next=3,i.awrap(C(JSON.parse(e),[\"encrypt\"]));case 3:t=s.sent,s.next=9;break;case 6:return s.prev=6,s.t0=s.catch(0),s.abrupt(\"return\",this.error(\"Error importing user key: \",s.t0));case 9:return s.prev=9,s.next=12,i.awrap(I(t,S(this.sessionKeyExportedString)));case 12:return r=s.sent,n=this.keyID+l.encode(new Uint8Array(r)),s.abrupt(\"return\",n);case 17:return s.prev=17,s.t1=s.catch(9),s.abrupt(\"return\",this.error(\"Error encrypting user key: \",s.t1));case 20:case\"end\":return s.stop()}},null,this,[[0,6],[9,17]],Promise)},r.encryptFile=function(e){var t,r,n,s,a,o,c,u;return i.async(function(p){for(;;)switch(p.prev=p.next){case 0:return p.next=2,i.awrap(G(e));case 2:return t=p.sent,p.next=5,i.awrap(F(new Uint8Array(t)));case 5:return r=p.sent,n=crypto.getRandomValues(new Uint8Array(16)),p.next=9,i.awrap(Y());case 9:return s=p.sent,p.prev=10,p.next=13,i.awrap(N(n,s,t));case 13:a=p.sent,p.next=20;break;case 16:return p.prev=16,p.t0=p.catch(10),console.log(p.t0),p.abrupt(\"return\",this.error(\"Error encrypting group key: \",p.t0));case 20:return p.next=22,i.awrap(window.crypto.subtle.exportKey(\"jwk\",s));case 22:return o=p.sent,p.next=25,i.awrap(M(e.name));case 25:return c=p.sent,u=new File([S(a)],c),p.abrupt(\"return\",{file:u,key:o,iv:l.encode(n),type:e.type,hash:r});case 28:case\"end\":return p.stop()}},null,this,[[10,16]],Promise)},r.decryptFile=function(e,t,r){var n,s;return i.async(function(a){for(;;)switch(a.prev=a.next){case 0:return n=l.decode(r),a.next=3,i.awrap(window.crypto.subtle.importKey(\"jwk\",t,{name:\"AES-CTR\"},!0,[\"encrypt\",\"decrypt\"]));case 3:return s=a.sent,a.abrupt(\"return\",window.crypto.subtle.decrypt({name:\"AES-CTR\",counter:n,length:64},s,e));case 5:case\"end\":return a.stop()}},null,null,null,Promise)},r.encryptText=function(e){var t,r;return i.async(function(n){for(;;)switch(n.prev=n.next){case 0:return t=crypto.getRandomValues(new Uint8Array(16)),n.prev=1,n.next=4,i.awrap(A(t,this.groupSessionKey,e));case 4:return r=n.sent,n.abrupt(\"return\",this.keyID+l.encode(w(t,r)));case 8:throw n.prev=8,n.t0=n.catch(1),this.error(\"Error encrypting message: \",n.t0),n.t0;case 12:case\"end\":return n.stop()}},null,this,[[1,8]],Promise)},r.encryptMessageContent=function(e){var t;return i.async(function(r){for(;;)switch(r.prev=r.next){case 0:return t=new TextEncoder().encode(y.stringify(e)),r.next=3,i.awrap(this.encryptText(t));case 3:return r.t0=r.sent,r.abrupt(\"return\",{algorithm:\"rc.v1.aes-sha2\",ciphertext:r.t0});case 5:case\"end\":return r.stop()}},null,this,null,Promise)},r.encryptMessage=function(e){var t,r,n,s;return i.async(function(c){for(;;)switch(c.prev=c.next){case 0:return t=e.msg,r=e.attachments,n=a(e,W),c.next=3,i.awrap(this.encryptMessageContent({msg:t,attachments:r}));case 3:return s=c.sent,c.abrupt(\"return\",o(o({},n),{},{content:s,t:\"e2e\",e2e:\"pending\"}));case 5:case\"end\":return c.stop()}},null,this,null,Promise)},r.encrypt=function(e){if(this.isSupportedRoomType(this.typeOfRoom)){if(!this.groupSessionKey)throw Error(g(\"E2E_Invalid_Key\"));var t=new Date,r=new TextEncoder().encode(y.stringify({_id:e._id,text:e.msg,userId:this.userId,ts:t}));return this.encryptText(r)}},r.decryptContent=function(e){return i.async(function(t){for(;;)switch(t.prev=t.next){case 0:if(!(e.content&&\"rc.v1.aes-sha2\"===e.content.algorithm)){t.next=5;break}return t.next=3,i.awrap(this.decrypt(e.content.ciphertext));case 3:Object.assign(e,t.sent);case 5:return t.abrupt(\"return\",e);case 6:case\"end\":return t.stop()}},null,this,null,Promise)},r.decryptMessage=function(e){var t;return i.async(function(r){for(;;)switch(r.prev=r.next){case 0:if(!(\"e2e\"!==e.t||\"done\"===e.e2e)){r.next=2;break}return r.abrupt(\"return\",e);case 2:if(!e.msg){r.next=7;break}return r.next=5,i.awrap(this.decrypt(e.msg));case 5:null!=(t=r.sent)&&t.text&&(e.msg=t.text);case 7:return r.next=9,i.awrap(this.decryptContent(e));case 9:return e=r.sent,r.abrupt(\"return\",o(o({},e),{},{e2e:\"done\"}));case 11:case\"end\":return r.stop()}},null,this,null,Promise)},r.doDecrypt=function(e,t,r){var n;return i.async(function(s){for(;;)switch(s.prev=s.next){case 0:return s.next=2,i.awrap(T(e,t,r));case 2:return n=s.sent,s.abrupt(\"return\",y.parse(new TextDecoder(\"UTF-8\").decode(new Uint8Array(n))));case 4:case\"end\":return s.stop()}},null,null,null,Promise)},r.decrypt=function(e){var t,r,n,a,o,c,u,p;return i.async(function(h){for(;;)switch(h.prev=h.next){case 0:if(t=e.slice(0,12),e=e.slice(12),r=R(l.decode(e)),a=(n=s(r,2))[0],o=n[1],c=\"\",!(t!==this.keyID)){h.next=18;break}if(p=null===(u=this.oldKeys)||void 0===u?void 0:u.find(function(e){return e.e2eKeyId===t})){h.next=17;break}return h.prev=7,h.next=10,i.awrap(this.doDecrypt(a,this.groupSessionKey,o));case 10:return h.abrupt(\"return\",h.sent);case 13:return h.prev=13,h.t0=h.catch(7),this.error(\"Error decrypting message: \",h.t0,e),h.abrupt(\"return\",{msg:g(\"E2E_indecipherable\")});case 17:c=p.E2EKey;case 18:return h.prev=18,h.next=21,i.awrap(this.doDecrypt(a,c||this.groupSessionKey,o));case 21:return h.abrupt(\"return\",h.sent);case 24:return h.prev=24,h.t1=h.catch(18),this.error(\"Error decrypting message: \",h.t1,e),h.abrupt(\"return\",{msg:g(\"E2E_Key_Error\")});case 28:case\"end\":return h.stop()}},null,this,[[7,13],[18,24]],Promise)},r.provideKeyToUser=function(e){this.keyID===e&&(this.encryptKeyForOtherParticipants(),this.setState(k.READY))},r.onStateChange=function(e){var t=this;return this.on(\"STATE_CHANGED\",e),function(){return t.off(\"STATE_CHANGED\",e)}},r.encryptGroupKeyForParticipantsWaitingForTheKeys=function(e){var t,r,n,s=this;return i.async(function(a){for(;;)switch(a.prev=a.next){case 0:if(this.isReady()){a.next=2;break}return a.abrupt(\"return\");case 2:return t=E.findOne({rid:this.roomId}),a.next=5,i.awrap(this.exportOldRoomKeys(null==t?void 0:t.oldRoomKeys));case 5:return r=a.sent,a.next=8,i.awrap(Promise.all(e.map(function e(e){var t,n,a,c;return i.async(function u(u){for(;;)switch(u.prev=u.next){case 0:return t=e._id,n=e.public_key,u.next=3,i.awrap(s.encryptGroupKeyForParticipant(n));case 3:return a=u.sent,u.next=6,i.awrap(s.encryptOldKeysForParticipant(n,r));case 6:return c=u.sent,u.abrupt(\"return\",o({_id:t,key:a},c&&{oldKeys:c}));case 8:case\"end\":return u.stop()}},null,null,null,Promise)})));case 8:return n=a.sent,a.abrupt(\"return\",n);case 10:case\"end\":return a.stop()}},null,this,null,Promise)},c(t,[{key:\"keyID\",get:function(){return this[L]},set:function(e){this[L]=e}}])}(h)}","map":"{\"version\":3,\"sources\":[\"app/e2e/client/rocketchat.e2e.room.ts\",\"<anon>\"],\"sourcesContent\":[\"import { Base64 } from '@rocket.chat/base64';\\nimport { Emitter } from '@rocket.chat/emitter';\\nimport EJSON from 'ejson';\\n\\nimport { RoomManager } from '../../../client/lib/RoomManager';\\nimport { roomCoordinator } from '../../../client/lib/rooms/roomCoordinator';\\nimport { RoomSettingsEnum } from '../../../definition/IRoomTypeConfig';\\nimport { ChatRoom, Subscriptions, Messages } from '../../models/client';\\nimport { sdk } from '../../utils/client/lib/SDKClient';\\nimport { t } from '../../utils/lib/i18n';\\nimport { E2ERoomState } from './E2ERoomState';\\nimport {\\n\\ttoString,\\n\\ttoArrayBuffer,\\n\\tjoinVectorAndEcryptedData,\\n\\tsplitVectorAndEcryptedData,\\n\\tencryptRSA,\\n\\tencryptAES,\\n\\tdecryptRSA,\\n\\tdecryptAES,\\n\\tgenerateAESKey,\\n\\texportJWKKey,\\n\\timportAESKey,\\n\\timportRSAKey,\\n\\treadFileAsArrayBuffer,\\n\\tencryptAESCTR,\\n\\tgenerateAESCTRKey,\\n\\tsha256HashFromArrayBuffer,\\n\\tcreateSha256HashFromText,\\n} from './helper';\\nimport { log, logError } from './logger';\\nimport { e2e } from './rocketchat.e2e';\\n\\nconst KEY_ID = Symbol('keyID');\\nconst PAUSED = Symbol('PAUSED');\\n\\nconst permitedMutations: any = {\\n\\t[E2ERoomState.NOT_STARTED]: [E2ERoomState.ESTABLISHING, E2ERoomState.DISABLED, E2ERoomState.KEYS_RECEIVED],\\n\\t[E2ERoomState.READY]: [E2ERoomState.DISABLED, E2ERoomState.CREATING_KEYS, E2ERoomState.WAITING_KEYS],\\n\\t[E2ERoomState.ERROR]: [E2ERoomState.KEYS_RECEIVED, E2ERoomState.NOT_STARTED],\\n\\t[E2ERoomState.WAITING_KEYS]: [E2ERoomState.KEYS_RECEIVED, E2ERoomState.ERROR, E2ERoomState.DISABLED],\\n\\t[E2ERoomState.ESTABLISHING]: [\\n\\t\\tE2ERoomState.READY,\\n\\t\\tE2ERoomState.KEYS_RECEIVED,\\n\\t\\tE2ERoomState.ERROR,\\n\\t\\tE2ERoomState.DISABLED,\\n\\t\\tE2ERoomState.WAITING_KEYS,\\n\\t\\tE2ERoomState.CREATING_KEYS,\\n\\t],\\n};\\n\\nconst filterMutation = (currentState: any, nextState: any): any => {\\n\\tif (currentState === nextState) {\\n\\t\\treturn nextState === E2ERoomState.ERROR;\\n\\t}\\n\\n\\tif (!(currentState in permitedMutations)) {\\n\\t\\treturn nextState;\\n\\t}\\n\\n\\tif (permitedMutations[currentState].includes(nextState)) {\\n\\t\\treturn nextState;\\n\\t}\\n\\n\\treturn false;\\n};\\n\\nexport class E2ERoom extends Emitter {\\n\\tstate: any = undefined;\\n\\n\\t[PAUSED]: boolean | undefined = undefined;\\n\\n\\t[KEY_ID]: any;\\n\\n\\tuserId: any;\\n\\n\\troomId: any;\\n\\n\\ttypeOfRoom: any;\\n\\n\\troomKeyId: any;\\n\\n\\tgroupSessionKey: any;\\n\\n\\toldKeys: any;\\n\\n\\tsessionKeyExportedString: string | undefined;\\n\\n\\tsessionKeyExported: any;\\n\\n\\tconstructor(userId: any, room: any) {\\n\\t\\tsuper();\\n\\n\\t\\tthis.userId = userId;\\n\\t\\tthis.roomId = room._id;\\n\\t\\tthis.typeOfRoom = room.t;\\n\\t\\tthis.roomKeyId = room.e2eKeyId;\\n\\n\\t\\tthis.once(E2ERoomState.READY, async () => {\\n\\t\\t\\tawait this.decryptOldRoomKeys();\\n\\t\\t\\treturn this.decryptPendingMessages();\\n\\t\\t});\\n\\t\\tthis.once(E2ERoomState.READY, () => this.decryptSubscription());\\n\\t\\tthis.on('STATE_CHANGED', (prev) => {\\n\\t\\t\\tif (this.roomId === RoomManager.opened) {\\n\\t\\t\\t\\tthis.log(`[PREV: ${prev}]`, 'State CHANGED');\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\tthis.on('STATE_CHANGED', () => this.handshake());\\n\\n\\t\\tthis.setState(E2ERoomState.NOT_STARTED);\\n\\t}\\n\\n\\tlog(...msg: unknown[]) {\\n\\t\\tlog(`E2E ROOM { state: ${this.state}, rid: ${this.roomId} }`, ...msg);\\n\\t}\\n\\n\\terror(...msg: unknown[]) {\\n\\t\\tlogError(`E2E ROOM { state: ${this.state}, rid: ${this.roomId} }`, ...msg);\\n\\t}\\n\\n\\thasSessionKey() {\\n\\t\\treturn !!this.groupSessionKey;\\n\\t}\\n\\n\\tgetState() {\\n\\t\\treturn this.state;\\n\\t}\\n\\n\\tsetState(requestedState: any) {\\n\\t\\tconst currentState = this.state;\\n\\t\\tconst nextState = filterMutation(currentState, requestedState);\\n\\n\\t\\tif (!nextState) {\\n\\t\\t\\tthis.error(`invalid state ${currentState} -> ${requestedState}`);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.state = nextState;\\n\\t\\tthis.log(currentState, '->', nextState);\\n\\t\\tthis.emit('STATE_CHANGED', currentState);\\n\\t\\tthis.emit(nextState, this);\\n\\t}\\n\\n\\tisReady() {\\n\\t\\treturn this.state === E2ERoomState.READY;\\n\\t}\\n\\n\\tisDisabled() {\\n\\t\\treturn this.state === E2ERoomState.DISABLED;\\n\\t}\\n\\n\\tenable() {\\n\\t\\tif (this.state === E2ERoomState.READY) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.setState(E2ERoomState.READY);\\n\\t}\\n\\n\\tdisable() {\\n\\t\\tthis.setState(E2ERoomState.DISABLED);\\n\\t}\\n\\n\\tpause() {\\n\\t\\tthis.log('PAUSED', this[PAUSED], '->', true);\\n\\t\\tthis[PAUSED] = true;\\n\\t\\tthis.emit('PAUSED', true);\\n\\t}\\n\\n\\tresume() {\\n\\t\\tthis.log('PAUSED', this[PAUSED], '->', false);\\n\\t\\tthis[PAUSED] = false;\\n\\t\\tthis.emit('PAUSED', false);\\n\\t}\\n\\n\\tkeyReceived() {\\n\\t\\tthis.setState(E2ERoomState.KEYS_RECEIVED);\\n\\t}\\n\\n\\tasync shouldConvertSentMessages(message: any) {\\n\\t\\tif (!this.isReady() || this[PAUSED]) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tif (this[PAUSED] === undefined) {\\n\\t\\t\\treturn new Promise((resolve) => {\\n\\t\\t\\t\\tthis.once('PAUSED', resolve);\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tif (message.msg[0] === '/') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\tshouldConvertReceivedMessages() {\\n\\t\\treturn this.isReady();\\n\\t}\\n\\n\\tisWaitingKeys() {\\n\\t\\treturn this.state === E2ERoomState.WAITING_KEYS;\\n\\t}\\n\\n\\tget keyID() {\\n\\t\\treturn this[KEY_ID];\\n\\t}\\n\\n\\tset keyID(keyID) {\\n\\t\\tthis[KEY_ID] = keyID;\\n\\t}\\n\\n\\tasync decryptSubscription() {\\n\\t\\tconst subscription = Subscriptions.findOne({ rid: this.roomId });\\n\\n\\t\\tif (subscription?.lastMessage?.t !== 'e2e') {\\n\\t\\t\\tthis.log('decryptSubscriptions nothing to do');\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst message = await this.decryptMessage(subscription.lastMessage);\\n\\n\\t\\tSubscriptions.update(\\n\\t\\t\\t{\\n\\t\\t\\t\\t_id: subscription._id,\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t$set: {\\n\\t\\t\\t\\t\\tlastMessage: message,\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t);\\n\\t\\tthis.log('decryptSubscriptions Done');\\n\\t}\\n\\n\\tasync decryptOldRoomKeys() {\\n\\t\\tconst sub = Subscriptions.findOne({ rid: this.roomId });\\n\\n\\t\\tif (!sub?.oldRoomKeys || sub?.oldRoomKeys.length === 0) {\\n\\t\\t\\tthis.log('decryptOldRoomKeys nothing to do');\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst keys = [];\\n\\t\\tfor await (const key of sub.oldRoomKeys) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tconst k = await this.decryptSessionKey(key.E2EKey);\\n\\t\\t\\t\\tkeys.push({\\n\\t\\t\\t\\t\\t...key,\\n\\t\\t\\t\\t\\tE2EKey: k,\\n\\t\\t\\t\\t});\\n\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\tthis.error(\\n\\t\\t\\t\\t\\t`Cannot decrypt old room key with id ${key.e2eKeyId}. This is likely because user private key changed or is missing. Skipping`,\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\tkeys.push({ ...key, E2EKey: null });\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthis.oldKeys = keys;\\n\\t\\tthis.log('decryptOldRoomKeys Done');\\n\\t}\\n\\n\\tasync exportOldRoomKeys(oldKeys: any) {\\n\\t\\tthis.log('exportOldRoomKeys starting');\\n\\t\\tif (!oldKeys || oldKeys.length === 0) {\\n\\t\\t\\tthis.log('exportOldRoomKeys nothing to do');\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst keys = [];\\n\\t\\tfor await (const key of oldKeys) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif (!key.E2EKey) {\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tconst k = await this.exportSessionKey(key.E2EKey);\\n\\t\\t\\t\\tkeys.push({\\n\\t\\t\\t\\t\\t...key,\\n\\t\\t\\t\\t\\tE2EKey: k,\\n\\t\\t\\t\\t});\\n\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\tthis.error(\\n\\t\\t\\t\\t\\t`Cannot decrypt old room key with id ${key.e2eKeyId}. This is likely because user private key changed or is missing. Skipping`,\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthis.log(`exportOldRoomKeys Done: ${keys.length} keys exported`);\\n\\t\\treturn keys;\\n\\t}\\n\\n\\tasync decryptPendingMessages() {\\n\\t\\treturn Messages.find({ rid: this.roomId, t: 'e2e', e2e: 'pending' }).forEach(async ({ _id, ...msg }) => {\\n\\t\\t\\tMessages.update({ _id }, await this.decryptMessage(msg));\\n\\t\\t});\\n\\t}\\n\\n\\t// Initiates E2E Encryption\\n\\tasync handshake() {\\n\\t\\tif (!e2e.isReady()) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (this.state !== E2ERoomState.KEYS_RECEIVED && this.state !== E2ERoomState.NOT_STARTED) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.setState(E2ERoomState.ESTABLISHING);\\n\\n\\t\\ttry {\\n\\t\\t\\tconst groupKey = Subscriptions.findOne({ rid: this.roomId })?.E2EKey;\\n\\t\\t\\tif (groupKey) {\\n\\t\\t\\t\\tawait this.importGroupKey(groupKey);\\n\\t\\t\\t\\tthis.setState(E2ERoomState.READY);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.setState(E2ERoomState.ERROR);\\n\\t\\t\\tthis.error('Error fetching group key: ', error);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tconst room = ChatRoom.findOne({ _id: this.roomId })!;\\n\\t\\t\\t// Only room creator can set keys for room\\n\\t\\t\\tif (!room.e2eKeyId && this.userShouldCreateKeys(room)) {\\n\\t\\t\\t\\tthis.setState(E2ERoomState.CREATING_KEYS);\\n\\t\\t\\t\\tawait this.createGroupKey();\\n\\t\\t\\t\\tthis.setState(E2ERoomState.READY);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.setState(E2ERoomState.WAITING_KEYS);\\n\\t\\t\\tthis.log('Requesting room key');\\n\\t\\t\\tsdk.publish('notify-room-users', [`${this.roomId}/e2ekeyRequest`, this.roomId, room.e2eKeyId]);\\n\\t\\t} catch (error) {\\n\\t\\t\\t// this.error = error;\\n\\t\\t\\tthis.setState(E2ERoomState.ERROR);\\n\\t\\t}\\n\\t}\\n\\n\\tuserShouldCreateKeys(room: any) {\\n\\t\\t// On DMs, we'll allow any user to set the keys\\n\\t\\tif (room.t === 'd') {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn room.u._id === this.userId;\\n\\t}\\n\\n\\tisSupportedRoomType(type: any) {\\n\\t\\treturn roomCoordinator.getRoomDirectives(type).allowRoomSettingChange({}, RoomSettingsEnum.E2E);\\n\\t}\\n\\n\\tasync decryptSessionKey(key: any) {\\n\\t\\treturn importAESKey(JSON.parse(await this.exportSessionKey(key)));\\n\\t}\\n\\n\\tasync exportSessionKey(key: any) {\\n\\t\\tkey = key.slice(12);\\n\\t\\tkey = Base64.decode(key);\\n\\n\\t\\tconst decryptedKey = await decryptRSA(e2e.privateKey, key);\\n\\t\\treturn toString(decryptedKey);\\n\\t}\\n\\n\\tasync importGroupKey(groupKey: any) {\\n\\t\\tthis.log('Importing room key ->', this.roomId);\\n\\t\\t// Get existing group key\\n\\t\\t// const keyID = groupKey.slice(0, 12);\\n\\t\\tgroupKey = groupKey.slice(12);\\n\\t\\tgroupKey = Base64.decode(groupKey);\\n\\n\\t\\t// Decrypt obtained encrypted session key\\n\\t\\ttry {\\n\\t\\t\\tconst decryptedKey = await decryptRSA(e2e.privateKey, groupKey);\\n\\t\\t\\tthis.sessionKeyExportedString = toString(decryptedKey);\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.error('Error decrypting group key: ', error);\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// When a new e2e room is created, it will be initialized without an e2e key id\\n\\t\\t// This will prevent new rooms from storing `undefined` as the keyid\\n\\t\\tif (!this.keyID) {\\n\\t\\t\\tthis.keyID = this.roomKeyId || (await createSha256HashFromText(this.sessionKeyExportedString)).slice(0, 12);\\n\\t\\t}\\n\\n\\t\\t// Import session key for use.\\n\\t\\ttry {\\n\\t\\t\\tconst key = await importAESKey(JSON.parse(this.sessionKeyExportedString!));\\n\\t\\t\\t// Key has been obtained. E2E is now in session.\\n\\t\\t\\tthis.groupSessionKey = key;\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.error('Error importing group key: ', error);\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\tasync createNewGroupKey() {\\n\\t\\tthis.groupSessionKey = await generateAESKey();\\n\\n\\t\\tconst sessionKeyExported = await exportJWKKey(this.groupSessionKey);\\n\\t\\tthis.sessionKeyExportedString = JSON.stringify(sessionKeyExported);\\n\\t\\tthis.keyID = (await createSha256HashFromText(this.sessionKeyExportedString)).slice(0, 12);\\n\\t}\\n\\n\\tasync createGroupKey() {\\n\\t\\tthis.log('Creating room key');\\n\\t\\ttry {\\n\\t\\t\\tawait this.createNewGroupKey();\\n\\n\\t\\t\\tawait sdk.call('e2e.setRoomKeyID', this.roomId, this.keyID);\\n\\t\\t\\tawait sdk.rest.post('/v1/e2e.updateGroupKey', {\\n\\t\\t\\t\\trid: this.roomId,\\n\\t\\t\\t\\tuid: this.userId,\\n\\t\\t\\t\\tkey: await this.encryptGroupKeyForParticipant(e2e.publicKey!),\\n\\t\\t\\t} as any);\\n\\t\\t\\tawait this.encryptKeyForOtherParticipants();\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.error('Error exporting group key: ', error);\\n\\t\\t\\tthrow error;\\n\\t\\t}\\n\\t}\\n\\n\\tasync resetRoomKey() {\\n\\t\\tthis.log('Resetting room key');\\n\\t\\tif (!e2e.publicKey) {\\n\\t\\t\\tthis.error('Cannot reset room key. No public key found.');\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.setState(E2ERoomState.CREATING_KEYS);\\n\\t\\ttry {\\n\\t\\t\\tawait this.createNewGroupKey();\\n\\n\\t\\t\\tconst e2eNewKeys = { e2eKeyId: this.keyID, e2eKey: await this.encryptGroupKeyForParticipant(e2e.publicKey) };\\n\\n\\t\\t\\tthis.setState(E2ERoomState.READY);\\n\\t\\t\\tthis.log(`Room key reset done for room ${this.roomId}`);\\n\\n\\t\\t\\treturn e2eNewKeys;\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.error('Error resetting group key: ', error);\\n\\t\\t\\tthrow error;\\n\\t\\t}\\n\\t}\\n\\n\\tonRoomKeyReset(keyID: any) {\\n\\t\\tthis.log(`Room keyID was reset. New keyID: ${keyID} Previous keyID: ${this.keyID}`);\\n\\t\\tthis.setState(E2ERoomState.WAITING_KEYS);\\n\\t\\tthis.keyID = keyID;\\n\\t\\tthis.groupSessionKey = undefined;\\n\\t\\tthis.sessionKeyExportedString = undefined;\\n\\t\\tthis.sessionKeyExported = undefined;\\n\\t\\tthis.oldKeys = undefined;\\n\\t}\\n\\n\\tasync encryptKeyForOtherParticipants() {\\n\\t\\t// Encrypt generated session key for every user in room and publish to subscription model.\\n\\t\\ttry {\\n\\t\\t\\tconst mySub = Subscriptions.findOne({ rid: this.roomId });\\n\\t\\t\\tconst decryptedOldGroupKeys = await this.exportOldRoomKeys(mySub?.oldRoomKeys);\\n\\t\\t\\tconst users = (await sdk.call('e2e.getUsersOfRoomWithoutKey', this.roomId)).users.filter((user) => user?.e2e?.public_key);\\n\\n\\t\\t\\tif (!users.length) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst usersSuggestedGroupKeys = { [this.roomId]: [] as any[] };\\n\\t\\t\\tfor await (const user of users) {\\n\\t\\t\\t\\tconst encryptedGroupKey = await this.encryptGroupKeyForParticipant(user.e2e!.public_key!);\\n\\t\\t\\t\\tconst oldKeys = await this.encryptOldKeysForParticipant(user.e2e?.public_key, decryptedOldGroupKeys);\\n\\n\\t\\t\\t\\tusersSuggestedGroupKeys[this.roomId].push({ _id: user._id, key: encryptedGroupKey, ...(oldKeys && { oldKeys }) });\\n\\t\\t\\t}\\n\\n\\t\\t\\tawait sdk.rest.post('/v1/e2e.provideUsersSuggestedGroupKeys', { usersSuggestedGroupKeys });\\n\\t\\t} catch (error) {\\n\\t\\t\\treturn this.error('Error getting room users: ', error);\\n\\t\\t}\\n\\t}\\n\\n\\tasync encryptOldKeysForParticipant(publicKey: any, oldRoomKeys: any) {\\n\\t\\tif (!oldRoomKeys || oldRoomKeys.length === 0) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tlet userKey;\\n\\n\\t\\ttry {\\n\\t\\t\\tuserKey = await importRSAKey(JSON.parse(publicKey), ['encrypt']);\\n\\t\\t} catch (error) {\\n\\t\\t\\treturn this.error('Error importing user key: ', error);\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tconst keys = [];\\n\\t\\t\\tfor await (const oldRoomKey of oldRoomKeys) {\\n\\t\\t\\t\\tif (!oldRoomKey.E2EKey) {\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tconst encryptedKey = await encryptRSA(userKey, toArrayBuffer(oldRoomKey.E2EKey));\\n\\t\\t\\t\\tconst encryptedKeyToString = oldRoomKey.e2eKeyId + Base64.encode(new Uint8Array(encryptedKey));\\n\\n\\t\\t\\t\\tkeys.push({ ...oldRoomKey, E2EKey: encryptedKeyToString });\\n\\t\\t\\t}\\n\\t\\t\\treturn keys;\\n\\t\\t} catch (error) {\\n\\t\\t\\treturn this.error('Error encrypting user key: ', error);\\n\\t\\t}\\n\\t}\\n\\n\\tasync encryptGroupKeyForParticipant(publicKey: string) {\\n\\t\\tlet userKey;\\n\\t\\ttry {\\n\\t\\t\\tuserKey = await importRSAKey(JSON.parse(publicKey), ['encrypt']);\\n\\t\\t} catch (error) {\\n\\t\\t\\treturn this.error('Error importing user key: ', error);\\n\\t\\t}\\n\\t\\t// const vector = crypto.getRandomValues(new Uint8Array(16));\\n\\n\\t\\t// Encrypt session key for this user with his/her public key\\n\\t\\ttry {\\n\\t\\t\\tconst encryptedUserKey = await encryptRSA(userKey, toArrayBuffer(this.sessionKeyExportedString));\\n\\t\\t\\tconst encryptedUserKeyToString = this.keyID + Base64.encode(new Uint8Array(encryptedUserKey));\\n\\t\\t\\treturn encryptedUserKeyToString;\\n\\t\\t} catch (error) {\\n\\t\\t\\treturn this.error('Error encrypting user key: ', error);\\n\\t\\t}\\n\\t}\\n\\n\\t// Encrypts files before upload. I/O is in arraybuffers.\\n\\tasync encryptFile(file: any) {\\n\\t\\t// if (!this.isSupportedRoomType(this.typeOfRoom)) {\\n\\t\\t// \\treturn;\\n\\t\\t// }\\n\\n\\t\\tconst fileArrayBuffer = await readFileAsArrayBuffer(file);\\n\\n\\t\\tconst hash = await sha256HashFromArrayBuffer(new Uint8Array(fileArrayBuffer));\\n\\n\\t\\tconst vector = crypto.getRandomValues(new Uint8Array(16));\\n\\t\\tconst key = await generateAESCTRKey();\\n\\t\\tlet result;\\n\\t\\ttry {\\n\\t\\t\\tresult = await encryptAESCTR(vector, key, fileArrayBuffer);\\n\\t\\t} catch (error) {\\n\\t\\t\\tconsole.log(error);\\n\\t\\t\\treturn this.error('Error encrypting group key: ', error);\\n\\t\\t}\\n\\n\\t\\tconst exportedKey = await window.crypto.subtle.exportKey('jwk', key);\\n\\n\\t\\tconst fileName = await createSha256HashFromText(file.name);\\n\\n\\t\\tconst encryptedFile = new File([toArrayBuffer(result)], fileName);\\n\\n\\t\\treturn {\\n\\t\\t\\tfile: encryptedFile,\\n\\t\\t\\tkey: exportedKey,\\n\\t\\t\\tiv: Base64.encode(vector),\\n\\t\\t\\ttype: file.type,\\n\\t\\t\\thash,\\n\\t\\t};\\n\\t}\\n\\n\\t// Decrypt uploaded encrypted files. I/O is in arraybuffers.\\n\\tasync decryptFile(file: any, key: any, iv: any) {\\n\\t\\tconst ivArray = Base64.decode(iv);\\n\\t\\tconst cryptoKey = await window.crypto.subtle.importKey('jwk', key, { name: 'AES-CTR' }, true, ['encrypt', 'decrypt']);\\n\\n\\t\\treturn window.crypto.subtle.decrypt({ name: 'AES-CTR', counter: ivArray, length: 64 }, cryptoKey, file);\\n\\t}\\n\\n\\t// Encrypts messages\\n\\tasync encryptText(data: any) {\\n\\t\\tconst vector = crypto.getRandomValues(new Uint8Array(16));\\n\\n\\t\\ttry {\\n\\t\\t\\tconst result = await encryptAES(vector, this.groupSessionKey, data);\\n\\t\\t\\treturn this.keyID + Base64.encode(joinVectorAndEcryptedData(vector, result));\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.error('Error encrypting message: ', error);\\n\\t\\t\\tthrow error;\\n\\t\\t}\\n\\t}\\n\\n\\t// Helper function for encryption of content\\n\\tasync encryptMessageContent(contentToBeEncrypted: any) {\\n\\t\\tconst data = new TextEncoder().encode(EJSON.stringify(contentToBeEncrypted));\\n\\n\\t\\treturn {\\n\\t\\t\\talgorithm: 'rc.v1.aes-sha2',\\n\\t\\t\\tciphertext: await this.encryptText(data),\\n\\t\\t};\\n\\t}\\n\\n\\t// Helper function for encryption of content\\n\\tasync encryptMessage(message: any) {\\n\\t\\tconst { msg, attachments, ...rest } = message;\\n\\n\\t\\tconst content = await this.encryptMessageContent({ msg, attachments });\\n\\n\\t\\treturn {\\n\\t\\t\\t...rest,\\n\\t\\t\\tcontent,\\n\\t\\t\\tt: 'e2e',\\n\\t\\t\\te2e: 'pending',\\n\\t\\t};\\n\\t}\\n\\n\\t// Helper function for encryption of messages\\n\\tencrypt(message: any) {\\n\\t\\tif (!this.isSupportedRoomType(this.typeOfRoom)) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (!this.groupSessionKey) {\\n\\t\\t\\tthrow new Error(t('E2E_Invalid_Key'));\\n\\t\\t}\\n\\n\\t\\tconst ts = new Date();\\n\\n\\t\\tconst data = new TextEncoder().encode(\\n\\t\\t\\tEJSON.stringify({\\n\\t\\t\\t\\t_id: message._id,\\n\\t\\t\\t\\ttext: message.msg,\\n\\t\\t\\t\\tuserId: this.userId,\\n\\t\\t\\t\\tts,\\n\\t\\t\\t}),\\n\\t\\t);\\n\\n\\t\\treturn this.encryptText(data);\\n\\t}\\n\\n\\tasync decryptContent(data: any) {\\n\\t\\tif (data.content && data.content.algorithm === 'rc.v1.aes-sha2') {\\n\\t\\t\\tconst content = await this.decrypt(data.content.ciphertext);\\n\\t\\t\\tObject.assign(data, content);\\n\\t\\t}\\n\\n\\t\\treturn data;\\n\\t}\\n\\n\\t// Decrypt messages\\n\\tasync decryptMessage(message: any) {\\n\\t\\tif (message.t !== 'e2e' || message.e2e === 'done') {\\n\\t\\t\\treturn message;\\n\\t\\t}\\n\\n\\t\\tif (message.msg) {\\n\\t\\t\\tconst data = await this.decrypt(message.msg);\\n\\n\\t\\t\\tif (data?.text) {\\n\\t\\t\\t\\tmessage.msg = data.text;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tmessage = await this.decryptContent(message);\\n\\n\\t\\treturn {\\n\\t\\t\\t...message,\\n\\t\\t\\te2e: 'done',\\n\\t\\t};\\n\\t}\\n\\n\\tasync doDecrypt(vector: any, key: any, cipherText: any) {\\n\\t\\tconst result = await decryptAES(vector, key, cipherText);\\n\\t\\treturn EJSON.parse(new TextDecoder('UTF-8').decode(new Uint8Array(result)));\\n\\t}\\n\\n\\tasync decrypt(message: any) {\\n\\t\\tconst keyID = message.slice(0, 12);\\n\\t\\tmessage = message.slice(12);\\n\\n\\t\\tconst [vector, cipherText] = splitVectorAndEcryptedData(Base64.decode(message));\\n\\n\\t\\tlet oldKey = '';\\n\\t\\tif (keyID !== this.keyID) {\\n\\t\\t\\tconst oldRoomKey = this.oldKeys?.find((key: any) => key.e2eKeyId === keyID);\\n\\t\\t\\t// Messages already contain a keyID stored with them\\n\\t\\t\\t// That means that if we cannot find a keyID for the key the message has preppended to\\n\\t\\t\\t// The message is indecipherable.\\n\\t\\t\\t// In these cases, we'll give a last shot using the current session key, which may not work\\n\\t\\t\\t// but will be enough to help with some mobile issues.\\n\\t\\t\\tif (!oldRoomKey) {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\treturn await this.doDecrypt(vector, this.groupSessionKey, cipherText);\\n\\t\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\t\\tthis.error('Error decrypting message: ', error, message);\\n\\t\\t\\t\\t\\treturn { msg: t('E2E_indecipherable') };\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\toldKey = oldRoomKey.E2EKey;\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\treturn await this.doDecrypt(vector, oldKey || this.groupSessionKey, cipherText);\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.error('Error decrypting message: ', error, message);\\n\\t\\t\\treturn { msg: t('E2E_Key_Error') };\\n\\t\\t}\\n\\t}\\n\\n\\tprovideKeyToUser(keyId: any) {\\n\\t\\tif (this.keyID !== keyId) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tvoid this.encryptKeyForOtherParticipants();\\n\\t\\tthis.setState(E2ERoomState.READY);\\n\\t}\\n\\n\\tonStateChange(cb: any) {\\n\\t\\tthis.on('STATE_CHANGED', cb);\\n\\t\\treturn () => this.off('STATE_CHANGED', cb);\\n\\t}\\n\\n\\tasync encryptGroupKeyForParticipantsWaitingForTheKeys(users: any[]) {\\n\\t\\tif (!this.isReady()) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst mySub = Subscriptions.findOne({ rid: this.roomId });\\n\\t\\tconst decryptedOldGroupKeys = await this.exportOldRoomKeys(mySub?.oldRoomKeys);\\n\\t\\tconst usersWithKeys = await Promise.all(\\n\\t\\t\\tusers.map(async (user) => {\\n\\t\\t\\t\\tconst { _id, public_key } = user;\\n\\t\\t\\t\\tconst key = await this.encryptGroupKeyForParticipant(public_key);\\n\\t\\t\\t\\tconst oldKeys = await this.encryptOldKeysForParticipant(public_key, decryptedOldGroupKeys);\\n\\t\\t\\t\\treturn { _id, key, ...(oldKeys && { oldKeys }) };\\n\\t\\t\\t}),\\n\\t\\t);\\n\\n\\t\\treturn usersWithKeys;\\n\\t}\\n}\\n\",null],\"names\":[\"_slicedToArray\",\"_objectWithoutProperties\",\"_regeneratorRuntime\",\"_objectSpread\",\"_createClass\",\"_inheritsLoose\",\"_asyncIterator\",\"Base64\",\"Emitter\",\"EJSON\",\"RoomManager\",\"roomCoordinator\",\"RoomSettingsEnum\",\"ChatRoom\",\"Subscriptions\",\"Messages\",\"sdk\",\"t\",\"E2ERoomState\",\"toString\",\"toArrayBuffer\",\"joinVectorAndEcryptedData\",\"splitVectorAndEcryptedData\",\"encryptRSA\",\"encryptAES\",\"decryptRSA\",\"decryptAES\",\"generateAESKey\",\"exportJWKKey\",\"importAESKey\",\"importRSAKey\",\"readFileAsArrayBuffer\",\"encryptAESCTR\",\"generateAESCTRKey\",\"sha256HashFromArrayBuffer\",\"createSha256HashFromText\",\"log\",\"logError\",\"e2e\",\"module\",\"link\",\"default\",\"v\",\"export\",\"E2ERoom\",\"KEY_ID\",\"Symbol\",\"PAUSED\",\"permitedMutations\",\"_permitedMutations\",\"NOT_STARTED\",\"ESTABLISHING\",\"DISABLED\",\"KEYS_RECEIVED\",\"READY\",\"CREATING_KEYS\",\"WAITING_KEYS\",\"ERROR\",\"_Emitter\",\"userId\",\"room\",\"_this\",\"call\",\"state\",\"undefined\",\"roomId\",\"typeOfRoom\",\"roomKeyId\",\"groupSessionKey\",\"oldKeys\",\"sessionKeyExportedString\",\"sessionKeyExported\",\"_id\",\"e2eKeyId\",\"once\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"decryptOldRoomKeys\",\"abrupt\",\"decryptPendingMessages\",\"stop\",\"Promise\",\"decryptSubscription\",\"on\",\"opened\",\"handshake\",\"setState\",\"_proto\",\"prototype\",\"_len\",\"arguments\",\"length\",\"msg\",\"Array\",\"_key\",\"apply\",\"concat\",\"error\",\"_len2\",\"_key2\",\"hasSessionKey\",\"getState\",\"requestedState\",\"currentState\",\"nextState\",\"includes\",\"emit\",\"isReady\",\"isDisabled\",\"enable\",\"disable\",\"pause\",\"resume\",\"keyReceived\",\"shouldConvertSentMessages\",\"message\",\"_this2\",\"_context2\",\"resolve\",\"shouldConvertReceivedMessages\",\"isWaitingKeys\",\"_subscription$lastMes\",\"subscription\",\"_context3\",\"findOne\",\"rid\",\"lastMessage\",\"decryptMessage\",\"sent\",\"update\",\"$set\",\"sub\",\"keys\",\"_iteratorAbruptCompletion\",\"_didIteratorError\",\"_iteratorError\",\"_iterator\",\"_step\",\"key\",\"k\",\"_context4\",\"oldRoomKeys\",\"done\",\"value\",\"decryptSessionKey\",\"E2EKey\",\"push\",\"t0\",\"t1\",\"return\",\"finish\",\"exportOldRoomKeys\",\"_iteratorAbruptCompletion2\",\"_didIteratorError2\",\"_iteratorError2\",\"_iterator2\",\"_step2\",\"_context5\",\"exportSessionKey\",\"_this3\",\"_context7\",\"find\",\"forEach\",\"_callee2\",\"_ref\",\"_callee2$\",\"_context6\",\"_excluded\",\"t2\",\"_Subscriptions$findOn\",\"groupKey\",\"_context8\",\"importGroupKey\",\"userShouldCreateKeys\",\"createGroupKey\",\"publish\",\"u\",\"isSupportedRoomType\",\"type\",\"getRoomDirectives\",\"allowRoomSettingChange\",\"E2E\",\"_context9\",\"JSON\",\"t3\",\"parse\",\"decryptedKey\",\"_context10\",\"slice\",\"decode\",\"privateKey\",\"_context11\",\"keyID\",\"createNewGroupKey\",\"_context12\",\"stringify\",\"_context13\",\"rest\",\"encryptGroupKeyForParticipant\",\"publicKey\",\"t4\",\"t5\",\"uid\",\"t6\",\"post\",\"encryptKeyForOtherParticipants\",\"t7\",\"resetRoomKey\",\"e2eNewKeys\",\"_context14\",\"e2eKey\",\"onRoomKeyReset\",\"_usersSuggestedGroupK\",\"mySub\",\"decryptedOldGroupKeys\",\"users\",\"usersSuggestedGroupKeys\",\"_iteratorAbruptCompletion3\",\"_didIteratorError3\",\"_iteratorError3\",\"_iterator3\",\"_step3\",\"user\",\"_user$e2e2\",\"encryptedGroupKey\",\"_context15\",\"filter\",\"_user$e2e\",\"public_key\",\"encryptOldKeysForParticipant\",\"userKey\",\"_iteratorAbruptCompletion4\",\"_didIteratorError4\",\"_iteratorError4\",\"_iterator4\",\"_step4\",\"oldRoomKey\",\"encryptedKey\",\"encryptedKeyToString\",\"_context16\",\"encode\",\"Uint8Array\",\"encryptedUserKey\",\"encryptedUserKeyToString\",\"_context17\",\"encryptFile\",\"file\",\"fileArrayBuffer\",\"hash\",\"vector\",\"result\",\"exportedKey\",\"fileName\",\"encryptedFile\",\"_context18\",\"crypto\",\"getRandomValues\",\"console\",\"window\",\"subtle\",\"exportKey\",\"name\",\"File\",\"iv\",\"decryptFile\",\"ivArray\",\"cryptoKey\",\"_context19\",\"importKey\",\"decrypt\",\"counter\",\"encryptText\",\"data\",\"_context20\",\"encryptMessageContent\",\"contentToBeEncrypted\",\"_context21\",\"TextEncoder\",\"algorithm\",\"ciphertext\",\"encryptMessage\",\"attachments\",\"content\",\"_context22\",\"_excluded2\",\"encrypt\",\"Error\",\"ts\",\"Date\",\"text\",\"decryptContent\",\"_context23\",\"Object\",\"assign\",\"_context24\",\"doDecrypt\",\"cipherText\",\"_context25\",\"TextDecoder\",\"_splitVectorAndEcrypt\",\"_splitVectorAndEcrypt2\",\"oldKey\",\"_this$oldKeys\",\"_context26\",\"provideKeyToUser\",\"keyId\",\"onStateChange\",\"cb\",\"_this4\",\"off\",\"encryptGroupKeyForParticipantsWaitingForTheKeys\",\"usersWithKeys\",\"_this5\",\"_context28\",\"all\",\"map\",\"_callee3\",\"_callee3$\",\"_context27\",\"get\",\"set\"],\"mappings\":\"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\"}"}