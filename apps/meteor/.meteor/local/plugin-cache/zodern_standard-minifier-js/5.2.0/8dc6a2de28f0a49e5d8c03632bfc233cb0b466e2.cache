{"code":"function module(e,t,r){let n,i,o,l,s,a,u,c,d,b,f,p,k;let g=[\"_id\"],h=[\"_id\"];r.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){n=e}},0),r.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default(e){i=e}},1),r.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){o=e}},0),r.link(\"@rocket.chat/ui-contexts\",{useSettings(e){l=e}},1),r.link(\"meteor/mongo\",{Mongo(e){s=e}},2),r.link(\"meteor/tracker\",{Tracker(e){a=e}},3),r.link(\"react\",{default(e){u=e},useEffect(e){c=e},useMemo(e){d=e},useRef(e){b=e}},4),r.link(\"../../../hooks/useIsEnterprise\",{useIsEnterprise(e){f=e}},5),r.link(\"../../../lib/createReactiveSubscriptionFactory\",{createReactiveSubscriptionFactory(e){p=e}},6),r.link(\"../EditableSettingsContext\",{EditableSettingsContext(e){k=e}},7);let m={};r.exportDefault(e=>{var t;let{children:r,query:v=m}=e,$=b(null),y=l(v),S=o(()=>($.current||($.current=new s.Collection(null)),$.current));c(()=>{let e=S();for(let t of(e.remove({_id:{$nin:y.map(e=>{let{_id:t}=e;return t})}}),y)){let{_id:r}=t,o=i(t,g);e.upsert(r,{$set:n({},o),$unset:{changed:!0}})}},[S,y]);let x=d(()=>{let e=(e,t)=>{if(!e)return!0;let r=[].concat(\"string\"==typeof e?JSON.parse(e):e);return r.every(e=>t.find(e).count()>0)};return p(t=>{let r=S(),i=r.findOne(t);if(i)return n(n({},i),{},{disabled:i.blocked||!e(i.enableQuery,r),invisible:!e(i.displayQuery,r)})})},[S]),E=d(()=>p(function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return S().find(n(n(n(n({},\"_id\"in e&&{_id:{$in:e._id}}),\"group\"in e&&{group:e.group}),\"changed\"in e&&{changed:e.changed}),{},{$and:[n({},\"section\"in e&&(e.section?{section:e.section}:{$or:[{section:{$exists:!1}},{section:\"\"}]})),n({},\"tab\"in e&&(e.tab?{tab:e.tab}:{$or:[{tab:{$exists:!1}},{tab:\"\"}]}))]}),{sort:{section:1,sorter:1,i18nLabel:1}}).fetch()}),[S]),_=d(()=>p((e,t)=>Array.from(new Set(S().find(n({group:e},void 0!==t?{tab:t}:{$or:[{tab:{$exists:!1}},{tab:\"\"}]}),{fields:{section:1},sort:{sorter:1,section:1,i18nLabel:1}}).fetch().map(e=>{let{section:t}=e;return t||\"\"})))),[S]),C=d(()=>p(e=>Array.from(new Set(S().find({group:e},{fields:{tab:1},sort:{sorter:1,tab:1,i18nLabel:1}}).fetch().map(e=>{let{tab:t}=e;return t||\"\"})))),[S]),w=o(e=>{for(let t of e){let{_id:e}=t,r=i(t,h);e&&S().update(e,{$set:r})}a.flush()}),{data:L}=f(),M=null!==(t=null==L?void 0:L.isEnterprise)&&void 0!==t&&t,R=d(()=>({queryEditableSetting:x,queryEditableSettings:E,queryGroupSections:_,queryGroupTabs:C,dispatch:w,isEnterprise:M}),[x,E,_,C,w,M]);return u.createElement(k.Provider,{children:r,value:R})})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/settings/EditableSettingsProvider.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { SettingId, GroupId, ISetting, TabId } from '@rocket.chat/core-typings';\\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport type { SettingsContextQuery } from '@rocket.chat/ui-contexts';\\nimport { useSettings } from '@rocket.chat/ui-contexts';\\nimport { Mongo } from 'meteor/mongo';\\nimport { Tracker } from 'meteor/tracker';\\nimport type { FilterOperators } from 'mongodb';\\nimport type { MutableRefObject, ReactNode } from 'react';\\nimport React, { useEffect, useMemo, useRef } from 'react';\\n\\nimport { useIsEnterprise } from '../../../hooks/useIsEnterprise';\\nimport { createReactiveSubscriptionFactory } from '../../../lib/createReactiveSubscriptionFactory';\\nimport type { EditableSetting, EditableSettingsContextValue } from '../EditableSettingsContext';\\nimport { EditableSettingsContext } from '../EditableSettingsContext';\\n\\nconst defaultQuery: SettingsContextQuery = {};\\n\\ntype EditableSettingsProviderProps = {\\n\\tchildren?: ReactNode;\\n\\tquery?: SettingsContextQuery;\\n};\\n\\nconst EditableSettingsProvider = ({ children, query = defaultQuery }: EditableSettingsProviderProps) => {\\n\\tconst settingsCollectionRef = useRef<Mongo.Collection<EditableSetting>>(null) as MutableRefObject<Mongo.Collection<EditableSetting>>;\\n\\tconst persistedSettings = useSettings(query);\\n\\n\\tconst getSettingsCollection = useMutableCallback(() => {\\n\\t\\tif (!settingsCollectionRef.current) {\\n\\t\\t\\tsettingsCollectionRef.current = new Mongo.Collection<any>(null);\\n\\t\\t}\\n\\n\\t\\treturn settingsCollectionRef.current;\\n\\t}) as () => Mongo.Collection<EditableSetting>;\\n\\n\\tuseEffect(() => {\\n\\t\\tconst settingsCollection = getSettingsCollection();\\n\\n\\t\\tsettingsCollection.remove({ _id: { $nin: persistedSettings.map(({ _id }) => _id) } });\\n\\t\\tfor (const { _id, ...fields } of persistedSettings) {\\n\\t\\t\\tsettingsCollection.upsert(_id, { $set: { ...fields }, $unset: { changed: true } });\\n\\t\\t}\\n\\t}, [getSettingsCollection, persistedSettings]);\\n\\n\\tconst queryEditableSetting = useMemo(() => {\\n\\t\\tconst validateSettingQueries = (\\n\\t\\t\\tquery: undefined | string | FilterOperators<ISetting> | FilterOperators<ISetting>[],\\n\\t\\t\\tsettingsCollection: Mongo.Collection<EditableSetting>,\\n\\t\\t): boolean => {\\n\\t\\t\\tif (!query) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst queries = [].concat(typeof query === 'string' ? JSON.parse(query) : query);\\n\\t\\t\\treturn queries.every((query) => settingsCollection.find(query).count() > 0);\\n\\t\\t};\\n\\n\\t\\treturn createReactiveSubscriptionFactory((_id: SettingId): EditableSetting | undefined => {\\n\\t\\t\\tconst settingsCollection = getSettingsCollection();\\n\\t\\t\\tconst editableSetting = settingsCollection.findOne(_id);\\n\\n\\t\\t\\tif (!editableSetting) {\\n\\t\\t\\t\\treturn undefined;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\t...editableSetting,\\n\\t\\t\\t\\tdisabled: editableSetting.blocked || !validateSettingQueries(editableSetting.enableQuery, settingsCollection),\\n\\t\\t\\t\\tinvisible: !validateSettingQueries(editableSetting.displayQuery, settingsCollection),\\n\\t\\t\\t};\\n\\t\\t});\\n\\t}, [getSettingsCollection]);\\n\\n\\tconst queryEditableSettings = useMemo(\\n\\t\\t() =>\\n\\t\\t\\tcreateReactiveSubscriptionFactory((query = {}) =>\\n\\t\\t\\t\\tgetSettingsCollection()\\n\\t\\t\\t\\t\\t.find(\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t...('_id' in query && { _id: { $in: query._id } }),\\n\\t\\t\\t\\t\\t\\t\\t...('group' in query && { group: query.group }),\\n\\t\\t\\t\\t\\t\\t\\t...('changed' in query && { changed: query.changed }),\\n\\t\\t\\t\\t\\t\\t\\t$and: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t...('section' in query &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(query.section\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t? { section: query.section }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t$or: [{ section: { $exists: false } }, { section: '' }],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  })),\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t...('tab' in query &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(query.tab\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t? { tab: query.tab }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t$or: [{ tab: { $exists: false } }, { tab: '' }],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  })),\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t],\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tsort: {\\n\\t\\t\\t\\t\\t\\t\\t\\tsection: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\tsorter: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\ti18nLabel: 1,\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t.fetch(),\\n\\t\\t\\t),\\n\\t\\t[getSettingsCollection],\\n\\t);\\n\\n\\tconst queryGroupSections = useMemo(\\n\\t\\t() =>\\n\\t\\t\\tcreateReactiveSubscriptionFactory((_id: GroupId, tab?: TabId) =>\\n\\t\\t\\t\\tArray.from(\\n\\t\\t\\t\\t\\tnew Set(\\n\\t\\t\\t\\t\\t\\tgetSettingsCollection()\\n\\t\\t\\t\\t\\t\\t\\t.find(\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tgroup: _id,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t...(tab !== undefined\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t? { tab }\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t$or: [{ tab: { $exists: false } }, { tab: '' }],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  }),\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfields: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsection: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsort: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsorter: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsection: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ti18nLabel: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t\\t.fetch()\\n\\t\\t\\t\\t\\t\\t\\t.map(({ section }) => section || ''),\\n\\t\\t\\t\\t\\t),\\n\\t\\t\\t\\t),\\n\\t\\t\\t),\\n\\t\\t[getSettingsCollection],\\n\\t);\\n\\n\\tconst queryGroupTabs = useMemo(\\n\\t\\t() =>\\n\\t\\t\\tcreateReactiveSubscriptionFactory((_id: GroupId) =>\\n\\t\\t\\t\\tArray.from(\\n\\t\\t\\t\\t\\tnew Set(\\n\\t\\t\\t\\t\\t\\tgetSettingsCollection()\\n\\t\\t\\t\\t\\t\\t\\t.find(\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tgroup: _id,\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfields: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttab: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsort: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsorter: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttab: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ti18nLabel: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t\\t.fetch()\\n\\t\\t\\t\\t\\t\\t\\t.map(({ tab }) => tab || ''),\\n\\t\\t\\t\\t\\t),\\n\\t\\t\\t\\t),\\n\\t\\t\\t),\\n\\t\\t[getSettingsCollection],\\n\\t);\\n\\n\\tconst dispatch = useMutableCallback((changes: Partial<EditableSetting>[]): void => {\\n\\t\\tfor (const { _id, ...data } of changes) {\\n\\t\\t\\tif (!_id) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tgetSettingsCollection().update(_id, { $set: data });\\n\\t\\t}\\n\\t\\tTracker.flush();\\n\\t});\\n\\n\\tconst { data } = useIsEnterprise();\\n\\n\\tconst isEnterprise = data?.isEnterprise ?? false;\\n\\n\\tconst contextValue = useMemo<EditableSettingsContextValue>(\\n\\t\\t() => ({\\n\\t\\t\\tqueryEditableSetting,\\n\\t\\t\\tqueryEditableSettings,\\n\\t\\t\\tqueryGroupSections,\\n\\t\\t\\tqueryGroupTabs,\\n\\t\\t\\tdispatch,\\n\\t\\t\\tisEnterprise,\\n\\t\\t}),\\n\\t\\t[queryEditableSetting, queryEditableSettings, queryGroupSections, queryGroupTabs, dispatch, isEnterprise],\\n\\t);\\n\\n\\treturn <EditableSettingsContext.Provider children={children} value={contextValue} />;\\n};\\n\\nexport default EditableSettingsProvider;\\n\",null],\"names\":[\"_objectSpread\",\"_objectWithoutProperties\",\"useMutableCallback\",\"useSettings\",\"Mongo\",\"Tracker\",\"React\",\"useEffect\",\"useMemo\",\"useRef\",\"useIsEnterprise\",\"createReactiveSubscriptionFactory\",\"EditableSettingsContext\",\"module\",\"link\",\"default\",\"v\",\"defaultQuery\",\"exportDefault\",\"_ref\",\"_data$isEnterprise\",\"children\",\"query\",\"settingsCollectionRef\",\"persistedSettings\",\"getSettingsCollection\",\"current\",\"Collection\",\"settingsCollection\",\"_ref3\",\"remove\",\"_id\",\"$nin\",\"map\",\"_ref2\",\"fields\",\"_excluded\",\"upsert\",\"$set\",\"$unset\",\"changed\",\"queryEditableSetting\",\"validateSettingQueries\",\"queries\",\"concat\",\"JSON\",\"parse\",\"every\",\"find\",\"count\",\"editableSetting\",\"findOne\",\"disabled\",\"blocked\",\"enableQuery\",\"invisible\",\"displayQuery\",\"queryEditableSettings\",\"arguments\",\"length\",\"undefined\",\"$in\",\"group\",\"$and\",\"section\",\"$or\",\"$exists\",\"tab\",\"sort\",\"sorter\",\"i18nLabel\",\"fetch\",\"queryGroupSections\",\"Array\",\"from\",\"Set\",\"_ref4\",\"queryGroupTabs\",\"_ref5\",\"dispatch\",\"changes\",\"_ref6\",\"data\",\"_excluded2\",\"update\",\"flush\",\"isEnterprise\",\"contextValue\",\"createElement\",\"Provider\",\"value\"],\"mappings\":\"2BACAA,EAAiEC,EAAjEC,EAAiEC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,0BAAxDC,EAAAC,IAAoB,CAAA,uCAAoC,CAAAC,QAAAC,CAAA,EAAAhB,EAAAgB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,iDAAA,CAAAC,QAAAC,CAAA,EAAAf,EAAAe,CAAA,CAAA,EAAA,GAAxDH,EAAoBC,IAAA,CAAM,8BAA8B,CAAAZ,mBAAAc,CAAA,EAAAd,EAAAc,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2BAAA,CAAAX,YAAAa,CAAA,EAAAb,EAAAa,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,eAAA,CAAAV,MAAAY,CAAA,EAAAZ,EAAAY,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,iBAAA,CAAAT,QAAAW,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAC,QAAAC,CAAA,EAAAV,EAAAU,CAAA,EAAAT,UAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,QAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,OAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,iCAAA,CAAAJ,gBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,iDAAA,CAAAH,kCAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,6BAAA,CAAAF,wBAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAcjE,IAAMC,EAAqC,CAAA,EAd3CJ,EAAOK,aAAE,CAqBwBC,IAAsE,IAAAC,EAAA,GAArE,CAAEC,SAAAA,CAAQ,CAAEC,MAAAA,EAAQL,CAAAA,CAA6C,CAAAE,EAC5FI,EAAwBd,EAA0C,MAClEe,EAAoBrB,EAAYmB,GAEhCG,EAAwBvB,EAAmB,KAC3CqB,EAAsBG,OAAO,EACjCH,CAAAA,EAAsBG,OAAO,CAAG,IAAItB,EAAMuB,UAAU,CAAM,KAAI,EAGxDJ,EAAsBG,OAAO,GAGrCnB,EAAU,KACT,IAAMqB,EAAqBH,IAG3B,IAAA,IAAAI,KADAD,EAAmBE,MAAM,CAAC,CAAEC,IAAK,CAAEC,KAAMR,EAAkBS,GAAG,CAACC,IAAA,GAAC,CAAEH,IAAAA,CAAAA,CAAK,CAAAG,EAAA,OAAKH,CAAG,EAAC,CAAE,GACjDP,GAAmB,CAAA,GAAzC,CAAEO,IAAAA,CAAAA,CAAgB,CAAAF,EAARM,EAAMlC,EAAA4B,EAAAO,GAC1BR,EAAmBS,MAAM,CAACN,EAAK,CAAEO,KAAItC,EAAA,CAAA,EAAOmC,GAAUI,OAAQ,CAAEC,QAAS,CAAA,CAAI,CAAE,EAChF,CACD,EAAG,CAACf,EAAuBD,EAAkB,EAE7C,IAAMiB,EAAuBjC,EAAQ,KACpC,IAAMkC,EAAyBA,CAC9BpB,EACAM,KAEA,GAAI,CAACN,EACJ,MAAO,CAAA,EAGR,IAAMqB,EAAU,EAAE,CAACC,MAAM,CAAC,AAAiB,UAAjB,OAAOtB,EAAqBuB,KAAKC,KAAK,CAACxB,GAASA,GAC1E,OAAOqB,EAAQI,KAAK,CAAEzB,GAAUM,EAAmBoB,IAAI,CAAC1B,GAAO2B,KAAK,GAAK,EAC1E,EAEA,OAAOtC,EAAmCoB,IACzC,IAAMH,EAAqBH,IACrByB,EAAkBtB,EAAmBuB,OAAO,CAACpB,GAEnD,GAAKmB,EAIL,OAAAlD,EAAAA,EAAA,CAAA,EACIkD,GAAe,CAAA,EAAA,CAClBE,SAAUF,EAAgBG,OAAO,EAAI,CAACX,EAAuBQ,EAAgBI,WAAW,CAAE1B,GAC1F2B,UAAW,CAACb,EAAuBQ,EAAgBM,YAAY,CAAE5B,EAAmB,EAEtF,EACD,EAAG,CAACH,EAAsB,EAEpBgC,EAAwBjD,EAC7B,IACCG,EAAkC,WAAA,IAACW,EAAKoC,UAAAC,MAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,CAAAA,SAAA,CAAA,EAAA,CAAG,CAAA,EAAE,OAC5CjC,IACEuB,IAAI,CAAAhD,EAAAA,EAAAA,EAAAA,EAAA,CAAA,EAEC,QAASsB,GAAS,CAAES,IAAK,CAAE8B,IAAKvC,EAAMS,GAAAA,AAAG,CAAE,GAC3C,UAAWT,GAAS,CAAEwC,MAAOxC,EAAMwC,KAAAA,AAAK,GACxC,YAAaxC,GAAS,CAAEkB,QAASlB,EAAMkB,OAAAA,AAAO,GAAE,CAAA,EAAA,CACpDuB,KAAM,CAAA/D,EAAA,CAAA,EAEA,YAAasB,GACfA,CAAAA,EAAM0C,OAAO,CACX,CAAEA,QAAS1C,EAAM0C,OAAAA,AAAO,EACxB,CACAC,IAAK,CAAC,CAAED,QAAS,CAAEE,QAAS,CAAA,CAAK,CAAE,EAAI,CAAEF,QAAS,EAAE,EAAE,IACpDhE,EAAA,CAAA,EAGF,QAASsB,GACXA,CAAAA,EAAM6C,GAAG,CACP,CAAEA,IAAK7C,EAAM6C,GAAAA,AAAG,EAChB,CACAF,IAAK,CAAC,CAAEE,IAAK,CAAED,QAAS,CAAA,CAAK,CAAE,EAAI,CAAEC,IAAK,EAAE,EAAE,IAC5C,AAEP,GAEF,CACCC,KAAM,CACLJ,QAAS,EACTK,OAAQ,EACRC,UAAW,KAIbC,KAAK,EAAE,GAEX,CAAC9C,EAAsB,EAGlB+C,EAAqBhE,EAC1B,IACCG,EAAkC,CAACoB,EAAcoC,IAChDM,MAAMC,IAAI,CACT,IAAIC,IACHlD,IACEuB,IAAI,CAAAhD,EAAA,CAEH8D,MAAO/B,CAAG,EACNoC,AAAQP,KAAAA,IAARO,EACD,CAAEA,IAAAA,CAAG,EACL,CACAF,IAAK,CAAC,CAAEE,IAAK,CAAED,QAAS,CAAA,CAAK,CAAE,EAAI,CAAEC,IAAK,EAAE,EAAE,GAGlD,CACChC,OAAQ,CACP6B,QAAS,GAEVI,KAAM,CACLC,OAAQ,EACRL,QAAS,EACTM,UAAW,KAIbC,KAAK,GACLtC,GAAG,CAAC2C,IAAA,GAAC,CAAEZ,QAAAA,CAAAA,CAAS,CAAAY,EAAA,OAAKZ,GAAW,EAAE,MAIxC,CAACvC,EAAsB,EAGlBoD,EAAiBrE,EACtB,IACCG,EAAmCoB,GAClC0C,MAAMC,IAAI,CACT,IAAIC,IACHlD,IACEuB,IAAI,CACJ,CACCc,MAAO/B,GAER,CACCI,OAAQ,CACPgC,IAAK,GAENC,KAAM,CACLC,OAAQ,EACRF,IAAK,EACLG,UAAW,KAIbC,KAAK,GACLtC,GAAG,CAAC6C,IAAA,GAAC,CAAEX,IAAAA,CAAAA,CAAK,CAAAW,EAAA,OAAKX,GAAO,EAAE,MAIhC,CAAC1C,EAAsB,EAGlBsD,EAAW7E,EAAoB8E,IACpC,IAAA,IAAAC,KAA+BD,EAAS,CAAA,GAA7B,CAAEjD,IAAAA,CAAAA,CAAc,CAAAkD,EAANC,EAAIjF,EAAAgF,EAAAE,GACnBpD,GAILN,IAAwB2D,MAAM,CAACrD,EAAK,CAAEO,KAAM4C,CAAI,EACjD,CACA7E,EAAQgF,KAAK,EACd,GAEM,CAAEH,KAAAA,CAAAA,CAAM,CAAGxE,IAEX4E,EAAY,AAAqB,OAArBlE,CAAAA,EAAG8D,MAAAA,EAAI,KAAA,EAAJA,EAAMI,YAAY,AAAZA,GAAYlE,AAAA,KAAA,IAAAA,GAAAA,EAEjCmE,EAAe/E,EACpB,IAAO,CAAA,CACNiC,qBAAAA,EACAgB,sBAAAA,EACAe,mBAAAA,EACAK,eAAAA,EACAE,SAAAA,EACAO,aAAAA,IAED,CAAC7C,EAAsBgB,EAAuBe,EAAoBK,EAAgBE,EAAUO,EAAa,EAG1G,OAAOhF,EAAAkF,aAAA,CAAC5E,EAAwB6E,QAAQ,CAAA,CAACpE,SAAUA,EAAUqE,MAAOH,CAAa,EAClF\"}"}