{"code":"function module(e,t,s){let r,n,o,a,i,u,l,c,d,p;s.export({useReportUser:()=>m}),s.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){r=e},useSetModal(e){n=e},useToastMessageDispatch(e){o=e},useUserId(e){a=e}},0),s.link(\"@tanstack/react-query\",{useMutation(e){i=e}},1),s.link(\"react\",{default(e){u=e},useMemo(e){l=e}},2),s.link(\"react-i18next\",{useTranslation(e){c=e}},3),s.link(\"../../../../../hooks/useUserDisplayName\",{useUserDisplayName(e){d=e}},4),s.link(\"../../../contextualBar/UserInfo/ReportUserModal\",{default(e){p=e}},5);let m=e=>{let{_id:t,username:s,name:m}=e,k=a(),y=n(),{t:U}=c(),f=o(),g=d({username:s,name:m}),M=r(\"POST\",\"/v1/moderation.reportUser\"),h=i([\"reportUser\",t],async e=>{M({description:e,userId:t})},{onSuccess:()=>f({type:\"success\",message:U(\"Report_has_been_sent\")}),onError:e=>f({type:\"error\",message:e}),onSettled:()=>y()}),x=l(()=>k!==t?{icon:\"warning\",content:U(\"Report\"),onClick:()=>y(u.createElement(p,{onConfirm:h.mutate,onClose:()=>y(),displayName:g||\"\",username:s||\"\"})),type:\"moderation\",variant:\"danger\"}:void 0,[k,t,U,y,s,h.mutate,g]);return x}}","map":"{\"version\":3,\"sources\":[\"client/views/room/hooks/useUserInfoActions/actions/useReportUser.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IUser } from '@rocket.chat/core-typings';\\nimport { useEndpoint, useSetModal, useToastMessageDispatch, useUserId } from '@rocket.chat/ui-contexts';\\nimport { useMutation } from '@tanstack/react-query';\\nimport React, { useMemo } from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport { useUserDisplayName } from '../../../../../hooks/useUserDisplayName';\\nimport ReportUserModal from '../../../contextualBar/UserInfo/ReportUserModal';\\nimport type { UserInfoAction } from '../useUserInfoActions';\\n\\nexport const useReportUser = (user: Pick<IUser, '_id' | 'username' | 'name'>): UserInfoAction | undefined => {\\n\\tconst { _id: uid, username, name } = user;\\n\\tconst ownUserId = useUserId();\\n\\tconst setModal = useSetModal();\\n\\n\\tconst { t } = useTranslation();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst displayName = useUserDisplayName({ username, name });\\n\\n\\tconst reportUser = useEndpoint('POST', '/v1/moderation.reportUser');\\n\\tconst reportUserMutation = useMutation(\\n\\t\\t['reportUser', uid],\\n\\t\\tasync (description: string) => {\\n\\t\\t\\treportUser({ description, userId: uid });\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tonSuccess: () => dispatchToastMessage({ type: 'success', message: t('Report_has_been_sent') }),\\n\\t\\t\\tonError: (error) => dispatchToastMessage({ type: 'error', message: error }),\\n\\t\\t\\tonSettled: () => setModal(),\\n\\t\\t},\\n\\t);\\n\\n\\tconst openReportUserModal = useMemo(() => {\\n\\t\\tconst action = () =>\\n\\t\\t\\tsetModal(\\n\\t\\t\\t\\t<ReportUserModal\\n\\t\\t\\t\\t\\tonConfirm={reportUserMutation.mutate}\\n\\t\\t\\t\\t\\tonClose={() => setModal()}\\n\\t\\t\\t\\t\\tdisplayName={displayName || ''}\\n\\t\\t\\t\\t\\tusername={username || ''}\\n\\t\\t\\t\\t/>,\\n\\t\\t\\t);\\n\\n\\t\\treturn ownUserId !== uid\\n\\t\\t\\t? {\\n\\t\\t\\t\\t\\ticon: 'warning' as const,\\n\\t\\t\\t\\t\\tcontent: t('Report'),\\n\\t\\t\\t\\t\\tonClick: action,\\n\\t\\t\\t\\t\\ttype: 'moderation' as const,\\n\\t\\t\\t\\t\\tvariant: 'danger' as const,\\n\\t\\t\\t  }\\n\\t\\t\\t: undefined;\\n\\t}, [ownUserId, uid, t, setModal, username, reportUserMutation.mutate, displayName]);\\n\\n\\treturn openReportUserModal;\\n};\\n\",null],\"names\":[\"useEndpoint\",\"useSetModal\",\"useToastMessageDispatch\",\"useUserId\",\"useMutation\",\"React\",\"useMemo\",\"useTranslation\",\"useUserDisplayName\",\"ReportUserModal\",\"module\",\"export\",\"useReportUser\",\"link\",\"v\",\"default\",\"user\",\"_id\",\"uid\",\"username\",\"name\",\"ownUserId\",\"setModal\",\"t\",\"dispatchToastMessage\",\"displayName\",\"reportUser\",\"reportUserMutation\",\"description\",\"userId\",\"onSuccess\",\"type\",\"message\",\"onError\",\"error\",\"onSettled\",\"openReportUserModal\",\"icon\",\"content\",\"onClick\",\"action\",\"createElement\",\"onConfirm\",\"mutate\",\"onClose\",\"variant\",\"undefined\"],\"mappings\":\"2BACmCA,EAAyBC,EAAiBC,EAAAC,EAA2BC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAxGC,EAAOC,MAAE,CAAA,CAAAC,cAAaA,IAAWA,CAAE,GAAqEF,EAAAG,IAAA,CAAA,2BAAA,CAAAb,YAAAc,CAAA,EAAAd,EAAAc,CAAA,EAAAb,YAAAa,CAAA,EAAAb,EAAAa,CAAA,EAAAZ,wBAAAY,CAAA,EAAAZ,EAAAY,CAAA,EAAAX,UAAAW,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,wBAAA,CAAAT,YAAAU,CAAA,EAAAV,EAAAU,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAT,EAAAS,CAAA,EAAAR,QAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,gBAAA,CAAAN,eAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,0CAAA,CAAAL,mBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,kDAAA,CAAAE,QAAAD,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GASjG,IAAMF,EAAiBI,IAC7B,GAAM,CAAEC,IAAKC,CAAG,CAAEC,SAAAA,CAAQ,CAAEC,KAAAA,CAAAA,CAAM,CAAGJ,EAC/BK,EAAYlB,IACZmB,EAAWrB,IAEX,CAAEsB,EAAAA,CAAAA,CAAG,CAAGhB,IACRiB,EAAuBtB,IACvBuB,EAAcjB,EAAmB,CAAEW,SAAAA,EAAUC,KAAAA,CAAI,GAEjDM,EAAa1B,EAAY,OAAQ,6BACjC2B,EAAqBvB,EAC1B,CAAC,aAAcc,EAAI,CACnB,MAAOU,IACNF,EAAW,CAAEE,YAAAA,EAAaC,OAAQX,CAAG,EACtC,EACA,CACCY,UAAWA,IAAMN,EAAqB,CAAEO,KAAM,UAAWC,QAAST,EAAE,uBAAuB,GAC3FU,QAAUC,GAAUV,EAAqB,CAAEO,KAAM,QAASC,QAASE,CAAK,GACxEC,UAAWA,IAAMb,MAIbc,EAAsB9B,EAAQ,IAW5Be,IAAcH,EAClB,CACAmB,KAAM,UACNC,QAASf,EAAE,UACXgB,QAdYC,IACdlB,EACCjB,EAAAoC,aAAA,CAAChC,EAAe,CACfiC,UAAWf,EAAmBgB,MAAO,CACrCC,QAASA,IAAMtB,IACfG,YAAaA,GAAe,GAC5BN,SAAUA,GAAY,EAAG,IASzBY,KAAM,aACNc,QAAS,UAETC,KAAAA,EACD,CAACzB,EAAWH,EAAKK,EAAGD,EAAUH,EAAUQ,EAAmBgB,MAAM,CAAElB,EAAY,EAElF,OAAOW,CACR\"}"}