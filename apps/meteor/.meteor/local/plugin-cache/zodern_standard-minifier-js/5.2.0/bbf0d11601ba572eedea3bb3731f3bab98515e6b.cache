{"code":"function module(t,e,a){let n,u;a.export({useAuditMutation:()=>i}),a.link(\"@rocket.chat/ui-contexts\",{useMethod(t){n=t}},0),a.link(\"@tanstack/react-query\",{useMutation(t){u=t}},1);let i=t=>{let e=n(\"auditGetMessages\"),a=n(\"auditGetOmnichannelMessages\");return u([\"audit\"],async n=>{var u,i,l,s;let{msg:d,dateRange:r,rid:o,users:c,visitor:D,agent:v}=n;return\"l\"===t?a({type:t,msg:d,startDate:null!==(l=r.start)&&void 0!==l?l:new Date(0),endDate:null!==(s=r.end)&&void 0!==s?s:new Date,users:c,visitor:\"\",agent:\"\"}):e({type:t,msg:d,startDate:null!==(u=r.start)&&void 0!==u?u:new Date(0),endDate:null!==(i=r.end)&&void 0!==i?i:new Date,rid:o,users:c,visitor:D,agent:v})})}}","map":"{\"version\":3,\"sources\":[\"client/views/audit/hooks/useAuditMutation.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IAuditLog } from '@rocket.chat/core-typings';\\nimport { useMethod } from '@rocket.chat/ui-contexts';\\nimport { useMutation } from '@tanstack/react-query';\\n\\nimport type { AuditFields } from './useAuditForm';\\n\\nexport const useAuditMutation = (type: IAuditLog['fields']['type']) => {\\n\\tconst getAuditMessages = useMethod('auditGetMessages');\\n\\tconst getOmnichannelAuditMessages = useMethod('auditGetOmnichannelMessages');\\n\\n\\treturn useMutation(['audit'] as const, async ({ msg, dateRange, rid, users, visitor, agent }: AuditFields) => {\\n\\t\\tif (type === 'l') {\\n\\t\\t\\treturn getOmnichannelAuditMessages({\\n\\t\\t\\t\\ttype,\\n\\t\\t\\t\\tmsg,\\n\\t\\t\\t\\tstartDate: dateRange.start ?? new Date(0),\\n\\t\\t\\t\\tendDate: dateRange.end ?? new Date(),\\n\\t\\t\\t\\tusers,\\n\\t\\t\\t\\tvisitor: '',\\n\\t\\t\\t\\tagent: '',\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn getAuditMessages({\\n\\t\\t\\ttype,\\n\\t\\t\\tmsg,\\n\\t\\t\\tstartDate: dateRange.start ?? new Date(0),\\n\\t\\t\\tendDate: dateRange.end ?? new Date(),\\n\\t\\t\\trid,\\n\\t\\t\\tusers,\\n\\t\\t\\tvisitor,\\n\\t\\t\\tagent,\\n\\t\\t});\\n\\t});\\n};\\n\",null],\"names\":[\"useMethod\",\"useMutation\",\"module\",\"export\",\"useAuditMutation\",\"link\",\"v\",\"type\",\"getAuditMessages\",\"getOmnichannelAuditMessages\",\"_ref\",\"_dateRange$start2\",\"_dateRange$end2\",\"_dateRange$start\",\"_dateRange$end\",\"msg\",\"dateRange\",\"rid\",\"users\",\"visitor\",\"agent\",\"startDate\",\"start\",\"Date\",\"endDate\",\"end\"],\"mappings\":\"2BACqDA,EAAAC,EAArDC,EAAOC,MAAE,CAAA,CAAAC,iBAAiBA,IAAAA,CAA0B,GAACF,EAAAG,IAAA,CAAA,2BAAA,CAAAL,UAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,wBAAA,CAAAJ,YAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAK9C,IAAMF,EAAoBG,IAChC,IAAMC,EAAmBR,EAAU,oBAC7BS,EAA8BT,EAAU,+BAE9C,OAAOC,EAAY,CAAC,QAAiB,CAAE,MAAAS,QAAsEC,EAAAC,EAC1FC,EAAAC,EAD0F,GAA/D,CAAEC,IAAAA,CAAG,CAAEC,UAAAA,CAAS,CAAEC,IAAAA,CAAG,CAAEC,MAAAA,CAAK,CAAEC,QAAAA,CAAO,CAAEC,MAAAA,CAAAA,CAAoB,CAAAV,QACxG,AAAIH,AAAS,MAATA,EACIE,EAA4B,CAClCF,KAAAA,EACAQ,IAAAA,EACAM,UAAS,AAAiB,OAAjBR,CAAAA,EAAEG,EAAUM,KAAK,AAALA,GAAKT,AAAA,KAAA,IAAAA,EAAAA,EAAI,IAAIU,KAAK,GACvCC,QAAO,AAAe,OAAfV,CAAAA,EAAEE,EAAUS,GAAG,AAAHA,GAAGX,AAAA,KAAA,IAAAA,EAAAA,EAAI,IAAIS,KAC9BL,MAAAA,EACAC,QAAS,GACTC,MAAO,KAIFZ,EAAiB,CACvBD,KAAAA,EACAQ,IAAAA,EACAM,UAAS,AAAiB,OAAjBV,CAAAA,EAAEK,EAAUM,KAAK,AAALA,GAAKX,AAAA,KAAA,IAAAA,EAAAA,EAAI,IAAIY,KAAK,GACvCC,QAAO,AAAe,OAAfZ,CAAAA,EAAEI,EAAUS,GAAG,AAAHA,GAAGb,AAAA,KAAA,IAAAA,EAAAA,EAAI,IAAIW,KAC9BN,IAAAA,EACAC,MAAAA,EACAC,QAAAA,EACAC,MAAAA,GAEF,EACD\"}"}