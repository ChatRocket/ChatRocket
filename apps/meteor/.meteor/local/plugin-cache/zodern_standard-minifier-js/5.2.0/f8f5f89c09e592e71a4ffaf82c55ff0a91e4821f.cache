{"code":"function module(h,t,s){s.export({l:()=>n});class e{constructor(h,t){this.low=h,this.high=t,this.length=1+t-h}overlaps(h){return!(this.high<h.low||this.low>h.high)}touches(h){return!(this.high+1<h.low||this.low-1>h.high)}add(h){return new e(Math.min(this.low,h.low),Math.max(this.high,h.high))}subtract(h){return h.low<=this.low&&h.high>=this.high?[]:h.low>this.low&&h.high<this.high?[new e(this.low,h.low-1),new e(h.high+1,this.high)]:h.low<=this.low?[new e(h.high+1,this.high)]:[new e(this.low,h.low-1)]}toString(){return this.low==this.high?this.low.toString():this.low+\"-\"+this.high}}class r{constructor(h,t){this.ranges=[],this.length=0,null!=h&&this.add(h,t)}_update_length(){this.length=this.ranges.reduce((h,t)=>h+t.length,0)}add(h,t){var s=h=>{for(var t=0;t<this.ranges.length&&!h.touches(this.ranges[t]);)t++;for(var s=this.ranges.slice(0,t);t<this.ranges.length&&h.touches(this.ranges[t]);)h=h.add(this.ranges[t]),t++;s.push(h),this.ranges=s.concat(this.ranges.slice(t)),this._update_length()};return h instanceof r?h.ranges.forEach(s):(null==t&&(t=h),s(new e(h,t))),this}subtract(h,t){var s=h=>{for(var t=0;t<this.ranges.length&&!h.overlaps(this.ranges[t]);)t++;for(var s=this.ranges.slice(0,t);t<this.ranges.length&&h.overlaps(this.ranges[t]);)s=s.concat(this.ranges[t].subtract(h)),t++;this.ranges=s.concat(this.ranges.slice(t)),this._update_length()};return h instanceof r?h.ranges.forEach(s):(null==t&&(t=h),s(new e(h,t))),this}intersect(h,t){var s=[],n=h=>{for(var t=0;t<this.ranges.length&&!h.overlaps(this.ranges[t]);)t++;for(;t<this.ranges.length&&h.overlaps(this.ranges[t]);){var r=Math.max(this.ranges[t].low,h.low),n=Math.min(this.ranges[t].high,h.high);s.push(new e(r,n)),t++}};return h instanceof r?h.ranges.forEach(n):(null==t&&(t=h),n(new e(h,t))),this.ranges=s,this._update_length(),this}index(h){for(var t=0;t<this.ranges.length&&this.ranges[t].length<=h;)h-=this.ranges[t].length,t++;return this.ranges[t].low+h}toString(){return\"[ \"+this.ranges.join(\", \")+\" ]\"}clone(){return new r(this)}numbers(){return this.ranges.reduce((h,t)=>{for(var s=t.low;s<=t.high;)h.push(s),s++;return h},[])}subranges(){return this.ranges.map(h=>({low:h.low,high:h.high,length:1+h.high-h.low}))}}var n=r}","map":"{\"version\":3,\"sources\":[\"../../../node_modules/drange/lib/index.js\",\"<anon>\"],\"sourcesContent\":[\"'use strict';\\n/* eslint indent: 4 */\\n\\n\\n// Private helper class\\nclass SubRange {\\n    constructor(low, high) {\\n        this.low = low;\\n        this.high = high;\\n        this.length = 1 + high - low;\\n    }\\n\\n    overlaps(range) {\\n        return !(this.high < range.low || this.low > range.high);\\n    }\\n\\n    touches(range) {\\n        return !(this.high + 1 < range.low || this.low - 1 > range.high);\\n    }\\n\\n    // Returns inclusive combination of SubRanges as a SubRange.\\n    add(range) {\\n        return new SubRange(\\n            Math.min(this.low, range.low),\\n            Math.max(this.high, range.high)\\n        );\\n    }\\n\\n    // Returns subtraction of SubRanges as an array of SubRanges.\\n    // (There's a case where subtraction divides it in 2)\\n    subtract(range) {\\n        if (range.low <= this.low && range.high >= this.high) {\\n            return [];\\n        } else if (range.low > this.low && range.high < this.high) {\\n            return [\\n                new SubRange(this.low, range.low - 1),\\n                new SubRange(range.high + 1, this.high)\\n            ];\\n        } else if (range.low <= this.low) {\\n            return [new SubRange(range.high + 1, this.high)];\\n        } else {\\n            return [new SubRange(this.low, range.low - 1)];\\n        }\\n    }\\n\\n    toString() {\\n        return this.low == this.high ?\\n            this.low.toString() : this.low + '-' + this.high;\\n    }\\n}\\n\\n\\nclass DRange {\\n    constructor(a, b) {\\n        this.ranges = [];\\n        this.length = 0;\\n        if (a != null) this.add(a, b);\\n    }\\n\\n    _update_length() {\\n        this.length = this.ranges.reduce((previous, range) => {\\n            return previous + range.length;\\n        }, 0);\\n    }\\n\\n    add(a, b) {\\n        var _add = (subrange) => {\\n            var i = 0;\\n            while (i < this.ranges.length && !subrange.touches(this.ranges[i])) {\\n                i++;\\n            }\\n            var newRanges = this.ranges.slice(0, i);\\n            while (i < this.ranges.length && subrange.touches(this.ranges[i])) {\\n                subrange = subrange.add(this.ranges[i]);\\n                i++;\\n            }\\n            newRanges.push(subrange);\\n            this.ranges = newRanges.concat(this.ranges.slice(i));\\n            this._update_length();\\n        }\\n\\n        if (a instanceof DRange) {\\n            a.ranges.forEach(_add);\\n        } else {\\n            if (b == null) b = a;\\n            _add(new SubRange(a, b));\\n        }\\n        return this;\\n    }\\n\\n    subtract(a, b) {\\n        var _subtract = (subrange) => {\\n            var i = 0;\\n            while (i < this.ranges.length && !subrange.overlaps(this.ranges[i])) {\\n                i++;\\n            }\\n            var newRanges = this.ranges.slice(0, i);\\n            while (i < this.ranges.length && subrange.overlaps(this.ranges[i])) {\\n                newRanges = newRanges.concat(this.ranges[i].subtract(subrange));\\n                i++;\\n            }\\n            this.ranges = newRanges.concat(this.ranges.slice(i));\\n            this._update_length();\\n        };\\n\\n        if (a instanceof DRange) {\\n            a.ranges.forEach(_subtract);\\n        } else {\\n            if (b == null) b = a;\\n            _subtract(new SubRange(a, b));\\n        }\\n        return this;\\n    }\\n\\n    intersect(a, b) {\\n        var newRanges = [];\\n        var _intersect = (subrange) => {\\n            var i = 0;\\n            while (i < this.ranges.length && !subrange.overlaps(this.ranges[i])) {\\n                i++;\\n            }\\n            while (i < this.ranges.length && subrange.overlaps(this.ranges[i])) {\\n                var low = Math.max(this.ranges[i].low, subrange.low);\\n                var high = Math.min(this.ranges[i].high, subrange.high);\\n                newRanges.push(new SubRange(low, high));\\n                i++;\\n            }\\n        };\\n\\n        if (a instanceof DRange) {\\n            a.ranges.forEach(_intersect);\\n        } else {\\n            if (b == null) b = a;\\n            _intersect(new SubRange(a, b));\\n        }\\n        this.ranges = newRanges;\\n        this._update_length();\\n        return this;\\n    }\\n\\n    index(index) {\\n        var i = 0;\\n        while (i < this.ranges.length && this.ranges[i].length <= index) {\\n            index -= this.ranges[i].length;\\n            i++;\\n        }\\n        return this.ranges[i].low + index;\\n    }\\n\\n    toString() {\\n        return '[ ' + this.ranges.join(', ') + ' ]';\\n    }\\n\\n    clone() {\\n        return new DRange(this);\\n    }\\n\\n    numbers() {\\n        return this.ranges.reduce((result, subrange) => {\\n            var i = subrange.low;\\n            while (i <= subrange.high) {\\n                result.push(i);\\n                i++;\\n            }\\n            return result;\\n        }, []);\\n    }\\n\\n    subranges() {\\n        return this.ranges.map((subrange) => ({\\n            low: subrange.low,\\n            high: subrange.high,\\n            length: 1 + subrange.high - subrange.low\\n        }));\\n    }\\n}\\n\\nmodule.exports = DRange;\\n\",null],\"names\":[\"module\",\"export\",\"l\",\"lib\",\"SubRange\",\"constructor\",\"low\",\"high\",\"length\",\"overlaps\",\"range\",\"touches\",\"add\",\"Math\",\"min\",\"max\",\"subtract\",\"toString\",\"DRange\",\"a\",\"b\",\"ranges\",\"_update_length\",\"reduce\",\"previous\",\"_add\",\"subrange\",\"i\",\"newRanges\",\"slice\",\"push\",\"concat\",\"forEach\",\"_subtract\",\"intersect\",\"_intersect\",\"index\",\"join\",\"clone\",\"numbers\",\"result\",\"subranges\",\"map\"],\"mappings\":\"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\"}"}