{"code":"function module(e,r,t){let n;t.export({getBSONType:()=>a,compareBSONValues:()=>c}),t.link(\"./types\",{BSONType(e){n=e}},0);let a=e=>\"number\"==typeof e?n.Double:\"string\"==typeof e?n.String:\"boolean\"==typeof e?n.Boolean:Array.isArray(e)?n.Array:null===e?n.Null:e instanceof RegExp?n.Regex:\"function\"==typeof e?n.JavaScript:e instanceof Date?n.Date:e instanceof Uint8Array?n.BinData:n.Object,o=e=>{switch(e){case n.Null:return 0;case n.Double:case n.Int:case n.Long:return 1;case n.String:case n.Symbol:return 2;case n.Object:return 3;case n.Array:return 4;case n.BinData:return 5;case n.ObjectId:return 6;case n.Boolean:return 7;case n.Date:case n.Timestamp:return 8;case n.Regex:return 9;case n.JavaScript:case n.JavaScriptWithScope:return 100;default:return -1}},c=(e,r)=>{if(void 0===e)return void 0===r?0:-1;if(void 0===r)return 1;let t=a(e),i=o(t),s=a(r),u=o(s);if(i!==u)return i<u?-1:1;if(t!==s)throw Error(\"Missing type coercion logic in compareBSONValues\");switch(t){case n.Double:return e-r;case n.String:return e.localeCompare(r);case n.Object:return c(Array.prototype.concat.call([],...Object.entries(e)),Array.prototype.concat.call([],...Object.entries(r)));case n.Array:for(let t=0;;t++){if(t===e.length)return t===r.length?0:-1;if(t===r.length)return 1;let n=c(e[t],r[t]);if(0!==n)return n}case n.BinData:if(e.length!==r.length)return e.length-r.length;for(let t=0;t<e.length;t++)if(e[t]!==r[t])return e[t]<r[t]?-1:1;return 0;case n.Null:case n.Undefined:return 0;case n.ObjectId:return e.toHexString().localeCompare(r.toHexString());case n.Boolean:return Number(e)-Number(r);case n.Date:return e.getTime()-r.getTime();case n.Regex:throw Error(\"Sorting not supported on regular expression\");case n.JavaScript:case n.JavaScriptWithScope:throw Error(\"Sorting not supported on Javascript code\")}throw Error(\"Unknown type to sort\")}}","map":"{\"version\":3,\"sources\":[\"client/lib/minimongo/bson.ts\",\"<anon>\"],\"sourcesContent\":[\"import { BSONType } from './types';\\n\\nexport const getBSONType = <T>(v: T): BSONType => {\\n\\tif (typeof v === 'number') {\\n\\t\\treturn BSONType.Double;\\n\\t}\\n\\n\\tif (typeof v === 'string') {\\n\\t\\treturn BSONType.String;\\n\\t}\\n\\n\\tif (typeof v === 'boolean') {\\n\\t\\treturn BSONType.Boolean;\\n\\t}\\n\\n\\tif (Array.isArray(v)) {\\n\\t\\treturn BSONType.Array;\\n\\t}\\n\\n\\tif (v === null) {\\n\\t\\treturn BSONType.Null;\\n\\t}\\n\\n\\tif (v instanceof RegExp) {\\n\\t\\treturn BSONType.Regex;\\n\\t}\\n\\n\\tif (typeof v === 'function') {\\n\\t\\treturn BSONType.JavaScript;\\n\\t}\\n\\n\\tif (v instanceof Date) {\\n\\t\\treturn BSONType.Date;\\n\\t}\\n\\n\\tif (v instanceof Uint8Array) {\\n\\t\\treturn BSONType.BinData;\\n\\t}\\n\\n\\treturn BSONType.Object;\\n};\\n\\nconst getBSONTypeOrder = (type: BSONType): number => {\\n\\tswitch (type) {\\n\\t\\tcase BSONType.Null:\\n\\t\\t\\treturn 0;\\n\\n\\t\\tcase BSONType.Double:\\n\\t\\tcase BSONType.Int:\\n\\t\\tcase BSONType.Long:\\n\\t\\t\\treturn 1;\\n\\n\\t\\tcase BSONType.String:\\n\\t\\tcase BSONType.Symbol:\\n\\t\\t\\treturn 2;\\n\\n\\t\\tcase BSONType.Object:\\n\\t\\t\\treturn 3;\\n\\n\\t\\tcase BSONType.Array:\\n\\t\\t\\treturn 4;\\n\\n\\t\\tcase BSONType.BinData:\\n\\t\\t\\treturn 5;\\n\\n\\t\\tcase BSONType.ObjectId:\\n\\t\\t\\treturn 6;\\n\\n\\t\\tcase BSONType.Boolean:\\n\\t\\t\\treturn 7;\\n\\n\\t\\tcase BSONType.Date:\\n\\t\\tcase BSONType.Timestamp:\\n\\t\\t\\treturn 8;\\n\\n\\t\\tcase BSONType.Regex:\\n\\t\\t\\treturn 9;\\n\\n\\t\\tcase BSONType.JavaScript:\\n\\t\\tcase BSONType.JavaScriptWithScope:\\n\\t\\t\\treturn 100;\\n\\n\\t\\tdefault:\\n\\t\\t\\treturn -1;\\n\\t}\\n};\\n\\ntype ObjectID = {\\n\\ttoHexString(): string;\\n\\tequals(otherID: ObjectID): boolean;\\n};\\n\\nexport const compareBSONValues = (a: unknown, b: unknown): number => {\\n\\tif (a === undefined) {\\n\\t\\treturn b === undefined ? 0 : -1;\\n\\t}\\n\\n\\tif (b === undefined) {\\n\\t\\treturn 1;\\n\\t}\\n\\n\\tconst ta = getBSONType(a);\\n\\tconst oa = getBSONTypeOrder(ta);\\n\\n\\tconst tb = getBSONType(b);\\n\\tconst ob = getBSONTypeOrder(tb);\\n\\n\\tif (oa !== ob) {\\n\\t\\treturn oa < ob ? -1 : 1;\\n\\t}\\n\\n\\tif (ta !== tb) {\\n\\t\\tthrow Error('Missing type coercion logic in compareBSONValues');\\n\\t}\\n\\n\\tswitch (ta) {\\n\\t\\tcase BSONType.Double:\\n\\t\\t\\treturn (a as number) - (b as number);\\n\\n\\t\\tcase BSONType.String:\\n\\t\\t\\treturn (a as string).localeCompare(b as string);\\n\\n\\t\\tcase BSONType.Object:\\n\\t\\t\\treturn compareBSONValues(\\n\\t\\t\\t\\tArray.prototype.concat.call([], ...Object.entries(a as Record<string, unknown>)),\\n\\t\\t\\t\\tArray.prototype.concat.call([], ...Object.entries(b as Record<string, unknown>)),\\n\\t\\t\\t);\\n\\n\\t\\tcase BSONType.Array: {\\n\\t\\t\\tfor (let i = 0; ; i++) {\\n\\t\\t\\t\\tif (i === (a as unknown[]).length) {\\n\\t\\t\\t\\t\\treturn i === (b as unknown[]).length ? 0 : -1;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (i === (b as unknown[]).length) {\\n\\t\\t\\t\\t\\treturn 1;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tconst s = compareBSONValues((a as unknown[])[i], (b as unknown[])[i]);\\n\\t\\t\\t\\tif (s !== 0) {\\n\\t\\t\\t\\t\\treturn s;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tcase BSONType.BinData: {\\n\\t\\t\\tif ((a as Uint8Array).length !== (b as Uint8Array).length) {\\n\\t\\t\\t\\treturn (a as Uint8Array).length - (b as Uint8Array).length;\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor (let i = 0; i < (a as Uint8Array).length; i++) {\\n\\t\\t\\t\\tif ((a as Uint8Array)[i] === (b as Uint8Array)[i]) {\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn (a as Uint8Array)[i] < (b as Uint8Array)[i] ? -1 : 1;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\n\\t\\tcase BSONType.Null:\\n\\t\\tcase BSONType.Undefined:\\n\\t\\t\\treturn 0;\\n\\n\\t\\tcase BSONType.ObjectId:\\n\\t\\t\\treturn (a as ObjectID).toHexString().localeCompare((b as ObjectID).toHexString());\\n\\n\\t\\tcase BSONType.Boolean:\\n\\t\\t\\treturn Number(a) - Number(b);\\n\\n\\t\\tcase BSONType.Date:\\n\\t\\t\\treturn (a as Date).getTime() - (b as Date).getTime();\\n\\n\\t\\tcase BSONType.Regex:\\n\\t\\t\\tthrow Error('Sorting not supported on regular expression');\\n\\n\\t\\tcase BSONType.JavaScript:\\n\\t\\tcase BSONType.JavaScriptWithScope:\\n\\t\\t\\tthrow Error('Sorting not supported on Javascript code');\\n\\t}\\n\\n\\tthrow Error('Unknown type to sort');\\n};\\n\",null],\"names\":[\"BSONType\",\"module\",\"export\",\"getBSONType\",\"compareBSONValues\",\"link\",\"v\",\"Double\",\"String\",\"Boolean\",\"Array\",\"isArray\",\"Null\",\"RegExp\",\"Regex\",\"JavaScript\",\"Date\",\"Uint8Array\",\"BinData\",\"Object\",\"getBSONTypeOrder\",\"type\",\"Int\",\"Long\",\"Symbol\",\"ObjectId\",\"Timestamp\",\"JavaScriptWithScope\",\"a\",\"b\",\"undefined\",\"ta\",\"oa\",\"tb\",\"ob\",\"Error\",\"localeCompare\",\"prototype\",\"concat\",\"call\",\"entries\",\"i\",\"length\",\"s\",\"Undefined\",\"toHexString\",\"Number\",\"getTime\"],\"mappings\":\"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\"}"}