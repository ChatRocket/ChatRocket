{"code":"function module(e,t,l){l.export({getRoomGroup:()=>o});let i={l:\"live\",v:\"voip\",d:\"direct\",p:\"group\",c:\"channel\"},o=e=>{var t,l;return e.teamMain?\"team\":\"d\"===e.t&&(null!==(t=null===(l=e.uids)||void 0===l?void 0:l.length)&&void 0!==t?t:0)>2?\"direct_multiple\":i[e.t]}}","map":"{\"version\":3,\"sources\":[\"client/views/room/lib/getRoomGroup.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { RoomType, IRoom } from '@rocket.chat/core-typings';\\n\\nimport type { RoomToolboxActionConfig } from '../contexts/RoomToolboxContext';\\n\\nconst groupsDict = {\\n\\tl: 'live',\\n\\tv: 'voip',\\n\\td: 'direct',\\n\\tp: 'group',\\n\\tc: 'channel',\\n} as const satisfies Record<RoomType, RoomToolboxActionConfig['groups'][number]>;\\n\\nexport const getRoomGroup = (room: IRoom) => {\\n\\tif (room.teamMain) {\\n\\t\\treturn 'team';\\n\\t}\\n\\n\\tif (room.t === 'd' && (room.uids?.length ?? 0) > 2) {\\n\\t\\treturn 'direct_multiple';\\n\\t}\\n\\n\\treturn groupsDict[room.t];\\n};\\n\",null],\"names\":[\"module\",\"export\",\"getRoomGroup\",\"groupsDict\",\"l\",\"v\",\"d\",\"p\",\"c\",\"room\",\"_room$uids$length\",\"_room$uids\",\"teamMain\",\"t\",\"uids\",\"length\"],\"mappings\":\"uBAIAA,EAAMC,MAAA,CAAA,CAAAC,aAAaA,IAAAA,CAAA,GAAnB,IAAMC,EAAa,CAClBC,EAAG,OACHC,EAAG,OACHC,EAAG,SACHC,EAAG,QACHC,EAAG,WAGSN,EAAgBO,IAAe,IAAAC,EAAAC,SAC3C,AAAIF,EAAKG,QAAQ,CACT,OAGJH,AAAW,MAAXA,EAAKI,CAAC,EAAY,CAAA,AAAkB,OAAlBH,CAAAA,EAAA,AAAU,OAAVC,CAAAA,EAACF,EAAKK,IAAI,AAAJA,GAAIH,AAAA,KAAA,IAAAA,EAAA,KAAA,EAATA,EAAWI,MAAM,AAANA,GAAML,AAAA,KAAA,IAAAA,EAAAA,EAAI,CAAA,EAAK,EACzC,kBAGDP,CAAU,CAACM,EAAKI,CAAC,CAAC,AAC1B\"}"}