{"code":"function module(e,o,t){let r,i,n;t.link(\"meteor/accounts-base\",{Accounts(e){r=e}},0),t.link(\"meteor/meteor\",{Meteor(e){i=e}},1),t.link(\"../../lib/2fa/overrideLoginMethod\",{overrideLoginMethod(e){n=e}},2);let l=(e,o,t,i)=>{\"string\"==typeof e&&(e=-1===e.indexOf(\"@\")?{username:e}:{email:e}),r.callLoginMethod({methodArguments:[{totp:{login:{user:e,password:r._hashPassword(o)},code:t}}],userCallback(e){if(!e){null==i||i(void 0);return}if(i){i(e);return}throw e}})},{loginWithPassword:s}=i;i.loginWithPassword=(e,o,t)=>{n(s,[e,o],t,l)}}","map":"{\"version\":3,\"sources\":[\"client/meteorOverrides/login/password.ts\",\"<anon>\"],\"sourcesContent\":[\"import { Accounts } from 'meteor/accounts-base';\\nimport { Meteor } from 'meteor/meteor';\\n\\nimport { overrideLoginMethod, type LoginCallback } from '../../lib/2fa/overrideLoginMethod';\\n\\ndeclare module 'meteor/meteor' {\\n\\t// eslint-disable-next-line @typescript-eslint/no-namespace\\n\\tnamespace Meteor {\\n\\t\\tfunction loginWithPassword(\\n\\t\\t\\tuserDescriptor: { username: string } | { email: string } | { id: string } | string,\\n\\t\\t\\tpassword: string,\\n\\t\\t\\tcallback?: LoginCallback,\\n\\t\\t): void;\\n\\t}\\n}\\n\\nconst loginWithPasswordAndTOTP = (\\n\\tuserDescriptor: { username: string } | { email: string } | { id: string } | string,\\n\\tpassword: string,\\n\\tcode: string,\\n\\tcallback?: LoginCallback,\\n) => {\\n\\tif (typeof userDescriptor === 'string') {\\n\\t\\tif (userDescriptor.indexOf('@') === -1) {\\n\\t\\t\\tuserDescriptor = { username: userDescriptor };\\n\\t\\t} else {\\n\\t\\t\\tuserDescriptor = { email: userDescriptor };\\n\\t\\t}\\n\\t}\\n\\n\\tAccounts.callLoginMethod({\\n\\t\\tmethodArguments: [\\n\\t\\t\\t{\\n\\t\\t\\t\\ttotp: {\\n\\t\\t\\t\\t\\tlogin: {\\n\\t\\t\\t\\t\\t\\tuser: userDescriptor,\\n\\t\\t\\t\\t\\t\\tpassword: Accounts._hashPassword(password),\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\tcode,\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t],\\n\\t\\tuserCallback(error) {\\n\\t\\t\\tif (!error) {\\n\\t\\t\\t\\tcallback?.(undefined);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (callback) {\\n\\t\\t\\t\\tcallback(error);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow error;\\n\\t\\t},\\n\\t});\\n};\\n\\nconst { loginWithPassword } = Meteor;\\n\\nMeteor.loginWithPassword = (\\n\\tuserDescriptor: { username: string } | { email: string } | { id: string } | string,\\n\\tpassword: string,\\n\\tcallback?: LoginCallback,\\n) => {\\n\\toverrideLoginMethod(loginWithPassword, [userDescriptor, password], callback, loginWithPasswordAndTOTP);\\n};\\n\",null],\"names\":[\"Accounts\",\"Meteor\",\"overrideLoginMethod\",\"module\",\"link\",\"v\",\"loginWithPasswordAndTOTP\",\"userDescriptor\",\"password\",\"code\",\"callback\",\"indexOf\",\"username\",\"email\",\"callLoginMethod\",\"methodArguments\",\"totp\",\"login\",\"user\",\"_hashPassword\",\"userCallback\",\"error\",\"undefined\",\"loginWithPassword\"],\"mappings\":\"2BAAAA,EAAgDC,EAAAC,EAAvCC,EAAUC,IAAA,CAAM,uBAAuB,CAAAJ,SAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,gBAAA,CAAAH,OAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,oCAAA,CAAAF,oBAAAG,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAgBhD,IAAMC,EAA2BA,CAChCC,EACAC,EACAC,EACAC,KAE8B,UAA1B,OAAOH,IAETA,EADGA,AAAgC,KAAhCA,EAAeI,OAAO,CAAC,KACT,CAAEC,SAAUL,CAAc,EAE1B,CAAEM,MAAON,CAAc,GAI1CP,EAASc,eAAe,CAAC,CACxBC,gBAAiB,CAChB,CACCC,KAAM,CACLC,MAAO,CACNC,KAAMX,EACNC,SAAUR,EAASmB,aAAa,CAACX,IAElCC,KAAAA,IAGF,CACDW,aAAaC,CAAK,EACjB,GAAI,CAACA,EAAO,CACXX,MAAAA,GAAAA,EAAWY,KAAAA,GACX,MACD,CAEA,GAAIZ,EAAU,CACbA,EAASW,GACT,MACD,CAEA,MAAMA,CACP,GAEF,EAEM,CAAEE,kBAAAA,CAAAA,CAAmB,CAAGtB,CAE9BA,CAAAA,EAAOsB,iBAAiB,CAAG,CAC1BhB,EACAC,EACAE,KAEAR,EAAoBqB,EAAmB,CAAChB,EAAgBC,EAAS,CAAEE,EAAUJ,EAC9E\"}"}