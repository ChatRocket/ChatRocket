{"code":"function module(e,t,i){i.export({useSplitRoomActions:()=>s});let s=(e,t)=>{let i=(null==t?void 0:t.size)||2;if(e.items.length<=i)return{buttons:e};let s={items:e.items.slice(0,i)},n=e.items.slice(i),l=n.findIndex(e=>e.variant),m=n.splice(l);return{buttons:s,menu:[{items:n},{items:m}]}}}","map":"{\"version\":3,\"sources\":[\"client/views/room/contextualBar/Info/hooks/useSplitRoomActions.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { RoomInfoActionsProps } from '../RoomInfo/RoomInfoActions';\\n\\ntype UseSplitRoomActionsOptions = {\\n\\tsize?: number;\\n};\\n\\n/**\\n *\\n * @param room\\n * @param options\\n * @returns If more than two room actions are enabled `menu.regular` will be a non-empty array\\n */\\nexport const useSplitRoomActions = (actions: RoomInfoActionsProps['actions'], options?: UseSplitRoomActionsOptions) => {\\n\\tconst size = options?.size || 2;\\n\\n\\tif (actions.items.length <= size) {\\n\\t\\treturn { buttons: actions };\\n\\t}\\n\\n\\tconst buttons = { items: actions.items.slice(0, size) };\\n\\tconst regular = actions.items.slice(size);\\n\\tconst firstDanger = regular.findIndex((item) => item.variant);\\n\\tconst danger = regular.splice(firstDanger);\\n\\n\\tconst menu = [{ items: regular }, { items: danger }];\\n\\n\\treturn { buttons, menu };\\n};\\n\",null],\"names\":[\"module\",\"export\",\"useSplitRoomActions\",\"actions\",\"options\",\"size\",\"items\",\"length\",\"buttons\",\"slice\",\"regular\",\"firstDanger\",\"findIndex\",\"item\",\"variant\",\"danger\",\"splice\",\"menu\"],\"mappings\":\"uBAMAA,EAAAC,MAAA,CAAA,CAAAC,oBAAAA,IAAAA,CAAA,GAMO,IAAMA,EAAsBA,CAACC,EAA0CC,KAC7E,IAAMC,EAAO,AAAAD,CAAAA,MAAAA,EAAO,KAAA,EAAPA,EAASC,IAAI,AAAJA,GAAQ,EAE9B,GAAIF,EAAQG,KAAK,CAACC,MAAM,EAAIF,EAC3B,MAAO,CAAEG,QAASL,CAAO,EAG1B,IAAMK,EAAU,CAAEF,MAAOH,EAAQG,KAAK,CAACG,KAAK,CAAC,EAAGJ,EAAK,EAC/CK,EAAUP,EAAQG,KAAK,CAACG,KAAK,CAACJ,GAC9BM,EAAcD,EAAQE,SAAS,CAAEC,GAASA,EAAKC,OAAO,EACtDC,EAASL,EAAQM,MAAM,CAACL,GAI9B,MAAO,CAAEH,QAAAA,EAASS,KAFL,CAAC,CAAEX,MAAOI,CAAO,EAAI,CAAEJ,MAAOS,CAAM,EAAG,AAE9B,CACvB\"}"}