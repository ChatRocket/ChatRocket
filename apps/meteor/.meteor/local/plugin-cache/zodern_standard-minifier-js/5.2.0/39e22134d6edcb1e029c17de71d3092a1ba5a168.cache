{"code":"function module(e,t,n){let i,l;n.export({useFilterActionsByContext:()=>o}),n.link(\"@rocket.chat/apps-engine/definition/ui\",{MessageActionContext(e){i=e}},0),n.link(\"react\",{useCallback(e){l=e}},1);let o=e=>l(t=>{var n;if(!e)return!0;let l=(null===(n=t.when)||void 0===n?void 0:n.messageActionContext)||Object.values(i),o=l.includes(e);return o},[e])}","map":"{\"version\":3,\"sources\":[\"client/hooks/useFilterActions.ts\",\"<anon>\"],\"sourcesContent\":[\"import { MessageActionContext } from '@rocket.chat/apps-engine/definition/ui';\\nimport type { IUIActionButton } from '@rocket.chat/apps-engine/definition/ui';\\nimport { useCallback } from 'react';\\n\\nexport const useFilterActionsByContext = (context: string | undefined) => {\\n\\treturn useCallback(\\n\\t\\t(action: IUIActionButton) => {\\n\\t\\t\\tif (!context) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst messageActionContext = action.when?.messageActionContext || Object.values(MessageActionContext);\\n\\t\\t\\tconst isContextMatch = messageActionContext.includes(context as MessageActionContext);\\n\\n\\t\\t\\treturn isContextMatch;\\n\\t\\t},\\n\\t\\t[context],\\n\\t);\\n};\\n\",null],\"names\":[\"MessageActionContext\",\"useCallback\",\"module\",\"export\",\"useFilterActionsByContext\",\"link\",\"v\",\"context\",\"action\",\"_action$when\",\"messageActionContext\",\"when\",\"Object\",\"values\",\"isContextMatch\",\"includes\"],\"mappings\":\"2BAA6EA,EAACC,EAA9EC,EAAOC,MAAE,CAAA,CAAAC,0BAA4BA,IAAAA,CAAA,GAAyCF,EAAAG,IAAA,CAAA,yCAAA,CAAAL,qBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,QAAA,CAAAJ,YAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAIvE,IAAMF,EAA6BG,GAClCN,EACLO,IAA2B,IAAAC,EAC3B,GAAI,CAACF,EACJ,MAAO,CAAA,EAGR,IAAMG,EAAuB,CAAA,AAAW,OAAXD,CAAAA,EAAAD,EAAOG,IAAI,AAAJA,GAAIF,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAXA,EAAaC,oBAAoB,AAApBA,GAAwBE,OAAOC,MAAM,CAACb,GAC1Ec,EAAiBJ,EAAqBK,QAAQ,CAACR,GAErD,OAAOO,CACR,EACA,CAACP,EAAQ\"}"}