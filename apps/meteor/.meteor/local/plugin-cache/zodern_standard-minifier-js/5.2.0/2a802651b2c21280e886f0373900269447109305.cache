{"code":"function module(e,o,t){let n,i,a,s,r,l,c,d,u,m;t.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){n=e},useTranslation(e){i=e},useToastMessageDispatch(e){a=e}},0),t.link(\"@tanstack/react-query\",{useQuery(e){s=e},useQueryClient(e){r=e}},1),t.link(\"react\",{default(e){l=e}},2),t.link(\"../../../components/GenericModal\",{default(e){c=e}},3),t.link(\"../../../components/message/content/location/MapView\",{default(e){d=e}},4),t.link(\"./getGeolocationPermission\",{getGeolocationPermission(e){u=e}},5),t.link(\"./getGeolocationPosition\",{getGeolocationPosition(e){m=e}},6),t.exportDefault(e=>{let{rid:o,tmid:t,onClose:g}=e,_=i(),f=a(),{data:p,isLoading:y}=s([\"geolocationPermission\"],u),{data:h}=s([\"geolocationPosition\",p],async()=>{if(!y&&\"prompt\"!==p&&\"denied\"!==p)return m()}),k=r(),C=n(\"POST\",\"/v1/chat.sendMessage\"),P=async()=>{try{let e=await m();k.setQueryData([\"geolocationPosition\",\"granted\"],e),k.setQueryData([\"geolocationPermission\"],\"granted\")}catch(e){k.setQueryData([\"geolocationPermission\"],()=>u)}};return y||\"prompt\"===p?l.createElement(c,{title:_(\"You_will_be_asked_for_permissions\"),confirmText:_(\"Continue\"),onConfirm:P,onClose:g,onCancel:g}):\"denied\"!==p&&h?l.createElement(c,{title:_(\"Share_Location_Title\"),confirmText:_(\"Share\"),onConfirm:()=>{if(!h)throw Error(\"Failed to load position\");try{C({message:{rid:o,tmid:t,location:{type:\"Point\",coordinates:[h.coords.longitude,h.coords.latitude]}}})}catch(e){f({type:\"error\",message:e})}finally{g()}},onClose:g,onCancel:g},l.createElement(d,{latitude:h.coords.latitude,longitude:h.coords.longitude})):l.createElement(c,{title:_(\"Cannot_share_your_location\"),confirmText:_(\"Ok\"),onConfirm:g,onClose:g},_(\"The_necessary_browser_permissions_for_location_sharing_are_not_granted\"))})}","map":"{\"version\":3,\"sources\":[\"client/views/room/ShareLocation/ShareLocationModal.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage, IRoom } from '@rocket.chat/core-typings';\\nimport { useEndpoint, useTranslation, useToastMessageDispatch } from '@rocket.chat/ui-contexts';\\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\\nimport type { ReactElement } from 'react';\\nimport React from 'react';\\n\\nimport GenericModal from '../../../components/GenericModal';\\nimport MapView from '../../../components/message/content/location/MapView';\\nimport { getGeolocationPermission } from './getGeolocationPermission';\\nimport { getGeolocationPosition } from './getGeolocationPosition';\\n\\ntype ShareLocationModalProps = {\\n\\trid: IRoom['_id'];\\n\\ttmid: IMessage['tmid'];\\n\\tonClose: () => void;\\n};\\n\\nconst ShareLocationModal = ({ rid, tmid, onClose }: ShareLocationModalProps): ReactElement => {\\n\\tconst t = useTranslation();\\n\\tconst dispatchToast = useToastMessageDispatch();\\n\\tconst { data: permissionData, isLoading: permissionLoading } = useQuery(['geolocationPermission'], getGeolocationPermission);\\n\\tconst { data: positionData } = useQuery(['geolocationPosition', permissionData], async () => {\\n\\t\\tif (permissionLoading || permissionData === 'prompt' || permissionData === 'denied') {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\treturn getGeolocationPosition();\\n\\t});\\n\\n\\tconst queryClient = useQueryClient();\\n\\n\\tconst sendMessage = useEndpoint('POST', '/v1/chat.sendMessage');\\n\\n\\tconst onConfirm = (): void => {\\n\\t\\tif (!positionData) {\\n\\t\\t\\tthrow new Error('Failed to load position');\\n\\t\\t}\\n\\t\\ttry {\\n\\t\\t\\tsendMessage({\\n\\t\\t\\t\\tmessage: {\\n\\t\\t\\t\\t\\trid,\\n\\t\\t\\t\\t\\ttmid,\\n\\t\\t\\t\\t\\tlocation: {\\n\\t\\t\\t\\t\\t\\ttype: 'Point',\\n\\t\\t\\t\\t\\t\\tcoordinates: [positionData.coords.longitude, positionData.coords.latitude],\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t},\\n\\t\\t\\t});\\n\\t\\t} catch (error) {\\n\\t\\t\\tdispatchToast({ type: 'error', message: error });\\n\\t\\t} finally {\\n\\t\\t\\tonClose();\\n\\t\\t}\\n\\t};\\n\\n\\tconst onConfirmRequestLocation = async (): Promise<void> => {\\n\\t\\ttry {\\n\\t\\t\\tconst position = await getGeolocationPosition();\\n\\t\\t\\tqueryClient.setQueryData(['geolocationPosition', 'granted'], position);\\n\\t\\t\\tqueryClient.setQueryData(['geolocationPermission'], 'granted');\\n\\t\\t} catch (e) {\\n\\t\\t\\tqueryClient.setQueryData(['geolocationPermission'], () => getGeolocationPermission);\\n\\t\\t}\\n\\t};\\n\\n\\tif (permissionLoading || permissionData === 'prompt') {\\n\\t\\treturn (\\n\\t\\t\\t<GenericModal\\n\\t\\t\\t\\ttitle={t('You_will_be_asked_for_permissions')}\\n\\t\\t\\t\\tconfirmText={t('Continue')}\\n\\t\\t\\t\\tonConfirm={onConfirmRequestLocation}\\n\\t\\t\\t\\tonClose={onClose}\\n\\t\\t\\t\\tonCancel={onClose}\\n\\t\\t\\t/>\\n\\t\\t);\\n\\t}\\n\\n\\tif (permissionData === 'denied' || !positionData) {\\n\\t\\treturn (\\n\\t\\t\\t<GenericModal title={t('Cannot_share_your_location')} confirmText={t('Ok')} onConfirm={onClose} onClose={onClose}>\\n\\t\\t\\t\\t{t('The_necessary_browser_permissions_for_location_sharing_are_not_granted')}\\n\\t\\t\\t</GenericModal>\\n\\t\\t);\\n\\t}\\n\\n\\treturn (\\n\\t\\t<GenericModal title={t('Share_Location_Title')} confirmText={t('Share')} onConfirm={onConfirm} onClose={onClose} onCancel={onClose}>\\n\\t\\t\\t<MapView latitude={positionData.coords.latitude} longitude={positionData.coords.longitude} />\\n\\t\\t</GenericModal>\\n\\t);\\n};\\n\\nexport default ShareLocationModal;\\n\",null],\"names\":[\"useEndpoint\",\"useTranslation\",\"useToastMessageDispatch\",\"useQuery\",\"useQueryClient\",\"React\",\"GenericModal\",\"MapView\",\"getGeolocationPermission\",\"getGeolocationPosition\",\"module\",\"link\",\"v\",\"default\",\"exportDefault\",\"_ref\",\"rid\",\"tmid\",\"onClose\",\"t\",\"dispatchToast\",\"data\",\"permissionData\",\"isLoading\",\"permissionLoading\",\"positionData\",\"queryClient\",\"sendMessage\",\"onConfirmRequestLocation\",\"position\",\"setQueryData\",\"e\",\"createElement\",\"title\",\"confirmText\",\"onConfirm\",\"onCancel\",\"Error\",\"message\",\"location\",\"type\",\"coordinates\",\"coords\",\"longitude\",\"latitude\",\"error\"],\"mappings\":\"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\"}"}