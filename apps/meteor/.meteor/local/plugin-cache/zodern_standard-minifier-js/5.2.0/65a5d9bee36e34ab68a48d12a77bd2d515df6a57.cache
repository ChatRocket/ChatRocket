{"code":"function module(e,n,o){o.link(\"@babel/runtime/regenerator\",{default:function(e){t=e}},0),o.export({useBlockUserAction:function(){return b}}),o.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback:function(e){r=e}},0),o.link(\"@rocket.chat/ui-contexts\",{useTranslation:function(e){c=e},useMethod:function(e){s=e},useToastMessageDispatch:function(e){i=e},useUserId:function(e){u=e},useUserSubscription:function(e){a=e},useUserRoom:function(e){l=e}},1),o.link(\"react\",{useMemo:function(e){k=e}},2),o.link(\"../../../lib/getRoomDirectives\",{getRoomDirectives:function(e){f=e}},3);var t,r,c,s,i,u,a,l,k,f,b=function(e,n){var o=c(),b=i(),d=a(n),m=u(),p=e._id,v=l(n);if(!v)throw Error(\"Room not provided\");var U=f({room:v,showingUserId:p,userSubscription:d}).roomCanBlock,h=null==d?void 0:d.blocker,g=s(h?\"unblockUser\":\"blockUser\"),x=r(function(){return t.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t.awrap(g({rid:n,blocked:p}));case 3:b({type:\"success\",message:o(h?\"User_is_unblocked\":\"User_is_blocked\")}),e.next=9;break;case 6:e.prev=6,e.t0=e.catch(0),b({type:\"error\",message:e.t0});case 9:case\"end\":return e.stop()}},null,null,[[0,6]],Promise)});return k(function(){return U&&p!==m?{content:o(h?\"Unblock\":\"Block\"),icon:\"ban\",onClick:x}:void 0},[h,m,U,o,x,p])}}","map":"{\"version\":3,\"sources\":[\"client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, IUser } from '@rocket.chat/core-typings';\\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport { useTranslation, useMethod, useToastMessageDispatch, useUserId, useUserSubscription, useUserRoom } from '@rocket.chat/ui-contexts';\\nimport { useMemo } from 'react';\\n\\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\\nimport type { UserInfoAction } from '../useUserInfoActions';\\n\\nexport const useBlockUserAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\\n\\tconst t = useTranslation();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst currentSubscription = useUserSubscription(rid);\\n\\tconst ownUserId = useUserId();\\n\\tconst { _id: uid } = user;\\n\\tconst room = useUserRoom(rid);\\n\\n\\tif (!room) {\\n\\t\\tthrow Error('Room not provided');\\n\\t}\\n\\n\\tconst { roomCanBlock } = getRoomDirectives({ room, showingUserId: uid, userSubscription: currentSubscription });\\n\\n\\tconst isUserBlocked = currentSubscription?.blocker;\\n\\tconst toggleBlock = useMethod(isUserBlocked ? 'unblockUser' : 'blockUser');\\n\\n\\tconst toggleBlockUserAction = useMutableCallback(async () => {\\n\\t\\ttry {\\n\\t\\t\\tawait toggleBlock({ rid, blocked: uid });\\n\\t\\t\\tdispatchToastMessage({\\n\\t\\t\\t\\ttype: 'success',\\n\\t\\t\\t\\tmessage: t(isUserBlocked ? 'User_is_unblocked' : 'User_is_blocked'),\\n\\t\\t\\t});\\n\\t\\t} catch (error: unknown) {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t}\\n\\t});\\n\\n\\tconst toggleBlockUserOption = useMemo(\\n\\t\\t() =>\\n\\t\\t\\troomCanBlock && uid !== ownUserId\\n\\t\\t\\t\\t? {\\n\\t\\t\\t\\t\\t\\tcontent: t(isUserBlocked ? 'Unblock' : 'Block'),\\n\\t\\t\\t\\t\\t\\ticon: 'ban' as const,\\n\\t\\t\\t\\t\\t\\tonClick: toggleBlockUserAction,\\n\\t\\t\\t\\t  }\\n\\t\\t\\t\\t: undefined,\\n\\t\\t[isUserBlocked, ownUserId, roomCanBlock, t, toggleBlockUserAction, uid],\\n\\t);\\n\\n\\treturn toggleBlockUserOption;\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"export\",\"useBlockUserAction\",\"useMutableCallback\",\"useTranslation\",\"useMethod\",\"useToastMessageDispatch\",\"useUserId\",\"useUserSubscription\",\"useUserRoom\",\"useMemo\",\"getRoomDirectives\",\"user\",\"rid\",\"t\",\"dispatchToastMessage\",\"currentSubscription\",\"ownUserId\",\"uid\",\"_id\",\"room\",\"Error\",\"roomCanBlock\",\"_getRoomDirectives\",\"showingUserId\",\"userSubscription\",\"isUserBlocked\",\"blocker\",\"toggleBlock\",\"toggleBlockUserAction\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"blocked\",\"type\",\"message\",\"t0\",\"stop\",\"Promise\",\"content\",\"icon\",\"onClick\",\"undefined\"],\"mappings\":\"uBACSA,EAAoBC,IAAM,CAAA,6BAA8B,CAAAC,QAAA,SAAAC,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAAjEH,EAAOK,MAAE,CAAA,CAAAC,mBAAoB,WAAM,OAAAA,CAA8B,CAAA,GAAAN,EAAAC,IAAA,CAAA,8BAAA,CAAAM,mBAAA,SAAAJ,CAAA,EAAAI,EAAAJ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2BAAA,CAAAO,eAAA,SAAAL,CAAA,EAAAK,EAAAL,CAAA,EAAAM,UAAA,SAAAN,CAAA,EAAAM,EAAAN,CAAA,EAAAO,wBAAA,SAAAP,CAAA,EAAAO,EAAAP,CAAA,EAAAQ,UAAA,SAAAR,CAAA,EAAAQ,EAAAR,CAAA,EAAAS,oBAAA,SAAAT,CAAA,EAAAS,EAAAT,CAAA,EAAAU,YAAA,SAAAV,CAAA,EAAAU,EAAAV,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAa,QAAA,SAAAX,CAAA,EAAAW,EAAAX,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,iCAAA,CAAAc,kBAAA,SAAAZ,CAAA,EAAAY,EAAAZ,CAAA,CAAA,EAAA,GAO1D,IAPPC,EAAiEG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAOpDT,EAAqB,SAACU,CAAqC,CAAEC,CAAiB,EAC1F,IAAMC,EAAIV,IACJW,EAAuBT,IACvBU,EAAsBR,EAAoBK,GAC1CI,EAAYV,IACLW,EAAQN,EAAbO,GAAG,CACLC,EAAOX,EAAYI,GAEzB,GAAI,CAACO,EACJ,MAAMC,MAAM,qBAGb,IAAQC,EAAYC,AAAKZ,EAAkB,CAAES,KAAAA,EAAMI,cAAeN,EAAKO,iBAAkBT,CAAmB,GAApGM,YAAY,CAEdI,EAAgBV,MAAAA,EAAmB,KAAA,EAAnBA,EAAqBW,OAAO,CAC5CC,EAAcvB,EAAUqB,EAAgB,cAAgB,aAExDG,EAAwB1B,EAAmB,WAAA,OAAAH,EAAA8B,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAC,IAAA,CAAA,EAAAD,EAAAE,IAAA,CAAA,EAAAjC,EAAAkC,KAAA,CAEzCN,EAAY,CAAEf,IAAAA,EAAKsB,QAASjB,CAAG,GAAG,MAAA,EACxCH,EAAqB,CACpBqB,KAAM,UACNC,QAASvB,EAAEY,EAAgB,oBAAsB,qBAC/CK,EAAAE,IAAA,CAAA,EAAA,KAAA,MAAA,EAAAF,EAAAC,IAAA,CAAA,EAAAD,EAAAO,EAAA,CAAAP,EAAA,KAAA,CAAA,GAEHhB,EAAqB,CAAEqB,KAAM,QAASC,QAAON,EAAAO,EAAAA,AAAO,EAAI,MAAA,EAAA,IAAA,MAAA,OAAAP,EAAAQ,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAAC,QAAA,GAgB1D,OAZ8B9B,EAC7B,WAAA,OACCY,GAAgBJ,IAAQD,EACrB,CACAwB,QAAS3B,EAAEY,EAAgB,UAAY,SACvCgB,KAAM,MACNC,QAASd,GAETe,KAAAA,CAAS,EACb,CAAClB,EAAeT,EAAWK,EAAcR,EAAGe,EAAuBX,EAAI,CAIzE\"}"}