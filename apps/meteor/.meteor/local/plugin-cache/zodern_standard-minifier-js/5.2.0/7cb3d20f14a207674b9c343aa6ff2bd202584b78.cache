{"code":"function module(n,t,e){e.export({useFilterActionsByContext:function(){return u}}),e.link(\"@rocket.chat/apps-engine/definition/ui\",{MessageActionContext:function(n){i=n}},0),e.link(\"react\",{useCallback:function(n){o=n}},1);var i,o,u=function(n){return o(function(t){var e;return!n||((null===(e=t.when)||void 0===e?void 0:e.messageActionContext)||Object.values(i)).includes(n)},[n])}}","map":"{\"version\":3,\"sources\":[\"client/hooks/useFilterActions.ts\",\"<anon>\"],\"sourcesContent\":[\"import { MessageActionContext } from '@rocket.chat/apps-engine/definition/ui';\\nimport type { IUIActionButton } from '@rocket.chat/apps-engine/definition/ui';\\nimport { useCallback } from 'react';\\n\\nexport const useFilterActionsByContext = (context: string | undefined) => {\\n\\treturn useCallback(\\n\\t\\t(action: IUIActionButton) => {\\n\\t\\t\\tif (!context) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst messageActionContext = action.when?.messageActionContext || Object.values(MessageActionContext);\\n\\t\\t\\tconst isContextMatch = messageActionContext.includes(context as MessageActionContext);\\n\\n\\t\\t\\treturn isContextMatch;\\n\\t\\t},\\n\\t\\t[context],\\n\\t);\\n};\\n\",null],\"names\":[\"module\",\"export\",\"useFilterActionsByContext\",\"link\",\"MessageActionContext\",\"v\",\"useCallback\",\"context\",\"action\",\"_action$when\",\"messageActionContext\",\"when\",\"Object\",\"values\",\"includes\"],\"mappings\":\"uBAAAA,EAAOC,MAAE,CAAA,CAAAC,0BAA4B,WAAA,OAAAA,CAAyC,CAAA,GAAAF,EAAAG,IAAA,CAAA,yCAAA,CAAAC,qBAAA,SAAAC,CAAA,EAAAD,EAAAC,CAAA,CAAA,EAAA,GAAAL,EAAAG,IAAA,CAAA,QAAA,CAAAG,YAAA,SAAAD,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAIvE,IAJuED,EAAAE,EAIjEJ,EAA4B,SAACK,CAA2B,EACpE,OAAOD,EACN,SAACE,CAAuB,MAAIC,QAC3B,CAAKF,GAKkBG,AADM,CAAA,CAAA,AAAW,OAAXD,CAAAA,EAAAD,EAAOG,IAAI,AAAJA,GAAIF,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAXA,EAAaC,oBAAoB,AAApBA,GAAwBE,OAAOC,MAAM,CAACT,EAAoB,EACxDU,QAAQ,CAACP,EAGtD,EACA,CAACA,EAAQ,CAEX\"}"}