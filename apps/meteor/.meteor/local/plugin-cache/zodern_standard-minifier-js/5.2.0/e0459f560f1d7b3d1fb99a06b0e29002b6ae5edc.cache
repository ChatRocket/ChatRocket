{"code":"function module(e,t,a){let r,s,n,i,u,o,c;a.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){r=e}},0),a.export({useUpdateAvatar:()=>v}),a.link(\"@rocket.chat/ui-contexts\",{useToastMessageDispatch(e){s=e},useMethod(e){n=e}},0),a.link(\"react\",{useCallback(e){i=e}},1),a.link(\"react-i18next\",{useTranslation(e){u=e}},2),a.link(\"./useEndpointAction\",{useEndpointAction(e){o=e}},3),a.link(\"./useEndpointUpload\",{useEndpointUpload(e){c=e}},4);let l=e=>\"reset\"===e,p=e=>!l(e)&&\"object\"==typeof e&&\"service\"in e,d=e=>!l(e)&&\"object\"==typeof e&&\"avatarUrl\"in e,v=(e,t)=>{let{t:a}=u(),v=d(e)?e.avatarUrl:\"\",f=a(\"Avatar_changed_successfully\"),k=n(\"setAvatarFromService\"),A=s(),y=c(\"/v1/users.setAvatar\",f),b=o(\"POST\",\"/v1/users.setAvatar\",{successMessage:f}),h=o(\"POST\",\"/v1/users.resetAvatar\",{successMessage:f}),m=i(async()=>{if(l(e))return h({userId:t});if(d(e))return b(r({userId:t},v&&{avatarUrl:v}));if(p(e)){let{blob:t,contentType:a,service:r}=e;try{await k(t,a,r),A({type:\"success\",message:f})}catch(e){A({type:\"error\",message:e})}return}if(e instanceof FormData)return e.set(\"userId\",t),y(e)},[e,v,A,h,y,b,k,f,t]);return m}}","map":"{\"version\":3,\"sources\":[\"client/hooks/useUpdateAvatar.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { AvatarObject, AvatarServiceObject, AvatarReset, AvatarUrlObj, IUser } from '@rocket.chat/core-typings';\\nimport { useToastMessageDispatch, useMethod } from '@rocket.chat/ui-contexts';\\nimport { useCallback } from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport { useEndpointAction } from './useEndpointAction';\\nimport { useEndpointUpload } from './useEndpointUpload';\\n\\nconst isAvatarReset = (avatarObj: AvatarObject): avatarObj is AvatarReset => avatarObj === 'reset';\\nconst isServiceObject = (avatarObj: AvatarObject): avatarObj is AvatarServiceObject =>\\n\\t!isAvatarReset(avatarObj) && typeof avatarObj === 'object' && 'service' in avatarObj;\\nconst isAvatarUrl = (avatarObj: AvatarObject): avatarObj is AvatarUrlObj =>\\n\\t!isAvatarReset(avatarObj) && typeof avatarObj === 'object' && 'service' && 'avatarUrl' in avatarObj;\\n\\nexport const useUpdateAvatar = (\\n\\tavatarObj: AvatarObject,\\n\\tuserId: IUser['_id'],\\n): (() => Promise<{ success: boolean } | null | undefined>) => {\\n\\tconst { t } = useTranslation();\\n\\tconst avatarUrl = isAvatarUrl(avatarObj) ? avatarObj.avatarUrl : '';\\n\\n\\tconst successMessage = t('Avatar_changed_successfully');\\n\\tconst setAvatarFromService = useMethod('setAvatarFromService');\\n\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\n\\tconst saveAvatarAction = useEndpointUpload('/v1/users.setAvatar', successMessage);\\n\\tconst saveAvatarUrlAction = useEndpointAction('POST', '/v1/users.setAvatar', { successMessage });\\n\\tconst resetAvatarAction = useEndpointAction('POST', '/v1/users.resetAvatar', { successMessage });\\n\\n\\tconst updateAvatar = useCallback(async () => {\\n\\t\\tif (isAvatarReset(avatarObj)) {\\n\\t\\t\\treturn resetAvatarAction({\\n\\t\\t\\t\\tuserId,\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\tif (isAvatarUrl(avatarObj)) {\\n\\t\\t\\treturn saveAvatarUrlAction({\\n\\t\\t\\t\\tuserId,\\n\\t\\t\\t\\t...(avatarUrl && { avatarUrl }),\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\tif (isServiceObject(avatarObj)) {\\n\\t\\t\\tconst { blob, contentType, service } = avatarObj;\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait setAvatarFromService(blob, contentType, service);\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: successMessage });\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t}\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tif (avatarObj instanceof FormData) {\\n\\t\\t\\tavatarObj.set('userId', userId);\\n\\t\\t\\treturn saveAvatarAction(avatarObj);\\n\\t\\t}\\n\\t}, [\\n\\t\\tavatarObj,\\n\\t\\tavatarUrl,\\n\\t\\tdispatchToastMessage,\\n\\t\\tresetAvatarAction,\\n\\t\\tsaveAvatarAction,\\n\\t\\tsaveAvatarUrlAction,\\n\\t\\tsetAvatarFromService,\\n\\t\\tsuccessMessage,\\n\\t\\tuserId,\\n\\t]);\\n\\n\\treturn updateAvatar;\\n};\\n\",null],\"names\":[\"_objectSpread\",\"useToastMessageDispatch\",\"useMethod\",\"useCallback\",\"useTranslation\",\"useEndpointAction\",\"useEndpointUpload\",\"module\",\"link\",\"default\",\"v\",\"export\",\"useUpdateAvatar\",\"isAvatarReset\",\"avatarObj\",\"isServiceObject\",\"isAvatarUrl\",\"userId\",\"t\",\"avatarUrl\",\"successMessage\",\"setAvatarFromService\",\"dispatchToastMessage\",\"saveAvatarAction\",\"saveAvatarUrlAction\",\"resetAvatarAction\",\"updateAvatar\",\"blob\",\"contentType\",\"service\",\"type\",\"message\",\"error\",\"FormData\",\"set\"],\"mappings\":\"2BACAA,EAAmDC,EAA2BC,EAAAC,EAAAC,EAAAC,EAAAC,EAArEC,EAAAC,IAAA,CAAA,uCAA0C,CAAAC,QAA2BC,CAAA,EAAAV,EAAAU,CAAA,CAAA,EAAA,GAA9EH,EAAOI,MAAE,CAAA,CAAAC,gBAAAA,IAAyBA,CAAW,GAAiCL,EAAAC,IAAA,CAAA,2BAAA,CAAAP,wBAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,UAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAL,YAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,gBAAA,CAAAJ,eAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,sBAAA,CAAAH,kBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,sBAAA,CAAAF,kBAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAO9E,IAAMG,EAAiBC,GAAsDA,AAAc,UAAdA,EACvEC,EAAmBD,GACxB,CAACD,EAAcC,IAAc,AAAqB,UAArB,OAAOA,GAA0B,YAAaA,EACtEE,EAAeF,GACpB,CAACD,EAAcC,IAAc,AAAqB,UAArB,OAAOA,GAAuC,cAAeA,EAE9EF,EAAkBA,CAC9BE,EACAG,KAEA,GAAM,CAAEC,EAAAA,CAAAA,CAAG,CAAGd,IACRe,EAAYH,EAAYF,GAAaA,EAAUK,SAAS,CAAG,GAE3DC,EAAiBF,EAAE,+BACnBG,EAAuBnB,EAAU,wBAEjCoB,EAAuBrB,IAEvBsB,EAAmBjB,EAAkB,sBAAuBc,GAC5DI,EAAsBnB,EAAkB,OAAQ,sBAAuB,CAAEe,eAAAA,CAAc,GACvFK,EAAoBpB,EAAkB,OAAQ,wBAAyB,CAAEe,eAAAA,CAAc,GAEvFM,EAAevB,EAAY,UAChC,GAAIU,EAAcC,GACjB,OAAOW,EAAkB,CACxBR,OAAAA,IAGF,GAAID,EAAYF,GACf,OAAOU,EAAmBxB,EAAA,CACzBiB,OAAAA,CAAM,EACFE,GAAa,CAAEA,UAAAA,CAAS,IAG9B,GAAIJ,EAAgBD,GAAY,CAC/B,GAAM,CAAEa,KAAAA,CAAI,CAAEC,YAAAA,CAAW,CAAEC,QAAAA,CAAAA,CAAS,CAAGf,EACvC,GAAI,CACH,MAAMO,EAAqBM,EAAMC,EAAaC,GAC9CP,EAAqB,CAAEQ,KAAM,UAAWC,QAASX,CAAc,EAChE,CAAE,MAAOY,EAAO,CACfV,EAAqB,CAAEQ,KAAM,QAASC,QAASC,CAAK,EACrD,CACA,MACD,CACA,GAAIlB,aAAqBmB,SAExB,OADAnB,EAAUoB,GAAG,CAAC,SAAUjB,GACjBM,EAAiBT,EAE1B,EAAG,CACFA,EACAK,EACAG,EACAG,EACAF,EACAC,EACAH,EACAD,EACAH,EACA,EAED,OAAOS,CACR\"}"}