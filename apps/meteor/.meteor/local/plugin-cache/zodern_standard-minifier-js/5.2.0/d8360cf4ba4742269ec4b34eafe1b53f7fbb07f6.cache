{"code":"function module(e,t,n){let o,a,l,r,s,i,u,c,d,_,p,b;n.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){o=e}},0),n.export({useStatusSection:()=>h}),n.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){a=e},useTranslation(e){l=e}},0),n.link(\"@tanstack/react-query\",{useQuery(e){r=e}},1),n.link(\"react\",{useMemo(e){s=e}},2),n.link(\"../../../components/dashboards/periods\",{getPeriodRange(e){i=e}},3),n.link(\"../../../components/dashboards/usePeriodSelectorStorage\",{usePeriodSelectorStorage(e){u=e}},4),n.link(\"../components/constants\",{COLORS(e){c=e},PERIOD_OPTIONS(e){d=e}},5),n.link(\"../utils/formatPeriodDescription\",{formatPeriodDescription(e){_=e}},6),n.link(\"../utils/round\",{round(e){p=e}},7),n.link(\"./useDefaultDownload\",{useDefaultDownload(e){b=e}},8);let S={Open:{label:\"Omnichannel_Reports_Status_Open\",color:c.success},Queued:{label:\"Queued\",color:c.warning2},On_Hold:{label:\"On_Hold\",color:c.warning},Closed:{label:\"Omnichannel_Reports_Status_Closed\",color:c.danger}},m=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2?arguments[2]:void 0;return e.map(e=>{let a=S[e.label],l=t>0?p(e.value/t*100):0,r=n(a.label);return o(o({},e),{},{id:e.label,label:\"\".concat(r,\" \").concat(e.value,\" (\").concat(l,\"%)\"),rawLabel:r,color:a.color})})},h=()=>{let e=l(),[t,n]=u(\"reports-status-period\",d),c=a(\"GET\",\"/v1/livechat/analytics/dashboards/conversations-by-status\"),{start:p,end:S}=i(t),{data:{data:h,total:O}={data:[],total:0},isLoading:g,isError:v,isSuccess:k,refetch:y}=r([\"omnichannel-reports\",\"conversations-by-status\",t,e],async()=>{let t=await c({start:p.toISOString(),end:S.toISOString()});return o(o({},t),{},{data:m(t.data,t.total,e)})},{refetchInterval:3e5}),f=e(\"Conversations_by_status\"),D=e(\"__count__conversations__period__\",{count:null!=O?O:0,period:_(t,e)}),P=e(\"Omnichannel_Reports_Status_Empty_Subtitle\"),R=b({columnName:e(\"Status\"),title:f,data:h,period:t});return s(()=>({id:\"conversations-by-status\",title:f,subtitle:D,emptyStateSubtitle:P,data:h,total:O,period:t,periodSelectorProps:n,downloadProps:R,isLoading:g,isError:v,isDataFound:k&&h.length>0,onRetry:y}),[f,D,P,h,O,t,n,R,g,v,k,y])}}","map":"{\"version\":3,\"sources\":[\"client/omnichannel/reports/hooks/useStatusSection.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { TranslationContextValue, TranslationKey } from '@rocket.chat/ui-contexts';\\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\\nimport { useQuery } from '@tanstack/react-query';\\nimport { useMemo } from 'react';\\n\\nimport { getPeriodRange } from '../../../components/dashboards/periods';\\nimport { usePeriodSelectorStorage } from '../../../components/dashboards/usePeriodSelectorStorage';\\nimport { COLORS, PERIOD_OPTIONS } from '../components/constants';\\nimport { formatPeriodDescription } from '../utils/formatPeriodDescription';\\nimport { round } from '../utils/round';\\nimport { useDefaultDownload } from './useDefaultDownload';\\n\\nconst STATUSES: Record<string, { label: TranslationKey; color: string }> = {\\n\\tOpen: { label: 'Omnichannel_Reports_Status_Open', color: COLORS.success },\\n\\tQueued: { label: 'Queued', color: COLORS.warning2 },\\n\\tOn_Hold: { label: 'On_Hold', color: COLORS.warning },\\n\\tClosed: { label: 'Omnichannel_Reports_Status_Closed', color: COLORS.danger },\\n};\\n\\nconst formatChartData = (data: { label: string; value: number }[] | undefined = [], total = 0, t: TranslationContextValue['translate']) => {\\n\\treturn data.map((item) => {\\n\\t\\tconst status = STATUSES[item.label];\\n\\t\\tconst percentage = total > 0 ? round((item.value / total) * 100) : 0;\\n\\t\\tconst label = t(status.label);\\n\\t\\treturn {\\n\\t\\t\\t...item,\\n\\t\\t\\tid: item.label,\\n\\t\\t\\tlabel: `${label} ${item.value} (${percentage}%)`,\\n\\t\\t\\trawLabel: label,\\n\\t\\t\\tcolor: status.color,\\n\\t\\t};\\n\\t});\\n};\\n\\nexport const useStatusSection = () => {\\n\\tconst t = useTranslation();\\n\\tconst [period, periodSelectorProps] = usePeriodSelectorStorage('reports-status-period', PERIOD_OPTIONS);\\n\\tconst getConversationsByStatus = useEndpoint('GET', '/v1/livechat/analytics/dashboards/conversations-by-status');\\n\\tconst { start, end } = getPeriodRange(period);\\n\\n\\tconst {\\n\\t\\tdata: { data, total } = { data: [], total: 0 },\\n\\t\\tisLoading,\\n\\t\\tisError,\\n\\t\\tisSuccess,\\n\\t\\trefetch,\\n\\t} = useQuery(\\n\\t\\t['omnichannel-reports', 'conversations-by-status', period, t],\\n\\t\\tasync () => {\\n\\t\\t\\tconst response = await getConversationsByStatus({ start: start.toISOString(), end: end.toISOString() });\\n\\n\\t\\t\\treturn { ...response, data: formatChartData(response.data, response.total, t) };\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\trefetchInterval: 5 * 60 * 1000,\\n\\t\\t},\\n\\t);\\n\\n\\tconst title = t('Conversations_by_status');\\n\\tconst subtitle = t('__count__conversations__period__', {\\n\\t\\tcount: total ?? 0,\\n\\t\\tperiod: formatPeriodDescription(period, t),\\n\\t});\\n\\tconst emptyStateSubtitle = t('Omnichannel_Reports_Status_Empty_Subtitle');\\n\\n\\tconst downloadProps = useDefaultDownload({ columnName: t('Status'), title, data, period });\\n\\n\\treturn useMemo(\\n\\t\\t() => ({\\n\\t\\t\\tid: 'conversations-by-status',\\n\\t\\t\\ttitle,\\n\\t\\t\\tsubtitle,\\n\\t\\t\\temptyStateSubtitle,\\n\\t\\t\\tdata,\\n\\t\\t\\ttotal,\\n\\t\\t\\tperiod,\\n\\t\\t\\tperiodSelectorProps,\\n\\t\\t\\tdownloadProps,\\n\\t\\t\\tisLoading,\\n\\t\\t\\tisError,\\n\\t\\t\\tisDataFound: isSuccess && data.length > 0,\\n\\t\\t\\tonRetry: refetch,\\n\\t\\t}),\\n\\t\\t[title, subtitle, emptyStateSubtitle, data, total, period, periodSelectorProps, downloadProps, isLoading, isError, isSuccess, refetch],\\n\\t);\\n};\\n\",null],\"names\":[\"_objectSpread\",\"useEndpoint\",\"useTranslation\",\"useQuery\",\"useMemo\",\"getPeriodRange\",\"usePeriodSelectorStorage\",\"COLORS\",\"PERIOD_OPTIONS\",\"formatPeriodDescription\",\"round\",\"useDefaultDownload\",\"module\",\"link\",\"default\",\"v\",\"export\",\"useStatusSection\",\"STATUSES\",\"Open\",\"label\",\"color\",\"success\",\"Queued\",\"warning2\",\"On_Hold\",\"warning\",\"Closed\",\"danger\",\"formatChartData\",\"data\",\"arguments\",\"length\",\"undefined\",\"total\",\"t\",\"map\",\"item\",\"status\",\"percentage\",\"value\",\"id\",\"concat\",\"rawLabel\",\"period\",\"periodSelectorProps\",\"getConversationsByStatus\",\"start\",\"end\",\"isLoading\",\"isError\",\"isSuccess\",\"refetch\",\"response\",\"toISOString\",\"refetchInterval\",\"title\",\"subtitle\",\"count\",\"emptyStateSubtitle\",\"downloadProps\",\"columnName\",\"isDataFound\",\"onRetry\"],\"mappings\":\"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\"}"}