{"code":"function module(t,e,n){function r(t,e){void 0===e&&(e={});for(var n=function(t){for(var e=[],n=0;n<t.length;){var r=t[n];if(\"*\"===r||\"+\"===r||\"?\"===r){e.push({type:\"MODIFIER\",index:n,value:t[n++]});continue}if(\"\\\\\"===r){e.push({type:\"ESCAPED_CHAR\",index:n++,value:t[n++]});continue}if(\"{\"===r){e.push({type:\"OPEN\",index:n,value:t[n++]});continue}if(\"}\"===r){e.push({type:\"CLOSE\",index:n,value:t[n++]});continue}if(\":\"===r){for(var o=\"\",i=n+1;i<t.length;){var a=t.charCodeAt(i);if(a>=48&&a<=57||a>=65&&a<=90||a>=97&&a<=122||95===a){o+=t[i++];continue}break}if(!o)throw TypeError(\"Missing parameter name at \".concat(n));e.push({type:\"NAME\",index:n,value:o}),n=i;continue}if(\"(\"===r){var c=1,f=\"\",i=n+1;if(\"?\"===t[i])throw TypeError('Pattern cannot start with \"?\" at '.concat(i));for(;i<t.length;){if(\"\\\\\"===t[i]){f+=t[i++]+t[i++];continue}if(\")\"===t[i]){if(0==--c){i++;break}}else if(\"(\"===t[i]&&(c++,\"?\"!==t[i+1]))throw TypeError(\"Capturing groups are not allowed at \".concat(i));f+=t[i++]}if(c)throw TypeError(\"Unbalanced pattern at \".concat(n));if(!f)throw TypeError(\"Missing pattern at \".concat(n));e.push({type:\"PATTERN\",index:n,value:f}),n=i;continue}e.push({type:\"CHAR\",index:n,value:t[n++]})}return e.push({type:\"END\",index:n,value:\"\"}),e}(t),r=e.prefixes,o=void 0===r?\"./\":r,i=e.delimiter,a=void 0===i?\"/#?\":i,c=[],u=0,p=0,d=\"\",v=function(t){if(p<n.length&&n[p].type===t)return n[p++].value},s=function(t){var e=v(t);if(void 0!==e)return e;var r=n[p],o=r.type,i=r.index;throw TypeError(\"Unexpected \".concat(o,\" at \").concat(i,\", expected \").concat(t))},h=function(){for(var t,e=\"\";t=v(\"CHAR\")||v(\"ESCAPED_CHAR\");)e+=t;return e},x=function(t){for(var e=0;e<a.length;e++){var n=a[e];if(t.indexOf(n)>-1)return!0}return!1},m=function(t){var e=c[c.length-1],n=t||(e&&\"string\"==typeof e?e:\"\");if(e&&!n)throw TypeError('Must have text between two parameters, missing text after \"'.concat(e.name,'\"'));return!n||x(n)?\"[^\".concat(f(a),\"]+?\"):\"(?:(?!\".concat(f(n),\")[^\").concat(f(a),\"])+?\")};p<n.length;){var l=v(\"CHAR\"),E=v(\"NAME\"),g=v(\"PATTERN\");if(E||g){var y=l||\"\";-1===o.indexOf(y)&&(d+=y,y=\"\"),d&&(c.push(d),d=\"\"),c.push({name:E||u++,prefix:y,suffix:\"\",pattern:g||m(y),modifier:v(\"MODIFIER\")||\"\"});continue}var T=l||v(\"ESCAPED_CHAR\");if(T){d+=T;continue}if(d&&(c.push(d),d=\"\"),v(\"OPEN\")){var y=h(),w=v(\"NAME\")||\"\",A=v(\"PATTERN\")||\"\",R=h();s(\"CLOSE\"),c.push({name:w||(A?u++:\"\"),pattern:w&&!A?m(y):A,prefix:y,suffix:R,modifier:v(\"MODIFIER\")||\"\"});continue}s(\"END\")}return c}function o(t,e){return i(r(t,e),e)}function i(t,e){void 0===e&&(e={});var n=u(e),r=e.encode,o=void 0===r?function(t){return t}:r,i=e.validate,a=void 0===i||i,c=t.map(function(t){if(\"object\"==typeof t)return new RegExp(\"^(?:\".concat(t.pattern,\")$\"),n)});return function(e){for(var n=\"\",r=0;r<t.length;r++){var i=t[r];if(\"string\"==typeof i){n+=i;continue}var f=e?e[i.name]:void 0,u=\"?\"===i.modifier||\"*\"===i.modifier,p=\"*\"===i.modifier||\"+\"===i.modifier;if(Array.isArray(f)){if(!p)throw TypeError('Expected \"'.concat(i.name,'\" to not repeat, but got an array'));if(0===f.length){if(u)continue;throw TypeError('Expected \"'.concat(i.name,'\" to not be empty'))}for(var d=0;d<f.length;d++){var v=o(f[d],i);if(a&&!c[r].test(v))throw TypeError('Expected all \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(v,'\"'));n+=i.prefix+v+i.suffix}continue}if(\"string\"==typeof f||\"number\"==typeof f){var v=o(String(f),i);if(a&&!c[r].test(v))throw TypeError('Expected \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(v,'\"'));n+=i.prefix+v+i.suffix;continue}if(!u){var s=p?\"an array\":\"a string\";throw TypeError('Expected \"'.concat(i.name,'\" to be ').concat(s))}}return n}}function a(t,e){var n=[];return c(d(t,n,e),n,e)}function c(t,e,n){void 0===n&&(n={});var r=n.decode,o=void 0===r?function(t){return t}:r;return function(n){var r=t.exec(n);if(!r)return!1;for(var i=r[0],a=r.index,c=Object.create(null),f=1;f<r.length;f++)!function(t){if(void 0!==r[t]){var n=e[t-1];\"*\"===n.modifier||\"+\"===n.modifier?c[n.name]=r[t].split(n.prefix+n.suffix).map(function(t){return o(t,n)}):c[n.name]=o(r[t],n)}}(f);return{path:i,index:a,params:c}}}function f(t){return t.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function u(t){return t&&t.sensitive?\"\":\"i\"}function p(t,e,n){void 0===n&&(n={});for(var r=n.strict,o=void 0!==r&&r,i=n.start,a=n.end,c=n.encode,p=void 0===c?function(t){return t}:c,d=n.delimiter,v=n.endsWith,s=\"[\".concat(f(void 0===v?\"\":v),\"]|$\"),h=\"[\".concat(f(void 0===d?\"/#?\":d),\"]\"),x=void 0===i||i?\"^\":\"\",m=0;m<t.length;m++){var l=t[m];if(\"string\"==typeof l)x+=f(p(l));else{var E=f(p(l.prefix)),g=f(p(l.suffix));if(l.pattern){if(e&&e.push(l),E||g){if(\"+\"===l.modifier||\"*\"===l.modifier){var y=\"*\"===l.modifier?\"?\":\"\";x+=\"(?:\".concat(E,\"((?:\").concat(l.pattern,\")(?:\").concat(g).concat(E,\"(?:\").concat(l.pattern,\"))*)\").concat(g,\")\").concat(y)}else x+=\"(?:\".concat(E,\"(\").concat(l.pattern,\")\").concat(g,\")\").concat(l.modifier)}else{if(\"+\"===l.modifier||\"*\"===l.modifier)throw TypeError('Can not repeat \"'.concat(l.name,'\" without a prefix and suffix'));x+=\"(\".concat(l.pattern,\")\").concat(l.modifier)}}else x+=\"(?:\".concat(E).concat(g,\")\").concat(l.modifier)}}if(void 0===a||a)o||(x+=\"\".concat(h,\"?\")),x+=n.endsWith?\"(?=\".concat(s,\")\"):\"$\";else{var T=t[t.length-1],w=\"string\"==typeof T?h.indexOf(T[T.length-1])>-1:void 0===T;o||(x+=\"(?:\".concat(h,\"(?=\").concat(s,\"))?\")),w||(x+=\"(?=\".concat(h,\"|\").concat(s,\")\"))}return new RegExp(x,u(n))}function d(t,e,n){var o;return t instanceof RegExp?function(t,e){if(!e)return t;for(var n=/\\((?:\\?<(.*?)>)?(?!\\?)/g,r=0,o=n.exec(t.source);o;)e.push({name:o[1]||r++,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"}),o=n.exec(t.source);return t}(t,e):Array.isArray(t)?(o=t.map(function(t){return d(t,e,n).source}),new RegExp(\"(?:\".concat(o.join(\"|\"),\")\"),u(n))):p(r(t,n),e,n)}n.export({parse:()=>r,compile:()=>o,tokensToFunction:()=>i,match:()=>a,regexpToFunction:()=>c,tokensToRegexp:()=>p,pathToRegexp:()=>d})}","map":"{\"version\":3,\"sources\":[\"<anon>\"],\"names\":[],\"mappings\":\"\"}"}