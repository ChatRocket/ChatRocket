{"code":"function module(e,t,n){let l,i,s,a,o,u,d;n.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){l=e}},0),n.export({useAvailableAgentsList:()=>c}),n.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){i=e}},0),n.link(\"react\",{useCallback(e){s=e},useState(e){a=e}},1),n.link(\"../../../hooks/lists/useScrollableRecordList\",{useScrollableRecordList(e){o=e}},2),n.link(\"../../../hooks/useComponentDidUpdate\",{useComponentDidUpdate(e){u=e}},3),n.link(\"../../../lib/lists/RecordList\",{RecordList(e){d=e}},4);let c=e=>{let[t,n]=a(()=>new d),c=s(()=>n(new d),[]),r=i(\"GET\",\"/v1/omnichannel/agents/available\");u(()=>{e&&c()},[e,c]);let p=s(async(t,n)=>{let{agents:i,total:s}=await r(l(l(l({},e.text&&{text:e.text}),e.includeExtension&&{includeExtension:e.includeExtension}),{},{offset:t,count:n+t,sort:'{ \"name\": 1 }'})),a=i.map(e=>(e._updatedAt=new Date(e._updatedAt),e.label=e.username,e.value=e._id,e));return{items:a,itemCount:s}},[r,e.includeExtension,e.text]),{loadMoreItems:b,initialItemCount:k}=o(t,p,25);return{reload:c,itemsList:t,loadMoreItems:b,initialItemCount:k}}}","map":"{\"version\":3,\"sources\":[\"client/components/Omnichannel/hooks/useAvailableAgentsList.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { ILivechatAgent } from '@rocket.chat/core-typings';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useCallback, useState } from 'react';\\n\\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\\nimport { RecordList } from '../../../lib/lists/RecordList';\\n\\ntype AgentsListOptions = {\\n\\ttext: string;\\n\\tincludeExtension?: string;\\n};\\n\\nexport const useAvailableAgentsList = (\\n\\toptions: AgentsListOptions,\\n): {\\n\\titemsList: RecordList<ILivechatAgent>;\\n\\tinitialItemCount: number;\\n\\treload: () => void;\\n\\tloadMoreItems: (start: number, end: number) => void;\\n} => {\\n\\tconst [itemsList, setItemsList] = useState(() => new RecordList<ILivechatAgent>());\\n\\tconst reload = useCallback(() => setItemsList(new RecordList<ILivechatAgent>()), []);\\n\\n\\tconst getAgents = useEndpoint('GET', '/v1/omnichannel/agents/available');\\n\\n\\tuseComponentDidUpdate(() => {\\n\\t\\toptions && reload();\\n\\t}, [options, reload]);\\n\\n\\tconst fetchData = useCallback(\\n\\t\\tasync (start, end) => {\\n\\t\\t\\tconst { agents, total } = await getAgents({\\n\\t\\t\\t\\t...(options.text && { text: options.text }),\\n\\t\\t\\t\\t...(options.includeExtension && { includeExtension: options.includeExtension }),\\n\\t\\t\\t\\toffset: start,\\n\\t\\t\\t\\tcount: end + start,\\n\\t\\t\\t\\tsort: `{ \\\"name\\\": 1 }`,\\n\\t\\t\\t});\\n\\n\\t\\t\\tconst items = agents.map((agent: any) => {\\n\\t\\t\\t\\tagent._updatedAt = new Date(agent._updatedAt);\\n\\t\\t\\t\\tagent.label = agent.username;\\n\\t\\t\\t\\tagent.value = agent._id;\\n\\t\\t\\t\\treturn agent;\\n\\t\\t\\t});\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\titems,\\n\\t\\t\\t\\titemCount: total,\\n\\t\\t\\t};\\n\\t\\t},\\n\\t\\t[getAgents, options.includeExtension, options.text],\\n\\t);\\n\\n\\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\\n\\n\\treturn {\\n\\t\\treload,\\n\\t\\titemsList,\\n\\t\\tloadMoreItems,\\n\\t\\tinitialItemCount,\\n\\t};\\n};\\n\",null],\"names\":[\"_objectSpread\",\"useEndpoint\",\"useCallback\",\"useState\",\"useScrollableRecordList\",\"useComponentDidUpdate\",\"RecordList\",\"module\",\"link\",\"default\",\"v\",\"export\",\"useAvailableAgentsList\",\"options\",\"itemsList\",\"setItemsList\",\"reload\",\"getAgents\",\"fetchData\",\"start\",\"end\",\"agents\",\"total\",\"text\",\"includeExtension\",\"offset\",\"count\",\"sort\",\"items\",\"map\",\"agent\",\"_updatedAt\",\"Date\",\"label\",\"username\",\"value\",\"_id\",\"itemCount\",\"loadMoreItems\",\"initialItemCount\"],\"mappings\":\"2BACAA,EAAuDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA9CC,EAAaC,IAAM,CAAA,uCAA2B,CAAAC,QAAAC,CAAA,EAAAV,EAAAU,CAAA,CAAA,EAAA,GAAvDH,EAAOI,MAAE,CAAA,CAAAC,uBAAmBA,IAAAA,CAA2B,GAAAL,EAAAC,IAAA,CAAA,2BAAA,CAAAP,YAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAN,YAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,SAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,+CAAA,CAAAJ,wBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uCAAA,CAAAH,sBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,gCAAA,CAAAF,WAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAYhD,IAAME,EACZC,IAOA,GAAM,CAACC,EAAWC,EAAa,CAAGZ,EAAS,IAAM,IAAIG,GAC/CU,EAASd,EAAY,IAAMa,EAAa,IAAIT,GAA+B,EAAE,EAE7EW,EAAYhB,EAAY,MAAO,oCAErCI,EAAsB,KACrBQ,GAAWG,GACZ,EAAG,CAACH,EAASG,EAAO,EAEpB,IAAME,EAAYhB,EACjB,MAAOiB,EAAOC,KACb,GAAM,CAAEC,OAAAA,CAAM,CAAEC,MAAAA,CAAAA,CAAO,CAAG,MAAML,EAASjB,EAAAA,EAAAA,EAAA,CAAA,EACpCa,EAAQU,IAAI,EAAI,CAAEA,KAAMV,EAAQU,IAAAA,AAAI,GACpCV,EAAQW,gBAAgB,EAAI,CAAEA,iBAAkBX,EAAQW,gBAAAA,AAAgB,GAAE,CAAA,EAAA,CAC9EC,OAAQN,EACRO,MAAON,EAAMD,EACbQ,KAAI,eAAiB,IAGhBC,EAAQP,EAAOQ,GAAG,CAAEC,IACzBA,EAAMC,UAAU,CAAG,IAAIC,KAAKF,EAAMC,UAAU,EAC5CD,EAAMG,KAAK,CAAGH,EAAMI,QAAQ,CAC5BJ,EAAMK,KAAK,CAAGL,EAAMM,GAAG,CAChBN,IAGR,MAAO,CACNF,MAAAA,EACAS,UAAWf,EAEb,EACA,CAACL,EAAWJ,EAAQW,gBAAgB,CAAEX,EAAQU,IAAI,CAAC,EAG9C,CAAEe,cAAAA,CAAa,CAAEC,iBAAAA,CAAAA,CAAkB,CAAGnC,EAAwBU,EAAWI,EAAW,IAE1F,MAAO,CACNF,OAAAA,EACAF,UAAAA,EACAwB,cAAAA,EACAC,iBAAAA,EAEF\"}"}