{"code":"function module(e,o,s){let r,t,n,a,i,l,u,c,d;s.export({useChangeLeaderAction:()=>_}),s.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){r=e}},0),s.link(\"@rocket.chat/ui-contexts\",{useTranslation(e){t=e},usePermission(e){n=e},useUserRoom(e){a=e},useUserSubscription(e){i=e}},1),s.link(\"react\",{useMemo(e){l=e}},2),s.link(\"../../../../../hooks/useEndpointAction\",{useEndpointAction(e){u=e}},3),s.link(\"../../../lib/getRoomDirectives\",{getRoomDirectives(e){c=e}},4),s.link(\"../../useUserHasRoomRole\",{useUserHasRoomRole(e){d=e}},5);let _=(e,o)=>{let s=t(),_=a(o),{_id:m}=e,k=n(\"set-leader\",o),v=i(o);if(!_)throw Error(\"Room not provided\");let{roomCanSetLeader:h}=c({room:_,showingUserId:m,userSubscription:v}),p=d(m,o,\"leader\"),R=\"p\"===_.t?\"/v1/groups\":\"/v1/channels\",g=p?\"removeLeader\":\"addLeader\",U=p?\"removed__username__as__role_\":\"set__username__as__role_\",b=u(\"POST\",\"\".concat(R,\".\").concat(g),{successMessage:s(U,{username:e.username,role:\"leader\"})}),f=r(()=>b({roomId:o,userId:m})),A=l(()=>h&&k?{content:s(p?\"Remove_as_leader\":\"Set_as_leader\"),icon:\"shield-alt\",onClick:f,type:\"privileges\"}:void 0,[p,h,s,k,f]);return A}}","map":"{\"version\":3,\"sources\":[\"client/views/room/hooks/useUserInfoActions/actions/useChangeLeaderAction.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, IUser } from '@rocket.chat/core-typings';\\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport { useTranslation, usePermission, useUserRoom, useUserSubscription } from '@rocket.chat/ui-contexts';\\nimport { useMemo } from 'react';\\n\\nimport { useEndpointAction } from '../../../../../hooks/useEndpointAction';\\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\\nimport { useUserHasRoomRole } from '../../useUserHasRoomRole';\\nimport type { UserInfoAction, UserInfoActionType } from '../useUserInfoActions';\\n\\nexport const useChangeLeaderAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\\n\\tconst t = useTranslation();\\n\\tconst room = useUserRoom(rid);\\n\\tconst { _id: uid } = user;\\n\\tconst userCanSetLeader = usePermission('set-leader', rid);\\n\\tconst userSubscription = useUserSubscription(rid);\\n\\n\\tif (!room) {\\n\\t\\tthrow Error('Room not provided');\\n\\t}\\n\\n\\tconst { roomCanSetLeader } = getRoomDirectives({ room, showingUserId: uid, userSubscription });\\n\\tconst isLeader = useUserHasRoomRole(uid, rid, 'leader');\\n\\n\\tconst endpointPrefix = room.t === 'p' ? '/v1/groups' : '/v1/channels';\\n\\tconst changeLeaderEndpoint = isLeader ? 'removeLeader' : 'addLeader';\\n\\tconst changeLeaderMessage = isLeader ? 'removed__username__as__role_' : 'set__username__as__role_';\\n\\tconst changeLeader = useEndpointAction('POST', `${endpointPrefix}.${changeLeaderEndpoint}`, {\\n\\t\\tsuccessMessage: t(changeLeaderMessage, { username: user.username, role: 'leader' }),\\n\\t});\\n\\tconst changeLeaderAction = useMutableCallback(() => changeLeader({ roomId: rid, userId: uid }));\\n\\tconst changeLeaderOption = useMemo(\\n\\t\\t() =>\\n\\t\\t\\troomCanSetLeader && userCanSetLeader\\n\\t\\t\\t\\t? {\\n\\t\\t\\t\\t\\t\\tcontent: t(isLeader ? 'Remove_as_leader' : 'Set_as_leader'),\\n\\t\\t\\t\\t\\t\\ticon: 'shield-alt' as const,\\n\\t\\t\\t\\t\\t\\tonClick: changeLeaderAction,\\n\\t\\t\\t\\t\\t\\ttype: 'privileges' as UserInfoActionType,\\n\\t\\t\\t\\t  }\\n\\t\\t\\t\\t: undefined,\\n\\t\\t[isLeader, roomCanSetLeader, t, userCanSetLeader, changeLeaderAction],\\n\\t);\\n\\n\\treturn changeLeaderOption;\\n};\\n\",null],\"names\":[\"useMutableCallback\",\"useTranslation\",\"usePermission\",\"useUserRoom\",\"useUserSubscription\",\"useMemo\",\"useEndpointAction\",\"getRoomDirectives\",\"useUserHasRoomRole\",\"module\",\"export\",\"useChangeLeaderAction\",\"link\",\"v\",\"user\",\"rid\",\"t\",\"room\",\"_id\",\"uid\",\"userCanSetLeader\",\"userSubscription\",\"Error\",\"roomCanSetLeader\",\"showingUserId\",\"isLeader\",\"endpointPrefix\",\"changeLeaderEndpoint\",\"changeLeaderMessage\",\"changeLeader\",\"concat\",\"successMessage\",\"username\",\"role\",\"changeLeaderAction\",\"roomId\",\"userId\",\"changeLeaderOption\",\"content\",\"icon\",\"onClick\",\"type\",\"undefined\"],\"mappings\":\"2BACiEA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAjEC,EAAOC,MAAE,CAAA,CAAAC,sBAA0BA,IAAAA,CAAA,GAA8BF,EAAAG,IAAA,CAAA,8BAAA,CAAAZ,mBAAAa,CAAA,EAAAb,EAAAa,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,2BAAA,CAAAX,eAAAY,CAAA,EAAAZ,EAAAY,CAAA,EAAAX,cAAAW,CAAA,EAAAX,EAAAW,CAAA,EAAAV,YAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,oBAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,QAAA,CAAAP,QAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,yCAAA,CAAAN,kBAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,iCAAA,CAAAL,kBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,2BAAA,CAAAJ,mBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAS1D,IAAMF,EAAwBA,CAACG,EAAuCC,KAC5E,IAAMC,EAAIf,IACJgB,EAAOd,EAAYY,GACnB,CAAEG,IAAKC,CAAAA,CAAK,CAAGL,EACfM,EAAmBlB,EAAc,aAAca,GAC/CM,EAAmBjB,EAAoBW,GAE7C,GAAI,CAACE,EACJ,MAAMK,MAAM,qBAGb,GAAM,CAAEC,iBAAAA,CAAAA,CAAkB,CAAGhB,EAAkB,CAAEU,KAAAA,EAAMO,cAAeL,EAAKE,iBAAAA,CAAgB,GACrFI,EAAWjB,EAAmBW,EAAKJ,EAAK,UAExCW,EAAiBT,AAAW,MAAXA,EAAKD,CAAC,CAAW,aAAe,eACjDW,EAAuBF,EAAW,eAAiB,YACnDG,EAAsBH,EAAW,+BAAiC,2BAClEI,EAAevB,EAAkB,OAAM,GAAAwB,MAAA,CAAKJ,EAAc,KAAAI,MAAA,CAAIH,GAAwB,CAC3FI,eAAgBf,EAAEY,EAAqB,CAAEI,SAAUlB,EAAKkB,QAAQ,CAAEC,KAAM,QAAQ,KAE3EC,EAAqBlC,EAAmB,IAAM6B,EAAa,CAAEM,OAAQpB,EAAKqB,OAAQjB,CAAG,IACrFkB,EAAqBhC,EAC1B,IACCkB,GAAoBH,EACjB,CACAkB,QAAStB,EAAES,EAAW,mBAAqB,iBAC3Cc,KAAM,aACNC,QAASN,EACTO,KAAM,cAENC,KAAAA,EACJ,CAACjB,EAAUF,EAAkBP,EAAGI,EAAkBc,EAAmB,EAGtE,OAAOG,CACR\"}"}