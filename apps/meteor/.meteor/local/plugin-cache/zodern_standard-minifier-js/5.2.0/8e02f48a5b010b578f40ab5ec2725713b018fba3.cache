{"code":"function module(e,t,n){let i,s,o,a,u,c,r,l;function k(e){let{rid:t,tmid:n,encrypted:k}=e,E=i(),m=c(),g=u(),M=r(t),d=l(()=>{let e=new o({rid:t,tmid:n,uid:E,actionManager:g});return[e,()=>e.release()]},[t,n,E,k,M]);return s(()=>{m&&(null==d||d.readStateManager.updateSubscription(m))},[m,null==d?void 0:d.readStateManager]),d.emojiPicker=a(),d}n.export({useChatMessagesInstance:()=>k}),n.link(\"@rocket.chat/ui-contexts\",{useUserId(e){i=e}},0),n.link(\"react\",{useEffect(e){s=e}},1),n.link(\"../../../../../app/ui/client/lib/ChatMessages\",{ChatMessages(e){o=e}},2),n.link(\"../../../../contexts/EmojiPickerContext\",{useEmojiPicker(e){a=e}},3),n.link(\"../../../../uikit/hooks/useUiKitActionManager\",{useUiKitActionManager(e){u=e}},4),n.link(\"../../contexts/RoomContext\",{useRoomSubscription(e){c=e}},5),n.link(\"../../hooks/useE2EERoomState\",{useE2EERoomState(e){r=e}},6),n.link(\"./useInstance\",{useInstance(e){l=e}},7)}","map":"{\"version\":3,\"sources\":[\"client/views/room/providers/hooks/useChatMessagesInstance.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage, IRoom } from '@rocket.chat/core-typings';\\nimport { useUserId } from '@rocket.chat/ui-contexts';\\nimport { useEffect } from 'react';\\n\\nimport { ChatMessages } from '../../../../../app/ui/client/lib/ChatMessages';\\nimport { useEmojiPicker } from '../../../../contexts/EmojiPickerContext';\\nimport type { ChatAPI } from '../../../../lib/chats/ChatAPI';\\nimport { useUiKitActionManager } from '../../../../uikit/hooks/useUiKitActionManager';\\nimport { useRoomSubscription } from '../../contexts/RoomContext';\\nimport { useE2EERoomState } from '../../hooks/useE2EERoomState';\\nimport { useInstance } from './useInstance';\\n\\nexport function useChatMessagesInstance({\\n\\trid,\\n\\ttmid,\\n\\tencrypted,\\n}: {\\n\\trid: IRoom['_id'];\\n\\ttmid?: IMessage['_id'];\\n\\tencrypted: IRoom['encrypted'];\\n}): ChatAPI {\\n\\tconst uid = useUserId();\\n\\tconst subscription = useRoomSubscription();\\n\\tconst actionManager = useUiKitActionManager();\\n\\tconst e2eRoomState = useE2EERoomState(rid);\\n\\n\\tconst chatMessages = useInstance(() => {\\n\\t\\tconst instance = new ChatMessages({ rid, tmid, uid, actionManager });\\n\\n\\t\\treturn [instance, () => instance.release()];\\n\\t}, [rid, tmid, uid, encrypted, e2eRoomState]);\\n\\n\\tuseEffect(() => {\\n\\t\\tif (subscription) {\\n\\t\\t\\tchatMessages?.readStateManager.updateSubscription(subscription);\\n\\t\\t}\\n\\t}, [subscription, chatMessages?.readStateManager]);\\n\\n\\tchatMessages.emojiPicker = useEmojiPicker();\\n\\n\\treturn chatMessages;\\n}\\n\",null],\"names\":[\"useUserId\",\"useEffect\",\"ChatMessages\",\"useEmojiPicker\",\"useUiKitActionManager\",\"useRoomSubscription\",\"useE2EERoomState\",\"useInstance\",\"useChatMessagesInstance\",\"_ref\",\"rid\",\"tmid\",\"encrypted\",\"uid\",\"subscription\",\"actionManager\",\"e2eRoomState\",\"chatMessages\",\"instance\",\"release\",\"readStateManager\",\"updateSubscription\",\"emojiPicker\",\"module\",\"export\",\"link\",\"v\"],\"mappings\":\"2BACqDA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAW/C,SAAUC,EAAuBC,CAAA,EAQtC,GARuC,CACvCC,IAAAA,CAAG,CACHC,KAAAA,CAAI,CACJC,UAAAA,CAAAA,CAKA,CAAAH,EACMI,EAAMb,IACNc,EAAeT,IACfU,EAAgBX,IAChBY,EAAeV,EAAiBI,GAEhCO,EAAeV,EAAY,KAChC,IAAMW,EAAW,IAAIhB,EAAa,CAAEQ,IAAAA,EAAKC,KAAAA,EAAME,IAAAA,EAAKE,cAAAA,CAAa,GAEjE,MAAO,CAACG,EAAU,IAAMA,EAASC,OAAO,GAAG,AAC5C,EAAG,CAACT,EAAKC,EAAME,EAAKD,EAAWI,EAAa,EAU5C,OARAf,EAAU,KACLa,GACHG,CAAAA,MAAAA,GAAAA,EAAcG,gBAAgB,CAACC,kBAAkB,CAACP,EAAY,CAEhE,EAAG,CAACA,EAAcG,MAAAA,EAAY,KAAA,EAAZA,EAAcG,gBAAgB,CAAC,EAEjDH,EAAaK,WAAW,CAAGnB,IAEpBc,CACR,CAxCAM,EAAOC,MAAE,CAAA,CAAAhB,wBAAiBA,IAAAA,CAA2B,GAAAe,EAAAE,IAAA,CAAA,2BAAA,CAAAzB,UAAA0B,CAAA,EAAA1B,EAAA0B,CAAA,CAAA,EAAA,GAAAH,EAAAE,IAAA,CAAA,QAAA,CAAAxB,UAAAyB,CAAA,EAAAzB,EAAAyB,CAAA,CAAA,EAAA,GAAAH,EAAAE,IAAA,CAAA,gDAAA,CAAAvB,aAAAwB,CAAA,EAAAxB,EAAAwB,CAAA,CAAA,EAAA,GAAAH,EAAAE,IAAA,CAAA,0CAAA,CAAAtB,eAAAuB,CAAA,EAAAvB,EAAAuB,CAAA,CAAA,EAAA,GAAAH,EAAAE,IAAA,CAAA,gDAAA,CAAArB,sBAAAsB,CAAA,EAAAtB,EAAAsB,CAAA,CAAA,EAAA,GAAAH,EAAAE,IAAA,CAAA,6BAAA,CAAApB,oBAAAqB,CAAA,EAAArB,EAAAqB,CAAA,CAAA,EAAA,GAAAH,EAAAE,IAAA,CAAA,+BAAA,CAAAnB,iBAAAoB,CAAA,EAAApB,EAAAoB,CAAA,CAAA,EAAA,GAAAH,EAAAE,IAAA,CAAA,gBAAA,CAAAlB,YAAAmB,CAAA,EAAAnB,EAAAmB,CAAA,CAAA,EAAA\"}"}