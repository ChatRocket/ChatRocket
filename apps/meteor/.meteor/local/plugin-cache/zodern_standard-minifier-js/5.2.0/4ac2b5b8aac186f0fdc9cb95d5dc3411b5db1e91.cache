{"code":"function module(e,i,s){let t,o,n,l,r,u,c;s.export({useCreateDiscussionAction:()=>d}),s.link(\"@rocket.chat/core-typings\",{isRoomFederated(e){t=e}},0),s.link(\"@rocket.chat/ui-contexts\",{useTranslation(e){o=e},useSetting(e){n=e},usePermission(e){l=e},useSetModal(e){r=e}},1),s.link(\"react\",{default(e){u=e}},2),s.link(\"../../../../../../components/CreateDiscussion\",{default(e){c=e}},3);let d=e=>{let i=o(),s=r();if(!e)throw Error(\"Invalid room\");let d=n(\"Discussion_enabled\"),a=l(\"start-discussion\",e._id),k=l(\"start-discussion-other-user\",e._id),m=e&&d&&!t(e)&&(a||k);return{id:\"create-discussion\",content:i(\"Discussion\"),icon:\"discussion\",disabled:!m,onClick:()=>s(u.createElement(c,{onClose:()=>s(null),defaultParentRoom:(null==e?void 0:e.prid)||(null==e?void 0:e._id)}))}}}","map":"{\"version\":3,\"sources\":[\"client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useCreateDiscussionAction.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom } from '@rocket.chat/core-typings';\\nimport { isRoomFederated } from '@rocket.chat/core-typings';\\nimport type { GenericMenuItemProps } from '@rocket.chat/ui-client';\\nimport { useTranslation, useSetting, usePermission, useSetModal } from '@rocket.chat/ui-contexts';\\nimport React from 'react';\\n\\nimport CreateDiscussion from '../../../../../../components/CreateDiscussion';\\n\\nexport const useCreateDiscussionAction = (room?: IRoom): GenericMenuItemProps => {\\n\\tconst t = useTranslation();\\n\\tconst setModal = useSetModal();\\n\\n\\tif (!room) {\\n\\t\\tthrow new Error('Invalid room');\\n\\t}\\n\\n\\tconst handleCreateDiscussion = () =>\\n\\t\\tsetModal(<CreateDiscussion onClose={() => setModal(null)} defaultParentRoom={room?.prid || room?._id} />);\\n\\n\\tconst discussionEnabled = useSetting('Discussion_enabled') as boolean;\\n\\tconst canStartDiscussion = usePermission('start-discussion', room._id);\\n\\tconst canSstartDiscussionOtherUser = usePermission('start-discussion-other-user', room._id);\\n\\n\\tconst allowDiscussion = room && discussionEnabled && !isRoomFederated(room) && (canStartDiscussion || canSstartDiscussionOtherUser);\\n\\n\\treturn {\\n\\t\\tid: 'create-discussion',\\n\\t\\tcontent: t('Discussion'),\\n\\t\\ticon: 'discussion',\\n\\t\\tdisabled: !allowDiscussion,\\n\\t\\tonClick: handleCreateDiscussion,\\n\\t};\\n};\\n\",null],\"names\":[\"isRoomFederated\",\"useTranslation\",\"useSetting\",\"usePermission\",\"useSetModal\",\"React\",\"CreateDiscussion\",\"module\",\"export\",\"useCreateDiscussionAction\",\"link\",\"v\",\"default\",\"room\",\"t\",\"setModal\",\"Error\",\"discussionEnabled\",\"canStartDiscussion\",\"_id\",\"canSstartDiscussionOtherUser\",\"allowDiscussion\",\"id\",\"content\",\"icon\",\"disabled\",\"onClick\",\"handleCreateDiscussion\",\"createElement\",\"onClose\",\"defaultParentRoom\",\"prid\"],\"mappings\":\"2BAC4DA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA5DC,EAAOC,MAAE,CAAA,CAAAC,0BAAuBA,IAAAA,CAA4B,GAAAF,EAAAG,IAAA,CAAA,4BAAA,CAAAV,gBAAAW,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,2BAAA,CAAAT,eAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,WAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,cAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,YAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,gDAAA,CAAAE,QAAAD,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAOrD,IAAMF,EAA6BI,IACzC,IAAMC,EAAIb,IACJc,EAAWX,IAEjB,GAAI,CAACS,EACJ,MAAM,AAAIG,MAAM,gBAMjB,IAAMC,EAAoBf,EAAW,sBAC/BgB,EAAqBf,EAAc,mBAAoBU,EAAKM,GAAG,EAC/DC,EAA+BjB,EAAc,8BAA+BU,EAAKM,GAAG,EAEpFE,EAAkBR,GAAQI,GAAqB,CAACjB,EAAgBa,IAAUK,CAAAA,GAAsBE,CAAAA,EAEtG,MAAO,CACNE,GAAI,oBACJC,QAAST,EAAE,cACXU,KAAM,aACNC,SAAU,CAACJ,EACXK,QAd8BC,IAC9BZ,EAASV,EAAAuB,aAAA,CAACtB,EAAgB,CAACuB,QAASA,IAAMd,EAAS,MAAOe,kBAAmB,AAAAjB,CAAAA,MAAAA,EAAI,KAAA,EAAJA,EAAMkB,IAAI,AAAJA,GAAQlB,CAAAA,MAAAA,EAAI,KAAA,EAAJA,EAAMM,GAAG,AAAHA,CAAI,IAevG\"}"}