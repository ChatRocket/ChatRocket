{"code":"function module(e,t,n){let a,o,l,i,r,s,c,u,d,h,p,b,m;n.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){a=e}},0),n.export({useChannelsSection:()=>v}),n.link(\"@rocket.chat/string-helpers\",{capitalize(e){o=e}},0),n.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){l=e},useTranslation(e){i=e}},1),n.link(\"@tanstack/react-query\",{useQuery(e){r=e}},2),n.link(\"react\",{useMemo(e){s=e}},3),n.link(\"../../../components/dashboards/periods\",{getPeriodRange(e){c=e}},4),n.link(\"../../../components/dashboards/usePeriodSelectorStorage\",{usePeriodSelectorStorage(e){u=e}},5),n.link(\"../components/constants\",{PERIOD_OPTIONS(e){d=e}},6),n.link(\"../utils/formatPeriodDescription\",{formatPeriodDescription(e){h=e}},7),n.link(\"../utils/getTop\",{getTop(e){p=e}},8),n.link(\"../utils/round\",{round(e){b=e}},9),n.link(\"./useDefaultDownload\",{useDefaultDownload(e){m=e}},10);let _={widget:\"Livechat\",\"email-inbox\":\"Email\",twilio:\"SMS\",api:\"Custom_Integration\"},g=(e,t,n)=>{let l=t>0?b(e.value/t*100):0,i=\"\".concat(n(_[e.label])||o(e.label));return a(a({},e),{},{label:\"\".concat(i,\" \").concat(e.value,\" (\").concat(l,\"%)\"),rawLabel:i,id:e.label})},k=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2?arguments[2]:void 0;return e.map(e=>g(e,t,n))},v=()=>{let e=i(),[t,n]=u(\"reports-channels-period\",d),o=l(\"GET\",\"/v1/livechat/analytics/dashboards/conversations-by-source\"),{data:{data:b,rawData:_,total:v}={data:[],rawData:[],total:0},refetch:S,isLoading:y,isError:D,isSuccess:f}=r([\"omnichannel-reports\",\"conversations-by-source\",t],async()=>{let{start:n,end:l}=c(t),i=await o({start:n.toISOString(),end:l.toISOString()}),r=k(i.data,i.total,e),s=p(5,r,t=>g({label:e(\"Others\"),value:t},i.total,e));return a(a({},i),{},{data:s,rawData:r})},{refetchInterval:3e5}),w=e(\"Conversations_by_channel\"),O=e(\"__count__conversations__period__\",{count:null!=v?v:0,period:h(t,e)}),P=e(\"Omnichannel_Reports_Channels_Empty_Subtitle\"),I=m({columnName:e(\"Channel\"),title:w,data:_,period:t});return s(()=>({id:\"conversations-by-channel\",title:w,subtitle:O,emptyStateSubtitle:P,data:b,total:v,isLoading:y,isError:D,isDataFound:f&&b.length>0,periodSelectorProps:n,period:t,downloadProps:I,onRetry:S}),[w,O,P,b,v,y,D,f,n,t,I,S])}}","map":"{\"version\":3,\"sources\":[\"client/omnichannel/reports/hooks/useChannelsSection.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { capitalize } from '@rocket.chat/string-helpers';\\nimport type { TranslationContextValue, TranslationKey } from '@rocket.chat/ui-contexts';\\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\\nimport { useQuery } from '@tanstack/react-query';\\nimport { useMemo } from 'react';\\n\\nimport { getPeriodRange } from '../../../components/dashboards/periods';\\nimport { usePeriodSelectorStorage } from '../../../components/dashboards/usePeriodSelectorStorage';\\nimport { PERIOD_OPTIONS } from '../components/constants';\\nimport { formatPeriodDescription } from '../utils/formatPeriodDescription';\\nimport { getTop } from '../utils/getTop';\\nimport { round } from '../utils/round';\\nimport { useDefaultDownload } from './useDefaultDownload';\\n\\ntype DataItem = { label: string; value: number; id: string; rawLabel: string };\\n\\nconst TYPE_LABEL: Record<string, TranslationKey> = {\\n\\t'widget': 'Livechat',\\n\\t'email-inbox': 'Email',\\n\\t'twilio': 'SMS',\\n\\t'api': 'Custom_Integration',\\n};\\n\\nconst formatItem = (item: { label: string; value: number }, total: number, t: TranslationContextValue['translate']): DataItem => {\\n\\tconst percentage = total > 0 ? round((item.value / total) * 100) : 0;\\n\\tconst label = `${t(TYPE_LABEL[item.label]) || capitalize(item.label)}`;\\n\\treturn {\\n\\t\\t...item,\\n\\t\\tlabel: `${label} ${item.value} (${percentage}%)`,\\n\\t\\trawLabel: label,\\n\\t\\tid: item.label,\\n\\t};\\n};\\n\\nconst formatChartData = (data: { label: string; value: number }[] | undefined = [], total = 0, t: TranslationContextValue['translate']) => {\\n\\treturn data.map((item) => formatItem(item, total, t));\\n};\\n\\nexport const useChannelsSection = () => {\\n\\tconst t = useTranslation();\\n\\tconst [period, periodSelectorProps] = usePeriodSelectorStorage('reports-channels-period', PERIOD_OPTIONS);\\n\\tconst getConversationsBySource = useEndpoint('GET', '/v1/livechat/analytics/dashboards/conversations-by-source');\\n\\n\\tconst {\\n\\t\\tdata: { data, rawData, total } = { data: [], rawData: [], total: 0 },\\n\\t\\trefetch,\\n\\t\\tisLoading,\\n\\t\\tisError,\\n\\t\\tisSuccess,\\n\\t} = useQuery(\\n\\t\\t['omnichannel-reports', 'conversations-by-source', period],\\n\\t\\tasync () => {\\n\\t\\t\\tconst { start, end } = getPeriodRange(period);\\n\\t\\t\\tconst response = await getConversationsBySource({ start: start.toISOString(), end: end.toISOString() });\\n\\t\\t\\tconst data = formatChartData(response.data, response.total, t);\\n\\t\\t\\tconst displayData: DataItem[] = getTop<DataItem>(5, data, (value) => formatItem({ label: t('Others'), value }, response.total, t));\\n\\t\\t\\treturn { ...response, data: displayData, rawData: data };\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\trefetchInterval: 5 * 60 * 1000,\\n\\t\\t},\\n\\t);\\n\\n\\tconst title = t('Conversations_by_channel');\\n\\tconst subtitle = t('__count__conversations__period__', {\\n\\t\\tcount: total ?? 0,\\n\\t\\tperiod: formatPeriodDescription(period, t),\\n\\t});\\n\\tconst emptyStateSubtitle = t('Omnichannel_Reports_Channels_Empty_Subtitle');\\n\\n\\tconst downloadProps = useDefaultDownload({ columnName: t('Channel'), title, data: rawData, period });\\n\\n\\treturn useMemo(\\n\\t\\t() => ({\\n\\t\\t\\tid: 'conversations-by-channel',\\n\\t\\t\\ttitle,\\n\\t\\t\\tsubtitle,\\n\\t\\t\\temptyStateSubtitle,\\n\\t\\t\\tdata,\\n\\t\\t\\ttotal,\\n\\t\\t\\tisLoading,\\n\\t\\t\\tisError,\\n\\t\\t\\tisDataFound: isSuccess && data.length > 0,\\n\\t\\t\\tperiodSelectorProps,\\n\\t\\t\\tperiod,\\n\\t\\t\\tdownloadProps,\\n\\t\\t\\tonRetry: refetch,\\n\\t\\t}),\\n\\t\\t[title, subtitle, emptyStateSubtitle, data, total, isLoading, isError, isSuccess, periodSelectorProps, period, downloadProps, refetch],\\n\\t);\\n};\\n\",null],\"names\":[\"_objectSpread\",\"capitalize\",\"useEndpoint\",\"useTranslation\",\"useQuery\",\"useMemo\",\"getPeriodRange\",\"usePeriodSelectorStorage\",\"PERIOD_OPTIONS\",\"formatPeriodDescription\",\"getTop\",\"round\",\"useDefaultDownload\",\"module\",\"link\",\"default\",\"v\",\"export\",\"useChannelsSection\",\"TYPE_LABEL\",\"formatItem\",\"item\",\"total\",\"t\",\"percentage\",\"value\",\"label\",\"concat\",\"rawLabel\",\"id\",\"formatChartData\",\"data\",\"arguments\",\"length\",\"undefined\",\"map\",\"period\",\"periodSelectorProps\",\"getConversationsBySource\",\"rawData\",\"refetch\",\"isLoading\",\"isError\",\"isSuccess\",\"start\",\"end\",\"response\",\"toISOString\",\"displayData\",\"refetchInterval\",\"title\",\"subtitle\",\"count\",\"emptyStateSubtitle\",\"downloadProps\",\"columnName\",\"isDataFound\",\"onRetry\"],\"mappings\":\"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\"}"}