{"code":"function module(t,e,n){n.link(\"@rocket.chat/random\",{Random:function(t){o=t}},0),n.link(\"meteor/meteor\",{Meteor:function(t){i=t}},1),n.link(\"meteor/oauth\",{OAuth:function(t){r=t}},2),n.link(\"meteor/twitter-oauth\",{Twitter:function(t){a=t}},3),n.link(\"../../lib/2fa/overrideLoginMethod\",{overrideLoginMethod:function(t){l=t}},4),n.link(\"../../lib/wrapRequestCredentialFn\",{wrapRequestCredentialFn:function(t){u=t}},5),n.link(\"./oauth\",{createOAuthTotpLoginMethod:function(t){c=t}},6);var o,i,r,a,l,u,c,d=i.loginWithTwitter,h=c(a);i.loginWithTwitter=function(t,e){l(d,[t],e,h)},a.requestCredential=u(\"twitter\",function(t){var e=t.loginStyle,n=t.options,l=t.credentialRequestCompleteCallback,u=o.secret(),c=\"_oauth/twitter/?requestTokenAndRedirect=true&state=\"+r._stateParam(e,u,null==n?void 0:n.redirectUrl);if(i.isCordova&&(c+=\"&cordova=true\",/Android/i.test(navigator.userAgent)&&(c+=\"&android=true\")),n){var d=Object.prototype.hasOwnProperty;a.validParamsAuthenticate.forEach(function(t){d.call(n,t)&&(c+=\"&\"+t+\"=\"+encodeURIComponent(n[t]))})}var h=i.absoluteUrl(c);r.launchLogin({loginService:\"twitter\",loginStyle:e,loginUrl:h,credentialRequestCompleteCallback:l,credentialToken:u})})}","map":"{\"version\":3,\"sources\":[\"client/meteorOverrides/login/twitter.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { TwitterOAuthConfiguration } from '@rocket.chat/core-typings';\\nimport { Random } from '@rocket.chat/random';\\nimport { Meteor } from 'meteor/meteor';\\nimport { OAuth } from 'meteor/oauth';\\nimport { Twitter } from 'meteor/twitter-oauth';\\n\\nimport { overrideLoginMethod } from '../../lib/2fa/overrideLoginMethod';\\nimport { wrapRequestCredentialFn } from '../../lib/wrapRequestCredentialFn';\\nimport { createOAuthTotpLoginMethod } from './oauth';\\n\\nconst { loginWithTwitter } = Meteor;\\nconst loginWithTwitterAndTOTP = createOAuthTotpLoginMethod(Twitter);\\nMeteor.loginWithTwitter = (options, callback) => {\\n\\toverrideLoginMethod(loginWithTwitter, [options], callback, loginWithTwitterAndTOTP);\\n};\\n\\nTwitter.requestCredential = wrapRequestCredentialFn<TwitterOAuthConfiguration>(\\n\\t'twitter',\\n\\t({ loginStyle, options: requestOptions, credentialRequestCompleteCallback }) => {\\n\\t\\tconst options = requestOptions as Record<string, string>;\\n\\t\\tconst credentialToken = Random.secret();\\n\\n\\t\\tlet loginPath = `_oauth/twitter/?requestTokenAndRedirect=true&state=${OAuth._stateParam(\\n\\t\\t\\tloginStyle,\\n\\t\\t\\tcredentialToken,\\n\\t\\t\\toptions?.redirectUrl,\\n\\t\\t)}`;\\n\\n\\t\\tif (Meteor.isCordova) {\\n\\t\\t\\tloginPath += '&cordova=true';\\n\\t\\t\\tif (/Android/i.test(navigator.userAgent)) {\\n\\t\\t\\t\\tloginPath += '&android=true';\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Support additional, permitted parameters\\n\\t\\tif (options) {\\n\\t\\t\\tconst hasOwn = Object.prototype.hasOwnProperty;\\n\\t\\t\\tTwitter.validParamsAuthenticate.forEach((param: string) => {\\n\\t\\t\\t\\tif (hasOwn.call(options, param)) {\\n\\t\\t\\t\\t\\tloginPath += `&${param}=${encodeURIComponent(options[param])}`;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tconst loginUrl = Meteor.absoluteUrl(loginPath);\\n\\n\\t\\tOAuth.launchLogin({\\n\\t\\t\\tloginService: 'twitter',\\n\\t\\t\\tloginStyle,\\n\\t\\t\\tloginUrl,\\n\\t\\t\\tcredentialRequestCompleteCallback,\\n\\t\\t\\tcredentialToken,\\n\\t\\t});\\n\\t},\\n);\\n\",null],\"names\":[\"module\",\"link\",\"Random\",\"v\",\"Meteor\",\"OAuth\",\"Twitter\",\"overrideLoginMethod\",\"wrapRequestCredentialFn\",\"createOAuthTotpLoginMethod\",\"loginWithTwitter\",\"_Meteor\",\"loginWithTwitterAndTOTP\",\"options\",\"callback\",\"requestCredential\",\"_ref\",\"loginStyle\",\"requestOptions\",\"credentialRequestCompleteCallback\",\"credentialToken\",\"secret\",\"loginPath\",\"_stateParam\",\"redirectUrl\",\"isCordova\",\"test\",\"navigator\",\"userAgent\",\"hasOwn\",\"Object\",\"prototype\",\"hasOwnProperty\",\"validParamsAuthenticate\",\"forEach\",\"param\",\"call\",\"encodeURIComponent\",\"loginUrl\",\"absoluteUrl\",\"launchLogin\",\"loginService\"],\"mappings\":\"uBACSA,EAAQC,IAAA,CAAM,sBAAsB,CAAAC,OAAA,SAAAC,CAAA,EAAAD,EAAAC,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,gBAAA,CAAAG,OAAA,SAAAD,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,eAAA,CAAAI,MAAA,SAAAF,CAAA,EAAAE,EAAAF,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uBAAA,CAAAK,QAAA,SAAAH,CAAA,EAAAG,EAAAH,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,oCAAA,CAAAM,oBAAA,SAAAJ,CAAA,EAAAI,EAAAJ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,oCAAA,CAAAO,wBAAA,SAAAL,CAAA,EAAAK,EAAAL,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,UAAA,CAAAQ,2BAAA,SAAAN,CAAA,EAAAM,EAAAN,CAAA,CAAA,EAAA,GAS7C,IATAD,EAA6CE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EASrCC,EAAgBC,AAAKP,EAArBM,gBAAgB,CAClBE,EAA0BH,EAA2BH,EAC3DF,CAAAA,EAAOM,gBAAgB,CAAG,SAACG,CAAO,CAAEC,CAAQ,EAC3CP,EAAoBG,EAAkB,CAACG,EAAQ,CAAEC,EAAUF,EAC5D,EAEAN,EAAQS,iBAAiB,CAAGP,EAC3B,UACA,SAAAQ,CAAA,EAA+E,IAA5EC,EAAUD,EAAVC,UAAU,CAAWC,EAAcF,EAAvBH,OAAO,CAAkBM,EAAiCH,EAAjCG,iCAAiC,CAElEC,EAAkBlB,EAAOmB,MAAM,GAEjCC,EAAS,sDAAyDjB,EAAMkB,WAAW,CACtFN,EACAG,EACAP,MANeK,EAMR,KAAA,EAAPL,AANeK,EAMNM,WAAW,EAWrB,GARIpB,EAAOqB,SAAS,GACnBH,GAAa,gBACT,WAAWI,IAAI,CAACC,UAAUC,SAAS,GACtCN,CAAAA,GAAa,eAAA,GAZCJ,EAiBH,CACZ,IAAMW,EAASC,OAAOC,SAAS,CAACC,cAAc,CAC9C1B,EAAQ2B,uBAAuB,CAACC,OAAO,CAAC,SAACC,CAAa,EACjDN,EAAOO,IAAI,CApBDlB,EAoBWiB,IACxBb,CAAAA,GAAS,IAAQa,EAAK,IAAIE,mBAAmBxB,AArBhCK,CAqBuC,CAACiB,EAAM,CAAA,CAE7D,EACD,CAEA,IAAMG,EAAWlC,EAAOmC,WAAW,CAACjB,GAEpCjB,EAAMmC,WAAW,CAAC,CACjBC,aAAc,UACdxB,WAAAA,EACAqB,SAAAA,EACAnB,kCAAAA,EACAC,gBAAAA,GAEF\"}"}