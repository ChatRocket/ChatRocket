{"code":"function module(a,e){\"use strict\";var t=this&&this.__createBinding||(Object.create?function(a,e,t,s){void 0===s&&(s=t);var n=Object.getOwnPropertyDescriptor(e,t);(!n||(\"get\"in n?!e.__esModule:n.writable||n.configurable))&&(n={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(a,s,n)}:function(a,e,t,s){void 0===s&&(s=t),a[s]=e[t]}),s=this&&this.__setModuleDefault||(Object.create?function(a,e){Object.defineProperty(a,\"default\",{enumerable:!0,value:e})}:function(a,e){a.default=e}),n=this&&this.__importStar||function(a){if(a&&a.__esModule)return a;var e={};if(null!=a)for(var n in a)\"default\"!==n&&Object.prototype.hasOwnProperty.call(a,n)&&t(e,a,n);return s(e,a),e};Object.defineProperty(e,\"__esModule\",{value:!0}),e.createValidateSnake=e.createIsSnake=e.createAssertSnake=e.createSnake=e.createValidatePascal=e.createIsPascal=e.createAssertPascal=e.createPascal=e.createValidateCamel=e.createIsCamel=e.createAssertCamel=e.createCamel=e.validateSnake=e.isSnake=e.assertSnake=e.snake=e.validatePascal=e.isPascal=e.assertPascal=e.pascal=e.validateCamel=e.isCamel=e.assertCamel=e.camel=void 0;var c=n(a(\"./functional/Namespace\")),r=Object.assign(function(){return w(\"camel\")},c.notations.camel(\"camel\"));e.camel=r;var i=Object.assign(function(){return w(\"assertCamel\")},c.notations.camel(\"assertCamel\"),c.assert(\"notations.assertCamel\"));e.assertCamel=i;var l=Object.assign(function(){return w(\"isCamel\")},c.notations.camel(\"isCamel\"),c.is());e.isCamel=l;var o=Object.assign(function(){return w(\"validateCamel\")},c.notations.camel(\"validateCamel\"),c.validate());e.validateCamel=o;var u=Object.assign(function(){return w(\"pascal\")},c.notations.pascal(\"pascal\"));e.pascal=u;var v=Object.assign(function(){return w(\"assertPascal\")},c.notations.pascal(\"assertPascal\"),c.assert(\"notations.assertPascal\"));e.assertPascal=v;var d=Object.assign(function(){return w(\"isPascal\")},c.notations.pascal(\"isPascal\"),c.is());e.isPascal=d;var m=Object.assign(function(){return w(\"validatePascal\")},c.notations.pascal(\"validatePascal\"),c.validate());e.validatePascal=m;var f=Object.assign(function(){return w(\"snake\")},c.notations.snake(\"snake\"));e.snake=f;var k=Object.assign(function(){return w(\"assertSnake\")},c.notations.snake(\"assertSnake\"),c.assert(\"notations.assertSnake\"));e.assertSnake=k;var b=Object.assign(function(){return w(\"isSnake\")},c.notations.snake(\"isSnake\"),c.is());e.isSnake=b;var P=Object.assign(function(){return w(\"validateSnake\")},c.notations.snake(\"validateSnake\"),c.validate());e.validateSnake=P;var O=Object.assign(function(){w(\"createCamel\")},c.notations.camel(\"createCamel\"));e.createCamel=O;var j=Object.assign(function(){w(\"createAssertCamel\")},c.notations.camel(\"createAssertCamel\"),c.assert(\"notations.createAssertCamel\"));e.createAssertCamel=j;var S=Object.assign(function(){w(\"createIsCamel\")},c.notations.camel(\"createIsCamel\"),c.is());e.createIsCamel=S;var g=Object.assign(function(){w(\"createValidateCamel\")},c.notations.camel(\"createValidateCamel\"),c.validate());e.createValidateCamel=g;var C=Object.assign(function(){w(\"createPascal\")},c.notations.pascal(\"createPascal\"));e.createPascal=C;var p=Object.assign(function(){w(\"createAssertPascal\")},c.notations.pascal(\"createAssertPascal\"),c.assert(\"notations.createAssertPascal\"));e.createAssertPascal=p;var A=Object.assign(function(){w(\"createIsPascal\")},c.notations.pascal(\"createIsPascal\"),c.is());e.createIsPascal=A;var I=Object.assign(function(){w(\"createValidatePascal\")},c.notations.pascal(\"createValidatePascal\"),c.validate());e.createValidatePascal=I;var V=Object.assign(function(){w(\"createSnake\")},c.notations.snake(\"createSnake\"));e.createSnake=V;var _=Object.assign(function(){w(\"createAssertSnake\")},c.notations.snake(\"createAssertSnake\"),c.assert(\"notations.createAssertSnake\"));e.createAssertSnake=_;var h=Object.assign(function(){w(\"createIsSnake\")},c.notations.snake(\"createIsSnake\"),c.is());e.createIsSnake=h;var y=Object.assign(function(){w(\"createValidateSnake\")},c.notations.snake(\"createValidateSnake\"),c.validate());function w(a){throw Error(\"Error on typia.notations.\".concat(a,\"(): no transform has been configured. Read and follow https://typia.io/docs/setup please.\"))}e.createValidateSnake=y}","map":"{\"version\":3,\"sources\":[\"<anon>\"],\"names\":[],\"mappings\":\"\"}"}