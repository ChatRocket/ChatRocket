{"code":"function module(e,r,n){var t,a,o,s,i,l,c,u,d,f,m,w,p,h,v,E,k,P,_,g,b;n.link(\"@babel/runtime/helpers/extends\",{default:function(e){t=e}},0),n.link(\"@babel/runtime/regenerator\",{default:function(e){a=e}},1),n.link(\"@rocket.chat/fuselage\",{Box:function(e){o=e},Field:function(e){s=e},FieldError:function(e){i=e},FieldGroup:function(e){l=e},FieldHint:function(e){c=e},FieldLabel:function(e){u=e},FieldRow:function(e){d=e},Icon:function(e){f=e},PasswordInput:function(e){m=e}},0),n.link(\"@rocket.chat/fuselage-hooks\",{useUniqueId:function(e){w=e}},1),n.link(\"@rocket.chat/ui-client\",{PasswordVerifier:function(e){p=e},useValidatePassword:function(e){h=e}},2),n.link(\"@rocket.chat/ui-contexts\",{useMethod:function(e){v=e},useToastMessageDispatch:function(e){E=e},useTranslation:function(e){k=e}},3),n.link(\"react\",{default:function(e){P=e}},4),n.link(\"react-hook-form\",{Controller:function(e){_=e},useFormContext:function(e){g=e}},5),n.link(\"./useAllowPasswordChange\",{useAllowPasswordChange:function(e){b=e}},6),n.exportDefault(function(e){var r=k(),n=E(),x=w(),y=w(),C=w(),F=g(),q=F.watch,D=F.formState.errors,G=F.handleSubmit,I=F.reset,R=F.control,S=q(\"password\"),z=h(S),A=b().allowPasswordChange,M=v(\"saveUserProfile\");return P.createElement(o,t({},e,{is:\"form\",autoComplete:\"off\",onSubmit:G(function(e){var t;return a.async(function(o){for(;;)switch(o.prev=o.next){case 0:return t=e.password,o.prev=1,o.next=4,a.awrap(M({newPassword:t},{}));case 4:n({type:\"success\",message:r(\"Password_changed_successfully\")}),I(),o.next=11;break;case 8:o.prev=8,o.t0=o.catch(1),n({type:\"error\",message:o.t0});case 11:case\"end\":return o.stop()}},null,null,[[1,8]],Promise)})}),P.createElement(l,null,P.createElement(s,null,P.createElement(u,{htmlFor:x},r(\"New_password\")),P.createElement(d,null,P.createElement(_,{control:R,name:\"password\",rules:{required:r(\"Required_field\",{field:r(\"New_password\")}),validate:function(){return null==S||!S.length||!!z||r(\"Password_must_meet_the_complexity_requirements\")}},render:function(e){var r,n=e.field;return P.createElement(m,t({},n,{id:x,error:null===(r=D.password)||void 0===r?void 0:r.message,flexGrow:1,addon:P.createElement(f,{name:\"key\",size:\"x20\"}),disabled:!A,\"aria-describedby\":C+\" \"+x+\"-hint \"+x+\"-error\",\"aria-invalid\":D.password?\"true\":\"false\"}))}})),!A&&P.createElement(c,{id:x+\"-hint\"},r(\"Password_Change_Disabled\")),(null==D?void 0:D.password)&&P.createElement(i,{\"aria-live\":\"assertive\",id:x+\"-error\"},D.password.message),A&&P.createElement(p,{password:S,id:C})),P.createElement(s,null,P.createElement(u,{htmlFor:y},r(\"Confirm_password\")),P.createElement(d,null,P.createElement(_,{control:R,name:\"confirmationPassword\",rules:{required:r(\"Required_field\",{field:r(\"Confirm_password\")}),validate:function(e){return S===e||r(\"Passwords_do_not_match\")}},render:function(e){var r,n=e.field;return P.createElement(m,t({},n,{id:y,error:null===(r=D.confirmationPassword)||void 0===r?void 0:r.message,flexGrow:1,addon:P.createElement(f,{name:\"key\",size:\"x20\"}),disabled:!A||!z,\"aria-required\":\"\"!==S?\"true\":\"false\",\"aria-invalid\":D.confirmationPassword?\"true\":\"false\",\"aria-describedby\":y+\"-error\"}))}})),D.confirmationPassword&&P.createElement(i,{\"aria-live\":\"assertive\",id:y+\"-error\"},D.confirmationPassword.message))))})}","map":"{\"version\":3,\"sources\":[\"client/views/account/security/ChangePassword.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { Box, Field, FieldError, FieldGroup, FieldHint, FieldLabel, FieldRow, Icon, PasswordInput } from '@rocket.chat/fuselage';\\nimport { useUniqueId } from '@rocket.chat/fuselage-hooks';\\nimport { PasswordVerifier, useValidatePassword } from '@rocket.chat/ui-client';\\nimport { useMethod, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\\nimport type { AllHTMLAttributes } from 'react';\\nimport React from 'react';\\nimport { Controller, useFormContext } from 'react-hook-form';\\n\\nimport { useAllowPasswordChange } from './useAllowPasswordChange';\\n\\ntype PasswordFieldValues = { password: string; confirmationPassword: string };\\n\\nconst ChangePassword = (props: AllHTMLAttributes<HTMLFormElement>) => {\\n\\tconst t = useTranslation();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\n\\tconst passwordId = useUniqueId();\\n\\tconst confirmPasswordId = useUniqueId();\\n\\tconst passwordVerifierId = useUniqueId();\\n\\n\\tconst {\\n\\t\\twatch,\\n\\t\\tformState: { errors },\\n\\t\\thandleSubmit,\\n\\t\\treset,\\n\\t\\tcontrol,\\n\\t} = useFormContext<PasswordFieldValues>();\\n\\n\\tconst password = watch('password');\\n\\tconst passwordIsValid = useValidatePassword(password);\\n\\tconst { allowPasswordChange } = useAllowPasswordChange();\\n\\n\\t// FIXME: replace to endpoint\\n\\tconst updatePassword = useMethod('saveUserProfile');\\n\\n\\tconst handleSave = async ({ password }: { password?: string }) => {\\n\\t\\ttry {\\n\\t\\t\\tawait updatePassword({ newPassword: password }, {});\\n\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Password_changed_successfully') });\\n\\t\\t\\treset();\\n\\t\\t} catch (error) {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t}\\n\\t};\\n\\n\\treturn (\\n\\t\\t<Box {...props} is='form' autoComplete='off' onSubmit={handleSubmit(handleSave)}>\\n\\t\\t\\t<FieldGroup>\\n\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t<FieldLabel htmlFor={passwordId}>{t('New_password')}</FieldLabel>\\n\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\tname='password'\\n\\t\\t\\t\\t\\t\\t\\trules={{\\n\\t\\t\\t\\t\\t\\t\\t\\trequired: t('Required_field', { field: t('New_password') }),\\n\\t\\t\\t\\t\\t\\t\\t\\tvalidate: () => (password?.length && !passwordIsValid ? t('Password_must_meet_the_complexity_requirements') : true),\\n\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t<PasswordInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid={passwordId}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.password?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tflexGrow={1}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\taddon={<Icon name='key' size='x20' />}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdisabled={!allowPasswordChange}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${passwordVerifierId} ${passwordId}-hint ${passwordId}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={errors.password ? 'true' : 'false'}\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t{!allowPasswordChange && <FieldHint id={`${passwordId}-hint`}>{t('Password_Change_Disabled')}</FieldHint>}\\n\\t\\t\\t\\t\\t{errors?.password && (\\n\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${passwordId}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t{errors.password.message}\\n\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t{allowPasswordChange && <PasswordVerifier password={password} id={passwordVerifierId} />}\\n\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t<FieldLabel htmlFor={confirmPasswordId}>{t('Confirm_password')}</FieldLabel>\\n\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\tname='confirmationPassword'\\n\\t\\t\\t\\t\\t\\t\\trules={{\\n\\t\\t\\t\\t\\t\\t\\t\\trequired: t('Required_field', { field: t('Confirm_password') }),\\n\\t\\t\\t\\t\\t\\t\\t\\tvalidate: (confirmationPassword) => (password !== confirmationPassword ? t('Passwords_do_not_match') : true),\\n\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t<PasswordInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid={confirmPasswordId}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.confirmationPassword?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tflexGrow={1}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\taddon={<Icon name='key' size='x20' />}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdisabled={!allowPasswordChange || !passwordIsValid}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={password !== '' ? 'true' : 'false'}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={errors.confirmationPassword ? 'true' : 'false'}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${confirmPasswordId}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t{errors.confirmationPassword && (\\n\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${confirmPasswordId}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t{errors.confirmationPassword.message}\\n\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t</Field>\\n\\t\\t\\t</FieldGroup>\\n\\t\\t</Box>\\n\\t);\\n};\\n\\nexport default ChangePassword;\\n\",null],\"names\":[\"_extends\",\"_regeneratorRuntime\",\"Box\",\"Field\",\"FieldError\",\"FieldGroup\",\"FieldHint\",\"FieldLabel\",\"FieldRow\",\"Icon\",\"PasswordInput\",\"useUniqueId\",\"PasswordVerifier\",\"useValidatePassword\",\"useMethod\",\"useToastMessageDispatch\",\"useTranslation\",\"React\",\"Controller\",\"useFormContext\",\"useAllowPasswordChange\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"props\",\"t\",\"dispatchToastMessage\",\"passwordId\",\"confirmPasswordId\",\"passwordVerifierId\",\"_useFormContext\",\"watch\",\"errors\",\"formState\",\"handleSubmit\",\"reset\",\"control\",\"password\",\"passwordIsValid\",\"allowPasswordChange\",\"_useAllowPasswordChan\",\"updatePassword\",\"createElement\",\"is\",\"autoComplete\",\"onSubmit\",\"_ref\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"newPassword\",\"type\",\"message\",\"t0\",\"stop\",\"Promise\",\"htmlFor\",\"name\",\"rules\",\"required\",\"field\",\"validate\",\"length\",\"render\",\"_ref2\",\"_errors$password\",\"id\",\"error\",\"flexGrow\",\"addon\",\"size\",\"disabled\",\"confirmationPassword\",\"_ref3\",\"_errors$confirmationP\"],\"mappings\":\"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\"}"}