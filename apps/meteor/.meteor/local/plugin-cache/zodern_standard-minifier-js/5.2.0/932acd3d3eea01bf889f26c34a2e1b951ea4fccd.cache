{"code":"function module(e,i,t){var r,s;t.export({TIMEUNIT:()=>r,isValidTimespan:()=>n,timeUnitToMs:()=>a,msToTimeUnit:()=>o}),(s=r||t.runSetters(r={},[\"TIMEUNIT\"])).days=\"days\",s.hours=\"hours\",s.minutes=\"minutes\";let n=e=>!Number.isNaN(e)&&!!Number.isFinite(e)&&!(e<0),a=(e,i)=>{if(!n(i))throw Error(\"timeUnitToMs - invalid timespan:\".concat(i));switch(e){case r.days:return 864e5*i;case r.hours:return 36e5*i;case r.minutes:return 6e4*i;default:throw Error(\"timeUnitToMs - invalid time unit\")}},o=(e,i)=>{if(!n(i))throw Error(\"msToTimeUnit - invalid timespan:\".concat(i));switch(e){case r.days:return i/24/60/60/1e3;case r.hours:return i/60/60/1e3;case r.minutes:return i/60/1e3;default:throw Error(\"msToTimeUnit - invalid time unit\")}}}","map":"{\"version\":3,\"sources\":[\"client/lib/convertTimeUnit.ts\",\"<anon>\"],\"sourcesContent\":[\"export enum TIMEUNIT {\\n\\tdays = 'days',\\n\\thours = 'hours',\\n\\tminutes = 'minutes',\\n}\\n\\nexport const isValidTimespan = (timespan: number): boolean => {\\n\\tif (Number.isNaN(timespan)) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tif (!Number.isFinite(timespan)) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tif (timespan < 0) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\treturn true;\\n};\\n\\nexport const timeUnitToMs = (unit: TIMEUNIT, timespan: number) => {\\n\\tif (!isValidTimespan(timespan)) {\\n\\t\\tthrow new Error(`timeUnitToMs - invalid timespan:${timespan}`);\\n\\t}\\n\\n\\tswitch (unit) {\\n\\t\\tcase TIMEUNIT.days:\\n\\t\\t\\treturn timespan * 24 * 60 * 60 * 1000;\\n\\n\\t\\tcase TIMEUNIT.hours:\\n\\t\\t\\treturn timespan * 60 * 60 * 1000;\\n\\n\\t\\tcase TIMEUNIT.minutes:\\n\\t\\t\\treturn timespan * 60 * 1000;\\n\\n\\t\\tdefault:\\n\\t\\t\\tthrow new Error('timeUnitToMs - invalid time unit');\\n\\t}\\n};\\n\\nexport const msToTimeUnit = (unit: TIMEUNIT, timespan: number) => {\\n\\tif (!isValidTimespan(timespan)) {\\n\\t\\tthrow new Error(`msToTimeUnit - invalid timespan:${timespan}`);\\n\\t}\\n\\n\\tswitch (unit) {\\n\\t\\tcase TIMEUNIT.days:\\n\\t\\t\\treturn timespan / 24 / 60 / 60 / 1000;\\n\\t\\tcase TIMEUNIT.hours:\\n\\t\\t\\treturn timespan / 60 / 60 / 1000;\\n\\t\\tcase TIMEUNIT.minutes:\\n\\t\\t\\treturn timespan / 60 / 1000;\\n\\t\\tdefault:\\n\\t\\t\\tthrow new Error('msToTimeUnit - invalid time unit');\\n\\t}\\n};\\n\",null],\"names\":[\"TIMEUNIT\",\"module\",\"export\",\"isValidTimespan\",\"timeUnitToMs\",\"msToTimeUnit\",\"runSetters\",\"timespan\",\"Number\",\"isNaN\",\"isFinite\",\"unit\",\"Error\",\"concat\",\"days\",\"hours\",\"minutes\"],\"mappings\":\"2BAAYA,EAAAA,EAAZC,EAAAC,MAAY,CAAA,CAAAF,SAIXA,IAAAA,EAAAG,gBAAAA,IAAAA,EAAAC,aAAAA,IAAAA,EAAAC,aAAAA,IAAAA,CAAA,GAHAL,CADWA,EAAAA,GAAQC,EAAAK,UAAA,CAARN,EAAQ,CAAA,EAAA,CAAA,WAAA,GACnB,IAAA,CAAA,OACAA,EAAA,KAAA,CAAA,QACAA,EAAA,OAAA,CAAA,UAGM,IAAMG,EAAmBI,IAC3BC,OAAOC,KAAK,CAACF,KAIb,CAACC,OAAOE,QAAQ,CAACH,KAIjBA,CAAAA,EAAW,CAAA,EAOHH,EAAeA,CAACO,EAAgBJ,KAC5C,GAAI,CAACJ,EAAgBI,GACpB,MAAM,AAAIK,MAAK,mCAAAC,MAAA,CAAoCN,IAGpD,OAAQI,GACP,KAAKX,EAASc,IAAI,CACjB,OAAOP,MAAAA,CAER,MAAKP,EAASe,KAAK,CAClB,OAAOR,KAAAA,CAER,MAAKP,EAASgB,OAAO,CACpB,OAAOT,IAAAA,CAER,SACC,MAAM,AAAIK,MAAM,mCAClB,CACD,EAEaP,EAAeA,CAACM,EAAgBJ,KAC5C,GAAI,CAACJ,EAAgBI,GACpB,MAAM,AAAIK,MAAK,mCAAAC,MAAA,CAAoCN,IAGpD,OAAQI,GACP,KAAKX,EAASc,IAAI,CACjB,OAAOP,EAAW,GAAK,GAAK,GAAK,GAClC,MAAKP,EAASe,KAAK,CAClB,OAAOR,EAAW,GAAK,GAAK,GAC7B,MAAKP,EAASgB,OAAO,CACpB,OAAOT,EAAW,GAAK,GACxB,SACC,MAAM,AAAIK,MAAM,mCAClB,CACD\"}"}