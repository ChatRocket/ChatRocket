{"code":"function module(e,t,n){let a,l,s,u,i,o,r,c,m,k,E,g,d,h,f,H;n.link(\"@rocket.chat/fuselage\",{Button(e){a=e},States(e){l=e},StatesAction(e){s=e},StatesActions(e){u=e},StatesIcon(e){i=e},StatesTitle(e){o=e}},0),n.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){r=e},useRouter(e){c=e},useTranslation(e){m=e}},1),n.link(\"@tanstack/react-query\",{useQuery(e){k=e}},2),n.link(\"react\",{default(e){E=e}},3),n.link(\"../../../components/Page\",{Page(e){g=e},PageHeader(e){d=e},PageContent(e){h=e}},4),n.link(\"../../../components/PageSkeleton\",{default(e){f=e}},5),n.link(\"./EditBusinessHours\",{default(e){H=e}},6),n.exportDefault(e=>{let{id:t,type:n}=e,S=m(),p=c(),B=r(\"GET\",\"/v1/livechat/business-hour\"),{data:v,isLoading:y,isError:P,refetch:_}=k([\"livechat-getBusinessHourById\",t,n],async()=>B({_id:t,type:n}),{refetchOnWindowFocus:!1});return y?E.createElement(f,null):P?E.createElement(g,null,E.createElement(d,{title:S(\"Business_Hours\")},E.createElement(a,{onClick:()=>p.navigate(\"/omnichannel/businessHours\")},S(\"Back\"))),E.createElement(h,null,E.createElement(l,null,E.createElement(i,{name:\"warning\",variation:\"danger\"}),E.createElement(o,null,S(\"Something_went_wrong\")),E.createElement(u,null,E.createElement(s,{onClick:()=>_()},S(\"Reload_page\")))))):E.createElement(H,{businessHourData:v.businessHour,type:n})})}","map":"{\"version\":3,\"sources\":[\"client/views/omnichannel/businessHours/EditBusinessHoursWithData.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { ILivechatBusinessHour, LivechatBusinessHourTypes } from '@rocket.chat/core-typings';\\nimport { Button, States, StatesAction, StatesActions, StatesIcon, StatesTitle } from '@rocket.chat/fuselage';\\nimport { useEndpoint, useRouter, useTranslation } from '@rocket.chat/ui-contexts';\\nimport { useQuery } from '@tanstack/react-query';\\nimport React from 'react';\\n\\nimport { Page, PageHeader, PageContent } from '../../../components/Page';\\nimport PageSkeleton from '../../../components/PageSkeleton';\\nimport EditBusinessHours from './EditBusinessHours';\\n\\nconst EditBusinessHoursWidthData = ({ id, type }: { id?: ILivechatBusinessHour['_id']; type: LivechatBusinessHourTypes }) => {\\n\\tconst t = useTranslation();\\n\\tconst router = useRouter();\\n\\tconst getBusinessHour = useEndpoint('GET', '/v1/livechat/business-hour');\\n\\n\\tconst { data, isLoading, isError, refetch } = useQuery(\\n\\t\\t['livechat-getBusinessHourById', id, type],\\n\\t\\tasync () => getBusinessHour({ _id: id, type }),\\n\\t\\t{\\n\\t\\t\\trefetchOnWindowFocus: false,\\n\\t\\t},\\n\\t);\\n\\n\\tif (isLoading) {\\n\\t\\treturn <PageSkeleton />;\\n\\t}\\n\\n\\tif (isError) {\\n\\t\\treturn (\\n\\t\\t\\t<Page>\\n\\t\\t\\t\\t<PageHeader title={t('Business_Hours')}>\\n\\t\\t\\t\\t\\t<Button onClick={() => router.navigate('/omnichannel/businessHours')}>{t('Back')}</Button>\\n\\t\\t\\t\\t</PageHeader>\\n\\t\\t\\t\\t<PageContent>\\n\\t\\t\\t\\t\\t<States>\\n\\t\\t\\t\\t\\t\\t<StatesIcon name='warning' variation='danger' />\\n\\t\\t\\t\\t\\t\\t<StatesTitle>{t('Something_went_wrong')}</StatesTitle>\\n\\t\\t\\t\\t\\t\\t<StatesActions>\\n\\t\\t\\t\\t\\t\\t\\t<StatesAction onClick={() => refetch()}>{t('Reload_page')}</StatesAction>\\n\\t\\t\\t\\t\\t\\t</StatesActions>\\n\\t\\t\\t\\t\\t</States>\\n\\t\\t\\t\\t</PageContent>\\n\\t\\t\\t</Page>\\n\\t\\t);\\n\\t}\\n\\n\\treturn <EditBusinessHours businessHourData={data.businessHour} type={type} />;\\n};\\n\\nexport default EditBusinessHoursWidthData;\\n\",null],\"names\":[\"Button\",\"States\",\"StatesAction\",\"StatesActions\",\"StatesIcon\",\"StatesTitle\",\"useEndpoint\",\"useRouter\",\"useTranslation\",\"useQuery\",\"React\",\"Page\",\"PageHeader\",\"PageContent\",\"PageSkeleton\",\"EditBusinessHours\",\"module\",\"link\",\"v\",\"default\",\"exportDefault\",\"_ref\",\"id\",\"type\",\"t\",\"router\",\"getBusinessHour\",\"data\",\"isLoading\",\"isError\",\"refetch\",\"_id\",\"refetchOnWindowFocus\",\"createElement\",\"title\",\"onClick\",\"navigate\",\"name\",\"variation\",\"businessHourData\",\"businessHour\"],\"mappings\":\"2BACAA,EAASC,EAAQC,EAAQC,EAAcC,EAAeC,EAAuDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA3CC,EAAAC,IAAa,CAAA,wBAAM,CAAAjB,OAAwBkB,CAAA,EAAAlB,EAAAkB,CAAA,EAAAjB,OAAAiB,CAAA,EAAAjB,EAAAiB,CAAA,EAAAhB,aAAAgB,CAAA,EAAAhB,EAAAgB,CAAA,EAAAf,cAAAe,CAAA,EAAAf,EAAAe,CAAA,EAAAd,WAAAc,CAAA,EAAAd,EAAAc,CAAA,EAAAb,YAAAa,CAAA,EAAAb,EAAAa,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,2BAAA,CAAAX,YAAAY,CAAA,EAAAZ,EAAAY,CAAA,EAAAX,UAAAW,CAAA,EAAAX,EAAAW,CAAA,EAAAV,eAAAU,CAAA,EAAAV,EAAAU,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,wBAAA,CAAAR,SAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,2BAAA,CAAAN,KAAAO,CAAA,EAAAP,EAAAO,CAAA,EAAAN,WAAAM,CAAA,EAAAN,EAAAM,CAAA,EAAAL,YAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,mCAAA,CAAAE,QAAAD,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,sBAAA,CAAAE,QAAAD,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAA7GF,EAAOI,aAAU,CASkBC,IAAyF,GAAxF,CAAEC,GAAAA,CAAE,CAAEC,KAAAA,CAAAA,CAA8E,CAAAF,EACjHG,EAAIhB,IACJiB,EAASlB,IACTmB,EAAkBpB,EAAY,MAAO,8BAErC,CAAEqB,KAAAA,CAAI,CAAEC,UAAAA,CAAS,CAAEC,QAAAA,CAAO,CAAEC,QAAAA,CAAAA,CAAS,CAAGrB,EAC7C,CAAC,+BAAgCa,EAAIC,EAAK,CAC1C,SAAYG,EAAgB,CAAEK,IAAKT,EAAIC,KAAAA,CAAI,GAC3C,CACCS,qBAAsB,CAAA,WAIxB,AAAIJ,EACIlB,EAAAuB,aAAA,CAACnB,EAAY,MAGjBe,EAEFnB,EAAAuB,aAAA,CAACtB,EAAI,KACJD,EAAAuB,aAAA,CAACrB,EAAU,CAACsB,MAAOV,EAAE,iBAAkB,EACtCd,EAAAuB,aAAA,CAACjC,EAAM,CAACmC,QAASA,IAAMV,EAAOW,QAAQ,CAAC,6BAA8B,EAAEZ,EAAE,UAE1Ed,EAAAuB,aAAA,CAACpB,EAAW,KACXH,EAAAuB,aAAA,CAAChC,EAAM,KACNS,EAAAuB,aAAA,CAAC7B,EAAU,CAACiC,KAAK,UAAUC,UAAU,QAAQ,GAC7C5B,EAAAuB,aAAA,CAAC5B,EAAW,KAAEmB,EAAE,yBAChBd,EAAAuB,aAAA,CAAC9B,EAAa,KACbO,EAAAuB,aAAA,CAAC/B,EAAY,CAACiC,QAASA,IAAML,GAAU,EAAEN,EAAE,oBAQ1Cd,EAAAuB,aAAA,CAAClB,EAAiB,CAACwB,iBAAkBZ,EAAKa,YAAa,CAACjB,KAAMA,CAAK,EAC3E\"}"}