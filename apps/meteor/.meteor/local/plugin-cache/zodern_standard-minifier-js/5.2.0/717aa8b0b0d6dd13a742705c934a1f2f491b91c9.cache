{"code":"function module(t,e,s){let a,i;s.export({UserStatuses:()=>l,userStatuses:()=>r}),s.link(\"@rocket.chat/core-typings\",{UserStatus(t){a=t}},0),s.link(\"../../app/utils/client/lib/SDKClient\",{sdk(t){i=t}},1);class l{constructor(){this.invisibleAllowed=!0,this.store=new Map([a.ONLINE,a.AWAY,a.BUSY,a.OFFLINE].map(t=>[t,{id:t,name:t,statusType:t,localizeName:!0}]))}delete(t){this.store.delete(t)}put(t){this.store.set(t.id,t)}createFromCustom(t){if(!this.isValidType(t.statusType))throw Error(\"Invalid user status type\");return{name:t.name,id:t._id,statusType:t.statusType,localizeName:!1}}isValidType(t){return Object.values(a).includes(t)}*[Symbol.iterator](){for(let t of this.store.values())(this.invisibleAllowed||t.statusType!==a.OFFLINE)&&(yield t)}async sync(){let t=await i.call(\"listCustomUserStatus\");if(t)for(let e of t)this.put(this.createFromCustom(e))}watch(t){let e=i.stream(\"notify-logged\",[\"updateCustomUserStatus\"],e=>{this.put(this.createFromCustom(e.userStatusData)),null==t||t()}),s=i.stream(\"notify-logged\",[\"deleteCustomUserStatus\"],e=>{this.delete(e.userStatusData._id),null==t||t()});return()=>{e.stop(),s.stop()}}}let r=new l}","map":"{\"version\":3,\"sources\":[\"client/lib/userStatuses.ts\",\"<anon>\"],\"sourcesContent\":[\"import { UserStatus } from '@rocket.chat/core-typings';\\nimport type { ICustomUserStatus } from '@rocket.chat/core-typings';\\n\\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\\n\\nexport type UserStatusDescriptor = {\\n\\tid: string;\\n\\tname: string;\\n\\tstatusType: UserStatus;\\n\\tlocalizeName: boolean;\\n};\\n\\nexport class UserStatuses implements Iterable<UserStatusDescriptor> {\\n\\tpublic invisibleAllowed = true;\\n\\n\\tprivate store: Map<UserStatusDescriptor['id'], UserStatusDescriptor> = new Map(\\n\\t\\t[UserStatus.ONLINE, UserStatus.AWAY, UserStatus.BUSY, UserStatus.OFFLINE].map((status) => [\\n\\t\\t\\tstatus,\\n\\t\\t\\t{\\n\\t\\t\\t\\tid: status,\\n\\t\\t\\t\\tname: status,\\n\\t\\t\\t\\tstatusType: status,\\n\\t\\t\\t\\tlocalizeName: true,\\n\\t\\t\\t},\\n\\t\\t]),\\n\\t);\\n\\n\\tpublic delete(id: string): void {\\n\\t\\tthis.store.delete(id);\\n\\t}\\n\\n\\tpublic put(customUserStatus: UserStatusDescriptor): void {\\n\\t\\tthis.store.set(customUserStatus.id, customUserStatus);\\n\\t}\\n\\n\\tpublic createFromCustom(customUserStatus: ICustomUserStatus): UserStatusDescriptor {\\n\\t\\tif (!this.isValidType(customUserStatus.statusType)) {\\n\\t\\t\\tthrow new Error('Invalid user status type');\\n\\t\\t}\\n\\n\\t\\treturn {\\n\\t\\t\\tname: customUserStatus.name,\\n\\t\\t\\tid: customUserStatus._id,\\n\\t\\t\\tstatusType: customUserStatus.statusType as UserStatus,\\n\\t\\t\\tlocalizeName: false,\\n\\t\\t};\\n\\t}\\n\\n\\tpublic isValidType(type: string): type is UserStatus {\\n\\t\\treturn (Object.values(UserStatus) as string[]).includes(type);\\n\\t}\\n\\n\\tpublic *[Symbol.iterator]() {\\n\\t\\tfor (const value of this.store.values()) {\\n\\t\\t\\tif (this.invisibleAllowed || value.statusType !== UserStatus.OFFLINE) {\\n\\t\\t\\t\\tyield value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tpublic async sync() {\\n\\t\\tconst result = await sdk.call('listCustomUserStatus');\\n\\t\\tif (!result) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tfor (const customStatus of result) {\\n\\t\\t\\tthis.put(this.createFromCustom(customStatus));\\n\\t\\t}\\n\\t}\\n\\n\\tpublic watch(cb?: () => void) {\\n\\t\\tconst updateSubscription = sdk.stream('notify-logged', ['updateCustomUserStatus'], (data) => {\\n\\t\\t\\tthis.put(this.createFromCustom(data.userStatusData));\\n\\t\\t\\tcb?.();\\n\\t\\t});\\n\\n\\t\\tconst deleteSubscription = sdk.stream('notify-logged', ['deleteCustomUserStatus'], (data) => {\\n\\t\\t\\tthis.delete(data.userStatusData._id);\\n\\t\\t\\tcb?.();\\n\\t\\t});\\n\\n\\t\\treturn () => {\\n\\t\\t\\tupdateSubscription.stop();\\n\\t\\t\\tdeleteSubscription.stop();\\n\\t\\t};\\n\\t}\\n}\\n\\nexport const userStatuses = new UserStatuses();\\n\",null],\"names\":[\"UserStatus\",\"sdk\",\"module\",\"export\",\"UserStatuses\",\"userStatuses\",\"link\",\"v\",\"constructor\",\"invisibleAllowed\",\"store\",\"Map\",\"ONLINE\",\"AWAY\",\"BUSY\",\"OFFLINE\",\"map\",\"status\",\"id\",\"name\",\"statusType\",\"localizeName\",\"delete\",\"put\",\"customUserStatus\",\"set\",\"createFromCustom\",\"isValidType\",\"Error\",\"_id\",\"type\",\"Object\",\"values\",\"includes\",\"Symbol\",\"iterator\",\"value\",\"sync\",\"result\",\"call\",\"customStatus\",\"watch\",\"cb\",\"updateSubscription\",\"stream\",\"data\",\"userStatusData\",\"deleteSubscription\",\"stop\"],\"mappings\":\"2BAAuDA,EAAAC,EAAvDC,EAAOC,MAAE,CAAA,CAAAC,aAAkBA,IAAAA,EAAAC,aAA4BA,IAAAA,CAAA,GAAAH,EAAAI,IAAA,CAAA,4BAAA,CAAAN,WAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAL,EAAAI,IAAA,CAAA,uCAAA,CAAAL,IAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,EAYjD,OAAOH,EAAYI,aAAA,CAAA,IAAA,CACjBC,gBAAgB,CAAG,CAAA,EAAI,IAAA,CAEtBC,KAAK,CAA0D,IAAIC,IAC1E,CAACX,EAAWY,MAAM,CAAEZ,EAAWa,IAAI,CAAEb,EAAWc,IAAI,CAAEd,EAAWe,OAAO,CAAC,CAACC,GAAG,CAAEC,GAAW,CACzFA,EACA,CACCC,GAAID,EACJE,KAAMF,EACNG,WAAYH,EACZI,aAAc,CAAA,GAEf,EACD,CAEMC,OAAOJ,CAAU,CAAA,CACvB,IAAI,CAACR,KAAK,CAACY,MAAM,CAACJ,EACnB,CAEOK,IAAIC,CAAsC,CAAA,CAChD,IAAI,CAACd,KAAK,CAACe,GAAG,CAACD,EAAiBN,EAAE,CAAEM,EACrC,CAEOE,iBAAiBF,CAAmC,CAAA,CAC1D,GAAI,CAAC,IAAI,CAACG,WAAW,CAACH,EAAiBJ,UAAU,EAChD,MAAM,AAAIQ,MAAM,4BAGjB,MAAO,CACNT,KAAMK,EAAiBL,IAAI,CAC3BD,GAAIM,EAAiBK,GAAG,CACxBT,WAAYI,EAAiBJ,UAAwB,CACrDC,aAAc,CAAA,EAEhB,CAEOM,YAAYG,CAAY,CAAA,CAC9B,OAAQC,OAAOC,MAAM,CAAChC,GAAyBiC,QAAQ,CAACH,EACzD,CAEO,CAAA,CAAEI,OAAOC,QAAQ,CAAA,EAAC,CACxB,IAAK,IAAMC,KAAS,IAAI,CAAC1B,KAAK,CAACsB,MAAM,GAChC,CAAA,IAAI,CAACvB,gBAAgB,EAAI2B,EAAMhB,UAAU,GAAKpB,EAAWe,OAAO,AAAPA,GAC5D,CAAA,MAAMqB,CAAAA,CAGT,CAEO,MAAMC,MAAI,CAChB,IAAMC,EAAS,MAAMrC,EAAIsC,IAAI,CAAC,wBAC9B,GAAKD,EAIL,IAAK,IAAME,KAAgBF,EAC1B,IAAI,CAACf,GAAG,CAAC,IAAI,CAACG,gBAAgB,CAACc,GAEjC,CAEOC,MAAMC,CAAe,CAAA,CAC3B,IAAMC,EAAqB1C,EAAI2C,MAAM,CAAC,gBAAiB,CAAC,yBAAyB,CAAGC,IACnF,IAAI,CAACtB,GAAG,CAAC,IAAI,CAACG,gBAAgB,CAACmB,EAAKC,cAAc,GAClDJ,MAAAA,GAAAA,GACD,GAEMK,EAAqB9C,EAAI2C,MAAM,CAAC,gBAAiB,CAAC,yBAAyB,CAAGC,IACnF,IAAI,CAACvB,MAAM,CAACuB,EAAKC,cAAc,CAACjB,GAAG,EACnCa,MAAAA,GAAAA,GACD,GAEA,MAAO,KACNC,EAAmBK,IAAI,GACvBD,EAAmBC,IAAI,EACxB,CACD,EAGM,IAAM3C,EAAe,IAAID\"}"}