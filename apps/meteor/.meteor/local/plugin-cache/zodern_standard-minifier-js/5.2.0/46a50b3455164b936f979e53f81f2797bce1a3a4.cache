{"code":"function module(e,t,s){let l,a,i,n,o,r,u,m,p,c,d;let b=[\"_updatedAt\",\"lastMessage\",\"lm\",\"ts\",\"webRtcCallStartTime\",\"usersWaitingForE2EKeys\"];s.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){l=e}},0),s.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default(e){a=e}},1),s.export({useTeamsChannelList:()=>k}),s.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){i=e}},0),s.link(\"react\",{useCallback(e){n=e},useMemo(e){o=e},useState(e){r=e}},1),s.link(\"../../../../../hooks/lists/useScrollableRecordList\",{useScrollableRecordList(e){u=e}},2),s.link(\"../../../../../hooks/useComponentDidUpdate\",{useComponentDidUpdate(e){m=e}},3),s.link(\"../../../../../lib/lists/RecordList\",{RecordList(e){p=e}},4),s.link(\"../../../../../lib/utils/getConfig\",{getConfig(e){c=e}},5),s.link(\"../../../../../lib/utils/mapMessageFromApi\",{mapMessageFromApi(e){d=e}},6);let k=e=>{let t=i(\"GET\",\"/v1/teams.listRooms\"),[s,k]=r(()=>new p),w=n(()=>k(new p),[]);m(()=>{e&&w()},[e,w]);let C=n(async(s,i)=>{let{rooms:n,total:o}=await t({teamId:e.teamId,offset:s,count:i,filter:e.text,type:e.type});return{items:n.map(e=>{let{_updatedAt:t,lastMessage:s,lm:i,ts:n,webRtcCallStartTime:o,usersWaitingForE2EKeys:r}=e,u=a(e,b);return l(l(l(l(l(l({},i&&{lm:new Date(i)}),n&&{ts:new Date(n)}),{},{_updatedAt:new Date(t)},s&&{lastMessage:d(s)}),o&&{webRtcCallStartTime:new Date(o)}),r&&r.map(e=>{let{userId:t,ts:s}=e;return{userId:t,ts:new Date(s)}})),u)}),itemCount:o}},[t,e]),{loadMoreItems:g,initialItemCount:f}=u(s,C,o(()=>parseInt(\"\".concat(c(\"teamsChannelListSize\",10))),[]));return{reload:w,teamsChannelList:s,loadMoreItems:g,initialItemCount:f}}}","map":"{\"version\":3,\"sources\":[\"client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom } from '@rocket.chat/core-typings';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useCallback, useMemo, useState } from 'react';\\n\\nimport { useScrollableRecordList } from '../../../../../hooks/lists/useScrollableRecordList';\\nimport { useComponentDidUpdate } from '../../../../../hooks/useComponentDidUpdate';\\nimport { RecordList } from '../../../../../lib/lists/RecordList';\\nimport { getConfig } from '../../../../../lib/utils/getConfig';\\nimport { mapMessageFromApi } from '../../../../../lib/utils/mapMessageFromApi';\\n\\ntype TeamsChannelListOptions = {\\n\\tteamId: string;\\n\\ttype: 'all' | 'autoJoin';\\n\\ttext: string;\\n};\\n\\nexport const useTeamsChannelList = (\\n\\toptions: TeamsChannelListOptions,\\n): {\\n\\tteamsChannelList: RecordList<IRoom>;\\n\\tinitialItemCount: number;\\n\\treload: () => void;\\n\\tloadMoreItems: (start: number, end: number) => void;\\n} => {\\n\\tconst apiEndPoint = useEndpoint('GET', '/v1/teams.listRooms');\\n\\tconst [teamsChannelList, setTeamsChannelList] = useState(() => new RecordList<IRoom>());\\n\\tconst reload = useCallback(() => setTeamsChannelList(new RecordList<IRoom>()), []);\\n\\n\\tuseComponentDidUpdate(() => {\\n\\t\\toptions && reload();\\n\\t}, [options, reload]);\\n\\n\\tconst fetchData = useCallback(\\n\\t\\tasync (start, end) => {\\n\\t\\t\\tconst { rooms, total } = await apiEndPoint({\\n\\t\\t\\t\\tteamId: options.teamId,\\n\\t\\t\\t\\toffset: start,\\n\\t\\t\\t\\tcount: end,\\n\\t\\t\\t\\tfilter: options.text,\\n\\t\\t\\t\\ttype: options.type,\\n\\t\\t\\t});\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\titems: rooms.map(({ _updatedAt, lastMessage, lm, ts, webRtcCallStartTime, usersWaitingForE2EKeys, ...room }) => ({\\n\\t\\t\\t\\t\\t...(lm && { lm: new Date(lm) }),\\n\\t\\t\\t\\t\\t...(ts && { ts: new Date(ts) }),\\n\\t\\t\\t\\t\\t_updatedAt: new Date(_updatedAt),\\n\\t\\t\\t\\t\\t...(lastMessage && { lastMessage: mapMessageFromApi(lastMessage) }),\\n\\t\\t\\t\\t\\t...(webRtcCallStartTime && { webRtcCallStartTime: new Date(webRtcCallStartTime) }),\\n\\t\\t\\t\\t\\t...(usersWaitingForE2EKeys && usersWaitingForE2EKeys.map(({ userId, ts }) => ({ userId, ts: new Date(ts) }))),\\n\\t\\t\\t\\t\\t...room,\\n\\t\\t\\t\\t})),\\n\\t\\t\\t\\titemCount: total,\\n\\t\\t\\t};\\n\\t\\t},\\n\\t\\t[apiEndPoint, options],\\n\\t);\\n\\n\\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(\\n\\t\\tteamsChannelList,\\n\\t\\tfetchData,\\n\\t\\tuseMemo(() => parseInt(`${getConfig('teamsChannelListSize', 10)}`), []),\\n\\t);\\n\\n\\treturn {\\n\\t\\treload,\\n\\t\\tteamsChannelList,\\n\\t\\tloadMoreItems,\\n\\t\\tinitialItemCount,\\n\\t};\\n};\\n\",null],\"names\":[\"_objectSpread\",\"_objectWithoutProperties\",\"useEndpoint\",\"useCallback\",\"useMemo\",\"useState\",\"useScrollableRecordList\",\"useComponentDidUpdate\",\"RecordList\",\"getConfig\",\"mapMessageFromApi\",\"module\",\"link\",\"default\",\"v\",\"export\",\"useTeamsChannelList\",\"options\",\"apiEndPoint\",\"teamsChannelList\",\"setTeamsChannelList\",\"reload\",\"fetchData\",\"start\",\"end\",\"rooms\",\"total\",\"teamId\",\"offset\",\"count\",\"filter\",\"text\",\"type\",\"items\",\"map\",\"_ref\",\"_updatedAt\",\"lastMessage\",\"lm\",\"ts\",\"webRtcCallStartTime\",\"usersWaitingForE2EKeys\",\"room\",\"_excluded\",\"Date\",\"_ref2\",\"userId\",\"itemCount\",\"loadMoreItems\",\"initialItemCount\",\"parseInt\",\"concat\"],\"mappings\":\"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\"}"}