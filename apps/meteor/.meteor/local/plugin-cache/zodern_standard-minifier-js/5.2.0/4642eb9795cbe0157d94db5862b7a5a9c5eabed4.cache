{"code":"function module(e,t,o){let s,i,n,a,u,r;o.export({useToggleAutoJoin:()=>m}),o.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){s=e},usePermission(e){i=e},useSetting(e){n=e},useToastMessageDispatch(e){a=e}},0),o.link(\"i18next\",{t(e){u=e}},1),o.link(\"../../../../../lib/rooms/roomCoordinator\",{roomCoordinator(e){r=e}},2);let m=(e,t)=>{let{reload:o,mainRoom:m}=t,l=a(),c=s(\"POST\",\"/v1/teams.updateRoom\"),d=i(\"edit-team-channel\",e._id),_=n(\"API_User_Limit\"),f=async()=>{if(_)try{let{room:t}=await c({roomId:e._id,isDefault:!e.teamDefault});if(t.teamDefault){let o=m.usersCount>_?\"info\":\"success\",s=m.usersCount>_?\"Team_Auto-join_exceeded_user_limit\":\"Team_Auto-join_updated\";l({type:o,message:u(s,{channelName:r.getRoomName(e.t,e),numberOfMembers:t.usersCount,limit:_})})}null==o||o()}catch(e){l({type:\"error\",message:e})}};return{handleToggleAutoJoin:f,canEditTeamChannel:d}}}","map":"{\"version\":3,\"sources\":[\"client/views/teams/contextualBar/channels/hooks/useToggleAutoJoin.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom } from '@rocket.chat/core-typings';\\nimport { useEndpoint, usePermission, useSetting, useToastMessageDispatch } from '@rocket.chat/ui-contexts';\\nimport { t } from 'i18next';\\n\\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\\n\\nexport const useToggleAutoJoin = (room: IRoom, { reload, mainRoom }: { reload?: () => void; mainRoom: IRoom }) => {\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst updateRoomEndpoint = useEndpoint('POST', '/v1/teams.updateRoom');\\n\\tconst canEditTeamChannel = usePermission('edit-team-channel', room._id);\\n\\tconst maxNumberOfAutoJoinMembers = useSetting<number>('API_User_Limit');\\n\\n\\tconst handleToggleAutoJoin = async () => {\\n\\t\\t// Sanity check, the setting has a default value, therefore it should always be defined\\n\\t\\tif (!maxNumberOfAutoJoinMembers) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tconst { room: updatedRoom } = await updateRoomEndpoint({\\n\\t\\t\\t\\troomId: room._id,\\n\\t\\t\\t\\tisDefault: !room.teamDefault,\\n\\t\\t\\t});\\n\\t\\t\\tif (updatedRoom.teamDefault) {\\n\\t\\t\\t\\t// If the number of members in the mainRoom (the team) is greater than the limit, show an info message\\n\\t\\t\\t\\t// informing that not all members will be auto-joined to the channel\\n\\t\\t\\t\\tconst messageType = mainRoom.usersCount > maxNumberOfAutoJoinMembers ? 'info' : 'success';\\n\\t\\t\\t\\tconst message = mainRoom.usersCount > maxNumberOfAutoJoinMembers ? 'Team_Auto-join_exceeded_user_limit' : 'Team_Auto-join_updated';\\n\\n\\t\\t\\t\\tdispatchToastMessage({\\n\\t\\t\\t\\t\\ttype: messageType,\\n\\t\\t\\t\\t\\tmessage: t(message, {\\n\\t\\t\\t\\t\\t\\tchannelName: roomCoordinator.getRoomName(room.t, room),\\n\\t\\t\\t\\t\\t\\tnumberOfMembers: updatedRoom.usersCount,\\n\\t\\t\\t\\t\\t\\tlimit: maxNumberOfAutoJoinMembers,\\n\\t\\t\\t\\t\\t}),\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t\\treload?.();\\n\\t\\t} catch (error) {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t}\\n\\t};\\n\\n\\treturn { handleToggleAutoJoin, canEditTeamChannel };\\n};\\n\",null],\"names\":[\"useEndpoint\",\"usePermission\",\"useSetting\",\"useToastMessageDispatch\",\"t\",\"roomCoordinator\",\"module\",\"export\",\"useToggleAutoJoin\",\"link\",\"v\",\"room\",\"_ref\",\"reload\",\"mainRoom\",\"dispatchToastMessage\",\"updateRoomEndpoint\",\"canEditTeamChannel\",\"_id\",\"maxNumberOfAutoJoinMembers\",\"handleToggleAutoJoin\",\"updatedRoom\",\"roomId\",\"isDefault\",\"teamDefault\",\"messageType\",\"usersCount\",\"message\",\"type\",\"channelName\",\"getRoomName\",\"numberOfMembers\",\"limit\",\"error\"],\"mappings\":\"2BACiDA,EAAuBC,EAAQC,EAAAC,EAA2BC,EAAAC,EAA3GC,EAAOC,MAAE,CAAA,CAAAC,kBAAaA,IAAeA,CAAY,GAA0DF,EAAAG,IAAA,CAAA,2BAAA,CAAAT,YAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,cAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,WAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,wBAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,UAAA,CAAAL,EAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,2CAAA,CAAAJ,gBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAKpG,IAAMF,EAAoBA,CAACG,EAAWC,KAAoE,GAAlE,CAAEC,OAAAA,CAAM,CAAEC,SAAAA,CAAAA,CAAoD,CAAAF,EACtGG,EAAuBZ,IACvBa,EAAqBhB,EAAY,OAAQ,wBACzCiB,EAAqBhB,EAAc,oBAAqBU,EAAKO,GAAG,EAChEC,EAA6BjB,EAAmB,kBAEhDkB,EAAuB,UAE5B,GAAKD,EAIL,GAAI,CACH,GAAM,CAAER,KAAMU,CAAAA,CAAa,CAAG,MAAML,EAAmB,CACtDM,OAAQX,EAAKO,GAAG,CAChBK,UAAW,CAACZ,EAAKa,WAAAA,GAElB,GAAIH,EAAYG,WAAW,CAAE,CAG5B,IAAMC,EAAcX,EAASY,UAAU,CAAGP,EAA6B,OAAS,UAC1EQ,EAAUb,EAASY,UAAU,CAAGP,EAA6B,qCAAuC,yBAE1GJ,EAAqB,CACpBa,KAAMH,EACNE,QAASvB,EAAEuB,EAAS,CACnBE,YAAaxB,EAAgByB,WAAW,CAACnB,EAAKP,CAAC,CAAEO,GACjDoB,gBAAiBV,EAAYK,UAAU,CACvCM,MAAOb,KAGV,CACAN,MAAAA,GAAAA,GACD,CAAE,MAAOoB,EAAO,CACflB,EAAqB,CAAEa,KAAM,QAASD,QAASM,CAAK,EACrD,CACD,EAEA,MAAO,CAAEb,qBAAAA,EAAsBH,mBAAAA,CAAkB,CAClD\"}"}