{"code":"function module(e,n,r){var t,i,o,a,c,s,l,u;r.link(\"@babel/runtime/regenerator\",{default:function(e){t=e}},0),r.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(e){i=e}},1),r.link(\"../../../client/lib/rooms/roomCoordinator\",{roomCoordinator:function(e){o=e}},0),r.link(\"../../../client/providers/RouterProvider\",{router:function(e){a=e}},1),r.link(\"../../models/client\",{Subscriptions:function(e){c=e},ChatSubscription:function(e){s=e}},2),r.link(\"../../utils/client/lib/SDKClient\",{sdk:function(e){l=e}},3),r.link(\"../../utils/client/slashCommand\",{slashCommands:function(e){u=e}},4),u.add({command:\"open\",callback:function(e){var n,r,u,m,d,p,f;return t.async(function(b){for(;;)switch(b.prev=b.next){case 0:if(n=e.params,r={\"#\":[\"c\",\"p\"],\"@\":[\"d\"]},u=n.trim().replace(/#|@/,\"\"),m=r[n.trim()[0]]||[],d=i({name:u},m&&{t:{$in:m}}),(p=s.findOne(d))&&o.openRouteLink(p.t,p,a.getSearchParameters()),!(m&&-1===m.indexOf(\"d\"))){b.next=9;break}return b.abrupt(\"return\");case 9:return b.prev=9,b.next=12,t.awrap(l.call(\"createDirectMessage\",u));case 12:if(f=c.findOne(d)){b.next=15;break}return b.abrupt(\"return\");case 15:o.openRouteLink(f.t,f,a.getSearchParameters()),b.next=20;break;case 18:b.prev=18,b.t0=b.catch(9);case 20:case\"end\":return b.stop()}},null,null,[[9,18]],Promise)},options:{description:\"Opens_a_channel_group_or_direct_message\",params:\"room_name\",clientOnly:!0,permission:[\"view-c-room\",\"view-c-room\",\"view-d-room\",\"view-joined-room\",\"create-d\"]}})}","map":"{\"version\":3,\"sources\":[\"app/slashcommands-open/client/client.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { RoomType, ISubscription, SlashCommandCallbackParams } from '@rocket.chat/core-typings';\\nimport type { Mongo } from 'meteor/mongo';\\n\\nimport { roomCoordinator } from '../../../client/lib/rooms/roomCoordinator';\\nimport { router } from '../../../client/providers/RouterProvider';\\nimport { Subscriptions, ChatSubscription } from '../../models/client';\\nimport { sdk } from '../../utils/client/lib/SDKClient';\\nimport { slashCommands } from '../../utils/client/slashCommand';\\n\\nslashCommands.add({\\n\\tcommand: 'open',\\n\\tcallback: async function Open({ params }: SlashCommandCallbackParams<'open'>): Promise<void> {\\n\\t\\tconst dict: Record<string, RoomType[]> = {\\n\\t\\t\\t'#': ['c', 'p'],\\n\\t\\t\\t'@': ['d'],\\n\\t\\t};\\n\\n\\t\\tconst room = params.trim().replace(/#|@/, '');\\n\\t\\tconst type = dict[params.trim()[0]] || [];\\n\\n\\t\\tconst query: Mongo.Selector<ISubscription> = {\\n\\t\\t\\tname: room,\\n\\t\\t\\t...(type && { t: { $in: type } }),\\n\\t\\t};\\n\\n\\t\\tconst subscription = ChatSubscription.findOne(query);\\n\\n\\t\\tif (subscription) {\\n\\t\\t\\troomCoordinator.openRouteLink(subscription.t, subscription, router.getSearchParameters());\\n\\t\\t}\\n\\n\\t\\tif (type && type.indexOf('d') === -1) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\ttry {\\n\\t\\t\\tawait sdk.call('createDirectMessage', room);\\n\\t\\t\\tconst subscription = Subscriptions.findOne(query);\\n\\t\\t\\tif (!subscription) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\troomCoordinator.openRouteLink(subscription.t, subscription, router.getSearchParameters());\\n\\t\\t} catch (err: unknown) {\\n\\t\\t\\t// noop\\n\\t\\t}\\n\\t},\\n\\toptions: {\\n\\t\\tdescription: 'Opens_a_channel_group_or_direct_message',\\n\\t\\tparams: 'room_name',\\n\\t\\tclientOnly: true,\\n\\t\\tpermission: ['view-c-room', 'view-c-room', 'view-d-room', 'view-joined-room', 'create-d'],\\n\\t},\\n});\\n\",null],\"names\":[\"_regeneratorRuntime\",\"_objectSpread\",\"roomCoordinator\",\"router\",\"Subscriptions\",\"ChatSubscription\",\"sdk\",\"slashCommands\",\"module\",\"link\",\"default\",\"v\",\"add\",\"command\",\"callback\",\"_ref\",\"params\",\"dict\",\"room\",\"type\",\"query\",\"subscription\",\"_subscription\",\"async\",\"_context\",\"prev\",\"next\",\"trim\",\"replace\",\"name\",\"t\",\"$in\",\"findOne\",\"openRouteLink\",\"getSearchParameters\",\"indexOf\",\"abrupt\",\"awrap\",\"call\",\"t0\",\"stop\",\"Promise\",\"options\",\"description\",\"clientOnly\",\"permission\"],\"mappings\":\"2BAGAA,EAA4EC,EAA5EC,EAA4EC,EAAAC,EAAAC,EAAAC,EAAAC,EAApDC,EAAEC,IAAM,CAAA,6BAAA,CAAAC,QAAA,SAA4CC,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uCAAA,CAAAC,QAAA,SAAAC,CAAA,EAAAV,EAAAU,CAAA,CAAA,EAAA,GAAnEH,EAAiBC,IAAA,CAAM,4CAA4C,CAAAP,gBAAA,SAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2CAAA,CAAAN,OAAA,SAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,sBAAA,CAAAL,cAAA,SAAAO,CAAA,EAAAP,EAAAO,CAAA,EAAAN,iBAAA,SAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,mCAAA,CAAAH,IAAA,SAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,kCAAA,CAAAF,cAAA,SAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAM5EJ,EAAcK,GAAG,CAAC,CACjBC,QAAS,OACTC,SAAU,SAAmBC,CAAA,EAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAtB,EAAAuB,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAkB3B,GAlB8BV,EAAMD,EAANC,MAAM,CAC/BC,EAAmC,CACxC,IAAK,CAAC,IAAK,IAAI,CACf,IAAK,CAAC,IAAG,EAGJC,EAAOF,EAAOW,IAAI,GAAGC,OAAO,CAAC,MAAO,IACpCT,EAAOF,CAAI,CAACD,EAAOW,IAAI,EAAE,CAAC,EAAE,CAAC,EAAI,EAAE,CAEnCP,EAAKnB,EAAA,CACV4B,KAAMX,CAAI,EACNC,GAAQ,CAAEW,EAAG,CAAEC,IAAKZ,CAAI,CAAE,GAGzBE,CAAAA,EAAehB,EAAiB2B,OAAO,CAACZ,EAAK,GAGlDlB,EAAgB+B,aAAa,CAACZ,EAAaS,CAAC,CAAET,EAAclB,EAAO+B,mBAAmB,IACtF,CAEGf,CAAAA,GAAQA,AAAsB,KAAtBA,EAAKgB,OAAO,CAAC,IAAU,EAAC,CAAAX,EAAAE,IAAA,CAAA,EAAA,KAAA,CAAA,OAAAF,EAAAY,MAAA,CAAA,SAAA,MAAA,EAAA,OAAAZ,EAAAC,IAAA,CAAA,EAAAD,EAAAE,IAAA,CAAA,GAAA1B,EAAAqC,KAAA,CAI7B/B,EAAIgC,IAAI,CAAC,sBAAuBpB,GAAK,MAAA,GACM,GAA3CG,EAAejB,EAAc4B,OAAO,CAACZ,GAC1B,CAAAI,EAAAE,IAAA,CAAA,GAAA,KAAA,CAAA,OAAAF,EAAAY,MAAA,CAAA,SAAA,MAAA,GAGjBlC,EAAgB+B,aAAa,CAACZ,EAAaS,CAAC,CAAET,EAAclB,EAAO+B,mBAAmB,IAAIV,EAAAE,IAAA,CAAA,GAAA,KAAA,MAAA,GAAAF,EAAAC,IAAA,CAAA,GAAAD,EAAAe,EAAA,CAAAf,EAAA,KAAA,CAAA,EAAA,MAAA,GAAA,IAAA,MAAA,OAAAA,EAAAgB,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,CAAA,CAAA,EAAA,GAAA,CAAA,CAAAC,QAAA,EAK5FC,QAAS,CACRC,YAAa,0CACb3B,OAAQ,YACR4B,WAAY,CAAA,EACZC,WAAY,CAAC,cAAe,cAAe,cAAe,mBAAoB,WAAU\"}"}