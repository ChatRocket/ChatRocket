{"code":"function module(e,a,t){let n,s,l,c,i,o,r,u;t.link(\"@babel/runtime/helpers/extends\",{default(e){n=e}},0),t.export({OmnichannelLivechatToggle:()=>h}),t.link(\"@rocket.chat/fuselage\",{Sidebar(e){s=e}},0),t.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){l=e}},1),t.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){c=e},useToastMessageDispatch(e){i=e},useTranslation(e){o=e}},2),t.link(\"react\",{default(e){r=e}},3),t.link(\"../../../hooks/omnichannel/useOmnichannelAgentAvailable\",{useOmnichannelAgentAvailable(e){u=e}},4);let h=e=>{let a=o(),t=u(),h=c(\"POST\",\"/v1/livechat/agent.status\"),g=i(),k=l(async()=>{try{await h({})}catch(e){g({type:\"error\",message:e})}});return r.createElement(s.TopBar.Action,n({},e,{id:\"omnichannel-status-toggle\",title:a(t?\"Turn_off_answer_chats\":\"Turn_on_answer_chats\"),success:t,icon:t?\"message\":\"message-disabled\",onClick:k}))}}","map":"{\"version\":3,\"sources\":[\"client/sidebar/sections/actions/OmnichannelLivechatToggle.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { Sidebar } from '@rocket.chat/fuselage';\\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport { useEndpoint, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\\nimport type { ReactElement, ComponentProps } from 'react';\\nimport React from 'react';\\n\\nimport { useOmnichannelAgentAvailable } from '../../../hooks/omnichannel/useOmnichannelAgentAvailable';\\n\\nexport const OmnichannelLivechatToggle = (props: Omit<ComponentProps<typeof Sidebar.TopBar.Action>, 'icon'>): ReactElement => {\\n\\tconst t = useTranslation();\\n\\tconst agentAvailable = useOmnichannelAgentAvailable();\\n\\tconst changeAgentStatus = useEndpoint('POST', '/v1/livechat/agent.status');\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\n\\tconst handleAvailableStatusChange = useMutableCallback(async () => {\\n\\t\\ttry {\\n\\t\\t\\tawait changeAgentStatus({});\\n\\t\\t} catch (error: unknown) {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t}\\n\\t});\\n\\n\\treturn (\\n\\t\\t<Sidebar.TopBar.Action\\n\\t\\t\\t{...props}\\n\\t\\t\\tid='omnichannel-status-toggle'\\n\\t\\t\\ttitle={agentAvailable ? t('Turn_off_answer_chats') : t('Turn_on_answer_chats')}\\n\\t\\t\\tsuccess={agentAvailable}\\n\\t\\t\\ticon={agentAvailable ? 'message' : 'message-disabled'}\\n\\t\\t\\tonClick={handleAvailableStatusChange}\\n\\t\\t/>\\n\\t);\\n};\\n\",null],\"names\":[\"_extends\",\"Sidebar\",\"useMutableCallback\",\"useEndpoint\",\"useToastMessageDispatch\",\"useTranslation\",\"React\",\"useOmnichannelAgentAvailable\",\"module\",\"link\",\"default\",\"v\",\"export\",\"OmnichannelLivechatToggle\",\"props\",\"t\",\"agentAvailable\",\"changeAgentStatus\",\"dispatchToastMessage\",\"handleAvailableStatusChange\",\"error\",\"type\",\"message\",\"createElement\",\"TopBar\",\"Action\",\"id\",\"title\",\"success\",\"icon\",\"onClick\"],\"mappings\":\"2BAAAA,EAAgDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAvCC,EAASC,IAAM,CAAA,iCAAwB,CAAAC,QAAAC,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAAhDH,EAAOI,MAAE,CAAA,CAAAC,0BAAeA,IAAAA,CAAwB,GAAAL,EAAAC,IAAA,CAAA,wBAAA,CAAAR,QAAAU,CAAA,EAAAV,EAAAU,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,8BAAA,CAAAP,mBAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2BAAA,CAAAN,YAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,wBAAAO,CAAA,EAAAP,EAAAO,CAAA,EAAAN,eAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAC,QAAAC,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,0DAAA,CAAAF,6BAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAQzC,IAAME,EAA6BC,IACzC,IAAMC,EAAIV,IACJW,EAAiBT,IACjBU,EAAoBd,EAAY,OAAQ,6BACxCe,EAAuBd,IAEvBe,EAA8BjB,EAAmB,UACtD,GAAI,CACH,MAAMe,EAAkB,CAAA,EACzB,CAAE,MAAOG,EAAgB,CACxBF,EAAqB,CAAEG,KAAM,QAASC,QAASF,CAAK,EACrD,CACD,GAEA,OACCd,EAAAiB,aAAA,CAACtB,EAAQuB,MAAM,CAACC,MAAM,CAAAzB,EAAA,CAAA,EACjBc,EAAK,CACTY,GAAG,4BACHC,KAAK,CAAmBZ,EAAE,AAAnBC,EAAmB,wBAA6B,wBACvDY,QAASZ,EACTa,KAAMb,EAAiB,UAAY,mBACnCc,QAASX,CAA4B,GAGxC\"}"}