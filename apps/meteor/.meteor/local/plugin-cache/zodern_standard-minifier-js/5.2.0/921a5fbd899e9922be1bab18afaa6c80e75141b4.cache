{"code":"function module(e,r,l){let t,a,n,i,m,d,o,c,s,u,v,E,p,_,f,b,h,g,q,S,P,w,y,k,x,F,I,R,C,U,M,T,D,A;let L=[\"value\"],B=[\"value\"];l.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default(e){t=e}},0),l.link(\"@babel/runtime/helpers/extends\",{default(e){a=e}},1),l.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){n=e}},2),l.link(\"@rocket.chat/fuselage\",{Accordion(e){i=e},Button(e){m=e},ButtonGroup(e){d=e},TextInput(e){o=e},TextAreaInput(e){c=e},Field(e){s=e},ToggleSwitch(e){u=e},FieldGroup(e){v=e},Box(e){E=e},Margins(e){p=e},NumberInput(e){_=e},PasswordInput(e){f=e},FieldLabel(e){b=e},FieldRow(e){h=e},FieldError(e){g=e},FieldHint(e){q=e}},0),l.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){S=e},useUniqueId(e){P=e}},1),l.link(\"@rocket.chat/ui-contexts\",{useSetModal(e){w=e},useToastMessageDispatch(e){y=e},useRoute(e){k=e},useEndpoint(e){x=e}},2),l.link(\"react\",{default(e){F=e},useCallback(e){I=e}},3),l.link(\"react-hook-form\",{useForm(e){R=e},Controller(e){C=e}},4),l.link(\"react-i18next\",{useTranslation(e){U=e}},5),l.link(\"../../../../lib/emailValidator\",{validateEmail(e){M=e}},6),l.link(\"../../../components/AutoCompleteDepartment\",{default(e){T=e}},7),l.link(\"../../../components/GenericModal\",{default(e){D=e}},8),l.link(\"../../../components/Page\",{PageScrollableContentWithShadow(e){A=e}},9),l.exportDefault(e=>{var r,l,G,W,N,O,V,j,H,Y,z,J,K,Q,X,Z,$,ee;let{inboxData:er}=e,{t:el}=U(),et=y(),ea=w(),en=k(\"admin-email-inboxes\"),ei=I(()=>en.push({}),[en]),em=x(\"POST\",\"/v1/email-inbox\"),ed=x(\"DELETE\",\"/v1/email-inbox/:_id\",{_id:null!==(r=null==er?void 0:er._id)&&void 0!==r?r:\"\"}),eo=x(\"GET\",\"/v1/email-inbox.search\"),{control:ec,handleSubmit:es,formState:{errors:eu,isDirty:ev}}=R({defaultValues:{active:null===(l=null==er?void 0:er.active)||void 0===l||l,name:null==er?void 0:er.name,email:null==er?void 0:er.email,description:null==er?void 0:er.description,senderInfo:null==er?void 0:er.senderInfo,department:(null==er?void 0:er.department)||\"\",smtpServer:null==er?void 0:er.smtp.server,smtpPort:null!==(G=null==er?void 0:er.smtp.port)&&void 0!==G?G:587,smtpUsername:null==er?void 0:er.smtp.username,smtpPassword:null==er?void 0:er.smtp.password,smtpSecure:null!==(W=null==er?void 0:er.smtp.secure)&&void 0!==W&&W,imapServer:null==er?void 0:er.imap.server,imapPort:null!==(N=null==er?void 0:er.imap.port)&&void 0!==N?N:993,imapUsername:null==er?void 0:er.imap.username,imapPassword:null==er?void 0:er.imap.password,imapSecure:null!==(O=null==er?void 0:er.imap.secure)&&void 0!==O&&O,imapRetries:null!==(V=null==er?void 0:er.imap.maxRetries)&&void 0!==V?V:10},mode:\"all\"}),eE=S(()=>{let e=async()=>{try{await ed(),et({type:\"success\",message:el(\"Email_Inbox_has_been_removed\")}),ei()}catch(e){et({type:\"error\",message:e})}finally{ea(null)}};ea(F.createElement(D,{variant:\"danger\",onConfirm:e,onCancel:()=>ea(null),confirmText:el(\"Delete\")},el(\"You_will_not_be_able_to_recover_email_inbox\")))}),ep=S(async e=>{let{active:r,name:l,email:t,description:a,senderInfo:i,department:m,smtpServer:d,smtpPort:o,smtpUsername:c,smtpPassword:s,smtpSecure:u,imapServer:v,imapPort:E,imapUsername:p,imapPassword:_,imapSecure:f,imapRetries:b}=e,h={server:d,port:parseInt(o),username:c,password:s,secure:u},g={server:v,port:parseInt(E),username:p,password:_,secure:f,maxRetries:parseInt(b)},q=n(n(n({},(null==er?void 0:er._id)&&{_id:null==er?void 0:er._id}),{},{active:r,name:l,email:t,description:a,senderInfo:i},m&&{department:\"string\"==typeof m?m:m.value}),{},{smtp:h,imap:g});try{await em(q),et({type:\"success\",message:el(\"Email_Inbox_has_been_added\")}),ei()}catch(e){et({type:\"error\",message:e})}}),e_=S(async e=>{if(!e)return;if(!M(e))return el(\"error-invalid-email-address\");let{emailInbox:r}=await eo({email:e});if(r&&(null==er||!er._id||r._id!==(null==er?void 0:er._id)))return el(\"Email_already_exists\")}),ef=P(),eb=P(),eh=P(),eg=P(),eq=P(),eS=P(),eP=P(),ew=P(),ey=P(),ek=P(),ex=P(),eF=P(),eI=P(),eR=P(),eC=P(),eU=P(),eM=P();return F.createElement(A,null,F.createElement(E,{maxWidth:\"x600\",w:\"full\",alignSelf:\"center\"},F.createElement(i,null,F.createElement(i.Item,{defaultExpanded:!0,title:el(\"Inbox_Info\")},F.createElement(v,null,F.createElement(s,null,F.createElement(h,null,F.createElement(b,{htmlFor:ef},el(\"Active\")),F.createElement(C,{control:ec,name:\"active\",render:e=>{let{field:{onChange:r,value:l,ref:t}}=e;return F.createElement(u,{id:ef,ref:t,checked:l,onChange:r})}}))),F.createElement(s,null,F.createElement(b,{htmlFor:eb,required:!0},el(\"Name\")),F.createElement(h,null,F.createElement(C,{name:\"name\",control:ec,rules:{required:el(\"Required_field\",{field:el(\"Name\")})},render:e=>{var r;let{field:l}=e;return F.createElement(o,a({id:eb},l,{error:null===(r=eu.name)||void 0===r?void 0:r.message,\"aria-required\":!0,\"aria-invalid\":!!eu.name,\"aria-describedby\":\"\".concat(eb,\"-error\")}))}})),eu.name&&F.createElement(g,{\"aria-live\":\"assertive\",id:\"\".concat(eb,\"-error\")},null===(j=eu.name)||void 0===j?void 0:j.message)),F.createElement(s,null,F.createElement(b,{htmlFor:eh,required:!0},el(\"Email\")),F.createElement(h,null,F.createElement(C,{name:\"email\",control:ec,rules:{required:el(\"Required_field\",{field:el(\"Email\")}),validate:e=>e_(e)},render:e=>{var r;let{field:l}=e;return F.createElement(o,a({},l,{id:eh,error:null===(r=eu.email)||void 0===r?void 0:r.message,\"aria-required\":!0,\"aria-invalid\":!!eu.email,\"aria-describedby\":\"\".concat(eh,\"-error\")}))}})),eu.email&&F.createElement(g,{\"aria-live\":\"assertive\",id:\"\".concat(eh,\"-error\")},null===(H=eu.email)||void 0===H?void 0:H.message)),F.createElement(s,null,F.createElement(b,{htmlFor:eg},el(\"Description\")),F.createElement(h,null,F.createElement(C,{name:\"description\",control:ec,render:e=>{let{field:r}=e;return F.createElement(c,a({id:eg},r,{rows:4}))}}))),F.createElement(s,null,F.createElement(b,{htmlFor:eq},el(\"Sender_Info\")),F.createElement(h,null,F.createElement(C,{name:\"senderInfo\",control:ec,render:e=>{let{field:r}=e;return F.createElement(o,a({id:eq},r,{\"aria-describedby\":\"\".concat(eq,\"-hint\")}))}})),F.createElement(q,{id:\"\".concat(eq,\"-hint\")},el(\"Will_Appear_In_From\"))),F.createElement(s,null,F.createElement(b,{htmlFor:eS},el(\"Department\")),F.createElement(h,null,F.createElement(C,{control:ec,name:\"department\",render:e=>{let{field:{onChange:r,onBlur:l,name:t,value:a}}=e;return F.createElement(T,{id:eS,name:t,onBlur:l,value:a,onChange:r,\"aria-describedby\":\"\".concat(eS,\"-hint\")})}})),F.createElement(q,{id:\"\".concat(eS,\"-hint\")},el(\"Only_Members_Selected_Department_Can_View_Channel\"))))),F.createElement(i.Item,{defaultExpanded:!(null!=er&&er._id),title:el(\"Configure_Outgoing_Mail_SMTP\")},F.createElement(v,null,F.createElement(s,null,F.createElement(b,{htmlFor:eP,required:!0},el(\"Server\")),F.createElement(h,null,F.createElement(C,{name:\"smtpServer\",control:ec,rules:{required:el(\"Required_field\",{field:el(\"Server\")})},render:e=>{var r;let{field:l}=e;return F.createElement(o,a({id:eP},l,{error:null===(r=eu.smtpServer)||void 0===r?void 0:r.message,\"aria-required\":!0,\"aria-invalid\":!!eu.email,\"aria-describedby\":\"\".concat(eP,\"-error\")}))}})),eu.smtpServer&&F.createElement(g,{\"aria-live\":\"assertive\",id:\"\".concat(eP,\"-error\")},null===(Y=eu.smtpServer)||void 0===Y?void 0:Y.message)),F.createElement(s,null,F.createElement(b,{htmlFor:ew,required:!0},el(\"Port\")),F.createElement(h,null,F.createElement(C,{name:\"smtpPort\",control:ec,rules:{required:el(\"Required_field\",{field:el(\"Port\")})},render:e=>{var r;let{field:l}=e;return F.createElement(_,a({id:ew},l,{error:null===(r=eu.smtpPort)||void 0===r?void 0:r.message,\"aria-required\":!0,\"aria-invalid\":!!eu.email,\"aria-describedby\":\"\".concat(ew,\"-error\")}))}})),eu.smtpPort&&F.createElement(g,{\"aria-live\":\"assertive\",id:\"\".concat(ew,\"-error\")},null===(z=eu.smtpPort)||void 0===z?void 0:z.message)),F.createElement(s,null,F.createElement(b,{htmlFor:ey,required:!0},el(\"Username\")),F.createElement(h,null,F.createElement(C,{name:\"smtpUsername\",control:ec,rules:{required:el(\"Required_field\",{field:el(\"Username\")})},render:e=>{var r;let{field:l}=e;return F.createElement(o,a({id:ey},l,{error:null===(r=eu.smtpUsername)||void 0===r?void 0:r.message,\"aria-describedby\":\"\".concat(ey,\"-error\"),\"aria-required\":!0,\"aria-invalid\":!!eu.email}))}})),eu.smtpUsername&&F.createElement(g,{\"aria-live\":\"assertive\",id:\"\".concat(ey,\"-error\")},null===(J=eu.smtpUsername)||void 0===J?void 0:J.message)),F.createElement(s,null,F.createElement(b,{htmlFor:ek,required:!0},el(\"Password\")),F.createElement(h,null,F.createElement(C,{name:\"smtpPassword\",control:ec,rules:{required:el(\"Required_field\",{field:el(\"Password\")})},render:e=>{var r;let{field:l}=e;return F.createElement(f,a({id:ek},l,{error:null===(r=eu.smtpPassword)||void 0===r?void 0:r.message,\"aria-describedby\":\"\".concat(ek,\"-error\"),\"aria-required\":!0,\"aria-invalid\":!!eu.email}))}})),eu.smtpPassword&&F.createElement(g,{\"aria-live\":\"assertive\",id:\"\".concat(ek,\"-error\")},null===(K=eu.smtpPassword)||void 0===K?void 0:K.message)),F.createElement(s,null,F.createElement(h,null,F.createElement(b,{htmlFor:ex},el(\"Connect_SSL_TLS\")),F.createElement(C,{control:ec,name:\"smtpSecure\",render:e=>{let{field:{value:r}}=e,l=t(e.field,L);return F.createElement(u,a({id:ex},l,{checked:r}))}}))))),F.createElement(i.Item,{defaultExpanded:!(null!=er&&er._id),title:el(\"Configure_Incoming_Mail_IMAP\")},F.createElement(v,null,F.createElement(s,null,F.createElement(b,{htmlFor:eF,required:!0},el(\"Server\")),F.createElement(h,null,F.createElement(C,{name:\"imapServer\",control:ec,rules:{required:el(\"Required_field\",{field:el(\"Server\")})},render:e=>{var r;let{field:l}=e;return F.createElement(o,a({id:eF},l,{error:null===(r=eu.imapServer)||void 0===r?void 0:r.message,\"aria-describedby\":\"\".concat(eF,\"-error\"),\"aria-required\":!0,\"aria-invalid\":!!eu.email}))}})),eu.imapServer&&F.createElement(g,{\"aria-live\":\"assertive\",id:\"\".concat(eF,\"-error\")},null===(Q=eu.imapServer)||void 0===Q?void 0:Q.message)),F.createElement(s,null,F.createElement(b,{htmlFor:eI,required:!0},el(\"Port\")),F.createElement(h,null,F.createElement(C,{name:\"imapPort\",control:ec,rules:{required:el(\"Required_field\",{field:el(\"Port\")})},render:e=>{var r;let{field:l}=e;return F.createElement(_,a({id:eI},l,{error:null===(r=eu.imapPort)||void 0===r?void 0:r.message,\"aria-describedby\":\"\".concat(eI,\"-error\"),\"aria-required\":!0,\"aria-invalid\":!!eu.email}))}})),eu.imapPort&&F.createElement(g,{\"aria-live\":\"assertive\",id:\"\".concat(eI,\"-error\")},null===(X=eu.imapPort)||void 0===X?void 0:X.message)),F.createElement(s,null,F.createElement(b,{htmlFor:eR,required:!0},el(\"Username\")),F.createElement(h,null,F.createElement(C,{name:\"imapUsername\",control:ec,rules:{required:el(\"Required_field\",{field:el(\"Username\")})},render:e=>{var r;let{field:l}=e;return F.createElement(o,a({id:eR},l,{error:null===(r=eu.imapUsername)||void 0===r?void 0:r.message,\"aria-describedby\":\"\".concat(eR,\"-error\"),\"aria-required\":!0,\"aria-invalid\":!!eu.email}))}})),eu.imapUsername&&F.createElement(g,{\"aria-live\":\"assertive\",id:\"\".concat(eR,\"-error\")},null===(Z=eu.imapUsername)||void 0===Z?void 0:Z.message)),F.createElement(s,null,F.createElement(b,{htmlFor:eC,required:!0},el(\"Password\")),F.createElement(h,null,F.createElement(C,{name:\"imapPassword\",control:ec,rules:{required:el(\"Required_field\",{field:el(\"Password\")})},render:e=>{var r;let{field:l}=e;return F.createElement(f,a({id:eC},l,{error:null===(r=eu.imapPassword)||void 0===r?void 0:r.message,\"aria-describedby\":\"\".concat(eC,\"-error\"),\"aria-required\":!0,\"aria-invalid\":!!eu.email}))}})),eu.imapPassword&&F.createElement(g,{\"aria-live\":\"assertive\",id:\"\".concat(eC,\"-error\")},null===($=eu.imapPassword)||void 0===$?void 0:$.message)),F.createElement(s,null,F.createElement(b,{htmlFor:eU,required:!0},el(\"Max_Retry\")),F.createElement(h,null,F.createElement(C,{name:\"imapRetries\",control:ec,rules:{required:el(\"Required_field\",{field:el(\"Max_Retry\")})},render:e=>{var r;let{field:l}=e;return F.createElement(_,a({id:eU},l,{error:null===(r=eu.imapRetries)||void 0===r?void 0:r.message,\"aria-describedby\":\"\".concat(eU,\"-error\"),\"aria-required\":!0,\"aria-invalid\":!!eu.email}))}})),eu.imapRetries&&F.createElement(g,{\"aria-live\":\"assertive\",id:\"\".concat(eU,\"-error\")},null===(ee=eu.imapRetries)||void 0===ee?void 0:ee.message)),F.createElement(s,null,F.createElement(h,null,F.createElement(b,{htmlFor:eM},el(\"Connect_SSL_TLS\")),F.createElement(C,{control:ec,name:\"imapSecure\",render:e=>{let{field:{value:r}}=e,l=t(e.field,B);return F.createElement(u,a({id:eM},l,{checked:r}))}}))))),F.createElement(s,null,F.createElement(h,null,F.createElement(d,{stretch:!0},F.createElement(m,{onClick:ei},el(\"Cancel\")),F.createElement(m,{disabled:!ev,primary:!0,onClick:es(ep)},el(\"Save\")))),F.createElement(h,null,F.createElement(p,{blockStart:16},F.createElement(d,{stretch:!0},(null==er?void 0:er._id)&&F.createElement(m,{danger:!0,onClick:eE},el(\"Delete\")))))))))})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/emailInbox/EmailInboxForm.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IEmailInboxPayload } from '@rocket.chat/core-typings';\\nimport {\\n\\tAccordion,\\n\\tButton,\\n\\tButtonGroup,\\n\\tTextInput,\\n\\tTextAreaInput,\\n\\tField,\\n\\tToggleSwitch,\\n\\tFieldGroup,\\n\\tBox,\\n\\tMargins,\\n\\tNumberInput,\\n\\tPasswordInput,\\n\\tFieldLabel,\\n\\tFieldRow,\\n\\tFieldError,\\n\\tFieldHint,\\n} from '@rocket.chat/fuselage';\\nimport { useMutableCallback, useUniqueId } from '@rocket.chat/fuselage-hooks';\\nimport { useSetModal, useToastMessageDispatch, useRoute, useEndpoint } from '@rocket.chat/ui-contexts';\\nimport type { ReactElement } from 'react';\\nimport React, { useCallback } from 'react';\\nimport { useForm, Controller } from 'react-hook-form';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport { validateEmail } from '../../../../lib/emailValidator';\\nimport AutoCompleteDepartment from '../../../components/AutoCompleteDepartment';\\nimport GenericModal from '../../../components/GenericModal';\\nimport { PageScrollableContentWithShadow } from '../../../components/Page';\\n\\nconst EmailInboxForm = ({ inboxData }: { inboxData?: IEmailInboxPayload }): ReactElement => {\\n\\tconst { t } = useTranslation();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst setModal = useSetModal();\\n\\tconst router = useRoute('admin-email-inboxes');\\n\\n\\tconst handleBack = useCallback(() => router.push({}), [router]);\\n\\n\\tconst saveEmailInbox = useEndpoint('POST', '/v1/email-inbox');\\n\\tconst deleteInboxAction = useEndpoint('DELETE', '/v1/email-inbox/:_id', { _id: inboxData?._id ?? '' });\\n\\tconst emailAlreadyExistsAction = useEndpoint('GET', '/v1/email-inbox.search');\\n\\n\\tconst {\\n\\t\\tcontrol,\\n\\t\\thandleSubmit,\\n\\t\\tformState: { errors, isDirty },\\n\\t} = useForm({\\n\\t\\tdefaultValues: {\\n\\t\\t\\tactive: inboxData?.active ?? true,\\n\\t\\t\\tname: inboxData?.name,\\n\\t\\t\\temail: inboxData?.email,\\n\\t\\t\\tdescription: inboxData?.description,\\n\\t\\t\\tsenderInfo: inboxData?.senderInfo,\\n\\t\\t\\tdepartment: inboxData?.department || '',\\n\\t\\t\\t// SMTP\\n\\t\\t\\tsmtpServer: inboxData?.smtp.server,\\n\\t\\t\\tsmtpPort: inboxData?.smtp.port ?? 587,\\n\\t\\t\\tsmtpUsername: inboxData?.smtp.username,\\n\\t\\t\\tsmtpPassword: inboxData?.smtp.password,\\n\\t\\t\\tsmtpSecure: inboxData?.smtp.secure ?? false,\\n\\t\\t\\t// IMAP\\n\\t\\t\\timapServer: inboxData?.imap.server,\\n\\t\\t\\timapPort: inboxData?.imap.port ?? 993,\\n\\t\\t\\timapUsername: inboxData?.imap.username,\\n\\t\\t\\timapPassword: inboxData?.imap.password,\\n\\t\\t\\timapSecure: inboxData?.imap.secure ?? false,\\n\\t\\t\\timapRetries: inboxData?.imap.maxRetries ?? 10,\\n\\t\\t},\\n\\t\\tmode: 'all',\\n\\t});\\n\\n\\tconst handleDelete = useMutableCallback(() => {\\n\\t\\tconst deleteInbox = async (): Promise<void> => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait deleteInboxAction();\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_removed') });\\n\\t\\t\\t\\thandleBack();\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t} finally {\\n\\t\\t\\t\\tsetModal(null);\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\tsetModal(\\n\\t\\t\\t<GenericModal variant='danger' onConfirm={deleteInbox} onCancel={(): void => setModal(null)} confirmText={t('Delete')}>\\n\\t\\t\\t\\t{t('You_will_not_be_able_to_recover_email_inbox')}\\n\\t\\t\\t</GenericModal>,\\n\\t\\t);\\n\\t});\\n\\n\\tconst handleSave = useMutableCallback(\\n\\t\\tasync ({\\n\\t\\t\\tactive,\\n\\t\\t\\tname,\\n\\t\\t\\temail,\\n\\t\\t\\tdescription,\\n\\t\\t\\tsenderInfo,\\n\\t\\t\\tdepartment,\\n\\t\\t\\tsmtpServer,\\n\\t\\t\\tsmtpPort,\\n\\t\\t\\tsmtpUsername,\\n\\t\\t\\tsmtpPassword,\\n\\t\\t\\tsmtpSecure,\\n\\t\\t\\timapServer,\\n\\t\\t\\timapPort,\\n\\t\\t\\timapUsername,\\n\\t\\t\\timapPassword,\\n\\t\\t\\timapSecure,\\n\\t\\t\\timapRetries,\\n\\t\\t}) => {\\n\\t\\t\\tconst smtp = {\\n\\t\\t\\t\\tserver: smtpServer,\\n\\t\\t\\t\\tport: parseInt(smtpPort),\\n\\t\\t\\t\\tusername: smtpUsername,\\n\\t\\t\\t\\tpassword: smtpPassword,\\n\\t\\t\\t\\tsecure: smtpSecure,\\n\\t\\t\\t};\\n\\n\\t\\t\\tconst imap = {\\n\\t\\t\\t\\tserver: imapServer,\\n\\t\\t\\t\\tport: parseInt(imapPort),\\n\\t\\t\\t\\tusername: imapUsername,\\n\\t\\t\\t\\tpassword: imapPassword,\\n\\t\\t\\t\\tsecure: imapSecure,\\n\\t\\t\\t\\tmaxRetries: parseInt(imapRetries),\\n\\t\\t\\t};\\n\\n\\t\\t\\tconst payload = {\\n\\t\\t\\t\\t...(inboxData?._id && { _id: inboxData?._id }),\\n\\t\\t\\t\\tactive,\\n\\t\\t\\t\\tname,\\n\\t\\t\\t\\temail,\\n\\t\\t\\t\\tdescription,\\n\\t\\t\\t\\tsenderInfo,\\n\\t\\t\\t\\t...(department && { department: typeof department === 'string' ? department : department.value }),\\n\\t\\t\\t\\tsmtp,\\n\\t\\t\\t\\timap,\\n\\t\\t\\t};\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait saveEmailInbox(payload);\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_added') });\\n\\t\\t\\t\\thandleBack();\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t}\\n\\t\\t},\\n\\t);\\n\\n\\tconst checkEmailExists = useMutableCallback(async (email) => {\\n\\t\\tif (!email) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (!validateEmail(email)) {\\n\\t\\t\\treturn t('error-invalid-email-address');\\n\\t\\t}\\n\\n\\t\\tconst { emailInbox } = await emailAlreadyExistsAction({ email });\\n\\n\\t\\tif (!emailInbox || (inboxData?._id && emailInbox._id === inboxData?._id)) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\treturn t('Email_already_exists');\\n\\t});\\n\\n\\tconst activeField = useUniqueId();\\n\\tconst nameField = useUniqueId();\\n\\tconst emailField = useUniqueId();\\n\\tconst descriptionField = useUniqueId();\\n\\tconst senderInfoField = useUniqueId();\\n\\tconst departmentField = useUniqueId();\\n\\n\\tconst smtpServerField = useUniqueId();\\n\\tconst smtpPortField = useUniqueId();\\n\\tconst smtpUsernameField = useUniqueId();\\n\\tconst smtpPasswordField = useUniqueId();\\n\\tconst smtpSecureField = useUniqueId();\\n\\n\\tconst imapServerField = useUniqueId();\\n\\tconst imapPortField = useUniqueId();\\n\\tconst imapUsernameField = useUniqueId();\\n\\tconst imapPasswordField = useUniqueId();\\n\\tconst imapRetriesField = useUniqueId();\\n\\tconst imapSecureField = useUniqueId();\\n\\n\\treturn (\\n\\t\\t<PageScrollableContentWithShadow>\\n\\t\\t\\t<Box maxWidth='x600' w='full' alignSelf='center'>\\n\\t\\t\\t\\t<Accordion>\\n\\t\\t\\t\\t\\t<Accordion.Item defaultExpanded title={t('Inbox_Info')}>\\n\\t\\t\\t\\t\\t\\t<FieldGroup>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={activeField}>{t('Active')}</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='active'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field: { onChange, value, ref } }): ReactElement => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ToggleSwitch id={activeField} ref={ref} checked={value} onChange={onChange} />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={nameField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Name')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='name'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Name') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={nameField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.name?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.name)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${nameField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.name && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${nameField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.name?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={emailField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Email')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='email'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trequired: t('Required_field', { field: t('Email') }),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalidate: (value) => checkEmailExists(value),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={emailField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.email?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${emailField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.email && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${emailField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.email?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={descriptionField}>{t('Description')}</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='description'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => <TextAreaInput id={descriptionField} {...field} rows={4} />}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={senderInfoField}>{t('Sender_Info')}</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='senderInfo'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => <TextInput id={senderInfoField} {...field} aria-describedby={`${senderInfoField}-hint`} />}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldHint id={`${senderInfoField}-hint`}>{t('Will_Appear_In_From')}</FieldHint>\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={departmentField}>{t('Department')}</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='department'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field: { onChange, onBlur, name, value } }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<AutoCompleteDepartment\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={departmentField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname={name}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonBlur={onBlur}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue={value}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonChange={onChange}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${departmentField}-hint`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldHint id={`${departmentField}-hint`}>{t('Only_Members_Selected_Department_Can_View_Channel')}</FieldHint>\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t</FieldGroup>\\n\\t\\t\\t\\t\\t</Accordion.Item>\\n\\t\\t\\t\\t\\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Outgoing_Mail_SMTP')}>\\n\\t\\t\\t\\t\\t\\t<FieldGroup>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={smtpServerField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Server')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='smtpServer'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Server') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={smtpServerField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.smtpServer?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${smtpServerField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpServer && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${smtpServerField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpServer?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={smtpPortField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Port')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='smtpPort'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Port') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<NumberInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={smtpPortField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.smtpPort?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${smtpPortField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpPort && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${smtpPortField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpPort?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={smtpUsernameField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Username')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='smtpUsername'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Username') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={smtpUsernameField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.smtpUsername?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${smtpUsernameField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpUsername && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${smtpUsernameField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpUsername?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={smtpPasswordField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Password')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='smtpPassword'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Password') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<PasswordInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={smtpPasswordField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.smtpPassword?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${smtpPasswordField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpPassword && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${smtpPasswordField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpPassword?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={smtpSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='smtpSecure'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field: { value, ...field } }) => <ToggleSwitch id={smtpSecureField} {...field} checked={value} />}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t</FieldGroup>\\n\\t\\t\\t\\t\\t</Accordion.Item>\\n\\t\\t\\t\\t\\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Incoming_Mail_IMAP')}>\\n\\t\\t\\t\\t\\t\\t<FieldGroup>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={imapServerField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Server')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='imapServer'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Server') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={imapServerField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.imapServer?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${imapServerField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapServer && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${imapServerField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapServer?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={imapPortField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Port')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='imapPort'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Port') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<NumberInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={imapPortField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.imapPort?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${imapPortField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapPort && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${imapPortField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapPort?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={imapUsernameField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Username')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='imapUsername'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Username') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={imapUsernameField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.imapUsername?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${imapUsernameField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapUsername && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${imapUsernameField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapUsername?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={imapPasswordField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Password')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='imapPassword'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Password') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<PasswordInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={imapPasswordField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.imapPassword?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${imapPasswordField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapPassword && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${imapPasswordField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapPassword?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={imapRetriesField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Max_Retry')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='imapRetries'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Max_Retry') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<NumberInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={imapRetriesField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.imapRetries?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${imapRetriesField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapRetries && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${imapRetriesField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapRetries?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={imapSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='imapSecure'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field: { value, ...field } }) => <ToggleSwitch id={imapSecureField} {...field} checked={value} />}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t</FieldGroup>\\n\\t\\t\\t\\t\\t</Accordion.Item>\\n\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t<ButtonGroup stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Button onClick={handleBack}>{t('Cancel')}</Button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Button disabled={!isDirty} primary onClick={handleSubmit(handleSave)}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Save')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t<Margins blockStart={16}>\\n\\t\\t\\t\\t\\t\\t\\t\\t<ButtonGroup stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{inboxData?._id && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Button danger onClick={handleDelete}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Delete')}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t\\t\\t\\t</Margins>\\n\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t</Accordion>\\n\\t\\t\\t</Box>\\n\\t\\t</PageScrollableContentWithShadow>\\n\\t);\\n};\\n\\nexport default EmailInboxForm;\\n\",null],\"names\":[\"_objectWithoutProperties\",\"_extends\",\"_objectSpread\",\"Accordion\",\"Button\",\"ButtonGroup\",\"TextInput\",\"TextAreaInput\",\"Field\",\"ToggleSwitch\",\"FieldGroup\",\"Box\",\"Margins\",\"NumberInput\",\"PasswordInput\",\"FieldLabel\",\"FieldRow\",\"FieldError\",\"FieldHint\",\"useMutableCallback\",\"useUniqueId\",\"useSetModal\",\"useToastMessageDispatch\",\"useRoute\",\"useEndpoint\",\"React\",\"useCallback\",\"useForm\",\"Controller\",\"useTranslation\",\"validateEmail\",\"AutoCompleteDepartment\",\"GenericModal\",\"PageScrollableContentWithShadow\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"_inboxData$_id\",\"_inboxData$active\",\"_inboxData$smtp$port\",\"_inboxData$smtp$secur\",\"_inboxData$imap$port\",\"_inboxData$imap$secur\",\"_inboxData$imap$maxRe\",\"_errors$name2\",\"_errors$email2\",\"_errors$smtpServer2\",\"_errors$smtpPort2\",\"_errors$smtpUsername2\",\"_errors$smtpPassword2\",\"_errors$imapServer2\",\"_errors$imapPort2\",\"_errors$imapUsername2\",\"_errors$imapPassword2\",\"_errors$imapRetries2\",\"inboxData\",\"t\",\"dispatchToastMessage\",\"setModal\",\"router\",\"handleBack\",\"push\",\"saveEmailInbox\",\"deleteInboxAction\",\"_id\",\"emailAlreadyExistsAction\",\"control\",\"handleSubmit\",\"formState\",\"errors\",\"isDirty\",\"defaultValues\",\"active\",\"name\",\"email\",\"description\",\"senderInfo\",\"department\",\"smtpServer\",\"smtp\",\"server\",\"smtpPort\",\"port\",\"smtpUsername\",\"username\",\"smtpPassword\",\"password\",\"smtpSecure\",\"secure\",\"imapServer\",\"imap\",\"imapPort\",\"imapUsername\",\"imapPassword\",\"imapSecure\",\"imapRetries\",\"maxRetries\",\"mode\",\"handleDelete\",\"deleteInbox\",\"type\",\"message\",\"error\",\"createElement\",\"variant\",\"onConfirm\",\"onCancel\",\"confirmText\",\"handleSave\",\"_ref2\",\"parseInt\",\"payload\",\"value\",\"checkEmailExists\",\"emailInbox\",\"activeField\",\"nameField\",\"emailField\",\"descriptionField\",\"senderInfoField\",\"departmentField\",\"smtpServerField\",\"smtpPortField\",\"smtpUsernameField\",\"smtpPasswordField\",\"smtpSecureField\",\"imapServerField\",\"imapPortField\",\"imapUsernameField\",\"imapPasswordField\",\"imapRetriesField\",\"imapSecureField\",\"maxWidth\",\"w\",\"alignSelf\",\"Item\",\"defaultExpanded\",\"title\",\"htmlFor\",\"render\",\"_ref3\",\"field\",\"onChange\",\"ref\",\"id\",\"checked\",\"required\",\"rules\",\"_ref4\",\"_errors$name\",\"Boolean\",\"concat\",\"validate\",\"_ref5\",\"_errors$email\",\"_ref6\",\"rows\",\"_ref7\",\"_ref8\",\"onBlur\",\"_ref9\",\"_errors$smtpServer\",\"_ref10\",\"_errors$smtpPort\",\"_ref11\",\"_errors$smtpUsername\",\"_ref12\",\"_errors$smtpPassword\",\"_ref13\",\"_excluded\",\"_ref14\",\"_errors$imapServer\",\"_ref15\",\"_errors$imapPort\",\"_ref16\",\"_errors$imapUsername\",\"_ref17\",\"_errors$imapPassword\",\"_ref18\",\"_errors$imapRetries\",\"_ref19\",\"_excluded2\",\"stretch\",\"onClick\",\"disabled\",\"primary\",\"blockStart\",\"danger\"],\"mappings\":\"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\"}"}