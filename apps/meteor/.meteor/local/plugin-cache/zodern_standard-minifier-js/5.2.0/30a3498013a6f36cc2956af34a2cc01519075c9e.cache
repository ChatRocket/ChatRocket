{"code":"function module(e,t,n){let r,a,l,o,s;n.link(\"@babel/runtime/helpers/extends\",{default(e){r=e}},0),n.export({useConfirmOwnerChanges:()=>u}),n.link(\"@rocket.chat/ui-contexts\",{useSetModal(e){a=e},useToastMessageDispatch(e){l=e}},0),n.link(\"react\",{default(e){o=e}},1),n.link(\"../../../../components/ConfirmOwnerChangeModal\",{default(e){s=e}},2);let u=()=>{let e=a(),t=l();return async(n,a,l)=>{try{return await n()}catch(u){if(\"user-last-owner\"===u.errorType){let{shouldChangeOwner:t,shouldBeRemoved:i}=u.details,c=async()=>{await n(!0),e(),l()};return e(o.createElement(s,r({},a,{shouldChangeOwner:t,shouldBeRemoved:i,onConfirm:c,onCancel:()=>e()})))}t({type:\"error\",message:u})}}}}","map":"{\"version\":3,\"sources\":[\"client/views/admin/users/hooks/useConfirmOwnerChanges.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { useSetModal, useToastMessageDispatch } from '@rocket.chat/ui-contexts';\\nimport type { ComponentProps } from 'react';\\nimport React from 'react';\\n\\nimport ConfirmOwnerChangeWarningModal from '../../../../components/ConfirmOwnerChangeModal';\\n\\nexport const useConfirmOwnerChanges = (): ((\\n\\taction: (confirm?: boolean) => Promise<void>,\\n\\tmodalProps: Pick<ComponentProps<typeof ConfirmOwnerChangeWarningModal>, 'contentTitle' | 'confirmText'>,\\n\\tonChange: () => void,\\n) => Promise<void>) => {\\n\\tconst setModal = useSetModal();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\n\\treturn async (action, modalProps, onChange): Promise<void> => {\\n\\t\\ttry {\\n\\t\\t\\treturn await action();\\n\\t\\t} catch (error: any) {\\n\\t\\t\\tif (error.errorType === 'user-last-owner') {\\n\\t\\t\\t\\tconst { shouldChangeOwner, shouldBeRemoved } = error.details;\\n\\n\\t\\t\\t\\tconst handleConfirm = async (): Promise<void> => {\\n\\t\\t\\t\\t\\tawait action(true);\\n\\t\\t\\t\\t\\tsetModal();\\n\\t\\t\\t\\t\\tonChange();\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\treturn setModal(\\n\\t\\t\\t\\t\\t<ConfirmOwnerChangeWarningModal\\n\\t\\t\\t\\t\\t\\t{...modalProps}\\n\\t\\t\\t\\t\\t\\tshouldChangeOwner={shouldChangeOwner}\\n\\t\\t\\t\\t\\t\\tshouldBeRemoved={shouldBeRemoved}\\n\\t\\t\\t\\t\\t\\tonConfirm={handleConfirm}\\n\\t\\t\\t\\t\\t\\tonCancel={(): void => setModal()}\\n\\t\\t\\t\\t\\t/>,\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t}\\n\\t};\\n};\\n\",null],\"names\":[\"_extends\",\"useSetModal\",\"useToastMessageDispatch\",\"React\",\"ConfirmOwnerChangeWarningModal\",\"module\",\"link\",\"default\",\"v\",\"export\",\"useConfirmOwnerChanges\",\"setModal\",\"dispatchToastMessage\",\"action\",\"modalProps\",\"onChange\",\"error\",\"errorType\",\"shouldChangeOwner\",\"shouldBeRemoved\",\"details\",\"handleConfirm\",\"createElement\",\"onConfirm\",\"onCancel\",\"type\",\"message\"],\"mappings\":\"2BAAAA,EAAqDC,EAA2BC,EAAAC,EAAAC,EAAvEC,EAAWC,IAAE,CAAA,iCAA+B,CAAAC,QAAAC,CAAA,EAAAR,EAA0BQ,CAAC,CAAA,EAAA,GAAhFH,EAAOI,MAAE,CAAA,CAAAC,uBAAaA,IAAAA,CAA+B,GAA2BL,EAAAC,IAAA,CAAA,2BAAA,CAAAL,YAAAO,CAAA,EAAAP,EAAAO,CAAA,EAAAN,wBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAC,QAAAC,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,iDAAA,CAAAC,QAAAC,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAMzE,IAAME,EAAyBA,KAKrC,IAAMC,EAAWV,IACXW,EAAuBV,IAE7B,OAAO,MAAOW,EAAQC,EAAYC,KACjC,GAAI,CACH,OAAO,MAAMF,GACd,CAAE,MAAOG,EAAY,CACpB,GAAIA,AAAoB,oBAApBA,EAAMC,SAAS,CAAwB,CAC1C,GAAM,CAAEC,kBAAAA,CAAiB,CAAEC,gBAAAA,CAAAA,CAAiB,CAAGH,EAAMI,OAAO,CAEtDC,EAAgB,UACrB,MAAMR,EAAO,CAAA,GACbF,IACAI,GACD,EAEA,OAAOJ,EACNR,EAAAmB,aAAA,CAAClB,EAA8BJ,EAAA,CAAA,EAC1Bc,EAAU,CACdI,kBAAmBA,EACnBC,gBAAiBA,EACjBI,UAAWF,EACXG,SAAUA,IAAYb,GAAW,IAGpC,CACAC,EAAqB,CAAEa,KAAM,QAASC,QAASV,CAAK,EACrD,CACD,CACD\"}"}