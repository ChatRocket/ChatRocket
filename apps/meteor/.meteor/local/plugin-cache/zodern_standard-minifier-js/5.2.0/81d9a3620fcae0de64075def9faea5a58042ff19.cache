{"code":"function module(e,n,t){let l,a,r,o,c,i,m,s,u,d;t.link(\"@rocket.chat/fuselage\",{Box(e){l=e},CheckBox(e){a=e}},0),t.link(\"react\",{default(e){r=e}},1),t.link(\"react-i18next\",{useTranslation(e){o=e}},2),t.link(\"../../../../../../components/GenericTable\",{GenericTable(e){c=e},GenericTableHeaderCell(e){i=e},GenericTableBody(e){m=e},GenericTableHeader(e){s=e}},3),t.link(\"../../../../../../components/GenericTable/hooks/useSort\",{useSort(e){u=e}},4),t.link(\"./ChannelDeletionTableRow\",{default(e){d=e}},5),t.exportDefault(e=>{let{rooms:n,onChangeRoomSelection:t,selectedRooms:k,onToggleAllRooms:C}=e,{t:h}=o(),{sortBy:E,sortDirection:b,setSort:f}=u(\"name\"),g=Object.values(k).filter(Boolean).length,x=(()=>{if(n){let e=[...n];return(\"name\"===E&&e.sort((e,n)=>e.name&&n.name?e.name.localeCompare(n.name):0),\"usersCount\"===E&&e.sort((e,n)=>e.usersCount-n.usersCount),\"desc\"===b)?null==e?void 0:e.reverse():e}})(),T=n.length===g,p=n.length>g&&g>0,v=r.createElement(r.Fragment,null,r.createElement(i,{key:\"name\",sort:\"name\",onClick:f,direction:b,active:\"name\"===E},r.createElement(a,{indeterminate:p,checked:T,onChange:C}),r.createElement(l,{mi:8},h(\"Channel_name\"))),r.createElement(i,{key:\"usersCount\",sort:\"usersCount\",onClick:f,direction:b,active:\"usersCount\"===E},r.createElement(l,{width:\"100%\",textAlign:\"end\"},h(\"Members\"))));return r.createElement(l,{display:\"flex\",flexDirection:\"column\",height:\"x200\",mbs:24},r.createElement(c,null,r.createElement(s,null,v),r.createElement(m,null,null==x?void 0:x.map(e=>r.createElement(d,{room:e,key:e._id,onChange:t,selected:!!k[e._id]})))))})}","map":"{\"version\":3,\"sources\":[\"client/views/teams/contextualBar/info/DeleteTeam/ChannelDeletionTable/ChannelDeletionTable.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, Serialized } from '@rocket.chat/core-typings';\\nimport { Box, CheckBox } from '@rocket.chat/fuselage';\\nimport React from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport { GenericTable, GenericTableHeaderCell, GenericTableBody, GenericTableHeader } from '../../../../../../components/GenericTable';\\nimport { useSort } from '../../../../../../components/GenericTable/hooks/useSort';\\nimport ChannelDeletionTableRow from './ChannelDeletionTableRow';\\n\\ntype ChannelDeletionTableProps = {\\n\\trooms: Serialized<IRoom>[];\\n\\tonToggleAllRooms: () => void;\\n\\tonChangeRoomSelection: (room: Serialized<IRoom>) => void;\\n\\tselectedRooms: { [key: string]: Serialized<IRoom> };\\n};\\n\\nconst ChannelDeletionTable = ({ rooms, onChangeRoomSelection, selectedRooms, onToggleAllRooms }: ChannelDeletionTableProps) => {\\n\\tconst { t } = useTranslation();\\n\\tconst { sortBy, sortDirection, setSort } = useSort<'name' | 'usersCount'>('name');\\n\\n\\tconst selectedRoomsLength = Object.values(selectedRooms).filter(Boolean).length;\\n\\n\\tconst getSortedChannels = () => {\\n\\t\\tif (rooms) {\\n\\t\\t\\tconst sortedRooms = [...rooms];\\n\\t\\t\\tif (sortBy === 'name') {\\n\\t\\t\\t\\tsortedRooms.sort((a, b) => (a.name && b.name ? a.name.localeCompare(b.name) : 0));\\n\\t\\t\\t}\\n\\t\\t\\tif (sortBy === 'usersCount') {\\n\\t\\t\\t\\tsortedRooms.sort((a, b) => a.usersCount - b.usersCount);\\n\\t\\t\\t}\\n\\t\\t\\tif (sortDirection === 'desc') {\\n\\t\\t\\t\\treturn sortedRooms?.reverse();\\n\\t\\t\\t}\\n\\t\\t\\treturn sortedRooms;\\n\\t\\t}\\n\\t};\\n\\n\\tconst sortedRooms = getSortedChannels();\\n\\n\\tconst checked = rooms.length === selectedRoomsLength;\\n\\tconst indeterminate = rooms.length > selectedRoomsLength && selectedRoomsLength > 0;\\n\\n\\tconst headers = (\\n\\t\\t<>\\n\\t\\t\\t<GenericTableHeaderCell key='name' sort='name' onClick={setSort} direction={sortDirection} active={sortBy === 'name'}>\\n\\t\\t\\t\\t<CheckBox indeterminate={indeterminate} checked={checked} onChange={onToggleAllRooms} />\\n\\t\\t\\t\\t<Box mi={8}>{t('Channel_name')}</Box>\\n\\t\\t\\t</GenericTableHeaderCell>\\n\\t\\t\\t<GenericTableHeaderCell\\n\\t\\t\\t\\tkey='usersCount'\\n\\t\\t\\t\\tsort='usersCount'\\n\\t\\t\\t\\tonClick={setSort}\\n\\t\\t\\t\\tdirection={sortDirection}\\n\\t\\t\\t\\tactive={sortBy === 'usersCount'}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<Box width='100%' textAlign='end'>\\n\\t\\t\\t\\t\\t{t('Members')}\\n\\t\\t\\t\\t</Box>\\n\\t\\t\\t</GenericTableHeaderCell>\\n\\t\\t</>\\n\\t);\\n\\n\\treturn (\\n\\t\\t<Box display='flex' flexDirection='column' height='x200' mbs={24}>\\n\\t\\t\\t<GenericTable>\\n\\t\\t\\t\\t<GenericTableHeader>{headers}</GenericTableHeader>\\n\\t\\t\\t\\t<GenericTableBody>\\n\\t\\t\\t\\t\\t{sortedRooms?.map((room) => (\\n\\t\\t\\t\\t\\t\\t<ChannelDeletionTableRow room={room} key={room._id} onChange={onChangeRoomSelection} selected={!!selectedRooms[room._id]} />\\n\\t\\t\\t\\t\\t))}\\n\\t\\t\\t\\t</GenericTableBody>\\n\\t\\t\\t</GenericTable>\\n\\t\\t</Box>\\n\\t);\\n};\\n\\nexport default ChannelDeletionTable;\\n\",null],\"names\":[\"Box\",\"CheckBox\",\"React\",\"useTranslation\",\"GenericTable\",\"GenericTableHeaderCell\",\"GenericTableBody\",\"GenericTableHeader\",\"useSort\",\"ChannelDeletionTableRow\",\"module\",\"link\",\"v\",\"default\",\"exportDefault\",\"_ref\",\"rooms\",\"onChangeRoomSelection\",\"selectedRooms\",\"onToggleAllRooms\",\"t\",\"sortBy\",\"sortDirection\",\"setSort\",\"selectedRoomsLength\",\"Object\",\"values\",\"filter\",\"Boolean\",\"length\",\"sortedRooms\",\"getSortedChannels\",\"sort\",\"a\",\"b\",\"name\",\"localeCompare\",\"usersCount\",\"reverse\",\"checked\",\"indeterminate\",\"headers\",\"createElement\",\"Fragment\",\"key\",\"onClick\",\"direction\",\"active\",\"onChange\",\"mi\",\"width\",\"textAlign\",\"display\",\"flexDirection\",\"height\",\"mbs\",\"map\",\"room\",\"_id\",\"selected\"],\"mappings\":\"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\"}"}