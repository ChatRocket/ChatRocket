{"code":"function module(e,l,o){let s,a,i;o.export({useUserHasRoomRole:()=>u}),o.link(\"react\",{useCallback(e){s=e}},0),o.link(\"../../../../app/models/client\",{RoomRoles(e){a=e}},1),o.link(\"../../../hooks/useReactiveValue\",{useReactiveValue(e){i=e}},2);let u=(e,l,o)=>i(s(()=>!!a.findOne({rid:l,\"u._id\":e,roles:o}),[e,l,o]))}","map":"{\"version\":3,\"sources\":[\"client/views/room/hooks/useUserHasRoomRole.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRole, IRoom, IUser } from '@rocket.chat/core-typings';\\nimport { useCallback } from 'react';\\n\\nimport { RoomRoles } from '../../../../app/models/client';\\nimport { useReactiveValue } from '../../../hooks/useReactiveValue';\\n\\nexport const useUserHasRoomRole = (uid: IUser['_id'], rid: IRoom['_id'], role: IRole['name']): boolean =>\\n\\tuseReactiveValue(useCallback(() => !!RoomRoles.findOne({ rid, 'u._id': uid, 'roles': role }), [uid, rid, role]));\\n\",null],\"names\":[\"useCallback\",\"RoomRoles\",\"useReactiveValue\",\"module\",\"export\",\"useUserHasRoomRole\",\"link\",\"v\",\"uid\",\"rid\",\"role\",\"findOne\"],\"mappings\":\"2BACoCA,EAAAC,EAAAC,EAApCC,EAAOC,MAAE,CAAA,CAAAC,mBAAmBA,IAAQA,CAAA,GAAAF,EAAAG,IAAA,CAAA,QAAA,CAAAN,YAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,gCAAA,CAAAL,UAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,kCAAA,CAAAJ,iBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAK7B,IAAMF,EAAqBA,CAACG,EAAmBC,EAAmBC,IACxER,EAAiBF,EAAY,IAAM,CAAC,CAACC,EAAUU,OAAO,CAAC,CAAEF,IAAAA,EAAK,QAASD,EAAK,MAASE,CAAI,GAAK,CAACF,EAAKC,EAAKC,EAAK\"}"}