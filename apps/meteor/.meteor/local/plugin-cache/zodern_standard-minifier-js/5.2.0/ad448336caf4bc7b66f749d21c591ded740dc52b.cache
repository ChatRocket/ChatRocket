{"code":"function module(e,t,r){let i,n,l,a,s,u,d;r.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){i=e}},0),r.export({useSearchItems:()=>c}),r.link(\"@rocket.chat/string-helpers\",{escapeRegExp(e){n=e}},0),r.link(\"@rocket.chat/ui-contexts\",{useMethod(e){l=e},useUserSubscriptions(e){a=e}},1),r.link(\"@tanstack/react-query\",{useQuery(e){s=e}},2),r.link(\"react\",{useMemo(e){u=e}},3),r.link(\"../../../lib/utils/getConfig\",{getConfig(e){d=e}},4);let o=parseInt(String(d(\"Sidebar_Search_Spotlight_LIMIT\",20))),m={sort:{lm:-1,name:1},limit:o},c=e=>{let[,t,r]=u(()=>e.match(/(@|#)?(.*)/i)||[],[e]),d=u(()=>{let e=RegExp(n(r),\"i\");return i({$or:[{name:e},{fname:e}]},t&&{t:\"@\"===t?\"d\":{$ne:\"d\"}})},[r,t]),c=a(d,m),p=[...null==c?void 0:c.map(e=>{let{t,name:r}=e;return\"d\"===t?r:null})].filter(Boolean),h=\"#\"===t,f=\"@\"===t,g=u(()=>h?{users:!1,rooms:!0,includeFederatedRooms:!0}:f?{users:!0,rooms:!1}:{users:!0,rooms:!0,includeFederatedRooms:!0},[h,f]),v=l(\"spotlight\");return s([\"sidebar/search/spotlight\",r,p,g,c.map(e=>{let{_id:t,name:r}=e;return t+r})],async()=>{if(c.length===o)return c;let e=await v(r,p,g),t=[];t.push(...e.users.filter((e,t,r)=>{let{_id:i}=e;return t===r.findIndex(e=>i===e._id)}).filter(e=>!c.find(t=>{var r;return\"d\"===t.t&&t.uids&&(null===(r=t.uids)||void 0===r?void 0:r.length)===2&&t.uids.includes(e._id)})).map(e=>({_id:e._id,t:\"d\",name:e.username,fname:e.name,avatarETag:e.avatarETag}))),t.push(...e.rooms.filter(e=>!c.find(t=>{var r;return\"d\"===e.t&&e.uids&&e.uids.length>1&&(null===(r=e.uids)||void 0===r?void 0:r.includes(t._id))||[t.rid,t._id].includes(e._id)})));let i=null==t?void 0:t.filter(e=>[e.name,e.fname].includes(r));return Array.from(new Set([...i,...c,...t]))},{staleTime:6e4,keepPreviousData:!0,placeholderData:c})}}","map":"{\"version\":3,\"sources\":[\"client/sidebarv2/header/hooks/useSearchItems.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, ISubscription } from '@rocket.chat/core-typings';\\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\\nimport { useMethod, useUserSubscriptions } from '@rocket.chat/ui-contexts';\\nimport { useQuery, type UseQueryResult } from '@tanstack/react-query';\\nimport { useMemo } from 'react';\\n\\nimport { getConfig } from '../../../lib/utils/getConfig';\\n\\nconst LIMIT = parseInt(String(getConfig('Sidebar_Search_Spotlight_LIMIT', 20)));\\n\\nconst options = {\\n\\tsort: {\\n\\t\\tlm: -1,\\n\\t\\tname: 1,\\n\\t},\\n\\tlimit: LIMIT,\\n} as const;\\n\\nexport const useSearchItems = (filterText: string): UseQueryResult<(ISubscription & IRoom)[] | undefined, Error> => {\\n\\tconst [, mention, name] = useMemo(() => filterText.match(/(@|#)?(.*)/i) || [], [filterText]);\\n\\tconst query = useMemo(() => {\\n\\t\\tconst filterRegex = new RegExp(escapeRegExp(name), 'i');\\n\\n\\t\\treturn {\\n\\t\\t\\t$or: [{ name: filterRegex }, { fname: filterRegex }],\\n\\t\\t\\t...(mention && {\\n\\t\\t\\t\\tt: mention === '@' ? 'd' : { $ne: 'd' },\\n\\t\\t\\t}),\\n\\t\\t};\\n\\t}, [name, mention]);\\n\\n\\tconst localRooms = useUserSubscriptions(query, options);\\n\\n\\tconst usernamesFromClient = [...localRooms?.map(({ t, name }) => (t === 'd' ? name : null))].filter(Boolean) as string[];\\n\\n\\tconst searchForChannels = mention === '#';\\n\\tconst searchForDMs = mention === '@';\\n\\n\\tconst type = useMemo(() => {\\n\\t\\tif (searchForChannels) {\\n\\t\\t\\treturn { users: false, rooms: true, includeFederatedRooms: true };\\n\\t\\t}\\n\\t\\tif (searchForDMs) {\\n\\t\\t\\treturn { users: true, rooms: false };\\n\\t\\t}\\n\\t\\treturn { users: true, rooms: true, includeFederatedRooms: true };\\n\\t}, [searchForChannels, searchForDMs]);\\n\\n\\tconst getSpotlight = useMethod('spotlight');\\n\\n\\treturn useQuery(\\n\\t\\t['sidebar/search/spotlight', name, usernamesFromClient, type, localRooms.map(({ _id, name }) => _id + name)],\\n\\t\\tasync () => {\\n\\t\\t\\tif (localRooms.length === LIMIT) {\\n\\t\\t\\t\\treturn localRooms;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst spotlight = await getSpotlight(name, usernamesFromClient, type);\\n\\n\\t\\t\\tconst filterUsersUnique = ({ _id }: { _id: string }, index: number, arr: { _id: string }[]): boolean =>\\n\\t\\t\\t\\tindex === arr.findIndex((user) => _id === user._id);\\n\\n\\t\\t\\tconst roomFilter = (room: { t: string; uids?: string[]; _id: string; name?: string }): boolean =>\\n\\t\\t\\t\\t!localRooms.find(\\n\\t\\t\\t\\t\\t(item) =>\\n\\t\\t\\t\\t\\t\\t(room.t === 'd' && room.uids && room.uids.length > 1 && room.uids?.includes(item._id)) ||\\n\\t\\t\\t\\t\\t\\t[item.rid, item._id].includes(room._id),\\n\\t\\t\\t\\t);\\n\\t\\t\\tconst usersFilter = (user: { _id: string }): boolean =>\\n\\t\\t\\t\\t!localRooms.find((room) => room.t === 'd' && room.uids && room.uids?.length === 2 && room.uids.includes(user._id));\\n\\n\\t\\t\\tconst userMap = (user: {\\n\\t\\t\\t\\t_id: string;\\n\\t\\t\\t\\tname: string;\\n\\t\\t\\t\\tusername: string;\\n\\t\\t\\t\\tavatarETag?: string;\\n\\t\\t\\t}): {\\n\\t\\t\\t\\t_id: string;\\n\\t\\t\\t\\tt: string;\\n\\t\\t\\t\\tname: string;\\n\\t\\t\\t\\tfname: string;\\n\\t\\t\\t\\tavatarETag?: string;\\n\\t\\t\\t} => ({\\n\\t\\t\\t\\t_id: user._id,\\n\\t\\t\\t\\tt: 'd',\\n\\t\\t\\t\\tname: user.username,\\n\\t\\t\\t\\tfname: user.name,\\n\\t\\t\\t\\tavatarETag: user.avatarETag,\\n\\t\\t\\t});\\n\\n\\t\\t\\ttype resultsFromServerType = {\\n\\t\\t\\t\\t_id: string;\\n\\t\\t\\t\\tt: string;\\n\\t\\t\\t\\tname: string;\\n\\t\\t\\t\\tteamMain?: boolean;\\n\\t\\t\\t\\tfname?: string;\\n\\t\\t\\t\\tavatarETag?: string | undefined;\\n\\t\\t\\t\\tuids?: string[] | undefined;\\n\\t\\t\\t}[];\\n\\n\\t\\t\\tconst resultsFromServer: resultsFromServerType = [];\\n\\t\\t\\tresultsFromServer.push(...spotlight.users.filter(filterUsersUnique).filter(usersFilter).map(userMap));\\n\\t\\t\\tresultsFromServer.push(...spotlight.rooms.filter(roomFilter));\\n\\n\\t\\t\\tconst exact = resultsFromServer?.filter((item) => [item.name, item.fname].includes(name));\\n\\t\\t\\treturn Array.from(new Set([...exact, ...localRooms, ...resultsFromServer]));\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tstaleTime: 60_000,\\n\\t\\t\\tkeepPreviousData: true,\\n\\t\\t\\tplaceholderData: localRooms,\\n\\t\\t},\\n\\t);\\n};\\n\",null],\"names\":[\"_objectSpread\",\"escapeRegExp\",\"useMethod\",\"useUserSubscriptions\",\"useQuery\",\"useMemo\",\"getConfig\",\"module\",\"link\",\"default\",\"v\",\"export\",\"useSearchItems\",\"LIMIT\",\"parseInt\",\"String\",\"options\",\"sort\",\"lm\",\"name\",\"limit\",\"filterText\",\"mention\",\"match\",\"query\",\"filterRegex\",\"RegExp\",\"$or\",\"fname\",\"t\",\"$ne\",\"localRooms\",\"usernamesFromClient\",\"map\",\"_ref\",\"filter\",\"Boolean\",\"searchForChannels\",\"searchForDMs\",\"type\",\"users\",\"rooms\",\"includeFederatedRooms\",\"getSpotlight\",\"_ref2\",\"_id\",\"length\",\"spotlight\",\"resultsFromServer\",\"push\",\"filterUsersUnique\",\"_ref3\",\"index\",\"arr\",\"findIndex\",\"user\",\"find\",\"room\",\"_room$uids2\",\"uids\",\"includes\",\"username\",\"avatarETag\",\"item\",\"_room$uids\",\"rid\",\"exact\",\"Array\",\"from\",\"Set\",\"staleTime\",\"keepPreviousData\",\"placeholderData\"],\"mappings\":\"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\"}"}