{"code":"function module(e,t,a){let n,s,r,o,l,i,c,u,d,m,h,p,v,k,C,_,y,g,f,M,T,E,O,w,b,S,L,R,I,P,H,q,Q;a.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){n=e}},0),a.export({useQuickActions:()=>D}),a.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){s=e}},0),a.link(\"@rocket.chat/ui-contexts\",{useSetModal(e){r=e},useToastMessageDispatch(e){o=e},useUserId(e){l=e},useSetting(e){i=e},usePermission(e){c=e},useRole(e){u=e},useEndpoint(e){d=e},useMethod(e){m=e},useTranslation(e){h=e},useRouter(e){p=e},useUserSubscription(e){v=e}},1),a.link(\"react\",{default(e){k=e},useCallback(e){C=e},useState(e){_=e},useEffect(e){y=e}},2),a.link(\"../../../../../../../app/livechat-enterprise/client/components/modals/PlaceChatOnHoldModal\",{default(e){g=e}},3),a.link(\"../../../../../../../app/livechat/client/collections/LivechatInquiry\",{LivechatInquiry(e){f=e}},4),a.link(\"../../../../../../../app/ui-utils/client\",{LegacyRoomManager(e){M=e}},5),a.link(\"../../../../../../components/Omnichannel/modals/CloseChatModal\",{default(e){T=e}},6),a.link(\"../../../../../../components/Omnichannel/modals/CloseChatModalData\",{default(e){E=e}},7),a.link(\"../../../../../../components/Omnichannel/modals/ForwardChatModal\",{default(e){O=e}},8),a.link(\"../../../../../../components/Omnichannel/modals/ReturnChatQueueModal\",{default(e){w=e}},9),a.link(\"../../../../../../components/Omnichannel/modals/TranscriptModal\",{default(e){b=e}},10),a.link(\"../../../../../../hooks/omnichannel/useIsRoomOverMacLimit\",{useIsRoomOverMacLimit(e){S=e}},11),a.link(\"../../../../../../hooks/omnichannel/useOmnichannelRouteConfig\",{useOmnichannelRouteConfig(e){L=e}},12),a.link(\"../../../../../../hooks/useHasLicenseModule\",{useHasLicenseModule(e){R=e}},13),a.link(\"../../../../../../ui\",{quickActionHooks(e){I=e}},14),a.link(\"../../../../contexts/RoomContext\",{useOmnichannelRoom(e){P=e}},15),a.link(\"../../../../lib/quickActions\",{QuickActionsEnum(e){H=e}},16),a.link(\"./usePutChatOnHoldMutation\",{usePutChatOnHoldMutation(e){q=e}},17),a.link(\"./useReturnChatToQueueMutation\",{useReturnChatToQueueMutation(e){Q=e}},18);let D=()=>{var e,t,a;let D=P(),F=r(),A=p(),x=h(),U=o(),[V,j]=_(!1),B=D.v._id,G=D._id,z=l(),J=v(G),K=D.lastMessage,N=d(\"GET\",\"/v1/livechat/visitors.info\"),W=s(async()=>{if(!B)return;let{visitor:{visitorEmails:e}}=await N({visitorId:B});if(null!=e&&e.length&&e[0].address)return e[0].address});y(()=>{V&&null!=K&&K.token&&F(null)},[K,V,F]);let X=C(()=>F(null),[F]),Y=d(\"POST\",\"/v1/livechat/transcript/:rid\",{rid:G}),Z=C(async(e,t)=>{try{await Y({email:e,subject:t}),X(),U({type:\"success\",message:x(\"Livechat_email_transcript_has_been_requested\")})}catch(e){U({type:\"error\",message:e})}},[X,U,Y,x]),$=d(\"POST\",\"/v1/omnichannel/:rid/request-transcript\",{rid:G}),ee=C(async()=>{try{await $(),U({type:\"success\",message:x(\"Livechat_transcript_has_been_requested\")})}catch(e){U({type:\"error\",message:e})}},[U,$,x]),et=m(\"livechat:sendTranscript\"),ea=C(async(e,t,a)=>{try{await et(a,G,e,t),X()}catch(e){U({type:\"error\",message:e})}},[X,U,G,et]),en=d(\"DELETE\",\"/v1/livechat/transcript/:rid\",{rid:G}),es=C(async()=>{try{await en(),U({type:\"success\",message:x(\"Livechat_transcript_request_has_been_canceled\")}),X()}catch(e){U({type:\"error\",message:e})}},[X,en,U,x]),er=d(\"POST\",\"/v1/livechat/room.forward\"),eo=C(async(e,t,a)=>{if(e&&t)return;let n={roomId:G,comment:a,clientAction:!0};e&&(n.departmentId=e),t&&(n.userId=t);try{await er(n),U({type:\"success\",message:x(\"Transferred\")}),A.navigate(\"/home\"),M.close(D.t+G),X()}catch(e){U({type:\"error\",message:e})}},[X,U,er,D.t,G,A,x]),el=d(\"POST\",\"/v1/livechat/room.closeByUser\"),ei=C(async(e,t,a,s)=>{try{await el(n(n(n(n({rid:G},e&&{comment:e}),t&&{tags:t}),(null==a?void 0:a.omnichannelTranscriptPDF)&&{generateTranscriptPdf:!0}),null!=a&&a.omnichannelTranscriptEmail&&s?{transcriptEmail:{sendToVisitor:null==a?void 0:a.omnichannelTranscriptEmail,requestData:s}}:{transcriptEmail:{sendToVisitor:!1}})),f.remove({rid:G}),X(),U({type:\"success\",message:x(\"Chat_closed_successfully\")})}catch(e){U({type:\"error\",message:e})}},[el,X,U,G,x]),ec=Q({onSuccess:()=>{M.close(D.t+G),A.navigate(\"/home\")},onError:e=>{U({type:\"error\",message:e})},onSettled:()=>{X()}}),eu=q({onSuccess:()=>{U({type:\"success\",message:x(\"Chat_On_Hold_Successfully\")})},onError:e=>{U({type:\"error\",message:e})},onSettled:()=>{X()}}),ed=s(async e=>{switch(e){case H.MoveQueue:F(k.createElement(w,{onMoveChat:()=>ec.mutate(G),onCancel:()=>{X()}}));break;case H.TranscriptPDF:ee();break;case H.TranscriptEmail:let t=await W();if(!t){U({type:\"error\",message:x(\"Customer_without_registered_email\")});break}F(k.createElement(b,{room:D,email:t,onRequest:Z,onSend:ea,onDiscard:es,onCancel:X}));break;case H.ChatForward:F(k.createElement(O,{room:D,onForward:eo,onCancel:X}));break;case H.CloseChat:let a=await W();F(D.departmentId?k.createElement(E,{visitorEmail:a,departmentId:D.departmentId,onConfirm:ei,onCancel:X}):k.createElement(T,{visitorEmail:a,onConfirm:ei,onCancel:X}));break;case H.OnHoldChat:F(k.createElement(g,{onOnHoldChat:()=>eu.mutate(G),onCancel:()=>{X(),j(!1)}})),j(!0)}}),em=L(),eh=i(\"Livechat_allow_manual_on_hold\"),ep=u(\"livechat-manager\"),ev=u(\"livechat-monitor\"),ek=(null==D?void 0:D.open)&&((null===(e=D.u)||void 0===e?void 0:e._id)===z||ep||ev)&&(null==D?void 0:null===(t=D.lastMessage)||void 0===t?void 0:t.t)!==\"livechat-close\",eC=!!(null!=em&&em.returnQueue)&&(null==D?void 0:D.u)!==void 0,e_=c(\"transfer-livechat-guest\"),ey=c(\"send-omnichannel-chat-transcript\"),eg=R(\"livechat-enterprise\"),ef=c(\"request-pdf-transcript\"),eM=c(\"close-livechat-room\"),eT=c(\"close-others-livechat-room\"),eE=i(\"Livechat_allow_manual_on_hold_upon_agent_engagement_only\"),eO=!D.onHold&&D.u,ew=!(null!==(a=D.lastMessage)&&void 0!==a&&a.token),eb=!!(eh&&eO&&(!eE||ew)),eS=S(D),eL=e=>{switch(e){case H.MoveQueue:return!eS&&!!ek&&eC;case H.ChatForward:return!eS&&!!ek&&e_;case H.Transcript:return!eS&&(ey||eg&&ef);case H.TranscriptEmail:return!eS&&ey;case H.TranscriptPDF:return eg&&!eS&&ef;case H.CloseChat:return J&&(eM||eT)||!!ek&&eT;case H.OnHoldChat:return!!ek&&eb}return!1},eR=I.map(e=>e()).filter(e=>!!e).filter(e=>{let{options:t,id:a}=e;return t&&(e.options=t.filter(e=>{let{id:t}=e;return eL(t)})),eL(a)}).sort((e,t)=>{var a,n;return(null!==(a=e.order)&&void 0!==a?a:0)-(null!==(n=t.order)&&void 0!==n?n:0)}),eI=s(e=>{ed(e)});return{quickActions:eR,actionDefault:eI}}}","map":"{\"version\":3,\"sources\":[\"client/views/room/Header/Omnichannel/QuickActions/hooks/useQuickActions.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport {\\n\\tuseSetModal,\\n\\tuseToastMessageDispatch,\\n\\tuseUserId,\\n\\tuseSetting,\\n\\tusePermission,\\n\\tuseRole,\\n\\tuseEndpoint,\\n\\tuseMethod,\\n\\tuseTranslation,\\n\\tuseRouter,\\n\\tuseUserSubscription,\\n} from '@rocket.chat/ui-contexts';\\nimport React, { useCallback, useState, useEffect } from 'react';\\n\\nimport PlaceChatOnHoldModal from '../../../../../../../app/livechat-enterprise/client/components/modals/PlaceChatOnHoldModal';\\nimport { LivechatInquiry } from '../../../../../../../app/livechat/client/collections/LivechatInquiry';\\nimport { LegacyRoomManager } from '../../../../../../../app/ui-utils/client';\\nimport CloseChatModal from '../../../../../../components/Omnichannel/modals/CloseChatModal';\\nimport CloseChatModalData from '../../../../../../components/Omnichannel/modals/CloseChatModalData';\\nimport ForwardChatModal from '../../../../../../components/Omnichannel/modals/ForwardChatModal';\\nimport ReturnChatQueueModal from '../../../../../../components/Omnichannel/modals/ReturnChatQueueModal';\\nimport TranscriptModal from '../../../../../../components/Omnichannel/modals/TranscriptModal';\\nimport { useIsRoomOverMacLimit } from '../../../../../../hooks/omnichannel/useIsRoomOverMacLimit';\\nimport { useOmnichannelRouteConfig } from '../../../../../../hooks/omnichannel/useOmnichannelRouteConfig';\\nimport { useHasLicenseModule } from '../../../../../../hooks/useHasLicenseModule';\\nimport { quickActionHooks } from '../../../../../../ui';\\nimport { useOmnichannelRoom } from '../../../../contexts/RoomContext';\\nimport type { QuickActionsActionConfig } from '../../../../lib/quickActions';\\nimport { QuickActionsEnum } from '../../../../lib/quickActions';\\nimport { usePutChatOnHoldMutation } from './usePutChatOnHoldMutation';\\nimport { useReturnChatToQueueMutation } from './useReturnChatToQueueMutation';\\n\\nexport const useQuickActions = (): {\\n\\tquickActions: QuickActionsActionConfig[];\\n\\tactionDefault: (actionId: string) => void;\\n} => {\\n\\tconst room = useOmnichannelRoom();\\n\\tconst setModal = useSetModal();\\n\\tconst router = useRouter();\\n\\n\\tconst t = useTranslation();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\n\\tconst [onHoldModalActive, setOnHoldModalActive] = useState(false);\\n\\n\\tconst visitorRoomId = room.v._id;\\n\\tconst rid = room._id;\\n\\tconst uid = useUserId();\\n\\tconst subscription = useUserSubscription(rid);\\n\\tconst roomLastMessage = room.lastMessage;\\n\\n\\tconst getVisitorInfo = useEndpoint('GET', '/v1/livechat/visitors.info');\\n\\n\\tconst getVisitorEmail = useMutableCallback(async () => {\\n\\t\\tif (!visitorRoomId) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst {\\n\\t\\t\\tvisitor: { visitorEmails },\\n\\t\\t} = await getVisitorInfo({ visitorId: visitorRoomId });\\n\\n\\t\\tif (visitorEmails?.length && visitorEmails[0].address) {\\n\\t\\t\\treturn visitorEmails[0].address;\\n\\t\\t}\\n\\t});\\n\\n\\tuseEffect(() => {\\n\\t\\tif (onHoldModalActive && roomLastMessage?.token) {\\n\\t\\t\\tsetModal(null);\\n\\t\\t}\\n\\t}, [roomLastMessage, onHoldModalActive, setModal]);\\n\\n\\tconst closeModal = useCallback(() => setModal(null), [setModal]);\\n\\n\\tconst requestTranscript = useEndpoint('POST', '/v1/livechat/transcript/:rid', { rid });\\n\\n\\tconst handleRequestTranscript = useCallback(\\n\\t\\tasync (email: string, subject: string) => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait requestTranscript({ email, subject });\\n\\t\\t\\t\\tcloseModal();\\n\\t\\t\\t\\tdispatchToastMessage({\\n\\t\\t\\t\\t\\ttype: 'success',\\n\\t\\t\\t\\t\\tmessage: t('Livechat_email_transcript_has_been_requested'),\\n\\t\\t\\t\\t});\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t[closeModal, dispatchToastMessage, requestTranscript, t],\\n\\t);\\n\\n\\tconst sendTranscriptPDF = useEndpoint('POST', '/v1/omnichannel/:rid/request-transcript', { rid });\\n\\n\\tconst handleSendTranscriptPDF = useCallback(async () => {\\n\\t\\ttry {\\n\\t\\t\\tawait sendTranscriptPDF();\\n\\t\\t\\tdispatchToastMessage({\\n\\t\\t\\t\\ttype: 'success',\\n\\t\\t\\t\\tmessage: t('Livechat_transcript_has_been_requested'),\\n\\t\\t\\t});\\n\\t\\t} catch (error) {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t}\\n\\t}, [dispatchToastMessage, sendTranscriptPDF, t]);\\n\\n\\tconst sendTranscript = useMethod('livechat:sendTranscript');\\n\\n\\tconst handleSendTranscript = useCallback(\\n\\t\\tasync (email: string, subject: string, token: string) => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait sendTranscript(token, rid, email, subject);\\n\\t\\t\\t\\tcloseModal();\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t[closeModal, dispatchToastMessage, rid, sendTranscript],\\n\\t);\\n\\n\\tconst discardTranscript = useEndpoint('DELETE', '/v1/livechat/transcript/:rid', { rid });\\n\\n\\tconst handleDiscardTranscript = useCallback(async () => {\\n\\t\\ttry {\\n\\t\\t\\tawait discardTranscript();\\n\\t\\t\\tdispatchToastMessage({\\n\\t\\t\\t\\ttype: 'success',\\n\\t\\t\\t\\tmessage: t('Livechat_transcript_request_has_been_canceled'),\\n\\t\\t\\t});\\n\\t\\t\\tcloseModal();\\n\\t\\t} catch (error) {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t}\\n\\t}, [closeModal, discardTranscript, dispatchToastMessage, t]);\\n\\n\\tconst forwardChat = useEndpoint('POST', '/v1/livechat/room.forward');\\n\\n\\tconst handleForwardChat = useCallback(\\n\\t\\tasync (departmentId?: string, userId?: string, comment?: string) => {\\n\\t\\t\\tif (departmentId && userId) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tconst transferData: {\\n\\t\\t\\t\\troomId: string;\\n\\t\\t\\t\\tclientAction: boolean;\\n\\t\\t\\t\\tcomment?: string;\\n\\t\\t\\t\\tdepartmentId?: string;\\n\\t\\t\\t\\tuserId?: string;\\n\\t\\t\\t} = {\\n\\t\\t\\t\\troomId: rid,\\n\\t\\t\\t\\tcomment,\\n\\t\\t\\t\\tclientAction: true,\\n\\t\\t\\t};\\n\\n\\t\\t\\tif (departmentId) {\\n\\t\\t\\t\\ttransferData.departmentId = departmentId;\\n\\t\\t\\t}\\n\\t\\t\\tif (userId) {\\n\\t\\t\\t\\ttransferData.userId = userId;\\n\\t\\t\\t}\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait forwardChat(transferData);\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Transferred') });\\n\\t\\t\\t\\trouter.navigate('/home');\\n\\t\\t\\t\\tLegacyRoomManager.close(room.t + rid);\\n\\t\\t\\t\\tcloseModal();\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t[closeModal, dispatchToastMessage, forwardChat, room.t, rid, router, t],\\n\\t);\\n\\n\\tconst closeChat = useEndpoint('POST', '/v1/livechat/room.closeByUser');\\n\\n\\tconst handleClose = useCallback(\\n\\t\\tasync (\\n\\t\\t\\tcomment?: string,\\n\\t\\t\\ttags?: string[],\\n\\t\\t\\tpreferences?: { omnichannelTranscriptPDF: boolean; omnichannelTranscriptEmail: boolean },\\n\\t\\t\\trequestData?: { email: string; subject: string },\\n\\t\\t) => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait closeChat({\\n\\t\\t\\t\\t\\trid,\\n\\t\\t\\t\\t\\t...(comment && { comment }),\\n\\t\\t\\t\\t\\t...(tags && { tags }),\\n\\t\\t\\t\\t\\t...(preferences?.omnichannelTranscriptPDF && { generateTranscriptPdf: true }),\\n\\t\\t\\t\\t\\t...(preferences?.omnichannelTranscriptEmail && requestData\\n\\t\\t\\t\\t\\t\\t? {\\n\\t\\t\\t\\t\\t\\t\\t\\ttranscriptEmail: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsendToVisitor: preferences?.omnichannelTranscriptEmail,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequestData,\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t  }\\n\\t\\t\\t\\t\\t\\t: { transcriptEmail: { sendToVisitor: false } }),\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tLivechatInquiry.remove({ rid });\\n\\t\\t\\t\\tcloseModal();\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Chat_closed_successfully') });\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t[closeChat, closeModal, dispatchToastMessage, rid, t],\\n\\t);\\n\\n\\tconst returnChatToQueueMutation = useReturnChatToQueueMutation({\\n\\t\\tonSuccess: () => {\\n\\t\\t\\tLegacyRoomManager.close(room.t + rid);\\n\\t\\t\\trouter.navigate('/home');\\n\\t\\t},\\n\\t\\tonError: (error) => {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t},\\n\\t\\tonSettled: () => {\\n\\t\\t\\tcloseModal();\\n\\t\\t},\\n\\t});\\n\\n\\tconst putChatOnHoldMutation = usePutChatOnHoldMutation({\\n\\t\\tonSuccess: () => {\\n\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Chat_On_Hold_Successfully') });\\n\\t\\t},\\n\\t\\tonError: (error) => {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t},\\n\\t\\tonSettled: () => {\\n\\t\\t\\tcloseModal();\\n\\t\\t},\\n\\t});\\n\\n\\tconst handleAction = useMutableCallback(async (id: string) => {\\n\\t\\tswitch (id) {\\n\\t\\t\\tcase QuickActionsEnum.MoveQueue:\\n\\t\\t\\t\\tsetModal(\\n\\t\\t\\t\\t\\t<ReturnChatQueueModal\\n\\t\\t\\t\\t\\t\\tonMoveChat={(): void => returnChatToQueueMutation.mutate(rid)}\\n\\t\\t\\t\\t\\t\\tonCancel={(): void => {\\n\\t\\t\\t\\t\\t\\t\\tcloseModal();\\n\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t/>,\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase QuickActionsEnum.TranscriptPDF:\\n\\t\\t\\t\\thandleSendTranscriptPDF();\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase QuickActionsEnum.TranscriptEmail:\\n\\t\\t\\t\\tconst visitorEmail = await getVisitorEmail();\\n\\n\\t\\t\\t\\tif (!visitorEmail) {\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: t('Customer_without_registered_email') });\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tsetModal(\\n\\t\\t\\t\\t\\t<TranscriptModal\\n\\t\\t\\t\\t\\t\\troom={room}\\n\\t\\t\\t\\t\\t\\temail={visitorEmail}\\n\\t\\t\\t\\t\\t\\tonRequest={handleRequestTranscript}\\n\\t\\t\\t\\t\\t\\tonSend={handleSendTranscript}\\n\\t\\t\\t\\t\\t\\tonDiscard={handleDiscardTranscript}\\n\\t\\t\\t\\t\\t\\tonCancel={closeModal}\\n\\t\\t\\t\\t\\t/>,\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase QuickActionsEnum.ChatForward:\\n\\t\\t\\t\\tsetModal(<ForwardChatModal room={room} onForward={handleForwardChat} onCancel={closeModal} />);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase QuickActionsEnum.CloseChat:\\n\\t\\t\\t\\tconst email = await getVisitorEmail();\\n\\t\\t\\t\\tsetModal(\\n\\t\\t\\t\\t\\troom.departmentId ? (\\n\\t\\t\\t\\t\\t\\t<CloseChatModalData visitorEmail={email} departmentId={room.departmentId} onConfirm={handleClose} onCancel={closeModal} />\\n\\t\\t\\t\\t\\t) : (\\n\\t\\t\\t\\t\\t\\t<CloseChatModal visitorEmail={email} onConfirm={handleClose} onCancel={closeModal} />\\n\\t\\t\\t\\t\\t),\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase QuickActionsEnum.OnHoldChat:\\n\\t\\t\\t\\tsetModal(\\n\\t\\t\\t\\t\\t<PlaceChatOnHoldModal\\n\\t\\t\\t\\t\\t\\tonOnHoldChat={(): void => putChatOnHoldMutation.mutate(rid)}\\n\\t\\t\\t\\t\\t\\tonCancel={(): void => {\\n\\t\\t\\t\\t\\t\\t\\tcloseModal();\\n\\t\\t\\t\\t\\t\\t\\tsetOnHoldModalActive(false);\\n\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t/>,\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\tsetOnHoldModalActive(true);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t});\\n\\n\\tconst omnichannelRouteConfig = useOmnichannelRouteConfig();\\n\\n\\tconst manualOnHoldAllowed = useSetting('Livechat_allow_manual_on_hold');\\n\\n\\tconst hasManagerRole = useRole('livechat-manager');\\n\\tconst hasMonitorRole = useRole('livechat-monitor');\\n\\n\\tconst roomOpen = room?.open && (room.u?._id === uid || hasManagerRole || hasMonitorRole) && room?.lastMessage?.t !== 'livechat-close';\\n\\tconst canMoveQueue = !!omnichannelRouteConfig?.returnQueue && room?.u !== undefined;\\n\\tconst canForwardGuest = usePermission('transfer-livechat-guest');\\n\\tconst canSendTranscriptEmail = usePermission('send-omnichannel-chat-transcript');\\n\\tconst hasLicense = useHasLicenseModule('livechat-enterprise');\\n\\tconst canSendTranscriptPDF = usePermission('request-pdf-transcript');\\n\\tconst canCloseRoom = usePermission('close-livechat-room');\\n\\tconst canCloseOthersRoom = usePermission('close-others-livechat-room');\\n\\tconst restrictedOnHold = useSetting('Livechat_allow_manual_on_hold_upon_agent_engagement_only');\\n\\tconst canRoomBePlacedOnHold = !room.onHold && room.u;\\n\\tconst canAgentPlaceOnHold = !room.lastMessage?.token;\\n\\tconst canPlaceChatOnHold = Boolean(manualOnHoldAllowed && canRoomBePlacedOnHold && (!restrictedOnHold || canAgentPlaceOnHold));\\n\\tconst isRoomOverMacLimit = useIsRoomOverMacLimit(room);\\n\\n\\tconst hasPermissionButtons = (id: string): boolean => {\\n\\t\\tswitch (id) {\\n\\t\\t\\tcase QuickActionsEnum.MoveQueue:\\n\\t\\t\\t\\treturn !isRoomOverMacLimit && !!roomOpen && canMoveQueue;\\n\\t\\t\\tcase QuickActionsEnum.ChatForward:\\n\\t\\t\\t\\treturn !isRoomOverMacLimit && !!roomOpen && canForwardGuest;\\n\\t\\t\\tcase QuickActionsEnum.Transcript:\\n\\t\\t\\t\\treturn !isRoomOverMacLimit && (canSendTranscriptEmail || (hasLicense && canSendTranscriptPDF));\\n\\t\\t\\tcase QuickActionsEnum.TranscriptEmail:\\n\\t\\t\\t\\treturn !isRoomOverMacLimit && canSendTranscriptEmail;\\n\\t\\t\\tcase QuickActionsEnum.TranscriptPDF:\\n\\t\\t\\t\\treturn hasLicense && !isRoomOverMacLimit && canSendTranscriptPDF;\\n\\t\\t\\tcase QuickActionsEnum.CloseChat:\\n\\t\\t\\t\\treturn (subscription && (canCloseRoom || canCloseOthersRoom)) || (!!roomOpen && canCloseOthersRoom);\\n\\t\\t\\tcase QuickActionsEnum.OnHoldChat:\\n\\t\\t\\t\\treturn !!roomOpen && canPlaceChatOnHold;\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t\\treturn false;\\n\\t};\\n\\n\\tconst quickActions = quickActionHooks\\n\\t\\t.map((quickActionHook) => quickActionHook())\\n\\t\\t.filter((quickAction): quickAction is QuickActionsActionConfig => !!quickAction)\\n\\t\\t.filter((action) => {\\n\\t\\t\\tconst { options, id } = action;\\n\\t\\t\\tif (options) {\\n\\t\\t\\t\\taction.options = options.filter(({ id }) => hasPermissionButtons(id));\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn hasPermissionButtons(id);\\n\\t\\t})\\n\\t\\t.sort((a, b) => (a.order ?? 0) - (b.order ?? 0));\\n\\n\\tconst actionDefault = useMutableCallback((actionId: string) => {\\n\\t\\thandleAction(actionId);\\n\\t});\\n\\n\\treturn { quickActions, actionDefault };\\n};\\n\",null],\"names\":[\"_objectSpread\",\"useMutableCallback\",\"useSetModal\",\"useToastMessageDispatch\",\"useUserId\",\"useSetting\",\"usePermission\",\"useRole\",\"useEndpoint\",\"useMethod\",\"useTranslation\",\"useRouter\",\"useUserSubscription\",\"React\",\"useCallback\",\"useState\",\"useEffect\",\"PlaceChatOnHoldModal\",\"LivechatInquiry\",\"LegacyRoomManager\",\"CloseChatModal\",\"CloseChatModalData\",\"ForwardChatModal\",\"ReturnChatQueueModal\",\"TranscriptModal\",\"useIsRoomOverMacLimit\",\"useOmnichannelRouteConfig\",\"useHasLicenseModule\",\"quickActionHooks\",\"useOmnichannelRoom\",\"QuickActionsEnum\",\"usePutChatOnHoldMutation\",\"useReturnChatToQueueMutation\",\"module\",\"link\",\"default\",\"v\",\"export\",\"useQuickActions\",\"_room$u\",\"_room$lastMessage\",\"_room$lastMessage2\",\"room\",\"setModal\",\"router\",\"t\",\"dispatchToastMessage\",\"onHoldModalActive\",\"setOnHoldModalActive\",\"visitorRoomId\",\"_id\",\"rid\",\"uid\",\"subscription\",\"roomLastMessage\",\"lastMessage\",\"getVisitorInfo\",\"getVisitorEmail\",\"visitor\",\"visitorEmails\",\"visitorId\",\"length\",\"address\",\"token\",\"closeModal\",\"requestTranscript\",\"handleRequestTranscript\",\"email\",\"subject\",\"type\",\"message\",\"error\",\"sendTranscriptPDF\",\"handleSendTranscriptPDF\",\"sendTranscript\",\"handleSendTranscript\",\"discardTranscript\",\"handleDiscardTranscript\",\"forwardChat\",\"handleForwardChat\",\"departmentId\",\"userId\",\"comment\",\"transferData\",\"roomId\",\"clientAction\",\"navigate\",\"close\",\"closeChat\",\"handleClose\",\"tags\",\"preferences\",\"requestData\",\"omnichannelTranscriptPDF\",\"generateTranscriptPdf\",\"omnichannelTranscriptEmail\",\"transcriptEmail\",\"sendToVisitor\",\"remove\",\"returnChatToQueueMutation\",\"onSuccess\",\"onError\",\"onSettled\",\"putChatOnHoldMutation\",\"handleAction\",\"id\",\"MoveQueue\",\"createElement\",\"onMoveChat\",\"mutate\",\"onCancel\",\"TranscriptPDF\",\"TranscriptEmail\",\"visitorEmail\",\"onRequest\",\"onSend\",\"onDiscard\",\"ChatForward\",\"onForward\",\"CloseChat\",\"onConfirm\",\"OnHoldChat\",\"onOnHoldChat\",\"omnichannelRouteConfig\",\"manualOnHoldAllowed\",\"hasManagerRole\",\"hasMonitorRole\",\"roomOpen\",\"open\",\"u\",\"canMoveQueue\",\"returnQueue\",\"undefined\",\"canForwardGuest\",\"canSendTranscriptEmail\",\"hasLicense\",\"canSendTranscriptPDF\",\"canCloseRoom\",\"canCloseOthersRoom\",\"restrictedOnHold\",\"canRoomBePlacedOnHold\",\"onHold\",\"canAgentPlaceOnHold\",\"canPlaceChatOnHold\",\"Boolean\",\"isRoomOverMacLimit\",\"hasPermissionButtons\",\"Transcript\",\"quickActions\",\"map\",\"quickActionHook\",\"filter\",\"quickAction\",\"action\",\"options\",\"_ref\",\"sort\",\"a\",\"b\",\"_a$order\",\"_b$order\",\"order\",\"actionDefault\",\"actionId\"],\"mappings\":\"2BAAAA,EAAmCC,EAA8BC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAxDC,EAAAC,IAAoB,CAAA,uCAAoC,CAAAC,QAAAC,CAAA,EAAApC,EAAAoC,CAAA,CAAA,EAAA,GAAjEH,EAAOI,MAAE,CAAA,CAAAC,gBAAoBA,IAAMA,CAAA,GAA8BL,EAAAC,IAAA,CAAA,8BAAA,CAAAjC,mBAAAmC,CAAA,EAAAnC,EAAAmC,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2BAAA,CAAAhC,YAAAkC,CAAA,EAAAlC,EAAAkC,CAAA,EAAAjC,wBAAAiC,CAAA,EAAAjC,EAAAiC,CAAA,EAAAhC,UAAAgC,CAAA,EAAAhC,EAAAgC,CAAA,EAAA/B,WAAA+B,CAAA,EAAA/B,EAAA+B,CAAA,EAAA9B,cAAA8B,CAAA,EAAA9B,EAAA8B,CAAA,EAAA7B,QAAA6B,CAAA,EAAA7B,EAAA6B,CAAA,EAAA5B,YAAA4B,CAAA,EAAA5B,EAAA4B,CAAA,EAAA3B,UAAA2B,CAAA,EAAA3B,EAAA2B,CAAA,EAAA1B,eAAA0B,CAAA,EAAA1B,EAAA0B,CAAA,EAAAzB,UAAAyB,CAAA,EAAAzB,EAAAyB,CAAA,EAAAxB,oBAAAwB,CAAA,EAAAxB,EAAAwB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAC,QAAAC,CAAA,EAAAvB,EAAAuB,CAAA,EAAAtB,YAAAsB,CAAA,EAAAtB,EAAAsB,CAAA,EAAArB,SAAAqB,CAAA,EAAArB,EAAAqB,CAAA,EAAApB,UAAAoB,CAAA,EAAApB,EAAAoB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,6FAAA,CAAAC,QAAAC,CAAA,EAAAnB,EAAAmB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uEAAA,CAAAhB,gBAAAkB,CAAA,EAAAlB,EAAAkB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2CAAA,CAAAf,kBAAAiB,CAAA,EAAAjB,EAAAiB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,iEAAA,CAAAC,QAAAC,CAAA,EAAAhB,EAAAgB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,qEAAA,CAAAC,QAAAC,CAAA,EAAAf,EAAAe,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,mEAAA,CAAAC,QAAAC,CAAA,EAAAd,EAAAc,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uEAAA,CAAAC,QAAAC,CAAA,EAAAb,EAAAa,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,kEAAA,CAAAC,QAAAC,CAAA,EAAAZ,EAAAY,CAAA,CAAA,EAAA,IAAAH,EAAAC,IAAA,CAAA,4DAAA,CAAAT,sBAAAW,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,IAAAH,EAAAC,IAAA,CAAA,gEAAA,CAAAR,0BAAAU,CAAA,EAAAV,EAAAU,CAAA,CAAA,EAAA,IAAAH,EAAAC,IAAA,CAAA,8CAAA,CAAAP,oBAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,IAAAH,EAAAC,IAAA,CAAA,uBAAA,CAAAN,iBAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,IAAAH,EAAAC,IAAA,CAAA,mCAAA,CAAAL,mBAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,IAAAH,EAAAC,IAAA,CAAA,+BAAA,CAAAJ,iBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,IAAAH,EAAAC,IAAA,CAAA,6BAAA,CAAAH,yBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,IAAAH,EAAAC,IAAA,CAAA,iCAAA,CAAAF,6BAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,IAkC1D,IAAME,EAAkBA,KAG3B,IAAAC,EAAAC,EAAAC,EACH,IAAMC,EAAOb,IACPc,EAAWzC,IACX0C,EAASjC,IAETkC,EAAInC,IACJoC,EAAuB3C,IAEvB,CAAC4C,EAAmBC,EAAqB,CAAGjC,EAAS,CAAA,GAErDkC,EAAgBP,EAAKN,CAAC,CAACc,GAAG,CAC1BC,EAAMT,EAAKQ,GAAG,CACdE,EAAMhD,IACNiD,EAAezC,EAAoBuC,GACnCG,EAAkBZ,EAAKa,WAAW,CAElCC,EAAiBhD,EAAY,MAAO,8BAEpCiD,EAAkBxD,EAAmB,UAC1C,GAAI,CAACgD,EACJ,OAGD,GAAM,CACLS,QAAS,CAAEC,cAAAA,CAAAA,CAAa,CACxB,CAAG,MAAMH,EAAe,CAAEI,UAAWX,CAAa,GAEnD,GAAIU,MAAAA,GAAAA,EAAeE,MAAM,EAAIF,CAAa,CAAC,EAAE,CAACG,OAAO,CACpD,OAAOH,CAAa,CAAC,EAAE,CAACG,OAAO,AAEjC,GAEA9C,EAAU,KACL+B,GAAqBO,MAAAA,GAAAA,EAAiBS,KAAK,EAC9CpB,EAAS,KAEX,EAAG,CAACW,EAAiBP,EAAmBJ,EAAS,EAEjD,IAAMqB,EAAalD,EAAY,IAAM6B,EAAS,MAAO,CAACA,EAAS,EAEzDsB,EAAoBzD,EAAY,OAAQ,+BAAgC,CAAE2C,IAAAA,CAAG,GAE7Ee,EAA0BpD,EAC/B,MAAOqD,EAAeC,KACrB,GAAI,CACH,MAAMH,EAAkB,CAAEE,MAAAA,EAAOC,QAAAA,CAAO,GACxCJ,IACAlB,EAAqB,CACpBuB,KAAM,UACNC,QAASzB,EAAE,iDAEb,CAAE,MAAO0B,EAAO,CACfzB,EAAqB,CAAEuB,KAAM,QAASC,QAASC,CAAK,EACrD,CACD,EACA,CAACP,EAAYlB,EAAsBmB,EAAmBpB,EAAE,EAGnD2B,EAAoBhE,EAAY,OAAQ,0CAA2C,CAAE2C,IAAAA,CAAG,GAExFsB,GAA0B3D,EAAY,UAC3C,GAAI,CACH,MAAM0D,IACN1B,EAAqB,CACpBuB,KAAM,UACNC,QAASzB,EAAE,2CAEb,CAAE,MAAO0B,EAAO,CACfzB,EAAqB,CAAEuB,KAAM,QAASC,QAASC,CAAK,EACrD,CACD,EAAG,CAACzB,EAAsB0B,EAAmB3B,EAAE,EAEzC6B,GAAiBjE,EAAU,2BAE3BkE,GAAuB7D,EAC5B,MAAOqD,EAAeC,EAAiBL,KACtC,GAAI,CACH,MAAMW,GAAeX,EAAOZ,EAAKgB,EAAOC,GACxCJ,GACD,CAAE,MAAOO,EAAO,CACfzB,EAAqB,CAAEuB,KAAM,QAASC,QAASC,CAAK,EACrD,CACD,EACA,CAACP,EAAYlB,EAAsBK,EAAKuB,GAAe,EAGlDE,GAAoBpE,EAAY,SAAU,+BAAgC,CAAE2C,IAAAA,CAAG,GAE/E0B,GAA0B/D,EAAY,UAC3C,GAAI,CACH,MAAM8D,KACN9B,EAAqB,CACpBuB,KAAM,UACNC,QAASzB,EAAE,mDAEZmB,GACD,CAAE,MAAOO,EAAO,CACfzB,EAAqB,CAAEuB,KAAM,QAASC,QAASC,CAAK,EACrD,CACD,EAAG,CAACP,EAAYY,GAAmB9B,EAAsBD,EAAE,EAErDiC,GAActE,EAAY,OAAQ,6BAElCuE,GAAoBjE,EACzB,MAAOkE,EAAuBC,EAAiBC,KAC9C,GAAIF,GAAgBC,EACnB,OAED,IAAME,EAMF,CACHC,OAAQjC,EACR+B,QAAAA,EACAG,aAAc,CAAA,GAGXL,GACHG,CAAAA,EAAaH,YAAY,CAAGA,CAAAA,EAEzBC,GACHE,CAAAA,EAAaF,MAAM,CAAGA,CAAAA,EAGvB,GAAI,CACH,MAAMH,GAAYK,GAClBrC,EAAqB,CAAEuB,KAAM,UAAWC,QAASzB,EAAE,cAAc,GACjED,EAAO0C,QAAQ,CAAC,SAChBnE,EAAkBoE,KAAK,CAAC7C,EAAKG,CAAC,CAAGM,GACjCa,GACD,CAAE,MAAOO,EAAO,CACfzB,EAAqB,CAAEuB,KAAM,QAASC,QAASC,CAAK,EACrD,CACD,EACA,CAACP,EAAYlB,EAAsBgC,GAAapC,EAAKG,CAAC,CAAEM,EAAKP,EAAQC,EAAE,EAGlE2C,GAAYhF,EAAY,OAAQ,iCAEhCiF,GAAc3E,EACnB,MACCoE,EACAQ,EACAC,EACAC,KAEA,GAAI,CACH,MAAMJ,GAASxF,EAAAA,EAAAA,EAAAA,EAAA,CACdmD,IAAAA,CAAG,EACC+B,GAAW,CAAEA,QAAAA,CAAO,GACpBQ,GAAQ,CAAEA,KAAAA,CAAI,GACd,AAAAC,CAAAA,MAAAA,EAAW,KAAA,EAAXA,EAAaE,wBAAwB,AAAxBA,GAA4B,CAAEC,sBAAuB,CAAA,CAAI,GACtEH,MAAAA,GAAAA,EAAaI,0BAA0B,EAAIH,EAC5C,CACAI,gBAAiB,CAChBC,cAAeN,MAAAA,EAAW,KAAA,EAAXA,EAAaI,0BAA0B,CACtDH,YAAAA,IAGD,CAAEI,gBAAiB,CAAEC,cAAe,CAAA,CAAK,CAAE,IAE/C/E,EAAgBgF,MAAM,CAAC,CAAE/C,IAAAA,CAAG,GAC5Ba,IACAlB,EAAqB,CAAEuB,KAAM,UAAWC,QAASzB,EAAE,2BAA2B,EAC/E,CAAE,MAAO0B,EAAO,CACfzB,EAAqB,CAAEuB,KAAM,QAASC,QAASC,CAAK,EACrD,CACD,EACA,CAACiB,GAAWxB,EAAYlB,EAAsBK,EAAKN,EAAE,EAGhDsD,GAA4BnE,EAA6B,CAC9DoE,UAAWA,KACVjF,EAAkBoE,KAAK,CAAC7C,EAAKG,CAAC,CAAGM,GACjCP,EAAO0C,QAAQ,CAAC,QACjB,EACAe,QAAU9B,IACTzB,EAAqB,CAAEuB,KAAM,QAASC,QAASC,CAAK,EACrD,EACA+B,UAAWA,KACVtC,GACD,IAGKuC,GAAwBxE,EAAyB,CACtDqE,UAAWA,KACVtD,EAAqB,CAAEuB,KAAM,UAAWC,QAASzB,EAAE,4BAA4B,EAChF,EACAwD,QAAU9B,IACTzB,EAAqB,CAAEuB,KAAM,QAASC,QAASC,CAAK,EACrD,EACA+B,UAAWA,KACVtC,GACD,IAGKwC,GAAevG,EAAmB,MAAOwG,IAC9C,OAAQA,GACP,KAAK3E,EAAiB4E,SAAS,CAC9B/D,EACC9B,EAAA8F,aAAA,CAACpF,EAAoB,CACpBqF,WAAYA,IAAYT,GAA0BU,MAAM,CAAC1D,GACzD2D,SAAUA,KACT9C,GACD,CAAE,IAGJ,KACD,MAAKlC,EAAiBiF,aAAa,CAClCtC,KACA,KACD,MAAK3C,EAAiBkF,eAAe,CACpC,IAAMC,EAAe,MAAMxD,IAE3B,GAAI,CAACwD,EAAc,CAClBnE,EAAqB,CAAEuB,KAAM,QAASC,QAASzB,EAAE,oCAAoC,GACrF,KACD,CAEAF,EACC9B,EAAA8F,aAAA,CAACnF,EAAe,CACfkB,KAAMA,EACNyB,MAAO8C,EACPC,UAAWhD,EACXiD,OAAQxC,GACRyC,UAAWvC,GACXiC,SAAU9C,CAAW,IAGvB,KACD,MAAKlC,EAAiBuF,WAAW,CAChC1E,EAAS9B,EAAA8F,aAAA,CAACrF,EAAgB,CAACoB,KAAMA,EAAM4E,UAAWvC,GAAmB+B,SAAU9C,CAAW,IAC1F,KACD,MAAKlC,EAAiByF,SAAS,CAC9B,IAAMpD,EAAQ,MAAMV,IACpBd,EACCD,EAAKsC,YAAY,CAChBnE,EAAA8F,aAAA,CAACtF,EAAkB,CAAC4F,aAAc9C,EAAOa,aAActC,EAAKsC,YAAa,CAACwC,UAAW/B,GAAaqB,SAAU9C,CAAW,GAEvHnD,EAAA8F,aAAA,CAACvF,EAAc,CAAC6F,aAAc9C,EAAOqD,UAAW/B,GAAaqB,SAAU9C,CAAW,IAGpF,KACD,MAAKlC,EAAiB2F,UAAU,CAC/B9E,EACC9B,EAAA8F,aAAA,CAAC1F,EAAoB,CACpByG,aAAcA,IAAYnB,GAAsBM,MAAM,CAAC1D,GACvD2D,SAAUA,KACT9C,IACAhB,EAAqB,CAAA,EACtB,CAAE,IAGJA,EAAqB,CAAA,EAIvB,CACD,GAEM2E,GAAyBjG,IAEzBkG,GAAsBvH,EAAW,iCAEjCwH,GAAiBtH,EAAQ,oBACzBuH,GAAiBvH,EAAQ,oBAEzBwH,GAAW,AAAArF,CAAAA,MAAAA,EAAI,KAAA,EAAJA,EAAMsF,IAAI,AAAJA,GAAS,CAAA,CAAA,AAAM,OAANzF,CAAAA,EAAAG,EAAKuF,CAAC,AAADA,GAAC1F,AAAA,KAAA,IAAAA,EAAA,KAAA,EAANA,EAAQW,GAAG,AAAHA,IAAQE,GAAOyE,IAAkBC,EAAAA,GAAmB,AAAApF,CAAAA,MAAAA,EAAI,KAAA,EAAA,AAAa,OAAbF,CAAAA,EAAJE,EAAMa,WAAW,AAAXA,GAAWf,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAjBA,EAAmBK,CAAC,AAADA,IAAM,iBAC/GqF,GAAe,CAAC,CAACP,CAAAA,MAAAA,IAAAA,GAAwBQ,WAAW,AAAXA,GAAe,AAAAzF,CAAAA,MAAAA,EAAI,KAAA,EAAJA,EAAMuF,CAAC,AAADA,IAAMG,KAAAA,EACpEC,GAAkB/H,EAAc,2BAChCgI,GAAyBhI,EAAc,oCACvCiI,GAAa5G,EAAoB,uBACjC6G,GAAuBlI,EAAc,0BACrCmI,GAAenI,EAAc,uBAC7BoI,GAAqBpI,EAAc,8BACnCqI,GAAmBtI,EAAW,4DAC9BuI,GAAwB,CAAClG,EAAKmG,MAAM,EAAInG,EAAKuF,CAAC,CAC9Ca,GAAsB,CAAA,CAAA,AAAiB,OAAjBrG,CAAAA,EAACC,EAAKa,WAAW,AAAXA,GAAWd,AAAA,KAAA,IAAAA,GAAhBA,EAAkBsB,KAAK,AAALA,EACzCgF,GAAqBC,CAAAA,CAAQpB,CAAAA,IAAuBgB,IAA0B,CAAA,CAACD,IAAoBG,EAAAA,CAAmB,EACtHG,GAAqBxH,EAAsBiB,GAE3CwG,GAAwBzC,IAC7B,OAAQA,GACP,KAAK3E,EAAiB4E,SAAS,CAC9B,MAAO,CAACuC,IAAsB,CAAC,CAAClB,IAAYG,EAC7C,MAAKpG,EAAiBuF,WAAW,CAChC,MAAO,CAAC4B,IAAsB,CAAC,CAAClB,IAAYM,EAC7C,MAAKvG,EAAiBqH,UAAU,CAC/B,MAAO,CAACF,IAAuBX,CAAAA,IAA2BC,IAAcC,EAAAA,CACzE,MAAK1G,EAAiBkF,eAAe,CACpC,MAAO,CAACiC,IAAsBX,EAC/B,MAAKxG,EAAiBiF,aAAa,CAClC,OAAOwB,IAAc,CAACU,IAAsBT,EAC7C,MAAK1G,EAAiByF,SAAS,CAC9B,OAAQlE,GAAiBoF,CAAAA,IAAgBC,EAAAA,GAAyB,CAAC,CAACX,IAAYW,EACjF,MAAK5G,EAAiB2F,UAAU,CAC/B,MAAO,CAAC,CAACM,IAAYgB,EAGvB,CACA,MAAO,CAAA,CACR,EAEMK,GAAexH,EACnByH,GAAG,CAAEC,GAAoBA,KACzBC,MAAM,CAAEC,GAAyD,CAAC,CAACA,GACnED,MAAM,CAAEE,IACR,GAAM,CAAEC,QAAAA,CAAO,CAAEjD,GAAAA,CAAAA,CAAI,CAAGgD,EAKxB,OAJIC,GACHD,CAAAA,EAAOC,OAAO,CAAGA,EAAQH,MAAM,CAACI,IAAA,GAAC,CAAElD,GAAAA,CAAAA,CAAI,CAAAkD,EAAA,OAAKT,GAAqBzC,EAAG,EAAA,EAG9DyC,GAAqBzC,EAC7B,GACCmD,IAAI,CAAC,CAACC,EAAGC,KAAC,IAAAC,EAAAC,EAAA,MAAK,CAAA,AAAQ,OAARD,CAAAA,EAACF,EAAEI,KAAK,AAALA,GAAKF,AAAA,KAAA,IAAAA,EAAAA,EAAI,CAAA,EAAC,CAAA,AAAY,OAAZC,CAAAA,EAAKF,EAAEG,KAAK,AAALA,GAAKD,AAAA,KAAA,IAAAA,EAAAA,EAAI,CAAA,CAAE,GAE1CE,GAAgBjK,EAAoBkK,IACzC3D,GAAa2D,EACd,GAEA,MAAO,CAAEf,aAAAA,GAAcc,cAAAA,EAAa,CACrC\"}"}