{"code":"function module(e,o,n){let t,l,i;function r(){let e=t(\"LDAP_Enable\"),o=t(\"CROWD_Enable\"),n=e&&\"loginWithLDAP\"||o&&\"loginWithCrowd\"||\"loginWithPassword\";i(()=>{e&&o&&console.log(\"Both LDAP and Crowd are enabled. Please disable one of them.\"),l[n]||console.log(\"Meteor.\".concat(n,\" is not defined\"))},[e,o,n])}n.export({useLDAPAndCrowdCollisionWarning:()=>r}),n.link(\"@rocket.chat/ui-contexts\",{useSetting(e){t=e}},0),n.link(\"meteor/meteor\",{Meteor(e){l=e}},1),n.link(\"react\",{useEffect(e){i=e}},2)}","map":"{\"version\":3,\"sources\":[\"client/providers/AuthenticationProvider/hooks/useLDAPAndCrowdCollisionWarning.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { useSetting } from '@rocket.chat/ui-contexts';\\nimport { Meteor } from 'meteor/meteor';\\nimport { useEffect } from 'react';\\n\\nimport type { LoginMethods } from '../AuthenticationProvider';\\n\\nexport function useLDAPAndCrowdCollisionWarning() {\\n\\tconst isLdapEnabled = useSetting<boolean>('LDAP_Enable');\\n\\tconst isCrowdEnabled = useSetting<boolean>('CROWD_Enable');\\n\\n\\tconst loginMethod: LoginMethods = (isLdapEnabled && 'loginWithLDAP') || (isCrowdEnabled && 'loginWithCrowd') || 'loginWithPassword';\\n\\n\\tuseEffect(() => {\\n\\t\\tif (isLdapEnabled && isCrowdEnabled) {\\n\\t\\t\\tif (process.env.NODE_ENV === 'development') {\\n\\t\\t\\t\\tthrow new Error('You can not use both LDAP and Crowd at the same time');\\n\\t\\t\\t}\\n\\t\\t\\tconsole.log('Both LDAP and Crowd are enabled. Please disable one of them.');\\n\\t\\t}\\n\\t\\tif (!Meteor[loginMethod]) {\\n\\t\\t\\tif (process.env.NODE_ENV === 'development') {\\n\\t\\t\\t\\tthrow new Error(`Meteor.${loginMethod} is not defined`);\\n\\t\\t\\t}\\n\\t\\t\\tconsole.log(`Meteor.${loginMethod} is not defined`);\\n\\t\\t}\\n\\t}, [isLdapEnabled, isCrowdEnabled, loginMethod]);\\n}\\n\",null],\"names\":[\"useSetting\",\"Meteor\",\"useEffect\",\"useLDAPAndCrowdCollisionWarning\",\"isLdapEnabled\",\"isCrowdEnabled\",\"loginMethod\",\"console\",\"log\",\"concat\",\"module\",\"export\",\"link\",\"v\"],\"mappings\":\"2BAAsDA,EAAAC,EAAAC,EAMhD,SAAUC,IACf,IAAMC,EAAgBJ,EAAoB,eACpCK,EAAiBL,EAAoB,gBAErCM,EAA6BF,GAAiB,iBAAqBC,GAAkB,kBAAqB,oBAEhHH,EAAU,KACLE,GAAiBC,GAIpBE,QAAQC,GAAG,CAAC,gEAERP,CAAM,CAACK,EAAY,EAIvBC,QAAQC,GAAG,CAAA,UAAAC,MAAA,CAAWH,EAAW,mBAEnC,EAAG,CAACF,EAAeC,EAAgBC,EAAY,CAChD,CA1BAI,EAAOC,MAAE,CAAA,CAAAR,gCAAkBA,IAAAA,CAA2B,GAAAO,EAAAE,IAAA,CAAA,2BAAA,CAAAZ,WAAAa,CAAA,EAAAb,EAAAa,CAAA,CAAA,EAAA,GAAAH,EAAAE,IAAA,CAAA,gBAAA,CAAAX,OAAAY,CAAA,EAAAZ,EAAAY,CAAA,CAAA,EAAA,GAAAH,EAAAE,IAAA,CAAA,QAAA,CAAAV,UAAAW,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA\"}"}