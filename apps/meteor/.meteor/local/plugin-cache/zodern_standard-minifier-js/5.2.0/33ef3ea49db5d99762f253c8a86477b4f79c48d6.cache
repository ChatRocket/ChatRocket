{"code":"function module(e,t,a){let n,s,l,o,i,r,u,g,c,d,m,p,b,h,k,f;a.link(\"@rocket.chat/ui-contexts\",{usePermission(e){n=e},useRouter(e){s=e},useSetModal(e){l=e},useCurrentModal(e){o=e},useTranslation(e){i=e},useRouteParameter(e){r=e},useEndpoint(e){u=e}},0),a.link(\"react\",{default(e){g=e},useEffect(e){c=e}},1),a.link(\"../../../../app/utils/client/getURL\",{getURL(e){d=e}},2),a.link(\"../../../components/GenericUpsellModal\",{default(e){m=e}},3),a.link(\"../../../components/GenericUpsellModal/hooks\",{useUpsellActions(e){p=e}},4),a.link(\"../../../components/PageSkeleton\",{default(e){b=e}},5),a.link(\"../../../hooks/useHasLicenseModule\",{useHasLicenseModule(e){h=e}},6),a.link(\"../../notAuthorized/NotAuthorizedPage\",{default(e){k=e}},7),a.link(\"./EngagementDashboardPage\",{default(e){f=e}},8);let E=e=>\"string\"==typeof e&&[\"users\",\"messages\",\"channels\"].includes(e);a.exportDefault(()=>{let e=i(),t=n(\"view-engagement-dashboard\"),a=l(),_=!!o(),C=s(),M=r(\"tab\"),P=u(\"POST\",\"/v1/statistics.telemetry\"),v=h(\"engagement-dashboard\"),{shouldShowUpsell:D,handleManageSubscription:L}=p(v);return(c(()=>{D&&a(g.createElement(m,{\"aria-label\":e(\"Engagement_Dashboard\"),title:e(\"Engagement_Dashboard\"),img:d(\"images/engagement.png\"),subtitle:e(\"Analyze_practical_usage\"),description:e(\"Enrich_your_workspace\"),onClose:()=>a(null),onConfirm:L,onCancel:()=>a(null)})),C.subscribeToRouteChange(()=>{E(M)||C.navigate({pattern:\"/admin/engagement/:tab?\",params:{tab:\"users\"}},{replace:!0})})},[D,C,M,a,e,L]),_)?g.createElement(b,null):t&&v?(P({params:[{eventName:\"updateCounter\",settingsId:\"Engagement_Dashboard_Load_Count\"}]}),g.createElement(f,{tab:M,onSelectTab:e=>C.navigate({pattern:\"/admin/engagement/:tab?\",params:{tab:e}})})):g.createElement(k,null)})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/engagementDashboard/EngagementDashboardRoute.tsx\",\"<anon>\"],\"sourcesContent\":[\"import {\\n\\tusePermission,\\n\\tuseRouter,\\n\\tuseSetModal,\\n\\tuseCurrentModal,\\n\\tuseTranslation,\\n\\tuseRouteParameter,\\n\\tuseEndpoint,\\n} from '@rocket.chat/ui-contexts';\\nimport type { ReactElement } from 'react';\\nimport React, { useEffect } from 'react';\\n\\nimport { getURL } from '../../../../app/utils/client/getURL';\\nimport GenericUpsellModal from '../../../components/GenericUpsellModal';\\nimport { useUpsellActions } from '../../../components/GenericUpsellModal/hooks';\\nimport PageSkeleton from '../../../components/PageSkeleton';\\nimport { useHasLicenseModule } from '../../../hooks/useHasLicenseModule';\\nimport NotAuthorizedPage from '../../notAuthorized/NotAuthorizedPage';\\nimport EngagementDashboardPage from './EngagementDashboardPage';\\n\\nconst isValidTab = (tab: string | undefined): tab is 'users' | 'messages' | 'channels' =>\\n\\ttypeof tab === 'string' && ['users', 'messages', 'channels'].includes(tab);\\n\\nconst EngagementDashboardRoute = (): ReactElement | null => {\\n\\tconst t = useTranslation();\\n\\tconst canViewEngagementDashboard = usePermission('view-engagement-dashboard');\\n\\tconst setModal = useSetModal();\\n\\tconst isModalOpen = !!useCurrentModal();\\n\\n\\tconst router = useRouter();\\n\\tconst tab = useRouteParameter('tab');\\n\\tconst eventStats = useEndpoint('POST', '/v1/statistics.telemetry');\\n\\n\\tconst hasEngagementDashboard = useHasLicenseModule('engagement-dashboard') as boolean;\\n\\n\\tconst { shouldShowUpsell, handleManageSubscription } = useUpsellActions(hasEngagementDashboard);\\n\\n\\tuseEffect(() => {\\n\\t\\tif (shouldShowUpsell) {\\n\\t\\t\\tsetModal(\\n\\t\\t\\t\\t<GenericUpsellModal\\n\\t\\t\\t\\t\\taria-label={t('Engagement_Dashboard')}\\n\\t\\t\\t\\t\\ttitle={t('Engagement_Dashboard')}\\n\\t\\t\\t\\t\\timg={getURL('images/engagement.png')}\\n\\t\\t\\t\\t\\tsubtitle={t('Analyze_practical_usage')}\\n\\t\\t\\t\\t\\tdescription={t('Enrich_your_workspace')}\\n\\t\\t\\t\\t\\tonClose={() => setModal(null)}\\n\\t\\t\\t\\t\\tonConfirm={handleManageSubscription}\\n\\t\\t\\t\\t\\tonCancel={() => setModal(null)}\\n\\t\\t\\t\\t/>,\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\trouter.subscribeToRouteChange(() => {\\n\\t\\t\\tif (!isValidTab(tab)) {\\n\\t\\t\\t\\trouter.navigate(\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tpattern: '/admin/engagement/:tab?',\\n\\t\\t\\t\\t\\t\\tparams: { tab: 'users' },\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{ replace: true },\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}, [shouldShowUpsell, router, tab, setModal, t, handleManageSubscription]);\\n\\n\\tif (isModalOpen) {\\n\\t\\treturn <PageSkeleton />;\\n\\t}\\n\\n\\tif (!canViewEngagementDashboard || !hasEngagementDashboard) {\\n\\t\\treturn <NotAuthorizedPage />;\\n\\t}\\n\\n\\teventStats({\\n\\t\\tparams: [{ eventName: 'updateCounter', settingsId: 'Engagement_Dashboard_Load_Count' }],\\n\\t});\\n\\n\\treturn (\\n\\t\\t<EngagementDashboardPage\\n\\t\\t\\ttab={tab as 'users' | 'messages' | 'channels'}\\n\\t\\t\\tonSelectTab={(tab) =>\\n\\t\\t\\t\\trouter.navigate({\\n\\t\\t\\t\\t\\tpattern: '/admin/engagement/:tab?',\\n\\t\\t\\t\\t\\tparams: { tab },\\n\\t\\t\\t\\t})\\n\\t\\t\\t}\\n\\t\\t/>\\n\\t);\\n};\\n\\nexport default EngagementDashboardRoute;\\n\",null],\"names\":[\"usePermission\",\"useRouter\",\"useSetModal\",\"useCurrentModal\",\"useTranslation\",\"useRouteParameter\",\"useEndpoint\",\"React\",\"useEffect\",\"getURL\",\"GenericUpsellModal\",\"useUpsellActions\",\"PageSkeleton\",\"useHasLicenseModule\",\"NotAuthorizedPage\",\"EngagementDashboardPage\",\"module\",\"link\",\"v\",\"default\",\"isValidTab\",\"tab\",\"includes\",\"exportDefault\",\"EngagementDashboardRoute\",\"t\",\"canViewEngagementDashboard\",\"setModal\",\"isModalOpen\",\"router\",\"eventStats\",\"hasEngagementDashboard\",\"shouldShowUpsell\",\"handleManageSubscription\",\"createElement\",\"title\",\"img\",\"subtitle\",\"description\",\"onClose\",\"onConfirm\",\"onCancel\",\"subscribeToRouteChange\",\"navigate\",\"pattern\",\"params\",\"replace\",\"eventName\",\"settingsId\",\"onSelectTab\"],\"mappings\":\"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\"}"}