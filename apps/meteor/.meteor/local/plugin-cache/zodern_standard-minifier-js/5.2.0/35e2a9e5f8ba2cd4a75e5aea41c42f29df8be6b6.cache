{"code":"function module(t,s,n){n.link(\"@babel/runtime/regenerator\",{default:function(t){e=t}},0),n.export({useDiscussionsList:function(){return f}}),n.link(\"@rocket.chat/ui-contexts\",{useEndpoint:function(t){i=t}},0),n.link(\"react\",{useCallback:function(t){o=t},useMemo:function(t){u=t}},1),n.link(\"../../../../hooks/lists/useScrollableMessageList\",{useScrollableMessageList:function(t){r=t}},2),n.link(\"../../../../hooks/lists/useStreamUpdatesForMessageList\",{useStreamUpdatesForMessageList:function(t){a=t}},3),n.link(\"../../../../lib/lists/DiscussionsList\",{DiscussionsList:function(t){c=t}},4),n.link(\"../../../../lib/utils/getConfig\",{getConfig:function(t){l=t}},5);var e,i,o,u,r,a,c,l,f=function(t,s){if(!s)throw Error(\"User ID is undefined. Cannot load discussions list\");var n=u(function(){return new c(t)},[t]),f=i(\"GET\",\"/v1/chat.getDiscussions\"),d=o(function(s,n){var i,o,u;return e.async(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,e.awrap(f({roomId:t.rid,text:t.text,offset:s,count:n}));case 2:return o=(i=r.sent).messages,u=i.total,r.abrupt(\"return\",{items:o,itemCount:u});case 6:case\"end\":return r.stop()}},null,null,null,Promise)},[f,t.rid,t.text]),m=r(n,d,u(function(){return parseInt(\"\"+l(\"discussionListSize\",10))},[])),g=m.loadMoreItems,k=m.initialItemCount;return a(n,s,t.rid),{discussionsList:n,loadMoreItems:g,initialItemCount:k}}}","map":"{\"version\":3,\"sources\":[\"client/views/room/contextualBar/Discussions/useDiscussionsList.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IUser } from '@rocket.chat/core-typings';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useCallback, useMemo } from 'react';\\n\\nimport { useScrollableMessageList } from '../../../../hooks/lists/useScrollableMessageList';\\nimport { useStreamUpdatesForMessageList } from '../../../../hooks/lists/useStreamUpdatesForMessageList';\\nimport type { DiscussionsListOptions } from '../../../../lib/lists/DiscussionsList';\\nimport { DiscussionsList } from '../../../../lib/lists/DiscussionsList';\\nimport { getConfig } from '../../../../lib/utils/getConfig';\\n\\nexport const useDiscussionsList = (\\n\\toptions: DiscussionsListOptions,\\n\\tuid: IUser['_id'] | null,\\n): {\\n\\tdiscussionsList: DiscussionsList;\\n\\tinitialItemCount: number;\\n\\tloadMoreItems: (start: number, end: number) => void;\\n} => {\\n\\tif (!uid) {\\n\\t\\tthrow new Error('User ID is undefined. Cannot load discussions list');\\n\\t}\\n\\n\\tconst discussionsList = useMemo(() => new DiscussionsList(options), [options]);\\n\\n\\tconst getDiscussions = useEndpoint('GET', '/v1/chat.getDiscussions');\\n\\n\\tconst fetchMessages = useCallback(\\n\\t\\tasync (start, end) => {\\n\\t\\t\\tconst { messages, total } = await getDiscussions({\\n\\t\\t\\t\\troomId: options.rid,\\n\\t\\t\\t\\ttext: options.text,\\n\\t\\t\\t\\toffset: start,\\n\\t\\t\\t\\tcount: end,\\n\\t\\t\\t});\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\titems: messages,\\n\\t\\t\\t\\titemCount: total,\\n\\t\\t\\t};\\n\\t\\t},\\n\\t\\t[getDiscussions, options.rid, options.text],\\n\\t);\\n\\n\\tconst { loadMoreItems, initialItemCount } = useScrollableMessageList(\\n\\t\\tdiscussionsList,\\n\\t\\tfetchMessages,\\n\\t\\tuseMemo(() => parseInt(`${getConfig('discussionListSize', 10)}`), []),\\n\\t);\\n\\tuseStreamUpdatesForMessageList(discussionsList, uid, options.rid);\\n\\n\\treturn {\\n\\t\\tdiscussionsList,\\n\\t\\tloadMoreItems,\\n\\t\\tinitialItemCount,\\n\\t};\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"export\",\"useDiscussionsList\",\"useEndpoint\",\"useCallback\",\"useMemo\",\"useScrollableMessageList\",\"useStreamUpdatesForMessageList\",\"DiscussionsList\",\"getConfig\",\"options\",\"uid\",\"Error\",\"discussionsList\",\"getDiscussions\",\"fetchMessages\",\"start\",\"end\",\"_await$getDiscussions\",\"messages\",\"total\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"roomId\",\"rid\",\"text\",\"offset\",\"count\",\"sent\",\"abrupt\",\"items\",\"itemCount\",\"stop\",\"Promise\",\"_useScrollableMessage\",\"parseInt\",\"loadMoreItems\",\"initialItemCount\"],\"mappings\":\"uBACsBA,EAAMC,IAAA,CAAA,6BAA2B,CAAAC,QAAA,SAAAC,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAAvDH,EAAOK,MAAE,CAAA,CAAAC,mBAAmB,WAAA,OAAAA,CAA2B,CAAA,GAAAN,EAAAC,IAAA,CAAA,2BAAA,CAAAM,YAAA,SAAAJ,CAAA,EAAAI,EAAAJ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAO,YAAA,SAAAL,CAAA,EAAAK,EAAAL,CAAA,EAAAM,QAAA,SAAAN,CAAA,EAAAM,EAAAN,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,mDAAA,CAAAS,yBAAA,SAAAP,CAAA,EAAAO,EAAAP,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,yDAAA,CAAAU,+BAAA,SAAAR,CAAA,EAAAQ,EAAAR,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wCAAA,CAAAW,gBAAA,SAAAT,CAAA,EAAAS,EAAAT,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,kCAAA,CAAAY,UAAA,SAAAV,CAAA,EAAAU,EAAAV,CAAA,CAAA,EAAA,GAShD,IATPC,EAAuDG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAS1CP,EAAqB,SACjCQ,CAA+B,CAC/BC,CAAwB,EAMxB,GAAI,CAACA,EACJ,MAAM,AAAIC,MAAM,sDAGjB,IAAMC,EAAkBR,EAAQ,WAAA,OAAM,IAAIG,EAAgBE,EAAQ,EAAE,CAACA,EAAQ,EAEvEI,EAAiBX,EAAY,MAAO,2BAEpCY,EAAgBX,EACrB,SAAOY,CAAK,CAAEC,CAAG,EAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAApB,EAAAqB,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAE,IAAA,CAAA,EAAAxB,EAAAyB,KAAA,CACkBX,EAAe,CAChDY,OAAQhB,EAAQiB,GAAG,CACnBC,KAAMlB,EAAQkB,IAAI,CAClBC,OAAQb,EACRc,MAAOb,IACN,MAAA,EALqB,OAAfE,EAAQD,AAKdA,CAAAA,EAAAI,EAAAS,IAAA,AAAAA,EALMZ,QAAQ,CAAEC,EAAKF,EAALE,KAAK,CAAAE,EAAAU,MAAA,CAAA,SAOhB,CACNC,MAAOd,EACPe,UAAWd,GACX,MAAA,EAAA,IAAA,MAAA,OAAAE,EAAAa,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAAA,EAEF,CAACtB,EAAgBJ,EAAQiB,GAAG,CAAEjB,EAAQkB,IAAI,CAAC,EAG5CS,EAA4C/B,EAC3CO,EACAE,EACAV,EAAQ,WAAA,OAAMiC,SAAQ,GAAI7B,EAAU,qBAAsB,IAAM,EAAE,EAAE,GAH7D8B,EAAaF,EAAbE,aAAa,CAAEC,EAAgBH,EAAhBG,gBAAgB,CAOvC,OAFAjC,EAA+BM,EAAiBF,EAAKD,EAAQiB,GAAG,EAEzD,CACNd,gBAAAA,EACA0B,cAAAA,EACAC,iBAAAA,EAEF\"}"}