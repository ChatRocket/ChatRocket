{"code":"function module(e,t){\"use strict\";function n(e,t){void 0===t&&(t={});for(var n=function(e){for(var t=[],n=0;n<e.length;){var r=e[n];if(\"*\"===r||\"+\"===r||\"?\"===r){t.push({type:\"MODIFIER\",index:n,value:e[n++]});continue}if(\"\\\\\"===r){t.push({type:\"ESCAPED_CHAR\",index:n++,value:e[n++]});continue}if(\"{\"===r){t.push({type:\"OPEN\",index:n,value:e[n++]});continue}if(\"}\"===r){t.push({type:\"CLOSE\",index:n,value:e[n++]});continue}if(\":\"===r){for(var o=\"\",i=n+1;i<e.length;){var a=e.charCodeAt(i);if(a>=48&&a<=57||a>=65&&a<=90||a>=97&&a<=122||95===a){o+=e[i++];continue}break}if(!o)throw TypeError(\"Missing parameter name at \".concat(n));t.push({type:\"NAME\",index:n,value:o}),n=i;continue}if(\"(\"===r){var c=1,f=\"\",i=n+1;if(\"?\"===e[i])throw TypeError('Pattern cannot start with \"?\" at '.concat(i));for(;i<e.length;){if(\"\\\\\"===e[i]){f+=e[i++]+e[i++];continue}if(\")\"===e[i]){if(0==--c){i++;break}}else if(\"(\"===e[i]&&(c++,\"?\"!==e[i+1]))throw TypeError(\"Capturing groups are not allowed at \".concat(i));f+=e[i++]}if(c)throw TypeError(\"Unbalanced pattern at \".concat(n));if(!f)throw TypeError(\"Missing pattern at \".concat(n));t.push({type:\"PATTERN\",index:n,value:f}),n=i;continue}t.push({type:\"CHAR\",index:n,value:e[n++]})}return t.push({type:\"END\",index:n,value:\"\"}),t}(e),r=t.prefixes,o=void 0===r?\"./\":r,a=t.delimiter,c=void 0===a?\"/#?\":a,f=[],u=0,p=0,d=\"\",s=function(e){if(p<n.length&&n[p].type===e)return n[p++].value},v=function(e){var t=s(e);if(void 0!==t)return t;var r=n[p],o=r.type,i=r.index;throw TypeError(\"Unexpected \".concat(o,\" at \").concat(i,\", expected \").concat(e))},h=function(){for(var e,t=\"\";e=s(\"CHAR\")||s(\"ESCAPED_CHAR\");)t+=e;return t},x=function(e){for(var t=0;t<c.length;t++){var n=c[t];if(e.indexOf(n)>-1)return!0}return!1},m=function(e){var t=f[f.length-1],n=e||(t&&\"string\"==typeof t?t:\"\");if(t&&!n)throw TypeError('Must have text between two parameters, missing text after \"'.concat(t.name,'\"'));return!n||x(n)?\"[^\".concat(i(c),\"]+?\"):\"(?:(?!\".concat(i(n),\")[^\").concat(i(c),\"])+?\")};p<n.length;){var l=s(\"CHAR\"),E=s(\"NAME\"),g=s(\"PATTERN\");if(E||g){var y=l||\"\";-1===o.indexOf(y)&&(d+=y,y=\"\"),d&&(f.push(d),d=\"\"),f.push({name:E||u++,prefix:y,suffix:\"\",pattern:g||m(y),modifier:s(\"MODIFIER\")||\"\"});continue}var T=l||s(\"ESCAPED_CHAR\");if(T){d+=T;continue}if(d&&(f.push(d),d=\"\"),s(\"OPEN\")){var y=h(),w=s(\"NAME\")||\"\",A=s(\"PATTERN\")||\"\",R=h();v(\"CLOSE\"),f.push({name:w||(A?u++:\"\"),pattern:w&&!A?m(y):A,prefix:y,suffix:R,modifier:s(\"MODIFIER\")||\"\"});continue}v(\"END\")}return f}function r(e,t){void 0===t&&(t={});var n=a(t),r=t.encode,o=void 0===r?function(e){return e}:r,i=t.validate,c=void 0===i||i,f=e.map(function(e){if(\"object\"==typeof e)return new RegExp(\"^(?:\".concat(e.pattern,\")$\"),n)});return function(t){for(var n=\"\",r=0;r<e.length;r++){var i=e[r];if(\"string\"==typeof i){n+=i;continue}var a=t?t[i.name]:void 0,u=\"?\"===i.modifier||\"*\"===i.modifier,p=\"*\"===i.modifier||\"+\"===i.modifier;if(Array.isArray(a)){if(!p)throw TypeError('Expected \"'.concat(i.name,'\" to not repeat, but got an array'));if(0===a.length){if(u)continue;throw TypeError('Expected \"'.concat(i.name,'\" to not be empty'))}for(var d=0;d<a.length;d++){var s=o(a[d],i);if(c&&!f[r].test(s))throw TypeError('Expected all \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(s,'\"'));n+=i.prefix+s+i.suffix}continue}if(\"string\"==typeof a||\"number\"==typeof a){var s=o(String(a),i);if(c&&!f[r].test(s))throw TypeError('Expected \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(s,'\"'));n+=i.prefix+s+i.suffix;continue}if(!u){var v=p?\"an array\":\"a string\";throw TypeError('Expected \"'.concat(i.name,'\" to be ').concat(v))}}return n}}function o(e,t,n){void 0===n&&(n={});var r=n.decode,o=void 0===r?function(e){return e}:r;return function(n){var r=e.exec(n);if(!r)return!1;for(var i=r[0],a=r.index,c=Object.create(null),f=1;f<r.length;f++)!function(e){if(void 0!==r[e]){var n=t[e-1];\"*\"===n.modifier||\"+\"===n.modifier?c[n.name]=r[e].split(n.prefix+n.suffix).map(function(e){return o(e,n)}):c[n.name]=o(r[e],n)}}(f);return{path:i,index:a,params:c}}}function i(e){return e.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function a(e){return e&&e.sensitive?\"\":\"i\"}function c(e,t,n){void 0===n&&(n={});for(var r=n.strict,o=void 0!==r&&r,c=n.start,f=n.end,u=n.encode,p=void 0===u?function(e){return e}:u,d=n.delimiter,s=n.endsWith,v=\"[\".concat(i(void 0===s?\"\":s),\"]|$\"),h=\"[\".concat(i(void 0===d?\"/#?\":d),\"]\"),x=void 0===c||c?\"^\":\"\",m=0;m<e.length;m++){var l=e[m];if(\"string\"==typeof l)x+=i(p(l));else{var E=i(p(l.prefix)),g=i(p(l.suffix));if(l.pattern){if(t&&t.push(l),E||g){if(\"+\"===l.modifier||\"*\"===l.modifier){var y=\"*\"===l.modifier?\"?\":\"\";x+=\"(?:\".concat(E,\"((?:\").concat(l.pattern,\")(?:\").concat(g).concat(E,\"(?:\").concat(l.pattern,\"))*)\").concat(g,\")\").concat(y)}else x+=\"(?:\".concat(E,\"(\").concat(l.pattern,\")\").concat(g,\")\").concat(l.modifier)}else{if(\"+\"===l.modifier||\"*\"===l.modifier)throw TypeError('Can not repeat \"'.concat(l.name,'\" without a prefix and suffix'));x+=\"(\".concat(l.pattern,\")\").concat(l.modifier)}}else x+=\"(?:\".concat(E).concat(g,\")\").concat(l.modifier)}}if(void 0===f||f)o||(x+=\"\".concat(h,\"?\")),x+=n.endsWith?\"(?=\".concat(v,\")\"):\"$\";else{var T=e[e.length-1],w=\"string\"==typeof T?h.indexOf(T[T.length-1])>-1:void 0===T;o||(x+=\"(?:\".concat(h,\"(?=\").concat(v,\"))?\")),w||(x+=\"(?=\".concat(h,\"|\").concat(v,\")\"))}return new RegExp(x,a(n))}function f(e,t,r){var o;return e instanceof RegExp?function(e,t){if(!t)return e;for(var n=/\\((?:\\?<(.*?)>)?(?!\\?)/g,r=0,o=n.exec(e.source);o;)t.push({name:o[1]||r++,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"}),o=n.exec(e.source);return e}(e,t):Array.isArray(e)?(o=e.map(function(e){return f(e,t,r).source}),new RegExp(\"(?:\".concat(o.join(\"|\"),\")\"),a(r))):c(n(e,r),t,r)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.pathToRegexp=t.tokensToRegexp=t.regexpToFunction=t.match=t.tokensToFunction=t.compile=t.parse=void 0,t.parse=n,t.compile=function(e,t){return r(n(e,t),t)},t.tokensToFunction=r,t.match=function(e,t){var n=[];return o(f(e,n,t),n,t)},t.regexpToFunction=o,t.tokensToRegexp=c,t.pathToRegexp=f}","map":"{\"version\":3,\"sources\":[\"<anon>\"],\"names\":[],\"mappings\":\"\"}"}