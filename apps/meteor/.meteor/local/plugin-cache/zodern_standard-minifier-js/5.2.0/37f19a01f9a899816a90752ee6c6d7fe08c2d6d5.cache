{"code":"function module(e,n,t){var s,a,i,o,r,u,l,c,m,f;t.link(\"@rocket.chat/fuselage\",{MessageDivider:function(e){s=e}},0),t.link(\"@rocket.chat/ui-contexts\",{useUserPreference:function(e){a=e}},1),t.link(\"react\",{default:function(e){i=e},Fragment:function(e){o=e},memo:function(e){r=e}},2),t.link(\"../../../../app/ui-utils/client\",{MessageTypes:function(e){u=e}},3),t.link(\"../../../components/message/variants/RoomMessage\",{default:function(e){l=e}},4),t.link(\"../../../components/message/variants/SystemMessage\",{default:function(e){c=e}},5),t.link(\"../../../hooks/useFormatDate\",{useFormatDate:function(e){m=e}},6),t.link(\"../../room/MessageList/lib/isMessageNewDay\",{isMessageNewDay:function(e){f=e}},7),t.exportDefault(r(function(e){var n=e.messages,t=m(),r=!!a(\"displayAvatars\");return i.createElement(i.Fragment,null,n.map(function(e,n,a){var m=a[n-1],g=f(e,m),k=u.isSystemMessage(e);return i.createElement(o,{key:e._id},g&&i.createElement(s,null,t(e.ts)),!k&&i.createElement(l,{message:e,sequential:!1,unread:!1,mention:!1,all:!1,ignoredUser:!1,showUserAvatar:r}),k&&i.createElement(c,{message:e,showUserAvatar:r}))}))}))}","map":"{\"version\":3,\"sources\":[\"client/views/audit/components/AuditMessageList.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage } from '@rocket.chat/core-typings';\\nimport { MessageDivider } from '@rocket.chat/fuselage';\\nimport { useUserPreference } from '@rocket.chat/ui-contexts';\\nimport type { ReactElement } from 'react';\\nimport React, { Fragment, memo } from 'react';\\n\\nimport { MessageTypes } from '../../../../app/ui-utils/client';\\nimport RoomMessage from '../../../components/message/variants/RoomMessage';\\nimport SystemMessage from '../../../components/message/variants/SystemMessage';\\nimport { useFormatDate } from '../../../hooks/useFormatDate';\\nimport { isMessageNewDay } from '../../room/MessageList/lib/isMessageNewDay';\\n\\ntype AuditMessageListProps = {\\n\\tmessages: IMessage[];\\n};\\n\\nconst AuditMessageList = ({ messages }: AuditMessageListProps): ReactElement => {\\n\\tconst formatDate = useFormatDate();\\n\\tconst showUserAvatar = !!useUserPreference<boolean>('displayAvatars');\\n\\n\\treturn (\\n\\t\\t<>\\n\\t\\t\\t{messages.map((message, index, { [index - 1]: previous }) => {\\n\\t\\t\\t\\tconst newDay = isMessageNewDay(message, previous);\\n\\t\\t\\t\\tconst system = MessageTypes.isSystemMessage(message);\\n\\n\\t\\t\\t\\treturn (\\n\\t\\t\\t\\t\\t<Fragment key={message._id}>\\n\\t\\t\\t\\t\\t\\t{newDay && <MessageDivider>{formatDate(message.ts)}</MessageDivider>}\\n\\n\\t\\t\\t\\t\\t\\t{!system && (\\n\\t\\t\\t\\t\\t\\t\\t<RoomMessage\\n\\t\\t\\t\\t\\t\\t\\t\\tmessage={message}\\n\\t\\t\\t\\t\\t\\t\\t\\tsequential={false}\\n\\t\\t\\t\\t\\t\\t\\t\\tunread={false}\\n\\t\\t\\t\\t\\t\\t\\t\\tmention={false}\\n\\t\\t\\t\\t\\t\\t\\t\\tall={false}\\n\\t\\t\\t\\t\\t\\t\\t\\tignoredUser={false}\\n\\t\\t\\t\\t\\t\\t\\t\\tshowUserAvatar={showUserAvatar}\\n\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t)}\\n\\n\\t\\t\\t\\t\\t\\t{system && <SystemMessage message={message} showUserAvatar={showUserAvatar} />}\\n\\t\\t\\t\\t\\t</Fragment>\\n\\t\\t\\t\\t);\\n\\t\\t\\t})}\\n\\t\\t</>\\n\\t);\\n};\\n\\nexport default memo(AuditMessageList);\\n\",null],\"names\":[\"MessageDivider\",\"useUserPreference\",\"React\",\"Fragment\",\"memo\",\"MessageTypes\",\"RoomMessage\",\"SystemMessage\",\"useFormatDate\",\"isMessageNewDay\",\"module\",\"link\",\"v\",\"exportDefault\",\"_ref\",\"messages\",\"formatDate\",\"showUserAvatar\",\"createElement\",\"map\",\"message\",\"index\",\"_ref2\",\"previous\",\"newDay\",\"system\",\"isSystemMessage\",\"key\",\"_id\",\"ts\",\"sequential\",\"unread\",\"mention\",\"all\",\"ignoredUser\"],\"mappings\":\"uBAgBA,IAfAA,EAAuDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA9CC,EAAgBC,IAAA,CAAM,wBAAwB,CAAAX,eAAA,SAAAY,CAAA,EAAAZ,EAAAY,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,2BAAA,CAAAV,kBAAA,SAAAW,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,QAAA,CAAA,QAAA,SAAAC,CAAA,EAAAV,EAAAU,CAAA,EAAAT,SAAA,SAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,KAAA,SAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,kCAAA,CAAAN,aAAA,SAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,mDAAA,CAAA,QAAA,SAAAC,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,qDAAA,CAAA,QAAA,SAAAC,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,+BAAA,CAAAH,cAAA,SAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,6CAAA,CAAAF,gBAAA,SAAAG,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAAvDF,EAAOG,aAAE,CAiDMT,EAlCU,SAAAU,CAAA,EAAsD,IAAnDC,EAAQD,EAARC,QAAQ,CAC7BC,EAAaR,IACbS,EAAiB,CAAC,CAAChB,EAA2B,kBAEpD,OACCC,EAAAgB,aAAA,CAAAhB,EAAAC,QAAA,CAAA,KACEY,EAASI,GAAG,CAAC,SAACC,CAAO,CAAEC,CAAK,CAAAC,CAAA,EAA+B,IAAdC,EAAQD,CAAA,CAApBD,EAAQ,EAAC,CACpCG,EAASf,EAAgBW,EAASG,GAClCE,EAASpB,EAAaqB,eAAe,CAACN,GAE5C,OACClB,EAAAgB,aAAA,CAACf,EAAQ,CAACwB,IAAKP,EAAQQ,GAAAA,AAAI,EACzBJ,GAAUtB,EAAAgB,aAAA,CAAClB,EAAc,KAAEgB,EAAWI,EAAQS,EAAE,GAEhD,CAACJ,GACDvB,EAAAgB,aAAA,CAACZ,EAAW,CACXc,QAASA,EACTU,WAAY,CAAA,EACZC,OAAQ,CAAA,EACRC,QAAS,CAAA,EACTC,IAAK,CAAA,EACLC,YAAa,CAAA,EACbjB,eAAgBA,CAAe,GAIhCQ,GAAUvB,EAAAgB,aAAA,CAACX,EAAa,CAACa,QAASA,EAASH,eAAgBA,CAAe,GAG9E,GAGH\"}"}