{"code":"function module(e,i,t){var n,l,r,o,c,a,s,d,u,h,g,m,f,C,v=[\"timeout\",\"acceptTimeout\"];t.link(\"@babel/runtime/regenerator\",{default:function(e){n=e}},0),t.link(\"@babel/runtime/helpers/typeof\",{default:function(e){l=e}},1),t.link(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\",{default:function(e){r=e}},2),t.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(e){o=e}},3),t.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(e){c=e}},4),t.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default:function(e){a=e}},5),t.link(\"@babel/runtime/helpers/toConsumableArray\",{default:function(e){s=e}},6),t.link(\"@babel/runtime/helpers/createClass\",{default:function(e){d=e}},7),t.link(\"@babel/runtime/helpers/inheritsLoose\",{default:function(e){u=e}},8),t.export({VideoConfManager:function(){return I}}),t.link(\"@rocket.chat/emitter\",{Emitter:function(e){h=e}},0),t.link(\"meteor/meteor\",{Meteor:function(e){g=e}},1),t.link(\"meteor/tracker\",{Tracker:function(e){m=e}},2),t.link(\"../../app/utils/client/lib/SDKClient\",{sdk:function(e){f=e}},3),t.link(\"./utils/getConfig\",{getConfig:function(e){C=e}},4);var p=!!(C(\"debug\")||C(\"debug-VideoConf\")),I=new(function(e){function i(){var i;return(i=e.call(this)||this).userId=void 0,i.currentCallHandler=void 0,i.currentCallData=void 0,i.startingNewCall=!1,i.hooks=[],i.incomingDirectCalls=void 0,i.dismissedCalls=void 0,i._preferences=void 0,i._capabilities=void 0,i.incomingDirectCalls=new Map,i.dismissedCalls=new Set,i._preferences={mic:!0,cam:!1},i._capabilities={},i}u(i,e);var t=i.prototype;return t.isBusy=function(){return!!this.startingNewCall||this.isCalling()},t.isRinging=function(){var e=this;return s(this.incomingDirectCalls.values()).some(function(i){var t=i.callId;return!e.isCallDismissed(t)})},t.isCalling=function(){return!!this.currentCallHandler||!!this.currentCallData&&!this.currentCallData.joined},t.getIncomingDirectCalls=function(){var e=this;return s(this.incomingDirectCalls.values()).filter(function(e){return!e.acceptTimeout}).map(function(i){i.timeout,i.acceptTimeout;var t=a(i,v);return c(c({},t),{},{dismissed:e.isCallDismissed(t.callId)})})},t.startCall=function(e,i){var t,l=this;return n.async(function(r){for(;;)switch(r.prev=r.next){case 0:if(!(!this.userId||this.isBusy())){r.next=2;break}throw Error(\"Video manager is busy.\");case 2:return p&&console.log(\"[VideoConf] Starting new call on room \"+e),this.startingNewCall=!0,this.emit(\"calling/changed\"),r.next=7,n.awrap(f.rest.post(\"/v1/video-conference.start\",{roomId:e,title:i,allowRinging:!0}).catch(function(i){var t,n;return p&&console.error(\"[VideoConf] Failed to start new call on room \"+e),l.startingNewCall=!1,l.emit(\"calling/changed\"),l.emit(\"start/error\",{error:(null==i?void 0:null===(t=i.xhr)||void 0===t?void 0:null===(n=t.responseJSON)||void 0===n?void 0:n.error)||\"unknown-error\"}),Promise.reject(i)}));case 7:t=r.sent.data,this.startingNewCall=!1,this.emit(\"calling/changed\"),\"direct\"!==t.type&&this.emit(\"calling/ended\"),r.t0=t.type,r.next=\"direct\"===r.t0?15:\"videoconference\"===r.t0?16:\"livechat\"===r.t0?17:18;break;case 15:return r.abrupt(\"return\",this.callUser({uid:t.calleeId,rid:e,callId:t.callId}));case 16:case 17:return r.abrupt(\"return\",this.joinCall(t.callId));case 18:case\"end\":return r.stop()}},null,this,null,Promise)},t.acceptIncomingCall=function(e){var i=this,t=this.incomingDirectCalls.get(e);if(!t)throw Error(\"Unable to find accepted call information.\");if(t.acceptTimeout){p&&console.log(\"[VideoConf] We're already trying to accept call \"+e+\".\");return}p&&console.log(\"[VideoConf] Accepting incoming call \"+e+\".\"),t.timeout&&(clearTimeout(t.timeout),this.setIncomingCallAttribute(e,\"timeout\",void 0)),this.dismissIncomingCall(e),this.setIncomingCallAttribute(e,\"acceptTimeout\",setTimeout(function(){var n=i.incomingDirectCalls.get(e);null!=n&&n.acceptTimeout&&(p&&console.log(\"[VideoConf] Attempt to accept call has timed out.\"),i.removeIncomingCall(e),i.emit(\"direct/failed\",{callId:e,uid:t.uid,rid:t.rid}))},5e3)),this.emit(\"incoming/changed\"),p&&console.log(\"[VideoConf] Notifying user \"+t.uid+\" that we accept their call.\"),this.userId&&this.notifyUser(t.uid,\"accepted\",{callId:e,uid:this.userId,rid:t.rid})},t.rejectIncomingCall=function(e){this.dismissIncomingCall(e);var i=this.incomingDirectCalls.get(e);i&&(this.userId&&this.notifyUser(i.uid,\"rejected\",{callId:e,uid:this.userId,rid:i.rid}),this.loseIncomingCall(e))},t.dismissedIncomingCalls=function(){var e=this;s(this.incomingDirectCalls.keys()).some(function(i){return e.dismissedIncomingCallHelper(i)})&&(this.emit(\"ringing/changed\"),this.emit(\"incoming/changed\"))},t.loadCapabilities=function(){var e;return n.async(function(i){for(;;)switch(i.prev=i.next){case 0:return i.next=2,n.awrap(f.rest.get(\"/v1/video-conference.capabilities\").catch(function(e){return p&&console.error(\"[VideoConf] Failed to load video conference capabilities\"),Promise.reject(e)}));case 2:e=i.sent.capabilities,this._capabilities=e||{},this.emit(\"capabilities/changed\");case 6:case\"end\":return i.stop()}},null,this,null,Promise)},t.setIncomingCallAttribute=function(e,i,t){var n=this.incomingDirectCalls.get(e);if(!n){p&&console.error('[VideoConf] Cannot change attribute \"'+i+'\" of unknown call \"'+e+'\".');return}var l=c({},n);void 0===t?delete l[i]:l[i]=t,p&&console.log('[VideoConf] Updating attribute \"'+i+'\" of call \"'+e+'\".'),this.incomingDirectCalls.set(e,l)},t.dismissedIncomingCallHelper=function(e){var i=this;return!this.isCallDismissed(e)&&(p&&console.log(\"[VideoConf] Dismissing call \"+e),this.dismissedCalls.add(e),setTimeout(function(){return i.dismissedCalls.delete(e)},2e5),this.incomingDirectCalls.has(e))},t.dismissIncomingCall=function(e){return!!this.dismissedIncomingCallHelper(e)&&(this.emit(\"ringing/changed\"),this.emit(\"incoming/changed\"),!0)},t.updateUser=function(){var e=g.userId();if(this.userId===e){p&&console.log(\"[VideoConf] Logged user has not changed, so we're not changing the hooks.\");return}p&&console.log(\"[VideoConf] Logged user has changed.\"),this.userId&&this.disconnect(),e&&this.connectUser(e)},t.changePreference=function(e,i){this._preferences[e]=i,this.emit(\"preference/changed\",{key:e,value:i})},t.setPreferences=function(e){for(var i in meteorBabelHelpers.sanitizeForInObject(e))e.hasOwnProperty(i)&&this.changePreference(i,e[i])},t.joinCall=function(e){var i,t,l,r,o,a=this;return n.async(function(s){for(;;)switch(s.prev=s.next){case 0:return p&&console.log(\"[VideoConf] Joining call \"+e+\".\"),this.incomingDirectCalls.has(e)&&(null!=(i=this.incomingDirectCalls.get(e))&&i.acceptTimeout&&(p&&console.log(\"[VideoConf] Clearing acceptance timeout\"),clearTimeout(i.acceptTimeout)),this.removeIncomingCall(e)),t={callId:e,state:c(c({},void 0!==this._preferences.mic?{mic:this._preferences.mic}:{}),void 0!==this._preferences.cam?{cam:this._preferences.cam}:{})},s.next=5,n.awrap(f.rest.post(\"/v1/video-conference.join\",t).catch(function(i){var t,n;return p&&console.error(\"[VideoConf] Failed to join call \"+e),a.emit(\"join/error\",{error:(null==i?void 0:null===(t=i.xhr)||void 0===t?void 0:null===(n=t.responseJSON)||void 0===n?void 0:n.error)||\"unknown-error\"}),Promise.reject(i)}));case 5:if(r=(l=s.sent).url,o=l.providerName,r){s.next=10;break}throw Error(\"Failed to get video conference URL.\");case 10:p&&console.log(\"[VideoConf] Opening \"+r+\".\"),this.emit(\"call/join\",{url:r,callId:e,providerName:o});case 12:case\"end\":return s.stop()}},null,this,null,Promise)},t.abortCall=function(){this.currentCallData&&this.giveUp(this.currentCallData)},t.rejectIncomingCallsFromUser=function(e){for(var i,t=r(this.incomingDirectCalls);!(i=t()).done;){var n=i.value,l=o(n,2)[1],c=l.callId;e===l.uid&&(p&&console.log(\"[VideoConf] Rejecting old incoming call from user \"+e),this.rejectIncomingCall(c))}},t.callUser=function(e){var i,t,l,r,o=this;return n.async(function(n){for(;;)switch(n.prev=n.next){case 0:if(i=e.uid,t=e.rid,l=e.callId,!(this.currentCallHandler||this.currentCallData)){n.next=3;break}throw Error(\"Video Conference State Error.\");case 3:r=1,this.currentCallData={callId:l,rid:t,uid:i},this.currentCallHandler=setInterval(function(){if(!o.currentCallHandler){p&&console.warn(\"[VideoConf] Ringing interval was not properly cleared.\");return}if(++r>10){o.giveUp({uid:i,rid:t,callId:l});return}p&&console.log(\"[VideoConf] Ringing user \"+i+\", attempt number \"+r+\".\"),o.userId&&o.notifyUser(i,\"call\",{uid:o.userId,rid:t,callId:l})},3e3),this.emit(\"calling/changed\"),p&&console.log(\"[VideoConf] Ringing user \"+i+\" for the first time.\"),this.userId&&this.notifyUser(i,\"call\",{uid:this.userId,rid:t,callId:l});case 9:case\"end\":return n.stop()}},null,this,null,Promise)},t.giveUp=function(e){var i,t,l,r,o;return n.async(function(n){for(;;)switch(n.prev=n.next){case 0:if(t=e.uid,l=e.rid,r=e.callId,o=null===(i=this.currentCallData)||void 0===i?void 0:i.joined,p&&console.log(\"[VideoConf] Stop ringing user \"+t+\".\"),this.currentCallHandler&&(clearInterval(this.currentCallHandler),this.currentCallHandler=void 0,this.currentCallData=void 0,this.emit(\"calling/changed\")),p&&console.log(\"[VideoConf] Notifying user \"+t+\" that we are no longer calling.\"),this.userId&&this.notifyUser(t,\"canceled\",{uid:this.userId,rid:l,callId:r}),this.emit(\"direct/cancel\",{uid:t,rid:l,callId:r}),this.emit(\"direct/stopped\",{uid:t,rid:l,callId:r}),!o){n.next=10;break}return n.abrupt(\"return\");case 10:f.rest.post(\"/v1/video-conference.cancel\",{callId:r});case 11:case\"end\":return n.stop()}},null,this,null,Promise)},t.disconnect=function(){p&&console.log(\"[VideoConf] disconnecting user \"+this.userId);for(var e,i=r(this.hooks);!(e=i()).done;)(0,e.value)();this.hooks=[],this.currentCallHandler&&(clearInterval(this.currentCallHandler),this.currentCallHandler=void 0),this.incomingDirectCalls.forEach(function(e){e.timeout&&clearTimeout(e.timeout),e.acceptTimeout&&clearTimeout(e.acceptTimeout)}),this.incomingDirectCalls.clear(),this.dismissedCalls.clear(),this.currentCallData=void 0,this._preferences={},this.emit(\"incoming/changed\"),this.emit(\"ringing/changed\"),this.emit(\"calling/changed\")},t.onVideoConfNotification=function(e){var i,t;return n.async(function(n){for(;;)switch(n.prev=n.next){case 0:if(i=e.action,t=e.params,!(!i||\"string\"!=typeof i)){n.next=4;break}return p&&console.error(\"[VideoConf] Invalid action received.\"),n.abrupt(\"return\");case 4:if(!(!t||\"object\"!==l(t)||!t.callId||!t.uid||!t.rid)){n.next=7;break}return p&&console.error(\"[VideoConf] Invalid params received.\"),n.abrupt(\"return\");case 7:n.t0=i,n.next=\"call\"===n.t0?10:\"canceled\"===n.t0?11:\"accepted\"===n.t0?12:\"rejected\"===n.t0?13:\"confirmed\"===n.t0?14:\"join\"===n.t0?15:\"end\"===n.t0?16:17;break;case 10:return n.abrupt(\"return\",this.onDirectCall(t));case 11:return n.abrupt(\"return\",this.onDirectCallCanceled(t));case 12:return n.abrupt(\"return\",this.onDirectCallAccepted(t));case 13:return n.abrupt(\"return\",this.onDirectCallRejected(t));case 14:return n.abrupt(\"return\",this.onDirectCallConfirmed(t));case 15:return n.abrupt(\"return\",this.onDirectCallJoined(t));case 16:return n.abrupt(\"return\",this.onDirectCallEnded(t));case 17:case\"end\":return n.stop()}},null,this,null,Promise)},t.notifyUser=function(e,i,t){return n.async(function(n){for(;;)switch(n.prev=n.next){case 0:return n.abrupt(\"return\",f.publish(\"notify-user\",[e+\"/video-conference\",{action:i,params:t}]));case 1:case\"end\":return n.stop()}},null,null,null,Promise)},t.connectUser=function(e){var i,t,l,r=this;return n.async(function(o){for(;;)switch(o.prev=o.next){case 0:return p&&console.log(\"[VideoConf] connecting user \"+e),this.userId=e,t=(i=f.stream(\"notify-user\",[e+\"/video-conference\"],function(e){return r.onVideoConfNotification(e)})).stop,l=i.ready,o.next=5,n.awrap(l());case 5:this.hooks.push(t);case 6:case\"end\":return o.stop()}},null,this,null,Promise)},t.abortIncomingCall=function(e){var i;null!==(i=this.incomingDirectCalls.get(e))&&void 0!==i&&i.acceptTimeout||(p&&console.log(\"[VideoConf] Canceling call \"+e+\" due to ringing timeout.\"),this.loseIncomingCall(e))},t.loseIncomingCall=function(e){var i=this.incomingDirectCalls.get(e);if(!i){p&&console.warn(\"[VideoConf] Unable to cancel \"+e+\" because we have no information about it.\");return}this.removeIncomingCall(e),p&&console.log(\"[VideoConf] Call \"+e+\" from \"+i.uid+\" was lost.\"),this.emit(\"direct/lost\",{callId:e,uid:i.uid,rid:i.rid})},t.removeIncomingCall=function(e){if(p&&console.log('[VideoConf] Removing call with id \"'+e+'\" from Incoming Calls list.'),this.incomingDirectCalls.has(e)){var i=this.isRinging(),t=this.incomingDirectCalls.get(e);null!=t&&t.timeout&&clearTimeout(t.timeout),this.incomingDirectCalls.delete(e),this.emit(\"incoming/changed\"),i!==this.isRinging()&&this.emit(\"ringing/changed\")}},t.createAbortTimeout=function(e){var i=this;return setTimeout(function(){return i.abortIncomingCall(e)},1e4)},t.startNewIncomingCall=function(e){var i=e.callId,t=e.uid,n=e.rid;if(this.isCallDismissed(i)){p&&console.log(\"[VideoConf] Ignoring dismissed call.\");return}this.rejectIncomingCallsFromUser(t),p&&console.log(\"[VideoConf] Storing this new call information.\"),this.incomingDirectCalls.set(i,{callId:i,uid:t,rid:n,timeout:this.createAbortTimeout(i)}),this.emit(\"incoming/changed\"),this.emit(\"ringing/changed\"),this.emit(\"direct/ringing\",{callId:i,uid:t,rid:n})},t.refreshExistingIncomingCall=function(e){var i=e.callId,t=e.uid,n=e.rid,l=this.incomingDirectCalls.get(i);if(!l)throw Error(\"Video Conference Manager State Error\");p&&console.log(\"[VideoConf] Resetting call timeout.\"),l.timeout&&clearTimeout(l.timeout),l.timeout=this.createAbortTimeout(i),this.isCallDismissed(i)||this.emit(\"direct/ringing\",{callId:i,uid:t,rid:n})},t.onDirectCall=function(e){var i,t=e.callId,n=e.uid,l=e.rid;null!==(i=this.incomingDirectCalls.get(t))&&void 0!==i&&i.acceptTimeout||(p&&console.log(\"[VideoConf] User \"+n+\" is ringing with call \"+t+\".\"),this.incomingDirectCalls.has(t)?this.refreshExistingIncomingCall({callId:t,uid:n,rid:l}):this.startNewIncomingCall({callId:t,uid:n,rid:l}))},t.onDirectCallCanceled=function(e){var i=e.callId;p&&console.log(\"[VideoConf] Call \"+i+\" was canceled by the remote user.\");var t=this.incomingDirectCalls.get(i);null!=t&&t.acceptTimeout&&(clearTimeout(t.acceptTimeout),this.setIncomingCallAttribute(i,\"acceptTimeout\",void 0)),this.loseIncomingCall(i)},t.onDirectCallAccepted=function(e){var i,t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!e.callId||e.callId!==(null===(i=this.currentCallData)||void 0===i?void 0:i.callId)){p&&console.log(\"[VideoConf] User \"+e.uid+\" has accepted a call \"+e.callId+\" from us, but we're not calling.\");return}p&&console.log(\"[VideoConf] User \"+e.uid+\" has accepted our call \"+e.callId+\".\"),this.currentCallHandler&&(clearInterval(this.currentCallHandler),this.currentCallHandler=void 0);var n=this.currentCallData;this.emit(\"direct/accepted\",e),this.emit(\"direct/stopped\",e),this.currentCallData=void 0,this.emit(\"calling/changed\"),n.joined||this.joinCall(e.callId),!t&&(p&&console.log(\"[VideoConf] Notifying user \"+n.uid+\" that they can join the call now.\"),this.userId&&this.notifyUser(n.uid,\"confirmed\",{callId:n.callId,uid:this.userId,rid:n.rid}))},t.onDirectCallConfirmed=function(e){var i;if(!e.callId||!(null!==(i=this.incomingDirectCalls.get(e.callId))&&void 0!==i&&i.acceptTimeout)){p&&console.log(\"[VideoConf] User \"+e.uid+\" confirmed we can join \"+e.callId+\" but we aren't trying to join it.\");return}this.joinCall(e.callId)},t.onDirectCallJoined=function(e){if(!e.callId){p&&console.log(\"[VideoConf] Invalid 'video-conference.join' event received: \"+e.callId+\", \"+e.uid+\".\");return}if(e.uid===this.userId){var i;if((null===(i=this.currentCallData)||void 0===i?void 0:i.callId)===e.callId){p&&console.log(\"[VideoConf] We joined our own call (\"+this.userId+\") from somewhere else. Flagging the call appropriatelly.\"),this.currentCallData.joined=!0,this.emit(\"calling/changed\");return}this.incomingDirectCalls.has(e.callId)&&(p&&console.log(\"[VideoConf] We joined the call \"+e.callId+\" from somewhere else. Dismissing it.\"),this.dismissIncomingCall(e.callId),this.loseIncomingCall(e.callId));return}p&&console.log(\"[VideoConf] User \"+e.uid+\" has joined a call we started \"+e.callId+\".\"),this.onDirectCallAccepted(e,!0)},t.onDirectCallEnded=function(e){if(!e.callId){p&&console.log(\"[VideoConf] Invalid 'video-conference.end' event received: \"+e.callId+\", \"+e.uid+\".\");return}var i,t=this.incomingDirectCalls.get(e.callId);if(t){p&&console.log(\"[VideoConf] Incoming call ended by the server: \"+e.callId+\".\"),t.acceptTimeout&&(clearTimeout(t.acceptTimeout),this.setIncomingCallAttribute(e.callId,\"acceptTimeout\",void 0)),this.loseIncomingCall(e.callId);return}if((null===(i=this.currentCallData)||void 0===i?void 0:i.callId)!==e.callId){p&&console.log(\"[VideoConf] Server sent a call ended event for a call we're not aware of: \"+e.callId+\".\");return}p&&console.log(\"[VideoConf] Outgoing call ended by the server: \"+e.callId+\".\"),this.currentCallData=void 0,this.currentCallHandler&&(clearInterval(this.currentCallHandler),this.currentCallHandler=void 0,this.emit(\"calling/changed\"),this.emit(\"direct/stopped\",e))},t.onDirectCallRejected=function(e){if(!e.callId||e.callId!==(null===(i=this.currentCallData)||void 0===i?void 0:i.callId)){p&&console.log(\"[VideoConf] User \"+e.uid+\" has rejected a call \"+e.callId+\" from us, but we're not calling.\");return}p&&console.log(\"[VideoConf] User \"+e.uid+\" has rejected our call \"+e.callId+\".\"),this.currentCallHandler&&(clearInterval(this.currentCallHandler),this.currentCallHandler=void 0);var i,t=this.currentCallData.joined;this.emit(\"direct/cancel\",e),this.currentCallData=void 0,this.emit(\"direct/stopped\",e),this.emit(\"calling/changed\"),t||f.rest.post(\"/v1/video-conference.cancel\",{callId:e.callId})},t.isCallDismissed=function(e){return this.dismissedCalls.has(e)},d(i,[{key:\"preferences\",get:function(){return this._preferences}},{key:\"capabilities\",get:function(){return this._capabilities}}])}(h));g.startup(function(){return m.autorun(function(){return I.updateUser()})})}","map":"{\"version\":3,\"sources\":[\"client/lib/VideoConfManager.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, IUser } from '@rocket.chat/core-typings';\\nimport { Emitter } from '@rocket.chat/emitter';\\nimport { Meteor } from 'meteor/meteor';\\nimport { Tracker } from 'meteor/tracker';\\n\\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\\nimport { getConfig } from './utils/getConfig';\\n\\nconst debug = !!(getConfig('debug') || getConfig('debug-VideoConf'));\\n\\n// The interval between attempts to call the remote user\\nconst CALL_INTERVAL = 3000;\\n// How many attempts to call we're gonna make\\nconst CALL_ATTEMPT_LIMIT = 10;\\n// The amount of time we'll assume an incoming call is still valid without any updates from the remote user\\nconst CALL_TIMEOUT = 10000;\\n// How long are we gonna wait for a link after accepting an incoming call\\nconst ACCEPT_TIMEOUT = 5000;\\n\\ntype DirectCallParams = {\\n\\tuid: IUser['_id'];\\n\\trid: IRoom['_id'];\\n\\tcallId: string;\\n};\\n\\nexport type DirectCallData = DirectCallParams & {\\n\\tdismissed: boolean;\\n};\\n\\ntype IncomingDirectCall = DirectCallParams & {\\n\\ttimeout: ReturnType<typeof setTimeout> | undefined;\\n\\tacceptTimeout?: ReturnType<typeof setTimeout> | undefined;\\n};\\n\\nexport type CallPreferences = {\\n\\tmic?: boolean;\\n\\tcam?: boolean;\\n};\\n\\nexport type ProviderCapabilities = {\\n\\tmic?: boolean;\\n\\tcam?: boolean;\\n\\ttitle?: boolean;\\n};\\n\\ntype CurrentCallParams = {\\n\\tcallId: string;\\n\\turl: string;\\n\\tproviderName?: string;\\n};\\n\\ntype VideoConfEvents = {\\n\\t// We gave up on calling a remote user or they rejected our call\\n\\t'direct/cancel': DirectCallParams;\\n\\n\\t// A remote user is calling us\\n\\t'direct/ringing': DirectCallParams;\\n\\n\\t// An incoming call was lost, either by timeout or because the remote user canceled\\n\\t'direct/lost': DirectCallParams;\\n\\n\\t// We tried to accept an incoming call but the process failed\\n\\t'direct/failed': DirectCallParams;\\n\\n\\t// A remote user accepted our call\\n\\t'direct/accepted': DirectCallParams;\\n\\n\\t// We stopped calling a remote user\\n\\t'direct/stopped': DirectCallParams;\\n\\n\\t'preference/changed': { key: keyof CallPreferences; value: boolean };\\n\\n\\t// The list of incoming calls has changed in some way\\n\\t'incoming/changed': void;\\n\\n\\t// The list of ringing incoming calls may have changed\\n\\t'ringing/changed': void;\\n\\n\\t// The value of `isCalling` may have changed\\n\\t'calling/changed': void;\\n\\n\\t'calling/ended': void;\\n\\n\\t// When join call\\n\\t'call/join': CurrentCallParams;\\n\\n\\t'join/error': { error: string };\\n\\n\\t'start/error': { error: string };\\n\\n\\t'capabilities/changed': void;\\n};\\n\\nexport const VideoConfManager = new (class VideoConfManager extends Emitter<VideoConfEvents> {\\n\\tprivate userId: string | undefined;\\n\\n\\tprivate currentCallHandler: ReturnType<typeof setTimeout> | undefined;\\n\\n\\tprivate currentCallData: (DirectCallParams & { joined?: boolean }) | undefined;\\n\\n\\tprivate startingNewCall = false;\\n\\n\\tprivate hooks: (() => void)[] = [];\\n\\n\\tprivate incomingDirectCalls: Map<string, IncomingDirectCall>;\\n\\n\\tprivate dismissedCalls: Set<string>;\\n\\n\\tprivate _preferences: CallPreferences;\\n\\n\\tprivate _capabilities: ProviderCapabilities;\\n\\n\\tpublic get preferences(): CallPreferences {\\n\\t\\treturn this._preferences;\\n\\t}\\n\\n\\tpublic get capabilities(): ProviderCapabilities {\\n\\t\\treturn this._capabilities;\\n\\t}\\n\\n\\tconstructor() {\\n\\t\\tsuper();\\n\\t\\tthis.incomingDirectCalls = new Map<string, IncomingDirectCall>();\\n\\t\\tthis.dismissedCalls = new Set<string>();\\n\\t\\tthis._preferences = { mic: true, cam: false };\\n\\t\\tthis._capabilities = {};\\n\\t}\\n\\n\\tpublic isBusy(): boolean {\\n\\t\\tif (this.startingNewCall) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn this.isCalling();\\n\\t}\\n\\n\\tpublic isRinging(): boolean {\\n\\t\\treturn [...this.incomingDirectCalls.values()].some(({ callId }) => !this.isCallDismissed(callId));\\n\\t}\\n\\n\\tpublic isCalling(): boolean {\\n\\t\\tif (this.currentCallHandler || (this.currentCallData && !this.currentCallData.joined)) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\tpublic getIncomingDirectCalls(): DirectCallData[] {\\n\\t\\treturn (\\n\\t\\t\\t[...this.incomingDirectCalls.values()]\\n\\t\\t\\t\\t// Filter out any calls that we're in the process of accepting, so they're already hidden from the UI\\n\\t\\t\\t\\t.filter((call) => !call.acceptTimeout)\\n\\t\\t\\t\\t.map(({ timeout: _, acceptTimeout: _t, ...call }) => ({ ...call, dismissed: this.isCallDismissed(call.callId) }))\\n\\t\\t);\\n\\t}\\n\\n\\tpublic async startCall(roomId: IRoom['_id'], title?: string): Promise<void> {\\n\\t\\tif (!this.userId || this.isBusy()) {\\n\\t\\t\\tthrow new Error('Video manager is busy.');\\n\\t\\t}\\n\\n\\t\\tdebug && console.log(`[VideoConf] Starting new call on room ${roomId}`);\\n\\t\\tthis.startingNewCall = true;\\n\\t\\tthis.emit('calling/changed');\\n\\n\\t\\tconst { data } = await sdk.rest.post('/v1/video-conference.start', { roomId, title, allowRinging: true }).catch((e: any) => {\\n\\t\\t\\tdebug && console.error(`[VideoConf] Failed to start new call on room ${roomId}`);\\n\\t\\t\\tthis.startingNewCall = false;\\n\\t\\t\\tthis.emit('calling/changed');\\n\\t\\t\\tthis.emit('start/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\\n\\n\\t\\t\\treturn Promise.reject(e);\\n\\t\\t});\\n\\n\\t\\tthis.startingNewCall = false;\\n\\t\\tthis.emit('calling/changed');\\n\\n\\t\\tif (data.type !== 'direct') {\\n\\t\\t\\tthis.emit('calling/ended');\\n\\t\\t}\\n\\n\\t\\tswitch (data.type) {\\n\\t\\t\\tcase 'direct':\\n\\t\\t\\t\\treturn this.callUser({ uid: data.calleeId, rid: roomId, callId: data.callId });\\n\\t\\t\\tcase 'videoconference':\\n\\t\\t\\t\\treturn this.joinCall(data.callId);\\n\\t\\t\\tcase 'livechat':\\n\\t\\t\\t\\treturn this.joinCall(data.callId);\\n\\t\\t}\\n\\t}\\n\\n\\tpublic acceptIncomingCall(callId: string): void {\\n\\t\\tconst callData = this.incomingDirectCalls.get(callId);\\n\\t\\tif (!callData) {\\n\\t\\t\\tthrow new Error('Unable to find accepted call information.');\\n\\t\\t}\\n\\t\\tif (callData.acceptTimeout) {\\n\\t\\t\\tdebug && console.log(`[VideoConf] We're already trying to accept call ${callId}.`);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tdebug && console.log(`[VideoConf] Accepting incoming call ${callId}.`);\\n\\n\\t\\tif (callData.timeout) {\\n\\t\\t\\tclearTimeout(callData.timeout);\\n\\t\\t\\tthis.setIncomingCallAttribute(callId, 'timeout', undefined);\\n\\t\\t}\\n\\n\\t\\t// Mute this call Id so any lingering notifications don't trigger it again\\n\\t\\tthis.dismissIncomingCall(callId);\\n\\n\\t\\tthis.setIncomingCallAttribute(\\n\\t\\t\\tcallId,\\n\\t\\t\\t'acceptTimeout',\\n\\t\\t\\tsetTimeout(() => {\\n\\t\\t\\t\\tconst updatedCallData = this.incomingDirectCalls.get(callId);\\n\\t\\t\\t\\tif (!updatedCallData?.acceptTimeout) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tdebug && console.log(`[VideoConf] Attempt to accept call has timed out.`);\\n\\t\\t\\t\\tthis.removeIncomingCall(callId);\\n\\n\\t\\t\\t\\tthis.emit('direct/failed', { callId, uid: callData.uid, rid: callData.rid });\\n\\t\\t\\t}, ACCEPT_TIMEOUT),\\n\\t\\t);\\n\\t\\tthis.emit('incoming/changed');\\n\\n\\t\\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that we accept their call.`);\\n\\t\\tthis.userId && this.notifyUser(callData.uid, 'accepted', { callId, uid: this.userId, rid: callData.rid });\\n\\t}\\n\\n\\tpublic rejectIncomingCall(callId: string): void {\\n\\t\\tthis.dismissIncomingCall(callId);\\n\\n\\t\\tconst callData = this.incomingDirectCalls.get(callId);\\n\\t\\tif (!callData) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.userId && this.notifyUser(callData.uid, 'rejected', { callId, uid: this.userId, rid: callData.rid });\\n\\t\\tthis.loseIncomingCall(callId);\\n\\t}\\n\\n\\tpublic dismissedIncomingCalls(): void {\\n\\t\\t// Mute all calls that are currently ringing\\n\\t\\tif ([...this.incomingDirectCalls.keys()].some((callId) => this.dismissedIncomingCallHelper(callId))) {\\n\\t\\t\\tthis.emit('ringing/changed');\\n\\t\\t\\tthis.emit('incoming/changed');\\n\\t\\t}\\n\\t}\\n\\n\\tpublic async loadCapabilities(): Promise<void> {\\n\\t\\tconst { capabilities } = await sdk.rest.get('/v1/video-conference.capabilities').catch((e: any) => {\\n\\t\\t\\tdebug && console.error(`[VideoConf] Failed to load video conference capabilities`);\\n\\n\\t\\t\\treturn Promise.reject(e);\\n\\t\\t});\\n\\n\\t\\tthis._capabilities = capabilities || {};\\n\\t\\tthis.emit('capabilities/changed');\\n\\t}\\n\\n\\tprivate setIncomingCallAttribute<T extends keyof IncomingDirectCall>(\\n\\t\\tcallId: string,\\n\\t\\tattributeName: T,\\n\\t\\tvalue: IncomingDirectCall[T] | undefined,\\n\\t): void {\\n\\t\\tconst callData = this.incomingDirectCalls.get(callId);\\n\\t\\tif (!callData) {\\n\\t\\t\\tdebug && console.error(`[VideoConf] Cannot change attribute \\\"${attributeName}\\\" of unknown call \\\"${callId}\\\".`);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst newData: IncomingDirectCall = {\\n\\t\\t\\t...callData,\\n\\t\\t};\\n\\n\\t\\tif (value === undefined) {\\n\\t\\t\\tdelete newData[attributeName];\\n\\t\\t} else {\\n\\t\\t\\tnewData[attributeName] = value;\\n\\t\\t}\\n\\n\\t\\tdebug && console.log(`[VideoConf] Updating attribute \\\"${attributeName}\\\" of call \\\"${callId}\\\".`);\\n\\t\\tthis.incomingDirectCalls.set(callId, newData);\\n\\t}\\n\\n\\tprivate dismissedIncomingCallHelper(callId: string): boolean {\\n\\t\\t// Muting will stop a callId from ringing, but it doesn't affect any part of the existing workflow\\n\\t\\tif (this.isCallDismissed(callId)) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tdebug && console.log(`[VideoConf] Dismissing call ${callId}`);\\n\\t\\tthis.dismissedCalls.add(callId);\\n\\t\\t// We don't need to hold on to the dismissed callIds forever because the server won't let anyone call us with it for very long\\n\\t\\tsetTimeout(() => this.dismissedCalls.delete(callId), CALL_TIMEOUT * 20);\\n\\t\\t// Only change the state if this call is actually in our list\\n\\t\\treturn this.incomingDirectCalls.has(callId);\\n\\t}\\n\\n\\tpublic dismissIncomingCall(callId: string): boolean {\\n\\t\\tif (this.dismissedIncomingCallHelper(callId)) {\\n\\t\\t\\tthis.emit('ringing/changed');\\n\\t\\t\\tthis.emit('incoming/changed');\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\n\\tpublic updateUser(): void {\\n\\t\\tconst userId = Meteor.userId();\\n\\n\\t\\tif (this.userId === userId) {\\n\\t\\t\\tdebug && console.log(`[VideoConf] Logged user has not changed, so we're not changing the hooks.`);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tdebug && console.log(`[VideoConf] Logged user has changed.`);\\n\\n\\t\\tif (this.userId) {\\n\\t\\t\\tthis.disconnect();\\n\\t\\t}\\n\\n\\t\\tif (userId) {\\n\\t\\t\\tthis.connectUser(userId);\\n\\t\\t}\\n\\t}\\n\\n\\tpublic changePreference(key: keyof CallPreferences, value: boolean): void {\\n\\t\\tthis._preferences[key] = value;\\n\\t\\tthis.emit('preference/changed', { key, value });\\n\\t}\\n\\n\\tpublic setPreferences(prefs: Partial<CallPreferences>): void {\\n\\t\\tfor (const key in prefs) {\\n\\t\\t\\tif (prefs.hasOwnProperty(key)) {\\n\\t\\t\\t\\tconst prefKey = key as keyof CallPreferences;\\n\\t\\t\\t\\tthis.changePreference(prefKey, prefs[prefKey] as boolean);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tpublic async joinCall(callId: string): Promise<void> {\\n\\t\\tdebug && console.log(`[VideoConf] Joining call ${callId}.`);\\n\\n\\t\\tif (this.incomingDirectCalls.has(callId)) {\\n\\t\\t\\tconst data = this.incomingDirectCalls.get(callId);\\n\\t\\t\\tif (data?.acceptTimeout) {\\n\\t\\t\\t\\tdebug && console.log('[VideoConf] Clearing acceptance timeout');\\n\\t\\t\\t\\tclearTimeout(data.acceptTimeout);\\n\\t\\t\\t}\\n\\t\\t\\tthis.removeIncomingCall(callId);\\n\\t\\t}\\n\\n\\t\\tconst params = {\\n\\t\\t\\tcallId,\\n\\t\\t\\tstate: {\\n\\t\\t\\t\\t...(this._preferences.mic !== undefined ? { mic: this._preferences.mic } : {}),\\n\\t\\t\\t\\t...(this._preferences.cam !== undefined ? { cam: this._preferences.cam } : {}),\\n\\t\\t\\t},\\n\\t\\t};\\n\\n\\t\\tconst { url, providerName } = await sdk.rest.post('/v1/video-conference.join', params).catch((e) => {\\n\\t\\t\\tdebug && console.error(`[VideoConf] Failed to join call ${callId}`);\\n\\t\\t\\tthis.emit('join/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\\n\\n\\t\\t\\treturn Promise.reject(e);\\n\\t\\t});\\n\\n\\t\\tif (!url) {\\n\\t\\t\\tthrow new Error('Failed to get video conference URL.');\\n\\t\\t}\\n\\n\\t\\tdebug && console.log(`[VideoConf] Opening ${url}.`);\\n\\t\\tthis.emit('call/join', { url, callId, providerName });\\n\\t}\\n\\n\\tpublic abortCall(): void {\\n\\t\\tif (!this.currentCallData) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.giveUp(this.currentCallData);\\n\\t}\\n\\n\\tprivate rejectIncomingCallsFromUser(userId: string): void {\\n\\t\\tfor (const [, { callId, uid }] of this.incomingDirectCalls) {\\n\\t\\t\\tif (userId === uid) {\\n\\t\\t\\t\\tdebug && console.log(`[VideoConf] Rejecting old incoming call from user ${userId}`);\\n\\t\\t\\t\\tthis.rejectIncomingCall(callId);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tprivate async callUser({ uid, rid, callId }: DirectCallParams): Promise<void> {\\n\\t\\tif (this.currentCallHandler || this.currentCallData) {\\n\\t\\t\\tthrow new Error('Video Conference State Error.');\\n\\t\\t}\\n\\n\\t\\tlet attempt = 1;\\n\\t\\tthis.currentCallData = { callId, rid, uid };\\n\\t\\tthis.currentCallHandler = setInterval(() => {\\n\\t\\t\\tif (!this.currentCallHandler) {\\n\\t\\t\\t\\tdebug && console.warn(`[VideoConf] Ringing interval was not properly cleared.`);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tattempt++;\\n\\n\\t\\t\\tif (attempt > CALL_ATTEMPT_LIMIT) {\\n\\t\\t\\t\\tthis.giveUp({ uid, rid, callId });\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tdebug && console.log(`[VideoConf] Ringing user ${uid}, attempt number ${attempt}.`);\\n\\t\\t\\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\\n\\t\\t}, CALL_INTERVAL);\\n\\t\\tthis.emit('calling/changed');\\n\\n\\t\\tdebug && console.log(`[VideoConf] Ringing user ${uid} for the first time.`);\\n\\t\\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\\n\\t}\\n\\n\\tprivate async giveUp({ uid, rid, callId }: DirectCallParams): Promise<void> {\\n\\t\\tconst joined = this.currentCallData?.joined;\\n\\n\\t\\tdebug && console.log(`[VideoConf] Stop ringing user ${uid}.`);\\n\\t\\tif (this.currentCallHandler) {\\n\\t\\t\\tclearInterval(this.currentCallHandler);\\n\\t\\t\\tthis.currentCallHandler = undefined;\\n\\t\\t\\tthis.currentCallData = undefined;\\n\\t\\t\\tthis.emit('calling/changed');\\n\\t\\t}\\n\\n\\t\\tdebug && console.log(`[VideoConf] Notifying user ${uid} that we are no longer calling.`);\\n\\t\\tthis.userId && this.notifyUser(uid, 'canceled', { uid: this.userId, rid, callId });\\n\\n\\t\\tthis.emit('direct/cancel', { uid, rid, callId });\\n\\t\\tthis.emit('direct/stopped', { uid, rid, callId });\\n\\n\\t\\tif (joined) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tsdk.rest.post('/v1/video-conference.cancel', { callId });\\n\\t}\\n\\n\\tprivate disconnect(): void {\\n\\t\\tdebug && console.log(`[VideoConf] disconnecting user ${this.userId}`);\\n\\t\\tfor (const hook of this.hooks) {\\n\\t\\t\\thook();\\n\\t\\t}\\n\\t\\tthis.hooks = [];\\n\\n\\t\\tif (this.currentCallHandler) {\\n\\t\\t\\tclearInterval(this.currentCallHandler);\\n\\t\\t\\tthis.currentCallHandler = undefined;\\n\\t\\t}\\n\\n\\t\\tthis.incomingDirectCalls.forEach((call) => {\\n\\t\\t\\tif (call.timeout) {\\n\\t\\t\\t\\tclearTimeout(call.timeout);\\n\\t\\t\\t}\\n\\t\\t\\tif (call.acceptTimeout) {\\n\\t\\t\\t\\tclearTimeout(call.acceptTimeout);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\tthis.incomingDirectCalls.clear();\\n\\t\\tthis.dismissedCalls.clear();\\n\\t\\tthis.currentCallData = undefined;\\n\\t\\tthis._preferences = {};\\n\\t\\tthis.emit('incoming/changed');\\n\\t\\tthis.emit('ringing/changed');\\n\\t\\tthis.emit('calling/changed');\\n\\t}\\n\\n\\tprivate async onVideoConfNotification({ action, params }: { action: string; params: DirectCallParams }): Promise<void> {\\n\\t\\tif (!action || typeof action !== 'string') {\\n\\t\\t\\tdebug && console.error('[VideoConf] Invalid action received.');\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tif (!params || typeof params !== 'object' || !params.callId || !params.uid || !params.rid) {\\n\\t\\t\\tdebug && console.error('[VideoConf] Invalid params received.');\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tswitch (action) {\\n\\t\\t\\tcase 'call':\\n\\t\\t\\t\\treturn this.onDirectCall(params);\\n\\t\\t\\tcase 'canceled':\\n\\t\\t\\t\\treturn this.onDirectCallCanceled(params);\\n\\t\\t\\tcase 'accepted':\\n\\t\\t\\t\\treturn this.onDirectCallAccepted(params);\\n\\t\\t\\tcase 'rejected':\\n\\t\\t\\t\\treturn this.onDirectCallRejected(params);\\n\\t\\t\\tcase 'confirmed':\\n\\t\\t\\t\\treturn this.onDirectCallConfirmed(params);\\n\\t\\t\\tcase 'join':\\n\\t\\t\\t\\treturn this.onDirectCallJoined(params);\\n\\t\\t\\tcase 'end':\\n\\t\\t\\t\\treturn this.onDirectCallEnded(params);\\n\\t\\t}\\n\\t}\\n\\n\\tprivate async notifyUser(uid: IUser['_id'], action: string, params: DirectCallParams): Promise<void> {\\n\\t\\treturn sdk.publish('notify-user', [`${uid}/video-conference`, { action, params }]);\\n\\t}\\n\\n\\tprivate async connectUser(userId: string): Promise<void> {\\n\\t\\tdebug && console.log(`[VideoConf] connecting user ${userId}`);\\n\\t\\tthis.userId = userId;\\n\\n\\t\\tconst { stop, ready } = sdk.stream('notify-user', [`${userId}/video-conference`], (data) => this.onVideoConfNotification(data));\\n\\n\\t\\tawait ready();\\n\\n\\t\\tthis.hooks.push(stop);\\n\\t}\\n\\n\\tprivate abortIncomingCall(callId: string): void {\\n\\t\\t// If we just accepted this call, then ignore the timeout\\n\\t\\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tdebug && console.log(`[VideoConf] Canceling call ${callId} due to ringing timeout.`);\\n\\t\\tthis.loseIncomingCall(callId);\\n\\t}\\n\\n\\tprivate loseIncomingCall(callId: string): void {\\n\\t\\tconst lostCall = this.incomingDirectCalls.get(callId);\\n\\t\\tif (!lostCall) {\\n\\t\\t\\tdebug && console.warn(`[VideoConf] Unable to cancel ${callId} because we have no information about it.`);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.removeIncomingCall(callId);\\n\\n\\t\\tdebug && console.log(`[VideoConf] Call ${callId} from ${lostCall.uid} was lost.`);\\n\\t\\tthis.emit('direct/lost', { callId, uid: lostCall.uid, rid: lostCall.rid });\\n\\t}\\n\\n\\tprivate removeIncomingCall(callId: string): void {\\n\\t\\tdebug && console.log(`[VideoConf] Removing call with id \\\"${callId}\\\" from Incoming Calls list.`);\\n\\t\\tif (!this.incomingDirectCalls.has(callId)) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst isRinging = this.isRinging();\\n\\n\\t\\tconst callData = this.incomingDirectCalls.get(callId);\\n\\t\\tif (callData?.timeout) {\\n\\t\\t\\tclearTimeout(callData.timeout);\\n\\t\\t}\\n\\n\\t\\tthis.incomingDirectCalls.delete(callId);\\n\\t\\tthis.emit('incoming/changed');\\n\\n\\t\\tif (isRinging !== this.isRinging()) {\\n\\t\\t\\tthis.emit('ringing/changed');\\n\\t\\t}\\n\\t}\\n\\n\\tprivate createAbortTimeout(callId: string): ReturnType<typeof setTimeout> {\\n\\t\\treturn setTimeout(() => this.abortIncomingCall(callId), CALL_TIMEOUT);\\n\\t}\\n\\n\\tprivate startNewIncomingCall({ callId, uid, rid }: DirectCallParams): void {\\n\\t\\tif (this.isCallDismissed(callId)) {\\n\\t\\t\\tdebug && console.log(`[VideoConf] Ignoring dismissed call.`);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Reject any currently ringing call from the user before registering the new one.\\n\\t\\tthis.rejectIncomingCallsFromUser(uid);\\n\\n\\t\\tdebug && console.log(`[VideoConf] Storing this new call information.`);\\n\\t\\tthis.incomingDirectCalls.set(callId, {\\n\\t\\t\\tcallId,\\n\\t\\t\\tuid,\\n\\t\\t\\trid,\\n\\t\\t\\ttimeout: this.createAbortTimeout(callId),\\n\\t\\t});\\n\\n\\t\\tthis.emit('incoming/changed');\\n\\t\\tthis.emit('ringing/changed');\\n\\t\\tthis.emit('direct/ringing', { callId, uid, rid });\\n\\t}\\n\\n\\tprivate refreshExistingIncomingCall({ callId, uid, rid }: DirectCallParams): void {\\n\\t\\tconst existingData = this.incomingDirectCalls.get(callId);\\n\\t\\tif (!existingData) {\\n\\t\\t\\tthrow new Error('Video Conference Manager State Error');\\n\\t\\t}\\n\\n\\t\\tdebug && console.log(`[VideoConf] Resetting call timeout.`);\\n\\t\\tif (existingData.timeout) {\\n\\t\\t\\tclearTimeout(existingData.timeout);\\n\\t\\t}\\n\\t\\texistingData.timeout = this.createAbortTimeout(callId);\\n\\n\\t\\tif (!this.isCallDismissed(callId)) {\\n\\t\\t\\tthis.emit('direct/ringing', { callId, uid, rid });\\n\\t\\t}\\n\\t}\\n\\n\\tprivate onDirectCall({ callId, uid, rid }: DirectCallParams): void {\\n\\t\\t// If we already accepted this call, then don't ring again\\n\\t\\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tdebug && console.log(`[VideoConf] User ${uid} is ringing with call ${callId}.`);\\n\\t\\tif (this.incomingDirectCalls.has(callId)) {\\n\\t\\t\\tthis.refreshExistingIncomingCall({ callId, uid, rid });\\n\\t\\t} else {\\n\\t\\t\\tthis.startNewIncomingCall({ callId, uid, rid });\\n\\t\\t}\\n\\t}\\n\\n\\tprivate onDirectCallCanceled({ callId }: DirectCallParams): void {\\n\\t\\tdebug && console.log(`[VideoConf] Call ${callId} was canceled by the remote user.`);\\n\\n\\t\\t// We had just accepted this call, but the remote user hang up before they got the notification, so cancel our acceptance\\n\\t\\tconst callData = this.incomingDirectCalls.get(callId);\\n\\t\\tif (callData?.acceptTimeout) {\\n\\t\\t\\tclearTimeout(callData.acceptTimeout);\\n\\t\\t\\tthis.setIncomingCallAttribute(callId, 'acceptTimeout', undefined);\\n\\t\\t}\\n\\n\\t\\tthis.loseIncomingCall(callId);\\n\\t}\\n\\n\\tprivate onDirectCallAccepted(params: DirectCallParams, skipConfirmation = false): void {\\n\\t\\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\\n\\t\\t\\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted a call ${params.callId} from us, but we're not calling.`);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted our call ${params.callId}.`);\\n\\n\\t\\t// Stop ringing\\n\\t\\tif (this.currentCallHandler) {\\n\\t\\t\\tclearInterval(this.currentCallHandler);\\n\\t\\t\\tthis.currentCallHandler = undefined;\\n\\t\\t}\\n\\n\\t\\tconst callData = this.currentCallData;\\n\\n\\t\\tthis.emit('direct/accepted', params);\\n\\t\\tthis.emit('direct/stopped', params);\\n\\t\\tthis.currentCallData = undefined;\\n\\t\\tthis.emit('calling/changed');\\n\\n\\t\\tif (!callData.joined) {\\n\\t\\t\\tthis.joinCall(params.callId);\\n\\t\\t}\\n\\n\\t\\tif (skipConfirmation) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that they can join the call now.`);\\n\\t\\tthis.userId && this.notifyUser(callData.uid, 'confirmed', { callId: callData.callId, uid: this.userId, rid: callData.rid });\\n\\t}\\n\\n\\tprivate onDirectCallConfirmed(params: DirectCallParams): void {\\n\\t\\tif (!params.callId || !this.incomingDirectCalls.get(params.callId)?.acceptTimeout) {\\n\\t\\t\\tdebug && console.log(`[VideoConf] User ${params.uid} confirmed we can join ${params.callId} but we aren't trying to join it.`);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.joinCall(params.callId);\\n\\t}\\n\\n\\tprivate onDirectCallJoined(params: DirectCallParams): void {\\n\\t\\tif (!params.callId) {\\n\\t\\t\\tdebug && console.log(`[VideoConf] Invalid 'video-conference.join' event received: ${params.callId}, ${params.uid}.`);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (params.uid === this.userId) {\\n\\t\\t\\tif (this.currentCallData?.callId === params.callId) {\\n\\t\\t\\t\\tdebug && console.log(`[VideoConf] We joined our own call (${this.userId}) from somewhere else. Flagging the call appropriatelly.`);\\n\\t\\t\\t\\tthis.currentCallData.joined = true;\\n\\t\\t\\t\\tthis.emit('calling/changed');\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (this.incomingDirectCalls.has(params.callId)) {\\n\\t\\t\\t\\tdebug && console.log(`[VideoConf] We joined the call ${params.callId} from somewhere else. Dismissing it.`);\\n\\t\\t\\t\\tthis.dismissIncomingCall(params.callId);\\n\\t\\t\\t\\tthis.loseIncomingCall(params.callId);\\n\\t\\t\\t}\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tdebug && console.log(`[VideoConf] User ${params.uid} has joined a call we started ${params.callId}.`);\\n\\t\\tthis.onDirectCallAccepted(params, true);\\n\\t}\\n\\n\\tprivate onDirectCallEnded(params: DirectCallParams): void {\\n\\t\\tif (!params.callId) {\\n\\t\\t\\tdebug && console.log(`[VideoConf] Invalid 'video-conference.end' event received: ${params.callId}, ${params.uid}.`);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst callData = this.incomingDirectCalls.get(params.callId);\\n\\t\\tif (callData) {\\n\\t\\t\\tdebug && console.log(`[VideoConf] Incoming call ended by the server: ${params.callId}.`);\\n\\t\\t\\tif (callData.acceptTimeout) {\\n\\t\\t\\t\\tclearTimeout(callData.acceptTimeout);\\n\\t\\t\\t\\tthis.setIncomingCallAttribute(params.callId, 'acceptTimeout', undefined);\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.loseIncomingCall(params.callId);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (this.currentCallData?.callId !== params.callId) {\\n\\t\\t\\tdebug && console.log(`[VideoConf] Server sent a call ended event for a call we're not aware of: ${params.callId}.`);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tdebug && console.log(`[VideoConf] Outgoing call ended by the server: ${params.callId}.`);\\n\\n\\t\\t// Stop ringing\\n\\t\\tthis.currentCallData = undefined;\\n\\t\\tif (this.currentCallHandler) {\\n\\t\\t\\tclearInterval(this.currentCallHandler);\\n\\t\\t\\tthis.currentCallHandler = undefined;\\n\\t\\t\\tthis.emit('calling/changed');\\n\\t\\t\\tthis.emit('direct/stopped', params);\\n\\t\\t}\\n\\t}\\n\\n\\tprivate onDirectCallRejected(params: DirectCallParams): void {\\n\\t\\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\\n\\t\\t\\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected a call ${params.callId} from us, but we're not calling.`);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected our call ${params.callId}.`);\\n\\n\\t\\t// Stop ringing\\n\\t\\tif (this.currentCallHandler) {\\n\\t\\t\\tclearInterval(this.currentCallHandler);\\n\\t\\t\\tthis.currentCallHandler = undefined;\\n\\t\\t}\\n\\n\\t\\tconst { joined } = this.currentCallData;\\n\\n\\t\\tthis.emit('direct/cancel', params);\\n\\t\\tthis.currentCallData = undefined;\\n\\t\\tthis.emit('direct/stopped', params);\\n\\t\\tthis.emit('calling/changed');\\n\\n\\t\\tif (!joined) {\\n\\t\\t\\tsdk.rest.post('/v1/video-conference.cancel', { callId: params.callId });\\n\\t\\t}\\n\\t}\\n\\n\\tprivate isCallDismissed(callId: string): boolean {\\n\\t\\treturn this.dismissedCalls.has(callId);\\n\\t}\\n})();\\n\\nMeteor.startup(() => Tracker.autorun(() => VideoConfManager.updateUser()));\\n\",null],\"names\":[\"_regeneratorRuntime\",\"_typeof\",\"_createForOfIteratorHelperLoose\",\"_slicedToArray\",\"_objectSpread\",\"_objectWithoutProperties\",\"_toConsumableArray\",\"_createClass\",\"_inheritsLoose\",\"Emitter\",\"Meteor\",\"Tracker\",\"sdk\",\"getConfig\",\"module\",\"link\",\"default\",\"v\",\"export\",\"VideoConfManager\",\"debug\",\"_Emitter\",\"_this\",\"call\",\"userId\",\"currentCallHandler\",\"currentCallData\",\"startingNewCall\",\"hooks\",\"incomingDirectCalls\",\"dismissedCalls\",\"_preferences\",\"_capabilities\",\"Map\",\"Set\",\"mic\",\"cam\",\"_proto\",\"prototype\",\"isBusy\",\"isCalling\",\"isRinging\",\"_this2\",\"values\",\"some\",\"_ref\",\"callId\",\"isCallDismissed\",\"joined\",\"getIncomingDirectCalls\",\"_this3\",\"filter\",\"acceptTimeout\",\"map\",\"_ref2\",\"timeout\",\"_excluded\",\"dismissed\",\"startCall\",\"roomId\",\"title\",\"data\",\"_this4\",\"async\",\"_context\",\"prev\",\"next\",\"Error\",\"console\",\"log\",\"emit\",\"awrap\",\"rest\",\"post\",\"allowRinging\",\"catch\",\"e\",\"_e$xhr\",\"_e$xhr$responseJSON\",\"error\",\"xhr\",\"responseJSON\",\"Promise\",\"reject\",\"_await$sdk$rest$post$\",\"sent\",\"type\",\"t0\",\"abrupt\",\"callUser\",\"uid\",\"calleeId\",\"rid\",\"joinCall\",\"stop\",\"acceptIncomingCall\",\"_this5\",\"callData\",\"get\",\"clearTimeout\",\"setIncomingCallAttribute\",\"undefined\",\"dismissIncomingCall\",\"setTimeout\",\"updatedCallData\",\"removeIncomingCall\",\"notifyUser\",\"rejectIncomingCall\",\"loseIncomingCall\",\"dismissedIncomingCalls\",\"_this6\",\"keys\",\"dismissedIncomingCallHelper\",\"loadCapabilities\",\"capabilities\",\"_context2\",\"_await$sdk$rest$get$c\",\"attributeName\",\"value\",\"newData\",\"set\",\"_this7\",\"add\",\"delete\",\"CALL_TIMEOUT\",\"has\",\"updateUser\",\"disconnect\",\"connectUser\",\"changePreference\",\"key\",\"setPreferences\",\"prefs\",\"meteorBabelHelpers\",\"sanitizeForInObject\",\"hasOwnProperty\",\"params\",\"_await$sdk$rest$post$2\",\"url\",\"providerName\",\"_this8\",\"_context3\",\"state\",\"_e$xhr2\",\"_e$xhr2$responseJSON\",\"abortCall\",\"giveUp\",\"rejectIncomingCallsFromUser\",\"_step\",\"_iterator\",\"done\",\"_ref3\",\"_ref4$\",\"_ref4\",\"_ref5\",\"attempt\",\"_this9\",\"_context4\",\"setInterval\",\"warn\",\"_ref6\",\"_this$currentCallData\",\"_context5\",\"clearInterval\",\"_step2\",\"_iterator2\",\"hook\",\"forEach\",\"clear\",\"onVideoConfNotification\",\"_ref7\",\"action\",\"_context6\",\"onDirectCall\",\"onDirectCallCanceled\",\"onDirectCallAccepted\",\"onDirectCallRejected\",\"onDirectCallConfirmed\",\"onDirectCallJoined\",\"onDirectCallEnded\",\"_context7\",\"publish\",\"_sdk$stream\",\"ready\",\"_this10\",\"_context8\",\"stream\",\"push\",\"abortIncomingCall\",\"_this$incomingDirectC\",\"lostCall\",\"createAbortTimeout\",\"_this11\",\"startNewIncomingCall\",\"_ref8\",\"refreshExistingIncomingCall\",\"_ref9\",\"existingData\",\"_ref10\",\"_this$incomingDirectC2\",\"_ref11\",\"_this$currentCallData2\",\"skipConfirmation\",\"arguments\",\"length\",\"_this$incomingDirectC3\",\"_this$currentCallData3\",\"_this$currentCallData4\",\"_this$currentCallData5\",\"startup\",\"autorun\"],\"mappings\":\"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\"}"}