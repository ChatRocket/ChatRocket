{"code":"function module(e,t,r){let a,n;r.export({useFirstUnreadMessageId:()=>s}),r.link(\"use-sync-external-store/shim\",{useSyncExternalStore(e){a=e}},0),r.link(\"../contexts/ChatContext\",{useChat(e){n=e}},1);let s=()=>{let e=n();if(!e)throw Error(\"useFirstUnreadMessageId must be used within a ChatContextProvider\");return a(e.readStateManager.onUnreadStateChange,e.readStateManager.getFirstUnreadRecordId)}}","map":"{\"version\":3,\"sources\":[\"client/views/room/hooks/useFirstUnreadMessageId.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useSyncExternalStore } from 'use-sync-external-store/shim';\\n\\nimport { useChat } from '../contexts/ChatContext';\\n\\nexport const useFirstUnreadMessageId = (): string | undefined => {\\n\\tconst chat = useChat();\\n\\n\\tif (!chat) {\\n\\t\\tthrow new Error('useFirstUnreadMessageId must be used within a ChatContextProvider');\\n\\t}\\n\\n\\treturn useSyncExternalStore(chat.readStateManager.onUnreadStateChange, chat.readStateManager.getFirstUnreadRecordId);\\n};\\n\",null],\"names\":[\"useSyncExternalStore\",\"useChat\",\"module\",\"export\",\"useFirstUnreadMessageId\",\"link\",\"v\",\"chat\",\"Error\",\"readStateManager\",\"onUnreadStateChange\",\"getFirstUnreadRecordId\"],\"mappings\":\"2BAAoEA,EAAAC,EAApEC,EAAOC,MAAE,CAAA,CAAAC,wBAA4BA,IAAAA,CAAA,GAA+BF,EAAAG,IAAA,CAAA,+BAAA,CAAAL,qBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,0BAAA,CAAAJ,QAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAI7D,IAAMF,EAA0BA,KACtC,IAAMG,EAAON,IAEb,GAAI,CAACM,EACJ,MAAM,AAAIC,MAAM,qEAGjB,OAAOR,EAAqBO,EAAKE,gBAAgB,CAACC,mBAAmB,CAAEH,EAAKE,gBAAgB,CAACE,sBAAsB,CACpH\"}"}