{"code":"Package[\"core-runtime\"].queue(\"geojson-utils\",function(){var t;return Package.meteor.Meteor,Package.meteor.global,Package.meteor.meteorEnv,{export:function(){return{GeoJSON:t}},require:(0,Package.modules.meteorInstall)({node_modules:{meteor:{\"geojson-utils\":{\"main.js\":function t(t,n){n.GeoJSON=t(\"./geojson-utils.js\")},\"geojson-utils.js\":function t(t,n,o){var e;e={},void 0!==o&&o.exports&&(o.exports=e),e.lineStringsIntersect=function(t,n){for(var o=[],e=0;e<=t.coordinates.length-2;++e)for(var a=0;a<=n.coordinates.length-2;++a){var r={x:t.coordinates[e][1],y:t.coordinates[e][0]},i={x:t.coordinates[e+1][1],y:t.coordinates[e+1][0]},s={x:n.coordinates[a][1],y:n.coordinates[a][0]},u={x:n.coordinates[a+1][1],y:n.coordinates[a+1][0]},c=(u.x-s.x)*(r.y-s.y)-(u.y-s.y)*(r.x-s.x),h=(i.x-r.x)*(r.y-s.y)-(i.y-r.y)*(r.x-s.x),d=(u.y-s.y)*(i.x-r.x)-(u.x-s.x)*(i.y-r.y);if(0!=d){var l=c/d,g=h/d;0<=l&&l<=1&&0<=g&&g<=1&&o.push({type:\"Point\",coordinates:[r.x+l*(i.x-r.x),r.y+l*(i.y-r.y)]})}}return 0==o.length&&(o=!1),o},e.pointInBoundingBox=function(t,n){return!(t.coordinates[1]<n[0][0]||t.coordinates[1]>n[1][0]||t.coordinates[0]<n[0][1]||t.coordinates[0]>n[1][1])},e.pointInPolygon=function(t,n){for(var o=\"Polygon\"==n.type?[n.coordinates]:n.coordinates,a=!1,r=0;r<o.length;r++)e.pointInBoundingBox(t,function(t){for(var n=[],o=[],e=0;e<t[0].length;e++)n.push(t[0][e][1]),o.push(t[0][e][0]);return n=n.sort(function(t,n){return t-n}),o=o.sort(function(t,n){return t-n}),[[n[0],o[0]],[n[n.length-1],o[o.length-1]]]}(o[r]))&&(a=!0);if(!a)return!1;for(var i=!1,r=0;r<o.length;r++)(function(t,n,o){for(var e=[[0,0]],a=0;a<o.length;a++){for(var r=0;r<o[a].length;r++)e.push(o[a][r]);e.push([0,0])}for(var i=!1,a=0,r=e.length-1;a<e.length;r=a++)e[a][0]>n!=e[r][0]>n&&t<(e[r][1]-e[a][1])*(n-e[a][0])/(e[r][0]-e[a][0])+e[a][1]&&(i=!i);return i})(t.coordinates[1],t.coordinates[0],o[r])&&(i=!0);return i},e.numberToRadius=function(t){return t*Math.PI/180},e.numberToDegree=function(t){return 180*t/Math.PI},e.drawCircle=function(t,n,o){for(var a=[n.coordinates[1],n.coordinates[0]],r=t/1e3/6371,i=[e.numberToRadius(a[0]),e.numberToRadius(a[1])],o=o||15,s=[[a[0],a[1]]],u=0;u<o;u++){var c=2*Math.PI*u/o,h=Math.asin(Math.sin(i[0])*Math.cos(r)+Math.cos(i[0])*Math.sin(r)*Math.cos(c)),d=i[1]+Math.atan2(Math.sin(c)*Math.sin(r)*Math.cos(i[0]),Math.cos(r)-Math.sin(i[0])*Math.sin(h));s[u]=[],s[u][1]=e.numberToDegree(h),s[u][0]=e.numberToDegree(d)}return{type:\"Polygon\",coordinates:[s]}},e.rectangleCentroid=function(t){var n=t.coordinates[0],o=n[0][0],e=n[0][1];return{type:\"Point\",coordinates:[o+(n[2][0]-o)/2,e+(n[2][1]-e)/2]}},e.pointDistance=function(t,n){var o=t.coordinates[0],a=t.coordinates[1],r=n.coordinates[0],i=n.coordinates[1],s=e.numberToRadius(i-a),u=e.numberToRadius(r-o),c=Math.pow(Math.sin(s/2),2)+Math.cos(e.numberToRadius(a))*Math.cos(e.numberToRadius(i))*Math.pow(Math.sin(u/2),2);return 6371*(2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)))*1e3},e.geometryWithinRadius=function(t,n,o){if(\"Point\"==t.type)return e.pointDistance(t,n)<=o;if(\"LineString\"==t.type||\"Polygon\"==t.type){var a,r={};for(var i in a=\"Polygon\"==t.type?t.coordinates[0]:t.coordinates)if(r.coordinates=a[i],e.pointDistance(r,n)>o)return!1}return!0},e.area=function(t){for(var n,o,e=0,a=t.coordinates[0],r=a.length-1,i=0;i<a.length;r=i++){var n={x:a[i][1],y:a[i][0]},o={x:a[r][1],y:a[r][0]};e+=n.x*o.y,e-=n.y*o.x}return e/2},e.centroid=function(t){for(var n,o,a,r=0,i=0,s=t.coordinates[0],u=s.length-1,c=0;c<s.length;u=c++){var n={x:s[c][1],y:s[c][0]},o={x:s[u][1],y:s[u][0]};a=n.x*o.y-o.x*n.y,r+=(n.x+o.x)*a,i+=(n.y+o.y)*a}return{type:\"Point\",coordinates:[i/(a=6*e.area(t)),r/a]}},e.simplify=function(t,n){n=n||20;var o,e,a,r,i,s,u,c,h,d,l,g,M,y,f,m,x,p,v,P=Math.PI/180*.5,b=[],T=[],j=[];if((t=t.map(function(t){return{lng:t.coordinates[0],lat:t.coordinates[1]}})).length<3)return t;for(o=t.length,d=360*n/(2*Math.PI*6378137),d*=d,a=0,T[0]=0,j[0]=o-1,e=1;e>0;)if(r=T[e-1],i=j[e-1],e--,i-r>1){for(l=t[i].lng()-t[r].lng(),g=t[i].lat()-t[r].lat(),Math.abs(l)>180&&(l=360-Math.abs(l)),l*=Math.cos(P*(t[i].lat()+t[r].lat())),M=l*l+g*g,s=r+1,u=r,h=-1;s<i;s++)y=t[s].lng()-t[r].lng(),f=t[s].lat()-t[r].lat(),Math.abs(y)>180&&(y=360-Math.abs(y)),y*=Math.cos(P*(t[s].lat()+t[r].lat())),m=y*y+f*f,x=t[s].lng()-t[i].lng(),p=t[s].lat()-t[i].lat(),Math.abs(x)>180&&(x=360-Math.abs(x)),x*=Math.cos(P*(t[s].lat()+t[i].lat())),(c=m>=M+(v=x*x+p*p)?v:v>=M+m?m:(y*g-f*l)*(y*g-f*l)/M)>h&&(u=s,h=c);h<d?(b[a]=r,a++):(T[++e-1]=u,j[e-1]=i,T[++e-1]=r,j[e-1]=u)}else b[a]=r,a++;b[a]=o-1,a++;for(var I=[],s=0;s<a;s++)I.push(t[b[s]]);return I.map(function(t){return{type:\"Point\",coordinates:[t.lng,t.lat]}})},e.destinationPoint=function(t,n,o){o/=6371,n=e.numberToRadius(n);var a=e.numberToRadius(t.coordinates[0]),r=e.numberToRadius(t.coordinates[1]),i=Math.asin(Math.sin(a)*Math.cos(o)+Math.cos(a)*Math.sin(o)*Math.cos(n)),s=r+Math.atan2(Math.sin(n)*Math.sin(o)*Math.cos(a),Math.cos(o)-Math.sin(a)*Math.sin(i));return s=(s+3*Math.PI)%(2*Math.PI)-Math.PI,{type:\"Point\",coordinates:[e.numberToDegree(i),e.numberToDegree(s)]}}}}}}},{extensions:[\".js\",\".json\"]}),eagerModulePaths:[\"/node_modules/meteor/geojson-utils/main.js\"],mainModulePath:\"/node_modules/meteor/geojson-utils/main.js\"}});","map":"{\"version\":3,\"sources\":[\"<anon>\"],\"names\":[],\"mappings\":\"\"}"}