{"code":"function module(e,t,n){n.link(\"@babel/runtime/regenerator\",{default:function(e){i=e}},0),n.link(\"@babel/runtime/helpers/toConsumableArray\",{default:function(e){r=e}},1),n.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(e){s=e}},2),n.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(e){o=e}},3),n.link(\"@babel/runtime/helpers/asyncIterator\",{default:function(e){a=e}},4),n.export({useFilesList:function(){return C}}),n.link(\"@rocket.chat/base64\",{Base64:function(e){u=e}},0),n.link(\"@rocket.chat/ui-contexts\",{useUserRoom:function(e){l=e},useUserId:function(e){c=e},useEndpoint:function(e){f=e}},1),n.link(\"react\",{useCallback:function(e){d=e},useEffect:function(e){p=e},useMemo:function(e){m=e},useState:function(e){k=e}},2),n.link(\"../../../../../../app/e2e/client/rocketchat.e2e\",{e2e:function(e){b=e}},3),n.link(\"../../../../../hooks/lists/useScrollableRecordList\",{useScrollableRecordList:function(e){h=e}},4),n.link(\"../../../../../hooks/lists/useStreamUpdatesForMessageList\",{useStreamUpdatesForMessageList:function(e){v=e}},5),n.link(\"../../../../../hooks/useComponentDidUpdate\",{useComponentDidUpdate:function(e){x=e}},6),n.link(\"../../../../../lib/lists/FilesList\",{FilesList:function(e){y=e}},7),n.link(\"../../../../../lib/utils/getConfig\",{getConfig:function(e){g=e}},8);var i,r,s,o,a,u,l,c,f,d,p,m,k,b,h,v,x,y,g,C=function(e){var t=k(function(){return new y(e)}),n=o(t,2),C=n[0],w=n[1],S=d(function(){return w(new y(e))},[e]),I=l(e.rid),A=c();x(function(){e&&S()},[e,S]),p(function(){C.options!==e&&C.updateFilters(e)},[C,e]);var L=I?({c:\"/v1/channels.files\",l:\"/v1/channels.files\",v:\"/v1/channels.files\",d:\"/v1/im.files\",p:\"/v1/groups.files\"})[I.t]:\"/v1/channels.files\",F=f(\"GET\",L),M=d(function(t,n){var o,l,c,f,d,p,m,k,h,v,x,y,g;return i.async(function(C){for(;;)switch(C.prev=C.next){case 0:return C.next=2,i.awrap(F(s(s({roomId:e.rid,offset:t,count:n,sort:JSON.stringify({uploadedAt:-1})},e.text?{name:e.text}:{}),\"all\"!==e.type&&{typeGroup:e.type})));case 2:l=(o=C.sent).files,c=o.total,f=l.map(function(e){return s(s({},e),{},{uploadedAt:e.uploadedAt?new Date(e.uploadedAt):void 0,modifiedAt:e.modifiedAt?new Date(e.modifiedAt):void 0})}),d=!1,p=!1,C.prev=8,k=a(f);case 10:return C.next=12,i.awrap(k.next());case 12:if(!(d=!(h=C.sent).done)){C.next=28;break}if(!((v=h.value).rid&&v.content)){C.next=25;break}return C.next=17,i.awrap(b.getInstanceByRoomId(v.rid));case 17:if(!(null!=(x=C.sent)&&x.shouldConvertReceivedMessages())){C.next=25;break}return C.next=21,i.awrap(b.decryptFileContent(v));case 21:y=C.sent,g=u.encode(JSON.stringify(s(s({},y.encryption),{},{name:String.fromCharCode.apply(String,r(new TextEncoder().encode(y.name))),type:y.type}))),y.path=\"/file-decrypt\"+y.path+\"?key=\"+g,Object.assign(v,y);case 25:d=!1,C.next=10;break;case 28:C.next=34;break;case 30:C.prev=30,C.t0=C.catch(8),p=!0,m=C.t0;case 34:if(C.prev=34,C.prev=35,!(d&&null!=k.return)){C.next=39;break}return C.next=39,i.awrap(k.return());case 39:if(C.prev=39,!p){C.next=42;break}throw m;case 42:return C.finish(39);case 43:return C.finish(34);case 44:return C.abrupt(\"return\",{items:f,itemCount:c});case 45:case\"end\":return C.stop()}},null,null,[[8,30,34,44],[35,,39,43]],Promise)},[F,e.rid,e.type,e.text]),U=h(C,M,m(function(){return parseInt(\"\"+g(\"discussionListSize\",10))},[])),R=U.loadMoreItems,D=U.initialItemCount;return v(C,A,e.rid||null),{reload:S,filesList:C,loadMoreItems:R,initialItemCount:D}}}","map":"{\"version\":3,\"sources\":[\"client/views/room/contextualBar/RoomFiles/hooks/useFilesList.ts\",\"<anon>\"],\"sourcesContent\":[\"import { Base64 } from '@rocket.chat/base64';\\nimport { useUserRoom, useUserId, useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useCallback, useEffect, useMemo, useState } from 'react';\\n\\nimport { e2e } from '../../../../../../app/e2e/client/rocketchat.e2e';\\nimport { useScrollableRecordList } from '../../../../../hooks/lists/useScrollableRecordList';\\nimport { useStreamUpdatesForMessageList } from '../../../../../hooks/lists/useStreamUpdatesForMessageList';\\nimport { useComponentDidUpdate } from '../../../../../hooks/useComponentDidUpdate';\\nimport type { FilesListOptions } from '../../../../../lib/lists/FilesList';\\nimport { FilesList } from '../../../../../lib/lists/FilesList';\\nimport type { MessageList } from '../../../../../lib/lists/MessageList';\\nimport { getConfig } from '../../../../../lib/utils/getConfig';\\n\\nexport const useFilesList = (\\n\\toptions: FilesListOptions,\\n): {\\n\\tfilesList: FilesList;\\n\\tinitialItemCount: number;\\n\\treload: () => void;\\n\\tloadMoreItems: (start: number, end: number) => void;\\n} => {\\n\\tconst [filesList, setFilesList] = useState(() => new FilesList(options));\\n\\tconst reload = useCallback(() => setFilesList(new FilesList(options)), [options]);\\n\\tconst room = useUserRoom(options.rid);\\n\\tconst uid = useUserId();\\n\\n\\tuseComponentDidUpdate(() => {\\n\\t\\toptions && reload();\\n\\t}, [options, reload]);\\n\\n\\tuseEffect(() => {\\n\\t\\tif (filesList.options !== options) {\\n\\t\\t\\tfilesList.updateFilters(options);\\n\\t\\t}\\n\\t}, [filesList, options]);\\n\\n\\tconst roomTypes = {\\n\\t\\tc: '/v1/channels.files',\\n\\t\\tl: '/v1/channels.files',\\n\\t\\tv: '/v1/channels.files',\\n\\t\\td: '/v1/im.files',\\n\\t\\tp: '/v1/groups.files',\\n\\t} as const;\\n\\n\\tconst apiEndPoint = room ? roomTypes[room.t] : '/v1/channels.files';\\n\\n\\tconst getFiles = useEndpoint('GET', apiEndPoint);\\n\\n\\tconst fetchMessages = useCallback(\\n\\t\\tasync (start, end) => {\\n\\t\\t\\tconst { files, total } = await getFiles({\\n\\t\\t\\t\\troomId: options.rid,\\n\\t\\t\\t\\toffset: start,\\n\\t\\t\\t\\tcount: end,\\n\\t\\t\\t\\tsort: JSON.stringify({ uploadedAt: -1 }),\\n\\t\\t\\t\\t...(options.text ? { name: options.text } : {}),\\n\\t\\t\\t\\t...(options.type !== 'all' && {\\n\\t\\t\\t\\t\\ttypeGroup: options.type,\\n\\t\\t\\t\\t}),\\n\\t\\t\\t});\\n\\n\\t\\t\\tconst items = files.map((file) => ({\\n\\t\\t\\t\\t...file,\\n\\t\\t\\t\\tuploadedAt: file.uploadedAt ? new Date(file.uploadedAt) : undefined,\\n\\t\\t\\t\\tmodifiedAt: file.modifiedAt ? new Date(file.modifiedAt) : undefined,\\n\\t\\t\\t}));\\n\\n\\t\\t\\tfor await (const file of items) {\\n\\t\\t\\t\\tif (file.rid && file.content) {\\n\\t\\t\\t\\t\\tconst e2eRoom = await e2e.getInstanceByRoomId(file.rid);\\n\\t\\t\\t\\t\\tif (e2eRoom?.shouldConvertReceivedMessages()) {\\n\\t\\t\\t\\t\\t\\tconst decrypted = await e2e.decryptFileContent(file);\\n\\t\\t\\t\\t\\t\\tconst key = Base64.encode(\\n\\t\\t\\t\\t\\t\\t\\tJSON.stringify({\\n\\t\\t\\t\\t\\t\\t\\t\\t...decrypted.encryption,\\n\\t\\t\\t\\t\\t\\t\\t\\tname: String.fromCharCode(...new TextEncoder().encode(decrypted.name)),\\n\\t\\t\\t\\t\\t\\t\\t\\ttype: decrypted.type,\\n\\t\\t\\t\\t\\t\\t\\t}),\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tdecrypted.path = `/file-decrypt${decrypted.path}?key=${key}`;\\n\\t\\t\\t\\t\\t\\tObject.assign(file, decrypted);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\titems,\\n\\t\\t\\t\\titemCount: total,\\n\\t\\t\\t};\\n\\t\\t},\\n\\t\\t[getFiles, options.rid, options.type, options.text],\\n\\t);\\n\\n\\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(\\n\\t\\tfilesList,\\n\\t\\tfetchMessages,\\n\\t\\tuseMemo(() => parseInt(`${getConfig('discussionListSize', 10)}`), []),\\n\\t);\\n\\n\\t// TODO: chapter day : frontend create useStreamUpdatesForUploadList\\n\\tuseStreamUpdatesForMessageList(filesList as unknown as MessageList, uid, options.rid || null);\\n\\n\\treturn {\\n\\t\\treload,\\n\\t\\tfilesList,\\n\\t\\tloadMoreItems,\\n\\t\\tinitialItemCount,\\n\\t};\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"_toConsumableArray\",\"_objectSpread\",\"_slicedToArray\",\"_asyncIterator\",\"export\",\"useFilesList\",\"Base64\",\"useUserRoom\",\"useUserId\",\"useEndpoint\",\"useCallback\",\"useEffect\",\"useMemo\",\"useState\",\"e2e\",\"useScrollableRecordList\",\"useStreamUpdatesForMessageList\",\"useComponentDidUpdate\",\"FilesList\",\"getConfig\",\"options\",\"_useState\",\"_useState2\",\"filesList\",\"setFilesList\",\"reload\",\"room\",\"rid\",\"uid\",\"updateFilters\",\"apiEndPoint\",\"roomTypes\",\"c\",\"l\",\"d\",\"p\",\"t\",\"getFiles\",\"fetchMessages\",\"start\",\"end\",\"_await$getFiles\",\"files\",\"total\",\"items\",\"_iteratorAbruptCompletion\",\"_didIteratorError\",\"_iteratorError\",\"_iterator\",\"_step\",\"file\",\"e2eRoom\",\"decrypted\",\"key\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"roomId\",\"offset\",\"count\",\"sort\",\"JSON\",\"stringify\",\"uploadedAt\",\"text\",\"name\",\"type\",\"typeGroup\",\"sent\",\"map\",\"Date\",\"undefined\",\"modifiedAt\",\"done\",\"value\",\"content\",\"getInstanceByRoomId\",\"shouldConvertReceivedMessages\",\"decryptFileContent\",\"encode\",\"encryption\",\"String\",\"fromCharCode\",\"apply\",\"TextEncoder\",\"path\",\"Object\",\"assign\",\"t0\",\"return\",\"finish\",\"abrupt\",\"itemCount\",\"stop\",\"Promise\",\"_useScrollableRecordL\",\"parseInt\",\"loadMoreItems\",\"initialItemCount\"],\"mappings\":\"uBAAuBA,EAAAC,IAAA,CAAA,6BAAsB,CAAAC,QAAA,SAAAC,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2CAAA,CAAAC,QAAA,SAAAC,CAAA,EAAAE,EAAAF,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uCAAA,CAAAC,QAAA,SAAAC,CAAA,EAAAG,EAAAH,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uCAAA,CAAAC,QAAA,SAAAC,CAAA,EAAAI,EAAAJ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uCAAA,CAAAC,QAAA,SAAAC,CAAA,EAAAK,EAAAL,CAAA,CAAA,EAAA,GAA7CH,EAAOS,MAAE,CAAA,CAAMC,aAAQ,WAAA,OAAsBA,CAAA,CAAA,GAAAV,EAAAC,IAAA,CAAA,sBAAA,CAAAU,OAAA,SAAAR,CAAA,EAAAQ,EAAAR,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2BAAA,CAAAW,YAAA,SAAAT,CAAA,EAAAS,EAAAT,CAAA,EAAAU,UAAA,SAAAV,CAAA,EAAAU,EAAAV,CAAA,EAAAW,YAAA,SAAAX,CAAA,EAAAW,EAAAX,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAc,YAAA,SAAAZ,CAAA,EAAAY,EAAAZ,CAAA,EAAAa,UAAA,SAAAb,CAAA,EAAAa,EAAAb,CAAA,EAAAc,QAAA,SAAAd,CAAA,EAAAc,EAAAd,CAAA,EAAAe,SAAA,SAAAf,CAAA,EAAAe,EAAAf,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,kDAAA,CAAAkB,IAAA,SAAAhB,CAAA,EAAAgB,EAAAhB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,qDAAA,CAAAmB,wBAAA,SAAAjB,CAAA,EAAAiB,EAAAjB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,4DAAA,CAAAoB,+BAAA,SAAAlB,CAAA,EAAAkB,EAAAlB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,6CAAA,CAAAqB,sBAAA,SAAAnB,CAAA,EAAAmB,EAAAnB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,qCAAA,CAAAsB,UAAA,SAAApB,CAAA,EAAAoB,EAAApB,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,qCAAA,CAAAuB,UAAA,SAAArB,CAAA,EAAAqB,EAAArB,CAAA,CAAA,EAAA,GAatC,IAbPC,EAA6CC,EAAAC,EAAAC,EAAAC,EAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAahCd,EAAe,SAC3Be,CAAyB,EAOzB,IAAAC,EAAkCR,EAAS,WAAA,OAAM,IAAIK,EAAUE,EAAQ,GAACE,EAAApB,EAAAmB,EAAA,GAAjEE,EAASD,CAAA,CAAA,EAAA,CAAEE,EAAYF,CAAA,CAAA,EAAA,CACxBG,EAASf,EAAY,WAAA,OAAMc,EAAa,IAAIN,EAAUE,GAAS,EAAE,CAACA,EAAQ,EAC1EM,EAAOnB,EAAYa,EAAQO,GAAG,EAC9BC,EAAMpB,IAEZS,EAAsB,WACrBG,GAAWK,GACZ,EAAG,CAACL,EAASK,EAAO,EAEpBd,EAAU,WACLY,EAAUH,OAAO,GAAKA,GACzBG,EAAUM,aAAa,CAACT,EAE1B,EAAG,CAACG,EAAWH,EAAQ,EAUvB,IAAMU,EAAcJ,EAAOK,AART,CAAA,CACjBC,EAAG,qBACHC,EAAG,qBACHnC,EAAG,qBACHoC,EAAG,eACHC,EAAG,oBAGgC,CAACT,EAAKU,CAAC,CAAC,CAAG,qBAEzCC,EAAW5B,EAAY,MAAOqB,GAE9BQ,EAAgB5B,EACrB,SAAO6B,CAAK,CAAEC,CAAG,EAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAtD,EAAAuD,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAE,IAAA,CAAA,EAAA1D,EAAA2D,KAAA,CACerB,EAAQpC,EAAAA,EAAA,CACtC0D,OAAQvC,EAAQO,GAAG,CACnBiC,OAAQrB,EACRsB,MAAOrB,EACPsB,KAAMC,KAAKC,SAAS,CAAC,CAAEC,WAAY,EAAE,EAAG,EACpC7C,EAAQ8C,IAAI,CAAG,CAAEC,KAAM/C,EAAQ8C,IAAAA,AAAI,EAAK,CAAA,GACxC9C,AAAiB,QAAjBA,EAAQgD,IAAI,EAAc,CAC7BC,UAAWjD,EAAQgD,IAAAA,IAEnB,MAAA,EATM1B,EAAKD,AASXA,CAAAA,EAAAc,EAAAe,IAAA,AAAAA,EATM5B,KAAK,CAAEC,EAAKF,EAALE,KAAK,CAWdC,EAAQF,EAAM6B,GAAG,CAAC,SAACrB,CAAI,EAAA,OAAAjD,EAAAA,EAAA,CAAA,EACzBiD,GAAI,CAAA,EAAA,CACPe,WAAYf,EAAKe,UAAU,CAAG,IAAIO,KAAKtB,EAAKe,UAAU,EAAIQ,KAAAA,EAC1DC,WAAYxB,EAAKwB,UAAU,CAAG,IAAIF,KAAKtB,EAAKwB,UAAU,EAAID,KAAAA,CAAS,EAAA,GACjE5B,EAAA,CAAA,EAAAC,EAAA,CAAA,EAAAS,EAAAC,IAAA,CAAA,EAAAR,EAAA7C,EAEsByC,EAAK,MAAA,GAAA,OAAAW,EAAAE,IAAA,CAAA,GAAA1D,EAAA2D,KAAA,CAAAV,EAAAS,IAAA,GAAA,MAAA,GAAA,GAAA,CAAAZ,CAAAA,EAAA,CAAA,AAAAI,CAAAA,EAAAM,EAAAe,IAAA,AAAAA,EAAAK,IAAA,AAAAA,EAAA,CAAApB,EAAAE,IAAA,CAAA,GAAA,KAAA,CAAT,GAAA,CAChBP,CAAAA,AADYA,CAAAA,EAAID,EAAA2B,KAAA,AAAAA,EACXjD,GAAG,EAAIuB,EAAK2B,OAAO,AAAPA,EAAO,CAAAtB,EAAAE,IAAA,CAAA,GAAA,KAAA,CAAA,OAAAF,EAAAE,IAAA,CAAA,GAAA1D,EAAA2D,KAAA,CACL5C,EAAIgE,mBAAmB,CAAC5B,EAAKvB,GAAG,EAAC,MAAA,GAA1C,GAAA,CACTwB,CAAAA,MADEA,CAAAA,EAAOI,EAAAe,IAAA,AAAAA,GACTnB,EAAS4B,6BAA6B,EAAA,EAAE,CAAAxB,EAAAE,IAAA,CAAA,GAAA,KAAA,CAAA,OAAAF,EAAAE,IAAA,CAAA,GAAA1D,EAAA2D,KAAA,CACnB5C,EAAIkE,kBAAkB,CAAC9B,GAAK,MAAA,GAA9CE,EAASG,EAAAe,IAAA,CACTjB,EAAM/C,EAAO2E,MAAM,CACxBlB,KAAKC,SAAS,CAAA/D,EAAAA,EAAA,CAAA,EACVmD,EAAU8B,UAAU,EAAA,CAAA,EAAA,CACvBf,KAAMgB,OAAOC,YAAY,CAAAC,KAAA,CAAnBF,OAAMnF,EAAiB,IAAIsF,cAAcL,MAAM,CAAC7B,EAAUe,IAAI,IACpEC,KAAMhB,EAAUgB,IAAAA,AAAI,KAGtBhB,EAAUmC,IAAI,CAAA,gBAAmBnC,EAAUmC,IAAI,CAAA,QAAQlC,EACvDmC,OAAOC,MAAM,CAACvC,EAAME,EAAW,MAAA,GAAAP,EAAA,CAAA,EAAAU,EAAAE,IAAA,CAAA,GAAA,KAAA,MAAA,GAAAF,EAAAE,IAAA,CAAA,GAAA,KAAA,MAAA,GAAAF,EAAAC,IAAA,CAAA,GAAAD,EAAAmC,EAAA,CAAAnC,EAAA,KAAA,CAAA,GAAAT,EAAA,CAAA,EAAAC,EAAAQ,EAAAmC,EAAA,MAAA,GAAA,GAAAnC,EAAAC,IAAA,CAAA,GAAAD,EAAAC,IAAA,CAAA,GAAA,CAAAX,CAAAA,GAAAG,AAAA,MAAAA,EAAA2C,MAAA,EAAA,CAAApC,EAAAE,IAAA,CAAA,GAAA,KAAA,CAAA,OAAAF,EAAAE,IAAA,CAAA,GAAA1D,EAAA2D,KAAA,CAAAV,EAAA2C,MAAA,GAAA,MAAA,GAAA,GAAApC,EAAAC,IAAA,CAAA,GAAA,CAAAV,EAAA,CAAAS,EAAAE,IAAA,CAAA,GAAA,KAAA,CAAA,MAAAV,CAAA,MAAA,GAAA,OAAAQ,EAAAqC,MAAA,CAAA,GAAA,MAAA,GAAA,OAAArC,EAAAqC,MAAA,CAAA,GAAA,MAAA,GAAA,OAAArC,EAAAsC,MAAA,CAAA,SAK3B,CACNjD,MAAAA,EACAkD,UAAWnD,GACX,MAAA,GAAA,IAAA,MAAA,OAAAY,EAAAwC,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,CAAA,CAAA,EAAA,GAAA,GAAA,GAAA,CAAA,CAAA,IAAA,GAAA,GAAA,CAAA,CAAAC,QAAA,EAEF,CAAC3D,EAAUjB,EAAQO,GAAG,CAAEP,EAAQgD,IAAI,CAAEhD,EAAQ8C,IAAI,CAAC,EAGpD+B,EAA4ClF,EAC3CQ,EACAe,EACA1B,EAAQ,WAAA,OAAMsF,SAAQ,GAAI/E,EAAU,qBAAsB,IAAM,EAAE,EAAE,GAH7DgF,EAAaF,EAAbE,aAAa,CAAEC,EAAgBH,EAAhBG,gBAAgB,CASvC,OAFApF,EAA+BO,EAAqCK,EAAKR,EAAQO,GAAG,EAAI,MAEjF,CACNF,OAAAA,EACAF,UAAAA,EACA4E,cAAAA,EACAC,iBAAAA,EAEF\"}"}