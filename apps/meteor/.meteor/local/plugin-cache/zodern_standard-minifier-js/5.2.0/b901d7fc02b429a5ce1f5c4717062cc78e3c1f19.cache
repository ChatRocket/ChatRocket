{"code":"function module(e,n,s){let t,i,a,d,o,r,l,u,c;s.export({useRoomList:()=>v}),s.link(\"@rocket.chat/fuselage-hooks\",{useDebouncedState(e){t=e}},0),s.link(\"@rocket.chat/ui-contexts\",{useUserPreference(e){i=e},useUserSubscriptions(e){a=e},useSetting(e){d=e}},1),s.link(\"react\",{useEffect(e){o=e}},2),s.link(\"../../contexts/VideoConfContext\",{useVideoConfIncomingCalls(e){r=e}},3),s.link(\"../../hooks/omnichannel/useOmnichannelEnabled\",{useOmnichannelEnabled(e){l=e}},4),s.link(\"../../hooks/omnichannel/useQueuedInquiries\",{useQueuedInquiries(e){u=e}},5),s.link(\"./useQueryOptions\",{useQueryOptions(e){c=e}},6);let h={open:{$ne:!1}},S=[],m=[\"Incoming_Calls\",\"Incoming_Livechats\",\"Open_Livechats\",\"On_Hold_Chats\",\"Unread\",\"Favorites\",\"Teams\",\"Discussions\",\"Channels\",\"Direct_Messages\",\"Conversations\"],v=()=>{var e;let[n,s]=t([],150),v=l(),p=i(\"sidebarGroupByType\"),w=i(\"sidebarShowFavorites\"),_=null!==(e=i(\"sidebarSectionsOrder\"))&&void 0!==e?e:m,b=d(\"Discussion_enabled\"),k=i(\"sidebarShowUnread\"),C=c(),f=a(h,C),g=u(),z=r(),O=S;return g.enabled&&(O=g.queue),o(()=>{s(()=>{let e=new Set,n=new Set,s=new Set,t=new Set,i=new Set,a=new Set,d=new Set,o=new Set,r=new Set,l=new Set;f.forEach(u=>u.archived?void 0:z.find(e=>e.rid===u.rid)?e.add(u):k&&(u.alert||u.unread)&&!u.hideUnreadStatus?i.add(u):w&&u.f?n.add(u):p&&u.teamMain?s.add(u):p&&b&&u.prid?o.add(u):((\"c\"===u.t||\"p\"===u.t)&&a.add(u),\"l\"===u.t&&u.onHold)?v&&l.add(u):\"l\"===u.t?v&&t.add(u):void(\"d\"===u.t&&d.add(u),r.add(u)));let u=new Map;return e.size&&u.set(\"Incoming_Calls\",e),v&&g.enabled&&O.length&&u.set(\"Incoming_Livechats\",O),v&&t.size&&u.set(\"Open_Livechats\",t),v&&l.size&&u.set(\"On_Hold_Chats\",l),k&&i.size&&u.set(\"Unread\",i),w&&n.size&&u.set(\"Favorites\",n),p&&s.size&&u.set(\"Teams\",s),p&&b&&o.size&&u.set(\"Discussions\",o),p&&a.size&&u.set(\"Channels\",a),p&&d.size&&u.set(\"Direct_Messages\",d),p||u.set(\"Conversations\",r),_.map(e=>{let n=u.get(e);return n?[e,...n]:[]}).flat()})},[f,v,z,g.enabled,O,k,w,p,s,b,_]),n}}","map":"{\"version\":3,\"sources\":[\"client/sidebar/hooks/useRoomList.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { ILivechatInquiryRecord, IRoom, ISubscription } from '@rocket.chat/core-typings';\\nimport { useDebouncedState } from '@rocket.chat/fuselage-hooks';\\nimport { useUserPreference, useUserSubscriptions, useSetting } from '@rocket.chat/ui-contexts';\\nimport { useEffect } from 'react';\\n\\nimport { useVideoConfIncomingCalls } from '../../contexts/VideoConfContext';\\nimport { useOmnichannelEnabled } from '../../hooks/omnichannel/useOmnichannelEnabled';\\nimport { useQueuedInquiries } from '../../hooks/omnichannel/useQueuedInquiries';\\nimport { useQueryOptions } from './useQueryOptions';\\n\\nconst query = { open: { $ne: false } };\\n\\nconst emptyQueue: ILivechatInquiryRecord[] = [];\\n\\nconst order: (\\n\\t| 'Incoming_Calls'\\n\\t| 'Incoming_Livechats'\\n\\t| 'Open_Livechats'\\n\\t| 'On_Hold_Chats'\\n\\t| 'Unread'\\n\\t| 'Favorites'\\n\\t| 'Teams'\\n\\t| 'Discussions'\\n\\t| 'Channels'\\n\\t| 'Direct_Messages'\\n\\t| 'Conversations'\\n)[] = [\\n\\t'Incoming_Calls',\\n\\t'Incoming_Livechats',\\n\\t'Open_Livechats',\\n\\t'On_Hold_Chats',\\n\\t'Unread',\\n\\t'Favorites',\\n\\t'Teams',\\n\\t'Discussions',\\n\\t'Channels',\\n\\t'Direct_Messages',\\n\\t'Conversations',\\n];\\n\\nexport const useRoomList = (): Array<ISubscription & IRoom> => {\\n\\tconst [roomList, setRoomList] = useDebouncedState<(ISubscription & IRoom)[]>([], 150);\\n\\n\\tconst showOmnichannel = useOmnichannelEnabled();\\n\\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\\n\\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\\n\\tconst sidebarOrder = useUserPreference<typeof order>('sidebarSectionsOrder') ?? order;\\n\\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\\n\\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\\n\\n\\tconst options = useQueryOptions();\\n\\n\\tconst rooms = useUserSubscriptions(query, options);\\n\\n\\tconst inquiries = useQueuedInquiries();\\n\\n\\tconst incomingCalls = useVideoConfIncomingCalls();\\n\\n\\tlet queue = emptyQueue;\\n\\tif (inquiries.enabled) {\\n\\t\\tqueue = inquiries.queue;\\n\\t}\\n\\n\\tuseEffect(() => {\\n\\t\\tsetRoomList(() => {\\n\\t\\t\\tconst incomingCall = new Set();\\n\\t\\t\\tconst favorite = new Set();\\n\\t\\t\\tconst team = new Set();\\n\\t\\t\\tconst omnichannel = new Set();\\n\\t\\t\\tconst unread = new Set();\\n\\t\\t\\tconst channels = new Set();\\n\\t\\t\\tconst direct = new Set();\\n\\t\\t\\tconst discussion = new Set();\\n\\t\\t\\tconst conversation = new Set();\\n\\t\\t\\tconst onHold = new Set();\\n\\n\\t\\t\\trooms.forEach((room) => {\\n\\t\\t\\t\\tif (room.archived) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (incomingCalls.find((call) => call.rid === room.rid)) {\\n\\t\\t\\t\\t\\treturn incomingCall.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (sidebarShowUnread && (room.alert || room.unread) && !room.hideUnreadStatus) {\\n\\t\\t\\t\\t\\treturn unread.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (favoritesEnabled && room.f) {\\n\\t\\t\\t\\t\\treturn favorite.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (sidebarGroupByType && room.teamMain) {\\n\\t\\t\\t\\t\\treturn team.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\\n\\t\\t\\t\\t\\treturn discussion.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (room.t === 'c' || room.t === 'p') {\\n\\t\\t\\t\\t\\tchannels.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (room.t === 'l' && room.onHold) {\\n\\t\\t\\t\\t\\treturn showOmnichannel && onHold.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (room.t === 'l') {\\n\\t\\t\\t\\t\\treturn showOmnichannel && omnichannel.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (room.t === 'd') {\\n\\t\\t\\t\\t\\tdirect.add(room);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tconversation.add(room);\\n\\t\\t\\t});\\n\\n\\t\\t\\tconst groups = new Map();\\n\\t\\t\\tincomingCall.size && groups.set('Incoming_Calls', incomingCall);\\n\\t\\t\\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', queue);\\n\\t\\t\\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\\n\\t\\t\\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\\n\\t\\t\\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\\n\\t\\t\\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\\n\\t\\t\\tsidebarGroupByType && team.size && groups.set('Teams', team);\\n\\t\\t\\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\\n\\t\\t\\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\\n\\t\\t\\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\\n\\t\\t\\t!sidebarGroupByType && groups.set('Conversations', conversation);\\n\\t\\t\\treturn sidebarOrder\\n\\t\\t\\t\\t.map((key) => {\\n\\t\\t\\t\\t\\tconst group = groups.get(key);\\n\\t\\t\\t\\t\\tif (!group) {\\n\\t\\t\\t\\t\\t\\treturn [];\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn [key, ...group];\\n\\t\\t\\t\\t})\\n\\t\\t\\t\\t.flat();\\n\\t\\t});\\n\\t}, [\\n\\t\\trooms,\\n\\t\\tshowOmnichannel,\\n\\t\\tincomingCalls,\\n\\t\\tinquiries.enabled,\\n\\t\\tqueue,\\n\\t\\tsidebarShowUnread,\\n\\t\\tfavoritesEnabled,\\n\\t\\tsidebarGroupByType,\\n\\t\\tsetRoomList,\\n\\t\\tisDiscussionEnabled,\\n\\t\\tsidebarOrder,\\n\\t]);\\n\\n\\treturn roomList;\\n};\\n\",null],\"names\":[\"useDebouncedState\",\"useUserPreference\",\"useUserSubscriptions\",\"useSetting\",\"useEffect\",\"useVideoConfIncomingCalls\",\"useOmnichannelEnabled\",\"useQueuedInquiries\",\"useQueryOptions\",\"module\",\"export\",\"useRoomList\",\"link\",\"v\",\"query\",\"open\",\"$ne\",\"emptyQueue\",\"order\",\"_useUserPreference\",\"roomList\",\"setRoomList\",\"showOmnichannel\",\"sidebarGroupByType\",\"favoritesEnabled\",\"sidebarOrder\",\"isDiscussionEnabled\",\"sidebarShowUnread\",\"options\",\"rooms\",\"inquiries\",\"incomingCalls\",\"queue\",\"enabled\",\"incomingCall\",\"Set\",\"favorite\",\"team\",\"omnichannel\",\"unread\",\"channels\",\"direct\",\"discussion\",\"conversation\",\"onHold\",\"forEach\",\"room\",\"archived\",\"find\",\"call\",\"rid\",\"add\",\"alert\",\"hideUnreadStatus\",\"f\",\"teamMain\",\"prid\",\"t\",\"groups\",\"Map\",\"size\",\"set\",\"length\",\"map\",\"key\",\"group\",\"get\",\"flat\"],\"mappings\":\"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\"}"}