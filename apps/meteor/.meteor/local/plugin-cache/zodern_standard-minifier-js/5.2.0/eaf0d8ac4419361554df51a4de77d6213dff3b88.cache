{"code":"function module(e,t,s){let a,n,o,r,i,u,d,c;s.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){a=e},useSetModal(e){n=e},useToastMessageDispatch(e){o=e},useTranslation(e){r=e}},0),s.link(\"@tanstack/react-query\",{useMutation(e){i=e},useQueryClient(e){u=e}},1),s.link(\"react\",{default(e){d=e}},2),s.link(\"../../../../components/GenericModal\",{default(e){c=e}},3),s.exportDefault((e,t,s)=>{let l=r(),m=a(\"POST\",\"/v1/chat.delete\"),_=a(\"POST\",\"/v1/moderation.dismissReports\"),y=o(),g=n(),p=u(),M=i({mutationFn:m,onError:e=>{y({type:\"error\",message:e}),g()},onSuccess:async()=>{await f.mutateAsync({msgId:e})}}),f=i({mutationFn:_,onError:e=>{y({type:\"error\",message:e})},onSuccess:()=>{y({type:\"success\",message:l(\"Moderation_Message_deleted\")})},onSettled:()=>{s(),p.invalidateQueries({queryKey:[\"moderation\",\"msgReports\"]}),g()}}),k=async()=>{await M.mutateAsync({msgId:e,roomId:t,asUser:!0})};return()=>{g(d.createElement(c,{confirmText:l(\"Moderation_Dismiss_and_delete\"),title:l(\"Moderation_Delete_this_message\"),variant:\"danger\",onConfirm:()=>k(),onCancel:()=>g()},l(\"Moderation_Are_you_sure_you_want_to_delete_this_message\")))}})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/moderation/hooks/useDeleteMessage.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { useEndpoint, useSetModal, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\\nimport React from 'react';\\n\\nimport GenericModal from '../../../../components/GenericModal';\\n\\nconst useDeleteMessage = (mid: string, rid: string, onChange: () => void) => {\\n\\tconst t = useTranslation();\\n\\tconst deleteMessage = useEndpoint('POST', '/v1/chat.delete');\\n\\tconst dismissMessage = useEndpoint('POST', '/v1/moderation.dismissReports');\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst setModal = useSetModal();\\n\\tconst queryClient = useQueryClient();\\n\\n\\tconst handleDeleteMessages = useMutation({\\n\\t\\tmutationFn: deleteMessage,\\n\\t\\tonError: (error) => {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\tsetModal();\\n\\t\\t},\\n\\t\\tonSuccess: async () => {\\n\\t\\t\\tawait handleDismissMessage.mutateAsync({ msgId: mid });\\n\\t\\t},\\n\\t});\\n\\n\\tconst handleDismissMessage = useMutation({\\n\\t\\tmutationFn: dismissMessage,\\n\\t\\tonError: (error) => {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t},\\n\\t\\tonSuccess: () => {\\n\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Moderation_Message_deleted') });\\n\\t\\t},\\n\\t\\tonSettled: () => {\\n\\t\\t\\tonChange();\\n\\t\\t\\tqueryClient.invalidateQueries({ queryKey: ['moderation', 'msgReports'] });\\n\\t\\t\\tsetModal();\\n\\t\\t},\\n\\t});\\n\\n\\tconst onDeleteAll = async () => {\\n\\t\\tawait handleDeleteMessages.mutateAsync({ msgId: mid, roomId: rid, asUser: true });\\n\\t};\\n\\n\\tconst confirmDeletMessage = (): void => {\\n\\t\\tsetModal(\\n\\t\\t\\t<GenericModal\\n\\t\\t\\t\\tconfirmText={t('Moderation_Dismiss_and_delete')}\\n\\t\\t\\t\\ttitle={t('Moderation_Delete_this_message')}\\n\\t\\t\\t\\tvariant='danger'\\n\\t\\t\\t\\tonConfirm={() => onDeleteAll()}\\n\\t\\t\\t\\tonCancel={() => setModal()}\\n\\t\\t\\t>\\n\\t\\t\\t\\t{t('Moderation_Are_you_sure_you_want_to_delete_this_message')}\\n\\t\\t\\t</GenericModal>,\\n\\t\\t);\\n\\t};\\n\\n\\treturn confirmDeletMessage;\\n};\\n\\nexport default useDeleteMessage;\\n\",null],\"names\":[\"useEndpoint\",\"useSetModal\",\"useToastMessageDispatch\",\"useTranslation\",\"useMutation\",\"useQueryClient\",\"React\",\"GenericModal\",\"module\",\"link\",\"v\",\"default\",\"exportDefault\",\"useDeleteMessage\",\"mid\",\"rid\",\"onChange\",\"t\",\"deleteMessage\",\"dismissMessage\",\"dispatchToastMessage\",\"setModal\",\"queryClient\",\"handleDeleteMessages\",\"mutationFn\",\"onError\",\"error\",\"type\",\"message\",\"onSuccess\",\"handleDismissMessage\",\"mutateAsync\",\"msgId\",\"onSettled\",\"invalidateQueries\",\"queryKey\",\"onDeleteAll\",\"roomId\",\"asUser\",\"confirmDeletMessage\",\"createElement\",\"confirmText\",\"title\",\"variant\",\"onConfirm\",\"onCancel\"],\"mappings\":\"2BAAAA,EAASC,EAAaC,EAAaC,EAA0EC,EAAAC,EAAAC,EAAAC,EAAjDC,EAAcC,IAAE,CAAA,2BAAM,CAAAT,YAA2BU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,YAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,wBAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,eAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,wBAAA,CAAAL,YAAAM,CAAA,EAAAN,EAAAM,CAAA,EAAAL,eAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,sCAAA,CAAAE,QAAAD,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAA7GF,EAAOI,aAAa,CAMKC,CAACC,EAAaC,EAAaC,KACnD,IAAMC,EAAId,IACJe,EAAgBlB,EAAY,OAAQ,mBACpCmB,EAAiBnB,EAAY,OAAQ,iCACrCoB,EAAuBlB,IACvBmB,EAAWpB,IACXqB,EAAcjB,IAEdkB,EAAuBnB,EAAY,CACxCoB,WAAYN,EACZO,QAAUC,IACTN,EAAqB,CAAEO,KAAM,QAASC,QAASF,CAAK,GACpDL,GACD,EACAQ,UAAW,UACV,MAAMC,EAAqBC,WAAW,CAAC,CAAEC,MAAOlB,CAAG,EACpD,IAGKgB,EAAuB1B,EAAY,CACxCoB,WAAYL,EACZM,QAAUC,IACTN,EAAqB,CAAEO,KAAM,QAASC,QAASF,CAAK,EACrD,EACAG,UAAWA,KACVT,EAAqB,CAAEO,KAAM,UAAWC,QAASX,EAAE,6BAA6B,EACjF,EACAgB,UAAWA,KACVjB,IACAM,EAAYY,iBAAiB,CAAC,CAAEC,SAAU,CAAC,aAAc,aAAY,AAAC,GACtEd,GACD,IAGKe,EAAc,UACnB,MAAMb,EAAqBQ,WAAW,CAAC,CAAEC,MAAOlB,EAAKuB,OAAQtB,EAAKuB,OAAQ,CAAA,CAAI,EAC/E,EAgBA,MAd4BC,KAC3BlB,EACCf,EAAAkC,aAAA,CAACjC,EAAY,CACZkC,YAAaxB,EAAE,iCACfyB,MAAOzB,EAAE,kCACT0B,QAAQ,SACRC,UAAWA,IAAMR,IACjBS,SAAUA,IAAMxB,GAAW,EAE1BJ,EAAE,4DAGN,CAGD\"}"}