{"code":"function module(e,o,t){let n,l,r,m,a,c,i,s,d,p;t.link(\"@rocket.chat/core-typings\",{isDirectMessageRoom(e){n=e},isVoipRoom(e){l=e}},0),t.link(\"@rocket.chat/ui-contexts\",{useLayout(e){r=e},useSetting(e){m=e}},1),t.link(\"react\",{default(e){a=e},lazy(e){c=e},memo(e){i=e},useMemo(e){s=e}},2),t.link(\"../../../components/Header\",{HeaderToolbar(e){d=e}},3),t.link(\"../../../components/SidebarToggler\",{default(e){p=e}},4);let u=c(()=>t.dynamicImport(\"./Omnichannel/OmnichannelRoomHeader\")),E=c(()=>t.dynamicImport(\"./Omnichannel/VoipRoomHeader\")),y=c(()=>t.dynamicImport(\"./RoomHeaderE2EESetup\")),g=c(()=>t.dynamicImport(\"./DirectRoomHeader\")),k=c(()=>t.dynamicImport(\"./RoomHeader\"));t.exportDefault(i(e=>{var o,t;let{room:c}=e,{isMobile:i,isEmbedded:H,showTopNavbarEmbeddedLayout:R}=r(),h=!!c.encrypted,I=m(\"E2E_Allow_Unencrypted_Messages\"),f=s(()=>({start:i&&a.createElement(d,null,a.createElement(p,null))}),[i]);return H&&!R?null:\"l\"===c.t?a.createElement(u,{slots:f}):l(c)?a.createElement(E,{slots:f,room:c}):h&&!I?a.createElement(y,{room:c,topic:c.topic,slots:f}):n(c)&&(null!==(o=null===(t=c.uids)||void 0===t?void 0:t.length)&&void 0!==o?o:0)<3?a.createElement(g,{slots:f,room:c}):a.createElement(k,{room:c,topic:c.topic,slots:f})}))}","map":"{\"version\":3,\"sources\":[\"client/views/room/Header/Header.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom } from '@rocket.chat/core-typings';\\nimport { isDirectMessageRoom, isVoipRoom } from '@rocket.chat/core-typings';\\nimport { useLayout, useSetting } from '@rocket.chat/ui-contexts';\\nimport type { ReactElement } from 'react';\\nimport React, { lazy, memo, useMemo } from 'react';\\n\\nimport { HeaderToolbar } from '../../../components/Header';\\nimport SidebarToggler from '../../../components/SidebarToggler';\\n\\nconst OmnichannelRoomHeader = lazy(() => import('./Omnichannel/OmnichannelRoomHeader'));\\nconst VoipRoomHeader = lazy(() => import('./Omnichannel/VoipRoomHeader'));\\nconst RoomHeaderE2EESetup = lazy(() => import('./RoomHeaderE2EESetup'));\\nconst DirectRoomHeader = lazy(() => import('./DirectRoomHeader'));\\nconst RoomHeader = lazy(() => import('./RoomHeader'));\\n\\ntype HeaderProps<T> = {\\n\\troom: T;\\n};\\n\\nconst Header = ({ room }: HeaderProps<IRoom>): ReactElement | null => {\\n\\tconst { isMobile, isEmbedded, showTopNavbarEmbeddedLayout } = useLayout();\\n\\tconst encrypted = Boolean(room.encrypted);\\n\\tconst unencryptedMessagesAllowed = useSetting<boolean>('E2E_Allow_Unencrypted_Messages');\\n\\tconst shouldDisplayE2EESetup = encrypted && !unencryptedMessagesAllowed;\\n\\n\\tconst slots = useMemo(\\n\\t\\t() => ({\\n\\t\\t\\tstart: isMobile && (\\n\\t\\t\\t\\t<HeaderToolbar>\\n\\t\\t\\t\\t\\t<SidebarToggler />\\n\\t\\t\\t\\t</HeaderToolbar>\\n\\t\\t\\t),\\n\\t\\t}),\\n\\t\\t[isMobile],\\n\\t);\\n\\n\\tif (isEmbedded && !showTopNavbarEmbeddedLayout) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\tif (room.t === 'l') {\\n\\t\\treturn <OmnichannelRoomHeader slots={slots} />;\\n\\t}\\n\\n\\tif (isVoipRoom(room)) {\\n\\t\\treturn <VoipRoomHeader slots={slots} room={room} />;\\n\\t}\\n\\n\\tif (shouldDisplayE2EESetup) {\\n\\t\\treturn <RoomHeaderE2EESetup room={room} topic={room.topic} slots={slots} />;\\n\\t}\\n\\n\\tif (isDirectMessageRoom(room) && (room.uids?.length ?? 0) < 3) {\\n\\t\\treturn <DirectRoomHeader slots={slots} room={room} />;\\n\\t}\\n\\n\\treturn <RoomHeader room={room} topic={room.topic} slots={slots} />;\\n};\\n\\nexport default memo(Header);\\n\",null],\"names\":[\"isDirectMessageRoom\",\"isVoipRoom\",\"useLayout\",\"useSetting\",\"React\",\"lazy\",\"memo\",\"useMemo\",\"HeaderToolbar\",\"SidebarToggler\",\"module\",\"link\",\"v\",\"default\",\"OmnichannelRoomHeader\",\"dynamicImport\",\"VoipRoomHeader\",\"RoomHeaderE2EESetup\",\"DirectRoomHeader\",\"RoomHeader\",\"exportDefault\",\"_ref\",\"_room$uids$length\",\"_room$uids\",\"room\",\"isMobile\",\"isEmbedded\",\"showTopNavbarEmbeddedLayout\",\"encrypted\",\"Boolean\",\"unencryptedMessagesAllowed\",\"slots\",\"start\",\"createElement\",\"t\",\"topic\",\"uids\",\"length\"],\"mappings\":\"2BACAA,EAASC,EAAmEC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA9CC,EAAYC,IAAA,CAAA,4BAAiC,CAACX,oBAAAY,CAAA,EAAAZ,EAAAY,CAAA,EAAAX,WAAAW,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,2BAAA,CAAAT,UAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,WAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,KAAAO,CAAA,EAAAP,EAAAO,CAAA,EAAAN,KAAAM,CAAA,EAAAN,EAAAM,CAAA,EAAAL,QAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,6BAAA,CAAAH,cAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,qCAAA,CAAAE,QAAAD,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAQ5E,IAAME,EAAwBT,EAAK,IAAMK,EAAAK,aAAA,CAAO,wCAC1CC,EAAiBX,EAAK,IAAMK,EAAAK,aAAA,CAAO,iCACnCE,EAAsBZ,EAAK,IAAMK,EAAAK,aAAA,CAAO,0BACxCG,EAAmBb,EAAK,IAAMK,EAAAK,aAAA,CAAO,uBACrCI,EAAad,EAAK,IAAMK,EAAAK,aAAA,CAAO,iBAZrCL,EAAOU,aAAE,CA0DMd,EAxCAe,IAAsD,IAAAC,EAAAC,EAAA,GAArD,CAAEC,KAAAA,CAAAA,CAA0B,CAAAH,EACrC,CAAEI,SAAAA,CAAQ,CAAEC,WAAAA,CAAU,CAAEC,4BAAAA,CAAAA,CAA6B,CAAGzB,IACxD0B,EAAYC,CAAAA,CAAQL,EAAKI,SAAS,CAClCE,EAA6B3B,EAAoB,kCAGjD4B,EAAQxB,EACb,IAAO,CAAA,CACNyB,MAAOP,GACNrB,EAAA6B,aAAA,CAACzB,EAAa,KACbJ,EAAA6B,aAAA,CAACxB,EAAc,SAIlB,CAACgB,EAAS,SAGX,AAAIC,GAAc,CAACC,EACX,KAGJH,AAAW,MAAXA,EAAKU,CAAC,CACF9B,EAAA6B,aAAA,CAACnB,EAAqB,CAACiB,MAAOA,CAAM,GAGxC9B,EAAWuB,GACPpB,EAAA6B,aAAA,CAACjB,EAAc,CAACe,MAAOA,EAAOP,KAAMA,CAAK,GAtBlBI,GAAa,CAACE,EA0BrC1B,EAAA6B,aAAA,CAAChB,EAAmB,CAACO,KAAMA,EAAMW,MAAOX,EAAKW,KAAM,CAACJ,MAAOA,CAAM,GAGrE/B,EAAoBwB,IAAS,CAAA,AAAkB,OAAlBF,CAAAA,EAAA,AAAU,OAAVC,CAAAA,EAACC,EAAKY,IAAI,AAAJA,GAAIb,AAAA,KAAA,IAAAA,EAAA,KAAA,EAATA,EAAWc,MAAM,AAANA,GAAMf,AAAA,KAAA,IAAAA,EAAAA,EAAI,CAAA,EAAK,EACpDlB,EAAA6B,aAAA,CAACf,EAAgB,CAACa,MAAOA,EAAOP,KAAMA,CAAK,GAG5CpB,EAAA6B,aAAA,CAACd,EAAU,CAACK,KAAMA,EAAMW,MAAOX,EAAKW,KAAM,CAACJ,MAAOA,CAAM,EAChE\"}"}