{"code":"function module(e,t,n){let r,s,o,l;n.export({useUserData:()=>u}),n.link(\"react\",{useContext(e){r=e},useMemo(e){s=e}},0),n.link(\"use-sync-external-store/shim\",{useSyncExternalStore(e){o=e}},1),n.link(\"../contexts/UserPresenceContext\",{UserPresenceContext(e){l=e}},2);let u=e=>{let t=r(l),{subscribe:n,get:u}=s(()=>{var n;return null!==(n=null==t?void 0:t.queryUserData(e))&&void 0!==n?n:{subscribe:()=>()=>void 0,get:()=>void 0}},[t,e]);return o(n,u)}}","map":"{\"version\":3,\"sources\":[\"client/hooks/useUserData.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useContext, useMemo } from 'react';\\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\\n\\nimport { UserPresenceContext } from '../contexts/UserPresenceContext';\\nimport type { UserPresence } from '../lib/presence';\\n\\n/**\\n * Hook to fetch and subscribe users data\\n *\\n * @param uid - User Id\\n * @returns Users data: status, statusText, username, name\\n * @public\\n */\\nexport const useUserData = (uid: string): UserPresence | undefined => {\\n\\tconst userPresence = useContext(UserPresenceContext);\\n\\n\\tconst { subscribe, get } = useMemo(\\n\\t\\t() => userPresence?.queryUserData(uid) ?? { subscribe: () => () => undefined, get: () => undefined },\\n\\t\\t[userPresence, uid],\\n\\t);\\n\\n\\treturn useSyncExternalStore(subscribe, get);\\n};\\n\",null],\"names\":[\"useContext\",\"useMemo\",\"useSyncExternalStore\",\"UserPresenceContext\",\"module\",\"export\",\"useUserData\",\"link\",\"v\",\"uid\",\"userPresence\",\"subscribe\",\"get\",\"_userPresence$queryUs\",\"queryUserData\",\"undefined\"],\"mappings\":\"2BAA4CA,EAAAC,EAAAC,EAAAC,EAA5CC,EAAOC,MAAE,CAAA,CAAAC,YAAYA,IAASA,CAAM,GAAQF,EAAAG,IAAA,CAAA,QAAA,CAAAP,WAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,QAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,+BAAA,CAAAL,qBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,kCAAA,CAAAJ,oBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAarC,IAAMF,EAAeG,IAC3B,IAAMC,EAAeV,EAAWG,GAE1B,CAAEQ,UAAAA,CAAS,CAAEC,IAAAA,CAAAA,CAAK,CAAGX,EAC1B,KAAA,IAAAY,EAAA,OAAA,AAAsC,OAAtCA,CAAAA,EAAMH,MAAAA,EAAY,KAAA,EAAZA,EAAcI,aAAa,CAACL,EAAG,GAACI,AAAA,KAAA,IAAAA,EAAAA,EAAI,CAAEF,UAAWA,IAAM,IAAMI,KAAAA,EAAWH,IAAKA,IAAMG,KAAAA,CAAS,CAAE,EACpG,CAACL,EAAcD,EAAI,EAGpB,OAAOP,EAAqBS,EAAWC,EACxC\"}"}