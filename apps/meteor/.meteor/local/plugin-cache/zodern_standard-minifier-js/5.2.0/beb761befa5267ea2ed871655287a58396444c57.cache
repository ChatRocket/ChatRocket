{"code":"function module(e,l,t){let n,i,o,a,u,r,s;let c=[\"phoneNumber\"];t.link(\"@babel/runtime/helpers/extends\",{default(e){n=e}},0),t.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default(e){i=e}},1),t.export({VoipInfoCallButton:()=>d}),t.link(\"@rocket.chat/fuselage\",{Button(e){o=e}},0),t.link(\"react\",{default(e){a=e}},1),t.link(\"react-i18next\",{useTranslation(e){u=e}},2),t.link(\"../../../../../contexts/CallContext\",{useVoipOutboundStates(e){r=e}},3),t.link(\"../../../../../hooks/useDialModal\",{useDialModal(e){s=e}},4);let d=e=>{let{phoneNumber:l}=e,t=i(e,c),{t:d}=u(),{openDialModal:p}=s(),{outBoundCallsAllowed:b,outBoundCallsEnabledForUser:k}=r();return a.createElement(o,n({},t,{onClick:()=>p({initialValue:l}),disabled:!k||!l,title:d(b?\"Call_number\":\"Call_number_premium_only\"),display:\"flex\",justifyContent:\"center\",fontSize:\"p2\",icon:\"phone\"}),d(\"Call\"))}}","map":"{\"version\":3,\"sources\":[\"client/views/omnichannel/directory/calls/contextualBar/VoipInfoCallButton.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { Button } from '@rocket.chat/fuselage';\\nimport type { ComponentProps, ReactElement } from 'react';\\nimport React from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport { useVoipOutboundStates } from '../../../../../contexts/CallContext';\\nimport { useDialModal } from '../../../../../hooks/useDialModal';\\n\\ntype VoipInfoCallButtonProps = Exclude<\\n\\tComponentProps<typeof Button>,\\n\\t'onClick' | 'disabled' | 'display' | 'justifyContent' | 'fontSize' | 'title'\\n> & {\\n\\tphoneNumber: string;\\n};\\n\\nexport const VoipInfoCallButton = ({ phoneNumber, ...props }: VoipInfoCallButtonProps): ReactElement => {\\n\\tconst { t } = useTranslation();\\n\\n\\tconst { openDialModal } = useDialModal();\\n\\n\\tconst { outBoundCallsAllowed, outBoundCallsEnabledForUser } = useVoipOutboundStates();\\n\\n\\treturn (\\n\\t\\t<Button\\n\\t\\t\\t{...props} // this props are injected by ButtonGroup\\n\\t\\t\\tonClick={(): void => openDialModal({ initialValue: phoneNumber })}\\n\\t\\t\\tdisabled={!outBoundCallsEnabledForUser || !phoneNumber}\\n\\t\\t\\ttitle={outBoundCallsAllowed ? t('Call_number') : t('Call_number_premium_only')}\\n\\t\\t\\tdisplay='flex'\\n\\t\\t\\tjustifyContent='center'\\n\\t\\t\\tfontSize='p2'\\n\\t\\t\\ticon='phone'\\n\\t\\t>\\n\\t\\t\\t{t('Call')}\\n\\t\\t</Button>\\n\\t);\\n};\\n\",null],\"names\":[\"_extends\",\"_objectWithoutProperties\",\"Button\",\"React\",\"useTranslation\",\"useVoipOutboundStates\",\"useDialModal\",\"module\",\"link\",\"default\",\"v\",\"export\",\"VoipInfoCallButton\",\"_ref\",\"phoneNumber\",\"props\",\"_excluded\",\"t\",\"openDialModal\",\"outBoundCallsAllowed\",\"outBoundCallsEnabledForUser\",\"createElement\",\"onClick\",\"initialValue\",\"disabled\",\"title\",\"display\",\"justifyContent\",\"fontSize\",\"icon\"],\"mappings\":\"2BAAAA,EAA+CC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,wBAAtCC,EAAQC,IAAM,CAAA,iCAAwB,CAAAC,QAAAC,CAAA,EAAAV,EAAAU,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,iDAAA,CAAAC,QAAAC,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAA/CH,EAAOI,MAAE,CAAA,CAAMC,mBAAQA,IAAAA,CAAwB,GAAAL,EAAAC,IAAA,CAAA,wBAAA,CAAAN,OAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAC,QAAAC,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,gBAAA,CAAAJ,eAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,sCAAA,CAAAH,sBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,oCAAA,CAAAF,aAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAexC,IAAME,EAAqBC,IAAqE,GAApE,CAAEC,YAAAA,CAAAA,CAAgD,CAAAD,EAAhCE,EAAKd,EAAAY,EAAAG,GACnD,CAAEC,EAAAA,CAAAA,CAAG,CAAGb,IAER,CAAEc,cAAAA,CAAAA,CAAe,CAAGZ,IAEpB,CAAEa,qBAAAA,CAAoB,CAAEC,4BAAAA,CAAAA,CAA6B,CAAGf,IAE9D,OACCF,EAAAkB,aAAA,CAACnB,EAAMF,EAAA,CAAA,EACFe,EAAK,CACTO,QAASA,IAAYJ,EAAc,CAAEK,aAAcT,CAAW,GAC9DU,SAAU,CAACJ,GAA+B,CAACN,EAC3CW,KAAK,CAAyBR,EAAE,AAAzBE,EAAyB,cAAmB,4BACnDO,QAAQ,OACRC,eAAe,SACfC,SAAS,KACTC,KAAK,OAAO,GAEXZ,EAAE,QAGN\"}"}