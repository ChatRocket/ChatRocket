{"code":"function module(e,t,r){r.link(\"@babel/runtime/regenerator\",{default:function(e){n=e}},0),r.link(\"@babel/runtime/helpers/createClass\",{default:function(e){i=e}},1),r.link(\"@babel/runtime/helpers/inheritsLoose\",{default:function(e){s=e}},2),r.export({ReadStateManager:function(){return h}}),r.link(\"@rocket.chat/emitter\",{Emitter:function(e){o=e}},0),r.link(\"meteor/meteor\",{Meteor:function(e){a=e}},1),r.link(\"../../../app/models/client\",{ChatMessage:function(e){d=e}},2),r.link(\"../../../app/ui-utils/client/lib/LegacyRoomManager\",{LegacyRoomManager:function(e){u=e}},3),r.link(\"../../../app/ui-utils/client/lib/RoomHistoryManager\",{RoomHistoryManager:function(e){c=e}},4),r.link(\"../../../app/utils/client/lib/SDKClient\",{sdk:function(e){l=e}},5),r.link(\"../../../lib/utils/highOrderFunctions\",{withDebouncing:function(e){f=e}},6);var n,i,s,o,a,d,u,c,l,f,h=function(e){function t(t){var r;return(r=e.call(this)||this).rid=void 0,r.firstUnreadRecordId=void 0,r.subscription=void 0,r.onUnreadStateChange=function(e){return r.on(\"unread-state-change\",e)},r.getFirstUnreadRecordId=function(){return r.firstUnreadRecordId},r.handleWindowEvents=function(){var e=function(){r.attemptMarkAsRead()},t=function(e){\"Escape\"===e.key&&(r.markAsRead(),r.updateFirstUnreadRecordId())};return window.addEventListener(\"focus\",e),window.addEventListener(\"keyup\",t),function(){window.removeEventListener(\"focus\",e),window.removeEventListener(\"keyup\",t)}},r.debouncedMarkAsRead=f({wait:1e3})(function(){try{return r.markAsRead()}catch(e){console.error(e)}}),r.rid=t,r}s(t,e);var r=t.prototype;return r.getRid=function(){return this.rid},r.updateSubscription=function(e){if(e){var t,r=!this.subscription;this.subscription=e,null===(t=u.getOpenedRoomByRid(this.rid))||void 0===t||t.unreadSince.set(this.subscription.ls);var n=this.subscription,i=n.unread,s=n.alert;if(i||s){if(r){this.updateFirstUnreadRecordId();return}document.hasFocus()&&this.firstUnreadRecordId||this.updateFirstUnreadRecordId()}}},r.updateFirstUnreadRecordId=function(){var e,t,r=this;if(null!==(e=this.subscription)&&void 0!==e&&e.ls){var n=d.findOne({rid:this.subscription.rid,ts:{$gt:this.subscription.ls},\"u._id\":{$ne:null!==(t=a.userId())&&void 0!==t?t:void 0}},{sort:{ts:1}});this.setFirstUnreadRecordId(null==n?void 0:n._id),c.once(\"loaded-messages\",function(){return r.updateFirstUnreadRecordId()})}},r.setFirstUnreadRecordId=function(e){this.firstUnreadRecordId=e,this.emit(\"unread-state-change\",this.firstUnreadRecordId)},r.clearUnreadMark=function(){this.setFirstUnreadRecordId(void 0)},r.isUnreadMarkVisible=function(){var e;return!!this.unreadMark&&this.unreadMark.offsetTop>((null===(e=this.unreadMark.offsetParent)||void 0===e?void 0:e.scrollTop)||0)},r.attemptMarkAsRead=function(){var e=this.subscription||{},t=e.alert,r=e.unread;if(!(!t&&0===r||!document.hasFocus()||this.unreadMark&&!this.isUnreadMarkVisible()||c.getRoom(this.rid).unreadNotLoaded.get()>0))return this.markAsRead()},r.markAsRead=function(){var e=this;return n.async(function(t){for(;;)switch(t.prev=t.next){case 0:if(this.rid){t.next=2;break}return t.abrupt(\"return\");case 2:return t.abrupt(\"return\",l.rest.post(\"/v1/subscriptions.read\",{rid:this.rid}).then(function(){c.getRoom(e.rid).unreadNotLoaded.set(0)}));case 3:case\"end\":return t.stop()}},null,this,null,Promise)},i(t,[{key:\"unreadMark\",get:function(){return document.querySelector(\".rcx-message-divider--unread\")}}])}(o)}","map":"{\"version\":3,\"sources\":[\"client/lib/chats/readStateManager.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\\nimport { Emitter } from '@rocket.chat/emitter';\\nimport { Meteor } from 'meteor/meteor';\\n\\nimport { ChatMessage } from '../../../app/models/client';\\nimport { LegacyRoomManager } from '../../../app/ui-utils/client/lib/LegacyRoomManager';\\nimport { RoomHistoryManager } from '../../../app/ui-utils/client/lib/RoomHistoryManager';\\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\\nimport { withDebouncing } from '../../../lib/utils/highOrderFunctions';\\n\\nexport class ReadStateManager extends Emitter {\\n\\tprivate rid: IRoom['_id'];\\n\\n\\tprivate firstUnreadRecordId?: IMessage['_id'];\\n\\n\\tprivate subscription?: ISubscription;\\n\\n\\tpublic constructor(rid: IRoom['_id']) {\\n\\t\\tsuper();\\n\\t\\tthis.rid = rid;\\n\\t}\\n\\n\\tpublic getRid() {\\n\\t\\treturn this.rid;\\n\\t}\\n\\n\\t// TODO: Use ref to get unreadMark\\n\\t// private unreadMark?: HTMLElement;\\n\\tprivate get unreadMark() {\\n\\t\\treturn document.querySelector<HTMLElement>('.rcx-message-divider--unread');\\n\\t}\\n\\n\\tpublic onUnreadStateChange = (callback: () => void): (() => void) => {\\n\\t\\treturn this.on('unread-state-change', callback);\\n\\t};\\n\\n\\tpublic getFirstUnreadRecordId = () => {\\n\\t\\treturn this.firstUnreadRecordId;\\n\\t};\\n\\n\\tpublic updateSubscription(subscription?: ISubscription) {\\n\\t\\tif (!subscription) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst firstUpdate = !this.subscription;\\n\\n\\t\\tthis.subscription = subscription;\\n\\t\\tLegacyRoomManager.getOpenedRoomByRid(this.rid)?.unreadSince.set(this.subscription.ls);\\n\\n\\t\\tconst { unread, alert } = this.subscription;\\n\\t\\tif (!unread && !alert) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (firstUpdate) {\\n\\t\\t\\tthis.updateFirstUnreadRecordId();\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (document.hasFocus() && this.firstUnreadRecordId) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.updateFirstUnreadRecordId();\\n\\t}\\n\\n\\tprivate updateFirstUnreadRecordId() {\\n\\t\\tif (!this.subscription?.ls) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst firstUnreadRecord = ChatMessage.findOne(\\n\\t\\t\\t{\\n\\t\\t\\t\\t'rid': this.subscription.rid,\\n\\t\\t\\t\\t'ts': {\\n\\t\\t\\t\\t\\t$gt: this.subscription.ls,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t'u._id': {\\n\\t\\t\\t\\t\\t$ne: Meteor.userId() ?? undefined,\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tsort: {\\n\\t\\t\\t\\t\\tts: 1,\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t);\\n\\n\\t\\tthis.setFirstUnreadRecordId(firstUnreadRecord?._id);\\n\\n\\t\\tRoomHistoryManager.once('loaded-messages', () => this.updateFirstUnreadRecordId());\\n\\t}\\n\\n\\tprivate setFirstUnreadRecordId(firstUnreadRecordId: string | undefined) {\\n\\t\\tthis.firstUnreadRecordId = firstUnreadRecordId;\\n\\t\\tthis.emit('unread-state-change', this.firstUnreadRecordId);\\n\\t}\\n\\n\\tpublic clearUnreadMark() {\\n\\t\\tthis.setFirstUnreadRecordId(undefined);\\n\\t}\\n\\n\\tpublic handleWindowEvents = (): (() => void) => {\\n\\t\\tconst handleWindowFocus = () => {\\n\\t\\t\\tthis.attemptMarkAsRead();\\n\\t\\t};\\n\\n\\t\\tconst handleWindowKeyUp = (event: KeyboardEvent) => {\\n\\t\\t\\tif (event.key === 'Escape') {\\n\\t\\t\\t\\tthis.markAsRead();\\n\\t\\t\\t\\tthis.updateFirstUnreadRecordId();\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\twindow.addEventListener('focus', handleWindowFocus);\\n\\t\\twindow.addEventListener('keyup', handleWindowKeyUp);\\n\\n\\t\\treturn () => {\\n\\t\\t\\twindow.removeEventListener('focus', handleWindowFocus);\\n\\t\\t\\twindow.removeEventListener('keyup', handleWindowKeyUp);\\n\\t\\t};\\n\\t};\\n\\n\\tprivate isUnreadMarkVisible(): boolean {\\n\\t\\tif (!this.unreadMark) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn this.unreadMark.offsetTop > (this.unreadMark.offsetParent?.scrollTop || 0);\\n\\t}\\n\\n\\t// This will only mark as read if the unread mark is visible\\n\\tpublic attemptMarkAsRead() {\\n\\t\\tconst { alert, unread } = this.subscription || {};\\n\\t\\tif (!alert && unread === 0) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (!document.hasFocus()) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (this.unreadMark && !this.isUnreadMarkVisible()) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\t// if there are unloaded unread messages, don't mark as read\\n\\t\\tif (RoomHistoryManager.getRoom(this.rid).unreadNotLoaded.get() > 0) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\treturn this.markAsRead();\\n\\t}\\n\\n\\tpublic debouncedMarkAsRead = withDebouncing({ wait: 1000 })(() => {\\n\\t\\ttry {\\n\\t\\t\\treturn this.markAsRead();\\n\\t\\t} catch (e) {\\n\\t\\t\\tconsole.error(e);\\n\\t\\t}\\n\\t});\\n\\n\\t// this will always mark as read.\\n\\tpublic async markAsRead() {\\n\\t\\tif (!this.rid) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\treturn sdk.rest.post('/v1/subscriptions.read', { rid: this.rid }).then(() => {\\n\\t\\t\\tRoomHistoryManager.getRoom(this.rid).unreadNotLoaded.set(0);\\n\\t\\t});\\n\\t}\\n}\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"_createClass\",\"_inheritsLoose\",\"export\",\"ReadStateManager\",\"Emitter\",\"Meteor\",\"ChatMessage\",\"LegacyRoomManager\",\"RoomHistoryManager\",\"sdk\",\"withDebouncing\",\"_Emitter\",\"rid\",\"_this\",\"call\",\"firstUnreadRecordId\",\"subscription\",\"onUnreadStateChange\",\"callback\",\"on\",\"getFirstUnreadRecordId\",\"handleWindowEvents\",\"handleWindowFocus\",\"attemptMarkAsRead\",\"handleWindowKeyUp\",\"event\",\"key\",\"markAsRead\",\"updateFirstUnreadRecordId\",\"window\",\"addEventListener\",\"removeEventListener\",\"debouncedMarkAsRead\",\"wait\",\"e\",\"console\",\"error\",\"_proto\",\"prototype\",\"getRid\",\"updateSubscription\",\"_LegacyRoomManager$ge\",\"firstUpdate\",\"getOpenedRoomByRid\",\"unreadSince\",\"set\",\"ls\",\"_this$subscription\",\"unread\",\"alert\",\"document\",\"hasFocus\",\"_this$subscription2\",\"_Meteor$userId\",\"_this2\",\"firstUnreadRecord\",\"findOne\",\"$gt\",\"$ne\",\"userId\",\"undefined\",\"sort\",\"ts\",\"setFirstUnreadRecordId\",\"_id\",\"once\",\"emit\",\"clearUnreadMark\",\"isUnreadMarkVisible\",\"_this$unreadMark$offs\",\"unreadMark\",\"offsetTop\",\"offsetParent\",\"scrollTop\",\"_ref\",\"getRoom\",\"unreadNotLoaded\",\"get\",\"_this3\",\"async\",\"_context\",\"prev\",\"next\",\"abrupt\",\"rest\",\"post\",\"then\",\"stop\",\"Promise\",\"querySelector\"],\"mappings\":\"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\"}"}