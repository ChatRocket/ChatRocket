{"code":"function module(e,t,s){let a,n,l,o,u,r,i,c;s.export({useRemoveBusinessHour:()=>k}),s.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){a=e}},0),s.link(\"@rocket.chat/ui-contexts\",{useSetModal(e){n=e},useToastMessageDispatch(e){l=e},useMethod(e){o=e},useTranslation(e){u=e}},1),s.link(\"@tanstack/react-query\",{useQueryClient(e){r=e}},2),s.link(\"react\",{default(e){i=e}},3),s.link(\"../../components/GenericModal\",{default(e){c=e}},4);let k=()=>{let e=u(),t=n(),s=l(),k=o(\"livechat:removeBusinessHour\"),m=r(),d=a((a,n)=>{let l=async()=>{try{await k(a,n),s({type:\"success\",message:e(\"Business_Hour_Removed\")}),m.invalidateQueries([\"livechat-getBusinessHours\"])}catch(e){s({type:\"error\",message:e})}finally{t()}};t(i.createElement(c,{variant:\"danger\",onConfirm:l,onCancel:()=>t(),confirmText:e(\"Delete\")}))});return d}}","map":"{\"version\":3,\"sources\":[\"client/omnichannel/businessHours/useRemoveBusinessHour.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport { useSetModal, useToastMessageDispatch, useMethod, useTranslation } from '@rocket.chat/ui-contexts';\\nimport { useQueryClient } from '@tanstack/react-query';\\nimport React from 'react';\\n\\nimport GenericModal from '../../components/GenericModal';\\n\\nexport const useRemoveBusinessHour = () => {\\n\\tconst t = useTranslation();\\n\\tconst setModal = useSetModal();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst removeBusinessHour = useMethod('livechat:removeBusinessHour');\\n\\tconst queryClient = useQueryClient();\\n\\n\\tconst handleRemove = useMutableCallback((_id, type) => {\\n\\t\\tconst onDeleteBusinessHour = async () => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait removeBusinessHour(_id, type);\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Business_Hour_Removed') });\\n\\t\\t\\t\\tqueryClient.invalidateQueries(['livechat-getBusinessHours']);\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t} finally {\\n\\t\\t\\t\\tsetModal();\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\tsetModal(<GenericModal variant='danger' onConfirm={onDeleteBusinessHour} onCancel={() => setModal()} confirmText={t('Delete')} />);\\n\\t});\\n\\n\\treturn handleRemove;\\n};\\n\",null],\"names\":[\"useMutableCallback\",\"useSetModal\",\"useToastMessageDispatch\",\"useMethod\",\"useTranslation\",\"useQueryClient\",\"React\",\"GenericModal\",\"module\",\"export\",\"useRemoveBusinessHour\",\"link\",\"v\",\"default\",\"t\",\"setModal\",\"dispatchToastMessage\",\"removeBusinessHour\",\"queryClient\",\"handleRemove\",\"_id\",\"type\",\"onDeleteBusinessHour\",\"message\",\"invalidateQueries\",\"error\",\"createElement\",\"variant\",\"onConfirm\",\"onCancel\",\"confirmText\"],\"mappings\":\"2BAAiEA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAjEC,EAAOC,MAAE,CAAA,CAAAC,sBAA0BA,IAAAA,CAAA,GAA8BF,EAAAG,IAAA,CAAA,8BAAA,CAAAX,mBAAAY,CAAA,EAAAZ,EAAAY,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,2BAAA,CAAAV,YAAAW,CAAA,EAAAX,EAAAW,CAAA,EAAAV,wBAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,UAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,eAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,wBAAA,CAAAN,eAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,gCAAA,CAAAE,QAAAD,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAO1D,IAAMF,EAAwBA,KACpC,IAAMI,EAAIV,IACJW,EAAWd,IACXe,EAAuBd,IACvBe,EAAqBd,EAAU,+BAC/Be,EAAcb,IAEdc,EAAenB,EAAmB,CAACoB,EAAKC,KAC7C,IAAMC,EAAuB,UAC5B,GAAI,CACH,MAAML,EAAmBG,EAAKC,GAC9BL,EAAqB,CAAEK,KAAM,UAAWE,QAAST,EAAE,wBAAwB,GAC3EI,EAAYM,iBAAiB,CAAC,CAAC,4BAA4B,CAC5D,CAAE,MAAOC,EAAO,CACfT,EAAqB,CAAEK,KAAM,QAASE,QAASE,CAAK,EACrD,QAAU,CACTV,GACD,CACD,EAEAA,EAAST,EAAAoB,aAAA,CAACnB,EAAY,CAACoB,QAAQ,SAASC,UAAWN,EAAsBO,SAAUA,IAAMd,IAAYe,YAAahB,EAAE,SAAU,GAC/H,GAEA,OAAOK,CACR\"}"}