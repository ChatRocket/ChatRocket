{"code":"function module(e,r,n){var t,a,l,i,o,m,d,u,c,s,v,p,f,E,b,_,h,g,q,P,S,x,w,k,y,F,I,R,C,U,M,T,D,A,L,B=[\"value\"],G=[\"value\"];n.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default:function(e){t=e}},0),n.link(\"@babel/runtime/helpers/extends\",{default:function(e){a=e}},1),n.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(e){l=e}},2),n.link(\"@babel/runtime/regenerator\",{default:function(e){i=e}},3),n.link(\"@rocket.chat/fuselage\",{Accordion:function(e){o=e},Button:function(e){m=e},ButtonGroup:function(e){d=e},TextInput:function(e){u=e},TextAreaInput:function(e){c=e},Field:function(e){s=e},ToggleSwitch:function(e){v=e},FieldGroup:function(e){p=e},Box:function(e){f=e},Margins:function(e){E=e},NumberInput:function(e){b=e},PasswordInput:function(e){_=e},FieldLabel:function(e){h=e},FieldRow:function(e){g=e},FieldError:function(e){q=e},FieldHint:function(e){P=e}},0),n.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback:function(e){S=e},useUniqueId:function(e){x=e}},1),n.link(\"@rocket.chat/ui-contexts\",{useSetModal:function(e){w=e},useToastMessageDispatch:function(e){k=e},useRoute:function(e){y=e},useEndpoint:function(e){F=e}},2),n.link(\"react\",{default:function(e){I=e},useCallback:function(e){R=e}},3),n.link(\"react-hook-form\",{useForm:function(e){C=e},Controller:function(e){U=e}},4),n.link(\"react-i18next\",{useTranslation:function(e){M=e}},5),n.link(\"../../../../lib/emailValidator\",{validateEmail:function(e){T=e}},6),n.link(\"../../../components/AutoCompleteDepartment\",{default:function(e){D=e}},7),n.link(\"../../../components/GenericModal\",{default:function(e){A=e}},8),n.link(\"../../../components/Page\",{PageScrollableContentWithShadow:function(e){L=e}},9),n.exportDefault(function(e){var r,n,W,N,O,V,j,H,Y,z,J,K,Q,X,Z,$,ee,er,en=e.inboxData,et=M().t,ea=k(),el=w(),ei=y(\"admin-email-inboxes\"),eo=R(function(){return ei.push({})},[ei]),em=F(\"POST\",\"/v1/email-inbox\"),ed=F(\"DELETE\",\"/v1/email-inbox/:_id\",{_id:null!==(r=null==en?void 0:en._id)&&void 0!==r?r:\"\"}),eu=F(\"GET\",\"/v1/email-inbox.search\"),ec=C({defaultValues:{active:null===(n=null==en?void 0:en.active)||void 0===n||n,name:null==en?void 0:en.name,email:null==en?void 0:en.email,description:null==en?void 0:en.description,senderInfo:null==en?void 0:en.senderInfo,department:(null==en?void 0:en.department)||\"\",smtpServer:null==en?void 0:en.smtp.server,smtpPort:null!==(W=null==en?void 0:en.smtp.port)&&void 0!==W?W:587,smtpUsername:null==en?void 0:en.smtp.username,smtpPassword:null==en?void 0:en.smtp.password,smtpSecure:null!==(N=null==en?void 0:en.smtp.secure)&&void 0!==N&&N,imapServer:null==en?void 0:en.imap.server,imapPort:null!==(O=null==en?void 0:en.imap.port)&&void 0!==O?O:993,imapUsername:null==en?void 0:en.imap.username,imapPassword:null==en?void 0:en.imap.password,imapSecure:null!==(V=null==en?void 0:en.imap.secure)&&void 0!==V&&V,imapRetries:null!==(j=null==en?void 0:en.imap.maxRetries)&&void 0!==j?j:10},mode:\"all\"}),es=ec.control,ev=ec.handleSubmit,ep=ec.formState,ef=ep.errors,eE=ep.isDirty,eb=S(function(){el(I.createElement(A,{variant:\"danger\",onConfirm:function(){return i.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,i.awrap(ed());case 3:ea({type:\"success\",message:et(\"Email_Inbox_has_been_removed\")}),eo(),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),ea({type:\"error\",message:e.t0});case 10:return e.prev=10,el(null),e.finish(10);case 13:case\"end\":return e.stop()}},null,null,[[0,7,10,13]],Promise)},onCancel:function(){return el(null)},confirmText:et(\"Delete\")},et(\"You_will_not_be_able_to_recover_email_inbox\")))}),e_=S(function(e){var r,n,t,a,o,m,d,u,c,s,v,p,f,E,b,_,h,g,q,P;return i.async(function(S){for(;;)switch(S.prev=S.next){case 0:return r=e.active,n=e.name,t=e.email,a=e.description,o=e.senderInfo,m=e.department,d=e.smtpServer,u=e.smtpPort,c=e.smtpUsername,s=e.smtpPassword,v=e.smtpSecure,p=e.imapServer,f=e.imapPort,E=e.imapUsername,b=e.imapPassword,_=e.imapSecure,h=e.imapRetries,g={server:d,port:parseInt(u),username:c,password:s,secure:v},q={server:p,port:parseInt(f),username:E,password:b,secure:_,maxRetries:parseInt(h)},P=l(l(l({},(null==en?void 0:en._id)&&{_id:null==en?void 0:en._id}),{},{active:r,name:n,email:t,description:a,senderInfo:o},m&&{department:\"string\"==typeof m?m:m.value}),{},{smtp:g,imap:q}),S.prev=4,S.next=7,i.awrap(em(P));case 7:ea({type:\"success\",message:et(\"Email_Inbox_has_been_added\")}),eo(),S.next=14;break;case 11:S.prev=11,S.t0=S.catch(4),ea({type:\"error\",message:S.t0});case 14:case\"end\":return S.stop()}},null,null,[[4,11]],Promise)}),eh=S(function(e){var r;return i.async(function(n){for(;;)switch(n.prev=n.next){case 0:if(e){n.next=2;break}return n.abrupt(\"return\");case 2:if(T(e)){n.next=4;break}return n.abrupt(\"return\",et(\"error-invalid-email-address\"));case 4:return n.next=6,i.awrap(eu({email:e}));case 6:if(!(!(r=n.sent.emailInbox)||null!=en&&en._id&&r._id===(null==en?void 0:en._id))){n.next=10;break}return n.abrupt(\"return\");case 10:return n.abrupt(\"return\",et(\"Email_already_exists\"));case 11:case\"end\":return n.stop()}},null,null,null,Promise)}),eg=x(),eq=x(),eP=x(),eS=x(),ex=x(),ew=x(),ek=x(),ey=x(),eF=x(),eI=x(),eR=x(),eC=x(),eU=x(),eM=x(),eT=x(),eD=x(),eA=x();return I.createElement(L,null,I.createElement(f,{maxWidth:\"x600\",w:\"full\",alignSelf:\"center\"},I.createElement(o,null,I.createElement(o.Item,{defaultExpanded:!0,title:et(\"Inbox_Info\")},I.createElement(p,null,I.createElement(s,null,I.createElement(g,null,I.createElement(h,{htmlFor:eg},et(\"Active\")),I.createElement(U,{control:es,name:\"active\",render:function(e){var r=e.field,n=r.onChange,t=r.value,a=r.ref;return I.createElement(v,{id:eg,ref:a,checked:t,onChange:n})}}))),I.createElement(s,null,I.createElement(h,{htmlFor:eq,required:!0},et(\"Name\")),I.createElement(g,null,I.createElement(U,{name:\"name\",control:es,rules:{required:et(\"Required_field\",{field:et(\"Name\")})},render:function(e){var r,n=e.field;return I.createElement(u,a({id:eq},n,{error:null===(r=ef.name)||void 0===r?void 0:r.message,\"aria-required\":!0,\"aria-invalid\":!!ef.name,\"aria-describedby\":eq+\"-error\"}))}})),ef.name&&I.createElement(q,{\"aria-live\":\"assertive\",id:eq+\"-error\"},null===(H=ef.name)||void 0===H?void 0:H.message)),I.createElement(s,null,I.createElement(h,{htmlFor:eP,required:!0},et(\"Email\")),I.createElement(g,null,I.createElement(U,{name:\"email\",control:es,rules:{required:et(\"Required_field\",{field:et(\"Email\")}),validate:function(e){return eh(e)}},render:function(e){var r,n=e.field;return I.createElement(u,a({},n,{id:eP,error:null===(r=ef.email)||void 0===r?void 0:r.message,\"aria-required\":!0,\"aria-invalid\":!!ef.email,\"aria-describedby\":eP+\"-error\"}))}})),ef.email&&I.createElement(q,{\"aria-live\":\"assertive\",id:eP+\"-error\"},null===(Y=ef.email)||void 0===Y?void 0:Y.message)),I.createElement(s,null,I.createElement(h,{htmlFor:eS},et(\"Description\")),I.createElement(g,null,I.createElement(U,{name:\"description\",control:es,render:function(e){var r=e.field;return I.createElement(c,a({id:eS},r,{rows:4}))}}))),I.createElement(s,null,I.createElement(h,{htmlFor:ex},et(\"Sender_Info\")),I.createElement(g,null,I.createElement(U,{name:\"senderInfo\",control:es,render:function(e){var r=e.field;return I.createElement(u,a({id:ex},r,{\"aria-describedby\":ex+\"-hint\"}))}})),I.createElement(P,{id:ex+\"-hint\"},et(\"Will_Appear_In_From\"))),I.createElement(s,null,I.createElement(h,{htmlFor:ew},et(\"Department\")),I.createElement(g,null,I.createElement(U,{control:es,name:\"department\",render:function(e){var r=e.field,n=r.onChange,t=r.onBlur,a=r.name,l=r.value;return I.createElement(D,{id:ew,name:a,onBlur:t,value:l,onChange:n,\"aria-describedby\":ew+\"-hint\"})}})),I.createElement(P,{id:ew+\"-hint\"},et(\"Only_Members_Selected_Department_Can_View_Channel\"))))),I.createElement(o.Item,{defaultExpanded:!(null!=en&&en._id),title:et(\"Configure_Outgoing_Mail_SMTP\")},I.createElement(p,null,I.createElement(s,null,I.createElement(h,{htmlFor:ek,required:!0},et(\"Server\")),I.createElement(g,null,I.createElement(U,{name:\"smtpServer\",control:es,rules:{required:et(\"Required_field\",{field:et(\"Server\")})},render:function(e){var r,n=e.field;return I.createElement(u,a({id:ek},n,{error:null===(r=ef.smtpServer)||void 0===r?void 0:r.message,\"aria-required\":!0,\"aria-invalid\":!!ef.email,\"aria-describedby\":ek+\"-error\"}))}})),ef.smtpServer&&I.createElement(q,{\"aria-live\":\"assertive\",id:ek+\"-error\"},null===(z=ef.smtpServer)||void 0===z?void 0:z.message)),I.createElement(s,null,I.createElement(h,{htmlFor:ey,required:!0},et(\"Port\")),I.createElement(g,null,I.createElement(U,{name:\"smtpPort\",control:es,rules:{required:et(\"Required_field\",{field:et(\"Port\")})},render:function(e){var r,n=e.field;return I.createElement(b,a({id:ey},n,{error:null===(r=ef.smtpPort)||void 0===r?void 0:r.message,\"aria-required\":!0,\"aria-invalid\":!!ef.email,\"aria-describedby\":ey+\"-error\"}))}})),ef.smtpPort&&I.createElement(q,{\"aria-live\":\"assertive\",id:ey+\"-error\"},null===(J=ef.smtpPort)||void 0===J?void 0:J.message)),I.createElement(s,null,I.createElement(h,{htmlFor:eF,required:!0},et(\"Username\")),I.createElement(g,null,I.createElement(U,{name:\"smtpUsername\",control:es,rules:{required:et(\"Required_field\",{field:et(\"Username\")})},render:function(e){var r,n=e.field;return I.createElement(u,a({id:eF},n,{error:null===(r=ef.smtpUsername)||void 0===r?void 0:r.message,\"aria-describedby\":eF+\"-error\",\"aria-required\":!0,\"aria-invalid\":!!ef.email}))}})),ef.smtpUsername&&I.createElement(q,{\"aria-live\":\"assertive\",id:eF+\"-error\"},null===(K=ef.smtpUsername)||void 0===K?void 0:K.message)),I.createElement(s,null,I.createElement(h,{htmlFor:eI,required:!0},et(\"Password\")),I.createElement(g,null,I.createElement(U,{name:\"smtpPassword\",control:es,rules:{required:et(\"Required_field\",{field:et(\"Password\")})},render:function(e){var r,n=e.field;return I.createElement(_,a({id:eI},n,{error:null===(r=ef.smtpPassword)||void 0===r?void 0:r.message,\"aria-describedby\":eI+\"-error\",\"aria-required\":!0,\"aria-invalid\":!!ef.email}))}})),ef.smtpPassword&&I.createElement(q,{\"aria-live\":\"assertive\",id:eI+\"-error\"},null===(Q=ef.smtpPassword)||void 0===Q?void 0:Q.message)),I.createElement(s,null,I.createElement(g,null,I.createElement(h,{htmlFor:eR},et(\"Connect_SSL_TLS\")),I.createElement(U,{control:es,name:\"smtpSecure\",render:function(e){var r=e.field,n=r.value,l=t(r,B);return I.createElement(v,a({id:eR},l,{checked:n}))}}))))),I.createElement(o.Item,{defaultExpanded:!(null!=en&&en._id),title:et(\"Configure_Incoming_Mail_IMAP\")},I.createElement(p,null,I.createElement(s,null,I.createElement(h,{htmlFor:eC,required:!0},et(\"Server\")),I.createElement(g,null,I.createElement(U,{name:\"imapServer\",control:es,rules:{required:et(\"Required_field\",{field:et(\"Server\")})},render:function(e){var r,n=e.field;return I.createElement(u,a({id:eC},n,{error:null===(r=ef.imapServer)||void 0===r?void 0:r.message,\"aria-describedby\":eC+\"-error\",\"aria-required\":!0,\"aria-invalid\":!!ef.email}))}})),ef.imapServer&&I.createElement(q,{\"aria-live\":\"assertive\",id:eC+\"-error\"},null===(X=ef.imapServer)||void 0===X?void 0:X.message)),I.createElement(s,null,I.createElement(h,{htmlFor:eU,required:!0},et(\"Port\")),I.createElement(g,null,I.createElement(U,{name:\"imapPort\",control:es,rules:{required:et(\"Required_field\",{field:et(\"Port\")})},render:function(e){var r,n=e.field;return I.createElement(b,a({id:eU},n,{error:null===(r=ef.imapPort)||void 0===r?void 0:r.message,\"aria-describedby\":eU+\"-error\",\"aria-required\":!0,\"aria-invalid\":!!ef.email}))}})),ef.imapPort&&I.createElement(q,{\"aria-live\":\"assertive\",id:eU+\"-error\"},null===(Z=ef.imapPort)||void 0===Z?void 0:Z.message)),I.createElement(s,null,I.createElement(h,{htmlFor:eM,required:!0},et(\"Username\")),I.createElement(g,null,I.createElement(U,{name:\"imapUsername\",control:es,rules:{required:et(\"Required_field\",{field:et(\"Username\")})},render:function(e){var r,n=e.field;return I.createElement(u,a({id:eM},n,{error:null===(r=ef.imapUsername)||void 0===r?void 0:r.message,\"aria-describedby\":eM+\"-error\",\"aria-required\":!0,\"aria-invalid\":!!ef.email}))}})),ef.imapUsername&&I.createElement(q,{\"aria-live\":\"assertive\",id:eM+\"-error\"},null===($=ef.imapUsername)||void 0===$?void 0:$.message)),I.createElement(s,null,I.createElement(h,{htmlFor:eT,required:!0},et(\"Password\")),I.createElement(g,null,I.createElement(U,{name:\"imapPassword\",control:es,rules:{required:et(\"Required_field\",{field:et(\"Password\")})},render:function(e){var r,n=e.field;return I.createElement(_,a({id:eT},n,{error:null===(r=ef.imapPassword)||void 0===r?void 0:r.message,\"aria-describedby\":eT+\"-error\",\"aria-required\":!0,\"aria-invalid\":!!ef.email}))}})),ef.imapPassword&&I.createElement(q,{\"aria-live\":\"assertive\",id:eT+\"-error\"},null===(ee=ef.imapPassword)||void 0===ee?void 0:ee.message)),I.createElement(s,null,I.createElement(h,{htmlFor:eD,required:!0},et(\"Max_Retry\")),I.createElement(g,null,I.createElement(U,{name:\"imapRetries\",control:es,rules:{required:et(\"Required_field\",{field:et(\"Max_Retry\")})},render:function(e){var r,n=e.field;return I.createElement(b,a({id:eD},n,{error:null===(r=ef.imapRetries)||void 0===r?void 0:r.message,\"aria-describedby\":eD+\"-error\",\"aria-required\":!0,\"aria-invalid\":!!ef.email}))}})),ef.imapRetries&&I.createElement(q,{\"aria-live\":\"assertive\",id:eD+\"-error\"},null===(er=ef.imapRetries)||void 0===er?void 0:er.message)),I.createElement(s,null,I.createElement(g,null,I.createElement(h,{htmlFor:eA},et(\"Connect_SSL_TLS\")),I.createElement(U,{control:es,name:\"imapSecure\",render:function(e){var r=e.field,n=r.value,l=t(r,G);return I.createElement(v,a({id:eA},l,{checked:n}))}}))))),I.createElement(s,null,I.createElement(g,null,I.createElement(d,{stretch:!0},I.createElement(m,{onClick:eo},et(\"Cancel\")),I.createElement(m,{disabled:!eE,primary:!0,onClick:ev(e_)},et(\"Save\")))),I.createElement(g,null,I.createElement(E,{blockStart:16},I.createElement(d,{stretch:!0},(null==en?void 0:en._id)&&I.createElement(m,{danger:!0,onClick:eb},et(\"Delete\")))))))))})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/emailInbox/EmailInboxForm.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IEmailInboxPayload } from '@rocket.chat/core-typings';\\nimport {\\n\\tAccordion,\\n\\tButton,\\n\\tButtonGroup,\\n\\tTextInput,\\n\\tTextAreaInput,\\n\\tField,\\n\\tToggleSwitch,\\n\\tFieldGroup,\\n\\tBox,\\n\\tMargins,\\n\\tNumberInput,\\n\\tPasswordInput,\\n\\tFieldLabel,\\n\\tFieldRow,\\n\\tFieldError,\\n\\tFieldHint,\\n} from '@rocket.chat/fuselage';\\nimport { useMutableCallback, useUniqueId } from '@rocket.chat/fuselage-hooks';\\nimport { useSetModal, useToastMessageDispatch, useRoute, useEndpoint } from '@rocket.chat/ui-contexts';\\nimport type { ReactElement } from 'react';\\nimport React, { useCallback } from 'react';\\nimport { useForm, Controller } from 'react-hook-form';\\nimport { useTranslation } from 'react-i18next';\\n\\nimport { validateEmail } from '../../../../lib/emailValidator';\\nimport AutoCompleteDepartment from '../../../components/AutoCompleteDepartment';\\nimport GenericModal from '../../../components/GenericModal';\\nimport { PageScrollableContentWithShadow } from '../../../components/Page';\\n\\nconst EmailInboxForm = ({ inboxData }: { inboxData?: IEmailInboxPayload }): ReactElement => {\\n\\tconst { t } = useTranslation();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst setModal = useSetModal();\\n\\tconst router = useRoute('admin-email-inboxes');\\n\\n\\tconst handleBack = useCallback(() => router.push({}), [router]);\\n\\n\\tconst saveEmailInbox = useEndpoint('POST', '/v1/email-inbox');\\n\\tconst deleteInboxAction = useEndpoint('DELETE', '/v1/email-inbox/:_id', { _id: inboxData?._id ?? '' });\\n\\tconst emailAlreadyExistsAction = useEndpoint('GET', '/v1/email-inbox.search');\\n\\n\\tconst {\\n\\t\\tcontrol,\\n\\t\\thandleSubmit,\\n\\t\\tformState: { errors, isDirty },\\n\\t} = useForm({\\n\\t\\tdefaultValues: {\\n\\t\\t\\tactive: inboxData?.active ?? true,\\n\\t\\t\\tname: inboxData?.name,\\n\\t\\t\\temail: inboxData?.email,\\n\\t\\t\\tdescription: inboxData?.description,\\n\\t\\t\\tsenderInfo: inboxData?.senderInfo,\\n\\t\\t\\tdepartment: inboxData?.department || '',\\n\\t\\t\\t// SMTP\\n\\t\\t\\tsmtpServer: inboxData?.smtp.server,\\n\\t\\t\\tsmtpPort: inboxData?.smtp.port ?? 587,\\n\\t\\t\\tsmtpUsername: inboxData?.smtp.username,\\n\\t\\t\\tsmtpPassword: inboxData?.smtp.password,\\n\\t\\t\\tsmtpSecure: inboxData?.smtp.secure ?? false,\\n\\t\\t\\t// IMAP\\n\\t\\t\\timapServer: inboxData?.imap.server,\\n\\t\\t\\timapPort: inboxData?.imap.port ?? 993,\\n\\t\\t\\timapUsername: inboxData?.imap.username,\\n\\t\\t\\timapPassword: inboxData?.imap.password,\\n\\t\\t\\timapSecure: inboxData?.imap.secure ?? false,\\n\\t\\t\\timapRetries: inboxData?.imap.maxRetries ?? 10,\\n\\t\\t},\\n\\t\\tmode: 'all',\\n\\t});\\n\\n\\tconst handleDelete = useMutableCallback(() => {\\n\\t\\tconst deleteInbox = async (): Promise<void> => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait deleteInboxAction();\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_removed') });\\n\\t\\t\\t\\thandleBack();\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t} finally {\\n\\t\\t\\t\\tsetModal(null);\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\tsetModal(\\n\\t\\t\\t<GenericModal variant='danger' onConfirm={deleteInbox} onCancel={(): void => setModal(null)} confirmText={t('Delete')}>\\n\\t\\t\\t\\t{t('You_will_not_be_able_to_recover_email_inbox')}\\n\\t\\t\\t</GenericModal>,\\n\\t\\t);\\n\\t});\\n\\n\\tconst handleSave = useMutableCallback(\\n\\t\\tasync ({\\n\\t\\t\\tactive,\\n\\t\\t\\tname,\\n\\t\\t\\temail,\\n\\t\\t\\tdescription,\\n\\t\\t\\tsenderInfo,\\n\\t\\t\\tdepartment,\\n\\t\\t\\tsmtpServer,\\n\\t\\t\\tsmtpPort,\\n\\t\\t\\tsmtpUsername,\\n\\t\\t\\tsmtpPassword,\\n\\t\\t\\tsmtpSecure,\\n\\t\\t\\timapServer,\\n\\t\\t\\timapPort,\\n\\t\\t\\timapUsername,\\n\\t\\t\\timapPassword,\\n\\t\\t\\timapSecure,\\n\\t\\t\\timapRetries,\\n\\t\\t}) => {\\n\\t\\t\\tconst smtp = {\\n\\t\\t\\t\\tserver: smtpServer,\\n\\t\\t\\t\\tport: parseInt(smtpPort),\\n\\t\\t\\t\\tusername: smtpUsername,\\n\\t\\t\\t\\tpassword: smtpPassword,\\n\\t\\t\\t\\tsecure: smtpSecure,\\n\\t\\t\\t};\\n\\n\\t\\t\\tconst imap = {\\n\\t\\t\\t\\tserver: imapServer,\\n\\t\\t\\t\\tport: parseInt(imapPort),\\n\\t\\t\\t\\tusername: imapUsername,\\n\\t\\t\\t\\tpassword: imapPassword,\\n\\t\\t\\t\\tsecure: imapSecure,\\n\\t\\t\\t\\tmaxRetries: parseInt(imapRetries),\\n\\t\\t\\t};\\n\\n\\t\\t\\tconst payload = {\\n\\t\\t\\t\\t...(inboxData?._id && { _id: inboxData?._id }),\\n\\t\\t\\t\\tactive,\\n\\t\\t\\t\\tname,\\n\\t\\t\\t\\temail,\\n\\t\\t\\t\\tdescription,\\n\\t\\t\\t\\tsenderInfo,\\n\\t\\t\\t\\t...(department && { department: typeof department === 'string' ? department : department.value }),\\n\\t\\t\\t\\tsmtp,\\n\\t\\t\\t\\timap,\\n\\t\\t\\t};\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait saveEmailInbox(payload);\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_added') });\\n\\t\\t\\t\\thandleBack();\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t}\\n\\t\\t},\\n\\t);\\n\\n\\tconst checkEmailExists = useMutableCallback(async (email) => {\\n\\t\\tif (!email) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (!validateEmail(email)) {\\n\\t\\t\\treturn t('error-invalid-email-address');\\n\\t\\t}\\n\\n\\t\\tconst { emailInbox } = await emailAlreadyExistsAction({ email });\\n\\n\\t\\tif (!emailInbox || (inboxData?._id && emailInbox._id === inboxData?._id)) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\treturn t('Email_already_exists');\\n\\t});\\n\\n\\tconst activeField = useUniqueId();\\n\\tconst nameField = useUniqueId();\\n\\tconst emailField = useUniqueId();\\n\\tconst descriptionField = useUniqueId();\\n\\tconst senderInfoField = useUniqueId();\\n\\tconst departmentField = useUniqueId();\\n\\n\\tconst smtpServerField = useUniqueId();\\n\\tconst smtpPortField = useUniqueId();\\n\\tconst smtpUsernameField = useUniqueId();\\n\\tconst smtpPasswordField = useUniqueId();\\n\\tconst smtpSecureField = useUniqueId();\\n\\n\\tconst imapServerField = useUniqueId();\\n\\tconst imapPortField = useUniqueId();\\n\\tconst imapUsernameField = useUniqueId();\\n\\tconst imapPasswordField = useUniqueId();\\n\\tconst imapRetriesField = useUniqueId();\\n\\tconst imapSecureField = useUniqueId();\\n\\n\\treturn (\\n\\t\\t<PageScrollableContentWithShadow>\\n\\t\\t\\t<Box maxWidth='x600' w='full' alignSelf='center'>\\n\\t\\t\\t\\t<Accordion>\\n\\t\\t\\t\\t\\t<Accordion.Item defaultExpanded title={t('Inbox_Info')}>\\n\\t\\t\\t\\t\\t\\t<FieldGroup>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={activeField}>{t('Active')}</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='active'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field: { onChange, value, ref } }): ReactElement => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ToggleSwitch id={activeField} ref={ref} checked={value} onChange={onChange} />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={nameField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Name')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='name'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Name') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={nameField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.name?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.name)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${nameField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.name && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${nameField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.name?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={emailField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Email')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='email'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trequired: t('Required_field', { field: t('Email') }),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalidate: (value) => checkEmailExists(value),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={emailField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.email?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${emailField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.email && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${emailField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.email?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={descriptionField}>{t('Description')}</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='description'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => <TextAreaInput id={descriptionField} {...field} rows={4} />}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={senderInfoField}>{t('Sender_Info')}</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='senderInfo'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => <TextInput id={senderInfoField} {...field} aria-describedby={`${senderInfoField}-hint`} />}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldHint id={`${senderInfoField}-hint`}>{t('Will_Appear_In_From')}</FieldHint>\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={departmentField}>{t('Department')}</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='department'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field: { onChange, onBlur, name, value } }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<AutoCompleteDepartment\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={departmentField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname={name}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonBlur={onBlur}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue={value}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonChange={onChange}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${departmentField}-hint`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldHint id={`${departmentField}-hint`}>{t('Only_Members_Selected_Department_Can_View_Channel')}</FieldHint>\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t</FieldGroup>\\n\\t\\t\\t\\t\\t</Accordion.Item>\\n\\t\\t\\t\\t\\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Outgoing_Mail_SMTP')}>\\n\\t\\t\\t\\t\\t\\t<FieldGroup>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={smtpServerField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Server')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='smtpServer'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Server') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={smtpServerField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.smtpServer?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${smtpServerField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpServer && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${smtpServerField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpServer?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={smtpPortField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Port')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='smtpPort'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Port') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<NumberInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={smtpPortField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.smtpPort?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${smtpPortField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpPort && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${smtpPortField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpPort?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={smtpUsernameField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Username')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='smtpUsername'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Username') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={smtpUsernameField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.smtpUsername?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${smtpUsernameField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpUsername && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${smtpUsernameField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpUsername?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={smtpPasswordField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Password')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='smtpPassword'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Password') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<PasswordInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={smtpPasswordField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.smtpPassword?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${smtpPasswordField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpPassword && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${smtpPasswordField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.smtpPassword?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={smtpSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='smtpSecure'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field: { value, ...field } }) => <ToggleSwitch id={smtpSecureField} {...field} checked={value} />}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t</FieldGroup>\\n\\t\\t\\t\\t\\t</Accordion.Item>\\n\\t\\t\\t\\t\\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Incoming_Mail_IMAP')}>\\n\\t\\t\\t\\t\\t\\t<FieldGroup>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={imapServerField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Server')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='imapServer'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Server') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={imapServerField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.imapServer?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${imapServerField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapServer && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${imapServerField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapServer?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={imapPortField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Port')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='imapPort'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Port') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<NumberInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={imapPortField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.imapPort?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${imapPortField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapPort && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${imapPortField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapPort?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={imapUsernameField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Username')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='imapUsername'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Username') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={imapUsernameField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.imapUsername?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${imapUsernameField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapUsername && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${imapUsernameField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapUsername?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={imapPasswordField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Password')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='imapPassword'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Password') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<PasswordInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={imapPasswordField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.imapPassword?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${imapPasswordField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapPassword && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${imapPasswordField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapPassword?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={imapRetriesField} required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Max_Retry')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='imapRetries'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trules={{ required: t('Required_field', { field: t('Max_Retry') }) }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field }) => (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<NumberInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid={imapRetriesField}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{...field}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errors.imapRetries?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-describedby={`${imapRetriesField}-error`}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-required={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taria-invalid={Boolean(errors.email)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapRetries && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldError aria-live='assertive' id={`${imapRetriesField}-error`}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{errors.imapRetries?.message}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</FieldError>\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<FieldLabel htmlFor={imapSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Controller\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcontrol={control}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname='imapSecure'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trender={({ field: { value, ...field } }) => <ToggleSwitch id={imapSecureField} {...field} checked={value} />}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t\\t\\t</FieldGroup>\\n\\t\\t\\t\\t\\t</Accordion.Item>\\n\\t\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t<ButtonGroup stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Button onClick={handleBack}>{t('Cancel')}</Button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Button disabled={!isDirty} primary onClick={handleSubmit(handleSave)}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Save')}\\n\\t\\t\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t\\t<Margins blockStart={16}>\\n\\t\\t\\t\\t\\t\\t\\t\\t<ButtonGroup stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{inboxData?._id && (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Button danger onClick={handleDelete}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{t('Delete')}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t\\t\\t\\t</Margins>\\n\\t\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t</Accordion>\\n\\t\\t\\t</Box>\\n\\t\\t</PageScrollableContentWithShadow>\\n\\t);\\n};\\n\\nexport default EmailInboxForm;\\n\",null],\"names\":[\"_objectWithoutProperties\",\"_extends\",\"_objectSpread\",\"_regeneratorRuntime\",\"Accordion\",\"Button\",\"ButtonGroup\",\"TextInput\",\"TextAreaInput\",\"Field\",\"ToggleSwitch\",\"FieldGroup\",\"Box\",\"Margins\",\"NumberInput\",\"PasswordInput\",\"FieldLabel\",\"FieldRow\",\"FieldError\",\"FieldHint\",\"useMutableCallback\",\"useUniqueId\",\"useSetModal\",\"useToastMessageDispatch\",\"useRoute\",\"useEndpoint\",\"React\",\"useCallback\",\"useForm\",\"Controller\",\"useTranslation\",\"validateEmail\",\"AutoCompleteDepartment\",\"GenericModal\",\"PageScrollableContentWithShadow\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"_inboxData$_id\",\"_inboxData$active\",\"_inboxData$smtp$port\",\"_inboxData$smtp$secur\",\"_inboxData$imap$port\",\"_inboxData$imap$secur\",\"_inboxData$imap$maxRe\",\"_errors$name2\",\"_errors$email2\",\"_errors$smtpServer2\",\"_errors$smtpPort2\",\"_errors$smtpUsername2\",\"_errors$smtpPassword2\",\"_errors$imapServer2\",\"_errors$imapPort2\",\"_errors$imapUsername2\",\"_errors$imapPassword2\",\"_errors$imapRetries2\",\"inboxData\",\"t\",\"_useTranslation\",\"dispatchToastMessage\",\"setModal\",\"router\",\"handleBack\",\"push\",\"saveEmailInbox\",\"deleteInboxAction\",\"_id\",\"emailAlreadyExistsAction\",\"_useForm\",\"defaultValues\",\"active\",\"name\",\"email\",\"description\",\"senderInfo\",\"department\",\"smtpServer\",\"smtp\",\"server\",\"smtpPort\",\"port\",\"smtpUsername\",\"username\",\"smtpPassword\",\"password\",\"smtpSecure\",\"secure\",\"imapServer\",\"imap\",\"imapPort\",\"imapUsername\",\"imapPassword\",\"imapSecure\",\"imapRetries\",\"maxRetries\",\"mode\",\"control\",\"handleSubmit\",\"_useForm$formState\",\"formState\",\"errors\",\"isDirty\",\"handleDelete\",\"createElement\",\"variant\",\"onConfirm\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"type\",\"message\",\"t0\",\"finish\",\"stop\",\"Promise\",\"onCancel\",\"confirmText\",\"handleSave\",\"_ref2\",\"payload\",\"_context2\",\"parseInt\",\"value\",\"checkEmailExists\",\"emailInbox\",\"_context3\",\"abrupt\",\"_await$emailAlreadyEx\",\"sent\",\"activeField\",\"nameField\",\"emailField\",\"descriptionField\",\"senderInfoField\",\"departmentField\",\"smtpServerField\",\"smtpPortField\",\"smtpUsernameField\",\"smtpPasswordField\",\"smtpSecureField\",\"imapServerField\",\"imapPortField\",\"imapUsernameField\",\"imapPasswordField\",\"imapRetriesField\",\"imapSecureField\",\"maxWidth\",\"w\",\"alignSelf\",\"Item\",\"defaultExpanded\",\"title\",\"htmlFor\",\"render\",\"_ref3\",\"_ref3$field\",\"field\",\"onChange\",\"ref\",\"id\",\"checked\",\"required\",\"rules\",\"_ref4\",\"_errors$name\",\"error\",\"Boolean\",\"validate\",\"_ref5\",\"_errors$email\",\"_ref6\",\"rows\",\"_ref7\",\"_ref8\",\"_ref8$field\",\"onBlur\",\"_ref9\",\"_errors$smtpServer\",\"_ref10\",\"_errors$smtpPort\",\"_ref11\",\"_errors$smtpUsername\",\"_ref12\",\"_errors$smtpPassword\",\"_ref13\",\"_ref13$field\",\"_excluded\",\"_ref14\",\"_errors$imapServer\",\"_ref15\",\"_errors$imapPort\",\"_ref16\",\"_errors$imapUsername\",\"_ref17\",\"_errors$imapPassword\",\"_ref18\",\"_errors$imapRetries\",\"_ref19\",\"_ref19$field\",\"_excluded2\",\"stretch\",\"onClick\",\"disabled\",\"primary\",\"blockStart\",\"danger\"],\"mappings\":\"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\"}"}