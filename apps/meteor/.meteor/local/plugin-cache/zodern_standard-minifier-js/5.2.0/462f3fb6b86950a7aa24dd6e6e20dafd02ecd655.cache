{"code":"function module(e,r,n){n.link(\"@babel/runtime/regenerator\",{default:function(e){t=e}},0),n.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(e){a=e}},1),n.export({processSetReaction:function(){return c}}),n.link(\"../../../../app/emoji/client\",{emoji:function(e){i=e}},0),n.link(\"../../utils/callWithErrorHandling\",{callWithErrorHandling:function(e){u=e}},1);var t,a,i,u,c=function(e,r){var n,c,l;return t.async(function(s){for(;;)switch(s.prev=s.next){case 0:if(n=r.msg.trim().match(/^\\+(:.*?:)$/m)){s.next=4;break}return s.abrupt(\"return\",!1);case 4:if(c=a(n,2)[1],i.list[c]){s.next=7;break}return s.abrupt(\"return\",!1);case 7:return s.next=9,t.awrap(e.data.findLastMessage());case 9:if(l=s.sent){s.next=12;break}return s.abrupt(\"return\",!1);case 12:return s.next=14,t.awrap(u(\"setReaction\",c,l._id));case 14:return s.abrupt(\"return\",!0);case 15:case\"end\":return s.stop()}},null,null,null,Promise)}}","map":"{\"version\":3,\"sources\":[\"client/lib/chats/flows/processSetReaction.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage } from '@rocket.chat/core-typings';\\n\\nimport { emoji } from '../../../../app/emoji/client';\\nimport { callWithErrorHandling } from '../../utils/callWithErrorHandling';\\nimport type { ChatAPI } from '../ChatAPI';\\n\\nexport const processSetReaction = async (chat: ChatAPI, { msg }: Pick<IMessage, 'msg'>): Promise<boolean> => {\\n\\tconst match = msg.trim().match(/^\\\\+(:.*?:)$/m);\\n\\tif (!match) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tconst [, reaction] = match;\\n\\tif (!emoji.list[reaction]) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tconst lastMessage = await chat.data.findLastMessage();\\n\\n\\tif (!lastMessage) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tawait callWithErrorHandling('setReaction', reaction, lastMessage._id);\\n\\treturn true;\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"_slicedToArray\",\"export\",\"processSetReaction\",\"emoji\",\"callWithErrorHandling\",\"chat\",\"_ref\",\"match\",\"reaction\",\"lastMessage\",\"async\",\"_context\",\"prev\",\"next\",\"msg\",\"trim\",\"abrupt\",\"_match\",\"list\",\"awrap\",\"data\",\"findLastMessage\",\"sent\",\"_id\",\"stop\",\"Promise\"],\"mappings\":\"uBAEsBA,EAAAC,IAAA,CAAA,6BAA+B,CAAAC,QAAA,SAAAC,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,uCAAA,CAAAC,QAAA,SAAAC,CAAA,EAAAE,EAAAF,CAAA,CAAA,EAAA,GAArDH,EAAOM,MAAE,CAAK,CAAAC,mBAAQ,WAAA,OAA8BA,CAAC,CAAA,GAAAP,EAAAC,IAAA,CAAA,+BAAA,CAAAO,MAAA,SAAAL,CAAA,EAAAK,EAAAL,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,oCAAA,CAAAQ,sBAAA,SAAAN,CAAA,EAAAM,EAAAN,CAAA,CAAA,EAAA,GAI9C,IAJPC,EAAqDC,EAAAG,EAAAC,EAIxCF,EAAqB,SAAOG,CAAa,CAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAV,EAAAW,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EACP,GAAxCN,EAAQO,AAD8CR,EAAHQ,GAAG,CAC1CC,IAAI,GAAGR,KAAK,CAAC,gBACrB,CAAAI,EAAAE,IAAA,CAAA,EAAA,KAAA,CAAA,OAAAF,EAAAK,MAAA,CAAA,SACF,CAAA,EAAK,MAAA,EAGI,GAARR,EAAQS,AAHJjB,EAGQO,EAAK,EAAT,CAAA,EAAA,CACZJ,EAAMe,IAAI,CAACV,EAAS,CAAA,CAAAG,EAAAE,IAAA,CAAA,EAAA,KAAA,CAAA,OAAAF,EAAAK,MAAA,CAAA,SACjB,CAAA,EAAK,MAAA,EAAA,OAAAL,EAAAE,IAAA,CAAA,EAAAd,EAAAoB,KAAA,CAGad,EAAKe,IAAI,CAACC,eAAe,GAAE,MAAA,EAApC,GAAXZ,EAAWE,EAAAW,IAAA,CAED,CAAAX,EAAAE,IAAA,CAAA,GAAA,KAAA,CAAA,OAAAF,EAAAK,MAAA,CAAA,SACR,CAAA,EAAK,MAAA,GAAA,OAAAL,EAAAE,IAAA,CAAA,GAAAd,EAAAoB,KAAA,CAGPf,EAAsB,cAAeI,EAAUC,EAAYc,GAAG,EAAC,MAAA,GAAA,OAAAZ,EAAAK,MAAA,CAAA,SAC9D,CAAA,EAAI,MAAA,GAAA,IAAA,MAAA,OAAAL,EAAAa,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAAA\"}"}