{"code":"function module(e,n,l){let a,t,o,s,d,c;l.link(\"@rocket.chat/ui-contexts\",{useSetModal(e){a=e},usePermission(e){t=e}},0),l.link(\"react\",{default(e){o=e},memo(e){s=e}},1),l.link(\"../../modals/CreateCannedResponse\",{default(e){d=e}},2),l.link(\"./CannedResponse\",{default(e){c=e}},3),l.exportDefault(s(e=>{let{allowUse:n,cannedItem:l,onClickBack:s,onClickUse:i,reload:r}=e,u=a(),k=t(\"view-all-canned-responses\"),p=t(\"save-department-canned-responses\"),m=k||p&&\"global\"!==l.scope||\"user\"===l.scope;return o.createElement(c,{allowEdit:m,allowUse:n,data:l,onClickBack:s,onClickEdit:()=>{u(o.createElement(d,{cannedResponseData:l,onClose:()=>u(null),reloadCannedList:r}))},onClickUse:e=>{i(e,null==l?void 0:l.text)}})}))}","map":"{\"version\":3,\"sources\":[\"client/omnichannel/cannedResponses/contextualBar/CannedResponse/WrapCannedResponse.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { ILivechatDepartment, IOmnichannelCannedResponse } from '@rocket.chat/core-typings';\\nimport { useSetModal, usePermission } from '@rocket.chat/ui-contexts';\\nimport type { MouseEvent, MouseEventHandler } from 'react';\\nimport React, { memo } from 'react';\\n\\nimport CreateCannedResponse from '../../modals/CreateCannedResponse';\\nimport CannedResponse from './CannedResponse';\\n\\ntype WrapCannedResponseProps = {\\n\\tallowUse: boolean;\\n\\tcannedItem: IOmnichannelCannedResponse & { departmentName: ILivechatDepartment['name'] };\\n\\tonClickBack: MouseEventHandler<HTMLOrSVGElement>;\\n\\tonClickUse: (e: MouseEvent<HTMLOrSVGElement>, text: string) => void;\\n\\treload: () => void;\\n};\\n\\nconst WrapCannedResponse = ({ allowUse, cannedItem, onClickBack, onClickUse, reload }: WrapCannedResponseProps) => {\\n\\tconst setModal = useSetModal();\\n\\tconst onClickEdit = (): void => {\\n\\t\\tsetModal(<CreateCannedResponse cannedResponseData={cannedItem} onClose={() => setModal(null)} reloadCannedList={reload} />);\\n\\t};\\n\\n\\tconst hasManagerPermission = usePermission('view-all-canned-responses');\\n\\tconst hasMonitorPermission = usePermission('save-department-canned-responses');\\n\\n\\tconst allowEdit = hasManagerPermission || (hasMonitorPermission && cannedItem.scope !== 'global') || cannedItem.scope === 'user';\\n\\n\\treturn (\\n\\t\\t<CannedResponse\\n\\t\\t\\tallowEdit={allowEdit}\\n\\t\\t\\tallowUse={allowUse}\\n\\t\\t\\tdata={cannedItem}\\n\\t\\t\\tonClickBack={onClickBack}\\n\\t\\t\\tonClickEdit={onClickEdit}\\n\\t\\t\\tonClickUse={(e): void => {\\n\\t\\t\\t\\tonClickUse(e, cannedItem?.text);\\n\\t\\t\\t}}\\n\\t\\t/>\\n\\t);\\n};\\n\\nexport default memo(WrapCannedResponse);\\n\",null],\"names\":[\"useSetModal\",\"usePermission\",\"React\",\"memo\",\"CreateCannedResponse\",\"CannedResponse\",\"module\",\"link\",\"v\",\"default\",\"exportDefault\",\"_ref\",\"allowUse\",\"cannedItem\",\"onClickBack\",\"onClickUse\",\"reload\",\"setModal\",\"hasManagerPermission\",\"hasMonitorPermission\",\"allowEdit\",\"scope\",\"createElement\",\"data\",\"onClickEdit\",\"cannedResponseData\",\"onClose\",\"reloadCannedList\",\"e\",\"text\"],\"mappings\":\"2BACAA,EAASC,EAA6DC,EAAAC,EAAAC,EAAAC,EAAhDC,EAAeC,IAAA,CAAA,2BAAgC,CAACP,YAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,cAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAN,EAAAM,CAAA,EAAAL,KAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,oCAAA,CAAAE,QAAAD,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,mBAAA,CAAAE,QAAAD,CAAA,EAAAH,EAAAG,CAAA,CAAA,EAAA,GAAtEF,EAAOI,aAAa,CAwCLP,EAzBYQ,IAAuF,GAAtF,CAAEC,SAAAA,CAAQ,CAAEC,WAAAA,CAAU,CAAEC,YAAAA,CAAW,CAAEC,WAAAA,CAAU,CAAEC,OAAAA,CAAAA,CAAiC,CAAAL,EACvGM,EAAWjB,IAKXkB,EAAuBjB,EAAc,6BACrCkB,EAAuBlB,EAAc,oCAErCmB,EAAYF,GAAyBC,GAAwBN,AAAqB,WAArBA,EAAWQ,KAAK,EAAkBR,AAAqB,SAArBA,EAAWQ,KAAK,CAErH,OACCnB,EAAAoB,aAAA,CAACjB,EAAc,CACde,UAAWA,EACXR,SAAUA,EACVW,KAAMV,EACNC,YAAaA,EACbU,YAfkBA,KACnBP,EAASf,EAAAoB,aAAA,CAAClB,EAAoB,CAACqB,mBAAoBZ,EAAYa,QAASA,IAAMT,EAAS,MAAOU,iBAAkBX,CAAO,GACxH,EAcED,WAAaa,IACZb,EAAWa,EAAGf,MAAAA,EAAU,KAAA,EAAVA,EAAYgB,IAAI,CAC/B,CAAE,EAGL\"}"}