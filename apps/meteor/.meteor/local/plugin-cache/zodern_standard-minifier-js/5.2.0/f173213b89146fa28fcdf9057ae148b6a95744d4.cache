{"code":"function module(n,e,t){t.link(\"@babel/runtime/regenerator\",{default:function(n){r=n}},0),t.export({useActiveConnections:function(){return a}}),t.link(\"@rocket.chat/ui-contexts\",{useEndpoint:function(n){u=n}},0),t.link(\"@tanstack/react-query\",{useQuery:function(n){c=n}},1);var r,u,c,a=function(){var n=u(\"GET\",\"/v1/presence.getConnections\");return c([\"userConnections\"],function(){var e,t,u;return r.async(function(c){for(;;)switch(c.prev=c.next){case 0:return c.next=2,r.awrap(n());case 2:return t=(e=c.sent).current,u=e.max,c.abrupt(\"return\",{current:t,max:u,percentage:Math.min(t/u*100,100)});case 6:case\"end\":return c.stop()}},null,null,null,Promise)},{staleTime:6e4})}}","map":"{\"version\":3,\"sources\":[\"client/views/hooks/useActiveConnections.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport type { UseQueryResult } from '@tanstack/react-query';\\nimport { useQuery } from '@tanstack/react-query';\\n\\nexport const useActiveConnections = (): UseQueryResult<{ max: number; current: number; percentage: number }> => {\\n\\tconst getConnections = useEndpoint('GET', '/v1/presence.getConnections');\\n\\treturn useQuery(\\n\\t\\t['userConnections'],\\n\\t\\tasync () => {\\n\\t\\t\\tconst { current, max } = await getConnections();\\n\\t\\t\\treturn { current, max, percentage: Math.min((current / max) * 100, 100) };\\n\\t\\t},\\n\\t\\t{ staleTime: 1000 * 60 },\\n\\t);\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"export\",\"useActiveConnections\",\"useEndpoint\",\"useQuery\",\"getConnections\",\"_await$getConnections\",\"current\",\"max\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"sent\",\"abrupt\",\"percentage\",\"Math\",\"min\",\"stop\",\"Promise\",\"staleTime\"],\"mappings\":\"uBAAsBA,EAAMC,IAAA,CAAA,6BAA2B,CAAAC,QAAA,SAAAC,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAAvDH,EAAOK,MAAE,CAAA,CAAAC,qBAAmB,WAAA,OAA0BA,CAAC,CAAA,GAAAN,EAAAC,IAAA,CAAA,2BAAA,CAAAM,YAAA,SAAAJ,CAAA,EAAAI,EAAAJ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wBAAA,CAAAO,SAAA,SAAAL,CAAA,EAAAK,EAAAL,CAAA,CAAA,EAAA,GAIhD,IAJPC,EAAuDG,EAAAC,EAI1CF,EAAuB,WACnC,IAAMG,EAAiBF,EAAY,MAAO,+BAC1C,OAAOC,EACN,CAAC,kBAAkB,CACnB,WAAA,IAAAE,EAAAC,EAAAC,EAAA,OAAAR,EAAAS,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAE,IAAA,CAAA,EAAAZ,EAAAa,KAAA,CACgCR,IAAgB,MAAA,EAA3B,OAAZE,EAAOD,AAAgCA,CAAAA,EAAAI,EAAAI,IAAA,AAAAA,EAAvCP,OAAO,CAAEC,EAAGF,EAAHE,GAAG,CAAAE,EAAAK,MAAA,CAAA,SACb,CAAER,QAAAA,EAASC,IAAAA,EAAKQ,WAAYC,KAAKC,GAAG,CAAEX,EAAUC,EAAO,IAAK,IAAI,EAAE,MAAA,EAAA,IAAA,MAAA,OAAAE,EAAAS,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAAA,EAE1E,CAAEC,UAAW,GAAS,EAExB\"}"}