{"code":"function module(e,o,n){let i,t,a,l,s,c,r,u,f;n.export({useMessageBlockContextValue:()=>d}),n.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){i=e}},0),n.link(\"../../contexts/VideoConfContext\",{useVideoConfDispatchOutgoing(e){t=e},useVideoConfIsCalling(e){a=e},useVideoConfIsRinging(e){l=e},useVideoConfJoinCall(e){s=e},useVideoConfManager(e){c=e},useVideoConfSetPreferences(e){r=e}},1),n.link(\"../../views/room/contextualBar/VideoConference/hooks/useVideoConfWarning\",{useVideoConfWarning(e){u=e}},2),n.link(\"./useUiKitActionManager\",{useUiKitActionManager(e){f=e}},3);let d=(e,o)=>{let n=s(),d=r(),C=a(),g=l(),k=u(),V=t(),p=c(),m=i(async e=>{if(!C&&!g)try{await (null==p?void 0:p.loadCapabilities()),V({rid:e})}catch(e){k(e.error)}}),h=f();return{action:(i,t)=>{let{appId:a,actionId:l,blockId:s,value:c}=i;if(\"videoconf-core\"===a){if(t.preventDefault(),d({mic:!0,cam:!1}),\"join\"===l)return n(s);if(\"callBack\"===l)return m(s)}h.emitInteraction(a,{type:\"blockAction\",actionId:l,payload:{blockId:s,value:c},container:{type:\"message\",id:o},rid:e,mid:o})},rid:e,values:{}}}}","map":"{\"version\":3,\"sources\":[\"client/uikit/hooks/useMessageBlockContextValue.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, IMessage } from '@rocket.chat/core-typings';\\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport type { UiKitContext } from '@rocket.chat/fuselage-ui-kit';\\nimport type { ContextType } from 'react';\\n\\nimport {\\n\\tuseVideoConfDispatchOutgoing,\\n\\tuseVideoConfIsCalling,\\n\\tuseVideoConfIsRinging,\\n\\tuseVideoConfJoinCall,\\n\\tuseVideoConfManager,\\n\\tuseVideoConfSetPreferences,\\n} from '../../contexts/VideoConfContext';\\nimport { useVideoConfWarning } from '../../views/room/contextualBar/VideoConference/hooks/useVideoConfWarning';\\nimport { useUiKitActionManager } from './useUiKitActionManager';\\n\\nexport const useMessageBlockContextValue = (rid: IRoom['_id'], mid: IMessage['_id']): ContextType<typeof UiKitContext> => {\\n\\tconst joinCall = useVideoConfJoinCall();\\n\\tconst setPreferences = useVideoConfSetPreferences();\\n\\tconst isCalling = useVideoConfIsCalling();\\n\\tconst isRinging = useVideoConfIsRinging();\\n\\tconst dispatchWarning = useVideoConfWarning();\\n\\tconst dispatchPopup = useVideoConfDispatchOutgoing();\\n\\n\\tconst videoConfManager = useVideoConfManager();\\n\\n\\tconst handleOpenVideoConf = useMutableCallback(async (rid: IRoom['_id']) => {\\n\\t\\tif (isCalling || isRinging) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tawait videoConfManager?.loadCapabilities();\\n\\t\\t\\tdispatchPopup({ rid });\\n\\t\\t} catch (error: any) {\\n\\t\\t\\tdispatchWarning(error.error);\\n\\t\\t}\\n\\t});\\n\\n\\tconst actionManager = useUiKitActionManager();\\n\\n\\treturn {\\n\\t\\taction: ({ appId, actionId, blockId, value }, event) => {\\n\\t\\t\\tif (appId === 'videoconf-core') {\\n\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\tsetPreferences({ mic: true, cam: false });\\n\\t\\t\\t\\tif (actionId === 'join') {\\n\\t\\t\\t\\t\\treturn joinCall(blockId);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (actionId === 'callBack') {\\n\\t\\t\\t\\t\\treturn handleOpenVideoConf(blockId);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tactionManager.emitInteraction(appId, {\\n\\t\\t\\t\\ttype: 'blockAction',\\n\\t\\t\\t\\tactionId,\\n\\t\\t\\t\\tpayload: {\\n\\t\\t\\t\\t\\tblockId,\\n\\t\\t\\t\\t\\tvalue,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tcontainer: {\\n\\t\\t\\t\\t\\ttype: 'message',\\n\\t\\t\\t\\t\\tid: mid,\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\trid,\\n\\t\\t\\t\\tmid,\\n\\t\\t\\t});\\n\\t\\t},\\n\\t\\trid,\\n\\t\\tvalues: {}, // TODO: this is a hack to make the context work, but it should be removed\\n\\t};\\n};\\n\",null],\"names\":[\"useMutableCallback\",\"useVideoConfDispatchOutgoing\",\"useVideoConfIsCalling\",\"useVideoConfIsRinging\",\"useVideoConfJoinCall\",\"useVideoConfManager\",\"useVideoConfSetPreferences\",\"useVideoConfWarning\",\"useUiKitActionManager\",\"module\",\"export\",\"useMessageBlockContextValue\",\"link\",\"v\",\"rid\",\"mid\",\"joinCall\",\"setPreferences\",\"isCalling\",\"isRinging\",\"dispatchWarning\",\"dispatchPopup\",\"videoConfManager\",\"handleOpenVideoConf\",\"loadCapabilities\",\"error\",\"actionManager\",\"action\",\"_ref\",\"event\",\"appId\",\"actionId\",\"blockId\",\"value\",\"preventDefault\",\"mic\",\"cam\",\"emitInteraction\",\"type\",\"payload\",\"container\",\"id\",\"values\"],\"mappings\":\"2BACiEA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAjEC,EAAOC,MAAE,CAAA,CAAAC,4BAA0BA,IAAAA,CAA8B,GAAAF,EAAAG,IAAA,CAAA,8BAAA,CAAAZ,mBAAAa,CAAA,EAAAb,EAAAa,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,kCAAA,CAAAX,6BAAAY,CAAA,EAAAZ,EAAAY,CAAA,EAAAX,sBAAAW,CAAA,EAAAX,EAAAW,CAAA,EAAAV,sBAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,qBAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,oBAAAQ,CAAA,EAAAR,EAAAQ,CAAA,EAAAP,2BAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,2EAAA,CAAAL,oBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,0BAAA,CAAAJ,sBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAe1D,IAAMF,EAA8BA,CAACG,EAAmBC,KAC9D,IAAMC,EAAWZ,IACXa,EAAiBX,IACjBY,EAAYhB,IACZiB,EAAYhB,IACZiB,EAAkBb,IAClBc,EAAgBpB,IAEhBqB,EAAmBjB,IAEnBkB,EAAsBvB,EAAmB,MAAOc,IACrD,GAAII,CAAAA,IAAaC,EAIjB,GAAI,CACH,MAAMG,CAAAA,MAAAA,EAAgB,KAAA,EAAhBA,EAAkBE,gBAAgB,EAAA,EACxCH,EAAc,CAAEP,IAAAA,CAAG,EACpB,CAAE,MAAOW,EAAY,CACpBL,EAAgBK,EAAMA,KAAK,CAC5B,CACD,GAEMC,EAAgBlB,IAEtB,MAAO,CACNmB,OAAQA,CAAAC,EAAsCC,KAAS,GAA9C,CAAEC,MAAAA,CAAK,CAAEC,SAAAA,CAAQ,CAAEC,QAAAA,CAAO,CAAEC,MAAAA,CAAAA,CAAO,CAAAL,EAC3C,GAAIE,AAAU,mBAAVA,EAA4B,CAG/B,GAFAD,EAAMK,cAAc,GACpBjB,EAAe,CAAEkB,IAAK,CAAA,EAAMC,IAAK,CAAA,CAAK,GAClCL,AAAa,SAAbA,EACH,OAAOf,EAASgB,GAGjB,GAAID,AAAa,aAAbA,EACH,OAAOR,EAAoBS,EAE7B,CAEAN,EAAcW,eAAe,CAACP,EAAO,CACpCQ,KAAM,cACNP,SAAAA,EACAQ,QAAS,CACRP,QAAAA,EACAC,MAAAA,GAEDO,UAAW,CACVF,KAAM,UACNG,GAAI1B,GAELD,IAAAA,EACAC,IAAAA,GAEF,EACAD,IAAAA,EACA4B,OAAQ,CAAA,EAEV\"}"}