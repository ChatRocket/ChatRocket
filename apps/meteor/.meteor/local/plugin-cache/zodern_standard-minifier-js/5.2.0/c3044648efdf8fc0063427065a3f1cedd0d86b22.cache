{"code":"function module(e,t,r){let l,a;r.export({handleAPIError:()=>s}),r.link(\"../../../../app/utils/lib/i18n\",{t(e){l=e}},0),r.link(\"../../../lib/toast\",{dispatchToastMessage(e){a=e}},1);let o=e=>[\"Could not reach the Marketplace\"].includes(e),s=e=>{let{error:t=\"\",message:r=t}=e;if(o(r))return a({type:\"error\",message:l(r)});a({type:\"error\",message:l(\"Apps_Error_\".concat(t))})}}","map":"{\"version\":3,\"sources\":[\"client/views/marketplace/helpers/handleAPIError.ts\",\"<anon>\"],\"sourcesContent\":[\"import { t } from '../../../../app/utils/lib/i18n';\\nimport { dispatchToastMessage } from '../../../lib/toast';\\n\\nconst shouldHandleErrorAsWarning = (message: string): boolean => {\\n\\tconst warnings = ['Could not reach the Marketplace'];\\n\\n\\treturn warnings.includes(message);\\n};\\n\\nexport const handleAPIError = (errorObject: unknown): void => {\\n\\tconst { error = '', message = error } = errorObject as { message?: string; error?: string };\\n\\n\\tif (shouldHandleErrorAsWarning(message)) {\\n\\t\\treturn dispatchToastMessage({ type: 'error', message: t(message) });\\n\\t}\\n\\n\\tdispatchToastMessage({ type: 'error', message: t(`Apps_Error_${error}`) });\\n};\\n\",null],\"names\":[\"t\",\"dispatchToastMessage\",\"module\",\"export\",\"handleAPIError\",\"link\",\"v\",\"shouldHandleErrorAsWarning\",\"message\",\"warnings\",\"includes\",\"errorObject\",\"error\",\"type\",\"concat\"],\"mappings\":\"2BAAmDA,EAAAC,EAAnDC,EAAOC,MAAK,CAAA,CAAAC,eAAMA,IAAAA,CAAA,GAAiCF,EAAAG,IAAA,CAAA,iCAAA,CAAAL,EAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,qBAAA,CAAAJ,qBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAGnD,IAAMC,EAA8BC,GAG5BC,AAFU,CAAC,kCAAkC,CAEpCC,QAAQ,CAACF,GAGbJ,EAAkBO,IAC9B,GAAM,CAAEC,MAAAA,EAAQ,EAAE,CAAEJ,QAAAA,EAAUI,CAAAA,CAAO,CAAGD,EAExC,GAAIJ,EAA2BC,GAC9B,OAAOP,EAAqB,CAAEY,KAAM,QAASL,QAASR,EAAEQ,EAAQ,GAGjEP,EAAqB,CAAEY,KAAM,QAASL,QAASR,EAAC,cAAAc,MAAA,CAAeF,GAAQ,EACxE\"}"}