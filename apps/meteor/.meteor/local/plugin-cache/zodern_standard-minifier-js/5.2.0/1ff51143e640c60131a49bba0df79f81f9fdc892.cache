{"code":"function module(e,n,t){var r,a,i,l,o,u,c,s,f,d,p,m,v,b,k,h,y,g,x,E,w,C,F,B;t.link(\"@babel/runtime/regenerator\",{default:function(e){r=e}},0),t.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(e){a=e}},1),t.link(\"@rocket.chat/fuselage\",{Modal:function(e){i=e},Box:function(e){l=e},IconButton:function(e){o=e},Select:function(e){u=e}},0),t.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback:function(e){c=e},useDebouncedValue:function(e){s=e}},1),t.link(\"@rocket.chat/ui-contexts\",{useMethod:function(e){f=e},useToastMessageDispatch:function(e){d=e},useTranslation:function(e){p=e},useSetModal:function(e){m=e}},2),t.link(\"react\",{default:function(e){v=e},useState:function(e){b=e},useEffect:function(e){k=e},useCallback:function(e){h=e}},3),t.link(\"../../../../../app/utils/client\",{fileUploadIsValidContentType:function(e){y=e}},4),t.link(\"../../../../components/FilterByText\",{default:function(e){g=e}},5),t.link(\"../../../../components/GenericTable/hooks/useSort\",{useSort:function(e){x=e}},6),t.link(\"../../modals/FileUploadModal\",{default:function(e){E=e}},7),t.link(\"./FilePickerBreadcrumbs\",{default:function(e){w=e}},8),t.link(\"./WebdavFilePickerGrid\",{default:function(e){C=e}},9),t.link(\"./WebdavFilePickerTable\",{default:function(e){F=e}},10),t.link(\"./lib/sortWebdavNodes\",{sortWebdavNodes:function(e){B=e}},11),t.exportDefault(function(e){var n=e.onUpload,t=e.onClose,T=e.account,N=p(),P=m(),S=f(\"getWebdavFilePreview\"),M=f(\"getWebdavFileList\"),D=f(\"getFileFromWebdav\"),W=d(),_=b(\"list\"),L=a(_,2),U=L[0],A=L[1],G=x(\"name\"),I=G.sortBy,R=G.sortDirection,j=G.setSort,z=b(\"/\"),O=a(z,2),V=O[0],q=O[1],H=b([]),J=a(H,2),K=J[0],Q=J[1],X=b([]),Y=a(X,2),Z=Y[0],$=Y[1],ee=b(\"\"),en=a(ee,2),et=en[0],er=en[1],ea=s(et,500),ei=b(!1),el=a(ei,2),eo=el[0],eu=el[1],ec=c(function(e,n){var t;return r.async(function(r){for(;;)switch(r.prev=r.next){case 0:if(!(!Array.isArray(n)||!n.length)){r.next=2;break}return r.abrupt(\"return\");case 2:return t=n.map(function(t,r){if(\"file\"===t.type)return S(e,t.filename).then(function(e){if(null!=e&&e.data){var t=new Blob([null==e?void 0:e.data],{type:\"image/png\"}),a=URL.createObjectURL(t);n[r].preview=a}}).catch(function(e){return e})}).filter(Boolean),r.abrupt(\"return\",Promise.all(t).then(function(){return n}).catch(function(e){return e}));case 4:case\"end\":return r.stop()}},null,null,null,Promise)}),es=h(function(e){var n=RegExp(\"\\\\b\"+ea,\"i\");return $(e.filter(function(e){return e.basename.match(n)}))},[ea]),ef=h(function(){var e,n,a;return r.async(function(i){for(;;)switch(i.prev=i.next){case 0:return eu(!0),i.prev=1,i.next=4,r.awrap(M(T._id,V));case 4:es((e=i.sent).data),i.next=12;break;case 8:i.prev=8,i.t0=i.catch(1),W({type:\"error\",message:i.t0}),t();case 12:return i.prev=12,eu(!1),i.next=16,r.awrap(ec(T._id,null===(n=e)||void 0===n?void 0:n.data));case 16:return Array.isArray(a=i.sent)&&a.length&&es(a),i.finish(12);case 19:case\"end\":return i.stop()}},null,null,[[1,8,12,19]],Promise)},[T._id,V,W,M,t,ec,es]),ed=function(e){return\"directory\"===e.type?q(e.filename):ep(e)},ep=function(e){var a,i,l,o;return r.async(function(u){for(;;)switch(u.prev=u.next){case 0:return eu(!0),a=function e(e,a){return r.async(function i(i){for(;;)switch(i.prev=i.next){case 0:return i.prev=0,i.next=3,r.awrap(null==n?void 0:n(e,a));case 3:i.next=8;break;case 5:return i.prev=5,i.t0=i.catch(0),i.abrupt(\"return\",W({type:\"error\",message:i.t0}));case 8:return i.prev=8,eu(!1),t(),i.finish(8);case 12:case\"end\":return i.stop()}},null,null,[[0,5,8,12]],Promise)},u.prev=2,u.next=5,r.awrap(D(T._id,e));case 5:i=u.sent.data,l=new Blob([i]),o=new File([l],e.basename,{type:e.mime}),P(v.createElement(E,{fileName:e.basename,onSubmit:function(e,n){return a(o,n)},file:o,onClose:function(){return P(null)},invalidContentType:!!(o.type&&!y(o.type))})),u.next=15;break;case 12:return u.prev=12,u.t0=u.catch(2),u.abrupt(\"return\",W({type:\"error\",message:u.t0}));case 15:case\"end\":return u.stop()}},null,null,[[2,12]],Promise)};k(function(){ef()},[ef]),k(function(){Q((null==V?void 0:V.split(\"/\").filter(function(e){return e}))||[])},[V]);var em=function(e,n){return j(e),$(B(Z,e,n))};return v.createElement(i,null,v.createElement(i.Header,null,v.createElement(i.Title,null,N(\"Upload_From\",{name:T.name})),v.createElement(i.Close,{title:N(\"Close\"),onClick:t})),v.createElement(i.Content,null,v.createElement(l,{display:\"flex\",justifyContent:\"space-between\"},v.createElement(w,{parentFolders:K,handleBreadcrumb:function(e){for(var n=e.currentTarget.dataset.index,t=V.split(\"/\").filter(function(e){return e}),r=\"/\",a=0;a<=Number(n);a++)r+=t[a]+\"/\";q(r)},handleBack:function(){var e=V,n=\"/\";e&&\"/\"!==e&&(\"/\"===e[e.length-1]&&(e=e.slice(0,-1)),n=e.substr(0,e.lastIndexOf(\"/\")+1)),q(n)}}),v.createElement(l,null,\"list\"===U&&v.createElement(o,{icon:\"squares\",small:!0,title:N(\"Grid_view\"),onClick:function(){return A(\"grid\")}}),\"grid\"===U&&v.createElement(o,{icon:\"th-list\",small:!0,title:N(\"List_view\"),onClick:function(){return A(\"list\")}}))),v.createElement(l,{display:\"flex\",flexDirection:\"column\"},v.createElement(g,{onChange:er},\"grid\"===U&&v.createElement(u,{value:I,onChange:function(e){return em(e)},options:[[\"name\",\"Name\"],[\"size\",\"Size\"],[\"dataModified\",\"Data Modified\"]]}))),\"list\"===U&&v.createElement(F,{webdavNodes:Z,sortBy:I,sortDirection:R,onSort:em,onNodeClick:ed,isLoading:eo}),\"grid\"===U&&v.createElement(C,{webdavNodes:Z,onNodeClick:ed,isLoading:eo})),v.createElement(i.Footer,null))})}","map":"{\"version\":3,\"sources\":[\"client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerModal.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IWebdavNode, IWebdavAccountIntegration } from '@rocket.chat/core-typings';\\nimport type { SelectOption } from '@rocket.chat/fuselage';\\nimport { Modal, Box, IconButton, Select } from '@rocket.chat/fuselage';\\nimport { useMutableCallback, useDebouncedValue } from '@rocket.chat/fuselage-hooks';\\nimport { useMethod, useToastMessageDispatch, useTranslation, useSetModal } from '@rocket.chat/ui-contexts';\\nimport type { ReactElement, MouseEvent } from 'react';\\nimport React, { useState, useEffect, useCallback } from 'react';\\n\\nimport { fileUploadIsValidContentType } from '../../../../../app/utils/client';\\nimport FilterByText from '../../../../components/FilterByText';\\nimport { useSort } from '../../../../components/GenericTable/hooks/useSort';\\nimport FileUploadModal from '../../modals/FileUploadModal';\\nimport FilePickerBreadcrumbs from './FilePickerBreadcrumbs';\\nimport WebdavFilePickerGrid from './WebdavFilePickerGrid';\\nimport WebdavFilePickerTable from './WebdavFilePickerTable';\\nimport { sortWebdavNodes } from './lib/sortWebdavNodes';\\n\\nexport type WebdavSortOptions = 'name' | 'size' | 'dataModified';\\n\\ntype WebdavFilePickerModalProps = {\\n\\tonUpload: (file: File, description?: string) => Promise<void>;\\n\\tonClose: () => void;\\n\\taccount: IWebdavAccountIntegration;\\n};\\n\\nconst WebdavFilePickerModal = ({ onUpload, onClose, account }: WebdavFilePickerModalProps): ReactElement => {\\n\\tconst t = useTranslation();\\n\\tconst setModal = useSetModal();\\n\\tconst getWebdavFilePreview = useMethod('getWebdavFilePreview');\\n\\tconst getWebdavFileList = useMethod('getWebdavFileList');\\n\\tconst getFileFromWebdav = useMethod('getFileFromWebdav');\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst [typeView, setTypeView] = useState<'list' | 'grid'>('list');\\n\\tconst { sortBy, sortDirection, setSort } = useSort<WebdavSortOptions>('name');\\n\\tconst [currentFolder, setCurrentFolder] = useState('/');\\n\\tconst [parentFolders, setParentFolders] = useState<string[]>([]);\\n\\tconst [webdavNodes, setWebdavNodes] = useState<IWebdavNode[]>([]);\\n\\tconst [filterText, setFilterText] = useState('');\\n\\tconst debouncedFilter = useDebouncedValue(filterText, 500);\\n\\tconst [isLoading, setIsLoading] = useState(false);\\n\\n\\tconst showFilePreviews = useMutableCallback(async (accountId, nodes) => {\\n\\t\\tif (!Array.isArray(nodes) || !nodes.length) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tconst promises = nodes\\n\\t\\t\\t.map((node, index) => {\\n\\t\\t\\t\\tif (node.type !== 'file') {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn getWebdavFilePreview(accountId, node.filename)\\n\\t\\t\\t\\t\\t.then((res) => {\\n\\t\\t\\t\\t\\t\\tif (!res?.data) {\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tconst blob = new Blob([res?.data], { type: 'image/png' });\\n\\t\\t\\t\\t\\t\\tconst imgURL = URL.createObjectURL(blob);\\n\\t\\t\\t\\t\\t\\tnodes[index].preview = imgURL;\\n\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t.catch((e) => e);\\n\\t\\t\\t})\\n\\t\\t\\t.filter(Boolean);\\n\\n\\t\\treturn Promise.all(promises)\\n\\t\\t\\t.then(() => nodes)\\n\\t\\t\\t.catch((e) => e);\\n\\t});\\n\\n\\tconst handleFilterNodes = useCallback(\\n\\t\\t(webdavNodes: IWebdavNode[]): void => {\\n\\t\\t\\tconst regex = new RegExp(`\\\\\\\\b${debouncedFilter}`, 'i');\\n\\t\\t\\tconst filteredNodes = webdavNodes.filter(({ basename }) => basename.match(regex));\\n\\t\\t\\treturn setWebdavNodes(filteredNodes);\\n\\t\\t},\\n\\t\\t[debouncedFilter],\\n\\t);\\n\\n\\tconst handleGetWebdavFileList = useCallback(async (): Promise<void> => {\\n\\t\\tsetIsLoading(true);\\n\\t\\tlet result;\\n\\t\\ttry {\\n\\t\\t\\tresult = await getWebdavFileList(account._id, currentFolder);\\n\\t\\t\\thandleFilterNodes(result.data);\\n\\t\\t} catch (error) {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\tonClose();\\n\\t\\t} finally {\\n\\t\\t\\tsetIsLoading(false);\\n\\t\\t\\tconst nodesWithPreviews = await showFilePreviews(account._id, result?.data);\\n\\t\\t\\tif (Array.isArray(nodesWithPreviews) && nodesWithPreviews.length) {\\n\\t\\t\\t\\thandleFilterNodes(nodesWithPreviews);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}, [account._id, currentFolder, dispatchToastMessage, getWebdavFileList, onClose, showFilePreviews, handleFilterNodes]);\\n\\n\\tconst handleBreadcrumb = (e: MouseEvent<HTMLElement>): void => {\\n\\t\\tconst { index } = e.currentTarget.dataset;\\n\\t\\tconst parentFolders = currentFolder.split('/').filter((s) => s);\\n\\n\\t\\t// determine parent directory to go to\\n\\t\\tlet targetFolder = '/';\\n\\t\\tfor (let i = 0; i <= Number(index); i++) {\\n\\t\\t\\ttargetFolder += parentFolders[i];\\n\\t\\t\\ttargetFolder += '/';\\n\\t\\t}\\n\\t\\tsetCurrentFolder(targetFolder);\\n\\t};\\n\\n\\tconst handleBack = (): void => {\\n\\t\\tlet newCurrentFolder = currentFolder;\\n\\t\\t// determine parent directory to go back\\n\\t\\tlet parentFolder = '/';\\n\\t\\tif (newCurrentFolder && newCurrentFolder !== '/') {\\n\\t\\t\\tif (newCurrentFolder[newCurrentFolder.length - 1] === '/') {\\n\\t\\t\\t\\tnewCurrentFolder = newCurrentFolder.slice(0, -1);\\n\\t\\t\\t}\\n\\t\\t\\tparentFolder = newCurrentFolder.substr(0, newCurrentFolder.lastIndexOf('/') + 1);\\n\\t\\t}\\n\\t\\tsetCurrentFolder(parentFolder);\\n\\t};\\n\\n\\tconst handleNodeClick = (webdavNode: IWebdavNode): void | Promise<void> => {\\n\\t\\tif (webdavNode.type === 'directory') {\\n\\t\\t\\treturn setCurrentFolder(webdavNode.filename);\\n\\t\\t}\\n\\n\\t\\treturn handleUpload(webdavNode);\\n\\t};\\n\\n\\tconst handleUpload = async (webdavNode: IWebdavNode): Promise<void> => {\\n\\t\\tsetIsLoading(true);\\n\\n\\t\\tconst uploadFile = async (file: File, description?: string): Promise<void> => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait onUpload?.(file, description);\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\treturn dispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t} finally {\\n\\t\\t\\t\\tsetIsLoading(false);\\n\\t\\t\\t\\tonClose();\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\ttry {\\n\\t\\t\\tconst { data } = await getFileFromWebdav(account._id, webdavNode);\\n\\t\\t\\tconst blob = new Blob([data]);\\n\\t\\t\\tconst file = new File([blob], webdavNode.basename, { type: webdavNode.mime });\\n\\n\\t\\t\\tsetModal(\\n\\t\\t\\t\\t<FileUploadModal\\n\\t\\t\\t\\t\\tfileName={webdavNode.basename}\\n\\t\\t\\t\\t\\tonSubmit={(_, description): Promise<void> => uploadFile(file, description)}\\n\\t\\t\\t\\t\\tfile={file}\\n\\t\\t\\t\\t\\tonClose={(): void => setModal(null)}\\n\\t\\t\\t\\t\\tinvalidContentType={Boolean(file.type && !fileUploadIsValidContentType(file.type))}\\n\\t\\t\\t\\t/>,\\n\\t\\t\\t);\\n\\t\\t} catch (error) {\\n\\t\\t\\treturn dispatchToastMessage({ type: 'error', message: error });\\n\\t\\t}\\n\\t};\\n\\n\\tuseEffect(() => {\\n\\t\\thandleGetWebdavFileList();\\n\\t}, [handleGetWebdavFileList]);\\n\\n\\tuseEffect(() => {\\n\\t\\tsetParentFolders(currentFolder?.split('/').filter((s) => s) || []);\\n\\t}, [currentFolder]);\\n\\n\\tconst options: SelectOption[] = [\\n\\t\\t['name', 'Name'],\\n\\t\\t['size', 'Size'],\\n\\t\\t['dataModified', 'Data Modified'],\\n\\t];\\n\\n\\tconst handleSort = (sortBy: WebdavSortOptions, sortDirection?: 'asc' | 'desc'): void => {\\n\\t\\tsetSort(sortBy);\\n\\t\\tconst sortedNodes = sortWebdavNodes(webdavNodes, sortBy, sortDirection);\\n\\t\\treturn setWebdavNodes(sortedNodes);\\n\\t};\\n\\n\\treturn (\\n\\t\\t<Modal>\\n\\t\\t\\t<Modal.Header>\\n\\t\\t\\t\\t<Modal.Title>{t('Upload_From', { name: account.name })}</Modal.Title>\\n\\t\\t\\t\\t<Modal.Close title={t('Close')} onClick={onClose} />\\n\\t\\t\\t</Modal.Header>\\n\\t\\t\\t<Modal.Content>\\n\\t\\t\\t\\t<Box display='flex' justifyContent='space-between'>\\n\\t\\t\\t\\t\\t<FilePickerBreadcrumbs parentFolders={parentFolders} handleBreadcrumb={handleBreadcrumb} handleBack={handleBack} />\\n\\t\\t\\t\\t\\t<Box>\\n\\t\\t\\t\\t\\t\\t{typeView === 'list' && <IconButton icon='squares' small title={t('Grid_view')} onClick={(): void => setTypeView('grid')} />}\\n\\t\\t\\t\\t\\t\\t{typeView === 'grid' && <IconButton icon='th-list' small title={t('List_view')} onClick={(): void => setTypeView('list')} />}\\n\\t\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t<Box display='flex' flexDirection='column'>\\n\\t\\t\\t\\t\\t<FilterByText onChange={setFilterText}>\\n\\t\\t\\t\\t\\t\\t{typeView === 'grid' && (\\n\\t\\t\\t\\t\\t\\t\\t<Select value={sortBy} onChange={(value): void => handleSort(value as WebdavSortOptions)} options={options} />\\n\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t</FilterByText>\\n\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t{typeView === 'list' && (\\n\\t\\t\\t\\t\\t<WebdavFilePickerTable\\n\\t\\t\\t\\t\\t\\twebdavNodes={webdavNodes}\\n\\t\\t\\t\\t\\t\\tsortBy={sortBy}\\n\\t\\t\\t\\t\\t\\tsortDirection={sortDirection}\\n\\t\\t\\t\\t\\t\\tonSort={handleSort}\\n\\t\\t\\t\\t\\t\\tonNodeClick={handleNodeClick}\\n\\t\\t\\t\\t\\t\\tisLoading={isLoading}\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t)}\\n\\t\\t\\t\\t{typeView === 'grid' && <WebdavFilePickerGrid webdavNodes={webdavNodes} onNodeClick={handleNodeClick} isLoading={isLoading} />}\\n\\t\\t\\t</Modal.Content>\\n\\t\\t\\t<Modal.Footer />\\n\\t\\t</Modal>\\n\\t);\\n};\\n\\nexport default WebdavFilePickerModal;\\n\",null],\"names\":[\"_regeneratorRuntime\",\"_slicedToArray\",\"Modal\",\"Box\",\"IconButton\",\"Select\",\"useMutableCallback\",\"useDebouncedValue\",\"useMethod\",\"useToastMessageDispatch\",\"useTranslation\",\"useSetModal\",\"React\",\"useState\",\"useEffect\",\"useCallback\",\"fileUploadIsValidContentType\",\"FilterByText\",\"useSort\",\"FileUploadModal\",\"FilePickerBreadcrumbs\",\"WebdavFilePickerGrid\",\"WebdavFilePickerTable\",\"sortWebdavNodes\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"onUpload\",\"onClose\",\"account\",\"t\",\"setModal\",\"getWebdavFilePreview\",\"getWebdavFileList\",\"getFileFromWebdav\",\"dispatchToastMessage\",\"_useState\",\"_useState2\",\"typeView\",\"setTypeView\",\"_useSort\",\"sortBy\",\"sortDirection\",\"setSort\",\"_useState3\",\"_useState4\",\"currentFolder\",\"setCurrentFolder\",\"_useState5\",\"_useState6\",\"parentFolders\",\"setParentFolders\",\"_useState7\",\"_useState8\",\"webdavNodes\",\"setWebdavNodes\",\"_useState9\",\"_useState10\",\"filterText\",\"setFilterText\",\"debouncedFilter\",\"_useState11\",\"_useState12\",\"isLoading\",\"setIsLoading\",\"showFilePreviews\",\"accountId\",\"nodes\",\"promises\",\"async\",\"_context\",\"prev\",\"next\",\"Array\",\"isArray\",\"length\",\"abrupt\",\"map\",\"node\",\"index\",\"type\",\"filename\",\"then\",\"res\",\"data\",\"blob\",\"Blob\",\"imgURL\",\"URL\",\"createObjectURL\",\"preview\",\"catch\",\"e\",\"filter\",\"Boolean\",\"Promise\",\"all\",\"stop\",\"handleFilterNodes\",\"regex\",\"RegExp\",\"_ref2\",\"basename\",\"match\",\"handleGetWebdavFileList\",\"result\",\"_result\",\"nodesWithPreviews\",\"_context2\",\"awrap\",\"_id\",\"sent\",\"t0\",\"message\",\"finish\",\"handleNodeClick\",\"webdavNode\",\"handleUpload\",\"uploadFile\",\"file\",\"_context4\",\"_callee3\",\"description\",\"_callee3$\",\"_context3\",\"_await$getFileFromWeb\",\"File\",\"mime\",\"createElement\",\"fileName\",\"onSubmit\",\"_\",\"invalidContentType\",\"split\",\"s\",\"handleSort\",\"Header\",\"Title\",\"name\",\"Close\",\"title\",\"onClick\",\"Content\",\"display\",\"justifyContent\",\"handleBreadcrumb\",\"currentTarget\",\"dataset\",\"targetFolder\",\"i\",\"Number\",\"handleBack\",\"newCurrentFolder\",\"parentFolder\",\"slice\",\"substr\",\"lastIndexOf\",\"icon\",\"small\",\"flexDirection\",\"onChange\",\"value\",\"options\",\"onSort\",\"onNodeClick\",\"Footer\"],\"mappings\":\"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\"}"}