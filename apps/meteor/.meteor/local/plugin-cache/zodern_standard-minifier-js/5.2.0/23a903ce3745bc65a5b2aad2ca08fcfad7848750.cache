{"code":"function module(e,t,r){var n,s,a,i,o,c,u,l,p,d,y,f,h,b,v,g,E,m,x,k,w,_,S,K,R,P,I,A,D,B,M,L,O,T,C,F,N,j,W,Y,G,U,q,V,H,J,Q,$,z=[\"_id\"];r.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default:function(e){n=e}},0),r.link(\"@babel/runtime/regenerator\",{default:function(e){s=e}},1),r.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(e){a=e}},2),r.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(e){i=e}},3),r.link(\"@babel/runtime/helpers/inheritsLoose\",{default:function(e){o=e}},4),r.link(\"@babel/runtime/helpers/asyncIterator\",{default:function(e){c=e}},5),r.export({e2e:function(){return ee}}),r.link(\"querystring\",{default:function(e){u=e}},0),r.link(\"url\",{default:function(e){l=e}},1),r.link(\"@rocket.chat/core-typings\",{isE2EEMessage:function(e){p=e}},2),r.link(\"@rocket.chat/emitter\",{Emitter:function(e){d=e}},3),r.link(\"ejson\",{default:function(e){y=e}},4),r.link(\"lodash\",{default:function(e){f=e}},5),r.link(\"meteor/accounts-base\",{Accounts:function(e){h=e}},6),r.link(\"meteor/meteor\",{Meteor:function(e){b=e}},7),r.link(\"meteor/tracker\",{Tracker:function(e){v=e}},8),r.link(\"../../../client/lib/banners\",{\"*\":function(e){g=e}},9),r.link(\"../../../client/lib/imperativeModal\",{imperativeModal:function(e){E=e}},10),r.link(\"../../../client/lib/toast\",{dispatchToastMessage:function(e){m=e}},11),r.link(\"../../../client/lib/utils/mapMessageFromApi\",{mapMessageFromApi:function(e){x=e}},12),r.link(\"../../../client/lib/utils/waitUntilFind\",{waitUntilFind:function(e){k=e}},13),r.link(\"../../../client/views/e2e/EnterE2EPasswordModal\",{default:function(e){w=e}},14),r.link(\"../../../client/views/e2e/SaveE2EPasswordModal\",{default:function(e){_=e}},15),r.link(\"../../../lib/createQuoteAttachment\",{createQuoteAttachment:function(e){S=e}},16),r.link(\"../../../lib/getMessageUrlRegex\",{getMessageUrlRegex:function(e){K=e}},17),r.link(\"../../../lib/isTruthy\",{isTruthy:function(e){R=e}},18),r.link(\"../../models/client\",{ChatRoom:function(e){P=e},Subscriptions:function(e){I=e},Messages:function(e){A=e}},19),r.link(\"../../settings/client\",{settings:function(e){D=e}},20),r.link(\"../../utils/client\",{getUserAvatarURL:function(e){B=e}},21),r.link(\"../../utils/client/lib/SDKClient\",{sdk:function(e){M=e}},22),r.link(\"../../utils/lib/i18n\",{t:function(e){L=e}},23),r.link(\"./E2EEState\",{E2EEState:function(e){O=e}},24),r.link(\"./helper\",{toString:function(e){T=e},toArrayBuffer:function(e){C=e},joinVectorAndEcryptedData:function(e){F=e},splitVectorAndEcryptedData:function(e){N=e},encryptAES:function(e){j=e},decryptAES:function(e){W=e},generateRSAKey:function(e){Y=e},exportJWKKey:function(e){G=e},importRSAKey:function(e){U=e},importRawKey:function(e){q=e},deriveKey:function(e){V=e},generateMnemonicPhrase:function(e){H=e}},25),r.link(\"./logger\",{log:function(e){J=e},logError:function(e){Q=e}},26),r.link(\"./rocketchat.e2e.room\",{E2ERoom:function(e){$=e}},27),r.link(\"./events.js\");var X=!1,Z=new v.Dependency,ee=new(function(e){function t(){var t;return(t=e.call(this)||this).started=void 0,t.instancesByRoomId=void 0,t.db_public_key=void 0,t.db_private_key=void 0,t.privateKey=void 0,t.publicKey=void 0,t.keyDistributionInterval=void 0,t.state=void 0,t.observable=void 0,t.started=!1,t.instancesByRoomId={},t.keyDistributionInterval=null,t.observable=void 0,t.on(\"E2E_STATE_CHANGED\",function(e){var r=e.prevState,n=e.nextState;t.log(r+\" -> \"+n)}),t.on(O.READY,function(){return s.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,s.awrap(t.onE2EEReady());case 2:case\"end\":return e.stop()}},null,null,null,Promise)}),t.on(O.SAVE_PASSWORD,function(){return s.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,s.awrap(t.onE2EEReady());case 2:case\"end\":return e.stop()}},null,null,null,Promise)}),t.on(O.DISABLED,function(){var e;null===(e=t.observable)||void 0===e||e.stop()}),t.on(O.NOT_STARTED,function(){var e;null===(e=t.observable)||void 0===e||e.stop()}),t.on(O.ERROR,function(){var e;null===(e=t.observable)||void 0===e||e.stop()}),t.setState(O.NOT_STARTED),t}o(t,e);var r=t.prototype;return r.log=function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];J.apply(void 0,[\"E2E\"].concat(t))},r.error=function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];Q.apply(void 0,[\"E2E\"].concat(t))},r.getState=function(){return this.state},r.isEnabled=function(){return this.state!==O.DISABLED},r.isReady=function(){return Z.depend(),this.state===O.READY||this.state===O.SAVE_PASSWORD},r.onE2EEReady=function(){return s.async(function(e){for(;;)switch(e.prev=e.next){case 0:return this.log(\"startClient -> Done\"),this.initiateHandshake(),e.next=4,s.awrap(this.handleAsyncE2EESuggestedKey());case 4:return this.log(\"decryptSubscriptions\"),e.next=7,s.awrap(this.decryptSubscriptions());case 7:return this.log(\"decryptSubscriptions -> Done\"),e.next=10,s.awrap(this.initiateKeyDistribution());case 10:this.log(\"initiateKeyDistribution -> Done\"),this.observeSubscriptions(),this.log(\"observing subscriptions\");case 13:case\"end\":return e.stop()}},null,this,null,Promise)},r.onSubscriptionChanged=function(e){var t;return s.async(function(r){for(;;)switch(r.prev=r.next){case 0:if(this.log(\"Subscription changed\",e),!(!e.encrypted&&!e.E2EKey)){r.next=4;break}return this.removeInstanceByRoomId(e.rid),r.abrupt(\"return\");case 4:return r.next=6,s.awrap(this.getInstanceByRoomId(e.rid));case 6:if(t=r.sent){r.next=9;break}return r.abrupt(\"return\");case 9:if(!e.E2ESuggestedKey){r.next=21;break}return r.next=12,s.awrap(t.importGroupKey(e.E2ESuggestedKey));case 12:if(!r.sent){r.next=18;break}return r.next=15,s.awrap(this.acceptSuggestedKey(e.rid));case 15:t.keyReceived(),r.next=21;break;case 18:return console.warn(\"Invalid E2ESuggestedKey, rejecting\",e.E2ESuggestedKey),r.next=21,s.awrap(this.rejectSuggestedKey(e.rid));case 21:if(e.encrypted?t.resume():t.pause(),t.isSupportedRoomType(e.t)){r.next=25;break}return t.disable(),r.abrupt(\"return\");case 25:if(!(e.E2EKey&&t.isWaitingKeys())){r.next=28;break}return t.keyReceived(),r.abrupt(\"return\");case 28:if(t.isReady()){r.next=30;break}return r.abrupt(\"return\");case 30:return r.next=32,s.awrap(t.decryptSubscription());case 32:case\"end\":return r.stop()}},null,this,null,Promise)},r.observeSubscriptions=function(){var e,t=this;null===(e=this.observable)||void 0===e||e.stop(),this.observable=I.find().observe({changed:function(e){setTimeout(function(){return t.onSubscriptionChanged(e)},0)},added:function(e){setTimeout(function(){return s.async(function(r){for(;;)switch(r.prev=r.next){case 0:if(t.log(\"Subscription added\",e),!(!e.encrypted&&!e.E2EKey)){r.next=3;break}return r.abrupt(\"return\");case 3:return r.abrupt(\"return\",t.getInstanceByRoomId(e.rid));case 4:case\"end\":return r.stop()}},null,null,null,Promise)},0)},removed:function(e){t.log(\"Subscription removed\",e),t.removeInstanceByRoomId(e.rid)}})},r.shouldAskForE2EEPassword=function(){var e=this.getKeysFromLocalStorage().private_key;return this.db_private_key&&!e},r.setState=function(e){var t=this.state;this.state=e,Z.changed(),this.emit(\"E2E_STATE_CHANGED\",{prevState:t,nextState:e}),this.emit(e)},r.handleAsyncE2EESuggestedKey=function(){var e,t=this;return s.async(function(r){for(;;)switch(r.prev=r.next){case 0:return e=I.find({E2ESuggestedKey:{$exists:!0}}).fetch(),r.next=3,s.awrap(Promise.all(e.filter(function(e){return e.E2ESuggestedKey&&!e.E2EKey}).map(function e(e){var r;return s.async(function n(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,s.awrap(ee.getInstanceByRoomId(e.rid));case 2:if(r=n.sent){n.next=5;break}return n.abrupt(\"return\");case 5:return n.next=7,s.awrap(r.importGroupKey(e.E2ESuggestedKey));case 7:if(!n.sent){n.next=14;break}return t.log(\"Imported valid E2E suggested key\"),n.next=11,s.awrap(ee.acceptSuggestedKey(e.rid));case 11:r.keyReceived(),n.next=17;break;case 14:return t.error(\"Invalid E2ESuggestedKey, rejecting\",e.E2ESuggestedKey),n.next=17,s.awrap(ee.rejectSuggestedKey(e.rid));case 17:e.encrypted?r.resume():r.pause();case 18:case\"end\":return n.stop()}},null,null,null,Promise)})));case 3:case\"end\":return r.stop()}},null,null,null,Promise)},r.getInstanceByRoomId=function(e){var t;return s.async(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,s.awrap(k(function(){return P.findOne({_id:e})}));case 2:if(!(\"d\"!==(t=r.sent).t&&\"p\"!==t.t)){r.next=5;break}return r.abrupt(\"return\",null);case 5:if(t.encrypted){r.next=7;break}return r.abrupt(\"return\",null);case 7:return this.instancesByRoomId[e]||(this.instancesByRoomId[e]=new $(b.userId(),t)),void 0!==this.instancesByRoomId[e].keyID&&void 0!==t.e2eKeyId&&this.instancesByRoomId[e].keyID!==t.e2eKeyId&&this.instancesByRoomId[e].onRoomKeyReset(t.e2eKeyId),r.abrupt(\"return\",this.instancesByRoomId[e]);case 10:case\"end\":return r.stop()}},null,this,null,Promise)},r.removeInstanceByRoomId=function(e){delete this.instancesByRoomId[e]},r.persistKeys=function(e,t){var r,n,a,i,o=arguments;return s.async(function(c){for(;;)switch(c.prev=c.next){case 0:if(r=e.public_key,n=e.private_key,a=(o.length>2&&void 0!==o[2]?o[2]:{force:!1}).force,!(\"string\"!=typeof r||\"string\"!=typeof n)){c.next=4;break}throw Error(\"Failed to persist keys as they are not strings.\");case 4:return c.next=6,s.awrap(this.encodePrivateKey(n,t));case 6:if(i=c.sent){c.next=9;break}throw Error(\"Failed to encode private key with provided password.\");case 9:return c.next=11,s.awrap(M.rest.post(\"/v1/e2e.setUserPublicAndPrivateKeys\",{public_key:r,private_key:i,force:a}));case 11:case\"end\":return c.stop()}},null,this,null,Promise)},r.acceptSuggestedKey=function(e){return s.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,s.awrap(M.rest.post(\"/v1/e2e.acceptSuggestedGroupKey\",{rid:e}));case 2:case\"end\":return t.stop()}},null,null,null,Promise)},r.rejectSuggestedKey=function(e){return s.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,s.awrap(M.rest.post(\"/v1/e2e.rejectSuggestedGroupKey\",{rid:e}));case 2:case\"end\":return t.stop()}},null,null,null,Promise)},r.getKeysFromLocalStorage=function(){return{public_key:h.storageLocation.getItem(\"public_key\"),private_key:h.storageLocation.getItem(\"private_key\")}},r.initiateHandshake=function(){var e=this;Object.keys(this.instancesByRoomId).map(function(t){return e.instancesByRoomId[t].handshake()})},r.openSaveE2EEPasswordModal=function(e){var t=this;E.open({component:_,props:{randomPassword:e,onClose:E.close,onCancel:function(){t.closeAlert(),E.close()},onConfirm:function(){h.storageLocation.removeItem(\"e2e.randomPassword\"),t.setState(O.READY),m({type:\"success\",message:L(\"End_To_End_Encryption_Enabled\")}),t.closeAlert(),E.close()}}})},r.startClient=function(){var e,t,r,n,a=this;return s.async(function(i){for(;;)switch(i.prev=i.next){case 0:if(!this.started){i.next=2;break}return i.abrupt(\"return\");case 2:return this.log(\"startClient -> STARTED\"),this.started=!0,t=(e=this.getKeysFromLocalStorage()).public_key,r=e.private_key,i.next=7,s.awrap(this.loadKeysFromDB());case 7:if(!t&&this.db_public_key&&(t=this.db_public_key),!this.shouldAskForE2EEPassword()){i.next=22;break}return i.prev=9,this.setState(O.ENTER_PASSWORD),i.next=13,s.awrap(this.decodePrivateKey(this.db_private_key));case 13:r=i.sent,i.next=22;break;case 16:return i.prev=16,i.t0=i.catch(9),this.started=!1,X=!0,this.openAlert({title:\"Wasn't possible to decode your encryption key to be imported.\",html:\"<div>Your encryption password seems wrong. Click here to try again.</div>\",modifiers:[\"large\",\"danger\"],closable:!0,icon:\"key\",action:function e(){return s.async(function e(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,s.awrap(a.startClient());case 2:a.closeAlert();case 3:case\"end\":return e.stop()}},null,null,null,Promise)}}),i.abrupt(\"return\");case 22:if(!(t&&r)){i.next=28;break}return i.next=25,s.awrap(this.loadKeys({public_key:t,private_key:r}));case 25:this.setState(O.READY),i.next=31;break;case 28:return i.next=30,s.awrap(this.createAndLoadKeys());case 30:this.setState(O.READY);case 31:if(!(!this.db_public_key||!this.db_private_key)){i.next=42;break}return this.setState(O.LOADING_KEYS),i.t1=s,i.t2=this,i.t3=this.getKeysFromLocalStorage(),i.next=38,s.awrap(this.createRandomPassword());case 38:return i.t4=i.sent,i.t5=i.t2.persistKeys.call(i.t2,i.t3,i.t4),i.next=42,i.t1.awrap.call(i.t1,i.t5);case 42:(n=h.storageLocation.getItem(\"e2e.randomPassword\"))&&(this.setState(O.SAVE_PASSWORD),this.openAlert({title:function(){return L(\"Save_your_encryption_password\")},html:function(){return L(\"Click_here_to_view_and_copy_your_password\")},modifiers:[\"large\"],closable:!1,icon:\"key\",action:function(){return a.openSaveE2EEPasswordModal(n)}}));case 44:case\"end\":return i.stop()}},null,this,[[9,16]],Promise)},r.stopClient=function(){return s.async(function(e){for(;;)switch(e.prev=e.next){case 0:this.log(\"-> Stop Client\"),this.closeAlert(),h.storageLocation.removeItem(\"public_key\"),h.storageLocation.removeItem(\"private_key\"),this.instancesByRoomId={},this.privateKey=void 0,this.publicKey=void 0,this.started=!1,this.keyDistributionInterval&&clearInterval(this.keyDistributionInterval),this.keyDistributionInterval=null,this.setState(O.DISABLED);case 11:case\"end\":return e.stop()}},null,this,null,Promise)},r.changePassword=function(e){return s.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,s.awrap(this.persistKeys(this.getKeysFromLocalStorage(),e,{force:!0}));case 2:h.storageLocation.getItem(\"e2e.randomPassword\")&&h.storageLocation.setItem(\"e2e.randomPassword\",e);case 3:case\"end\":return t.stop()}},null,this,null,Promise)},r.loadKeysFromDB=function(){var e,t,r;return s.async(function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,this.setState(O.LOADING_KEYS),n.next=4,s.awrap(M.rest.get(\"/v1/e2e.fetchMyKeys\"));case 4:t=(e=n.sent).public_key,r=e.private_key,this.db_public_key=t,this.db_private_key=r,n.next=16;break;case 11:throw n.prev=11,n.t0=n.catch(0),this.setState(O.ERROR),this.error(\"Error fetching RSA keys: \",n.t0),n.t0;case 16:case\"end\":return n.stop()}},null,this,[[0,11]],Promise)},r.loadKeys=function(e){var t,r;return s.async(function(n){for(;;)switch(n.prev=n.next){case 0:return t=e.public_key,r=e.private_key,h.storageLocation.setItem(\"public_key\",t),this.publicKey=t,n.prev=3,n.next=6,s.awrap(U(y.parse(r),[\"decrypt\"]));case 6:this.privateKey=n.sent,h.storageLocation.setItem(\"private_key\",r),n.next=14;break;case 10:return n.prev=10,n.t0=n.catch(3),this.setState(O.ERROR),n.abrupt(\"return\",this.error(\"Error importing private key: \",n.t0));case 14:case\"end\":return n.stop()}},null,this,[[3,10]],Promise)},r.createAndLoadKeys=function(){var e,t,r;return s.async(function(n){for(;;)switch(n.prev=n.next){case 0:return this.setState(O.LOADING_KEYS),n.prev=1,n.next=4,s.awrap(Y());case 4:e=n.sent,this.privateKey=e.privateKey,n.next=12;break;case 8:return n.prev=8,n.t0=n.catch(1),this.setState(O.ERROR),n.abrupt(\"return\",this.error(\"Error generating key: \",n.t0));case 12:return n.prev=12,n.next=15,s.awrap(G(e.publicKey));case 15:t=n.sent,this.publicKey=JSON.stringify(t),h.storageLocation.setItem(\"public_key\",JSON.stringify(t)),n.next=24;break;case 20:return n.prev=20,n.t1=n.catch(12),this.setState(O.ERROR),n.abrupt(\"return\",this.error(\"Error exporting public key: \",n.t1));case 24:return n.prev=24,n.next=27,s.awrap(G(e.privateKey));case 27:r=n.sent,h.storageLocation.setItem(\"private_key\",JSON.stringify(r)),n.next=35;break;case 31:return n.prev=31,n.t2=n.catch(24),this.setState(O.ERROR),n.abrupt(\"return\",this.error(\"Error exporting private key: \",n.t2));case 35:return n.next=37,s.awrap(this.requestSubscriptionKeys());case 37:case\"end\":return n.stop()}},null,this,[[1,8],[12,20],[24,31]],Promise)},r.requestSubscriptionKeys=function(){return s.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,s.awrap(M.call(\"e2e.requestSubscriptionKeys\"));case 2:case\"end\":return e.stop()}},null,null,null,Promise)},r.createRandomPassword=function(){var e;return s.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,s.awrap(H(5));case 2:return e=t.sent,h.storageLocation.setItem(\"e2e.randomPassword\",e),t.abrupt(\"return\",e);case 5:case\"end\":return t.stop()}},null,null,null,Promise)},r.encodePrivateKey=function(e,t){var r,n,a;return s.async(function(i){for(;;)switch(i.prev=i.next){case 0:return i.next=2,s.awrap(this.getMasterKey(t));case 2:return r=i.sent,n=crypto.getRandomValues(new Uint8Array(16)),i.prev=4,i.next=7,s.awrap(j(n,r,C(e)));case 7:return a=i.sent,i.abrupt(\"return\",y.stringify(F(n,a)));case 11:return i.prev=11,i.t0=i.catch(4),this.setState(O.ERROR),i.abrupt(\"return\",this.error(\"Error encrypting encodedPrivateKey: \",i.t0));case 15:case\"end\":return i.stop()}},null,this,[[4,11]],Promise)},r.getMasterKey=function(e){var t;return s.async(function(r){for(;;)switch(r.prev=r.next){case 0:return null==e&&alert(\"You should provide a password\"),r.prev=1,r.next=4,s.awrap(q(C(e)));case 4:t=r.sent,r.next=11;break;case 7:return r.prev=7,r.t0=r.catch(1),this.setState(O.ERROR),r.abrupt(\"return\",this.error(\"Error creating a key based on user password: \",r.t0));case 11:return r.prev=11,r.next=14,s.awrap(V(C(b.userId()),t));case 14:return r.abrupt(\"return\",r.sent);case 17:return r.prev=17,r.t1=r.catch(11),this.setState(O.ERROR),r.abrupt(\"return\",this.error(\"Error deriving baseKey: \",r.t1));case 21:case\"end\":return r.stop()}},null,this,[[1,7],[11,17]],Promise)},r.openEnterE2EEPasswordModal=function(e){var t=this;E.open({component:w,props:{onClose:E.close,onCancel:function(){X=!1,m({type:\"info\",message:L(\"End_To_End_Encryption_Not_Enabled\")}),t.closeAlert(),E.close()},onConfirm:function(r){null==e||e(r),t.closeAlert(),E.close()}}})},r.requestPasswordAlert=function(){var e=this;return s.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt(\"return\",new Promise(function(t){var r=function(){return e.openEnterE2EEPasswordModal(function(e){return t(e)})};X?r():e.openAlert({title:function(){return L(\"Enter_your_E2E_password\")},html:function(){return L(\"Click_here_to_enter_your_encryption_password\")},modifiers:[\"large\"],closable:!1,icon:\"key\",action:function(){r()}})}));case 1:case\"end\":return t.stop()}},null,null,null,Promise)},r.requestPasswordModal=function(){var e=this;return s.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt(\"return\",new Promise(function(t){return e.openEnterE2EEPasswordModal(function(e){return t(e)})}));case 1:case\"end\":return t.stop()}},null,null,null,Promise)},r.decodePrivateKeyFlow=function(){var e,t,r,n,a,o,c,u;return s.async(function(l){for(;;)switch(l.prev=l.next){case 0:return l.next=2,s.awrap(this.requestPasswordModal());case 2:return e=l.sent,l.next=5,s.awrap(this.getMasterKey(e));case 5:if(t=l.sent,this.db_private_key){l.next=8;break}return l.abrupt(\"return\");case 8:return r=N(y.parse(this.db_private_key)),a=(n=i(r,2))[0],o=n[1],l.prev=9,l.next=12,s.awrap(W(a,t,o));case 12:if(c=l.sent,u=T(c),!(this.db_public_key&&u)){l.next=20;break}return l.next=17,s.awrap(this.loadKeys({public_key:this.db_public_key,private_key:u}));case 17:this.setState(O.READY),l.next=23;break;case 20:return l.next=22,s.awrap(this.createAndLoadKeys());case 22:this.setState(O.READY);case 23:m({type:\"success\",message:L(\"End_To_End_Encryption_Enabled\")}),l.next=32;break;case 26:throw l.prev=26,l.t0=l.catch(9),this.setState(O.ENTER_PASSWORD),m({type:\"error\",message:L(\"Your_E2EE_password_is_incorrect\")}),m({type:\"info\",message:L(\"End_To_End_Encryption_Not_Enabled\")}),Error(\"E2E -> Error decrypting private key\");case 32:case\"end\":return l.stop()}},null,this,[[9,26]],Promise)},r.decodePrivateKey=function(e){var t,r,n,a,o,c,u;return s.async(function(l){for(;;)switch(l.prev=l.next){case 0:return l.next=2,s.awrap(this.requestPasswordAlert());case 2:return t=l.sent,l.next=5,s.awrap(this.getMasterKey(t));case 5:return r=l.sent,n=N(y.parse(e)),o=(a=i(n,2))[0],c=a[1],l.prev=7,l.next=10,s.awrap(W(o,r,c));case 10:return u=l.sent,l.abrupt(\"return\",T(u));case 14:throw l.prev=14,l.t0=l.catch(7),this.setState(O.ENTER_PASSWORD),m({type:\"error\",message:L(\"Your_E2EE_password_is_incorrect\")}),m({type:\"info\",message:L(\"End_To_End_Encryption_Not_Enabled\")}),Error(\"E2E -> Error decrypting private key\");case 20:case\"end\":return l.stop()}},null,this,[[7,14]],Promise)},r.decryptFileContent=function(e){var t;return s.async(function(r){for(;;)switch(r.prev=r.next){case 0:if(e.rid){r.next=2;break}return r.abrupt(\"return\",e);case 2:return r.next=4,s.awrap(this.getInstanceByRoomId(e.rid));case 4:if(t=r.sent){r.next=7;break}return r.abrupt(\"return\",e);case 7:return r.abrupt(\"return\",t.decryptContent(e));case 8:case\"end\":return r.stop()}},null,this,null,Promise)},r.decryptMessage=function(e){var t,r,n;return s.async(function(a){for(;;)switch(a.prev=a.next){case 0:if(!(!p(e)||\"done\"===e.e2e)){a.next=2;break}return a.abrupt(\"return\",e);case 2:return a.next=4,s.awrap(this.getInstanceByRoomId(e.rid));case 4:if(t=a.sent){a.next=7;break}return a.abrupt(\"return\",e);case 7:return a.next=9,s.awrap(t.decryptMessage(e));case 9:return r=a.sent,a.next=12,s.awrap(this.parseQuoteAttachment(r));case 12:return n=a.sent,a.abrupt(\"return\",n);case 14:case\"end\":return a.stop()}},null,this,null,Promise)},r.decryptPinnedMessage=function(e){var t,r,n,i,o,c;return s.async(function(u){for(;;)switch(u.prev=u.next){case 0:if(n=null==e?void 0:null===(t=e.attachments)||void 0===t?void 0:null===(r=t[0])||void 0===r?void 0:r.text){u.next=3;break}return u.abrupt(\"return\",e);case 3:return u.next=5,s.awrap(this.getInstanceByRoomId(e.rid));case 5:if(i=u.sent){u.next=8;break}return u.abrupt(\"return\",e);case 8:return u.next=10,s.awrap(i.decrypt(n));case 10:if(o=u.sent){u.next=13;break}return u.abrupt(\"return\",e);case 13:return(c=a({},e)).attachments[0].text=o.text,u.abrupt(\"return\",c);case 16:case\"end\":return u.stop()}},null,this,null,Promise)},r.decryptPendingMessages=function(){var e=this;return s.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt(\"return\",A.find({t:\"e2e\",e2e:\"pending\"}).forEach(function t(t){var r,a;return s.async(function i(i){for(;;)switch(i.prev=i.next){case 0:return r=t._id,a=n(t,z),i.t0=A,i.t1={_id:r},i.next=5,s.awrap(e.decryptMessage(a));case 5:i.t2=i.sent,i.t0.update.call(i.t0,i.t1,i.t2);case 7:case\"end\":return i.stop()}},null,null,null,Promise)}));case 1:case\"end\":return t.stop()}},null,null,null,Promise)},r.decryptSubscription=function(e){var t;return s.async(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,s.awrap(this.getInstanceByRoomId(e));case 2:return t=r.sent,this.log(\"decryptSubscription ->\",e),r.next=6,s.awrap(null==t?void 0:t.decryptSubscription());case 6:case\"end\":return r.stop()}},null,this,null,Promise)},r.decryptSubscriptions=function(){var e=this;return s.async(function(t){for(;;)switch(t.prev=t.next){case 0:I.find({encrypted:!0}).forEach(function(t){return e.decryptSubscription(t._id)});case 1:case\"end\":return t.stop()}},null,null,null,Promise)},r.openAlert=function(e){g.open(a({id:\"e2e\"},e))},r.closeAlert=function(){g.closeById(\"e2e\")},r.parseQuoteAttachment=function(e){var t,r=this;return s.async(function(n){for(;;)switch(n.prev=n.next){case 0:if(null!=e&&e.msg){n.next=2;break}return n.abrupt(\"return\",e);case 2:return t=e.msg.match(K())||[],n.next=5,s.awrap(Promise.all(t.map(function t(t){var n,a,i,o,c,p,d;return s.async(function y(y){for(;;)switch(y.prev=y.next){case 0:if(t.includes(D.get(\"Site_Url\"))){y.next=2;break}return y.abrupt(\"return\");case 2:if((n=l.parse(t)).query){y.next=5;break}return y.abrupt(\"return\");case 5:if(!(!(a=u.parse(n.query).msg)||Array.isArray(a))){y.next=8;break}return y.abrupt(\"return\");case 8:return y.next=10,s.awrap(M.rest.get(\"/v1/chat.getMessage\",{msgId:a}));case 10:if(o=null==(i=y.sent)?void 0:i.message){y.next=14;break}return y.abrupt(\"return\");case 14:return y.next=16,s.awrap(r.decryptMessage(x(o)));case 16:c=y.sent,e.attachments=e.attachments||[],p=D.get(\"UI_Use_Real_Name\"),d=S(c,t,p,B(c.u.username||\"\")),e.attachments.push(d);case 21:case\"end\":return y.stop()}},null,null,null,Promise)})));case 5:return n.abrupt(\"return\",e);case 6:case\"end\":return n.stop()}},null,null,null,Promise)},r.getSuggestedE2EEKeys=function(e){var t,r=this;return s.async(function(n){for(;;)switch(n.prev=n.next){case 0:return t=Object.keys(e),n.t0=Object,n.next=4,s.awrap(Promise.all(t.map(function t(t){var n,a;return s.async(function i(i){for(;;)switch(i.prev=i.next){case 0:return i.next=2,s.awrap(r.getInstanceByRoomId(t));case 2:if(n=i.sent){i.next=5;break}return i.abrupt(\"return\");case 5:return i.next=7,s.awrap(n.encryptGroupKeyForParticipantsWaitingForTheKeys(e[t]));case 7:if(a=i.sent){i.next=10;break}return i.abrupt(\"return\");case 10:return i.abrupt(\"return\",[t,a]);case 11:case\"end\":return i.stop()}},null,null,null,Promise)})));case 4:return n.t1=n.sent.filter(R),n.abrupt(\"return\",n.t0.fromEntries.call(n.t0,n.t1));case 6:case\"end\":return n.stop()}},null,null,null,Promise)},r.getSample=function(e){var t,r,n,a,i,o,u,l,p,d,y=arguments;return s.async(function(h){for(;;)switch(h.prev=h.next){case 0:if(0!==(t=y.length>1&&void 0!==y[1]?y[1]:3)){h.next=3;break}return h.abrupt(\"return\",[]);case 3:r=f.sampleSize(e,10),n=[],a=!1,i=!1,h.prev=7,u=c(r);case 9:return h.next=11,s.awrap(u.next());case 11:if(!(a=!(l=h.sent).done)){h.next=22;break}return p=l.value,h.next=15,s.awrap(this.getInstanceByRoomId(p));case 15:if(null!=(d=h.sent)&&d.hasSessionKey()){h.next=18;break}return h.abrupt(\"continue\",19);case 18:n.push(p);case 19:a=!1,h.next=9;break;case 22:h.next=28;break;case 24:h.prev=24,h.t0=h.catch(7),i=!0,o=h.t0;case 28:if(h.prev=28,h.prev=29,!(a&&null!=u.return)){h.next=33;break}return h.next=33,s.awrap(u.return());case 33:if(h.prev=33,!i){h.next=36;break}throw o;case 36:return h.finish(33);case 37:return h.finish(28);case 38:if(n.length){h.next=40;break}return h.abrupt(\"return\",this.getSample(e,t-1));case 40:return h.abrupt(\"return\",n);case 41:case\"end\":return h.stop()}},null,this,[[7,24,28,38],[29,,33,37]],Promise)},r.initiateKeyDistribution=function(){var e,t=this;return s.async(function(r){for(;;)switch(r.prev=r.next){case 0:if(!this.keyDistributionInterval){r.next=2;break}return r.abrupt(\"return\");case 2:return e=function e(){var e,r,n,a,i;return s.async(function o(o){for(;;)switch(o.prev=o.next){case 0:if((e=P.find({usersWaitingForE2EKeys:{$exists:!0},\"usersWaitingForE2EKeys.userId\":{$ne:b.userId()}}).map(function(e){return e._id})).length){o.next=3;break}return o.abrupt(\"return\");case 3:return o.next=5,s.awrap(t.getSample(e));case 5:if((r=o.sent).length){o.next=8;break}return o.abrupt(\"return\");case 8:return o.next=10,s.awrap(M.rest.get(\"/v1/e2e.fetchUsersWaitingForGroupKey\",{roomIds:r}));case 10:if(Object.keys(a=void 0===(n=o.sent.usersWaitingForE2EKeys)?{}:n).length){o.next=15;break}return o.abrupt(\"return\");case 15:return o.next=17,s.awrap(t.getSuggestedE2EEKeys(a));case 17:if(Object.keys(i=o.sent).length){o.next=20;break}return o.abrupt(\"return\");case 20:return o.prev=20,o.next=23,s.awrap(M.rest.post(\"/v1/e2e.provideUsersSuggestedGroupKeys\",{usersSuggestedGroupKeys:i}));case 23:o.next=28;break;case 25:return o.prev=25,o.t0=o.catch(20),o.abrupt(\"return\",t.error(\"Error providing group key to users: \",o.t0));case 28:case\"end\":return o.stop()}},null,null,[[20,25]],Promise)},r.next=5,s.awrap(e());case 5:this.keyDistributionInterval=setInterval(e,1e4);case 6:case\"end\":return r.stop()}},null,this,null,Promise)},t}(d))}","map":"{\"version\":3,\"sources\":[\"app/e2e/client/rocketchat.e2e.ts\",\"<anon>\"],\"sourcesContent\":[\"import QueryString from 'querystring';\\nimport URL from 'url';\\n\\nimport type { IE2EEMessage, IMessage, IRoom, ISubscription, IUser, IUploadWithUser, MessageAttachment } from '@rocket.chat/core-typings';\\nimport { isE2EEMessage } from '@rocket.chat/core-typings';\\nimport { Emitter } from '@rocket.chat/emitter';\\nimport EJSON from 'ejson';\\nimport _ from 'lodash';\\nimport { Accounts } from 'meteor/accounts-base';\\nimport { Meteor } from 'meteor/meteor';\\nimport { Tracker } from 'meteor/tracker';\\n\\nimport * as banners from '../../../client/lib/banners';\\nimport type { LegacyBannerPayload } from '../../../client/lib/banners';\\nimport { imperativeModal } from '../../../client/lib/imperativeModal';\\nimport { dispatchToastMessage } from '../../../client/lib/toast';\\nimport { mapMessageFromApi } from '../../../client/lib/utils/mapMessageFromApi';\\nimport { waitUntilFind } from '../../../client/lib/utils/waitUntilFind';\\nimport EnterE2EPasswordModal from '../../../client/views/e2e/EnterE2EPasswordModal';\\nimport SaveE2EPasswordModal from '../../../client/views/e2e/SaveE2EPasswordModal';\\nimport { createQuoteAttachment } from '../../../lib/createQuoteAttachment';\\nimport { getMessageUrlRegex } from '../../../lib/getMessageUrlRegex';\\nimport { isTruthy } from '../../../lib/isTruthy';\\nimport { ChatRoom, Subscriptions, Messages } from '../../models/client';\\nimport { settings } from '../../settings/client';\\nimport { getUserAvatarURL } from '../../utils/client';\\nimport { sdk } from '../../utils/client/lib/SDKClient';\\nimport { t } from '../../utils/lib/i18n';\\nimport { E2EEState } from './E2EEState';\\nimport {\\n\\ttoString,\\n\\ttoArrayBuffer,\\n\\tjoinVectorAndEcryptedData,\\n\\tsplitVectorAndEcryptedData,\\n\\tencryptAES,\\n\\tdecryptAES,\\n\\tgenerateRSAKey,\\n\\texportJWKKey,\\n\\timportRSAKey,\\n\\timportRawKey,\\n\\tderiveKey,\\n\\tgenerateMnemonicPhrase,\\n} from './helper';\\nimport { log, logError } from './logger';\\nimport { E2ERoom } from './rocketchat.e2e.room';\\n\\nimport './events.js';\\n\\nlet failedToDecodeKey = false;\\n\\ntype KeyPair = {\\n\\tpublic_key: string | null;\\n\\tprivate_key: string | null;\\n};\\n\\nconst ROOM_KEY_EXCHANGE_SIZE = 10;\\nconst E2EEStateDependency = new Tracker.Dependency();\\n\\nclass E2E extends Emitter {\\n\\tprivate started: boolean;\\n\\n\\tprivate instancesByRoomId: Record<IRoom['_id'], E2ERoom>;\\n\\n\\tprivate db_public_key: string | null | undefined;\\n\\n\\tprivate db_private_key: string | null | undefined;\\n\\n\\tpublic privateKey: CryptoKey | undefined;\\n\\n\\tpublic publicKey: string | undefined;\\n\\n\\tprivate keyDistributionInterval: ReturnType<typeof setInterval> | null;\\n\\n\\tprivate state: E2EEState;\\n\\n\\tprivate observable: Meteor.LiveQueryHandle | undefined;\\n\\n\\tconstructor() {\\n\\t\\tsuper();\\n\\t\\tthis.started = false;\\n\\t\\tthis.instancesByRoomId = {};\\n\\t\\tthis.keyDistributionInterval = null;\\n\\t\\tthis.observable = undefined;\\n\\n\\t\\tthis.on('E2E_STATE_CHANGED', ({ prevState, nextState }) => {\\n\\t\\t\\tthis.log(`${prevState} -> ${nextState}`);\\n\\t\\t});\\n\\n\\t\\tthis.on(E2EEState.READY, async () => {\\n\\t\\t\\tawait this.onE2EEReady();\\n\\t\\t});\\n\\n\\t\\tthis.on(E2EEState.SAVE_PASSWORD, async () => {\\n\\t\\t\\tawait this.onE2EEReady();\\n\\t\\t});\\n\\n\\t\\tthis.on(E2EEState.DISABLED, () => {\\n\\t\\t\\tthis.observable?.stop();\\n\\t\\t});\\n\\n\\t\\tthis.on(E2EEState.NOT_STARTED, () => {\\n\\t\\t\\tthis.observable?.stop();\\n\\t\\t});\\n\\n\\t\\tthis.on(E2EEState.ERROR, () => {\\n\\t\\t\\tthis.observable?.stop();\\n\\t\\t});\\n\\n\\t\\tthis.setState(E2EEState.NOT_STARTED);\\n\\t}\\n\\n\\tlog(...msg: unknown[]) {\\n\\t\\tlog('E2E', ...msg);\\n\\t}\\n\\n\\terror(...msg: unknown[]) {\\n\\t\\tlogError('E2E', ...msg);\\n\\t}\\n\\n\\tgetState() {\\n\\t\\treturn this.state;\\n\\t}\\n\\n\\tisEnabled(): boolean {\\n\\t\\treturn this.state !== E2EEState.DISABLED;\\n\\t}\\n\\n\\tisReady(): boolean {\\n\\t\\tE2EEStateDependency.depend();\\n\\n\\t\\t// Save_Password state is also a ready state for E2EE\\n\\t\\treturn this.state === E2EEState.READY || this.state === E2EEState.SAVE_PASSWORD;\\n\\t}\\n\\n\\tasync onE2EEReady() {\\n\\t\\tthis.log('startClient -> Done');\\n\\t\\tthis.initiateHandshake();\\n\\t\\tawait this.handleAsyncE2EESuggestedKey();\\n\\t\\tthis.log('decryptSubscriptions');\\n\\t\\tawait this.decryptSubscriptions();\\n\\t\\tthis.log('decryptSubscriptions -> Done');\\n\\t\\tawait this.initiateKeyDistribution();\\n\\t\\tthis.log('initiateKeyDistribution -> Done');\\n\\t\\tthis.observeSubscriptions();\\n\\t\\tthis.log('observing subscriptions');\\n\\t}\\n\\n\\tasync onSubscriptionChanged(sub: ISubscription) {\\n\\t\\tthis.log('Subscription changed', sub);\\n\\t\\tif (!sub.encrypted && !sub.E2EKey) {\\n\\t\\t\\tthis.removeInstanceByRoomId(sub.rid);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst e2eRoom = await this.getInstanceByRoomId(sub.rid);\\n\\t\\tif (!e2eRoom) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (sub.E2ESuggestedKey) {\\n\\t\\t\\tif (await e2eRoom.importGroupKey(sub.E2ESuggestedKey)) {\\n\\t\\t\\t\\tawait this.acceptSuggestedKey(sub.rid);\\n\\t\\t\\t\\te2eRoom.keyReceived();\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tconsole.warn('Invalid E2ESuggestedKey, rejecting', sub.E2ESuggestedKey);\\n\\t\\t\\t\\tawait this.rejectSuggestedKey(sub.rid);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tsub.encrypted ? e2eRoom.resume() : e2eRoom.pause();\\n\\n\\t\\t// Cover private groups and direct messages\\n\\t\\tif (!e2eRoom.isSupportedRoomType(sub.t)) {\\n\\t\\t\\te2eRoom.disable();\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (sub.E2EKey && e2eRoom.isWaitingKeys()) {\\n\\t\\t\\te2eRoom.keyReceived();\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (!e2eRoom.isReady()) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tawait e2eRoom.decryptSubscription();\\n\\t}\\n\\n\\tobserveSubscriptions() {\\n\\t\\tthis.observable?.stop();\\n\\n\\t\\tthis.observable = Subscriptions.find().observe({\\n\\t\\t\\tchanged: (sub: ISubscription) => {\\n\\t\\t\\t\\tsetTimeout(() => this.onSubscriptionChanged(sub), 0);\\n\\t\\t\\t},\\n\\t\\t\\tadded: (sub: ISubscription) => {\\n\\t\\t\\t\\tsetTimeout(async () => {\\n\\t\\t\\t\\t\\tthis.log('Subscription added', sub);\\n\\t\\t\\t\\t\\tif (!sub.encrypted && !sub.E2EKey) {\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn this.getInstanceByRoomId(sub.rid);\\n\\t\\t\\t\\t}, 0);\\n\\t\\t\\t},\\n\\t\\t\\tremoved: (sub: ISubscription) => {\\n\\t\\t\\t\\tthis.log('Subscription removed', sub);\\n\\t\\t\\t\\tthis.removeInstanceByRoomId(sub.rid);\\n\\t\\t\\t},\\n\\t\\t});\\n\\t}\\n\\n\\tshouldAskForE2EEPassword() {\\n\\t\\tconst { private_key } = this.getKeysFromLocalStorage();\\n\\t\\treturn this.db_private_key && !private_key;\\n\\t}\\n\\n\\tsetState(nextState: E2EEState) {\\n\\t\\tconst prevState = this.state;\\n\\n\\t\\tthis.state = nextState;\\n\\n\\t\\tE2EEStateDependency.changed();\\n\\n\\t\\tthis.emit('E2E_STATE_CHANGED', { prevState, nextState });\\n\\n\\t\\tthis.emit(nextState);\\n\\t}\\n\\n\\tasync handleAsyncE2EESuggestedKey() {\\n\\t\\tconst subs = Subscriptions.find({ E2ESuggestedKey: { $exists: true } }).fetch();\\n\\t\\tawait Promise.all(\\n\\t\\t\\tsubs\\n\\t\\t\\t\\t.filter((sub) => sub.E2ESuggestedKey && !sub.E2EKey)\\n\\t\\t\\t\\t.map(async (sub) => {\\n\\t\\t\\t\\t\\tconst e2eRoom = await e2e.getInstanceByRoomId(sub.rid);\\n\\n\\t\\t\\t\\t\\tif (!e2eRoom) {\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (await e2eRoom.importGroupKey(sub.E2ESuggestedKey)) {\\n\\t\\t\\t\\t\\t\\tthis.log('Imported valid E2E suggested key');\\n\\t\\t\\t\\t\\t\\tawait e2e.acceptSuggestedKey(sub.rid);\\n\\t\\t\\t\\t\\t\\te2eRoom.keyReceived();\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tthis.error('Invalid E2ESuggestedKey, rejecting', sub.E2ESuggestedKey);\\n\\t\\t\\t\\t\\t\\tawait e2e.rejectSuggestedKey(sub.rid);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tsub.encrypted ? e2eRoom.resume() : e2eRoom.pause();\\n\\t\\t\\t\\t}),\\n\\t\\t);\\n\\t}\\n\\n\\tasync getInstanceByRoomId(rid: IRoom['_id']): Promise<E2ERoom | null> {\\n\\t\\tconst room = await waitUntilFind(() => ChatRoom.findOne({ _id: rid }));\\n\\n\\t\\tif (room.t !== 'd' && room.t !== 'p') {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\tif (!room.encrypted) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\tif (!this.instancesByRoomId[rid]) {\\n\\t\\t\\tthis.instancesByRoomId[rid] = new E2ERoom(Meteor.userId(), room);\\n\\t\\t}\\n\\n\\t\\t// When the key was already set and is changed via an update, we update the room instance\\n\\t\\tif (\\n\\t\\t\\tthis.instancesByRoomId[rid].keyID !== undefined &&\\n\\t\\t\\troom.e2eKeyId !== undefined &&\\n\\t\\t\\tthis.instancesByRoomId[rid].keyID !== room.e2eKeyId\\n\\t\\t) {\\n\\t\\t\\t// KeyID was changed, update instance with new keyID and put room in waiting keys status\\n\\t\\t\\tthis.instancesByRoomId[rid].onRoomKeyReset(room.e2eKeyId);\\n\\t\\t}\\n\\n\\t\\treturn this.instancesByRoomId[rid];\\n\\t}\\n\\n\\tremoveInstanceByRoomId(rid: IRoom['_id']): void {\\n\\t\\tdelete this.instancesByRoomId[rid];\\n\\t}\\n\\n\\tprivate async persistKeys(\\n\\t\\t{ public_key, private_key }: KeyPair,\\n\\t\\tpassword: string,\\n\\t\\t{ force }: { force: boolean } = { force: false },\\n\\t): Promise<void> {\\n\\t\\tif (typeof public_key !== 'string' || typeof private_key !== 'string') {\\n\\t\\t\\tthrow new Error('Failed to persist keys as they are not strings.');\\n\\t\\t}\\n\\n\\t\\tconst encodedPrivateKey = await this.encodePrivateKey(private_key, password);\\n\\n\\t\\tif (!encodedPrivateKey) {\\n\\t\\t\\tthrow new Error('Failed to encode private key with provided password.');\\n\\t\\t}\\n\\n\\t\\tawait sdk.rest.post('/v1/e2e.setUserPublicAndPrivateKeys', {\\n\\t\\t\\tpublic_key,\\n\\t\\t\\tprivate_key: encodedPrivateKey,\\n\\t\\t\\tforce,\\n\\t\\t});\\n\\t}\\n\\n\\tasync acceptSuggestedKey(rid: string): Promise<void> {\\n\\t\\tawait sdk.rest.post('/v1/e2e.acceptSuggestedGroupKey', {\\n\\t\\t\\trid,\\n\\t\\t});\\n\\t}\\n\\n\\tasync rejectSuggestedKey(rid: string): Promise<void> {\\n\\t\\tawait sdk.rest.post('/v1/e2e.rejectSuggestedGroupKey', {\\n\\t\\t\\trid,\\n\\t\\t});\\n\\t}\\n\\n\\tgetKeysFromLocalStorage(): KeyPair {\\n\\t\\treturn {\\n\\t\\t\\tpublic_key: Accounts.storageLocation.getItem('public_key'),\\n\\t\\t\\tprivate_key: Accounts.storageLocation.getItem('private_key'),\\n\\t\\t};\\n\\t}\\n\\n\\tinitiateHandshake() {\\n\\t\\tObject.keys(this.instancesByRoomId).map((key) => this.instancesByRoomId[key].handshake());\\n\\t}\\n\\n\\topenSaveE2EEPasswordModal(randomPassword: string) {\\n\\t\\timperativeModal.open({\\n\\t\\t\\tcomponent: SaveE2EPasswordModal,\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\trandomPassword,\\n\\t\\t\\t\\tonClose: imperativeModal.close,\\n\\t\\t\\t\\tonCancel: () => {\\n\\t\\t\\t\\t\\tthis.closeAlert();\\n\\t\\t\\t\\t\\timperativeModal.close();\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tonConfirm: () => {\\n\\t\\t\\t\\t\\tAccounts.storageLocation.removeItem('e2e.randomPassword');\\n\\t\\t\\t\\t\\tthis.setState(E2EEState.READY);\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('End_To_End_Encryption_Enabled') });\\n\\t\\t\\t\\t\\tthis.closeAlert();\\n\\t\\t\\t\\t\\timperativeModal.close();\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t});\\n\\t}\\n\\n\\tasync startClient(): Promise<void> {\\n\\t\\tif (this.started) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.log('startClient -> STARTED');\\n\\n\\t\\tthis.started = true;\\n\\n\\t\\tlet { public_key, private_key } = this.getKeysFromLocalStorage();\\n\\n\\t\\tawait this.loadKeysFromDB();\\n\\n\\t\\tif (!public_key && this.db_public_key) {\\n\\t\\t\\tpublic_key = this.db_public_key;\\n\\t\\t}\\n\\n\\t\\tif (this.shouldAskForE2EEPassword()) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tthis.setState(E2EEState.ENTER_PASSWORD);\\n\\t\\t\\t\\tprivate_key = await this.decodePrivateKey(this.db_private_key as string);\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tthis.started = false;\\n\\t\\t\\t\\tfailedToDecodeKey = true;\\n\\t\\t\\t\\tthis.openAlert({\\n\\t\\t\\t\\t\\ttitle: \\\"Wasn't possible to decode your encryption key to be imported.\\\", // TODO: missing translation\\n\\t\\t\\t\\t\\thtml: '<div>Your encryption password seems wrong. Click here to try again.</div>', // TODO: missing translation\\n\\t\\t\\t\\t\\tmodifiers: ['large', 'danger'],\\n\\t\\t\\t\\t\\tclosable: true,\\n\\t\\t\\t\\t\\ticon: 'key',\\n\\t\\t\\t\\t\\taction: async () => {\\n\\t\\t\\t\\t\\t\\tawait this.startClient();\\n\\t\\t\\t\\t\\t\\tthis.closeAlert();\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (public_key && private_key) {\\n\\t\\t\\tawait this.loadKeys({ public_key, private_key });\\n\\t\\t\\tthis.setState(E2EEState.READY);\\n\\t\\t} else {\\n\\t\\t\\tawait this.createAndLoadKeys();\\n\\t\\t\\tthis.setState(E2EEState.READY);\\n\\t\\t}\\n\\n\\t\\tif (!this.db_public_key || !this.db_private_key) {\\n\\t\\t\\tthis.setState(E2EEState.LOADING_KEYS);\\n\\t\\t\\tawait this.persistKeys(this.getKeysFromLocalStorage(), await this.createRandomPassword());\\n\\t\\t}\\n\\n\\t\\tconst randomPassword = Accounts.storageLocation.getItem('e2e.randomPassword');\\n\\t\\tif (randomPassword) {\\n\\t\\t\\tthis.setState(E2EEState.SAVE_PASSWORD);\\n\\t\\t\\tthis.openAlert({\\n\\t\\t\\t\\ttitle: () => t('Save_your_encryption_password'),\\n\\t\\t\\t\\thtml: () => t('Click_here_to_view_and_copy_your_password'),\\n\\t\\t\\t\\tmodifiers: ['large'],\\n\\t\\t\\t\\tclosable: false,\\n\\t\\t\\t\\ticon: 'key',\\n\\t\\t\\t\\taction: () => this.openSaveE2EEPasswordModal(randomPassword),\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\tasync stopClient(): Promise<void> {\\n\\t\\tthis.log('-> Stop Client');\\n\\t\\tthis.closeAlert();\\n\\n\\t\\tAccounts.storageLocation.removeItem('public_key');\\n\\t\\tAccounts.storageLocation.removeItem('private_key');\\n\\t\\tthis.instancesByRoomId = {};\\n\\t\\tthis.privateKey = undefined;\\n\\t\\tthis.publicKey = undefined;\\n\\t\\tthis.started = false;\\n\\t\\tthis.keyDistributionInterval && clearInterval(this.keyDistributionInterval);\\n\\t\\tthis.keyDistributionInterval = null;\\n\\t\\tthis.setState(E2EEState.DISABLED);\\n\\t}\\n\\n\\tasync changePassword(newPassword: string): Promise<void> {\\n\\t\\tawait this.persistKeys(this.getKeysFromLocalStorage(), newPassword, { force: true });\\n\\n\\t\\tif (Accounts.storageLocation.getItem('e2e.randomPassword')) {\\n\\t\\t\\tAccounts.storageLocation.setItem('e2e.randomPassword', newPassword);\\n\\t\\t}\\n\\t}\\n\\n\\tasync loadKeysFromDB(): Promise<void> {\\n\\t\\ttry {\\n\\t\\t\\tthis.setState(E2EEState.LOADING_KEYS);\\n\\t\\t\\tconst { public_key, private_key } = await sdk.rest.get('/v1/e2e.fetchMyKeys');\\n\\n\\t\\t\\tthis.db_public_key = public_key;\\n\\t\\t\\tthis.db_private_key = private_key;\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.setState(E2EEState.ERROR);\\n\\t\\t\\tthis.error('Error fetching RSA keys: ', error);\\n\\t\\t\\t// Stop any process since we can't communicate with the server\\n\\t\\t\\t// to get the keys. This prevents new key generation\\n\\t\\t\\tthrow error;\\n\\t\\t}\\n\\t}\\n\\n\\tasync loadKeys({ public_key, private_key }: { public_key: string; private_key: string }): Promise<void> {\\n\\t\\tAccounts.storageLocation.setItem('public_key', public_key);\\n\\t\\tthis.publicKey = public_key;\\n\\n\\t\\ttry {\\n\\t\\t\\tthis.privateKey = await importRSAKey(EJSON.parse(private_key), ['decrypt']);\\n\\n\\t\\t\\tAccounts.storageLocation.setItem('private_key', private_key);\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.setState(E2EEState.ERROR);\\n\\t\\t\\treturn this.error('Error importing private key: ', error);\\n\\t\\t}\\n\\t}\\n\\n\\tasync createAndLoadKeys(): Promise<void> {\\n\\t\\t// Could not obtain public-private keypair from server.\\n\\t\\tthis.setState(E2EEState.LOADING_KEYS);\\n\\t\\tlet key;\\n\\t\\ttry {\\n\\t\\t\\tkey = await generateRSAKey();\\n\\t\\t\\tthis.privateKey = key.privateKey;\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.setState(E2EEState.ERROR);\\n\\t\\t\\treturn this.error('Error generating key: ', error);\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tconst publicKey = await exportJWKKey(key.publicKey);\\n\\n\\t\\t\\tthis.publicKey = JSON.stringify(publicKey);\\n\\t\\t\\tAccounts.storageLocation.setItem('public_key', JSON.stringify(publicKey));\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.setState(E2EEState.ERROR);\\n\\t\\t\\treturn this.error('Error exporting public key: ', error);\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tconst privateKey = await exportJWKKey(key.privateKey);\\n\\n\\t\\t\\tAccounts.storageLocation.setItem('private_key', JSON.stringify(privateKey));\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.setState(E2EEState.ERROR);\\n\\t\\t\\treturn this.error('Error exporting private key: ', error);\\n\\t\\t}\\n\\n\\t\\tawait this.requestSubscriptionKeys();\\n\\t}\\n\\n\\tasync requestSubscriptionKeys(): Promise<void> {\\n\\t\\tawait sdk.call('e2e.requestSubscriptionKeys');\\n\\t}\\n\\n\\tasync createRandomPassword(): Promise<string> {\\n\\t\\tconst randomPassword = await generateMnemonicPhrase(5);\\n\\t\\tAccounts.storageLocation.setItem('e2e.randomPassword', randomPassword);\\n\\t\\treturn randomPassword;\\n\\t}\\n\\n\\tasync encodePrivateKey(privateKey: string, password: string): Promise<string | void> {\\n\\t\\tconst masterKey = await this.getMasterKey(password);\\n\\n\\t\\tconst vector = crypto.getRandomValues(new Uint8Array(16));\\n\\t\\ttry {\\n\\t\\t\\tconst encodedPrivateKey = await encryptAES(vector, masterKey, toArrayBuffer(privateKey));\\n\\n\\t\\t\\treturn EJSON.stringify(joinVectorAndEcryptedData(vector, encodedPrivateKey));\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.setState(E2EEState.ERROR);\\n\\t\\t\\treturn this.error('Error encrypting encodedPrivateKey: ', error);\\n\\t\\t}\\n\\t}\\n\\n\\tasync getMasterKey(password: string): Promise<void | CryptoKey> {\\n\\t\\tif (password == null) {\\n\\t\\t\\talert('You should provide a password');\\n\\t\\t}\\n\\n\\t\\t// First, create a PBKDF2 \\\"key\\\" containing the password\\n\\t\\tlet baseKey;\\n\\t\\ttry {\\n\\t\\t\\tbaseKey = await importRawKey(toArrayBuffer(password));\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.setState(E2EEState.ERROR);\\n\\t\\t\\treturn this.error('Error creating a key based on user password: ', error);\\n\\t\\t}\\n\\n\\t\\t// Derive a key from the password\\n\\t\\ttry {\\n\\t\\t\\treturn await deriveKey(toArrayBuffer(Meteor.userId()), baseKey);\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.setState(E2EEState.ERROR);\\n\\t\\t\\treturn this.error('Error deriving baseKey: ', error);\\n\\t\\t}\\n\\t}\\n\\n\\topenEnterE2EEPasswordModal(onEnterE2EEPassword?: (password: string) => void) {\\n\\t\\timperativeModal.open({\\n\\t\\t\\tcomponent: EnterE2EPasswordModal,\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\tonClose: imperativeModal.close,\\n\\t\\t\\t\\tonCancel: () => {\\n\\t\\t\\t\\t\\tfailedToDecodeKey = false;\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'info', message: t('End_To_End_Encryption_Not_Enabled') });\\n\\t\\t\\t\\t\\tthis.closeAlert();\\n\\t\\t\\t\\t\\timperativeModal.close();\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tonConfirm: (password) => {\\n\\t\\t\\t\\t\\tonEnterE2EEPassword?.(password);\\n\\t\\t\\t\\t\\tthis.closeAlert();\\n\\t\\t\\t\\t\\timperativeModal.close();\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t});\\n\\t}\\n\\n\\tasync requestPasswordAlert(): Promise<string> {\\n\\t\\treturn new Promise((resolve) => {\\n\\t\\t\\tconst showModal = () => this.openEnterE2EEPasswordModal((password) => resolve(password));\\n\\n\\t\\t\\tconst showAlert = () => {\\n\\t\\t\\t\\tthis.openAlert({\\n\\t\\t\\t\\t\\ttitle: () => t('Enter_your_E2E_password'),\\n\\t\\t\\t\\t\\thtml: () => t('Click_here_to_enter_your_encryption_password'),\\n\\t\\t\\t\\t\\tmodifiers: ['large'],\\n\\t\\t\\t\\t\\tclosable: false,\\n\\t\\t\\t\\t\\ticon: 'key',\\n\\t\\t\\t\\t\\taction() {\\n\\t\\t\\t\\t\\t\\tshowModal();\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t});\\n\\t\\t\\t};\\n\\n\\t\\t\\tif (failedToDecodeKey) {\\n\\t\\t\\t\\tshowModal();\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tshowAlert();\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\n\\tasync requestPasswordModal(): Promise<string> {\\n\\t\\treturn new Promise((resolve) => this.openEnterE2EEPasswordModal((password) => resolve(password)));\\n\\t}\\n\\n\\tasync decodePrivateKeyFlow() {\\n\\t\\tconst password = await this.requestPasswordModal();\\n\\t\\tconst masterKey = await this.getMasterKey(password);\\n\\n\\t\\tif (!this.db_private_key) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst [vector, cipherText] = splitVectorAndEcryptedData(EJSON.parse(this.db_private_key));\\n\\n\\t\\ttry {\\n\\t\\t\\tconst privKey = await decryptAES(vector, masterKey, cipherText);\\n\\t\\t\\tconst privateKey = toString(privKey) as string;\\n\\n\\t\\t\\tif (this.db_public_key && privateKey) {\\n\\t\\t\\t\\tawait this.loadKeys({ public_key: this.db_public_key, private_key: privateKey });\\n\\t\\t\\t\\tthis.setState(E2EEState.READY);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tawait this.createAndLoadKeys();\\n\\t\\t\\t\\tthis.setState(E2EEState.READY);\\n\\t\\t\\t}\\n\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('End_To_End_Encryption_Enabled') });\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.setState(E2EEState.ENTER_PASSWORD);\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: t('Your_E2EE_password_is_incorrect') });\\n\\t\\t\\tdispatchToastMessage({ type: 'info', message: t('End_To_End_Encryption_Not_Enabled') });\\n\\t\\t\\tthrow new Error('E2E -> Error decrypting private key');\\n\\t\\t}\\n\\t}\\n\\n\\tasync decodePrivateKey(privateKey: string): Promise<string> {\\n\\t\\tconst password = await this.requestPasswordAlert();\\n\\n\\t\\tconst masterKey = await this.getMasterKey(password);\\n\\n\\t\\tconst [vector, cipherText] = splitVectorAndEcryptedData(EJSON.parse(privateKey));\\n\\n\\t\\ttry {\\n\\t\\t\\tconst privKey = await decryptAES(vector, masterKey, cipherText);\\n\\t\\t\\treturn toString(privKey);\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.setState(E2EEState.ENTER_PASSWORD);\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: t('Your_E2EE_password_is_incorrect') });\\n\\t\\t\\tdispatchToastMessage({ type: 'info', message: t('End_To_End_Encryption_Not_Enabled') });\\n\\t\\t\\tthrow new Error('E2E -> Error decrypting private key');\\n\\t\\t}\\n\\t}\\n\\n\\tasync decryptFileContent(file: IUploadWithUser): Promise<IUploadWithUser> {\\n\\t\\tif (!file.rid) {\\n\\t\\t\\treturn file;\\n\\t\\t}\\n\\n\\t\\tconst e2eRoom = await this.getInstanceByRoomId(file.rid);\\n\\n\\t\\tif (!e2eRoom) {\\n\\t\\t\\treturn file;\\n\\t\\t}\\n\\n\\t\\treturn e2eRoom.decryptContent(file);\\n\\t}\\n\\n\\tasync decryptMessage(message: IMessage | IE2EEMessage): Promise<IMessage> {\\n\\t\\tif (!isE2EEMessage(message) || message.e2e === 'done') {\\n\\t\\t\\treturn message;\\n\\t\\t}\\n\\n\\t\\tconst e2eRoom = await this.getInstanceByRoomId(message.rid);\\n\\n\\t\\tif (!e2eRoom) {\\n\\t\\t\\treturn message;\\n\\t\\t}\\n\\n\\t\\tconst decryptedMessage: IE2EEMessage = await e2eRoom.decryptMessage(message);\\n\\n\\t\\tconst decryptedMessageWithQuote = await this.parseQuoteAttachment(decryptedMessage);\\n\\n\\t\\treturn decryptedMessageWithQuote;\\n\\t}\\n\\n\\tasync decryptPinnedMessage(message: IMessage) {\\n\\t\\tconst pinnedMessage = message?.attachments?.[0]?.text;\\n\\n\\t\\tif (!pinnedMessage) {\\n\\t\\t\\treturn message;\\n\\t\\t}\\n\\n\\t\\tconst e2eRoom = await this.getInstanceByRoomId(message.rid);\\n\\n\\t\\tif (!e2eRoom) {\\n\\t\\t\\treturn message;\\n\\t\\t}\\n\\n\\t\\tconst data = await e2eRoom.decrypt(pinnedMessage);\\n\\n\\t\\tif (!data) {\\n\\t\\t\\treturn message;\\n\\t\\t}\\n\\n\\t\\tconst decryptedPinnedMessage = { ...message } as IMessage & { attachments: MessageAttachment[] };\\n\\t\\tdecryptedPinnedMessage.attachments[0].text = data.text;\\n\\n\\t\\treturn decryptedPinnedMessage;\\n\\t}\\n\\n\\tasync decryptPendingMessages(): Promise<void> {\\n\\t\\treturn Messages.find({ t: 'e2e', e2e: 'pending' }).forEach(async ({ _id, ...msg }: IMessage) => {\\n\\t\\t\\tMessages.update({ _id }, await this.decryptMessage(msg as IE2EEMessage));\\n\\t\\t});\\n\\t}\\n\\n\\tasync decryptSubscription(subscriptionId: ISubscription['_id']): Promise<void> {\\n\\t\\tconst e2eRoom = await this.getInstanceByRoomId(subscriptionId);\\n\\t\\tthis.log('decryptSubscription ->', subscriptionId);\\n\\t\\tawait e2eRoom?.decryptSubscription();\\n\\t}\\n\\n\\tasync decryptSubscriptions(): Promise<void> {\\n\\t\\tSubscriptions.find({\\n\\t\\t\\tencrypted: true,\\n\\t\\t}).forEach((subscription) => this.decryptSubscription(subscription._id));\\n\\t}\\n\\n\\topenAlert(config: Omit<LegacyBannerPayload, 'id'>): void {\\n\\t\\tbanners.open({ id: 'e2e', ...config });\\n\\t}\\n\\n\\tcloseAlert(): void {\\n\\t\\tbanners.closeById('e2e');\\n\\t}\\n\\n\\tasync parseQuoteAttachment(message: IE2EEMessage): Promise<IE2EEMessage> {\\n\\t\\tif (!message?.msg) {\\n\\t\\t\\treturn message;\\n\\t\\t}\\n\\t\\tconst urls = message.msg.match(getMessageUrlRegex()) || [];\\n\\n\\t\\tawait Promise.all(\\n\\t\\t\\turls.map(async (url) => {\\n\\t\\t\\t\\tif (!url.includes(settings.get('Site_Url'))) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tconst urlObj = URL.parse(url);\\n\\t\\t\\t\\t// if the URL doesn't have query params (doesn't reference message) skip\\n\\t\\t\\t\\tif (!urlObj.query) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tconst { msg: msgId } = QueryString.parse(urlObj.query);\\n\\n\\t\\t\\t\\tif (!msgId || Array.isArray(msgId)) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tconst getQuotedMessage = await sdk.rest.get('/v1/chat.getMessage', { msgId });\\n\\t\\t\\t\\tconst quotedMessage = getQuotedMessage?.message;\\n\\n\\t\\t\\t\\tif (!quotedMessage) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tconst decryptedQuoteMessage = await this.decryptMessage(mapMessageFromApi(quotedMessage));\\n\\n\\t\\t\\t\\tmessage.attachments = message.attachments || [];\\n\\n\\t\\t\\t\\tconst useRealName = settings.get('UI_Use_Real_Name');\\n\\t\\t\\t\\tconst quoteAttachment = createQuoteAttachment(\\n\\t\\t\\t\\t\\tdecryptedQuoteMessage,\\n\\t\\t\\t\\t\\turl,\\n\\t\\t\\t\\t\\tuseRealName,\\n\\t\\t\\t\\t\\tgetUserAvatarURL(decryptedQuoteMessage.u.username || '') as string,\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\tmessage.attachments.push(quoteAttachment);\\n\\t\\t\\t}),\\n\\t\\t);\\n\\n\\t\\treturn message;\\n\\t}\\n\\n\\tasync getSuggestedE2EEKeys(usersWaitingForE2EKeys: Record<IRoom['_id'], { _id: IUser['_id']; public_key: string }[]>) {\\n\\t\\tconst roomIds = Object.keys(usersWaitingForE2EKeys);\\n\\t\\treturn Object.fromEntries(\\n\\t\\t\\t(\\n\\t\\t\\t\\tawait Promise.all(\\n\\t\\t\\t\\t\\troomIds.map(async (room) => {\\n\\t\\t\\t\\t\\t\\tconst e2eRoom = await this.getInstanceByRoomId(room);\\n\\n\\t\\t\\t\\t\\t\\tif (!e2eRoom) {\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tconst usersWithKeys = await e2eRoom.encryptGroupKeyForParticipantsWaitingForTheKeys(usersWaitingForE2EKeys[room]);\\n\\n\\t\\t\\t\\t\\t\\tif (!usersWithKeys) {\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\treturn [room, usersWithKeys];\\n\\t\\t\\t\\t\\t}),\\n\\t\\t\\t\\t)\\n\\t\\t\\t).filter(isTruthy),\\n\\t\\t);\\n\\t}\\n\\n\\tasync getSample(roomIds: string[], limit = 3): Promise<string[]> {\\n\\t\\tif (limit === 0) {\\n\\t\\t\\treturn [];\\n\\t\\t}\\n\\n\\t\\tconst randomRoomIds = _.sampleSize(roomIds, ROOM_KEY_EXCHANGE_SIZE);\\n\\n\\t\\tconst sampleIds: string[] = [];\\n\\t\\tfor await (const roomId of randomRoomIds) {\\n\\t\\t\\tconst e2eroom = await this.getInstanceByRoomId(roomId);\\n\\t\\t\\tif (!e2eroom?.hasSessionKey()) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tsampleIds.push(roomId);\\n\\t\\t}\\n\\n\\t\\tif (!sampleIds.length) {\\n\\t\\t\\treturn this.getSample(roomIds, limit - 1);\\n\\t\\t}\\n\\n\\t\\treturn sampleIds;\\n\\t}\\n\\n\\tasync initiateKeyDistribution() {\\n\\t\\tif (this.keyDistributionInterval) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst keyDistribution = async () => {\\n\\t\\t\\tconst roomIds = ChatRoom.find({\\n\\t\\t\\t\\t'usersWaitingForE2EKeys': { $exists: true },\\n\\t\\t\\t\\t'usersWaitingForE2EKeys.userId': { $ne: Meteor.userId() },\\n\\t\\t\\t}).map((room) => room._id);\\n\\t\\t\\tif (!roomIds.length) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Prevent function from running and doing nothing when theres something to do\\n\\t\\t\\tconst sampleIds = await this.getSample(roomIds);\\n\\n\\t\\t\\tif (!sampleIds.length) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst { usersWaitingForE2EKeys = {} } = await sdk.rest.get('/v1/e2e.fetchUsersWaitingForGroupKey', { roomIds: sampleIds });\\n\\n\\t\\t\\tif (!Object.keys(usersWaitingForE2EKeys).length) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst userKeysWithRooms = await this.getSuggestedE2EEKeys(usersWaitingForE2EKeys);\\n\\n\\t\\t\\tif (!Object.keys(userKeysWithRooms).length) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait sdk.rest.post('/v1/e2e.provideUsersSuggestedGroupKeys', { usersSuggestedGroupKeys: userKeysWithRooms });\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\treturn this.error('Error providing group key to users: ', error);\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\t// Run first call right away, then schedule for 10s in the future\\n\\t\\tawait keyDistribution();\\n\\t\\tthis.keyDistributionInterval = setInterval(keyDistribution, 10000);\\n\\t}\\n}\\n\\nexport const e2e = new E2E();\\n\",null],\"names\":[\"_objectWithoutProperties\",\"_regeneratorRuntime\",\"_objectSpread\",\"_slicedToArray\",\"_inheritsLoose\",\"_asyncIterator\",\"QueryString\",\"URL\",\"isE2EEMessage\",\"Emitter\",\"EJSON\",\"_\",\"Accounts\",\"Meteor\",\"Tracker\",\"banners\",\"imperativeModal\",\"dispatchToastMessage\",\"mapMessageFromApi\",\"waitUntilFind\",\"EnterE2EPasswordModal\",\"SaveE2EPasswordModal\",\"createQuoteAttachment\",\"getMessageUrlRegex\",\"isTruthy\",\"ChatRoom\",\"Subscriptions\",\"Messages\",\"settings\",\"getUserAvatarURL\",\"sdk\",\"t\",\"E2EEState\",\"toString\",\"toArrayBuffer\",\"joinVectorAndEcryptedData\",\"splitVectorAndEcryptedData\",\"encryptAES\",\"decryptAES\",\"generateRSAKey\",\"exportJWKKey\",\"importRSAKey\",\"importRawKey\",\"deriveKey\",\"generateMnemonicPhrase\",\"log\",\"logError\",\"E2ERoom\",\"module\",\"link\",\"default\",\"v\",\"export\",\"e2e\",\"failedToDecodeKey\",\"E2EEStateDependency\",\"Dependency\",\"_Emitter\",\"E2E\",\"_this\",\"call\",\"started\",\"instancesByRoomId\",\"db_public_key\",\"db_private_key\",\"privateKey\",\"publicKey\",\"keyDistributionInterval\",\"state\",\"observable\",\"undefined\",\"on\",\"_ref\",\"prevState\",\"nextState\",\"READY\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"onE2EEReady\",\"stop\",\"Promise\",\"SAVE_PASSWORD\",\"_context2\",\"DISABLED\",\"_this$observable\",\"NOT_STARTED\",\"_this$observable2\",\"ERROR\",\"_this$observable3\",\"setState\",\"_proto\",\"prototype\",\"_len\",\"arguments\",\"length\",\"msg\",\"Array\",\"_key\",\"apply\",\"concat\",\"error\",\"_len2\",\"_key2\",\"getState\",\"isEnabled\",\"isReady\",\"depend\",\"_context3\",\"initiateHandshake\",\"handleAsyncE2EESuggestedKey\",\"decryptSubscriptions\",\"initiateKeyDistribution\",\"observeSubscriptions\",\"onSubscriptionChanged\",\"sub\",\"e2eRoom\",\"_context4\",\"encrypted\",\"E2EKey\",\"removeInstanceByRoomId\",\"rid\",\"abrupt\",\"getInstanceByRoomId\",\"sent\",\"E2ESuggestedKey\",\"importGroupKey\",\"acceptSuggestedKey\",\"keyReceived\",\"console\",\"warn\",\"rejectSuggestedKey\",\"resume\",\"pause\",\"isSupportedRoomType\",\"disable\",\"isWaitingKeys\",\"decryptSubscription\",\"_this$observable4\",\"_this2\",\"find\",\"observe\",\"changed\",\"setTimeout\",\"added\",\"_context5\",\"removed\",\"shouldAskForE2EEPassword\",\"private_key\",\"_this$getKeysFromLoca\",\"getKeysFromLocalStorage\",\"emit\",\"subs\",\"_this3\",\"_context7\",\"$exists\",\"fetch\",\"all\",\"filter\",\"map\",\"_callee4\",\"_callee4$\",\"_context6\",\"room\",\"_context8\",\"findOne\",\"_id\",\"userId\",\"keyID\",\"e2eKeyId\",\"onRoomKeyReset\",\"persistKeys\",\"_ref2\",\"password\",\"public_key\",\"force\",\"encodedPrivateKey\",\"_args9\",\"_context9\",\"_ref3\",\"Error\",\"encodePrivateKey\",\"rest\",\"post\",\"_context10\",\"_context11\",\"storageLocation\",\"getItem\",\"_this4\",\"Object\",\"keys\",\"key\",\"handshake\",\"openSaveE2EEPasswordModal\",\"randomPassword\",\"_this5\",\"open\",\"component\",\"props\",\"onClose\",\"close\",\"onCancel\",\"closeAlert\",\"onConfirm\",\"removeItem\",\"type\",\"message\",\"startClient\",\"_this$getKeysFromLoca2\",\"_this6\",\"_context13\",\"loadKeysFromDB\",\"ENTER_PASSWORD\",\"decodePrivateKey\",\"t0\",\"openAlert\",\"title\",\"html\",\"modifiers\",\"closable\",\"icon\",\"action\",\"_callee5\",\"_callee5$\",\"_context12\",\"loadKeys\",\"createAndLoadKeys\",\"LOADING_KEYS\",\"t1\",\"t2\",\"t3\",\"createRandomPassword\",\"t4\",\"t5\",\"stopClient\",\"_context14\",\"clearInterval\",\"changePassword\",\"newPassword\",\"_context15\",\"setItem\",\"_await$sdk$rest$get\",\"_context16\",\"get\",\"_ref4\",\"_context17\",\"parse\",\"_context18\",\"JSON\",\"stringify\",\"requestSubscriptionKeys\",\"_context19\",\"_context20\",\"masterKey\",\"vector\",\"_context21\",\"getMasterKey\",\"crypto\",\"getRandomValues\",\"Uint8Array\",\"baseKey\",\"_context22\",\"alert\",\"openEnterE2EEPasswordModal\",\"onEnterE2EEPassword\",\"_this7\",\"requestPasswordAlert\",\"_this8\",\"_context23\",\"resolve\",\"showModal\",\"requestPasswordModal\",\"_this9\",\"_context24\",\"decodePrivateKeyFlow\",\"_splitVectorAndEcrypt\",\"_splitVectorAndEcrypt2\",\"cipherText\",\"privKey\",\"_context25\",\"_splitVectorAndEcrypt3\",\"_splitVectorAndEcrypt4\",\"_context26\",\"decryptFileContent\",\"file\",\"_context27\",\"decryptContent\",\"decryptMessage\",\"decryptedMessage\",\"decryptedMessageWithQuote\",\"_context28\",\"parseQuoteAttachment\",\"decryptPinnedMessage\",\"_message$attachments\",\"_message$attachments$\",\"pinnedMessage\",\"data\",\"decryptedPinnedMessage\",\"_context29\",\"attachments\",\"text\",\"decrypt\",\"decryptPendingMessages\",\"_this10\",\"_context31\",\"forEach\",\"_callee6\",\"_ref5\",\"_callee6$\",\"_context30\",\"_excluded\",\"update\",\"subscriptionId\",\"_context32\",\"_this11\",\"_context33\",\"subscription\",\"config\",\"id\",\"closeById\",\"urls\",\"_this12\",\"_context35\",\"match\",\"_callee7\",\"url\",\"urlObj\",\"msgId\",\"getQuotedMessage\",\"quotedMessage\",\"decryptedQuoteMessage\",\"useRealName\",\"quoteAttachment\",\"_callee7$\",\"_context34\",\"includes\",\"query\",\"_QueryString$parse\",\"isArray\",\"u\",\"username\",\"push\",\"getSuggestedE2EEKeys\",\"usersWaitingForE2EKeys\",\"roomIds\",\"_this13\",\"_context37\",\"_callee8\",\"usersWithKeys\",\"_callee8$\",\"_context36\",\"encryptGroupKeyForParticipantsWaitingForTheKeys\",\"fromEntries\",\"getSample\",\"limit\",\"randomRoomIds\",\"sampleIds\",\"_iteratorAbruptCompletion\",\"_didIteratorError\",\"_iteratorError\",\"_iterator\",\"_step\",\"roomId\",\"e2eroom\",\"_args38\",\"_context38\",\"sampleSize\",\"done\",\"value\",\"hasSessionKey\",\"return\",\"finish\",\"keyDistribution\",\"_this14\",\"_context40\",\"_callee9\",\"_await$sdk$rest$get2$\",\"userKeysWithRooms\",\"_callee9$\",\"_context39\",\"$ne\",\"_await$sdk$rest$get2\",\"usersSuggestedGroupKeys\",\"setInterval\"],\"mappings\":\"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\"}"}