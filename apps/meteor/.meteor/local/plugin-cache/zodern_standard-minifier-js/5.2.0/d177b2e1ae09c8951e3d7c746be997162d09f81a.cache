{"code":"function module(e,t,l){let a,n,r,i,o,s,m,u,c,d,h,v,E,f,k,p,g,b,y,C,F,x,w,S,G,T,_;l.link(\"@babel/runtime/helpers/extends\",{default(e){a=e}},0),l.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){n=e}},1),l.link(\"@rocket.chat/fuselage\",{Field(e){r=e},FieldLabel(e){i=e},FieldRow(e){o=e},FieldError(e){s=e},TextInput(e){m=e},ButtonGroup(e){u=e},Button(e){c=e},ContextualbarContent(e){d=e}},0),l.link(\"@rocket.chat/ui-client\",{CustomFieldsForm(e){h=e}},1),l.link(\"@rocket.chat/ui-contexts\",{useToastMessageDispatch(e){v=e},useEndpoint(e){E=e},useTranslation(e){f=e}},2),l.link(\"@tanstack/react-query\",{useQueryClient(e){k=e}},3),l.link(\"react\",{default(e){p=e},useState(e){g=e},useEffect(e){b=e}},4),l.link(\"react-hook-form\",{useForm(e){y=e}},5),l.link(\"../../../../../../app/authorization/client\",{hasAtLeastOnePermission(e){C=e}},6),l.link(\"../../../../../../lib/emailValidator\",{validateEmail(e){F=e}},7),l.link(\"../../../../../components/Contextualbar\",{ContextualbarScrollableContent(e){x=e},ContextualbarFooter(e){w=e}},8),l.link(\"../../../../../lib/utils/createToken\",{createToken(e){S=e}},9),l.link(\"../../../additionalForms\",{ContactManager(e){G=e}},10),l.link(\"../../components/FormSkeleton\",{FormSkeleton(e){T=e}},11),l.link(\"../../hooks/useCustomFieldsMetadata\",{useCustomFieldsMetadata(e){_=e}},12);let M={token:\"\",name:\"\",email:\"\",phone:\"\",username:\"\",customFields:{}},D=e=>{var t,l;if(!e)return M;let{name:a,token:n,phone:r,visitorEmails:i,livechatData:o,contactManager:s}=null!==(t=e.contact)&&void 0!==t?t:{};return{token:null!=n?n:\"\",name:null!=a?a:\"\",email:i?i[0].address:\"\",phone:r?r[0].phoneNumber:\"\",customFields:null!=o?o:{},username:null!==(l=null==s?void 0:s.username)&&void 0!==l?l:\"\"}};l.exportDefault(e=>{var t,l,M,N,P,q;let{id:L,data:V,close:B}=e,I=f(),O=v(),Q=k(),R=()=>C([\"view-livechat-room-customfields\",\"edit-livechat-room-customfields\"]),[j,z]=g(\"no-agent-selected\"),A=E(\"POST\",\"/v1/omnichannel/contact\"),K=E(\"GET\",\"/v1/omnichannel/contact.search\"),H=E(\"GET\",\"/v1/users.info\"),{data:J=[],isInitialLoading:U}=_({scope:\"visitor\",enabled:R()}),W=D(V),{username:X}=W,{register:Y,formState:{errors:Z,isValid:$,isDirty:ee,isSubmitting:et},control:el,setValue:ea,handleSubmit:en,setError:er}=y({mode:\"onChange\",reValidateMode:\"onChange\",defaultValues:W});b(()=>{X&&H({username:X}).then(e=>{let{user:t}=e;z(t._id)})},[H,X]);let ei=async function(e,t){let l=!(arguments.length>2)||void 0===arguments[2]||arguments[2];if(l&&!t||t===W[e])return!0;let{contact:a}=await K({[e]:t});return!a||a._id===L},eo=async e=>{if(z(e),\"no-agent-selected\"===e){ea(\"username\",\"\",{shouldDirty:!0});return}let{user:t}=await H({userId:e});ea(\"username\",t.username||\"\",{shouldDirty:!0})},es=async function(){let{phone:e=\"\",email:t=\"\"}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},l=await ei(\"email\",t),a=await ei(\"phone\",e);return l||er(\"email\",{message:I(\"Email_already_exists\")}),a||er(\"phone\",{message:I(\"Phone_already_exists\")}),l&&a},em=async e=>{if(!await es(e))return;let{name:t,phone:l,email:a,customFields:r,username:i,token:o}=e,s=n(n({name:t,phone:l,email:a,customFields:r,token:o||S()},i&&{contactManager:{username:i}}),L&&{_id:L});try{await A(s),O({type:\"success\",message:I(\"Saved\")}),await Q.invalidateQueries({queryKey:[\"current-contacts\"]}),B()}catch(e){O({type:\"error\",message:e})}};return U?p.createElement(d,null,p.createElement(T,null)):p.createElement(p.Fragment,null,p.createElement(x,{is:\"form\",onSubmit:en(em)},p.createElement(r,null,p.createElement(i,null,I(\"Name\"),\"*\"),p.createElement(o,null,p.createElement(m,a({},Y(\"name\",{validate:e=>!!e.trim()||I(\"Required_field\",{field:I(\"Name\")})}),{error:null===(t=Z.name)||void 0===t?void 0:t.message,flexGrow:1}))),p.createElement(s,null,null===(l=Z.name)||void 0===l?void 0:l.message)),p.createElement(r,null,p.createElement(i,null,I(\"Email\")),p.createElement(o,null,p.createElement(m,a({},Y(\"email\",{validate:e=>!e||e===W.email||!!F(e)||I(\"error-invalid-email-address\")}),{error:null===(M=Z.email)||void 0===M?void 0:M.message,flexGrow:1}))),p.createElement(s,null,null===(N=Z.email)||void 0===N?void 0:N.message)),p.createElement(r,null,p.createElement(i,null,I(\"Phone\")),p.createElement(o,null,p.createElement(m,a({},Y(\"phone\"),{error:null===(P=Z.phone)||void 0===P?void 0:P.message,flexGrow:1}))),p.createElement(s,null,null===(q=Z.phone)||void 0===q?void 0:q.message)),R()&&p.createElement(h,{formName:\"customFields\",formControl:el,metadata:J}),p.createElement(G,{value:j,handler:eo})),p.createElement(w,null,p.createElement(u,{stretch:!0},p.createElement(c,{flexGrow:1,onClick:B},I(\"Cancel\")),p.createElement(c,{mie:\"none\",type:\"submit\",onClick:en(em),flexGrow:1,loading:et,disabled:!$||!ee,primary:!0},I(\"Save\")))))})}","map":"{\"version\":3,\"sources\":[\"client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { ILivechatVisitor, Serialized } from '@rocket.chat/core-typings';\\nimport { Field, FieldLabel, FieldRow, FieldError, TextInput, ButtonGroup, Button, ContextualbarContent } from '@rocket.chat/fuselage';\\nimport { CustomFieldsForm } from '@rocket.chat/ui-client';\\nimport { useToastMessageDispatch, useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\\nimport { useQueryClient } from '@tanstack/react-query';\\nimport type { ReactElement } from 'react';\\nimport React, { useState, useEffect } from 'react';\\nimport { useForm } from 'react-hook-form';\\n\\nimport { hasAtLeastOnePermission } from '../../../../../../app/authorization/client';\\nimport { validateEmail } from '../../../../../../lib/emailValidator';\\nimport { ContextualbarScrollableContent, ContextualbarFooter } from '../../../../../components/Contextualbar';\\nimport { createToken } from '../../../../../lib/utils/createToken';\\nimport { ContactManager as ContactManagerForm } from '../../../additionalForms';\\nimport { FormSkeleton } from '../../components/FormSkeleton';\\nimport { useCustomFieldsMetadata } from '../../hooks/useCustomFieldsMetadata';\\n\\ntype ContactNewEditProps = {\\n\\tid: string;\\n\\tdata?: { contact: Serialized<ILivechatVisitor> | null };\\n\\tclose(): void;\\n};\\n\\ntype ContactFormData = {\\n\\ttoken: string;\\n\\tname: string;\\n\\temail: string;\\n\\tphone: string;\\n\\tusername: string;\\n\\tcustomFields: Record<any, any>;\\n};\\n\\nconst DEFAULT_VALUES = {\\n\\ttoken: '',\\n\\tname: '',\\n\\temail: '',\\n\\tphone: '',\\n\\tusername: '',\\n\\tcustomFields: {},\\n};\\n\\nconst getInitialValues = (data: ContactNewEditProps['data']): ContactFormData => {\\n\\tif (!data) {\\n\\t\\treturn DEFAULT_VALUES;\\n\\t}\\n\\n\\tconst { name, token, phone, visitorEmails, livechatData, contactManager } = data.contact ?? {};\\n\\n\\treturn {\\n\\t\\ttoken: token ?? '',\\n\\t\\tname: name ?? '',\\n\\t\\temail: visitorEmails ? visitorEmails[0].address : '',\\n\\t\\tphone: phone ? phone[0].phoneNumber : '',\\n\\t\\tcustomFields: livechatData ?? {},\\n\\t\\tusername: contactManager?.username ?? '',\\n\\t};\\n};\\n\\nconst ContactNewEdit = ({ id, data, close }: ContactNewEditProps): ReactElement => {\\n\\tconst t = useTranslation();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst queryClient = useQueryClient();\\n\\n\\tconst canViewCustomFields = (): boolean =>\\n\\t\\thasAtLeastOnePermission(['view-livechat-room-customfields', 'edit-livechat-room-customfields']);\\n\\n\\tconst [userId, setUserId] = useState('no-agent-selected');\\n\\tconst saveContact = useEndpoint('POST', '/v1/omnichannel/contact');\\n\\tconst getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\\n\\tconst getUserData = useEndpoint('GET', '/v1/users.info');\\n\\n\\tconst { data: customFieldsMetadata = [], isInitialLoading: isLoadingCustomFields } = useCustomFieldsMetadata({\\n\\t\\tscope: 'visitor',\\n\\t\\tenabled: canViewCustomFields(),\\n\\t});\\n\\n\\tconst initialValue = getInitialValues(data);\\n\\tconst { username: initialUsername } = initialValue;\\n\\n\\tconst {\\n\\t\\tregister,\\n\\t\\tformState: { errors, isValid, isDirty, isSubmitting },\\n\\t\\tcontrol,\\n\\t\\tsetValue,\\n\\t\\thandleSubmit,\\n\\t\\tsetError,\\n\\t} = useForm<ContactFormData>({\\n\\t\\tmode: 'onChange',\\n\\t\\treValidateMode: 'onChange',\\n\\t\\tdefaultValues: initialValue,\\n\\t});\\n\\n\\tuseEffect(() => {\\n\\t\\tif (!initialUsername) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tgetUserData({ username: initialUsername }).then(({ user }) => {\\n\\t\\t\\tsetUserId(user._id);\\n\\t\\t});\\n\\t}, [getUserData, initialUsername]);\\n\\n\\tconst validateEmailFormat = (email: string): boolean | string => {\\n\\t\\tif (!email || email === initialValue.email) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\tif (!validateEmail(email)) {\\n\\t\\t\\treturn t('error-invalid-email-address');\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t};\\n\\n\\tconst validateContactField = async (name: 'phone' | 'email', value: string, optional = true) => {\\n\\t\\tif ((optional && !value) || value === initialValue[name]) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\tconst query = { [name]: value } as Record<'phone' | 'email', string>;\\n\\t\\tconst { contact } = await getContactBy(query);\\n\\t\\treturn !contact || contact._id === id;\\n\\t};\\n\\n\\tconst validateName = (v: string): string | boolean => (!v.trim() ? t('Required_field', { field: t('Name') }) : true);\\n\\n\\tconst handleContactManagerChange = async (userId: string): Promise<void> => {\\n\\t\\tsetUserId(userId);\\n\\n\\t\\tif (userId === 'no-agent-selected') {\\n\\t\\t\\tsetValue('username', '', { shouldDirty: true });\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst { user } = await getUserData({ userId });\\n\\t\\tsetValue('username', user.username || '', { shouldDirty: true });\\n\\t};\\n\\n\\tconst validateAsync = async ({ phone = '', email = '' } = {}) => {\\n\\t\\tconst isEmailValid = await validateContactField('email', email);\\n\\t\\tconst isPhoneValid = await validateContactField('phone', phone);\\n\\n\\t\\t!isEmailValid && setError('email', { message: t('Email_already_exists') });\\n\\t\\t!isPhoneValid && setError('phone', { message: t('Phone_already_exists') });\\n\\n\\t\\treturn isEmailValid && isPhoneValid;\\n\\t};\\n\\n\\tconst handleSave = async (data: ContactFormData): Promise<void> => {\\n\\t\\tif (!(await validateAsync(data))) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst { name, phone, email, customFields, username, token } = data;\\n\\n\\t\\tconst payload = {\\n\\t\\t\\tname,\\n\\t\\t\\tphone,\\n\\t\\t\\temail,\\n\\t\\t\\tcustomFields,\\n\\t\\t\\ttoken: token || createToken(),\\n\\t\\t\\t...(username && { contactManager: { username } }),\\n\\t\\t\\t...(id && { _id: id }),\\n\\t\\t};\\n\\n\\t\\ttry {\\n\\t\\t\\tawait saveContact(payload);\\n\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Saved') });\\n\\t\\t\\tawait queryClient.invalidateQueries({ queryKey: ['current-contacts'] });\\n\\t\\t\\tclose();\\n\\t\\t} catch (error) {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t}\\n\\t};\\n\\n\\tif (isLoadingCustomFields) {\\n\\t\\treturn (\\n\\t\\t\\t<ContextualbarContent>\\n\\t\\t\\t\\t<FormSkeleton />\\n\\t\\t\\t</ContextualbarContent>\\n\\t\\t);\\n\\t}\\n\\n\\treturn (\\n\\t\\t<>\\n\\t\\t\\t<ContextualbarScrollableContent is='form' onSubmit={handleSubmit(handleSave)}>\\n\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t<FieldLabel>{t('Name')}*</FieldLabel>\\n\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t<TextInput {...register('name', { validate: validateName })} error={errors.name?.message} flexGrow={1} />\\n\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t<FieldError>{errors.name?.message}</FieldError>\\n\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t<FieldLabel>{t('Email')}</FieldLabel>\\n\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t<TextInput {...register('email', { validate: validateEmailFormat })} error={errors.email?.message} flexGrow={1} />\\n\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t<FieldError>{errors.email?.message}</FieldError>\\n\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t<Field>\\n\\t\\t\\t\\t\\t<FieldLabel>{t('Phone')}</FieldLabel>\\n\\t\\t\\t\\t\\t<FieldRow>\\n\\t\\t\\t\\t\\t\\t<TextInput {...register('phone')} error={errors.phone?.message} flexGrow={1} />\\n\\t\\t\\t\\t\\t</FieldRow>\\n\\t\\t\\t\\t\\t<FieldError>{errors.phone?.message}</FieldError>\\n\\t\\t\\t\\t</Field>\\n\\t\\t\\t\\t{canViewCustomFields() && <CustomFieldsForm formName='customFields' formControl={control} metadata={customFieldsMetadata} />}\\n\\t\\t\\t\\t<ContactManagerForm value={userId} handler={handleContactManagerChange} />\\n\\t\\t\\t</ContextualbarScrollableContent>\\n\\t\\t\\t<ContextualbarFooter>\\n\\t\\t\\t\\t<ButtonGroup stretch>\\n\\t\\t\\t\\t\\t<Button flexGrow={1} onClick={close}>\\n\\t\\t\\t\\t\\t\\t{t('Cancel')}\\n\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t<Button\\n\\t\\t\\t\\t\\t\\tmie='none'\\n\\t\\t\\t\\t\\t\\ttype='submit'\\n\\t\\t\\t\\t\\t\\tonClick={handleSubmit(handleSave)}\\n\\t\\t\\t\\t\\t\\tflexGrow={1}\\n\\t\\t\\t\\t\\t\\tloading={isSubmitting}\\n\\t\\t\\t\\t\\t\\tdisabled={!isValid || !isDirty}\\n\\t\\t\\t\\t\\t\\tprimary\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t{t('Save')}\\n\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t</ContextualbarFooter>\\n\\t\\t</>\\n\\t);\\n};\\n\\nexport default ContactNewEdit;\\n\",null],\"names\":[\"_extends\",\"_objectSpread\",\"Field\",\"FieldLabel\",\"FieldRow\",\"FieldError\",\"TextInput\",\"ButtonGroup\",\"Button\",\"ContextualbarContent\",\"CustomFieldsForm\",\"useToastMessageDispatch\",\"useEndpoint\",\"useTranslation\",\"useQueryClient\",\"React\",\"useState\",\"useEffect\",\"useForm\",\"hasAtLeastOnePermission\",\"validateEmail\",\"ContextualbarScrollableContent\",\"ContextualbarFooter\",\"createToken\",\"ContactManagerForm\",\"FormSkeleton\",\"useCustomFieldsMetadata\",\"module\",\"link\",\"default\",\"v\",\"ContactManager\",\"DEFAULT_VALUES\",\"token\",\"name\",\"email\",\"phone\",\"username\",\"customFields\",\"getInitialValues\",\"data\",\"_data$contact\",\"_contactManager$usern\",\"visitorEmails\",\"livechatData\",\"contactManager\",\"contact\",\"address\",\"phoneNumber\",\"exportDefault\",\"_ref\",\"_errors$name\",\"_errors$name2\",\"_errors$email\",\"_errors$email2\",\"_errors$phone\",\"_errors$phone2\",\"id\",\"close\",\"t\",\"dispatchToastMessage\",\"queryClient\",\"canViewCustomFields\",\"userId\",\"setUserId\",\"saveContact\",\"getContactBy\",\"getUserData\",\"customFieldsMetadata\",\"isInitialLoading\",\"isLoadingCustomFields\",\"scope\",\"enabled\",\"initialValue\",\"initialUsername\",\"register\",\"formState\",\"errors\",\"isValid\",\"isDirty\",\"isSubmitting\",\"control\",\"setValue\",\"handleSubmit\",\"setError\",\"mode\",\"reValidateMode\",\"defaultValues\",\"then\",\"_ref2\",\"user\",\"_id\",\"validateContactField\",\"value\",\"optional\",\"arguments\",\"length\",\"undefined\",\"handleContactManagerChange\",\"shouldDirty\",\"validateAsync\",\"isEmailValid\",\"isPhoneValid\",\"message\",\"handleSave\",\"payload\",\"type\",\"invalidateQueries\",\"queryKey\",\"error\",\"createElement\",\"Fragment\",\"is\",\"onSubmit\",\"validate\",\"trim\",\"field\",\"flexGrow\",\"formName\",\"formControl\",\"metadata\",\"handler\",\"stretch\",\"onClick\",\"mie\",\"loading\",\"disabled\",\"primary\"],\"mappings\":\"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\"}"}