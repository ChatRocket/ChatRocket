{"code":"function module(e,t,l){let a,n,r,o,u,m,i,c,s,k,p,d;let b=[\"value\",\"onChange\"],v=[\"value\",\"label\"];l.link(\"@babel/runtime/helpers/extends\",{default(e){a=e}},0),l.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default(e){n=e}},1),l.link(\"@rocket.chat/fuselage\",{AutoComplete(e){r=e},Option(e){o=e},Box(e){u=e}},0),l.link(\"@rocket.chat/ui-avatar\",{RoomAvatar(e){m=e}},1),l.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){i=e}},2),l.link(\"@tanstack/react-query\",{useQuery(e){c=e}},3),l.link(\"react\",{default(e){s=e},memo(e){k=e},useMemo(e){p=e},useState(e){d=e}},4),l.exportDefault(k(e=>{let{value:t,onChange:l}=e,k=n(e,b),[h,f]=d(\"\"),E=i(\"GET\",\"/v1/teams.autocomplete\"),{data:x,isSuccess:y}=c([\"teamsAutoComplete\",h],async()=>E({name:h})),C=p(()=>y?null==x?void 0:x.teams.map(e=>{let{name:t,teamId:l,_id:a,avatarETag:n,t:r}=e;return{value:l,label:{name:t,avatarETag:n,type:r,_id:a}}}):[],[x,y]);return s.createElement(r,a({},k,{value:t,onChange:l,filter:h,setFilter:f,renderSelected:e=>{let{selected:{value:t,label:l}}=e;return s.createElement(u,{value:t},s.createElement(m,{size:\"x20\",room:l}),\" \",l.name)},renderItem:e=>{let{value:t,label:l}=e,r=n(e,v);return s.createElement(o,a({key:t},r,{label:l.name,avatar:s.createElement(m,{size:\"x20\",room:l})}))},options:C}))}))}","map":"{\"version\":3,\"sources\":[\"client/views/teams/contextualBar/TeamAutocomplete/TeamAutocomplete.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { AutoComplete, Option, Box } from '@rocket.chat/fuselage';\\nimport { RoomAvatar } from '@rocket.chat/ui-avatar';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useQuery } from '@tanstack/react-query';\\nimport type { ComponentProps } from 'react';\\nimport React, { memo, useMemo, useState } from 'react';\\n\\ntype TeamAutocompleteProps = Omit<ComponentProps<typeof AutoComplete>, 'filter'>;\\n\\nconst TeamAutocomplete = ({ value, onChange, ...props }: TeamAutocompleteProps) => {\\n\\tconst [filter, setFilter] = useState('');\\n\\n\\tconst teamsAutoCompleteEndpoint = useEndpoint('GET', '/v1/teams.autocomplete');\\n\\tconst { data, isSuccess } = useQuery(['teamsAutoComplete', filter], async () => teamsAutoCompleteEndpoint({ name: filter }));\\n\\n\\tconst options = useMemo(\\n\\t\\t() =>\\n\\t\\t\\tisSuccess\\n\\t\\t\\t\\t? data?.teams.map(({ name, teamId, _id, avatarETag, t }) => ({\\n\\t\\t\\t\\t\\t\\tvalue: teamId as string,\\n\\t\\t\\t\\t\\t\\tlabel: { name, avatarETag, type: t, _id },\\n\\t\\t\\t\\t  }))\\n\\t\\t\\t\\t: [],\\n\\t\\t[data, isSuccess],\\n\\t);\\n\\n\\treturn (\\n\\t\\t<AutoComplete\\n\\t\\t\\t{...props}\\n\\t\\t\\tvalue={value}\\n\\t\\t\\tonChange={onChange}\\n\\t\\t\\tfilter={filter}\\n\\t\\t\\tsetFilter={setFilter}\\n\\t\\t\\trenderSelected={({ selected: { value, label: room } }) => (\\n\\t\\t\\t\\t<Box value={value}>\\n\\t\\t\\t\\t\\t<RoomAvatar size='x20' room={room} /> {room.name}\\n\\t\\t\\t\\t</Box>\\n\\t\\t\\t)}\\n\\t\\t\\trenderItem={({ value, label: room, ...props }) => (\\n\\t\\t\\t\\t<Option key={value} {...props} label={room.name} avatar={<RoomAvatar size='x20' room={room} />} />\\n\\t\\t\\t)}\\n\\t\\t\\toptions={options}\\n\\t\\t/>\\n\\t);\\n};\\n\\nexport default memo(TeamAutocomplete);\\n\",null],\"names\":[\"_extends\",\"_objectWithoutProperties\",\"AutoComplete\",\"Option\",\"Box\",\"RoomAvatar\",\"useEndpoint\",\"useQuery\",\"React\",\"memo\",\"useMemo\",\"useState\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"value\",\"onChange\",\"props\",\"_excluded\",\"filter\",\"setFilter\",\"teamsAutoCompleteEndpoint\",\"data\",\"isSuccess\",\"name\",\"options\",\"teams\",\"map\",\"_ref2\",\"teamId\",\"_id\",\"avatarETag\",\"t\",\"label\",\"type\",\"createElement\",\"renderSelected\",\"_ref3\",\"selected\",\"room\",\"size\",\"renderItem\",\"_ref4\",\"_excluded2\",\"key\",\"avatar\"],\"mappings\":\"2BAAAA,EAAkEC,EAAlEC,EAASC,EAAcC,EAA2CC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,iDAAzDC,EAAAC,IAAc,CAAA,iCAAmB,CAAAC,QAAwBC,CAAA,EAAAf,EAAAe,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,iDAAA,CAAAC,QAAAC,CAAA,EAAAd,EAAAc,CAAA,CAAA,EAAA,GAA3CH,EAAWC,IAAE,CAAA,wBAAM,CAAuBX,aAACa,CAAA,EAAAb,EAAAa,CAAA,EAAAZ,OAAAY,CAAA,EAAAZ,EAAAY,CAAA,EAAAX,IAAAW,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,yBAAA,CAAAR,WAAAU,CAAA,EAAAV,EAAAU,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2BAAA,CAAAP,YAAAS,CAAA,EAAAT,EAAAS,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wBAAA,CAAAN,SAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAC,QAAAC,CAAA,EAAAP,EAAAO,CAAA,EAAAN,KAAAM,CAAA,EAAAN,EAAAM,CAAA,EAAAL,QAAAK,CAAA,EAAAL,EAAAK,CAAA,EAAAJ,SAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAAlEH,EAAOI,aAAE,CA8CMP,EArCUQ,IAAyD,GAAxD,CAAEC,MAAAA,CAAK,CAAEC,SAAAA,CAAAA,CAA2C,CAAAF,EAA9BG,EAAKnB,EAAAgB,EAAAI,GAC9C,CAACC,EAAQC,EAAU,CAAGZ,EAAS,IAE/Ba,EAA4BlB,EAAY,MAAO,0BAC/C,CAAEmB,KAAAA,CAAI,CAAEC,UAAAA,CAAAA,CAAW,CAAGnB,EAAS,CAAC,oBAAqBe,EAAO,CAAE,SAAYE,EAA0B,CAAEG,KAAML,CAAM,IAElHM,EAAUlB,EACf,IACCgB,EACGD,MAAAA,EAAI,KAAA,EAAJA,EAAMI,KAAK,CAACC,GAAG,CAACC,IAAA,GAAC,CAAEJ,KAAAA,CAAI,CAAEK,OAAAA,CAAM,CAAEC,IAAAA,CAAG,CAAEC,WAAAA,CAAU,CAAEC,EAAAA,CAAAA,CAAG,CAAAJ,EAAA,MAAM,CAC3Db,MAAOc,EACPI,MAAO,CAAET,KAAAA,EAAMO,WAAAA,EAAYG,KAAMF,EAAGF,IAAAA,CAAG,EACtC,GACD,EAAE,CACN,CAACR,EAAMC,EAAU,EAGlB,OACClB,EAAA8B,aAAA,CAACpC,EAAYF,EAAA,CAAA,EACRoB,EAAK,CACTF,MAAOA,EACPC,SAAUA,EACVG,OAAQA,EACRC,UAAWA,EACXgB,eAAgBC,IAAA,GAAC,CAAEC,SAAU,CAAEvB,MAAAA,CAAK,CAAEkB,MAAOM,CAAAA,CAAI,CAAI,CAAAF,EAAA,OACpDhC,EAAA8B,aAAA,CAAClC,EAAG,CAACc,MAAOA,CAAM,EACjBV,EAAA8B,aAAA,CAACjC,EAAU,CAACsC,KAAK,MAAMD,KAAMA,CAAK,GAAI,IAACA,EAAKf,IACxC,CAAC,EAEPiB,WAAYC,IAAA,GAAC,CAAE3B,MAAAA,CAAK,CAAEkB,MAAOM,CAAAA,CAAgB,CAAAG,EAAPzB,EAAKnB,EAAA4C,EAAAC,GAAA,OAC1CtC,EAAA8B,aAAA,CAACnC,EAAMH,EAAA,CAAC+C,IAAK7B,CAAM,EAAKE,EAAK,CAAEgB,MAAOM,EAAKf,IAAK,CAACqB,OAAQxC,EAAA8B,aAAA,CAACjC,EAAU,CAACsC,KAAK,MAAMD,KAAMA,CAAK,EAAI,GAAG,EAEnGd,QAASA,CAAQ,GAGpB\"}"}