{"code":"function module(e,r,o){let n,t,s,u,a,i,m,l,_,c,d,f,y,k,p;o.export({useMuteUserAction:()=>v}),o.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){n=e}},0),o.link(\"@rocket.chat/string-helpers\",{escapeHTML(e){t=e}},1),o.link(\"@rocket.chat/ui-contexts\",{useAllPermissions(e){s=e},usePermission(e){u=e},useSetModal(e){a=e},useToastMessageDispatch(e){i=e},useTranslation(e){m=e},useUserRoom(e){l=e},useUserSubscription(e){_=e},useEndpoint(e){c=e}},2),o.link(\"react\",{default(e){d=e},useMemo(e){f=e}},3),o.link(\"../../../../../components/GenericModal\",{default(e){y=e}},4),o.link(\"../../../../../lib/rooms/roomCoordinator\",{roomCoordinator(e){k=e}},5),o.link(\"../../../lib/getRoomDirectives\",{getRoomDirectives(e){p=e}},6);let h=(e,r,o)=>{var n,t,s;return null!=r&&r.ro?(!Array.isArray(r.unmuted)||-1===r.unmuted.indexOf(null!==(t=e.username)&&void 0!==t?t:\"\"))&&(!o||Array.isArray(r.muted)&&-1!==r.muted.indexOf(null!==(s=e.username)&&void 0!==s?s:\"\")):r&&Array.isArray(r.muted)&&r.muted.indexOf(null!==(n=e.username)&&void 0!==n?n:\"\")>-1},v=(e,r)=>{let o=m(),v=l(r),g=u(\"mute-user\",r),U=i(),A=a(),M=n(()=>A(null)),b=s(f(()=>[\"post-readonly\"],[]),r),C=_(r),w=h(e,v,b),x=(null==v?void 0:v.t)&&t(k.getRoomName(v.t,v));if(!v)throw Error(\"Room not provided\");let{roomCanMute:T}=p({room:v,showingUserId:e._id,userSubscription:C}),R=w?\"User__username__unmuted_in_room__roomName__\":\"User__username__muted_in_room__roomName__\",E=c(\"POST\",w?\"/v1/rooms.unmuteUser\":\"/v1/rooms.muteUser\"),O=f(()=>T&&g?{content:o(w?\"Unmute_user\":\"Mute_user\"),icon:w?\"mic\":\"mic-off\",onClick:()=>{let n=async()=>{try{if(!e.username)throw Error(\"User without username\");return await E({roomId:r,username:e.username}),U({type:\"success\",message:o(R,{username:e.username,roomName:x})})}catch(e){U({type:\"error\",message:e})}finally{M()}};return w?n():A(d.createElement(y,{variant:\"danger\",confirmText:o(\"Yes_mute_user\"),onClose:M,onCancel:M,onConfirm:n},o(\"The_user_wont_be_able_to_type_in_s\",x)))},type:\"management\"}:void 0,[M,R,U,w,E,r,T,x,A,o,e.username,g]);return O}}","map":"{\"version\":3,\"sources\":[\"client/views/room/hooks/useUserInfoActions/actions/useMuteUserAction.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, IUser } from '@rocket.chat/core-typings';\\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport { escapeHTML } from '@rocket.chat/string-helpers';\\nimport {\\n\\tuseAllPermissions,\\n\\tusePermission,\\n\\tuseSetModal,\\n\\tuseToastMessageDispatch,\\n\\tuseTranslation,\\n\\tuseUserRoom,\\n\\tuseUserSubscription,\\n\\tuseEndpoint,\\n} from '@rocket.chat/ui-contexts';\\nimport React, { useMemo } from 'react';\\n\\nimport GenericModal from '../../../../../components/GenericModal';\\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\\nimport type { UserInfoAction, UserInfoActionType } from '../useUserInfoActions';\\n\\nconst getUserIsMuted = (\\n\\tuser: Pick<IUser, '_id' | 'username'>,\\n\\troom: IRoom | undefined,\\n\\tuserCanPostReadonly: boolean,\\n): boolean | undefined => {\\n\\tif (room?.ro) {\\n\\t\\tif (Array.isArray(room.unmuted) && room.unmuted.indexOf(user.username ?? '') !== -1) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tif (userCanPostReadonly) {\\n\\t\\t\\treturn Array.isArray(room.muted) && room.muted.indexOf(user.username ?? '') !== -1;\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\treturn room && Array.isArray(room.muted) && room.muted.indexOf(user.username ?? '') > -1;\\n};\\n\\nexport const useMuteUserAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\\n\\tconst t = useTranslation();\\n\\tconst room = useUserRoom(rid);\\n\\tconst userCanMute = usePermission('mute-user', rid);\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst setModal = useSetModal();\\n\\tconst closeModal = useMutableCallback(() => setModal(null));\\n\\tconst otherUserCanPostReadonly = useAllPermissions(\\n\\t\\tuseMemo(() => ['post-readonly'], []),\\n\\t\\trid,\\n\\t);\\n\\tconst userSubscription = useUserSubscription(rid);\\n\\n\\tconst isMuted = getUserIsMuted(user, room, otherUserCanPostReadonly);\\n\\tconst roomName = room?.t && escapeHTML(roomCoordinator.getRoomName(room.t, room));\\n\\n\\tif (!room) {\\n\\t\\tthrow Error('Room not provided');\\n\\t}\\n\\n\\tconst { roomCanMute } = getRoomDirectives({ room, showingUserId: user._id, userSubscription });\\n\\n\\tconst mutedMessage = isMuted ? 'User__username__unmuted_in_room__roomName__' : 'User__username__muted_in_room__roomName__';\\n\\n\\tconst muteUser = useEndpoint('POST', isMuted ? '/v1/rooms.unmuteUser' : '/v1/rooms.muteUser');\\n\\n\\tconst muteUserOption = useMemo(() => {\\n\\t\\tconst action = (): Promise<void> | void => {\\n\\t\\t\\tconst onConfirm = async (): Promise<void> => {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tif (!user.username) {\\n\\t\\t\\t\\t\\t\\tthrow new Error('User without username');\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tawait muteUser({ roomId: rid, username: user.username });\\n\\n\\t\\t\\t\\t\\treturn dispatchToastMessage({\\n\\t\\t\\t\\t\\t\\ttype: 'success',\\n\\t\\t\\t\\t\\t\\tmessage: t(mutedMessage, {\\n\\t\\t\\t\\t\\t\\t\\tusername: user.username,\\n\\t\\t\\t\\t\\t\\t\\troomName,\\n\\t\\t\\t\\t\\t\\t}),\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t} catch (error: unknown) {\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t\\t} finally {\\n\\t\\t\\t\\t\\tcloseModal();\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\t\\tif (isMuted) {\\n\\t\\t\\t\\treturn onConfirm();\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn setModal(\\n\\t\\t\\t\\t<GenericModal variant='danger' confirmText={t('Yes_mute_user')} onClose={closeModal} onCancel={closeModal} onConfirm={onConfirm}>\\n\\t\\t\\t\\t\\t{t('The_user_wont_be_able_to_type_in_s', roomName)}\\n\\t\\t\\t\\t</GenericModal>,\\n\\t\\t\\t);\\n\\t\\t};\\n\\n\\t\\treturn roomCanMute && userCanMute\\n\\t\\t\\t? {\\n\\t\\t\\t\\t\\tcontent: t(isMuted ? 'Unmute_user' : 'Mute_user'),\\n\\t\\t\\t\\t\\ticon: isMuted ? ('mic' as const) : ('mic-off' as const),\\n\\t\\t\\t\\t\\tonClick: action,\\n\\t\\t\\t\\t\\ttype: 'management' as UserInfoActionType,\\n\\t\\t\\t  }\\n\\t\\t\\t: undefined;\\n\\t}, [\\n\\t\\tcloseModal,\\n\\t\\tmutedMessage,\\n\\t\\tdispatchToastMessage,\\n\\t\\tisMuted,\\n\\t\\tmuteUser,\\n\\t\\trid,\\n\\t\\troomCanMute,\\n\\t\\troomName,\\n\\t\\tsetModal,\\n\\t\\tt,\\n\\t\\tuser.username,\\n\\t\\tuserCanMute,\\n\\t]);\\n\\n\\treturn muteUserOption;\\n};\\n\",null],\"names\":[\"useMutableCallback\",\"escapeHTML\",\"useAllPermissions\",\"usePermission\",\"useSetModal\",\"useToastMessageDispatch\",\"useTranslation\",\"useUserRoom\",\"useUserSubscription\",\"useEndpoint\",\"React\",\"useMemo\",\"GenericModal\",\"roomCoordinator\",\"getRoomDirectives\",\"module\",\"export\",\"useMuteUserAction\",\"link\",\"v\",\"default\",\"getUserIsMuted\",\"user\",\"room\",\"userCanPostReadonly\",\"_user$username3\",\"_user$username\",\"_user$username2\",\"ro\",\"Array\",\"isArray\",\"unmuted\",\"indexOf\",\"username\",\"muted\",\"rid\",\"t\",\"userCanMute\",\"dispatchToastMessage\",\"setModal\",\"closeModal\",\"otherUserCanPostReadonly\",\"userSubscription\",\"isMuted\",\"roomName\",\"getRoomName\",\"Error\",\"roomCanMute\",\"showingUserId\",\"_id\",\"mutedMessage\",\"muteUser\",\"muteUserOption\",\"content\",\"icon\",\"onClick\",\"action\",\"onConfirm\",\"roomId\",\"type\",\"message\",\"error\",\"createElement\",\"variant\",\"confirmText\",\"onClose\",\"onCancel\",\"undefined\"],\"mappings\":\"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\"}"}