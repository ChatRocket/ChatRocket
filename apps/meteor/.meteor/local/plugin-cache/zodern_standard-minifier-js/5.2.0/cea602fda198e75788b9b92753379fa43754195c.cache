{"code":"function module(e,n,r){let o;async function i(e,n,r){let{sessionDescriptionHandler:i}=n;if(!(i instanceof o))throw Error(\"Session's session description handler not instance of SessionDescriptionHandler.\");let{peerConnection:s}=i;if(!s)throw Error(\"Peer connection closed.\");let t=null;\"sender\"===r?t=s.getSenders():\"receiver\"===r&&(t=s.getReceivers()),t&&t.forEach(n=>{n.track&&(n.track.enabled=e)})}r.export({toggleMediaStreamTracks:()=>i}),r.link(\"sip.js/lib/platform/web\",{SessionDescriptionHandler(e){o=e}},0)}","map":"{\"version\":3,\"sources\":[\"client/lib/voip/Helper.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { Session } from 'sip.js';\\nimport { SessionDescriptionHandler } from 'sip.js/lib/platform/web';\\n\\n/** Helper function to enable/disable media tracks. */\\nexport async function toggleMediaStreamTracks(enable: boolean, session: Session, direction: 'sender' | 'receiver'): Promise<void> {\\n\\tconst { sessionDescriptionHandler } = session;\\n\\tif (!(sessionDescriptionHandler instanceof SessionDescriptionHandler)) {\\n\\t\\tthrow new Error(\\\"Session's session description handler not instance of SessionDescriptionHandler.\\\");\\n\\t}\\n\\tconst { peerConnection } = sessionDescriptionHandler;\\n\\tif (!peerConnection) {\\n\\t\\tthrow new Error('Peer connection closed.');\\n\\t}\\n\\tlet mediaStreams = null;\\n\\tif (direction === 'sender') {\\n\\t\\tmediaStreams = peerConnection.getSenders();\\n\\t} else if (direction === 'receiver') {\\n\\t\\tmediaStreams = peerConnection.getReceivers();\\n\\t}\\n\\tif (mediaStreams) {\\n\\t\\tmediaStreams.forEach((stream) => {\\n\\t\\t\\tif (stream.track) {\\n\\t\\t\\t\\tstream.track.enabled = enable;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n}\\n\",null],\"names\":[\"SessionDescriptionHandler\",\"toggleMediaStreamTracks\",\"enable\",\"session\",\"direction\",\"sessionDescriptionHandler\",\"Error\",\"peerConnection\",\"mediaStreams\",\"getSenders\",\"getReceivers\",\"forEach\",\"stream\",\"track\",\"enabled\",\"module\",\"export\",\"link\",\"v\"],\"mappings\":\"2BACoEA,EAG7D,eAAeC,EAAwBC,CAAe,CAAEC,CAAgB,CAAEC,CAAgC,EAChH,GAAM,CAAEC,0BAAAA,CAAAA,CAA2B,CAAGF,EACtC,GAAI,CAAEE,CAAAA,aAAqCL,CAAAA,EAC1C,MAAM,AAAIM,MAAM,oFAEjB,GAAM,CAAEC,eAAAA,CAAAA,CAAgB,CAAGF,EAC3B,GAAI,CAACE,EACJ,MAAM,AAAID,MAAM,2BAEjB,IAAIE,EAAe,IACfJ,AAAc,CAAA,WAAdA,EACHI,EAAeD,EAAeE,UAAU,GAChB,aAAdL,GACVI,CAAAA,EAAeD,EAAeG,YAAY,EAAA,EAEvCF,GACHA,EAAaG,OAAO,CAAEC,IACjBA,EAAOC,KAAK,EACfD,CAAAA,EAAOC,KAAK,CAACC,OAAO,CAAGZ,CAAAA,CAEzB,EAEF,CAzBAa,EAAOC,MAAE,CAAA,CAAAf,wBAA2BA,IAAMA,CAAA,GAA0Bc,EAAAE,IAAA,CAAA,0BAAA,CAAAjB,0BAAAkB,CAAA,EAAAlB,EAAAkB,CAAA,CAAA,EAAA\"}"}