{"code":"function module(e,t,i){let o;i.export({mime:()=>o,getExtension:()=>n,getMimeType:()=>p}),i.link(\"mime-type/with-db\",{default(e){o=e}},0),o.types.wav=\"audio/wav\",o.types.lst=\"text/plain\",o.define(\"image/vnd.microsoft.icon\",{source:\"\",extensions:[\"ico\"]},o.dupAppend),o.define(\"image/x-icon\",{source:\"\",extensions:[\"ico\"]},o.dupOverwrite),o.define(\"audio/aac\",{source:\"\",extensions:[\"aac\"]},o.dupOverwrite);let n=e=>{let t=o.extension(e);return t&&\"boolean\"!=typeof t?t:\"\"},p=(e,t)=>{let i=o.extension(e);if(\"application/octet-stream\"!==e&&i&&i!==t.split(\".\").pop())return e;let n=o.lookup(t);return\"string\"==typeof n?n:\"application/octet-stream\"}}","map":"{\"version\":3,\"sources\":[\"app/utils/lib/mimeTypes.ts\",\"<anon>\"],\"sourcesContent\":[\"import mime from 'mime-type/with-db';\\n\\nmime.types.wav = 'audio/wav';\\nmime.types.lst = 'text/plain';\\nmime.define('image/vnd.microsoft.icon', { source: '', extensions: ['ico'] }, mime.dupAppend);\\nmime.define('image/x-icon', { source: '', extensions: ['ico'] }, mime.dupOverwrite);\\nmime.define('audio/aac', { source: '', extensions: ['aac'] }, mime.dupOverwrite);\\n\\nconst getExtension = (param: string): string => {\\n\\tconst extension = mime.extension(param);\\n\\n\\treturn !extension || typeof extension === 'boolean' ? '' : extension;\\n};\\n\\nconst getMimeType = (mimetype: string, fileName: string): string => {\\n\\t// If the extension from the mimetype is different from the file extension, the file\\n\\t// extension may be wrong so use the informed mimetype\\n\\tconst extension = mime.extension(mimetype);\\n\\tif (mimetype !== 'application/octet-stream' && extension && extension !== fileName.split('.').pop()) {\\n\\t\\treturn mimetype;\\n\\t}\\n\\n\\tconst fileMimeType = mime.lookup(fileName);\\n\\treturn typeof fileMimeType === 'string' ? fileMimeType : 'application/octet-stream';\\n};\\n\\nexport { mime, getExtension, getMimeType };\\n\",null],\"names\":[\"mime\",\"module\",\"export\",\"getExtension\",\"getMimeType\",\"link\",\"default\",\"v\",\"types\",\"wav\",\"lst\",\"define\",\"source\",\"extensions\",\"dupAppend\",\"dupOverwrite\",\"param\",\"extension\",\"mimetype\",\"fileName\",\"split\",\"pop\",\"fileMimeType\",\"lookup\"],\"mappings\":\"2BAAqCA,EAArCC,EAAOC,MAAI,CAAA,CAAAF,KAAMA,IAAAA,EAAAG,aAAoBA,IAAAA,EAAAC,YAAAA,IAAAA,CAAA,GAAAH,EAAAI,IAAA,CAAA,oBAAA,CAAAC,QAAAC,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAErCP,EAAKQ,KAAK,CAACC,GAAG,CAAG,YACjBT,EAAKQ,KAAK,CAACE,GAAG,CAAG,aACjBV,EAAKW,MAAM,CAAC,2BAA4B,CAAEC,OAAQ,GAAIC,WAAY,CAAC,MAAK,AAAC,EAAIb,EAAKc,SAAS,EAC3Fd,EAAKW,MAAM,CAAC,eAAgB,CAAEC,OAAQ,GAAIC,WAAY,CAAC,MAAK,AAAC,EAAIb,EAAKe,YAAY,EAClFf,EAAKW,MAAM,CAAC,YAAa,CAAEC,OAAQ,GAAIC,WAAY,CAAC,MAAK,AAAC,EAAIb,EAAKe,YAAY,EAE/E,IAAMZ,EAAgBa,IACrB,IAAMC,EAAYjB,EAAKiB,SAAS,CAACD,GAEjC,OAAO,AAACC,GAAa,AAAqB,WAArB,OAAOA,EAA+BA,EAAL,EACvD,EAEMb,EAAcA,CAACc,EAAkBC,KAGtC,IAAMF,EAAYjB,EAAKiB,SAAS,CAACC,GACjC,GAAIA,AAAa,6BAAbA,GAA2CD,GAAaA,IAAcE,EAASC,KAAK,CAAC,KAAKC,GAAG,GAChG,OAAOH,EAGR,IAAMI,EAAetB,EAAKuB,MAAM,CAACJ,GACjC,MAAO,AAAwB,UAAxB,OAAOG,EAA4BA,EAAe,0BAC1D\"}"}