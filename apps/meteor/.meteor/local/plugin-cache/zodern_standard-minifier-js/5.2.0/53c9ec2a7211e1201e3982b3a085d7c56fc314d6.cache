{"code":"function module(n,r,t){t.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(n){e=n}},0),t.export({useReconnectCountdown:function(){return f}}),t.link(\"react\",{useEffect:function(n){u=n},useRef:function(n){c=n},useState:function(n){i=n}},0);var e,u,c,i,o=function(n){var r=n-Date.now();return r>0&&Math.round(r/1e3)||0},f=function(n,r){var t=c(),f=i(function(){return n?o(n):0}),a=e(f,2),l=a[0],s=a[1];return u(function(){if(\"waiting\"===r){if(t.current)return;t.current=setInterval(function(){n&&s(o(n))},500);return}t.current&&clearInterval(t.current),t.current=void 0},[n,r]),u(function(){return function(){t.current&&clearInterval(t.current)}},[]),l}}","map":"{\"version\":3,\"sources\":[\"client/components/connectionStatus/useReconnectCountdown.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useEffect, useRef, useState } from 'react';\\n\\nconst getReconnectCountdown = (retryTime: number): number => {\\n\\tconst timeDiff = retryTime - Date.now();\\n\\treturn (timeDiff > 0 && Math.round(timeDiff / 1000)) || 0;\\n};\\n\\nexport const useReconnectCountdown = (\\n\\tretryTime: number | undefined,\\n\\tstatus: 'connected' | 'connecting' | 'failed' | 'waiting' | 'offline',\\n): number => {\\n\\tconst reconnectionTimerRef = useRef<ReturnType<typeof setInterval>>();\\n\\tconst [reconnectCountdown, setReconnectCountdown] = useState(() => (retryTime ? getReconnectCountdown(retryTime) : 0));\\n\\n\\tuseEffect(() => {\\n\\t\\tif (status === 'waiting') {\\n\\t\\t\\tif (reconnectionTimerRef.current) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\treconnectionTimerRef.current = setInterval(() => {\\n\\t\\t\\t\\tretryTime && setReconnectCountdown(getReconnectCountdown(retryTime));\\n\\t\\t\\t}, 500);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\treconnectionTimerRef.current && clearInterval(reconnectionTimerRef.current);\\n\\t\\treconnectionTimerRef.current = undefined;\\n\\t}, [retryTime, status]);\\n\\n\\tuseEffect(\\n\\t\\t() => (): void => {\\n\\t\\t\\treconnectionTimerRef.current && clearInterval(reconnectionTimerRef.current);\\n\\t\\t},\\n\\t\\t[],\\n\\t);\\n\\n\\treturn reconnectCountdown;\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_slicedToArray\",\"export\",\"useReconnectCountdown\",\"useEffect\",\"useRef\",\"useState\",\"getReconnectCountdown\",\"retryTime\",\"timeDiff\",\"Date\",\"now\",\"Math\",\"round\",\"status\",\"reconnectionTimerRef\",\"_useState\",\"_useState2\",\"reconnectCountdown\",\"setReconnectCountdown\",\"current\",\"setInterval\",\"clearInterval\",\"undefined\"],\"mappings\":\"uBAAkBA,EAAQC,IAAE,CAAA,uCAAwB,CAAAC,QAAA,SAAAC,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAApDH,EAAOK,MAAE,CAAA,CAAAC,sBAA2B,WAAQ,OAAQA,CAAA,CAAA,GAAAN,EAAAC,IAAA,CAAA,QAAA,CAAAM,UAAA,SAAAJ,CAAA,EAAAI,EAAAJ,CAAA,EAAAK,OAAA,SAAAL,CAAA,EAAAK,EAAAL,CAAA,EAAAM,SAAA,SAAAN,CAAA,EAAAM,EAAAN,CAAA,CAAA,EAAA,GAEpD,IAFAC,EAAoDG,EAAAC,EAAAC,EAE9CC,EAAwB,SAACC,CAAiB,EAC/C,IAAMC,EAAWD,EAAYE,KAAKC,GAAG,GACrC,OAAQF,EAAW,GAAKG,KAAKC,KAAK,CAACJ,EAAW,MAAU,CACzD,EAEaN,EAAwB,SACpCK,CAA6B,CAC7BM,CAAqE,EAErE,IAAMC,EAAuBV,IAC7BW,EAAoDV,EAAS,WAAA,OAAOE,EAAYD,EAAsBC,GAAa,CAAC,GAAES,EAAAhB,EAAAe,EAAA,GAA/GE,EAAkBD,CAAA,CAAA,EAAA,CAAEE,EAAqBF,CAAA,CAAA,EAAA,CAyBhD,OAvBAb,EAAU,WACT,GAAIU,AAAW,YAAXA,EAAsB,CACzB,GAAIC,EAAqBK,OAAO,CAC/B,MAGDL,CAAAA,EAAqBK,OAAO,CAAGC,YAAY,WAC1Cb,GAAaW,EAAsBZ,EAAsBC,GAC1D,EAAG,KACH,MACD,CAEAO,EAAqBK,OAAO,EAAIE,cAAcP,EAAqBK,OAAO,EAC1EL,EAAqBK,OAAO,CAAGG,KAAAA,CAChC,EAAG,CAACf,EAAWM,EAAO,EAEtBV,EACC,WAAA,OAAM,WACLW,EAAqBK,OAAO,EAAIE,cAAcP,EAAqBK,OAAO,CAC3E,CAAC,EACD,EAAE,EAGIF,CACR\"}"}