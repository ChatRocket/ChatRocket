{"code":"function module(e,t,n){n.link(\"@babel/runtime/regenerator\",{default:function(e){i=e}},0),n.export({useChangeUserStatusAction:function(){return f}}),n.link(\"@rocket.chat/ui-contexts\",{useToastMessageDispatch:function(e){s=e},useTranslation:function(e){r=e},useEndpoint:function(e){a=e},usePermission:function(e){u=e}},0),n.link(\"react\",{useMemo:function(e){c=e}},1),n.link(\"./useConfirmOwnerChanges\",{useConfirmOwnerChanges:function(e){o=e}},2);var i,s,r,a,u,c,o,f=function(e,t,n){var f=r(),l=o(),v=s(),h=a(\"POST\",\"/v1/users.setActiveStatus\"),d=u(\"edit-other-user-active-status\"),m=t?\"User_has_been_deactivated\":\"User_has_been_activated\",p=c(function(){return{userId:e,activeStatus:!t,confirmRelinquish:!1}},[e,t]);return d?{icon:\"user\",label:t?f(\"Deactivate\"):f(\"Activate\"),action:function(){return l(function(){var e,t=arguments;return i.async(function(s){for(;;)switch(s.prev=s.next){case 0:return(e=t.length>0&&void 0!==t[0]&&t[0])&&(p.confirmRelinquish=e),s.prev=2,s.next=5,i.awrap(h(p));case 5:v({type:\"success\",message:f(m)}),n(),s.next=12;break;case 9:throw s.prev=9,s.t0=s.catch(2),s.t0;case 12:case\"end\":return s.stop()}},null,null,[[2,9]],Promise)},{confirmText:f(\"Yes_deactivate_it\")},n)}}:void 0}}","map":"{\"version\":3,\"sources\":[\"client/views/admin/users/hooks/useChangeUserStatusAction.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IUser } from '@rocket.chat/core-typings';\\nimport { useToastMessageDispatch, useTranslation, useEndpoint, usePermission } from '@rocket.chat/ui-contexts';\\nimport { useMemo } from 'react';\\n\\nimport type { Action } from '../../../hooks/useActionSpread';\\nimport { useConfirmOwnerChanges } from './useConfirmOwnerChanges';\\n\\nexport const useChangeUserStatusAction = (userId: IUser['_id'], isActive: boolean, onChange: () => void): Action | undefined => {\\n\\tconst t = useTranslation();\\n\\tconst confirmOwnerChanges = useConfirmOwnerChanges();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst changeActiveStatusRequest = useEndpoint('POST', '/v1/users.setActiveStatus');\\n\\tconst canEditOtherUserActiveStatus = usePermission('edit-other-user-active-status');\\n\\tconst changeActiveStatusMessage = isActive ? 'User_has_been_deactivated' : 'User_has_been_activated';\\n\\n\\tconst activeStatusQuery = useMemo(\\n\\t\\t() => ({\\n\\t\\t\\tuserId,\\n\\t\\t\\tactiveStatus: !isActive,\\n\\t\\t\\tconfirmRelinquish: false,\\n\\t\\t}),\\n\\t\\t[userId, isActive],\\n\\t);\\n\\n\\tconst changeActiveStatus = (): Promise<void> =>\\n\\t\\tconfirmOwnerChanges(\\n\\t\\t\\tasync (confirm = false) => {\\n\\t\\t\\t\\tif (confirm) {\\n\\t\\t\\t\\t\\tactiveStatusQuery.confirmRelinquish = confirm;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tawait changeActiveStatusRequest(activeStatusQuery);\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t(changeActiveStatusMessage) });\\n\\t\\t\\t\\t\\tonChange();\\n\\t\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\t\\tthrow error;\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tconfirmText: t('Yes_deactivate_it'),\\n\\t\\t\\t},\\n\\t\\t\\tonChange,\\n\\t\\t);\\n\\n\\treturn canEditOtherUserActiveStatus\\n\\t\\t? {\\n\\t\\t\\t\\ticon: 'user',\\n\\t\\t\\t\\tlabel: isActive ? t('Deactivate') : t('Activate'),\\n\\t\\t\\t\\taction: changeActiveStatus,\\n\\t\\t  }\\n\\t\\t: undefined;\\n};\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_regeneratorRuntime\",\"export\",\"useChangeUserStatusAction\",\"useToastMessageDispatch\",\"useTranslation\",\"useEndpoint\",\"usePermission\",\"useMemo\",\"useConfirmOwnerChanges\",\"userId\",\"isActive\",\"onChange\",\"t\",\"confirmOwnerChanges\",\"dispatchToastMessage\",\"changeActiveStatusRequest\",\"canEditOtherUserActiveStatus\",\"changeActiveStatusMessage\",\"activeStatusQuery\",\"activeStatus\",\"confirmRelinquish\",\"icon\",\"label\",\"action\",\"confirm\",\"_args\",\"arguments\",\"async\",\"_context\",\"prev\",\"next\",\"length\",\"undefined\",\"awrap\",\"type\",\"message\",\"t0\",\"stop\",\"Promise\",\"confirmText\"],\"mappings\":\"uBACSA,EAAAC,IAAyB,CAAA,6BAA6B,CAAAC,QAAA,SAAeC,CAAM,EAAAC,EAAAD,CAAA,CAAA,EAA0B,GAA9GH,EAAOK,MAAE,CAAA,CAAAC,0BAAyB,WAAgB,OAAAA,CAAkC,CAAA,GAA2BN,EAAAC,IAAA,CAAA,2BAAA,CAAAM,wBAAA,SAAAJ,CAAA,EAAAI,EAAAJ,CAAA,EAAAK,eAAA,SAAAL,CAAA,EAAAK,EAAAL,CAAA,EAAAM,YAAA,SAAAN,CAAA,EAAAM,EAAAN,CAAA,EAAAO,cAAA,SAAAP,CAAA,EAAAO,EAAAP,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAU,QAAA,SAAAR,CAAA,EAAAQ,EAAAR,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,2BAAA,CAAAW,uBAAA,SAAAT,CAAA,EAAAS,EAAAT,CAAA,CAAA,EAAA,GAMxG,IANPC,EAAoFG,EAA2BC,EAAAC,EAAAC,EAAAC,EAAAC,EAMlGN,EAA4B,SAACO,CAAoB,CAAEC,CAAiB,CAAEC,CAAoB,EACtG,IAAMC,EAAIR,IACJS,EAAsBL,IACtBM,EAAuBX,IACvBY,EAA4BV,EAAY,OAAQ,6BAChDW,EAA+BV,EAAc,iCAC7CW,EAA4BP,EAAW,4BAA8B,0BAErEQ,EAAoBX,EACzB,WAAA,MAAO,CACNE,OAAAA,EACAU,aAAc,CAACT,EACfU,kBAAmB,CAAA,EACnB,EACD,CAACX,EAAQC,EAAS,EAwBnB,OAAOM,EACJ,CACAK,KAAM,OACNC,MAAOZ,EAAWE,EAAE,cAAgBA,EAAE,YACtCW,OAzBwB,WAAA,OAC1BV,EACC,WAAA,IAAAW,EAAAC,EAAAC,UAAA,OAAA1B,EAAA2B,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAGE,MAHKN,CAAAA,EAAOC,EAAAM,MAAA,CAAA,GAAAN,AAAAO,KAAAA,IAAAP,CAAA,CAAA,EAAA,EAAAA,CAAA,CAAA,EAAA,AAAG,GAEfP,CAAAA,EAAkBE,iBAAiB,CAAGI,CAAAA,EACtCI,EAAAC,IAAA,CAAA,EAAAD,EAAAE,IAAA,CAAA,EAAA9B,EAAAiC,KAAA,CAGMlB,EAA0BG,GAAkB,MAAA,EAClDJ,EAAqB,CAAEoB,KAAM,UAAWC,QAASvB,EAAEK,EAA0B,GAC7EN,IAAWiB,EAAAE,IAAA,CAAA,GAAA,KAAA,MAAA,EAAA,MAAAF,EAAAC,IAAA,CAAA,EAAAD,EAAAQ,EAAA,CAAAR,EAAA,KAAA,CAAA,GAAAA,EAAAQ,EAAA,MAAA,GAAA,IAAA,MAAA,OAAAR,EAAAS,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAAC,QAAA,EAKb,CACCC,YAAa3B,EAAE,sBAEhBD,EACA,GAQCqB,KAAAA,CACJ\"}"}