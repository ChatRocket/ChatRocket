{"code":"Package[\"core-runtime\"].queue(\"sha\",function(){var r;return Package.meteor.Meteor,Package.meteor.global,Package.meteor.meteorEnv,(function(){r=function(r){function n(r,n){var t=(65535&r)+(65535&n);return(r>>16)+(n>>16)+(t>>16)<<16|65535&t}function t(r,n){return r>>>n|r<<32-n}function e(r,n){return r>>>n}return function(r){for(var n=\"0123456789abcdef\",t=\"\",e=0;e<4*r.length;e++)t+=n.charAt(r[e>>2]>>(3-e%4)*8+4&15)+n.charAt(r[e>>2]>>(3-e%4)*8&15);return t}(function(r,e){var o,a,u,f,c,i,h,g,C,m,v,d,l=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],S=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],A=Array(64);r[e>>5]|=128<<24-e%32,r[(e+64>>9<<4)+15]=e;for(var C=0;C<r.length;C+=16){o=S[0],a=S[1],u=S[2],f=S[3],c=S[4],i=S[5],h=S[6],g=S[7];for(var k,P,b,s,p,q,x,y,m=0;m<64;m++)m<16?A[m]=r[m+C]:A[m]=n(n(n(t(k=A[m-2],17)^t(k,19)^k>>>10,A[m-7]),t(P=A[m-15],7)^t(P,18)^P>>>3),A[m-16]),v=n(n(n(n(g,t(b=c,6)^t(b,11)^t(b,25)),(s=c)&i^~s&h),l[m]),A[m]),d=n(t(p=o,2)^t(p,13)^t(p,22),(q=o)&(x=a)^q&(y=u)^x&y),g=h,h=i,i=c,c=n(f,v),f=u,u=a,a=o,o=n(v,d);S[0]=n(o,S[0]),S[1]=n(a,S[1]),S[2]=n(u,S[2]),S[3]=n(f,S[3]),S[4]=n(c,S[4]),S[5]=n(i,S[5]),S[6]=n(h,S[6]),S[7]=n(g,S[7])}return S}(function(r){for(var n=[],t=0;t<8*r.length;t+=8)n[t>>5]|=(255&r.charCodeAt(t/8))<<24-t%32;return n}(r=function(r){for(var n=\"\",t=0;t<r.length;t++){var e=r.charCodeAt(t);e<128?n+=String.fromCharCode(e):e>127&&e<2048?n+=String.fromCharCode(e>>6|192)+String.fromCharCode(63&e|128):n+=String.fromCharCode(e>>12|224)+String.fromCharCode(e>>6&63|128)+String.fromCharCode(63&e|128)}return n}(r)),8*r.length))}}).call(this),{export:function(){return{SHA256:r}}}});","map":"{\"version\":3,\"sources\":[\"packages/sha/sha256.js\",\"<anon>\"],\"sourcesContent\":[\"/// METEOR WRAPPER\\n//\\nSHA256 = (function () {\\n\\n\\n/**\\n*\\n*  Secure Hash Algorithm (SHA256)\\n*  http://www.webtoolkit.info/javascript-sha256.html\\n*  http://anmar.eu.org/projects/jssha2/\\n*\\n*  Original code by Angel Marin, Paul Johnston.\\n*\\n**/\\n\\nfunction SHA256(s){\\n\\n\\tvar chrsz   = 8;\\n\\tvar hexcase = 0;\\n\\n\\tfunction safe_add (x, y) {\\n\\t\\tvar lsw = (x & 0xFFFF) + (y & 0xFFFF);\\n\\t\\tvar msw = (x >> 16) + (y >> 16) + (lsw >> 16);\\n\\t\\treturn (msw << 16) | (lsw & 0xFFFF);\\n\\t}\\n\\n\\tfunction S (X, n) { return ( X >>> n ) | (X << (32 - n)); }\\n\\tfunction R (X, n) { return ( X >>> n ); }\\n\\tfunction Ch(x, y, z) { return ((x & y) ^ ((~x) & z)); }\\n\\tfunction Maj(x, y, z) { return ((x & y) ^ (x & z) ^ (y & z)); }\\n\\tfunction Sigma0256(x) { return (S(x, 2) ^ S(x, 13) ^ S(x, 22)); }\\n\\tfunction Sigma1256(x) { return (S(x, 6) ^ S(x, 11) ^ S(x, 25)); }\\n\\tfunction Gamma0256(x) { return (S(x, 7) ^ S(x, 18) ^ R(x, 3)); }\\n\\tfunction Gamma1256(x) { return (S(x, 17) ^ S(x, 19) ^ R(x, 10)); }\\n\\n\\tfunction core_sha256 (m, l) {\\n\\t\\tvar K = new Array(0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2);\\n\\t\\tvar HASH = new Array(0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19);\\n\\t\\tvar W = new Array(64);\\n\\t\\tvar a, b, c, d, e, f, g, h, i, j;\\n\\t\\tvar T1, T2;\\n\\n\\t\\tm[l >> 5] |= 0x80 << (24 - l % 32);\\n\\t\\tm[((l + 64 >> 9) << 4) + 15] = l;\\n\\n\\t\\tfor ( var i = 0; i<m.length; i+=16 ) {\\n\\t\\t\\ta = HASH[0];\\n\\t\\t\\tb = HASH[1];\\n\\t\\t\\tc = HASH[2];\\n\\t\\t\\td = HASH[3];\\n\\t\\t\\te = HASH[4];\\n\\t\\t\\tf = HASH[5];\\n\\t\\t\\tg = HASH[6];\\n\\t\\t\\th = HASH[7];\\n\\n\\t\\t\\tfor ( var j = 0; j<64; j++) {\\n\\t\\t\\t\\tif (j < 16) W[j] = m[j + i];\\n\\t\\t\\t\\telse W[j] = safe_add(safe_add(safe_add(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);\\n\\n\\t\\t\\t\\tT1 = safe_add(safe_add(safe_add(safe_add(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);\\n\\t\\t\\t\\tT2 = safe_add(Sigma0256(a), Maj(a, b, c));\\n\\n\\t\\t\\t\\th = g;\\n\\t\\t\\t\\tg = f;\\n\\t\\t\\t\\tf = e;\\n\\t\\t\\t\\te = safe_add(d, T1);\\n\\t\\t\\t\\td = c;\\n\\t\\t\\t\\tc = b;\\n\\t\\t\\t\\tb = a;\\n\\t\\t\\t\\ta = safe_add(T1, T2);\\n\\t\\t\\t}\\n\\n\\t\\t\\tHASH[0] = safe_add(a, HASH[0]);\\n\\t\\t\\tHASH[1] = safe_add(b, HASH[1]);\\n\\t\\t\\tHASH[2] = safe_add(c, HASH[2]);\\n\\t\\t\\tHASH[3] = safe_add(d, HASH[3]);\\n\\t\\t\\tHASH[4] = safe_add(e, HASH[4]);\\n\\t\\t\\tHASH[5] = safe_add(f, HASH[5]);\\n\\t\\t\\tHASH[6] = safe_add(g, HASH[6]);\\n\\t\\t\\tHASH[7] = safe_add(h, HASH[7]);\\n\\t\\t}\\n\\t\\treturn HASH;\\n\\t}\\n\\n\\tfunction str2binb (str) {\\n\\t\\tvar bin = Array();\\n\\t\\tvar mask = (1 << chrsz) - 1;\\n\\t\\tfor(var i = 0; i < str.length * chrsz; i += chrsz) {\\n\\t\\t\\tbin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (24 - i%32);\\n\\t\\t}\\n\\t\\treturn bin;\\n\\t}\\n\\n\\tfunction Utf8Encode(string) {\\n\\t\\t// METEOR change:\\n\\t\\t// The webtoolkit.info version of this code added this\\n\\t\\t// Utf8Encode function (which does seem necessary for dealing\\n\\t\\t// with arbitrary Unicode), but the following line seems\\n\\t\\t// problematic:\\n\\t\\t//\\n\\t\\t// string = string.replace(/\\\\r\\\\n/g,\\\"\\\\n\\\");\\n\\t\\tvar utftext = \\\"\\\";\\n\\n\\t\\tfor (var n = 0; n < string.length; n++) {\\n\\n\\t\\t\\tvar c = string.charCodeAt(n);\\n\\n\\t\\t\\tif (c < 128) {\\n\\t\\t\\t\\tutftext += String.fromCharCode(c);\\n\\t\\t\\t}\\n\\t\\t\\telse if((c > 127) && (c < 2048)) {\\n\\t\\t\\t\\tutftext += String.fromCharCode((c >> 6) | 192);\\n\\t\\t\\t\\tutftext += String.fromCharCode((c & 63) | 128);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tutftext += String.fromCharCode((c >> 12) | 224);\\n\\t\\t\\t\\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);\\n\\t\\t\\t\\tutftext += String.fromCharCode((c & 63) | 128);\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\treturn utftext;\\n\\t}\\n\\n\\tfunction binb2hex (binarray) {\\n\\t\\tvar hex_tab = hexcase ? \\\"0123456789ABCDEF\\\" : \\\"0123456789abcdef\\\";\\n\\t\\tvar str = \\\"\\\";\\n\\t\\tfor(var i = 0; i < binarray.length * 4; i++) {\\n\\t\\t\\tstr += hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8+4)) & 0xF) +\\n\\t\\t\\thex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8  )) & 0xF);\\n\\t\\t}\\n\\t\\treturn str;\\n\\t}\\n\\n\\ts = Utf8Encode(s);\\n\\treturn binb2hex(core_sha256(str2binb(s), s.length * chrsz));\\n\\n}\\n\\n/// METEOR WRAPPER\\nreturn SHA256;\\n})();\\n\\n\",null],\"names\":[\"SHA256\",\"s\",\"safe_add\",\"x\",\"y\",\"lsw\",\"S\",\"X\",\"n\",\"R\",\"binb2hex\",\"binarray\",\"hex_tab\",\"str\",\"i\",\"length\",\"charAt\",\"core_sha256\",\"m\",\"l\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"j\",\"T1\",\"T2\",\"K\",\"HASH\",\"W\",\"Array\",\"z\",\"str2binb\",\"bin\",\"charCodeAt\",\"Utf8Encode\",\"string\",\"utftext\",\"String\",\"fromCharCode\"],\"mappings\":\"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\"}"}