{"code":"function module(e,n,o){let s,i,t;o.export({useVideoConfRoomName:()=>a}),o.link(\"@rocket.chat/core-typings\",{isDirectMessageRoom(e){s=e}},0),o.link(\"@rocket.chat/ui-contexts\",{useUserSubscription(e){i=e}},1),o.link(\"../../../../../hooks/useUserDisplayName\",{useUserDisplayName(e){t=e}},2);let a=e=>{let n=i(e._id),o=t({name:null==n?void 0:n.fname,username:null==n?void 0:n.name});return s(e)?o:e.fname||e.name}}","map":"{\"version\":3,\"sources\":[\"client/views/room/contextualBar/VideoConference/hooks/useVideoConfRoomName.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom } from '@rocket.chat/core-typings';\\nimport { isDirectMessageRoom } from '@rocket.chat/core-typings';\\nimport { useUserSubscription } from '@rocket.chat/ui-contexts';\\n\\nimport { useUserDisplayName } from '../../../../../hooks/useUserDisplayName';\\n\\nexport const useVideoConfRoomName = (room: IRoom): string | undefined => {\\n\\tconst subscription = useUserSubscription(room._id);\\n\\tconst username = useUserDisplayName({ name: subscription?.fname, username: subscription?.name });\\n\\n\\treturn isDirectMessageRoom(room) ? username : room.fname || room.name;\\n};\\n\",null],\"names\":[\"isDirectMessageRoom\",\"useUserSubscription\",\"useUserDisplayName\",\"module\",\"export\",\"useVideoConfRoomName\",\"link\",\"v\",\"room\",\"subscription\",\"_id\",\"username\",\"name\",\"fname\"],\"mappings\":\"2BACgEA,EAAAC,EAAAC,EAAhEC,EAAOC,MAAE,CAAA,CAAAC,qBAA2BA,IAAAA,CAAA,GAA4BF,EAAAG,IAAA,CAAA,4BAAA,CAAAN,oBAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,2BAAA,CAAAL,oBAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,0CAAA,CAAAJ,mBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAKzD,IAAMF,EAAwBG,IACpC,IAAMC,EAAeR,EAAoBO,EAAKE,GAAG,EAC3CC,EAAWT,EAAmB,CAAEU,KAAMH,MAAAA,EAAY,KAAA,EAAZA,EAAcI,KAAK,CAAEF,SAAUF,MAAAA,EAAY,KAAA,EAAZA,EAAcG,IAAAA,AAAI,GAE7F,OAAOZ,EAAoBQ,GAAQG,EAAWH,EAAKK,KAAK,EAAIL,EAAKI,IAAI,AACtE\"}"}