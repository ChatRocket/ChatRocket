{"code":"function module(t,e,a){a.export({getPeriod:function(){return y},getPeriodRange:function(){return d}}),a.link(\"moment\",{default:function(t){n=t}},0);var n,r=function(t){return[t]},s=function(t){return function(e){var a=-(new Date().getTimezoneOffset()/60);return{start:e?n.utc().startOf(\"day\").subtract(t,\"days\").toDate():n().subtract(t,\"days\").startOf(\"day\").utcOffset(a).toDate(),end:e?n.utc().endOf(\"day\").toDate():n().endOf(\"day\").utcOffset(a).toDate()}}},o=[{key:\"today\",label:r(\"Today\"),range:s(0)},{key:\"this week\",label:r(\"This_week\"),range:s(7)},{key:\"last 7 days\",label:r(\"Last_7_days\"),range:s(7)},{key:\"last 15 days\",label:r(\"Last_15_days\"),range:s(15)},{key:\"this month\",label:r(\"This_month\"),range:s(30)},{key:\"last 30 days\",label:r(\"Last_30_days\"),range:s(30)},{key:\"last 90 days\",label:r(\"Last_90_days\"),range:s(90)},{key:\"last 6 months\",label:r(\"Last_6_months\"),range:s(180)},{key:\"last year\",label:r(\"Last_year\"),range:s(365)}],y=function(t){var e=o.find(function(e){return e.key===t});if(!e)throw Error('\"'+t+'\" is not a valid period key');return e},d=function(t){var e=!(arguments.length>1)||void 0===arguments[1]||arguments[1],a=o.find(function(e){return e.key===t});if(!a)throw Error('\"'+t+'\" is not a valid period key');return a.range(e)}}","map":"{\"version\":3,\"sources\":[\"client/components/dashboards/periods.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { TranslationKey } from '@rocket.chat/ui-contexts';\\nimport moment from 'moment';\\n\\nconst label = (translationKey: TranslationKey): readonly [translationKey: TranslationKey] => [translationKey];\\n\\nconst lastNDays =\\n\\t(\\n\\t\\tn: number,\\n\\t): ((utc: boolean) => {\\n\\t\\tstart: Date;\\n\\t\\tend: Date;\\n\\t}) =>\\n\\t(utc): { start: Date; end: Date } => {\\n\\t\\tconst date = new Date();\\n\\t\\tconst offsetForMoment = -(date.getTimezoneOffset() / 60);\\n\\n\\t\\tconst start = utc\\n\\t\\t\\t? moment.utc().startOf('day').subtract(n, 'days').toDate()\\n\\t\\t\\t: moment().subtract(n, 'days').startOf('day').utcOffset(offsetForMoment).toDate();\\n\\n\\t\\tconst end = utc ? moment.utc().endOf('day').toDate() : moment().endOf('day').utcOffset(offsetForMoment).toDate();\\n\\n\\t\\treturn { start, end };\\n\\t};\\n\\nconst periods = [\\n\\t{\\n\\t\\tkey: 'today',\\n\\t\\tlabel: label('Today'),\\n\\t\\trange: lastNDays(0),\\n\\t},\\n\\t{\\n\\t\\tkey: 'this week',\\n\\t\\tlabel: label('This_week'),\\n\\t\\trange: lastNDays(7),\\n\\t},\\n\\t{\\n\\t\\tkey: 'last 7 days',\\n\\t\\tlabel: label('Last_7_days'),\\n\\t\\trange: lastNDays(7),\\n\\t},\\n\\t{\\n\\t\\tkey: 'last 15 days',\\n\\t\\tlabel: label('Last_15_days'),\\n\\t\\trange: lastNDays(15),\\n\\t},\\n\\t{\\n\\t\\tkey: 'this month',\\n\\t\\tlabel: label('This_month'),\\n\\t\\trange: lastNDays(30),\\n\\t},\\n\\t{\\n\\t\\tkey: 'last 30 days',\\n\\t\\tlabel: label('Last_30_days'),\\n\\t\\trange: lastNDays(30),\\n\\t},\\n\\t{\\n\\t\\tkey: 'last 90 days',\\n\\t\\tlabel: label('Last_90_days'),\\n\\t\\trange: lastNDays(90),\\n\\t},\\n\\t{\\n\\t\\tkey: 'last 6 months',\\n\\t\\tlabel: label('Last_6_months'),\\n\\t\\trange: lastNDays(180),\\n\\t},\\n\\t{\\n\\t\\tkey: 'last year',\\n\\t\\tlabel: label('Last_year'),\\n\\t\\trange: lastNDays(365),\\n\\t},\\n] as const;\\n\\nexport type Period = (typeof periods)[number];\\n\\nexport const getPeriod = (key: (typeof periods)[number]['key']): Period => {\\n\\tconst period = periods.find((period) => period.key === key);\\n\\n\\tif (!period) {\\n\\t\\tthrow new Error(`\\\"${key}\\\" is not a valid period key`);\\n\\t}\\n\\n\\treturn period;\\n};\\n\\nexport const getPeriodRange = (\\n\\tkey: (typeof periods)[number]['key'],\\n\\tutc = true,\\n): {\\n\\tstart: Date;\\n\\tend: Date;\\n} => {\\n\\tconst period = periods.find((period) => period.key === key);\\n\\n\\tif (!period) {\\n\\t\\tthrow new Error(`\\\"${key}\\\" is not a valid period key`);\\n\\t}\\n\\n\\treturn period.range(utc);\\n};\\n\",null],\"names\":[\"module\",\"export\",\"getPeriod\",\"getPeriodRange\",\"link\",\"v\",\"moment\",\"label\",\"translationKey\",\"lastNDays\",\"n\",\"utc\",\"offsetForMoment\",\"date\",\"Date\",\"getTimezoneOffset\",\"start\",\"startOf\",\"subtract\",\"toDate\",\"utcOffset\",\"end\",\"endOf\",\"periods\",\"key\",\"range\",\"period\",\"find\",\"Error\",\"arguments\",\"length\",\"undefined\"],\"mappings\":\"uBACAA,EAAOC,MAAM,CAAA,CAAAC,UAAM,WAAS,OAAAA,CAAA,EAAAC,eAAA,WAAA,OAAAA,CAAA,CAAA,GAAAH,EAAAI,IAAA,CAAA,SAAA,CAAA,QAAA,SAAAC,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAE5B,IAF4BC,EAEtBC,EAAQ,SAACC,CAA8B,EAAA,MAAgD,CAACA,EAAe,EAEvGC,EACL,SACCC,CAAS,EAAA,OAKV,SAACC,CAAG,EAEH,IAAMC,EAAkB,CAAEC,CAAAA,AADb,IAAIC,OACcC,iBAAiB,GAAK,EAAA,EAQrD,MAAO,CAAEC,MANKL,EACXL,EAAOK,GAAG,GAAGM,OAAO,CAAC,OAAOC,QAAQ,CAACR,EAAG,QAAQS,MAAM,GACtDb,IAASY,QAAQ,CAACR,EAAG,QAAQO,OAAO,CAAC,OAAOG,SAAS,CAACR,GAAiBO,MAAM,GAIhEE,IAFJV,EAAML,EAAOK,GAAG,GAAGW,KAAK,CAAC,OAAOH,MAAM,GAAKb,IAASgB,KAAK,CAAC,OAAOF,SAAS,CAACR,GAAiBO,MAAM,EAE3F,CACpB,CAAC,EAEII,EAAU,CACf,CACCC,IAAK,QACLjB,MAAOA,EAAM,SACbkB,MAAOhB,EAAU,IAElB,CACCe,IAAK,YACLjB,MAAOA,EAAM,aACbkB,MAAOhB,EAAU,IAElB,CACCe,IAAK,cACLjB,MAAOA,EAAM,eACbkB,MAAOhB,EAAU,IAElB,CACCe,IAAK,eACLjB,MAAOA,EAAM,gBACbkB,MAAOhB,EAAU,KAElB,CACCe,IAAK,aACLjB,MAAOA,EAAM,cACbkB,MAAOhB,EAAU,KAElB,CACCe,IAAK,eACLjB,MAAOA,EAAM,gBACbkB,MAAOhB,EAAU,KAElB,CACCe,IAAK,eACLjB,MAAOA,EAAM,gBACbkB,MAAOhB,EAAU,KAElB,CACCe,IAAK,gBACLjB,MAAOA,EAAM,iBACbkB,MAAOhB,EAAU,MAElB,CACCe,IAAK,YACLjB,MAAOA,EAAM,aACbkB,MAAOhB,EAAU,MAET,CAIGP,EAAY,SAACsB,CAAoC,EAC7D,IAAME,EAASH,EAAQI,IAAI,CAAC,SAACD,CAAM,EAAA,OAAKA,EAAOF,GAAG,GAAKA,CAAG,GAE1D,GAAI,CAACE,EACJ,MAAM,AAAIE,MAAK,IAAKJ,EAAG,+BAGxB,OAAOE,CACR,EAEavB,EAAiB,SAC7BqB,CAAoC,EAKjC,IAJHb,EAAGkB,CAAAA,CAAAA,UAAAC,MAAA,CAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,EAAAA,SAAA,CAAA,EAAA,CAKGH,EAASH,EAAQI,IAAI,CAAC,SAACD,CAAM,EAAA,OAAKA,EAAOF,GAAG,GAAKA,CAAG,GAE1D,GAAI,CAACE,EACJ,MAAM,AAAIE,MAAK,IAAKJ,EAAG,+BAGxB,OAAOE,EAAOD,KAAK,CAACd,EACrB\"}"}