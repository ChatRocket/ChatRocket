{"code":"function module(e,n,t){t.export({useMessageBoxAutoFocus:function(){return c}}),t.link(\"react\",{useCallback:function(e){u=e},useEffect:function(e){r=e},useRef:function(e){o=e}},0);var u,r,o,c=function(e){var n=o();return r(function(){var e=function(e){var t=n.current,u=e.target;!u||u===t||!(e.keyCode>45&&e.keyCode<91||8===e.keyCode)||/input|textarea|select/i.test(u.tagName)||!0===e.ctrlKey||!0===e.metaKey||null==t||t.focus()};return document.addEventListener(\"keydown\",e),function(){document.removeEventListener(\"keydown\",e)}},[]),u(function(t){t&&(n.current=t,e&&n.current&&n.current.focus())},[e,n])}}","map":"{\"version\":3,\"sources\":[\"client/views/room/composer/messageBox/hooks/useMessageBoxAutoFocus.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { Ref } from 'react';\\nimport { useCallback, useEffect, useRef } from 'react';\\n\\n/**\\n * if the user is types outside the message box and its not actually typing in any input field\\n * then the message box should be focused\\n * @returns callbackRef to bind the logic to the message box\\n */\\nexport const useMessageBoxAutoFocus = (enabled: boolean): Ref<HTMLElement> => {\\n\\tconst ref = useRef<HTMLElement>();\\n\\n\\tuseEffect(() => {\\n\\t\\tconst handleKeyDown = (e: KeyboardEvent) => {\\n\\t\\t\\tconst { current: node } = ref;\\n\\t\\t\\tconst { target } = e;\\n\\n\\t\\t\\tif (!target) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (target === node) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tif (!((e.keyCode > 45 && e.keyCode < 91) || e.keyCode === 8)) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (/input|textarea|select/i.test((target as HTMLElement).tagName)) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (e.ctrlKey === true || e.metaKey === true) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tnode?.focus();\\n\\t\\t};\\n\\n\\t\\tdocument.addEventListener('keydown', handleKeyDown);\\n\\n\\t\\treturn () => {\\n\\t\\t\\tdocument.removeEventListener('keydown', handleKeyDown);\\n\\t\\t};\\n\\t}, []);\\n\\n\\treturn useCallback(\\n\\t\\t(node: HTMLElement | null) => {\\n\\t\\t\\tif (!node) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tref.current = node;\\n\\n\\t\\t\\tif (!enabled) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ref.current) {\\n\\t\\t\\t\\tref.current.focus();\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t[enabled, ref],\\n\\t);\\n};\\n\",null],\"names\":[\"module\",\"export\",\"useMessageBoxAutoFocus\",\"link\",\"useCallback\",\"v\",\"useEffect\",\"useRef\",\"enabled\",\"ref\",\"handleKeyDown\",\"e\",\"node\",\"current\",\"target\",\"keyCode\",\"test\",\"tagName\",\"ctrlKey\",\"metaKey\",\"focus\",\"document\",\"addEventListener\",\"removeEventListener\"],\"mappings\":\"uBACAA,EAAOC,MAAE,CAAA,CAAAC,uBAAwB,WAAc,OAAQA,CAAA,CAAA,GAAAF,EAAAG,IAAA,CAAA,QAAA,CAAAC,YAAA,SAAAC,CAAA,EAAAD,EAAAC,CAAA,EAAAC,UAAA,SAAAD,CAAA,EAAAC,EAAAD,CAAA,EAAAE,OAAA,SAAAF,CAAA,EAAAE,EAAAF,CAAA,CAAA,EAAA,GAOhD,IAPgDD,EAAAE,EAAAC,EAO1CL,EAAyB,SAACM,CAAgB,EACtD,IAAMC,EAAMF,IAoCZ,OAlCAD,EAAU,WACT,IAAMI,EAAgB,SAACC,CAAgB,EACtC,IAAiBC,EAASH,EAAlBI,OAAO,CACPC,EAAWH,EAAXG,MAAM,AAEV,EAACA,GAIDA,IAAWF,GAGX,CAAGD,CAAAA,EAAEI,OAAO,CAAG,IAAMJ,EAAEI,OAAO,CAAG,IAAOJ,AAAc,IAAdA,EAAEI,OAAO,AAAK,GAItD,yBAAyBC,IAAI,CAAEF,EAAuBG,OAAO,GAI7DN,AAAc,CAAA,IAAdA,EAAEO,OAAO,EAAaP,AAAc,CAAA,IAAdA,EAAEQ,OAAO,EAInCP,MAAAA,GAAAA,EAAMQ,KAAK,EACZ,EAIA,OAFAC,SAASC,gBAAgB,CAAC,UAAWZ,GAE9B,WACNW,SAASE,mBAAmB,CAAC,UAAWb,EACzC,CACD,EAAG,EAAE,EAEEN,EACN,SAACQ,CAAwB,EACnBA,IAILH,EAAII,OAAO,CAAGD,EAETJ,GAIDC,EAAII,OAAO,EACdJ,EAAII,OAAO,CAACO,KAAK,GAEnB,EACA,CAACZ,EAASC,EAAI,CAEhB\"}"}