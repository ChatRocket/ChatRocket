{"code":"function module(e,l,t){let n,o,a,r;t.link(\"react\",{default(e){n=e}},0),t.link(\"../../../../components/GenericTable\",{GenericTableRow(e){o=e},GenericTableCell(e){a=e}},1),t.link(\"../../../../components/MarkdownText\",{default(e){r=e}},2);let c={whiteSpace:\"nowrap\",textOverflow:\"ellipsis\",overflow:\"hidden\"};t.exportDefault(e=>{let{status:l,onClick:t}=e,{_id:i,name:d,statusType:f}=l;return n.createElement(o,{key:i,onKeyDown:()=>t(i),onClick:()=>t(i),tabIndex:0,role:\"link\",action:!0,\"qa-user-id\":i},n.createElement(a,{fontScale:\"p2\",color:\"default\",style:c},n.createElement(r,{content:d,parseEmoji:!0,variant:\"inline\"})),n.createElement(a,{fontScale:\"p2\",color:\"default\",style:c},f))})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/customUserStatus/CustomUserStatusTable/CustomUserStatusRow.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IUserStatus } from '@rocket.chat/core-typings';\\nimport type { CSSProperties, ReactElement } from 'react';\\nimport React from 'react';\\n\\nimport { GenericTableRow, GenericTableCell } from '../../../../components/GenericTable';\\nimport MarkdownText from '../../../../components/MarkdownText';\\n\\nconst style: CSSProperties = { whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden' };\\n\\ntype CustomUserStatusRowProps = {\\n\\tstatus: IUserStatus;\\n\\tonClick: (id: string) => void;\\n};\\n\\nconst CustomUserStatusRow = ({ status, onClick }: CustomUserStatusRowProps): ReactElement => {\\n\\tconst { _id, name, statusType } = status;\\n\\n\\treturn (\\n\\t\\t<GenericTableRow\\n\\t\\t\\tkey={_id}\\n\\t\\t\\tonKeyDown={(): void => onClick(_id)}\\n\\t\\t\\tonClick={(): void => onClick(_id)}\\n\\t\\t\\ttabIndex={0}\\n\\t\\t\\trole='link'\\n\\t\\t\\taction\\n\\t\\t\\tqa-user-id={_id}\\n\\t\\t>\\n\\t\\t\\t<GenericTableCell fontScale='p2' color='default' style={style}>\\n\\t\\t\\t\\t<MarkdownText content={name} parseEmoji={true} variant='inline' />\\n\\t\\t\\t</GenericTableCell>\\n\\t\\t\\t<GenericTableCell fontScale='p2' color='default' style={style}>\\n\\t\\t\\t\\t{statusType}\\n\\t\\t\\t</GenericTableCell>\\n\\t\\t</GenericTableRow>\\n\\t);\\n};\\n\\nexport default CustomUserStatusRow;\\n\",null],\"names\":[\"React\",\"GenericTableRow\",\"GenericTableCell\",\"MarkdownText\",\"module\",\"link\",\"default\",\"v\",\"style\",\"whiteSpace\",\"textOverflow\",\"overflow\",\"exportDefault\",\"_ref\",\"status\",\"onClick\",\"_id\",\"name\",\"statusType\",\"createElement\",\"key\",\"onKeyDown\",\"tabIndex\",\"role\",\"action\",\"fontScale\",\"color\",\"content\",\"parseEmoji\",\"variant\"],\"mappings\":\"2BAEAA,EAA0BC,EAAAC,EAAAC,EAAnBC,EAAKC,IAAM,CAAA,QAAQ,CAAAC,QAAAC,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,sCAAA,CAAAJ,gBAAAM,CAAA,EAAAN,EAAAM,CAAA,EAAAL,iBAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,sCAAA,CAAAC,QAAAC,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAK1B,IAAMC,EAAuB,CAAEC,WAAY,SAAUC,aAAc,WAAYC,SAAU,QAAQ,EALjGP,EAAOQ,aAAW,CAYUC,IAAgE,GAA/D,CAAEC,OAAAA,CAAM,CAAEC,QAAAA,CAAAA,CAAmC,CAAAF,EACnE,CAAEG,IAAAA,CAAG,CAAEC,KAAAA,CAAI,CAAEC,WAAAA,CAAAA,CAAY,CAAGJ,EAElC,OACCd,EAAAmB,aAAA,CAAClB,EAAe,CACfmB,IAAKJ,EACLK,UAAWA,IAAYN,EAAQC,GAC/BD,QAASA,IAAYA,EAAQC,GAC7BM,SAAU,EACVC,KAAK,OACLC,OAAM,CAAA,EACN,aAAYR,CAAI,EAEhBhB,EAAAmB,aAAA,CAACjB,EAAgB,CAACuB,UAAU,KAAKC,MAAM,UAAUlB,MAAOA,CAAM,EAC7DR,EAAAmB,aAAA,CAAChB,EAAY,CAACwB,QAASV,EAAMW,WAAY,CAAA,EAAMC,QAAQ,QAAQ,IAEhE7B,EAAAmB,aAAA,CAACjB,EAAgB,CAACuB,UAAU,KAAKC,MAAM,UAAUlB,MAAOA,CAAM,EAC5DU,GAIL\"}"}