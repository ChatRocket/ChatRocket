{"code":"function module(e,t,r){var n,s,a,i,o,c,u,p,h,l,y,d,f,x,E,v,m,b,g,k,K,w,S,R,I,A,D,T,P,_,O,C,G,N,Y,F,M,U,B,H,V=[\"_id\"],W=[\"msg\",\"attachments\"];r.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(e){s=e}},0),r.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default:function(e){a=e}},1),r.link(\"@babel/runtime/regenerator\",{default:function(e){i=e}},2),r.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(e){o=e}},3),r.link(\"@babel/runtime/helpers/createClass\",{default:function(e){c=e}},4),r.link(\"@babel/runtime/helpers/inheritsLoose\",{default:function(e){u=e}},5),r.link(\"@babel/runtime/helpers/asyncIterator\",{default:function(e){p=e}},6),r.export({E2ERoom:function(){return q}}),r.link(\"@rocket.chat/base64\",{Base64:function(e){h=e}},0),r.link(\"@rocket.chat/emitter\",{Emitter:function(e){l=e}},1),r.link(\"ejson\",{default:function(e){y=e}},2),r.link(\"../../../client/lib/RoomManager\",{RoomManager:function(e){d=e}},3),r.link(\"../../../client/lib/rooms/roomCoordinator\",{roomCoordinator:function(e){f=e}},4),r.link(\"../../../definition/IRoomTypeConfig\",{RoomSettingsEnum:function(e){x=e}},5),r.link(\"../../models/client\",{ChatRoom:function(e){E=e},Subscriptions:function(e){v=e},Messages:function(e){m=e}},6),r.link(\"../../utils/client/lib/SDKClient\",{sdk:function(e){b=e}},7),r.link(\"../../utils/lib/i18n\",{t:function(e){g=e}},8),r.link(\"./E2ERoomState\",{E2ERoomState:function(e){k=e}},9),r.link(\"./helper\",{toString:function(e){K=e},toArrayBuffer:function(e){w=e},joinVectorAndEcryptedData:function(e){S=e},splitVectorAndEcryptedData:function(e){R=e},encryptRSA:function(e){I=e},encryptAES:function(e){A=e},decryptRSA:function(e){D=e},decryptAES:function(e){T=e},generateAESKey:function(e){P=e},exportJWKKey:function(e){_=e},importAESKey:function(e){O=e},importRSAKey:function(e){C=e},readFileAsArrayBuffer:function(e){G=e},encryptAESCTR:function(e){N=e},generateAESCTRKey:function(e){Y=e},sha256HashFromArrayBuffer:function(e){F=e},createSha256HashFromText:function(e){M=e}},10),r.link(\"./logger\",{log:function(e){U=e},logError:function(e){B=e}},11),r.link(\"./rocketchat.e2e\",{e2e:function(e){H=e}},12);var L=Symbol(\"keyID\"),j=Symbol(\"PAUSED\"),J=((n={})[k.NOT_STARTED]=[k.ESTABLISHING,k.DISABLED,k.KEYS_RECEIVED],n[k.READY]=[k.DISABLED,k.CREATING_KEYS,k.WAITING_KEYS],n[k.ERROR]=[k.KEYS_RECEIVED,k.NOT_STARTED],n[k.WAITING_KEYS]=[k.KEYS_RECEIVED,k.ERROR,k.DISABLED],n[k.ESTABLISHING]=[k.READY,k.KEYS_RECEIVED,k.ERROR,k.DISABLED,k.WAITING_KEYS,k.CREATING_KEYS],n),q=function(e){function t(t,r){var n;return(n=e.call(this)||this).state=void 0,n[j]=void 0,n.userId=t,n.roomId=r._id,n.typeOfRoom=r.t,n.roomKeyId=r.e2eKeyId,n.once(k.READY,function(){return i.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,i.awrap(n.decryptOldRoomKeys());case 2:return e.abrupt(\"return\",n.decryptPendingMessages());case 3:case\"end\":return e.stop()}},null,null,null,Promise)}),n.once(k.READY,function(){return n.decryptSubscription()}),n.on(\"STATE_CHANGED\",function(e){n.roomId===d.opened&&n.log(\"[PREV: \"+e+\"]\",\"State CHANGED\")}),n.on(\"STATE_CHANGED\",function(){return n.handshake()}),n.setState(k.NOT_STARTED),n}u(t,e);var r=t.prototype;return r.log=function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];U.apply(void 0,[\"E2E ROOM { state: \"+this.state+\", rid: \"+this.roomId+\" }\"].concat(t))},r.error=function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];B.apply(void 0,[\"E2E ROOM { state: \"+this.state+\", rid: \"+this.roomId+\" }\"].concat(t))},r.hasSessionKey=function(){return!!this.groupSessionKey},r.getState=function(){return this.state},r.setState=function(e){var t=this.state,r=t===e?e===k.ERROR:!!(!(t in J)||J[t].includes(e))&&e;if(!r){this.error(\"invalid state \"+t+\" -> \"+e);return}this.state=r,this.log(t,\"->\",r),this.emit(\"STATE_CHANGED\",t,r,this),this.emit(r,this)},r.isReady=function(){return this.state===k.READY},r.isDisabled=function(){return this.state===k.DISABLED},r.enable=function(){this.state!==k.READY&&this.setState(k.READY)},r.disable=function(){this.setState(k.DISABLED)},r.pause=function(){this.log(\"PAUSED\",this[j],\"->\",!0),this[j]=!0,this.emit(\"PAUSED\",!0)},r.resume=function(){this.log(\"PAUSED\",this[j],\"->\",!1),this[j]=!1,this.emit(\"PAUSED\",!1)},r.keyReceived=function(){this.setState(k.KEYS_RECEIVED)},r.shouldConvertSentMessages=function(e){var t=this;return i.async(function(r){for(;;)switch(r.prev=r.next){case 0:if(!(!this.isReady()||this[j])){r.next=2;break}return r.abrupt(\"return\",!1);case 2:if(void 0!==this[j]){r.next=4;break}return r.abrupt(\"return\",new Promise(function(e){t.once(\"PAUSED\",e)}));case 4:if(\"/\"!==e.msg[0]){r.next=6;break}return r.abrupt(\"return\",!1);case 6:return r.abrupt(\"return\",!0);case 7:case\"end\":return r.stop()}},null,this,null,Promise)},r.shouldConvertReceivedMessages=function(){return this.isReady()},r.isWaitingKeys=function(){return this.state===k.WAITING_KEYS},r.decryptSubscription=function(){var e,t,r;return i.async(function(n){for(;;)switch(n.prev=n.next){case 0:if(!((null===(e=(t=v.findOne({rid:this.roomId})).lastMessage)||void 0===e?void 0:e.t)!==\"e2e\")){n.next=4;break}return this.log(\"decryptSubscriptions nothing to do\"),n.abrupt(\"return\");case 4:return n.next=6,i.awrap(this.decryptMessage(t.lastMessage));case 6:r=n.sent,v.update({_id:t._id},{$set:{lastMessage:r}}),this.log(\"decryptSubscriptions Done\");case 9:case\"end\":return n.stop()}},null,this,null,Promise)},r.decryptOldRoomKeys=function(){var e,t,r,n,s,a,c,u,h;return i.async(function(l){for(;;)switch(l.prev=l.next){case 0:if(!(!(null!=(e=v.findOne({rid:this.roomId}))&&e.oldRoomKeys)||(null==e?void 0:e.oldRoomKeys.length)===0)){l.next=4;break}return this.log(\"decryptOldRoomKeys nothing to do\"),l.abrupt(\"return\");case 4:t=[],r=!1,n=!1,l.prev=7,a=p(e.oldRoomKeys);case 9:return l.next=11,i.awrap(a.next());case 11:if(!(r=!(c=l.sent).done)){l.next=27;break}return u=c.value,l.prev=13,l.next=16,i.awrap(this.decryptSessionKey(u.E2EKey));case 16:h=l.sent,t.push(o(o({},u),{},{E2EKey:h})),l.next=24;break;case 20:l.prev=20,l.t0=l.catch(13),this.error(\"Cannot decrypt old room key with id \"+u.e2eKeyId+\". This is likely because user private key changed or is missing. Skipping\"),t.push(o(o({},u),{},{E2EKey:null}));case 24:r=!1,l.next=9;break;case 27:l.next=33;break;case 29:l.prev=29,l.t1=l.catch(7),n=!0,s=l.t1;case 33:if(l.prev=33,l.prev=34,!(r&&null!=a.return)){l.next=38;break}return l.next=38,i.awrap(a.return());case 38:if(l.prev=38,!n){l.next=41;break}throw s;case 41:return l.finish(38);case 42:return l.finish(33);case 43:this.oldKeys=t,this.log(\"decryptOldRoomKeys Done\");case 45:case\"end\":return l.stop()}},null,this,[[7,29,33,43],[13,20],[34,,38,42]],Promise)},r.exportOldRoomKeys=function(e){var t,r,n,s,a,c,u,h;return i.async(function(l){for(;;)switch(l.prev=l.next){case 0:if(this.log(\"exportOldRoomKeys starting\"),!(!e||0===e.length)){l.next=4;break}return this.log(\"exportOldRoomKeys nothing to do\"),l.abrupt(\"return\");case 4:t=[],r=!1,n=!1,l.prev=7,a=p(e);case 9:return l.next=11,i.awrap(a.next());case 11:if(!(r=!(c=l.sent).done)){l.next=28;break}if(u=c.value,l.prev=13,u.E2EKey){l.next=16;break}return l.abrupt(\"continue\",25);case 16:return l.next=18,i.awrap(this.exportSessionKey(u.E2EKey));case 18:h=l.sent,t.push(o(o({},u),{},{E2EKey:h})),l.next=25;break;case 22:l.prev=22,l.t0=l.catch(13),this.error(\"Cannot decrypt old room key with id \"+u.e2eKeyId+\". This is likely because user private key changed or is missing. Skipping\");case 25:r=!1,l.next=9;break;case 28:l.next=34;break;case 30:l.prev=30,l.t1=l.catch(7),n=!0,s=l.t1;case 34:if(l.prev=34,l.prev=35,!(r&&null!=a.return)){l.next=39;break}return l.next=39,i.awrap(a.return());case 39:if(l.prev=39,!n){l.next=42;break}throw s;case 42:return l.finish(39);case 43:return l.finish(34);case 44:return this.log(\"exportOldRoomKeys Done: \"+t.length+\" keys exported\"),l.abrupt(\"return\",t);case 46:case\"end\":return l.stop()}},null,this,[[7,30,34,44],[13,22],[35,,39,43]],Promise)},r.decryptPendingMessages=function(){var e=this;return i.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt(\"return\",m.find({rid:this.roomId,t:\"e2e\",e2e:\"pending\"}).forEach(function t(t){var r,n;return i.async(function s(s){for(;;)switch(s.prev=s.next){case 0:return r=t._id,n=a(t,V),s.t0=m,s.t1={_id:r},s.next=5,i.awrap(e.decryptMessage(n));case 5:s.t2=s.sent,s.t0.update.call(s.t0,s.t1,s.t2);case 7:case\"end\":return s.stop()}},null,null,null,Promise)}));case 1:case\"end\":return t.stop()}},null,this,null,Promise)},r.handshake=function(){var e,t;return i.async(function(r){for(;;)switch(r.prev=r.next){case 0:if(H.isReady()){r.next=2;break}return r.abrupt(\"return\");case 2:if(!(this.state!==k.KEYS_RECEIVED&&this.state!==k.NOT_STARTED)){r.next=4;break}return r.abrupt(\"return\");case 4:if(this.setState(k.ESTABLISHING),r.prev=5,!(e=v.findOne({rid:this.roomId}).E2EKey)){r.next=12;break}return r.next=10,i.awrap(this.importGroupKey(e));case 10:case 25:return this.setState(k.READY),r.abrupt(\"return\");case 12:r.next=19;break;case 14:return r.prev=14,r.t0=r.catch(5),this.setState(k.ERROR),this.error(\"Error fetching group key: \",r.t0),r.abrupt(\"return\");case 19:if(r.prev=19,!(!(t=E.findOne({_id:this.roomId})).e2eKeyId&&this.userShouldCreateKeys(t))){r.next=27;break}return this.setState(k.CREATING_KEYS),r.next=25,i.awrap(this.createGroupKey());case 27:this.setState(k.WAITING_KEYS),this.log(\"Requesting room key\"),b.publish(\"notify-room-users\",[this.roomId+\"/e2ekeyRequest\",this.roomId,t.e2eKeyId]),r.next=35;break;case 32:r.prev=32,r.t1=r.catch(19),this.setState(k.ERROR);case 35:case\"end\":return r.stop()}},null,this,[[5,14],[19,32]],Promise)},r.userShouldCreateKeys=function(e){return\"d\"===e.t||e.u._id===this.userId},r.isSupportedRoomType=function(e){return f.getRoomDirectives(e).allowRoomSettingChange({},x.E2E)},r.decryptSessionKey=function(e){return i.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.t0=O,t.t1=JSON,t.next=4,i.awrap(this.exportSessionKey(e));case 4:return t.t2=t.sent,t.t3=t.t1.parse.call(t.t1,t.t2),t.abrupt(\"return\",(0,t.t0)(t.t3));case 7:case\"end\":return t.stop()}},null,this,null,Promise)},r.exportSessionKey=function(e){var t;return i.async(function(r){for(;;)switch(r.prev=r.next){case 0:return e=e.slice(12),e=h.decode(e),r.next=4,i.awrap(D(H.privateKey,e));case 4:return t=r.sent,r.abrupt(\"return\",K(t));case 6:case\"end\":return r.stop()}},null,null,null,Promise)},r.importGroupKey=function(e){var t,r;return i.async(function(n){for(;;)switch(n.prev=n.next){case 0:return this.log(\"Importing room key ->\",this.roomId),e=e.slice(12),e=h.decode(e),n.prev=3,n.next=6,i.awrap(D(H.privateKey,e));case 6:t=n.sent,this.sessionKeyExportedString=K(t),n.next=14;break;case 10:return n.prev=10,n.t0=n.catch(3),this.error(\"Error decrypting group key: \",n.t0),n.abrupt(\"return\",!1);case 14:if(this.keyID){n.next=21;break}if(n.t1=this.roomKeyId,n.t1){n.next=20;break}return n.next=19,i.awrap(M(this.sessionKeyExportedString));case 19:n.t1=n.sent.slice(0,12);case 20:this.keyID=n.t1;case 21:return n.prev=21,n.next=24,i.awrap(O(JSON.parse(this.sessionKeyExportedString)));case 24:r=n.sent,this.groupSessionKey=r,n.next=32;break;case 28:return n.prev=28,n.t2=n.catch(21),this.error(\"Error importing group key: \",n.t2),n.abrupt(\"return\",!1);case 32:return n.abrupt(\"return\",!0);case 33:case\"end\":return n.stop()}},null,this,[[3,10],[21,28]],Promise)},r.createNewGroupKey=function(){var e;return i.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,i.awrap(P());case 2:return this.groupSessionKey=t.sent,t.next=5,i.awrap(_(this.groupSessionKey));case 5:return e=t.sent,this.sessionKeyExportedString=JSON.stringify(e),t.next=9,i.awrap(M(this.sessionKeyExportedString));case 9:this.keyID=t.sent.slice(0,12);case 10:case\"end\":return t.stop()}},null,this,null,Promise)},r.createGroupKey=function(){return i.async(function(e){for(;;)switch(e.prev=e.next){case 0:return this.log(\"Creating room key\"),e.prev=1,e.next=4,i.awrap(this.createNewGroupKey());case 4:return e.next=6,i.awrap(b.call(\"e2e.setRoomKeyID\",this.roomId,this.keyID));case 6:return e.t0=i,e.t1=b.rest,e.t2=this.roomId,e.t3=this.userId,e.next=12,i.awrap(this.encryptGroupKeyForParticipant(H.publicKey));case 12:return e.t4=e.sent,e.t5={rid:e.t2,uid:e.t3,key:e.t4},e.t6=e.t1.post.call(e.t1,\"/v1/e2e.updateGroupKey\",e.t5),e.next=17,e.t0.awrap.call(e.t0,e.t6);case 17:return e.next=19,i.awrap(this.encryptKeyForOtherParticipants());case 19:e.next=25;break;case 21:throw e.prev=21,e.t7=e.catch(1),this.error(\"Error exporting group key: \",e.t7),e.t7;case 25:case\"end\":return e.stop()}},null,this,[[1,21]],Promise)},r.resetRoomKey=function(){var e;return i.async(function(t){for(;;)switch(t.prev=t.next){case 0:if(this.log(\"Resetting room key\"),H.publicKey){t.next=4;break}return this.error(\"Cannot reset room key. No public key found.\"),t.abrupt(\"return\");case 4:return this.setState(k.CREATING_KEYS),t.prev=5,t.next=8,i.awrap(this.createNewGroupKey());case 8:return t.t0=this.keyID,t.next=11,i.awrap(this.encryptGroupKeyForParticipant(H.publicKey));case 11:return t.t1=t.sent,e={e2eKeyId:t.t0,e2eKey:t.t1},this.setState(k.READY),this.log(\"Room key reset done for room \"+this.roomId),t.abrupt(\"return\",e);case 18:throw t.prev=18,t.t2=t.catch(5),this.error(\"Error resetting group key: \",t.t2),t.t2;case 22:case\"end\":return t.stop()}},null,this,[[5,18]],Promise)},r.onRoomKeyReset=function(e){this.log(\"Room keyID was reset. New keyID: \"+e+\" Previous keyID: \"+this.keyID),this.setState(k.WAITING_KEYS),this.keyID=e,this.groupSessionKey=void 0,this.sessionKeyExportedString=void 0,this.sessionKeyExported=void 0,this.oldKeys=void 0},r.encryptKeyForOtherParticipants=function(){var e,t,r,n,s,a,c,u,h,l,y,d,f;return i.async(function(x){for(;;)switch(x.prev=x.next){case 0:return x.prev=0,t=v.findOne({rid:this.roomId}),x.next=4,i.awrap(this.exportOldRoomKeys(null==t?void 0:t.oldRoomKeys));case 4:return r=x.sent,x.next=7,i.awrap(b.call(\"e2e.getUsersOfRoomWithoutKey\",this.roomId));case 7:if((n=x.sent.users.filter(function(e){var t;return null==e?void 0:null===(t=e.e2e)||void 0===t?void 0:t.public_key})).length){x.next=10;break}return x.abrupt(\"return\");case 10:(e={})[this.roomId]=[],s=e,a=!1,c=!1,x.prev=13,h=p(n);case 15:return x.next=17,i.awrap(h.next());case 17:if(!(a=!(l=x.sent).done)){x.next=29;break}return y=l.value,x.next=21,i.awrap(this.encryptGroupKeyForParticipant(y.e2e.public_key));case 21:return d=x.sent,x.next=24,i.awrap(this.encryptOldKeysForParticipant(y.e2e.public_key,r));case 24:f=x.sent,s[this.roomId].push(o({_id:y._id,key:d},f&&{oldKeys:f}));case 26:a=!1,x.next=15;break;case 29:x.next=35;break;case 31:x.prev=31,x.t0=x.catch(13),c=!0,u=x.t0;case 35:if(x.prev=35,x.prev=36,!(a&&null!=h.return)){x.next=40;break}return x.next=40,i.awrap(h.return());case 40:if(x.prev=40,!c){x.next=43;break}throw u;case 43:return x.finish(40);case 44:return x.finish(35);case 45:return x.next=47,i.awrap(b.rest.post(\"/v1/e2e.provideUsersSuggestedGroupKeys\",{usersSuggestedGroupKeys:s}));case 47:x.next=52;break;case 49:return x.prev=49,x.t1=x.catch(0),x.abrupt(\"return\",this.error(\"Error getting room users: \",x.t1));case 52:case\"end\":return x.stop()}},null,this,[[0,49],[13,31,35,45],[36,,40,44]],Promise)},r.encryptOldKeysForParticipant=function(e,t){var r,n,s,a,c,u,l,y,d,f;return i.async(function(x){for(;;)switch(x.prev=x.next){case 0:if(!(!t||0===t.length)){x.next=2;break}return x.abrupt(\"return\");case 2:return x.prev=2,x.next=5,i.awrap(C(JSON.parse(e),[\"encrypt\"]));case 5:r=x.sent,x.next=11;break;case 8:return x.prev=8,x.t0=x.catch(2),x.abrupt(\"return\",this.error(\"Error importing user key: \",x.t0));case 11:x.prev=11,n=[],s=!1,a=!1,x.prev=15,u=p(t);case 17:return x.next=19,i.awrap(u.next());case 19:if(!(s=!(l=x.sent).done)){x.next=31;break}if((y=l.value).E2EKey){x.next=23;break}return x.abrupt(\"continue\",28);case 23:return x.next=25,i.awrap(I(r,w(y.E2EKey)));case 25:d=x.sent,f=y.e2eKeyId+h.encode(new Uint8Array(d)),n.push(o(o({},y),{},{E2EKey:f}));case 28:s=!1,x.next=17;break;case 31:x.next=37;break;case 33:x.prev=33,x.t1=x.catch(15),a=!0,c=x.t1;case 37:if(x.prev=37,x.prev=38,!(s&&null!=u.return)){x.next=42;break}return x.next=42,i.awrap(u.return());case 42:if(x.prev=42,!a){x.next=45;break}throw c;case 45:return x.finish(42);case 46:return x.finish(37);case 47:return x.abrupt(\"return\",n);case 50:return x.prev=50,x.t2=x.catch(11),x.abrupt(\"return\",this.error(\"Error encrypting user key: \",x.t2));case 53:case\"end\":return x.stop()}},null,this,[[2,8],[11,50],[15,33,37,47],[38,,42,46]],Promise)},r.encryptGroupKeyForParticipant=function(e){var t,r,n;return i.async(function(s){for(;;)switch(s.prev=s.next){case 0:return s.prev=0,s.next=3,i.awrap(C(JSON.parse(e),[\"encrypt\"]));case 3:t=s.sent,s.next=9;break;case 6:return s.prev=6,s.t0=s.catch(0),s.abrupt(\"return\",this.error(\"Error importing user key: \",s.t0));case 9:return s.prev=9,s.next=12,i.awrap(I(t,w(this.sessionKeyExportedString)));case 12:return r=s.sent,n=this.keyID+h.encode(new Uint8Array(r)),s.abrupt(\"return\",n);case 17:return s.prev=17,s.t1=s.catch(9),s.abrupt(\"return\",this.error(\"Error encrypting user key: \",s.t1));case 20:case\"end\":return s.stop()}},null,this,[[0,6],[9,17]],Promise)},r.encryptFile=function(e){var t,r,n,s,a,o,c,u;return i.async(function(p){for(;;)switch(p.prev=p.next){case 0:return p.next=2,i.awrap(G(e));case 2:return t=p.sent,p.next=5,i.awrap(F(new Uint8Array(t)));case 5:return r=p.sent,n=crypto.getRandomValues(new Uint8Array(16)),p.next=9,i.awrap(Y());case 9:return s=p.sent,p.prev=10,p.next=13,i.awrap(N(n,s,t));case 13:a=p.sent,p.next=20;break;case 16:return p.prev=16,p.t0=p.catch(10),console.log(p.t0),p.abrupt(\"return\",this.error(\"Error encrypting group key: \",p.t0));case 20:return p.next=22,i.awrap(window.crypto.subtle.exportKey(\"jwk\",s));case 22:return o=p.sent,p.next=25,i.awrap(M(e.name));case 25:return c=p.sent,u=new File([w(a)],c),p.abrupt(\"return\",{file:u,key:o,iv:h.encode(n),type:e.type,hash:r});case 28:case\"end\":return p.stop()}},null,this,[[10,16]],Promise)},r.decryptFile=function(e,t,r){var n,s;return i.async(function(a){for(;;)switch(a.prev=a.next){case 0:return n=h.decode(r),a.next=3,i.awrap(window.crypto.subtle.importKey(\"jwk\",t,{name:\"AES-CTR\"},!0,[\"encrypt\",\"decrypt\"]));case 3:return s=a.sent,a.abrupt(\"return\",window.crypto.subtle.decrypt({name:\"AES-CTR\",counter:n,length:64},s,e));case 5:case\"end\":return a.stop()}},null,null,null,Promise)},r.encryptText=function(e){var t,r;return i.async(function(n){for(;;)switch(n.prev=n.next){case 0:return t=crypto.getRandomValues(new Uint8Array(16)),n.prev=1,n.next=4,i.awrap(A(t,this.groupSessionKey,e));case 4:return r=n.sent,n.abrupt(\"return\",this.keyID+h.encode(S(t,r)));case 8:throw n.prev=8,n.t0=n.catch(1),this.error(\"Error encrypting message: \",n.t0),n.t0;case 12:case\"end\":return n.stop()}},null,this,[[1,8]],Promise)},r.encryptMessageContent=function(e){var t;return i.async(function(r){for(;;)switch(r.prev=r.next){case 0:return t=new TextEncoder().encode(y.stringify(e)),r.next=3,i.awrap(this.encryptText(t));case 3:return r.t0=r.sent,r.abrupt(\"return\",{algorithm:\"rc.v1.aes-sha2\",ciphertext:r.t0});case 5:case\"end\":return r.stop()}},null,this,null,Promise)},r.encryptMessage=function(e){var t,r,n,s;return i.async(function(c){for(;;)switch(c.prev=c.next){case 0:return t=e.msg,r=e.attachments,n=a(e,W),c.next=3,i.awrap(this.encryptMessageContent({msg:t,attachments:r}));case 3:return s=c.sent,c.abrupt(\"return\",o(o({},n),{},{content:s,t:\"e2e\",e2e:\"pending\"}));case 5:case\"end\":return c.stop()}},null,this,null,Promise)},r.encrypt=function(e){if(this.isSupportedRoomType(this.typeOfRoom)){if(!this.groupSessionKey)throw Error(g(\"E2E_Invalid_Key\"));var t=new Date,r=new TextEncoder(\"UTF-8\").encode(y.stringify({_id:e._id,text:e.msg,userId:this.userId,ts:t}));return this.encryptText(r)}},r.decryptContent=function(e){return i.async(function(t){for(;;)switch(t.prev=t.next){case 0:if(!(e.content&&\"rc.v1.aes-sha2\"===e.content.algorithm)){t.next=5;break}return t.next=3,i.awrap(this.decrypt(e.content.ciphertext));case 3:Object.assign(e,t.sent);case 5:return t.abrupt(\"return\",e);case 6:case\"end\":return t.stop()}},null,this,null,Promise)},r.decryptMessage=function(e){var t;return i.async(function(r){for(;;)switch(r.prev=r.next){case 0:if(!(\"e2e\"!==e.t||\"done\"===e.e2e)){r.next=2;break}return r.abrupt(\"return\",e);case 2:if(!e.msg){r.next=7;break}return r.next=5,i.awrap(this.decrypt(e.msg));case 5:null!=(t=r.sent)&&t.text&&(e.msg=t.text);case 7:return r.next=9,i.awrap(this.decryptContent(e));case 9:return e=r.sent,r.abrupt(\"return\",o(o({},e),{},{e2e:\"done\"}));case 11:case\"end\":return r.stop()}},null,this,null,Promise)},r.doDecrypt=function(e,t,r){var n;return i.async(function(s){for(;;)switch(s.prev=s.next){case 0:return s.next=2,i.awrap(T(e,t,r));case 2:return n=s.sent,s.abrupt(\"return\",y.parse(new TextDecoder(\"UTF-8\").decode(new Uint8Array(n))));case 4:case\"end\":return s.stop()}},null,null,null,Promise)},r.decrypt=function(e){var t,r,n,a,o,c,u,p;return i.async(function(l){for(;;)switch(l.prev=l.next){case 0:if(t=e.slice(0,12),e=e.slice(12),r=R(h.decode(e)),a=(n=s(r,2))[0],o=n[1],c=\"\",!(t!==this.keyID)){l.next=18;break}if(p=null===(u=this.oldKeys)||void 0===u?void 0:u.find(function(e){return e.e2eKeyId===t})){l.next=17;break}return l.prev=7,l.next=10,i.awrap(this.doDecrypt(a,this.groupSessionKey,o));case 10:return l.abrupt(\"return\",l.sent);case 13:return l.prev=13,l.t0=l.catch(7),this.error(\"Error decrypting message: \",l.t0,e),l.abrupt(\"return\",{msg:g(\"E2E_indecipherable\")});case 17:c=p.E2EKey;case 18:return l.prev=18,l.next=21,i.awrap(this.doDecrypt(a,c||this.groupSessionKey,o));case 21:return l.abrupt(\"return\",l.sent);case 24:return l.prev=24,l.t1=l.catch(18),this.error(\"Error decrypting message: \",l.t1,e),l.abrupt(\"return\",{msg:g(\"E2E_Key_Error\")});case 28:case\"end\":return l.stop()}},null,this,[[7,13],[18,24]],Promise)},r.provideKeyToUser=function(e){this.keyID===e&&(this.encryptKeyForOtherParticipants(),this.setState(k.READY))},r.onStateChange=function(e){var t=this;return this.on(\"STATE_CHANGED\",e),function(){return t.off(\"STATE_CHANGED\",e)}},r.encryptGroupKeyForParticipantsWaitingForTheKeys=function(e){var t,r,n,s=this;return i.async(function(a){for(;;)switch(a.prev=a.next){case 0:if(this.isReady()){a.next=2;break}return a.abrupt(\"return\");case 2:return t=v.findOne({rid:this.roomId}),a.next=5,i.awrap(this.exportOldRoomKeys(null==t?void 0:t.oldRoomKeys));case 5:return r=a.sent,a.next=8,i.awrap(Promise.all(e.map(function e(e){var t,n,a,c;return i.async(function u(u){for(;;)switch(u.prev=u.next){case 0:return t=e._id,n=e.public_key,u.next=3,i.awrap(s.encryptGroupKeyForParticipant(n));case 3:return a=u.sent,u.next=6,i.awrap(s.encryptOldKeysForParticipant(n,r));case 6:return c=u.sent,u.abrupt(\"return\",o({_id:t,key:a},c&&{oldKeys:c}));case 8:case\"end\":return u.stop()}},null,null,null,Promise)})));case 8:return n=a.sent,a.abrupt(\"return\",n);case 10:case\"end\":return a.stop()}},null,this,null,Promise)},c(t,[{key:\"keyID\",get:function(){return this[L]},set:function(e){this[L]=e}}])}(l)}","map":"{\"version\":3,\"sources\":[\"app/e2e/client/rocketchat.e2e.room.js\",\"<anon>\"],\"sourcesContent\":[\"import { Base64 } from '@rocket.chat/base64';\\nimport { Emitter } from '@rocket.chat/emitter';\\nimport EJSON from 'ejson';\\n\\nimport { RoomManager } from '../../../client/lib/RoomManager';\\nimport { roomCoordinator } from '../../../client/lib/rooms/roomCoordinator';\\nimport { RoomSettingsEnum } from '../../../definition/IRoomTypeConfig';\\nimport { ChatRoom, Subscriptions, Messages } from '../../models/client';\\nimport { sdk } from '../../utils/client/lib/SDKClient';\\nimport { t } from '../../utils/lib/i18n';\\nimport { E2ERoomState } from './E2ERoomState';\\nimport {\\n\\ttoString,\\n\\ttoArrayBuffer,\\n\\tjoinVectorAndEcryptedData,\\n\\tsplitVectorAndEcryptedData,\\n\\tencryptRSA,\\n\\tencryptAES,\\n\\tdecryptRSA,\\n\\tdecryptAES,\\n\\tgenerateAESKey,\\n\\texportJWKKey,\\n\\timportAESKey,\\n\\timportRSAKey,\\n\\treadFileAsArrayBuffer,\\n\\tencryptAESCTR,\\n\\tgenerateAESCTRKey,\\n\\tsha256HashFromArrayBuffer,\\n\\tcreateSha256HashFromText,\\n} from './helper';\\nimport { log, logError } from './logger';\\nimport { e2e } from './rocketchat.e2e';\\n\\nconst KEY_ID = Symbol('keyID');\\nconst PAUSED = Symbol('PAUSED');\\n\\nconst permitedMutations = {\\n\\t[E2ERoomState.NOT_STARTED]: [E2ERoomState.ESTABLISHING, E2ERoomState.DISABLED, E2ERoomState.KEYS_RECEIVED],\\n\\t[E2ERoomState.READY]: [E2ERoomState.DISABLED, E2ERoomState.CREATING_KEYS, E2ERoomState.WAITING_KEYS],\\n\\t[E2ERoomState.ERROR]: [E2ERoomState.KEYS_RECEIVED, E2ERoomState.NOT_STARTED],\\n\\t[E2ERoomState.WAITING_KEYS]: [E2ERoomState.KEYS_RECEIVED, E2ERoomState.ERROR, E2ERoomState.DISABLED],\\n\\t[E2ERoomState.ESTABLISHING]: [\\n\\t\\tE2ERoomState.READY,\\n\\t\\tE2ERoomState.KEYS_RECEIVED,\\n\\t\\tE2ERoomState.ERROR,\\n\\t\\tE2ERoomState.DISABLED,\\n\\t\\tE2ERoomState.WAITING_KEYS,\\n\\t\\tE2ERoomState.CREATING_KEYS,\\n\\t],\\n};\\n\\nconst filterMutation = (currentState, nextState) => {\\n\\tif (currentState === nextState) {\\n\\t\\treturn nextState === E2ERoomState.ERROR;\\n\\t}\\n\\n\\tif (!(currentState in permitedMutations)) {\\n\\t\\treturn nextState;\\n\\t}\\n\\n\\tif (permitedMutations[currentState].includes(nextState)) {\\n\\t\\treturn nextState;\\n\\t}\\n\\n\\treturn false;\\n};\\n\\nexport class E2ERoom extends Emitter {\\n\\tstate = undefined;\\n\\n\\t[PAUSED] = undefined;\\n\\n\\tconstructor(userId, room) {\\n\\t\\tsuper();\\n\\n\\t\\tthis.userId = userId;\\n\\t\\tthis.roomId = room._id;\\n\\t\\tthis.typeOfRoom = room.t;\\n\\t\\tthis.roomKeyId = room.e2eKeyId;\\n\\n\\t\\tthis.once(E2ERoomState.READY, async () => {\\n\\t\\t\\tawait this.decryptOldRoomKeys();\\n\\t\\t\\treturn this.decryptPendingMessages();\\n\\t\\t});\\n\\t\\tthis.once(E2ERoomState.READY, () => this.decryptSubscription());\\n\\t\\tthis.on('STATE_CHANGED', (prev) => {\\n\\t\\t\\tif (this.roomId === RoomManager.opened) {\\n\\t\\t\\t\\tthis.log(`[PREV: ${prev}]`, 'State CHANGED');\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\tthis.on('STATE_CHANGED', () => this.handshake());\\n\\n\\t\\tthis.setState(E2ERoomState.NOT_STARTED);\\n\\t}\\n\\n\\tlog(...msg) {\\n\\t\\tlog(`E2E ROOM { state: ${this.state}, rid: ${this.roomId} }`, ...msg);\\n\\t}\\n\\n\\terror(...msg) {\\n\\t\\tlogError(`E2E ROOM { state: ${this.state}, rid: ${this.roomId} }`, ...msg);\\n\\t}\\n\\n\\thasSessionKey() {\\n\\t\\treturn !!this.groupSessionKey;\\n\\t}\\n\\n\\tgetState() {\\n\\t\\treturn this.state;\\n\\t}\\n\\n\\tsetState(requestedState) {\\n\\t\\tconst currentState = this.state;\\n\\t\\tconst nextState = filterMutation(currentState, requestedState);\\n\\n\\t\\tif (!nextState) {\\n\\t\\t\\tthis.error(`invalid state ${currentState} -> ${requestedState}`);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.state = nextState;\\n\\t\\tthis.log(currentState, '->', nextState);\\n\\t\\tthis.emit('STATE_CHANGED', currentState, nextState, this);\\n\\t\\tthis.emit(nextState, this);\\n\\t}\\n\\n\\tisReady() {\\n\\t\\treturn this.state === E2ERoomState.READY;\\n\\t}\\n\\n\\tisDisabled() {\\n\\t\\treturn this.state === E2ERoomState.DISABLED;\\n\\t}\\n\\n\\tenable() {\\n\\t\\tif (this.state === E2ERoomState.READY) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.setState(E2ERoomState.READY);\\n\\t}\\n\\n\\tdisable() {\\n\\t\\tthis.setState(E2ERoomState.DISABLED);\\n\\t}\\n\\n\\tpause() {\\n\\t\\tthis.log('PAUSED', this[PAUSED], '->', true);\\n\\t\\tthis[PAUSED] = true;\\n\\t\\tthis.emit('PAUSED', true);\\n\\t}\\n\\n\\tresume() {\\n\\t\\tthis.log('PAUSED', this[PAUSED], '->', false);\\n\\t\\tthis[PAUSED] = false;\\n\\t\\tthis.emit('PAUSED', false);\\n\\t}\\n\\n\\tkeyReceived() {\\n\\t\\tthis.setState(E2ERoomState.KEYS_RECEIVED);\\n\\t}\\n\\n\\tasync shouldConvertSentMessages(message) {\\n\\t\\tif (!this.isReady() || this[PAUSED]) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tif (this[PAUSED] === undefined) {\\n\\t\\t\\treturn new Promise((resolve) => {\\n\\t\\t\\t\\tthis.once('PAUSED', resolve);\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tif (message.msg[0] === '/') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\tshouldConvertReceivedMessages() {\\n\\t\\treturn this.isReady();\\n\\t}\\n\\n\\tisWaitingKeys() {\\n\\t\\treturn this.state === E2ERoomState.WAITING_KEYS;\\n\\t}\\n\\n\\tget keyID() {\\n\\t\\treturn this[KEY_ID];\\n\\t}\\n\\n\\tset keyID(keyID) {\\n\\t\\tthis[KEY_ID] = keyID;\\n\\t}\\n\\n\\tasync decryptSubscription() {\\n\\t\\tconst subscription = Subscriptions.findOne({ rid: this.roomId });\\n\\n\\t\\tif (subscription.lastMessage?.t !== 'e2e') {\\n\\t\\t\\tthis.log('decryptSubscriptions nothing to do');\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst message = await this.decryptMessage(subscription.lastMessage);\\n\\n\\t\\tSubscriptions.update(\\n\\t\\t\\t{\\n\\t\\t\\t\\t_id: subscription._id,\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t$set: {\\n\\t\\t\\t\\t\\tlastMessage: message,\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t);\\n\\t\\tthis.log('decryptSubscriptions Done');\\n\\t}\\n\\n\\tasync decryptOldRoomKeys() {\\n\\t\\tconst sub = Subscriptions.findOne({ rid: this.roomId });\\n\\n\\t\\tif (!sub?.oldRoomKeys || sub?.oldRoomKeys.length === 0) {\\n\\t\\t\\tthis.log('decryptOldRoomKeys nothing to do');\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst keys = [];\\n\\t\\tfor await (const key of sub.oldRoomKeys) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tconst k = await this.decryptSessionKey(key.E2EKey);\\n\\t\\t\\t\\tkeys.push({\\n\\t\\t\\t\\t\\t...key,\\n\\t\\t\\t\\t\\tE2EKey: k,\\n\\t\\t\\t\\t});\\n\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\tthis.error(\\n\\t\\t\\t\\t\\t`Cannot decrypt old room key with id ${key.e2eKeyId}. This is likely because user private key changed or is missing. Skipping`,\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\tkeys.push({ ...key, E2EKey: null });\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthis.oldKeys = keys;\\n\\t\\tthis.log('decryptOldRoomKeys Done');\\n\\t}\\n\\n\\tasync exportOldRoomKeys(oldKeys) {\\n\\t\\tthis.log('exportOldRoomKeys starting');\\n\\t\\tif (!oldKeys || oldKeys.length === 0) {\\n\\t\\t\\tthis.log('exportOldRoomKeys nothing to do');\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst keys = [];\\n\\t\\tfor await (const key of oldKeys) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif (!key.E2EKey) {\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tconst k = await this.exportSessionKey(key.E2EKey);\\n\\t\\t\\t\\tkeys.push({\\n\\t\\t\\t\\t\\t...key,\\n\\t\\t\\t\\t\\tE2EKey: k,\\n\\t\\t\\t\\t});\\n\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\tthis.error(\\n\\t\\t\\t\\t\\t`Cannot decrypt old room key with id ${key.e2eKeyId}. This is likely because user private key changed or is missing. Skipping`,\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthis.log(`exportOldRoomKeys Done: ${keys.length} keys exported`);\\n\\t\\treturn keys;\\n\\t}\\n\\n\\tasync decryptPendingMessages() {\\n\\t\\treturn Messages.find({ rid: this.roomId, t: 'e2e', e2e: 'pending' }).forEach(async ({ _id, ...msg }) => {\\n\\t\\t\\tMessages.update({ _id }, await this.decryptMessage(msg));\\n\\t\\t});\\n\\t}\\n\\n\\t// Initiates E2E Encryption\\n\\tasync handshake() {\\n\\t\\tif (!e2e.isReady()) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (this.state !== E2ERoomState.KEYS_RECEIVED && this.state !== E2ERoomState.NOT_STARTED) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.setState(E2ERoomState.ESTABLISHING);\\n\\n\\t\\ttry {\\n\\t\\t\\tconst groupKey = Subscriptions.findOne({ rid: this.roomId }).E2EKey;\\n\\t\\t\\tif (groupKey) {\\n\\t\\t\\t\\tawait this.importGroupKey(groupKey);\\n\\t\\t\\t\\tthis.setState(E2ERoomState.READY);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.setState(E2ERoomState.ERROR);\\n\\t\\t\\tthis.error('Error fetching group key: ', error);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tconst room = ChatRoom.findOne({ _id: this.roomId });\\n\\t\\t\\t// Only room creator can set keys for room\\n\\t\\t\\tif (!room.e2eKeyId && this.userShouldCreateKeys(room)) {\\n\\t\\t\\t\\tthis.setState(E2ERoomState.CREATING_KEYS);\\n\\t\\t\\t\\tawait this.createGroupKey();\\n\\t\\t\\t\\tthis.setState(E2ERoomState.READY);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.setState(E2ERoomState.WAITING_KEYS);\\n\\t\\t\\tthis.log('Requesting room key');\\n\\t\\t\\tsdk.publish('notify-room-users', [`${this.roomId}/e2ekeyRequest`, this.roomId, room.e2eKeyId]);\\n\\t\\t} catch (error) {\\n\\t\\t\\t// this.error = error;\\n\\t\\t\\tthis.setState(E2ERoomState.ERROR);\\n\\t\\t}\\n\\t}\\n\\n\\tuserShouldCreateKeys(room) {\\n\\t\\t// On DMs, we'll allow any user to set the keys\\n\\t\\tif (room.t === 'd') {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn room.u._id === this.userId;\\n\\t}\\n\\n\\tisSupportedRoomType(type) {\\n\\t\\treturn roomCoordinator.getRoomDirectives(type).allowRoomSettingChange({}, RoomSettingsEnum.E2E);\\n\\t}\\n\\n\\tasync decryptSessionKey(key) {\\n\\t\\treturn importAESKey(JSON.parse(await this.exportSessionKey(key)));\\n\\t}\\n\\n\\tasync exportSessionKey(key) {\\n\\t\\tkey = key.slice(12);\\n\\t\\tkey = Base64.decode(key);\\n\\n\\t\\tconst decryptedKey = await decryptRSA(e2e.privateKey, key);\\n\\t\\treturn toString(decryptedKey);\\n\\t}\\n\\n\\tasync importGroupKey(groupKey) {\\n\\t\\tthis.log('Importing room key ->', this.roomId);\\n\\t\\t// Get existing group key\\n\\t\\t// const keyID = groupKey.slice(0, 12);\\n\\t\\tgroupKey = groupKey.slice(12);\\n\\t\\tgroupKey = Base64.decode(groupKey);\\n\\n\\t\\t// Decrypt obtained encrypted session key\\n\\t\\ttry {\\n\\t\\t\\tconst decryptedKey = await decryptRSA(e2e.privateKey, groupKey);\\n\\t\\t\\tthis.sessionKeyExportedString = toString(decryptedKey);\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.error('Error decrypting group key: ', error);\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// When a new e2e room is created, it will be initialized without an e2e key id\\n\\t\\t// This will prevent new rooms from storing `undefined` as the keyid\\n\\t\\tif (!this.keyID) {\\n\\t\\t\\tthis.keyID = this.roomKeyId || (await createSha256HashFromText(this.sessionKeyExportedString)).slice(0, 12);\\n\\t\\t}\\n\\n\\t\\t// Import session key for use.\\n\\t\\ttry {\\n\\t\\t\\tconst key = await importAESKey(JSON.parse(this.sessionKeyExportedString));\\n\\t\\t\\t// Key has been obtained. E2E is now in session.\\n\\t\\t\\tthis.groupSessionKey = key;\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.error('Error importing group key: ', error);\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\tasync createNewGroupKey() {\\n\\t\\tthis.groupSessionKey = await generateAESKey();\\n\\n\\t\\tconst sessionKeyExported = await exportJWKKey(this.groupSessionKey);\\n\\t\\tthis.sessionKeyExportedString = JSON.stringify(sessionKeyExported);\\n\\t\\tthis.keyID = (await createSha256HashFromText(this.sessionKeyExportedString)).slice(0, 12);\\n\\t}\\n\\n\\tasync createGroupKey() {\\n\\t\\tthis.log('Creating room key');\\n\\t\\ttry {\\n\\t\\t\\tawait this.createNewGroupKey();\\n\\n\\t\\t\\tawait sdk.call('e2e.setRoomKeyID', this.roomId, this.keyID);\\n\\t\\t\\tawait sdk.rest.post('/v1/e2e.updateGroupKey', {\\n\\t\\t\\t\\trid: this.roomId,\\n\\t\\t\\t\\tuid: this.userId,\\n\\t\\t\\t\\tkey: await this.encryptGroupKeyForParticipant(e2e.publicKey),\\n\\t\\t\\t});\\n\\t\\t\\tawait this.encryptKeyForOtherParticipants();\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.error('Error exporting group key: ', error);\\n\\t\\t\\tthrow error;\\n\\t\\t}\\n\\t}\\n\\n\\tasync resetRoomKey() {\\n\\t\\tthis.log('Resetting room key');\\n\\t\\tif (!e2e.publicKey) {\\n\\t\\t\\tthis.error('Cannot reset room key. No public key found.');\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.setState(E2ERoomState.CREATING_KEYS);\\n\\t\\ttry {\\n\\t\\t\\tawait this.createNewGroupKey();\\n\\n\\t\\t\\tconst e2eNewKeys = { e2eKeyId: this.keyID, e2eKey: await this.encryptGroupKeyForParticipant(e2e.publicKey) };\\n\\n\\t\\t\\tthis.setState(E2ERoomState.READY);\\n\\t\\t\\tthis.log(`Room key reset done for room ${this.roomId}`);\\n\\n\\t\\t\\treturn e2eNewKeys;\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.error('Error resetting group key: ', error);\\n\\t\\t\\tthrow error;\\n\\t\\t}\\n\\t}\\n\\n\\tonRoomKeyReset(keyID) {\\n\\t\\tthis.log(`Room keyID was reset. New keyID: ${keyID} Previous keyID: ${this.keyID}`);\\n\\t\\tthis.setState(E2ERoomState.WAITING_KEYS);\\n\\t\\tthis.keyID = keyID;\\n\\t\\tthis.groupSessionKey = undefined;\\n\\t\\tthis.sessionKeyExportedString = undefined;\\n\\t\\tthis.sessionKeyExported = undefined;\\n\\t\\tthis.oldKeys = undefined;\\n\\t}\\n\\n\\tasync encryptKeyForOtherParticipants() {\\n\\t\\t// Encrypt generated session key for every user in room and publish to subscription model.\\n\\t\\ttry {\\n\\t\\t\\tconst mySub = Subscriptions.findOne({ rid: this.roomId });\\n\\t\\t\\tconst decryptedOldGroupKeys = await this.exportOldRoomKeys(mySub?.oldRoomKeys);\\n\\t\\t\\tconst users = (await sdk.call('e2e.getUsersOfRoomWithoutKey', this.roomId)).users.filter((user) => user?.e2e?.public_key);\\n\\n\\t\\t\\tif (!users.length) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst usersSuggestedGroupKeys = { [this.roomId]: [] };\\n\\t\\t\\tfor await (const user of users) {\\n\\t\\t\\t\\tconst encryptedGroupKey = await this.encryptGroupKeyForParticipant(user.e2e.public_key);\\n\\t\\t\\t\\tconst oldKeys = await this.encryptOldKeysForParticipant(user.e2e.public_key, decryptedOldGroupKeys);\\n\\n\\t\\t\\t\\tusersSuggestedGroupKeys[this.roomId].push({ _id: user._id, key: encryptedGroupKey, ...(oldKeys && { oldKeys }) });\\n\\t\\t\\t}\\n\\n\\t\\t\\tawait sdk.rest.post('/v1/e2e.provideUsersSuggestedGroupKeys', { usersSuggestedGroupKeys });\\n\\t\\t} catch (error) {\\n\\t\\t\\treturn this.error('Error getting room users: ', error);\\n\\t\\t}\\n\\t}\\n\\n\\tasync encryptOldKeysForParticipant(public_key, oldRoomKeys) {\\n\\t\\tif (!oldRoomKeys || oldRoomKeys.length === 0) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tlet userKey;\\n\\n\\t\\ttry {\\n\\t\\t\\tuserKey = await importRSAKey(JSON.parse(public_key), ['encrypt']);\\n\\t\\t} catch (error) {\\n\\t\\t\\treturn this.error('Error importing user key: ', error);\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tconst keys = [];\\n\\t\\t\\tfor await (const oldRoomKey of oldRoomKeys) {\\n\\t\\t\\t\\tif (!oldRoomKey.E2EKey) {\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tconst encryptedKey = await encryptRSA(userKey, toArrayBuffer(oldRoomKey.E2EKey));\\n\\t\\t\\t\\tconst encryptedKeyToString = oldRoomKey.e2eKeyId + Base64.encode(new Uint8Array(encryptedKey));\\n\\n\\t\\t\\t\\tkeys.push({ ...oldRoomKey, E2EKey: encryptedKeyToString });\\n\\t\\t\\t}\\n\\t\\t\\treturn keys;\\n\\t\\t} catch (error) {\\n\\t\\t\\treturn this.error('Error encrypting user key: ', error);\\n\\t\\t}\\n\\t}\\n\\n\\tasync encryptGroupKeyForParticipant(public_key) {\\n\\t\\tlet userKey;\\n\\t\\ttry {\\n\\t\\t\\tuserKey = await importRSAKey(JSON.parse(public_key), ['encrypt']);\\n\\t\\t} catch (error) {\\n\\t\\t\\treturn this.error('Error importing user key: ', error);\\n\\t\\t}\\n\\t\\t// const vector = crypto.getRandomValues(new Uint8Array(16));\\n\\n\\t\\t// Encrypt session key for this user with his/her public key\\n\\t\\ttry {\\n\\t\\t\\tconst encryptedUserKey = await encryptRSA(userKey, toArrayBuffer(this.sessionKeyExportedString));\\n\\t\\t\\tconst encryptedUserKeyToString = this.keyID + Base64.encode(new Uint8Array(encryptedUserKey));\\n\\t\\t\\treturn encryptedUserKeyToString;\\n\\t\\t} catch (error) {\\n\\t\\t\\treturn this.error('Error encrypting user key: ', error);\\n\\t\\t}\\n\\t}\\n\\n\\t// Encrypts files before upload. I/O is in arraybuffers.\\n\\tasync encryptFile(file) {\\n\\t\\t// if (!this.isSupportedRoomType(this.typeOfRoom)) {\\n\\t\\t// \\treturn;\\n\\t\\t// }\\n\\n\\t\\tconst fileArrayBuffer = await readFileAsArrayBuffer(file);\\n\\n\\t\\tconst hash = await sha256HashFromArrayBuffer(new Uint8Array(fileArrayBuffer));\\n\\n\\t\\tconst vector = crypto.getRandomValues(new Uint8Array(16));\\n\\t\\tconst key = await generateAESCTRKey();\\n\\t\\tlet result;\\n\\t\\ttry {\\n\\t\\t\\tresult = await encryptAESCTR(vector, key, fileArrayBuffer);\\n\\t\\t} catch (error) {\\n\\t\\t\\tconsole.log(error);\\n\\t\\t\\treturn this.error('Error encrypting group key: ', error);\\n\\t\\t}\\n\\n\\t\\tconst exportedKey = await window.crypto.subtle.exportKey('jwk', key);\\n\\n\\t\\tconst fileName = await createSha256HashFromText(file.name);\\n\\n\\t\\tconst encryptedFile = new File([toArrayBuffer(result)], fileName);\\n\\n\\t\\treturn {\\n\\t\\t\\tfile: encryptedFile,\\n\\t\\t\\tkey: exportedKey,\\n\\t\\t\\tiv: Base64.encode(vector),\\n\\t\\t\\ttype: file.type,\\n\\t\\t\\thash,\\n\\t\\t};\\n\\t}\\n\\n\\t// Decrypt uploaded encrypted files. I/O is in arraybuffers.\\n\\tasync decryptFile(file, key, iv) {\\n\\t\\tconst ivArray = Base64.decode(iv);\\n\\t\\tconst cryptoKey = await window.crypto.subtle.importKey('jwk', key, { name: 'AES-CTR' }, true, ['encrypt', 'decrypt']);\\n\\n\\t\\treturn window.crypto.subtle.decrypt({ name: 'AES-CTR', counter: ivArray, length: 64 }, cryptoKey, file);\\n\\t}\\n\\n\\t// Encrypts messages\\n\\tasync encryptText(data) {\\n\\t\\tconst vector = crypto.getRandomValues(new Uint8Array(16));\\n\\n\\t\\ttry {\\n\\t\\t\\tconst result = await encryptAES(vector, this.groupSessionKey, data);\\n\\t\\t\\treturn this.keyID + Base64.encode(joinVectorAndEcryptedData(vector, result));\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.error('Error encrypting message: ', error);\\n\\t\\t\\tthrow error;\\n\\t\\t}\\n\\t}\\n\\n\\t// Helper function for encryption of content\\n\\tasync encryptMessageContent(contentToBeEncrypted) {\\n\\t\\tconst data = new TextEncoder().encode(EJSON.stringify(contentToBeEncrypted));\\n\\n\\t\\treturn {\\n\\t\\t\\talgorithm: 'rc.v1.aes-sha2',\\n\\t\\t\\tciphertext: await this.encryptText(data),\\n\\t\\t};\\n\\t}\\n\\n\\t// Helper function for encryption of content\\n\\tasync encryptMessage(message) {\\n\\t\\tconst { msg, attachments, ...rest } = message;\\n\\n\\t\\tconst content = await this.encryptMessageContent({ msg, attachments });\\n\\n\\t\\treturn {\\n\\t\\t\\t...rest,\\n\\t\\t\\tcontent,\\n\\t\\t\\tt: 'e2e',\\n\\t\\t\\te2e: 'pending',\\n\\t\\t};\\n\\t}\\n\\n\\t// Helper function for encryption of messages\\n\\tencrypt(message) {\\n\\t\\tif (!this.isSupportedRoomType(this.typeOfRoom)) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (!this.groupSessionKey) {\\n\\t\\t\\tthrow new Error(t('E2E_Invalid_Key'));\\n\\t\\t}\\n\\n\\t\\tconst ts = new Date();\\n\\n\\t\\tconst data = new TextEncoder('UTF-8').encode(\\n\\t\\t\\tEJSON.stringify({\\n\\t\\t\\t\\t_id: message._id,\\n\\t\\t\\t\\ttext: message.msg,\\n\\t\\t\\t\\tuserId: this.userId,\\n\\t\\t\\t\\tts,\\n\\t\\t\\t}),\\n\\t\\t);\\n\\n\\t\\treturn this.encryptText(data);\\n\\t}\\n\\n\\tasync decryptContent(data) {\\n\\t\\tif (data.content && data.content.algorithm === 'rc.v1.aes-sha2') {\\n\\t\\t\\tconst content = await this.decrypt(data.content.ciphertext);\\n\\t\\t\\tObject.assign(data, content);\\n\\t\\t}\\n\\n\\t\\treturn data;\\n\\t}\\n\\n\\t// Decrypt messages\\n\\tasync decryptMessage(message) {\\n\\t\\tif (message.t !== 'e2e' || message.e2e === 'done') {\\n\\t\\t\\treturn message;\\n\\t\\t}\\n\\n\\t\\tif (message.msg) {\\n\\t\\t\\tconst data = await this.decrypt(message.msg);\\n\\n\\t\\t\\tif (data?.text) {\\n\\t\\t\\t\\tmessage.msg = data.text;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tmessage = await this.decryptContent(message);\\n\\n\\t\\treturn {\\n\\t\\t\\t...message,\\n\\t\\t\\te2e: 'done',\\n\\t\\t};\\n\\t}\\n\\n\\tasync doDecrypt(vector, key, cipherText) {\\n\\t\\tconst result = await decryptAES(vector, key, cipherText);\\n\\t\\treturn EJSON.parse(new TextDecoder('UTF-8').decode(new Uint8Array(result)));\\n\\t}\\n\\n\\tasync decrypt(message) {\\n\\t\\tconst keyID = message.slice(0, 12);\\n\\t\\tmessage = message.slice(12);\\n\\n\\t\\tconst [vector, cipherText] = splitVectorAndEcryptedData(Base64.decode(message));\\n\\n\\t\\tlet oldKey = '';\\n\\t\\tif (keyID !== this.keyID) {\\n\\t\\t\\tconst oldRoomKey = this.oldKeys?.find((key) => key.e2eKeyId === keyID);\\n\\t\\t\\t// Messages already contain a keyID stored with them\\n\\t\\t\\t// That means that if we cannot find a keyID for the key the message has preppended to\\n\\t\\t\\t// The message is indecipherable.\\n\\t\\t\\t// In these cases, we'll give a last shot using the current session key, which may not work\\n\\t\\t\\t// but will be enough to help with some mobile issues.\\n\\t\\t\\tif (!oldRoomKey) {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\treturn await this.doDecrypt(vector, this.groupSessionKey, cipherText);\\n\\t\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\t\\tthis.error('Error decrypting message: ', error, message);\\n\\t\\t\\t\\t\\treturn { msg: t('E2E_indecipherable') };\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\toldKey = oldRoomKey.E2EKey;\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\treturn await this.doDecrypt(vector, oldKey || this.groupSessionKey, cipherText);\\n\\t\\t} catch (error) {\\n\\t\\t\\tthis.error('Error decrypting message: ', error, message);\\n\\t\\t\\treturn { msg: t('E2E_Key_Error') };\\n\\t\\t}\\n\\t}\\n\\n\\tprovideKeyToUser(keyId) {\\n\\t\\tif (this.keyID !== keyId) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.encryptKeyForOtherParticipants();\\n\\t\\tthis.setState(E2ERoomState.READY);\\n\\t}\\n\\n\\tonStateChange(cb) {\\n\\t\\tthis.on('STATE_CHANGED', cb);\\n\\t\\treturn () => this.off('STATE_CHANGED', cb);\\n\\t}\\n\\n\\tasync encryptGroupKeyForParticipantsWaitingForTheKeys(users) {\\n\\t\\tif (!this.isReady()) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst mySub = Subscriptions.findOne({ rid: this.roomId });\\n\\t\\tconst decryptedOldGroupKeys = await this.exportOldRoomKeys(mySub?.oldRoomKeys);\\n\\t\\tconst usersWithKeys = await Promise.all(\\n\\t\\t\\tusers.map(async (user) => {\\n\\t\\t\\t\\tconst { _id, public_key } = user;\\n\\t\\t\\t\\tconst key = await this.encryptGroupKeyForParticipant(public_key);\\n\\t\\t\\t\\tconst oldKeys = await this.encryptOldKeysForParticipant(public_key, decryptedOldGroupKeys);\\n\\t\\t\\t\\treturn { _id, key, ...(oldKeys && { oldKeys }) };\\n\\t\\t\\t}),\\n\\t\\t);\\n\\n\\t\\treturn usersWithKeys;\\n\\t}\\n}\\n\",null],\"names\":[\"_slicedToArray\",\"_objectWithoutProperties\",\"_regeneratorRuntime\",\"_objectSpread\",\"_createClass\",\"_inheritsLoose\",\"_asyncIterator\",\"Base64\",\"Emitter\",\"EJSON\",\"RoomManager\",\"roomCoordinator\",\"RoomSettingsEnum\",\"ChatRoom\",\"Subscriptions\",\"Messages\",\"sdk\",\"t\",\"E2ERoomState\",\"toString\",\"toArrayBuffer\",\"joinVectorAndEcryptedData\",\"splitVectorAndEcryptedData\",\"encryptRSA\",\"encryptAES\",\"decryptRSA\",\"decryptAES\",\"generateAESKey\",\"exportJWKKey\",\"importAESKey\",\"importRSAKey\",\"readFileAsArrayBuffer\",\"encryptAESCTR\",\"generateAESCTRKey\",\"sha256HashFromArrayBuffer\",\"createSha256HashFromText\",\"log\",\"logError\",\"e2e\",\"module\",\"link\",\"default\",\"v\",\"export\",\"E2ERoom\",\"KEY_ID\",\"Symbol\",\"PAUSED\",\"permitedMutations\",\"_permitedMutations\",\"NOT_STARTED\",\"ESTABLISHING\",\"DISABLED\",\"KEYS_RECEIVED\",\"READY\",\"CREATING_KEYS\",\"WAITING_KEYS\",\"ERROR\",\"_Emitter\",\"userId\",\"room\",\"_this\",\"call\",\"state\",\"undefined\",\"roomId\",\"_id\",\"typeOfRoom\",\"roomKeyId\",\"e2eKeyId\",\"once\",\"async\",\"_context\",\"prev\",\"next\",\"awrap\",\"decryptOldRoomKeys\",\"abrupt\",\"decryptPendingMessages\",\"stop\",\"Promise\",\"decryptSubscription\",\"on\",\"opened\",\"handshake\",\"setState\",\"_proto\",\"prototype\",\"_len\",\"arguments\",\"length\",\"msg\",\"Array\",\"_key\",\"apply\",\"concat\",\"error\",\"_len2\",\"_key2\",\"hasSessionKey\",\"groupSessionKey\",\"getState\",\"requestedState\",\"currentState\",\"nextState\",\"includes\",\"emit\",\"isReady\",\"isDisabled\",\"enable\",\"disable\",\"pause\",\"resume\",\"keyReceived\",\"shouldConvertSentMessages\",\"message\",\"_this2\",\"_context2\",\"resolve\",\"shouldConvertReceivedMessages\",\"isWaitingKeys\",\"_subscription$lastMes\",\"subscription\",\"_context3\",\"findOne\",\"rid\",\"lastMessage\",\"decryptMessage\",\"sent\",\"update\",\"$set\",\"sub\",\"keys\",\"_iteratorAbruptCompletion\",\"_didIteratorError\",\"_iteratorError\",\"_iterator\",\"_step\",\"key\",\"k\",\"_context4\",\"oldRoomKeys\",\"done\",\"value\",\"decryptSessionKey\",\"E2EKey\",\"push\",\"t0\",\"t1\",\"return\",\"finish\",\"oldKeys\",\"exportOldRoomKeys\",\"_iteratorAbruptCompletion2\",\"_didIteratorError2\",\"_iteratorError2\",\"_iterator2\",\"_step2\",\"_context5\",\"exportSessionKey\",\"_this3\",\"_context7\",\"find\",\"forEach\",\"_callee2\",\"_ref\",\"_callee2$\",\"_context6\",\"_excluded\",\"t2\",\"groupKey\",\"_context8\",\"importGroupKey\",\"userShouldCreateKeys\",\"createGroupKey\",\"publish\",\"u\",\"isSupportedRoomType\",\"type\",\"getRoomDirectives\",\"allowRoomSettingChange\",\"E2E\",\"_context9\",\"JSON\",\"t3\",\"parse\",\"decryptedKey\",\"_context10\",\"slice\",\"decode\",\"privateKey\",\"_context11\",\"sessionKeyExportedString\",\"keyID\",\"createNewGroupKey\",\"sessionKeyExported\",\"_context12\",\"stringify\",\"_context13\",\"rest\",\"encryptGroupKeyForParticipant\",\"publicKey\",\"t4\",\"t5\",\"uid\",\"t6\",\"post\",\"encryptKeyForOtherParticipants\",\"t7\",\"resetRoomKey\",\"e2eNewKeys\",\"_context14\",\"e2eKey\",\"onRoomKeyReset\",\"_usersSuggestedGroupK\",\"mySub\",\"decryptedOldGroupKeys\",\"users\",\"usersSuggestedGroupKeys\",\"_iteratorAbruptCompletion3\",\"_didIteratorError3\",\"_iteratorError3\",\"_iterator3\",\"_step3\",\"user\",\"encryptedGroupKey\",\"_context15\",\"filter\",\"_user$e2e\",\"public_key\",\"encryptOldKeysForParticipant\",\"userKey\",\"_iteratorAbruptCompletion4\",\"_didIteratorError4\",\"_iteratorError4\",\"_iterator4\",\"_step4\",\"oldRoomKey\",\"encryptedKey\",\"encryptedKeyToString\",\"_context16\",\"encode\",\"Uint8Array\",\"encryptedUserKey\",\"encryptedUserKeyToString\",\"_context17\",\"encryptFile\",\"file\",\"fileArrayBuffer\",\"hash\",\"vector\",\"result\",\"exportedKey\",\"fileName\",\"encryptedFile\",\"_context18\",\"crypto\",\"getRandomValues\",\"console\",\"window\",\"subtle\",\"exportKey\",\"name\",\"File\",\"iv\",\"decryptFile\",\"ivArray\",\"cryptoKey\",\"_context19\",\"importKey\",\"decrypt\",\"counter\",\"encryptText\",\"data\",\"_context20\",\"encryptMessageContent\",\"contentToBeEncrypted\",\"_context21\",\"TextEncoder\",\"algorithm\",\"ciphertext\",\"encryptMessage\",\"attachments\",\"content\",\"_context22\",\"_excluded2\",\"encrypt\",\"Error\",\"ts\",\"Date\",\"text\",\"decryptContent\",\"_context23\",\"Object\",\"assign\",\"_context24\",\"doDecrypt\",\"cipherText\",\"_context25\",\"TextDecoder\",\"_splitVectorAndEcrypt\",\"_splitVectorAndEcrypt2\",\"oldKey\",\"_this$oldKeys\",\"_context26\",\"provideKeyToUser\",\"keyId\",\"onStateChange\",\"cb\",\"_this4\",\"off\",\"encryptGroupKeyForParticipantsWaitingForTheKeys\",\"usersWithKeys\",\"_this5\",\"_context28\",\"all\",\"map\",\"_callee3\",\"_callee3$\",\"_context27\",\"get\",\"set\"],\"mappings\":\"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\"}"}