{"code":"Package[\"core-runtime\"].queue(\"accounts-google\",function(){var e=Package.meteor.Meteor;Package.meteor.global,Package.meteor.meteorEnv;var o=Package[\"accounts-base\"].Accounts,t=Package[\"google-oauth\"].Google,n=Package.modules.meteorInstall;return Package.promise.Promise,{require:n({node_modules:{meteor:{\"accounts-google\":{\"notice.js\":function e(){!Package[\"accounts-ui\"]||Package[\"service-configuration\"]||Object.prototype.hasOwnProperty.call(Package,\"google-config-ui\")||console.warn(\"Note: You're using accounts-ui and accounts-google,\\nbut didn't install the configuration UI for the Google\\nOAuth. You can install it with:\\n\\n    meteor add google-config-ui\\n\")},\"google.js\":function n(n,a,i){let r;i.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){r=e}},0),o.oauth.registerService(\"google\"),e.isClient?(o.registerClientLoginFunction(\"google\",(n,a)=>{if(a||\"function\"!=typeof n||(a=n,n=null),e.isCordova&&t.signIn){t.signIn(n,a);return}\"string\"==typeof o._options.restrictCreationByEmailDomain&&((n=r({},n)).loginUrlParameters=r({},n.loginUrlParameters),n.loginUrlParameters.hd=o._options.restrictCreationByEmailDomain);let i=o.oauth.credentialRequestCompleteHandler(a);t.requestCredential(n,i)}),e.loginWithGoogle=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return o.applyLoginFunction(\"google\",t)}):o.addAutopublishFields({forLoggedInUser:t.whitelistedFields.concat([\"accessToken\",\"expiresAt\"]).map(e=>\"services.google.\".concat(e)),forOtherUsers:t.whitelistedFields.filter(e=>\"email\"!==e&&\"verified_email\"!==e).map(e=>\"services.google.\".concat(e))})}}}}},{extensions:[\".js\",\".json\"]}),eagerModulePaths:[\"/node_modules/meteor/accounts-google/notice.js\",\"/node_modules/meteor/accounts-google/google.js\"]}});","map":"{\"version\":3,\"sources\":[\"packages/accounts-google/notice.js\",\"packages/accounts-google/google.js\",\"<anon>\"],\"sourcesContent\":[\"if (Package['accounts-ui']\\n    && !Package['service-configuration']\\n    && !Object.prototype.hasOwnProperty.call(Package, 'google-config-ui')) {\\n  console.warn(\\n    \\\"Note: You're using accounts-ui and accounts-google,\\\\n\\\" +\\n    \\\"but didn't install the configuration UI for the Google\\\\n\\\" +\\n    \\\"OAuth. You can install it with:\\\\n\\\" +\\n    \\\"\\\\n\\\" +\\n    \\\"    meteor add google-config-ui\\\" +\\n    \\\"\\\\n\\\"\\n  );\\n}\\n\",\"Accounts.oauth.registerService('google');\\n\\nif (Meteor.isClient) {\\n  const loginWithGoogle = (options, callback) => {\\n    // support a callback without options\\n    if (! callback && typeof options === \\\"function\\\") {\\n      callback = options;\\n      options = null;\\n    }\\n\\n    if (Meteor.isCordova &&\\n        Google.signIn) {\\n      // After 20 April 2017, Google OAuth login will no longer work from\\n      // a WebView, so Cordova apps must use Google Sign-In instead.\\n      // https://github.com/meteor/meteor/issues/8253\\n      Google.signIn(options, callback);\\n      return;\\n    }\\n\\n    // Use Google's domain-specific login page if we want to restrict creation to\\n    // a particular email domain. (Don't use it if restrictCreationByEmailDomain\\n    // is a function.) Note that all this does is change Google's UI ---\\n    // accounts-base/accounts_server.js still checks server-side that the server\\n    // has the proper email address after the OAuth conversation.\\n    if (typeof Accounts._options.restrictCreationByEmailDomain === 'string') {\\n      options = { ...options };\\n      options.loginUrlParameters = { ...options.loginUrlParameters };\\n      options.loginUrlParameters.hd = Accounts._options.restrictCreationByEmailDomain;\\n    }\\n    const credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\\n    Google.requestCredential(options, credentialRequestCompleteCallback);\\n  };\\n  Accounts.registerClientLoginFunction('google', loginWithGoogle);\\n  Meteor.loginWithGoogle = \\n    (...args) => Accounts.applyLoginFunction('google', args);\\n} else {\\n  Accounts.addAutopublishFields({\\n    forLoggedInUser:\\n      // publish access token since it can be used from the client (if\\n      // transmitted over ssl or on\\n      // localhost). https://developers.google.com/accounts/docs/OAuth2UserAgent\\n      // refresh token probably shouldn't be sent down.\\n      Google.whitelistedFields.concat(['accessToken', 'expiresAt']).map(\\n        subfield => `services.google.${subfield}` // don't publish refresh token\\n      ), \\n\\n    forOtherUsers: \\n      // even with autopublish, no legitimate web app should be\\n      // publishing all users' emails\\n      Google.whitelistedFields.filter(\\n        field => field !== 'email' && field !== 'verified_email'\\n      ).map(\\n        subfield => `services.google.${subfield}`\\n      ),\\n  });\\n}\\n\",null],\"names\":[\"Package\",\"Object\",\"prototype\",\"hasOwnProperty\",\"call\",\"console\",\"warn\",\"_objectSpread\",\"module\",\"link\",\"default\",\"v\",\"Accounts\",\"oauth\",\"registerService\",\"Meteor\",\"isClient\",\"registerClientLoginFunction\",\"loginWithGoogle\",\"options\",\"callback\",\"isCordova\",\"Google\",\"signIn\",\"_options\",\"restrictCreationByEmailDomain\",\"loginUrlParameters\",\"hd\",\"credentialRequestCompleteCallback\",\"credentialRequestCompleteHandler\",\"requestCredential\",\"_len\",\"arguments\",\"length\",\"args\",\"Array\",\"_key\",\"applyLoginFunction\",\"addAutopublishFields\",\"forLoggedInUser\",\"whitelistedFields\",\"concat\",\"map\",\"subfield\",\"forOtherUsers\",\"filter\",\"field\"],\"mappings\":\"6VAAIA,OAAO,CAAC,cAAc,EAClBA,OAAO,CAAC,wBAAwB,EAChCC,OAAOC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,QAAS,qBACpDK,QAAQC,IAAI,CACV,oNCJJ,IAAIC,EAAcC,EAAOC,IAAI,CAAC,uCAAuC,CAACC,QAAQC,CAAC,EAAEJ,EAAcI,CAAC,CAAC,EAAE,GAAnGC,EAASC,KAAK,CAACC,eAAe,CAAC,UAE3BC,EAAOC,QAAQ,EA8BjBJ,EAASK,2BAA2B,CAAC,SA7BbC,CAACC,EAASC,KAOhC,GALMA,GAAY,AAAmB,YAAnB,OAAOD,IACvBC,EAAWD,EACXA,EAAU,MAGRJ,EAAOM,SAAS,EAChBC,EAAOC,MAAM,CAAE,CAIjBD,EAAOC,MAAM,CAACJ,EAASC,GACvB,MACF,CAO+D,UAA3D,OAAOR,EAASY,QAAQ,CAACC,6BAA6B,GAExDN,AADAA,CAAAA,EAAOZ,EAAA,CAAA,EAAQY,EAAO,EACdO,kBAAkB,CAAAnB,EAAA,CAAA,EAAQY,EAAQO,kBAAkB,EAC5DP,EAAQO,kBAAkB,CAACC,EAAE,CAAGf,EAASY,QAAQ,CAACC,6BAA6B,EAEjF,IAAMG,EAAoChB,EAASC,KAAK,CAACgB,gCAAgC,CAACT,GAC1FE,EAAOQ,iBAAiB,CAACX,EAASS,EACpC,GAEAb,EAAOG,eAAe,CACpB,WAAA,IAAA,IAAAa,EAAAC,UAAAC,MAAA,CAAIC,EAAI,AAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,CAAI,CAAAE,EAAA,CAAAJ,SAAA,CAAAI,EAAA,CAAA,OAAKxB,EAASyB,kBAAkB,CAAC,SAAUH,EAAK,GAE1DtB,EAAS0B,oBAAoB,CAAC,CAC5BC,gBAKEjB,EAAOkB,iBAAiB,CAACC,MAAM,CAAC,CAAC,cAAe,YAAY,EAAEC,GAAG,CAC/DC,GAAQ,mBAAAF,MAAA,CAAuBE,IAGnCC,cAGEtB,EAAOkB,iBAAiB,CAACK,MAAM,CAC7BC,GAASA,AAAU,UAAVA,GAAqBA,AAAU,mBAAVA,GAC9BJ,GAAG,CACHC,GAAQ,mBAAAF,MAAA,CAAuBE,GAErC\"}"}