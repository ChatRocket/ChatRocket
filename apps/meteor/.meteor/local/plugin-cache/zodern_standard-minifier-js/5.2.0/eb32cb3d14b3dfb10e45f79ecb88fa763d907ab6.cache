{"code":"function module(e,t,l){let r,i,n,o,a,c,u,s,m,d,k,E,f,g,h,p,j,v,P,y,b,w,x,C,S,T,R,I,L,D,_,B,O,A,M;l.link(\"@babel/runtime/helpers/extends\",{default(e){r=e}},0),l.link(\"@rocket.chat/fuselage\",{TextInput(e){i=e},Icon(e){n=e},Button(e){o=e},Divider(e){a=e}},0),l.link(\"@rocket.chat/fuselage-hooks\",{useMediaQuery(e){c=e},useMergedRefs(e){u=e},useOutsideClick(e){s=e}},1),l.link(\"@rocket.chat/ui-client\",{EmojiPickerCategoryHeader(e){m=e},EmojiPickerContainer(e){d=e},EmojiPickerFooter(e){k=e},EmojiPickerPreviewArea(e){E=e},EmojiPickerHeader(e){f=e},EmojiPickerListArea(e){g=e},EmojiPickerPreview(e){h=e}},2),l.link(\"@rocket.chat/ui-contexts\",{useTranslation(e){p=e},usePermission(e){j=e},useRoute(e){v=e}},3),l.link(\"react\",{default(e){P=e},useLayoutEffect(e){y=e},useState(e){b=e},useEffect(e){w=e},useRef(e){x=e}},4),l.link(\"../../../../app/emoji/client\",{emoji(e){C=e},getCategoriesList(e){S=e},getEmojisBySearchTerm(e){T=e}},5),l.link(\"../../../contexts/EmojiPickerContext\",{usePreviewEmoji(e){R=e},useEmojiPickerData(e){I=e}},6),l.link(\"../../room/hooks/useIsVisible\",{useIsVisible(e){L=e}},7),l.link(\"./CategoriesResult\",{default(e){D=e}},8),l.link(\"./EmojiPickerCategoryItem\",{default(e){_=e}},9),l.link(\"./EmojiPickerDropDown\",{default(e){B=e}},10),l.link(\"./SearchingResult\",{default(e){O=e}},11),l.link(\"./ToneSelector\",{default(e){A=e}},12),l.link(\"./ToneSelector/ToneSelectorWrapper\",{default(e){M=e}},13),l.exportDefault(e=>{let{reference:t,onClose:l,onPickEmoji:z}=e,F=p(),H=x(t),V=x([]),G=x(null),J=x(null),[K,Q]=L(),W=x(),X=u(K,W),q=S(),N=j(\"manage-emoji\"),U=v(\"emoji-custom\"),[Y,Z]=b(!1),[$,ee]=b(\"\"),[et,el]=b([]),{emojiToPreview:er,handleRemovePreview:ei}=R(),{recentEmojis:en,setCurrentCategory:eo,addRecentEmoji:ea,setRecentEmojis:ec,actualTone:eu,currentCategory:es,getEmojiListsByCategory:em,customItemsLimit:ed,setActualTone:ek,setCustomItemsLimit:eE}=I();w(()=>()=>ei(),[ei]);let ef=c(\"(width < 340px)\");s([J],l),y(()=>{if(!t)return;let e=new ResizeObserver(()=>{let e=t.getBoundingClientRect();if(0===e.width&&0===e.height){H.current=null;return}H.current=t});return e.observe(t),()=>{e.disconnect()}},[t]),w(()=>{W.current&&Q&&W.current.focus()},[Q]);let eg=e=>{var t;e.stopPropagation();let r=null===(t=e.currentTarget.dataset)||void 0===t?void 0:t.emoji;if(!r)return;let i=\"\";for(let e in C.packages)C.packages.hasOwnProperty(e)&&eu>0&&C.packages[e].toneList.hasOwnProperty(r)&&(i=\"_tone\".concat(eu));ee(\"\"),z(r+i),ea(r+i),l()};w(()=>{if(0===en.length&&\"recent\"===es){let e=em().filter(e=>{let{key:t}=e;return\"rocket\"===t});eh(e.length>0?0:1)}},[eu,en,em,es,ec]);let eh=e=>{var t;Z(!1),null===(t=G.current)||void 0===t||t.scrollToIndex({index:e})};return P.createElement(B,{reference:H,ref:J},P.createElement(d,{role:\"dialog\",\"aria-label\":F(\"Emoji_picker\"),onKeyDown:e=>{\"Escape\"===e.key&&l()}},P.createElement(f,null,P.createElement(i,{autoFocus:!0,ref:X,value:$,onChange:e=>{ee(e.target.value),eo(\"\"),Z(\"\"!==e.target.value);let t=T(e.target.value,eu,en,ec);0===t.filter(e=>e.image).length&&eo(\"no-results\"),el(t)},addon:P.createElement(n,{name:\"magnifier\",size:\"x20\"}),placeholder:F(\"Search\"),\"aria-label\":F(\"Search\")})),P.createElement(m,r({role:\"tablist\"},ef&&{style:{overflowX:\"scroll\"}}),q.map((e,t)=>P.createElement(_,{key:e.key,index:t,category:e,active:e.key===es,handleGoToCategory:eh}))),P.createElement(a,{mb:12}),P.createElement(g,{role:\"tabpanel\"},Y&&P.createElement(O,{searchResults:et,handleSelectEmoji:eg}),!Y&&P.createElement(D,{ref:G,emojiListByCategory:em(),categoriesPosition:V,customItemsLimit:ed,handleLoadMore:()=>{eE(ed+90)},handleSelectEmoji:eg,handleScroll:e=>{var t;let l=null==e?void 0:e.scrollTop,r=null===(t=V.current)||void 0===t?void 0:t.filter(e=>e.top<=l).pop();if(!r)return;let{el:i}=r,n=i.id.replace(\"emoji-list-category-\",\"\");eo(n)}})),P.createElement(E,null,P.createElement(\"div\",null,er&&P.createElement(h,{emoji:er.emoji,name:er.name}),N&&null===er&&P.createElement(o,{small:!0,onClick:()=>{U.push(),l()}},F(\"Add_emoji\"))),P.createElement(M,{caption:F(\"Skin_tone\")},P.createElement(A,{tone:eu,setTone:ek}))),P.createElement(k,null,F(\"Powered_by_JoyPixels\"))))})}","map":"{\"version\":3,\"sources\":[\"client/views/composer/EmojiPicker/EmojiPicker.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { TextInput, Icon, Button, Divider } from '@rocket.chat/fuselage';\\nimport { useMediaQuery, useMergedRefs, useOutsideClick } from '@rocket.chat/fuselage-hooks';\\nimport {\\n\\tEmojiPickerCategoryHeader,\\n\\tEmojiPickerContainer,\\n\\tEmojiPickerFooter,\\n\\tEmojiPickerPreviewArea,\\n\\tEmojiPickerHeader,\\n\\tEmojiPickerListArea,\\n\\tEmojiPickerPreview,\\n} from '@rocket.chat/ui-client';\\nimport { useTranslation, usePermission, useRoute } from '@rocket.chat/ui-contexts';\\nimport type { ChangeEvent, KeyboardEvent, MouseEvent, RefObject } from 'react';\\nimport React, { useLayoutEffect, useState, useEffect, useRef } from 'react';\\nimport type { VirtuosoHandle } from 'react-virtuoso';\\n\\nimport type { EmojiItem, EmojiCategoryPosition } from '../../../../app/emoji/client';\\nimport { emoji, getCategoriesList, getEmojisBySearchTerm } from '../../../../app/emoji/client';\\nimport { usePreviewEmoji, useEmojiPickerData } from '../../../contexts/EmojiPickerContext';\\nimport { useIsVisible } from '../../room/hooks/useIsVisible';\\nimport CategoriesResult from './CategoriesResult';\\nimport EmojiPickerCategoryItem from './EmojiPickerCategoryItem';\\nimport EmojiPickerDropdown from './EmojiPickerDropDown';\\nimport SearchingResult from './SearchingResult';\\nimport ToneSelector from './ToneSelector';\\nimport ToneSelectorWrapper from './ToneSelector/ToneSelectorWrapper';\\n\\ntype EmojiPickerProps = {\\n\\treference: Element;\\n\\tonClose: () => void;\\n\\tonPickEmoji: (emoji: string) => void;\\n};\\n\\nconst EmojiPicker = ({ reference, onClose, onPickEmoji }: EmojiPickerProps) => {\\n\\tconst t = useTranslation();\\n\\n\\tconst ref = useRef<Element | null>(reference);\\n\\tconst categoriesPosition = useRef<EmojiCategoryPosition[]>([]);\\n\\tconst virtuosoRef = useRef<VirtuosoHandle>(null);\\n\\tconst emojiContainerRef = useRef<HTMLDivElement>(null);\\n\\n\\tconst [isVisibleRef, isInputVisible] = useIsVisible();\\n\\tconst textInputRef = useRef<HTMLInputElement>();\\n\\n\\tconst mergedTextInputRef = useMergedRefs(isVisibleRef, textInputRef);\\n\\n\\tconst emojiCategories = getCategoriesList();\\n\\n\\tconst canManageEmoji = usePermission('manage-emoji');\\n\\tconst customEmojiRoute = useRoute('emoji-custom');\\n\\n\\tconst [searching, setSearching] = useState(false);\\n\\tconst [searchTerm, setSearchTerm] = useState('');\\n\\tconst [searchResults, setSearchResults] = useState<EmojiItem[]>([]);\\n\\n\\tconst { emojiToPreview, handleRemovePreview } = usePreviewEmoji();\\n\\tconst {\\n\\t\\trecentEmojis,\\n\\t\\tsetCurrentCategory,\\n\\t\\taddRecentEmoji,\\n\\t\\tsetRecentEmojis,\\n\\t\\tactualTone,\\n\\t\\tcurrentCategory,\\n\\t\\tgetEmojiListsByCategory,\\n\\t\\tcustomItemsLimit,\\n\\t\\tsetActualTone,\\n\\t\\tsetCustomItemsLimit,\\n\\t} = useEmojiPickerData();\\n\\n\\tuseEffect(() => () => handleRemovePreview(), [handleRemovePreview]);\\n\\n\\tconst scrollCategories = useMediaQuery('(width < 340px)');\\n\\n\\tuseOutsideClick([emojiContainerRef], onClose);\\n\\n\\tuseLayoutEffect(() => {\\n\\t\\tif (!reference) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst resizeObserver = new ResizeObserver(() => {\\n\\t\\t\\tconst anchorRect = reference.getBoundingClientRect();\\n\\t\\t\\tif (anchorRect.width === 0 && anchorRect.height === 0) {\\n\\t\\t\\t\\t// The element is hidden, skip it\\n\\t\\t\\t\\tref.current = null;\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tref.current = reference;\\n\\t\\t});\\n\\n\\t\\tresizeObserver.observe(reference);\\n\\n\\t\\treturn () => {\\n\\t\\t\\tresizeObserver.disconnect();\\n\\t\\t};\\n\\t}, [reference]);\\n\\n\\tuseEffect(() => {\\n\\t\\tif (textInputRef.current && isInputVisible) {\\n\\t\\t\\ttextInputRef.current.focus();\\n\\t\\t}\\n\\t}, [isInputVisible]);\\n\\n\\tconst handleSelectEmoji = (event: MouseEvent<HTMLElement>) => {\\n\\t\\tevent.stopPropagation();\\n\\n\\t\\tconst _emoji = event.currentTarget.dataset?.emoji;\\n\\n\\t\\tif (!_emoji) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tlet tone = '';\\n\\n\\t\\tfor (const emojiPackage in emoji.packages) {\\n\\t\\t\\tif (emoji.packages.hasOwnProperty(emojiPackage)) {\\n\\t\\t\\t\\tif (actualTone > 0 && emoji.packages[emojiPackage].toneList.hasOwnProperty(_emoji)) {\\n\\t\\t\\t\\t\\ttone = `_tone${actualTone}`;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tsetSearchTerm('');\\n\\n\\t\\tonPickEmoji(_emoji + tone);\\n\\t\\taddRecentEmoji(_emoji + tone);\\n\\t\\tonClose();\\n\\t};\\n\\n\\tuseEffect(() => {\\n\\t\\tif (recentEmojis.length === 0 && currentCategory === 'recent') {\\n\\t\\t\\tconst customEmojiList = getEmojiListsByCategory().filter(({ key }) => key === 'rocket');\\n\\t\\t\\thandleGoToCategory(customEmojiList.length > 0 ? 0 : 1);\\n\\t\\t}\\n\\t}, [actualTone, recentEmojis, getEmojiListsByCategory, currentCategory, setRecentEmojis]);\\n\\n\\tconst handleSearch = (e: ChangeEvent<HTMLInputElement>) => {\\n\\t\\tsetSearchTerm(e.target.value);\\n\\t\\tsetCurrentCategory('');\\n\\t\\tsetSearching(e.target.value !== '');\\n\\n\\t\\tconst emojisResult = getEmojisBySearchTerm(e.target.value, actualTone, recentEmojis, setRecentEmojis);\\n\\n\\t\\tif (emojisResult.filter((emoji) => emoji.image).length === 0) {\\n\\t\\t\\tsetCurrentCategory('no-results');\\n\\t\\t}\\n\\t\\tsetSearchResults(emojisResult as EmojiItem[]);\\n\\t};\\n\\n\\tconst handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\\n\\t\\tif (e.key === 'Escape') {\\n\\t\\t\\tonClose();\\n\\t\\t}\\n\\t};\\n\\n\\tconst handleLoadMore = () => {\\n\\t\\tsetCustomItemsLimit(customItemsLimit + 90);\\n\\t};\\n\\n\\t// FIXME: not able to type the event scroll yet due the virtuoso version\\n\\tconst handleScroll = (event: any) => {\\n\\t\\tconst scrollTop = event?.scrollTop;\\n\\t\\tconst last = categoriesPosition.current?.filter((pos) => pos.top <= scrollTop).pop();\\n\\n\\t\\tif (!last) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst { el } = last;\\n\\t\\tconst category = el.id.replace('emoji-list-category-', '');\\n\\n\\t\\tsetCurrentCategory(category);\\n\\t};\\n\\n\\tconst handleGoToCategory = (categoryIndex: number) => {\\n\\t\\tsetSearching(false);\\n\\t\\tvirtuosoRef.current?.scrollToIndex({ index: categoryIndex });\\n\\t};\\n\\n\\tconst handleGoToAddCustom = () => {\\n\\t\\tcustomEmojiRoute.push();\\n\\t\\tonClose();\\n\\t};\\n\\n\\treturn (\\n\\t\\t<EmojiPickerDropdown reference={ref as RefObject<HTMLElement>} ref={emojiContainerRef}>\\n\\t\\t\\t<EmojiPickerContainer role='dialog' aria-label={t('Emoji_picker')} onKeyDown={handleKeyDown}>\\n\\t\\t\\t\\t<EmojiPickerHeader>\\n\\t\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\t\\t// FIXME: remove autoFocus prop when rewriting the emojiPicker dropdown\\n\\t\\t\\t\\t\\t\\tautoFocus\\n\\t\\t\\t\\t\\t\\tref={mergedTextInputRef}\\n\\t\\t\\t\\t\\t\\tvalue={searchTerm}\\n\\t\\t\\t\\t\\t\\tonChange={handleSearch}\\n\\t\\t\\t\\t\\t\\taddon={<Icon name='magnifier' size='x20' />}\\n\\t\\t\\t\\t\\t\\tplaceholder={t('Search')}\\n\\t\\t\\t\\t\\t\\taria-label={t('Search')}\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</EmojiPickerHeader>\\n\\t\\t\\t\\t<EmojiPickerCategoryHeader role='tablist' {...(scrollCategories && { style: { overflowX: 'scroll' } })}>\\n\\t\\t\\t\\t\\t{emojiCategories.map((category, index) => (\\n\\t\\t\\t\\t\\t\\t<EmojiPickerCategoryItem\\n\\t\\t\\t\\t\\t\\t\\tkey={category.key}\\n\\t\\t\\t\\t\\t\\t\\tindex={index}\\n\\t\\t\\t\\t\\t\\t\\tcategory={category}\\n\\t\\t\\t\\t\\t\\t\\tactive={category.key === currentCategory}\\n\\t\\t\\t\\t\\t\\t\\thandleGoToCategory={handleGoToCategory}\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t))}\\n\\t\\t\\t\\t</EmojiPickerCategoryHeader>\\n\\t\\t\\t\\t<Divider mb={12} />\\n\\t\\t\\t\\t<EmojiPickerListArea role='tabpanel'>\\n\\t\\t\\t\\t\\t{searching && <SearchingResult searchResults={searchResults} handleSelectEmoji={handleSelectEmoji} />}\\n\\t\\t\\t\\t\\t{!searching && (\\n\\t\\t\\t\\t\\t\\t<CategoriesResult\\n\\t\\t\\t\\t\\t\\t\\tref={virtuosoRef}\\n\\t\\t\\t\\t\\t\\t\\temojiListByCategory={getEmojiListsByCategory()}\\n\\t\\t\\t\\t\\t\\t\\tcategoriesPosition={categoriesPosition}\\n\\t\\t\\t\\t\\t\\t\\tcustomItemsLimit={customItemsLimit}\\n\\t\\t\\t\\t\\t\\t\\thandleLoadMore={handleLoadMore}\\n\\t\\t\\t\\t\\t\\t\\thandleSelectEmoji={handleSelectEmoji}\\n\\t\\t\\t\\t\\t\\t\\thandleScroll={handleScroll}\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t</EmojiPickerListArea>\\n\\t\\t\\t\\t<EmojiPickerPreviewArea>\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t{emojiToPreview && <EmojiPickerPreview emoji={emojiToPreview.emoji} name={emojiToPreview.name} />}\\n\\t\\t\\t\\t\\t\\t{canManageEmoji && emojiToPreview === null && (\\n\\t\\t\\t\\t\\t\\t\\t<Button small onClick={handleGoToAddCustom}>\\n\\t\\t\\t\\t\\t\\t\\t\\t{t('Add_emoji')}\\n\\t\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<ToneSelectorWrapper caption={t('Skin_tone')}>\\n\\t\\t\\t\\t\\t\\t<ToneSelector tone={actualTone} setTone={setActualTone} />\\n\\t\\t\\t\\t\\t</ToneSelectorWrapper>\\n\\t\\t\\t\\t</EmojiPickerPreviewArea>\\n\\t\\t\\t\\t<EmojiPickerFooter>{t('Powered_by_JoyPixels')}</EmojiPickerFooter>\\n\\t\\t\\t</EmojiPickerContainer>\\n\\t\\t</EmojiPickerDropdown>\\n\\t);\\n};\\n\\nexport default EmojiPicker;\\n\",null],\"names\":[\"_extends\",\"TextInput\",\"Icon\",\"Button\",\"Divider\",\"useMediaQuery\",\"useMergedRefs\",\"useOutsideClick\",\"EmojiPickerCategoryHeader\",\"EmojiPickerContainer\",\"EmojiPickerFooter\",\"EmojiPickerPreviewArea\",\"EmojiPickerHeader\",\"EmojiPickerListArea\",\"EmojiPickerPreview\",\"useTranslation\",\"usePermission\",\"useRoute\",\"React\",\"useLayoutEffect\",\"useState\",\"useEffect\",\"useRef\",\"emoji\",\"getCategoriesList\",\"getEmojisBySearchTerm\",\"usePreviewEmoji\",\"useEmojiPickerData\",\"useIsVisible\",\"CategoriesResult\",\"EmojiPickerCategoryItem\",\"EmojiPickerDropdown\",\"SearchingResult\",\"ToneSelector\",\"ToneSelectorWrapper\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"reference\",\"onClose\",\"onPickEmoji\",\"t\",\"ref\",\"categoriesPosition\",\"virtuosoRef\",\"emojiContainerRef\",\"isVisibleRef\",\"isInputVisible\",\"textInputRef\",\"mergedTextInputRef\",\"emojiCategories\",\"canManageEmoji\",\"customEmojiRoute\",\"searching\",\"setSearching\",\"searchTerm\",\"setSearchTerm\",\"searchResults\",\"setSearchResults\",\"emojiToPreview\",\"handleRemovePreview\",\"recentEmojis\",\"setCurrentCategory\",\"addRecentEmoji\",\"setRecentEmojis\",\"actualTone\",\"currentCategory\",\"getEmojiListsByCategory\",\"customItemsLimit\",\"setActualTone\",\"setCustomItemsLimit\",\"scrollCategories\",\"resizeObserver\",\"ResizeObserver\",\"anchorRect\",\"getBoundingClientRect\",\"width\",\"height\",\"current\",\"observe\",\"disconnect\",\"focus\",\"handleSelectEmoji\",\"event\",\"_event$currentTarget$\",\"stopPropagation\",\"_emoji\",\"currentTarget\",\"dataset\",\"tone\",\"emojiPackage\",\"packages\",\"hasOwnProperty\",\"toneList\",\"concat\",\"length\",\"customEmojiList\",\"filter\",\"_ref2\",\"key\",\"handleGoToCategory\",\"categoryIndex\",\"_virtuosoRef$current\",\"scrollToIndex\",\"index\",\"createElement\",\"role\",\"onKeyDown\",\"e\",\"autoFocus\",\"value\",\"onChange\",\"target\",\"emojisResult\",\"image\",\"addon\",\"name\",\"size\",\"placeholder\",\"style\",\"overflowX\",\"map\",\"category\",\"active\",\"mb\",\"emojiListByCategory\",\"handleLoadMore\",\"handleScroll\",\"_categoriesPosition$c\",\"scrollTop\",\"last\",\"pos\",\"top\",\"pop\",\"el\",\"id\",\"replace\",\"small\",\"onClick\",\"handleGoToAddCustom\",\"push\",\"caption\",\"setTone\"],\"mappings\":\"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\"}"}