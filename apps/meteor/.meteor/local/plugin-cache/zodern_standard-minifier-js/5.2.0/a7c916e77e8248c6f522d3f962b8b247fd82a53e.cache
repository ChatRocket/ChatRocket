{"code":"function module(e,t,s){let n,a,r,o;s.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){n=e}},0),s.export({useMessagesSent:()=>d}),s.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){a=e}},0),s.link(\"@tanstack/react-query\",{useQuery(e){r=e}},1),s.link(\"../../../../components/dashboards/periods\",{getPeriodRange(e){o=e}},2);let d=e=>{let{period:t}=e,s=a(\"GET\",\"/v1/engagement-dashboard/messages/messages-sent\");return r([\"admin/engagement-dashboard/messages/messages-sent\",{period:t}],async()=>{let{start:e,end:a}=o(t),r=await s({start:e.toISOString(),end:a.toISOString()});return r?n(n({},r),{},{start:e,end:a}):void 0},{refetchInterval:3e5,useErrorBoundary:!0})}}","map":"{\"version\":3,\"sources\":[\"client/views/admin/engagementDashboard/messages/useMessagesSent.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useQuery } from '@tanstack/react-query';\\n\\nimport type { Period } from '../../../../components/dashboards/periods';\\nimport { getPeriodRange } from '../../../../components/dashboards/periods';\\n\\ntype UseMessagesSentOptions = { period: Period['key'] };\\n\\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\\nexport const useMessagesSent = ({ period }: UseMessagesSentOptions) => {\\n\\tconst getMessagesSent = useEndpoint('GET', '/v1/engagement-dashboard/messages/messages-sent');\\n\\n\\treturn useQuery(\\n\\t\\t['admin/engagement-dashboard/messages/messages-sent', { period }],\\n\\t\\tasync () => {\\n\\t\\t\\tconst { start, end } = getPeriodRange(period);\\n\\n\\t\\t\\tconst response = await getMessagesSent({\\n\\t\\t\\t\\tstart: start.toISOString(),\\n\\t\\t\\t\\tend: end.toISOString(),\\n\\t\\t\\t});\\n\\n\\t\\t\\treturn response\\n\\t\\t\\t\\t? {\\n\\t\\t\\t\\t\\t\\t...response,\\n\\t\\t\\t\\t\\t\\tstart,\\n\\t\\t\\t\\t\\t\\tend,\\n\\t\\t\\t\\t  }\\n\\t\\t\\t\\t: undefined;\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\trefetchInterval: 5 * 60 * 1000,\\n\\t\\t\\tuseErrorBoundary: true,\\n\\t\\t},\\n\\t);\\n};\\n\",null],\"names\":[\"_objectSpread\",\"useEndpoint\",\"useQuery\",\"getPeriodRange\",\"module\",\"link\",\"default\",\"v\",\"export\",\"useMessagesSent\",\"_ref\",\"period\",\"getMessagesSent\",\"start\",\"end\",\"response\",\"toISOString\",\"undefined\",\"refetchInterval\",\"useErrorBoundary\"],\"mappings\":\"2BAAAA,EAAuDC,EAAAC,EAAAC,EAA9CC,EAAaC,IAAM,CAAA,uCAA2B,CAAAC,QAAAC,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAvDH,EAAOI,MAAE,CAAA,CAAAC,gBAAmBA,IAAAA,CAAA,GAA2BL,EAAAC,IAAA,CAAA,2BAAA,CAAAJ,YAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wBAAA,CAAAH,SAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,4CAAA,CAAAF,eAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAShD,IAAME,EAAkBC,IAAuC,GAAtC,CAAEC,OAAAA,CAAAA,CAAgC,CAAAD,EAC3DE,EAAkBX,EAAY,MAAO,mDAE3C,OAAOC,EACN,CAAC,oDAAqD,CAAES,OAAAA,CAAM,EAAG,CACjE,UACC,GAAM,CAAEE,MAAAA,CAAK,CAAEC,IAAAA,CAAAA,CAAK,CAAGX,EAAeQ,GAEhCI,EAAW,MAAMH,EAAgB,CACtCC,MAAOA,EAAMG,WAAW,GACxBF,IAAKA,EAAIE,WAAW,KAGrB,OAAOD,EAAQf,EAAAA,EAAA,CAAA,EAETe,GAAQ,CAAA,EAAA,CACXF,MAAAA,EACAC,IAAAA,CAAG,GAEHG,KAAAA,CACJ,EACA,CACCC,gBAAiB,IACjBC,iBAAkB,CAAA,GAGrB\"}"}