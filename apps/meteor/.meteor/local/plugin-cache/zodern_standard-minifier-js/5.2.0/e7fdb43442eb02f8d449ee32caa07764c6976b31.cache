{"code":"function module(e,t,o){let r,n,a;o.export({useE2EEResetRoomKey:()=>i}),o.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){r=e}},0),o.link(\"@tanstack/react-query\",{useMutation(e){n=e}},1),o.link(\"../../../../app/e2e/client\",{e2e(e){a=e}},2);let i=e=>{let t=r(\"POST\",\"/v1/e2e.resetRoomKey\");return n(async e=>{var o;let{roomId:r}=e,n=await a.getInstanceByRoomId(r);if(!n)throw Error(\"Cannot reset room key\");let{e2eKey:i,e2eKeyId:l}=null!==(o=await n.resetRoomKey())&&void 0!==o?o:{};if(!i||!l)throw Error(\"Cannot reset room key\");try{await t({rid:r,e2eKeyId:l,e2eKey:i})}catch(e){throw e}},e)}}","map":"{\"version\":3,\"sources\":[\"client/views/room/hooks/useE2EEResetRoomKey.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { RoomID } from '@rocket.chat/core-typings';\\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport type { UseMutationOptions, UseMutationResult } from '@tanstack/react-query';\\nimport { useMutation } from '@tanstack/react-query';\\n\\nimport { e2e } from '../../../../app/e2e/client';\\n\\ntype UseE2EEResetRoomKeyVariables = {\\n\\troomId: RoomID;\\n};\\n\\nexport const useE2EEResetRoomKey = (\\n\\toptions?: Omit<UseMutationOptions<void, Error, UseE2EEResetRoomKeyVariables>, 'mutationFn'>,\\n): UseMutationResult<void, Error, UseE2EEResetRoomKeyVariables> => {\\n\\tconst resetRoomKey = useEndpoint('POST', '/v1/e2e.resetRoomKey');\\n\\n\\treturn useMutation(async ({ roomId }) => {\\n\\t\\tconst e2eRoom = await e2e.getInstanceByRoomId(roomId);\\n\\t\\tif (!e2eRoom) {\\n\\t\\t\\tthrow new Error('Cannot reset room key');\\n\\t\\t}\\n\\n\\t\\tconst { e2eKey, e2eKeyId } = (await e2eRoom.resetRoomKey()) ?? {};\\n\\n\\t\\tif (!e2eKey || !e2eKeyId) {\\n\\t\\t\\tthrow new Error('Cannot reset room key');\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tawait resetRoomKey({ rid: roomId, e2eKeyId, e2eKey });\\n\\t\\t} catch (error) {\\n\\t\\t\\tthrow error;\\n\\t\\t}\\n\\t}, options);\\n};\\n\",null],\"names\":[\"useEndpoint\",\"useMutation\",\"e2e\",\"module\",\"export\",\"useE2EEResetRoomKey\",\"link\",\"v\",\"options\",\"resetRoomKey\",\"_ref\",\"_await$e2eRoom$resetR\",\"roomId\",\"e2eRoom\",\"getInstanceByRoomId\",\"Error\",\"e2eKey\",\"e2eKeyId\",\"rid\",\"error\"],\"mappings\":\"2BACuDA,EAAAC,EAAAC,EAAvDC,EAAOC,MAAE,CAAA,CAAAC,oBAAmBA,IAAAA,CAA2B,GAAAF,EAAAG,IAAA,CAAA,2BAAA,CAAAN,YAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,wBAAA,CAAAL,YAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,6BAAA,CAAAJ,IAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAUhD,IAAMF,EACZG,IAEA,IAAMC,EAAeT,EAAY,OAAQ,wBAEzC,OAAOC,EAAY,MAAAS,IAAqB,IAAAC,EAAA,GAAd,CAAEC,OAAAA,CAAAA,CAAQ,CAAAF,EAC7BG,EAAU,MAAMX,EAAIY,mBAAmB,CAACF,GAC9C,GAAI,CAACC,EACJ,MAAM,AAAIE,MAAM,yBAGjB,GAAM,CAAEC,OAAAA,CAAM,CAAEC,SAAAA,CAAAA,CAAU,CAAA,AAAgC,OAAhCN,CAAAA,EAAI,MAAME,EAAQJ,YAAY,EAAA,GAAEE,AAAA,KAAA,IAAAA,EAAAA,EAAK,CAAA,EAE/D,GAAI,CAACK,GAAU,CAACC,EACf,MAAM,AAAIF,MAAM,yBAGjB,GAAI,CACH,MAAMN,EAAa,CAAES,IAAKN,EAAQK,SAAAA,EAAUD,OAAAA,CAAM,EACnD,CAAE,MAAOG,EAAO,CACf,MAAMA,CACP,CACD,EAAGX,EACJ\"}"}