{"code":"function module(e,n,t){t.link(\"react\",{default:function(e){o=e}},0),t.link(\"../../../../components/GenericTable\",{GenericTableRow:function(e){l=e},GenericTableCell:function(e){a=e}},1),t.link(\"../../../../components/MarkdownText\",{default:function(e){i=e}},2);var o,l,a,i,c={whiteSpace:\"nowrap\",textOverflow:\"ellipsis\",overflow:\"hidden\"};t.exportDefault(function(e){var n=e.status,t=e.onClick,r=n._id,u=n.name,f=n.statusType;return o.createElement(l,{key:r,onKeyDown:function(){return t(r)},onClick:function(){return t(r)},tabIndex:0,role:\"link\",action:!0,\"qa-user-id\":r},o.createElement(a,{fontScale:\"p2\",color:\"default\",style:c},o.createElement(i,{content:u,parseEmoji:!0,variant:\"inline\"})),o.createElement(a,{fontScale:\"p2\",color:\"default\",style:c},f))})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/customUserStatus/CustomUserStatusTable/CustomUserStatusRow.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IUserStatus } from '@rocket.chat/core-typings';\\nimport type { CSSProperties, ReactElement } from 'react';\\nimport React from 'react';\\n\\nimport { GenericTableRow, GenericTableCell } from '../../../../components/GenericTable';\\nimport MarkdownText from '../../../../components/MarkdownText';\\n\\nconst style: CSSProperties = { whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden' };\\n\\ntype CustomUserStatusRowProps = {\\n\\tstatus: IUserStatus;\\n\\tonClick: (id: string) => void;\\n};\\n\\nconst CustomUserStatusRow = ({ status, onClick }: CustomUserStatusRowProps): ReactElement => {\\n\\tconst { _id, name, statusType } = status;\\n\\n\\treturn (\\n\\t\\t<GenericTableRow\\n\\t\\t\\tkey={_id}\\n\\t\\t\\tonKeyDown={(): void => onClick(_id)}\\n\\t\\t\\tonClick={(): void => onClick(_id)}\\n\\t\\t\\ttabIndex={0}\\n\\t\\t\\trole='link'\\n\\t\\t\\taction\\n\\t\\t\\tqa-user-id={_id}\\n\\t\\t>\\n\\t\\t\\t<GenericTableCell fontScale='p2' color='default' style={style}>\\n\\t\\t\\t\\t<MarkdownText content={name} parseEmoji={true} variant='inline' />\\n\\t\\t\\t</GenericTableCell>\\n\\t\\t\\t<GenericTableCell fontScale='p2' color='default' style={style}>\\n\\t\\t\\t\\t{statusType}\\n\\t\\t\\t</GenericTableCell>\\n\\t\\t</GenericTableRow>\\n\\t);\\n};\\n\\nexport default CustomUserStatusRow;\\n\",null],\"names\":[\"module\",\"link\",\"v\",\"React\",\"GenericTableRow\",\"GenericTableCell\",\"MarkdownText\",\"style\",\"whiteSpace\",\"textOverflow\",\"overflow\",\"exportDefault\",\"_ref\",\"status\",\"onClick\",\"_id\",\"name\",\"statusType\",\"createElement\",\"key\",\"onKeyDown\",\"tabIndex\",\"role\",\"action\",\"fontScale\",\"color\",\"content\",\"parseEmoji\",\"variant\"],\"mappings\":\"uBAEOA,EAAKC,IAAM,CAAA,QAAQ,CAAA,QAAA,SAAAC,CAAA,EAAAC,EAAAD,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,sCAAA,CAAAG,gBAAA,SAAAF,CAAA,EAAAE,EAAAF,CAAA,EAAAG,iBAAA,SAAAH,CAAA,EAAAG,EAAAH,CAAA,CAAA,EAAA,GAAAF,EAAAC,IAAA,CAAA,sCAAA,CAAA,QAAA,SAAAC,CAAA,EAAAI,EAAAJ,CAAA,CAAA,EAAA,GAK1B,IALAC,EAA0BC,EAAAC,EAAAC,EAKpBC,EAAuB,CAAEC,WAAY,SAAUC,aAAc,WAAYC,SAAU,QAAQ,EALjGV,EAAOW,aAAW,CAYU,SAAAC,CAAA,EAAgE,IAA7DC,EAAMD,EAANC,MAAM,CAAEC,EAAOF,EAAPE,OAAO,CACrCC,EAA0BF,EAA1BE,GAAG,CAAEC,EAAqBH,EAArBG,IAAI,CAAEC,EAAeJ,EAAfI,UAAU,CAE7B,OACCd,EAAAe,aAAA,CAACd,EAAe,CACfe,IAAKJ,EACLK,UAAW,WAAA,OAAYN,EAAQC,EAAI,EACnCD,QAAS,WAAA,OAAYA,EAAQC,EAAI,EACjCM,SAAU,EACVC,KAAK,OACLC,OAAM,CAAA,EACN,aAAYR,CAAI,EAEhBZ,EAAAe,aAAA,CAACb,EAAgB,CAACmB,UAAU,KAAKC,MAAM,UAAUlB,MAAOA,CAAM,EAC7DJ,EAAAe,aAAA,CAACZ,EAAY,CAACoB,QAASV,EAAMW,WAAY,CAAA,EAAMC,QAAQ,QAAQ,IAEhEzB,EAAAe,aAAA,CAACb,EAAgB,CAACmB,UAAU,KAAKC,MAAM,UAAUlB,MAAOA,CAAM,EAC5DU,GAIL\"}"}