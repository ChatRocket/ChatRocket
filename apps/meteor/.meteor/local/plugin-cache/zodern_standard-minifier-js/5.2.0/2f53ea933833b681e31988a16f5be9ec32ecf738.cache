{"code":"function module(n,t,u){u.link(\"@babel/runtime/helpers/slicedToArray\",{default:function(n){e=n}},0),u.export({EditableSettingsContext:function(){return f},useIsEnterprise:function(){return s},useEditableSetting:function(){return a},useEditableSettings:function(){return l},useEditableSettingsGroupSections:function(){return b},useEditableSettingsGroupTabs:function(){return d},useEditableSettingsDispatch:function(){return S}}),u.link(\"react\",{createContext:function(n){r=n},useContext:function(n){i=n},useMemo:function(n){o=n}},0),u.link(\"use-sync-external-store/shim\",{useSyncExternalStore:function(n){c=n}},1);var e,r,i,o,c,f=r({queryEditableSetting:function(){return[function(){return function(){}},function(){}]},queryEditableSettings:function(){return[function(){return function(){}},function(){return[]}]},queryGroupSections:function(){return[function(){return function(){}},function(){return[]}]},queryGroupTabs:function(){return[function(){return function(){}},function(){return[]}]},dispatch:function(){},isEnterprise:!1}),s=function(){return i(f).isEnterprise},a=function(n){var t=i(f).queryEditableSetting,u=o(function(){return t(n)},[t,n]),r=e(u,2),s=r[0],a=r[1];return c(s,a)},l=function(n){var t=i(f).queryEditableSettings,u=o(function(){return t(null!=n?n:{})},[t,n]),r=e(u,2),s=r[0],a=r[1];return c(s,a)},b=function(n,t){var u=i(f).queryGroupSections,r=o(function(){return u(n,t)},[u,n,t]),s=e(r,2),a=s[0],l=s[1];return c(a,l)},d=function(n){var t=i(f).queryGroupTabs,u=o(function(){return t(n)},[t,n]),r=e(u,2),s=r[0],a=r[1];return c(s,a)},S=function(){return i(f).dispatch}}","map":"{\"version\":3,\"sources\":[\"client/views/admin/EditableSettingsContext.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { ISettingBase, SectionName, SettingId, GroupId, TabId, ISettingColor } from '@rocket.chat/core-typings';\\nimport type { SettingsContextQuery } from '@rocket.chat/ui-contexts';\\nimport { createContext, useContext, useMemo } from 'react';\\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\\n\\nexport type EditableSetting = (ISettingBase | ISettingColor) & {\\n\\tdisabled: boolean;\\n\\tchanged: boolean;\\n\\tinvisible: boolean;\\n};\\n\\ntype EditableSettingsContextQuery = SettingsContextQuery & {\\n\\tchanged?: boolean;\\n};\\n\\nexport type EditableSettingsContextValue = {\\n\\treadonly queryEditableSetting: (\\n\\t\\t_id: SettingId,\\n\\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => EditableSetting | undefined];\\n\\treadonly queryEditableSettings: (\\n\\t\\tquery: EditableSettingsContextQuery,\\n\\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => EditableSetting[]];\\n\\treadonly queryGroupSections: (\\n\\t\\t_id: GroupId,\\n\\t\\ttab?: TabId,\\n\\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => SectionName[]];\\n\\treadonly queryGroupTabs: (_id: GroupId) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => TabId[]];\\n\\treadonly dispatch: (changes: Partial<EditableSetting>[]) => void;\\n\\treadonly isEnterprise: boolean;\\n};\\n\\nexport const EditableSettingsContext = createContext<EditableSettingsContextValue>({\\n\\tqueryEditableSetting: () => [(): (() => void) => (): void => undefined, (): undefined => undefined],\\n\\tqueryEditableSettings: () => [(): (() => void) => (): void => undefined, (): EditableSetting[] => []],\\n\\tqueryGroupSections: () => [(): (() => void) => (): void => undefined, (): SectionName[] => []],\\n\\tqueryGroupTabs: () => [(): (() => void) => (): void => undefined, (): TabId[] => []],\\n\\tdispatch: () => undefined,\\n\\tisEnterprise: false,\\n});\\n\\nexport const useIsEnterprise = (): boolean => useContext(EditableSettingsContext).isEnterprise;\\n\\nexport const useEditableSetting = (_id: SettingId): EditableSetting | undefined => {\\n\\tconst { queryEditableSetting } = useContext(EditableSettingsContext);\\n\\n\\tconst [subscribe, getSnapshot] = useMemo(() => queryEditableSetting(_id), [queryEditableSetting, _id]);\\n\\treturn useSyncExternalStore(subscribe, getSnapshot);\\n};\\n\\nexport const useEditableSettings = (query?: EditableSettingsContextQuery): EditableSetting[] => {\\n\\tconst { queryEditableSettings } = useContext(EditableSettingsContext);\\n\\tconst [subscribe, getSnapshot] = useMemo(() => queryEditableSettings(query ?? {}), [queryEditableSettings, query]);\\n\\treturn useSyncExternalStore(subscribe, getSnapshot);\\n};\\n\\nexport const useEditableSettingsGroupSections = (_id: SettingId, tab?: TabId): SectionName[] => {\\n\\tconst { queryGroupSections } = useContext(EditableSettingsContext);\\n\\n\\tconst [subscribe, getSnapshot] = useMemo(() => queryGroupSections(_id, tab), [queryGroupSections, _id, tab]);\\n\\treturn useSyncExternalStore(subscribe, getSnapshot);\\n};\\n\\nexport const useEditableSettingsGroupTabs = (_id: SettingId): TabId[] => {\\n\\tconst { queryGroupTabs } = useContext(EditableSettingsContext);\\n\\n\\tconst [subscribe, getSnapshot] = useMemo(() => queryGroupTabs(_id), [queryGroupTabs, _id]);\\n\\treturn useSyncExternalStore(subscribe, getSnapshot);\\n};\\n\\nexport const useEditableSettingsDispatch = (): ((changes: Partial<EditableSetting>[]) => void) =>\\n\\tuseContext(EditableSettingsContext).dispatch;\\n\",null],\"names\":[\"module\",\"link\",\"default\",\"v\",\"_slicedToArray\",\"export\",\"EditableSettingsContext\",\"useIsEnterprise\",\"useEditableSetting\",\"useEditableSettings\",\"useEditableSettingsGroupSections\",\"useEditableSettingsGroupTabs\",\"useEditableSettingsDispatch\",\"createContext\",\"useContext\",\"useMemo\",\"useSyncExternalStore\",\"queryEditableSetting\",\"queryEditableSettings\",\"queryGroupSections\",\"queryGroupTabs\",\"dispatch\",\"isEnterprise\",\"_id\",\"_useContext\",\"_useMemo\",\"_useMemo2\",\"subscribe\",\"getSnapshot\",\"query\",\"_useContext2\",\"_useMemo3\",\"_useMemo4\",\"tab\",\"_useContext3\",\"_useMemo5\",\"_useMemo6\",\"_useContext4\",\"_useMemo7\",\"_useMemo8\"],\"mappings\":\"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\"}"}