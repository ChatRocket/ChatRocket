{"code":"function module(e,n,t){var l,a,c,i,o,r,u,f,s,m,d;t.link(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\",{default:function(e){a=e}},0),t.link(\"@rocket.chat/css-in-js\",{css:function(e){c=e}},0),t.link(\"@rocket.chat/fuselage\",{Box:function(e){i=e},Icon:function(e){o=e},Skeleton:function(e){r=e},Palette:function(e){u=e}},1),t.link(\"react\",{default:function(e){f=e}},2),t.link(\"../../../../../components/GenericNoResults\",{default:function(e){s=e}},3),t.link(\"../lib/getNodeIconType\",{getNodeIconType:function(e){m=e}},4),t.link(\"./WebdavFilePickerGridItem\",{default:function(e){d=e}},5),t.exportDefault(function(e){var n=e.webdavNodes,t=e.onNodeClick,k=e.isLoading,p=c(l||(l=a([\"\\n\t\t&:hover {\\n\t\t\tbackground-color: \",\";\\n\t\t\tcursor: pointer;\\n\t\t}\\n\t\"])),u.surface[\"surface-neutral\"]);return f.createElement(i,{display:\"flex\",flexWrap:\"wrap\"},k&&Array(6).fill(\"\").map(function(e,n){return f.createElement(d,{p:4,key:n},f.createElement(r,{variant:\"rect\",width:\"full\",height:\"full\"}))}),!k&&n.map(function(e,n){var l=m(e.basename,e.type,e.mime).icon;return f.createElement(d,{key:n,className:p,onClick:function(){return t(e)}},f.createElement(o,{mie:4,size:\"x72\",name:l}),f.createElement(i,{textAlign:\"center\"},e.basename))}),!k&&(null==n?void 0:n.length)===0&&f.createElement(s,null))})}","map":"{\"version\":3,\"sources\":[\"client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerGrid/WebdavFilePickerGrid.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IWebdavNode } from '@rocket.chat/core-typings';\\nimport { css } from '@rocket.chat/css-in-js';\\nimport { Box, Icon, Skeleton, Palette } from '@rocket.chat/fuselage';\\nimport type { ReactElement } from 'react';\\nimport React from 'react';\\n\\nimport GenericNoResults from '../../../../../components/GenericNoResults';\\nimport { getNodeIconType } from '../lib/getNodeIconType';\\nimport WebdavFilePickerGridItem from './WebdavFilePickerGridItem';\\n\\ntype WebdavFilePickerGridProps = {\\n\\twebdavNodes: IWebdavNode[];\\n\\tonNodeClick: (file: IWebdavNode) => void;\\n\\tisLoading: boolean;\\n};\\n\\nconst WebdavFilePickerGrid = ({ webdavNodes, onNodeClick, isLoading }: WebdavFilePickerGridProps): ReactElement => {\\n\\tconst hoverStyle = css`\\n\\t\\t&:hover {\\n\\t\\t\\tbackground-color: ${Palette.surface['surface-neutral']};\\n\\t\\t\\tcursor: pointer;\\n\\t\\t}\\n\\t`;\\n\\n\\treturn (\\n\\t\\t<Box display='flex' flexWrap='wrap'>\\n\\t\\t\\t{isLoading &&\\n\\t\\t\\t\\tArray(6)\\n\\t\\t\\t\\t\\t.fill('')\\n\\t\\t\\t\\t\\t.map((_, index) => (\\n\\t\\t\\t\\t\\t\\t<WebdavFilePickerGridItem p={4} key={index}>\\n\\t\\t\\t\\t\\t\\t\\t<Skeleton variant='rect' width='full' height='full' />\\n\\t\\t\\t\\t\\t\\t</WebdavFilePickerGridItem>\\n\\t\\t\\t\\t\\t))}\\n\\t\\t\\t{!isLoading &&\\n\\t\\t\\t\\twebdavNodes.map((webdavNode, index) => {\\n\\t\\t\\t\\t\\tconst { icon } = getNodeIconType(webdavNode.basename, webdavNode.type, webdavNode.mime);\\n\\n\\t\\t\\t\\t\\treturn (\\n\\t\\t\\t\\t\\t\\t<WebdavFilePickerGridItem key={index} className={hoverStyle} onClick={(): void => onNodeClick(webdavNode)}>\\n\\t\\t\\t\\t\\t\\t\\t<Icon mie={4} size='x72' name={icon} />\\n\\t\\t\\t\\t\\t\\t\\t<Box textAlign='center'>{webdavNode.basename}</Box>\\n\\t\\t\\t\\t\\t\\t</WebdavFilePickerGridItem>\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t})}\\n\\t\\t\\t{!isLoading && webdavNodes?.length === 0 && <GenericNoResults />}\\n\\t\\t</Box>\\n\\t);\\n};\\n\\nexport default WebdavFilePickerGrid;\\n\",null],\"names\":[\"_taggedTemplateLiteralLoose\",\"css\",\"Box\",\"Icon\",\"Skeleton\",\"Palette\",\"React\",\"GenericNoResults\",\"getNodeIconType\",\"WebdavFilePickerGridItem\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"webdavNodes\",\"onNodeClick\",\"isLoading\",\"hoverStyle\",\"_templateObject\",\"surface\",\"createElement\",\"display\",\"flexWrap\",\"Array\",\"fill\",\"map\",\"_\",\"index\",\"p\",\"key\",\"variant\",\"width\",\"height\",\"webdavNode\",\"icon\",\"_getNodeIconType\",\"basename\",\"type\",\"mime\",\"className\",\"onClick\",\"mie\",\"size\",\"name\",\"textAlign\",\"length\"],\"mappings\":\"uBAgBA,MAfAA,EAAAC,EAA6CC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAzBC,EAAAC,IAAA,CAAwB,oDAAC,CAAAC,QAAA,SAAAC,CAAA,EAAAb,EAAAa,CAAA,CAAA,EAAA,GAAtCH,EAAOC,IAAA,CAAM,yBAAyB,CAAAV,IAAA,SAAAY,CAAA,EAAAZ,EAAAY,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wBAAA,CAAAT,IAAA,SAAAW,CAAA,EAAAX,EAAAW,CAAA,EAAAV,KAAA,SAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,SAAA,SAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,QAAA,SAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAA,QAAA,SAAAE,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,6CAAA,CAAA,QAAA,SAAAE,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,yBAAA,CAAAH,gBAAA,SAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,6BAAA,CAAA,QAAA,SAAAE,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAA7CH,EAAOI,aAAa,CAeS,SAAAC,CAAA,EAAqF,IAAlFC,EAAWD,EAAXC,WAAW,CAAEC,EAAWF,EAAXE,WAAW,CAAEC,EAASH,EAATG,SAAS,CAC5DC,EAAalB,EAAGmB,GAAAA,CAAAA,EAAApB,EAAA,CAAA,uCAAA,iCAAA,CAAA,EAEAK,EAAQgB,OAAO,CAAC,kBAAkB,EAKxD,OACCf,EAAAgB,aAAA,CAACpB,EAAG,CAACqB,QAAQ,OAAOC,SAAS,MAAM,EACjCN,GACAO,MAAM,GACJC,IAAI,CAAC,IACLC,GAAG,CAAC,SAACC,CAAC,CAAEC,CAAK,EAAA,OACbvB,EAAAgB,aAAA,CAACb,EAAwB,CAACqB,EAAG,EAAGC,IAAKF,CAAM,EAC1CvB,EAAAgB,aAAA,CAAClB,EAAQ,CAAC4B,QAAQ,OAAOC,MAAM,OAAOC,OAAO,MAAM,GACzB,GAE7B,CAAChB,GACDF,EAAYW,GAAG,CAAC,SAACQ,CAAU,CAAEN,CAAK,EACjC,IAAQO,EAAIC,AAAK7B,EAAgB2B,EAAWG,QAAQ,CAAEH,EAAWI,IAAI,CAAEJ,EAAWK,IAAI,EAA9EJ,IAAI,CAEZ,OACC9B,EAAAgB,aAAA,CAACb,EAAwB,CAACsB,IAAKF,EAAOY,UAAWtB,EAAYuB,QAAS,WAAA,OAAYzB,EAAYkB,EAAW,CAAC,EACzG7B,EAAAgB,aAAA,CAACnB,EAAI,CAACwC,IAAK,EAAGC,KAAK,MAAMC,KAAMT,CAAK,GACpC9B,EAAAgB,aAAA,CAACpB,EAAG,CAAC4C,UAAU,QAAQ,EAAEX,EAAWG,QAAc,EAGrD,GACA,CAACpB,GAAa,AAAAF,CAAAA,MAAAA,EAAW,KAAA,EAAXA,EAAa+B,MAAM,AAANA,IAAW,GAAKzC,EAAAgB,aAAA,CAACf,EAAgB,MAGhE\"}"}