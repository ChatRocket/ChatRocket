{"code":"function module(t,e,n){let r;n.export({formatPeriodRange:()=>o}),n.link(\"../../../components/dashboards/periods\",{getPeriodRange(t){r=t}},0);let a=t=>{let e=String(t.getUTCDate()).padStart(2,\"0\"),n=String(t.getMonth()+1).padStart(2,\"0\"),r=t.getFullYear();return\"\".concat(r,\"-\").concat(n,\"-\").concat(e)},o=t=>{let{start:e,end:n}=r(t);return{start:a(e),end:a(n)}}}","map":"{\"version\":3,\"sources\":[\"client/omnichannel/reports/utils/formatPeriodRange.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { Period } from '../../../components/dashboards/periods';\\nimport { getPeriodRange } from '../../../components/dashboards/periods';\\n\\nconst formatDate = (date: Date): string => {\\n\\tconst day = String(date.getUTCDate()).padStart(2, '0');\\n\\tconst month = String(date.getMonth() + 1).padStart(2, '0');\\n\\tconst year = date.getFullYear();\\n\\n\\treturn `${year}-${month}-${day}`;\\n};\\n\\nexport const formatPeriodRange = (period: Period['key']): { start: string; end: string } => {\\n\\tconst { start, end } = getPeriodRange(period);\\n\\treturn {\\n\\t\\tstart: formatDate(start),\\n\\t\\tend: formatDate(end),\\n\\t};\\n};\\n\",null],\"names\":[\"getPeriodRange\",\"module\",\"export\",\"formatPeriodRange\",\"link\",\"v\",\"formatDate\",\"date\",\"day\",\"String\",\"getUTCDate\",\"padStart\",\"month\",\"getMonth\",\"year\",\"getFullYear\",\"concat\",\"period\",\"start\",\"end\"],\"mappings\":\"2BAC+BA,EAA/BC,EAAOC,MAAE,CAAA,CAAAC,kBAAsBA,IAAAA,CAAA,GAAyCF,EAAAG,IAAA,CAAA,yCAAA,CAAAJ,eAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAExE,IAAMC,EAAcC,IACnB,IAAMC,EAAMC,OAAOF,EAAKG,UAAU,IAAIC,QAAQ,CAAC,EAAG,KAC5CC,EAAQH,OAAOF,EAAKM,QAAQ,GAAK,GAAGF,QAAQ,CAAC,EAAG,KAChDG,EAAOP,EAAKQ,WAAW,GAE7B,MAAA,GAAAC,MAAA,CAAUF,EAAI,KAAAE,MAAA,CAAIJ,EAAK,KAAAI,MAAA,CAAIR,EAC5B,EAEaL,EAAqBc,IACjC,GAAM,CAAEC,MAAAA,CAAK,CAAEC,IAAAA,CAAAA,CAAK,CAAGnB,EAAeiB,GACtC,MAAO,CACNC,MAAOZ,EAAWY,GAClBC,IAAKb,EAAWa,GAElB\"}"}