{"code":"function module(e,t,a){let n,l,s,o,c,r,i,u,g;a.export({useRemoveTag:()=>m}),a.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){n=e}},0),a.link(\"@rocket.chat/ui-contexts\",{useSetModal(e){l=e},useToastMessageDispatch(e){s=e},useRouter(e){o=e},useMethod(e){c=e},useTranslation(e){r=e}},1),a.link(\"@tanstack/react-query\",{useQueryClient(e){i=e}},2),a.link(\"react\",{default(e){u=e}},3),a.link(\"../../components/GenericModal\",{default(e){g=e}},4);let m=()=>{let e=r(),t=l(),a=s(),m=c(\"livechat:removeTag\"),k=i(),d=o(),h=n(n=>{let l=async()=>{try{await m(n),a({type:\"success\",message:e(\"Tag_removed\")}),d.navigate(\"/omnichannel/tags\"),k.invalidateQueries([\"livechat-tags\"])}catch(e){a({type:\"error\",message:e})}finally{t()}};t(u.createElement(g,{variant:\"danger\",onConfirm:l,onCancel:()=>t(),confirmText:e(\"Delete\")}))});return h}}","map":"{\"version\":3,\"sources\":[\"client/omnichannel/tags/useRemoveTag.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport { useSetModal, useToastMessageDispatch, useRouter, useMethod, useTranslation } from '@rocket.chat/ui-contexts';\\nimport { useQueryClient } from '@tanstack/react-query';\\nimport React from 'react';\\n\\nimport GenericModal from '../../components/GenericModal';\\n\\nexport const useRemoveTag = () => {\\n\\tconst t = useTranslation();\\n\\tconst setModal = useSetModal();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst removeTag = useMethod('livechat:removeTag');\\n\\tconst queryClient = useQueryClient();\\n\\tconst router = useRouter();\\n\\n\\tconst handleDeleteTag = useMutableCallback((tagId) => {\\n\\t\\tconst handleDelete = async () => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait removeTag(tagId);\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Tag_removed') });\\n\\t\\t\\t\\trouter.navigate('/omnichannel/tags');\\n\\t\\t\\t\\tqueryClient.invalidateQueries(['livechat-tags']);\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: error });\\n\\t\\t\\t} finally {\\n\\t\\t\\t\\tsetModal();\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\tsetModal(<GenericModal variant='danger' onConfirm={handleDelete} onCancel={() => setModal()} confirmText={t('Delete')} />);\\n\\t});\\n\\n\\treturn handleDeleteTag;\\n};\\n\",null],\"names\":[\"useMutableCallback\",\"useSetModal\",\"useToastMessageDispatch\",\"useRouter\",\"useMethod\",\"useTranslation\",\"useQueryClient\",\"React\",\"GenericModal\",\"module\",\"export\",\"useRemoveTag\",\"link\",\"v\",\"default\",\"t\",\"setModal\",\"dispatchToastMessage\",\"removeTag\",\"queryClient\",\"router\",\"handleDeleteTag\",\"tagId\",\"handleDelete\",\"type\",\"message\",\"navigate\",\"invalidateQueries\",\"error\",\"createElement\",\"variant\",\"onConfirm\",\"onCancel\",\"confirmText\"],\"mappings\":\"2BAAmCA,EAA8BC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAjEC,EAAOC,MAAE,CAAA,CAAAC,aAAkBA,IAAEA,CAAM,GAA8BF,EAAAG,IAAA,CAAA,8BAAA,CAAAZ,mBAAAa,CAAA,EAAAb,EAAAa,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,2BAAA,CAAAX,YAAAY,CAAA,EAAAZ,EAAAY,CAAA,EAAAX,wBAAAW,CAAA,EAAAX,EAAAW,CAAA,EAAAV,UAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,UAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,eAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,wBAAA,CAAAN,eAAAO,CAAA,EAAAP,EAAAO,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,QAAA,CAAAE,QAAAD,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,gCAAA,CAAAE,QAAAD,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAO1D,IAAMF,EAAeA,KAC3B,IAAMI,EAAIV,IACJW,EAAWf,IACXgB,EAAuBf,IACvBgB,EAAYd,EAAU,sBACtBe,EAAcb,IACdc,EAASjB,IAETkB,EAAkBrB,EAAoBsB,IAC3C,IAAMC,EAAe,UACpB,GAAI,CACH,MAAML,EAAUI,GAChBL,EAAqB,CAAEO,KAAM,UAAWC,QAASV,EAAE,cAAc,GACjEK,EAAOM,QAAQ,CAAC,qBAChBP,EAAYQ,iBAAiB,CAAC,CAAC,gBAAgB,CAChD,CAAE,MAAOC,EAAO,CACfX,EAAqB,CAAEO,KAAM,QAASC,QAASG,CAAK,EACrD,QAAU,CACTZ,GACD,CACD,EAEAA,EAAST,EAAAsB,aAAA,CAACrB,EAAY,CAACsB,QAAQ,SAASC,UAAWR,EAAcS,SAAUA,IAAMhB,IAAYiB,YAAalB,EAAE,SAAU,GACvH,GAEA,OAAOM,CACR\"}"}