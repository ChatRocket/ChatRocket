{"code":"function module(e,t,n){let r,u,a,i,l,c,s,o,d;let b=[\"enabled\"];n.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){r=e}},0),n.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default(e){u=e}},1),n.export({useWebDAVAccountIntegrationsQuery:()=>f}),n.link(\"@rocket.chat/ui-contexts\",{useUserId(e){a=e},useEndpoint(e){i=e},useStream(e){l=e}},0),n.link(\"@tanstack/react-query\",{useQuery(e){c=e},useQueryClient(e){s=e}},1),n.link(\"react\",{useEffect(e){o=e},useMemo(e){d=e}},2);let f=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{enabled:t=!0}=e,n=u(e,b),f=a(),y=d(()=>[\"webdav\",\"account-integrations\"],[]),h=i(\"GET\",\"/v1/webdav.getMyAccounts\"),k=c(r({queryKey:y,queryFn:async()=>{let{accounts:e}=await h();return e},enabled:!!f&&t,staleTime:1/0},n)),v=s(),m=l(\"notify-user\");return o(()=>{if(f&&t)return m(\"\".concat(f,\"/webdav\"),e=>{let{type:t,account:n}=e;switch(t){case\"changed\":v.invalidateQueries(y);break;case\"removed\":v.setQueryData(y,function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return e.filter(e=>e._id!==n._id)})}})},[t,v,y,f,m]),k}}","map":"{\"version\":3,\"sources\":[\"client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IWebdavAccountIntegration } from '@rocket.chat/core-typings';\\nimport { useUserId, useEndpoint, useStream } from '@rocket.chat/ui-contexts';\\nimport type { UseQueryOptions } from '@tanstack/react-query';\\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\\nimport { useEffect, useMemo } from 'react';\\n\\ntype UseWebDAVAccountIntegrationsQueryOptions = Omit<\\n\\tUseQueryOptions<IWebdavAccountIntegration[], unknown, IWebdavAccountIntegration[], readonly ['webdav', 'account-integrations']>,\\n\\t'queryKey' | 'queryFn'\\n>;\\n\\nexport const useWebDAVAccountIntegrationsQuery = ({ enabled = true, ...options }: UseWebDAVAccountIntegrationsQueryOptions = {}) => {\\n\\tconst uid = useUserId();\\n\\n\\tconst queryKey = useMemo(() => ['webdav', 'account-integrations'] as const, []);\\n\\n\\tconst getMyAccounts = useEndpoint('GET', '/v1/webdav.getMyAccounts');\\n\\n\\tconst integrationsQuery = useQuery({\\n\\t\\tqueryKey,\\n\\t\\tqueryFn: async (): Promise<IWebdavAccountIntegration[]> => {\\n\\t\\t\\tconst { accounts } = await getMyAccounts();\\n\\t\\t\\treturn accounts;\\n\\t\\t},\\n\\t\\tenabled: !!uid && enabled,\\n\\t\\tstaleTime: Infinity,\\n\\t\\t...options,\\n\\t});\\n\\n\\tconst queryClient = useQueryClient();\\n\\n\\tconst subscribeToNotifyUser = useStream('notify-user');\\n\\n\\tuseEffect(() => {\\n\\t\\tif (!uid || !enabled) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\treturn subscribeToNotifyUser(`${uid}/webdav`, ({ type, account }) => {\\n\\t\\t\\tswitch (type) {\\n\\t\\t\\t\\tcase 'changed':\\n\\t\\t\\t\\t\\tqueryClient.invalidateQueries(queryKey);\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase 'removed':\\n\\t\\t\\t\\t\\tqueryClient.setQueryData<IWebdavAccountIntegration[]>(queryKey, (old = []) => {\\n\\t\\t\\t\\t\\t\\treturn old.filter((oldAccount) => oldAccount._id !== account._id);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}, [enabled, queryClient, queryKey, uid, subscribeToNotifyUser]);\\n\\n\\treturn integrationsQuery;\\n};\\n\",null],\"names\":[\"_objectSpread\",\"_objectWithoutProperties\",\"useUserId\",\"useEndpoint\",\"useStream\",\"useQuery\",\"useQueryClient\",\"useEffect\",\"useMemo\",\"module\",\"link\",\"default\",\"v\",\"export\",\"useWebDAVAccountIntegrationsQuery\",\"_ref\",\"arguments\",\"length\",\"undefined\",\"enabled\",\"options\",\"_excluded\",\"uid\",\"queryKey\",\"getMyAccounts\",\"integrationsQuery\",\"queryFn\",\"accounts\",\"staleTime\",\"Infinity\",\"queryClient\",\"subscribeToNotifyUser\",\"concat\",\"_ref2\",\"type\",\"account\",\"invalidateQueries\",\"setQueryData\",\"old\",\"filter\",\"oldAccount\",\"_id\"],\"mappings\":\"2BACAA,EAA6EC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,oBAA3DC,EAAEC,IAAA,CAAA,uCAA8B,CAAAC,QAA2BC,CAAA,EAAAZ,EAAAY,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,iDAAA,CAAAC,QAAAC,CAAA,EAAAX,EAAAW,CAAA,CAAA,EAAA,GAA7EH,EAAOI,MAAE,CAAA,CAAAC,kCAAmCA,IAAMA,CAA2B,GAAAL,EAAAC,IAAA,CAAA,2BAAA,CAAAR,UAAAU,CAAA,EAAAV,EAAAU,CAAA,EAAAT,YAAAS,CAAA,EAAAT,EAAAS,CAAA,EAAAR,UAAAQ,CAAA,EAAAR,EAAAQ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wBAAA,CAAAL,SAAAO,CAAA,EAAAP,EAAAO,CAAA,EAAAN,eAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAAH,UAAAK,CAAA,EAAAL,EAAAK,CAAA,EAAAJ,QAAAI,CAAA,EAAAJ,EAAAI,CAAA,CAAA,EAAA,GAUtE,IAAME,EAAoC,WAAkF,IAAAC,EAAAC,UAAAC,MAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,CAAAA,SAAA,CAAA,EAAA,CAAN,CAAA,EAA3E,CAAEG,QAAAA,EAAU,CAAA,CAAA,CAAgB,CAAAJ,EAAPK,EAAOnB,EAAAc,EAAAM,GACvEC,EAAMpB,IAENqB,EAAWf,EAAQ,IAAM,CAAC,SAAU,uBAAgC,CAAE,EAAE,EAExEgB,EAAgBrB,EAAY,MAAO,4BAEnCsB,EAAoBpB,EAAQL,EAAA,CACjCuB,SAAAA,EACAG,QAAS,UACR,GAAM,CAAEC,SAAAA,CAAAA,CAAU,CAAG,MAAMH,IAC3B,OAAOG,CACR,EACAR,QAAS,CAAC,CAACG,GAAOH,EAClBS,UAAWC,GAAQ,EAChBT,IAGEU,EAAcxB,IAEdyB,EAAwB3B,EAAU,eAsBxC,OApBAG,EAAU,KACT,GAAI,AAACe,GAAQH,EAIb,OAAOY,EAAqB,GAAAC,MAAA,CAAIV,EAAG,WAAWW,IAAsB,GAArB,CAAEC,KAAAA,CAAI,CAAEC,QAAAA,CAAAA,CAAS,CAAAF,EAC/D,OAAQC,GACP,IAAK,UACJJ,EAAYM,iBAAiB,CAACb,GAC9B,KAED,KAAK,UACJO,EAAYO,YAAY,CAA8Bd,EAAU,WAAa,IAAZe,EAAGtB,UAAAC,MAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,CAAAA,SAAA,CAAA,EAAA,CAAG,EAAE,CACxE,OAAOsB,EAAIC,MAAM,CAAEC,GAAeA,EAAWC,GAAG,GAAKN,EAAQM,GAAG,CACjE,EAEF,CACD,EACD,EAAG,CAACtB,EAASW,EAAaP,EAAUD,EAAKS,EAAsB,EAExDN,CACR\"}"}