{"code":"function module(e,n,t){let l,o,i,r,a,u,d,s,c,v,C,p,m,g,f,k,E,b,w,h,A,q,N,_,I,M,y,S,R,V,D,O,B,L,P;t.export({CallProvider:()=>T}),t.link(\"@rocket.chat/core-typings\",{VoipClientEvents(e){l=e},isVoipEventAgentCalled(e){o=e},isVoipEventAgentConnected(e){i=e},isVoipEventCallerJoined(e){r=e},isVoipEventQueueMemberAdded(e){a=e},isVoipEventQueueMemberRemoved(e){u=e},isVoipEventCallAbandoned(e){d=e},UserState(e){s=e}},0),t.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){c=e}},1),t.link(\"@rocket.chat/random\",{Random(e){v=e}},2),t.link(\"@rocket.chat/ui-contexts\",{useRouter(e){C=e},useUser(e){p=e},useSetting(e){m=e},useEndpoint(e){g=e},useStream(e){f=e},useSetOutputMediaDevice(e){k=e},useSetInputMediaDevice(e){E=e},useSetModal(e){b=e},useTranslation(e){w=e}},3),t.link(\"react\",{default(e){h=e},useMemo(e){A=e},useRef(e){q=e},useCallback(e){N=e},useEffect(e){_=e},useState(e){I=e}},4),t.link(\"react-dom\",{createPortal(e){M=e}},5),t.link(\"../../contexts/CallContext\",{CallContext(e){y=e},useIsVoipEnterprise(e){S=e}},6),t.link(\"../../hooks/useDialModal\",{useDialModal(e){R=e}},7),t.link(\"../../hooks/useVoipClient\",{isOutboundClient(e){V=e},useVoipClient(e){D=e}},8),t.link(\"../../lib/rooms/roomCoordinator\",{roomCoordinator(e){O=e}},9),t.link(\"../../lib/voip/parseOutboundPhoneNumber\",{parseOutboundPhoneNumber(e){B=e}},10),t.link(\"../../voip/components/modals/WrapUpCallModal\",{WrapUpCallModal(e){L=e}},11),t.link(\"./hooks/useVoipSounds\",{useVoipSounds(e){P=e}},12);let T=e=>{let{children:n}=e,[t,T]=I(\"unregistered\"),U=m(\"VoIP_Enabled\"),x=f(\"notify-user\"),Q=g(\"POST\",\"/v1/voip/events\"),W=g(\"POST\",\"/v1/livechat/visitor\"),F=g(\"GET\",\"/v1/voip/room\"),j=g(\"POST\",\"/v1/voip/room.close\"),H=g(\"GET\",\"/v1/omnichannel/contact.search\"),G=b(),J=w(),z=D(),K=p(),X=C(),Y=k(),Z=E(),$=S(),ee=q(null),[en,et]=I(0),[el,eo]=I(\"\"),[ei,er]=I({v:{},rid:\"\"}),{openDialModal:ea}=R(),eu=P(),ed=N(async function(){var e;let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};ei&&await j({rid:ei.rid,token:ei.v.token||\"\",options:{comment:null==n?void 0:n.comment,tags:null==n?void 0:n.tags}}),X.navigate(\"/home\");let t=null===(e=z.voipClient)||void 0===e?void 0:e.getAggregator();t&&t.callEnded()},[X,null==z?void 0:z.voipClient,ei,j]),es=N(()=>{G(()=>h.createElement(L,{closeRoom:ed}))},[ed,G]),ec=c(e=>{(null==ee?void 0:ee.current)&&Y({outputDevice:e,HTMLAudioElement:ee.current})}),ev=c(e=>{if(!z.voipClient)return;let n={audio:{deviceId:{exact:e.id}}};z.voipClient.changeAudioInputDevice(n),Z(e)}),[eC,ep]=I(),[em,eg]=I(\"online\");_(()=>{let{voipClient:e}=z||{};if(e)return ep(e.getAggregator()),()=>{if(\"registered\"===t)return e.unregister()}},[z,t]);let ef=N(e=>{O.openRouteLink(\"v\",{rid:e})},[]),ek=N(async e=>{let n=B(e.callerId),{contact:t}=await H({phone:n});if(t)return t;let{visitor:l}=await W({visitor:{token:v.id(),phone:n,name:e.callerName||n}});return l},[H,W]),eE=N(async function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"inbound\";if(!K)return\"\";try{var t;let l=await ek(e),o=await F({token:l.token,agentId:K._id,direction:n});ef(o.room._id),o.room&&er({v:{token:o.room.v.token},rid:o.room._id});let i=null===(t=z.voipClient)||void 0===t?void 0:t.getAggregator();return i&&i.callStarted(),o.room._id}catch(e){return console.error(\"Error while creating a visitor \".concat(e)),\"\"}},[ef,z.voipClient,K,F,ek]);_(()=>{if(!U||!K||!eC)return;let e=async e=>{if(o(e)){let{data:n}=e;eC.callRinging({queuename:n.queue,callerid:n.callerId}),eo(eC.getCurrentQueueName());return}if(i(e)){let{data:n}=e;eC.callPickedup({queuename:n.queue,queuedcalls:n.queuedCalls,waittimeinqueue:n.waitTimeInQueue}),eo(eC.getCurrentQueueName()),et(eC.getCallWaitingCount());return}if(r(e)){let{data:n}=e;eC.queueJoined({queuename:n.queue,callerid:n.callerId,queuedcalls:n.queuedCalls}),et(eC.getCallWaitingCount());return}if(a(e)){let{data:n}=e;eC.memberAdded({queuename:n.queue,queuedcalls:n.queuedCalls}),eo(eC.getCurrentQueueName()),et(eC.getCallWaitingCount());return}if(u(e)){let{data:n}=e;eC.memberRemoved({queuename:n.queue,queuedcalls:n.queuedCalls}),et(eC.getCallWaitingCount());return}if(d(e)){let{data:n}=e;eC.queueAbandoned({queuename:n.queue,queuedcallafterabandon:n.queuedCallAfterAbandon}),eo(eC.getCurrentQueueName()),et(eC.getCallWaitingCount());return}console.warn(\"Unknown event received\")};return x(\"\".concat(K._id,\"/voip.events\"),e)},[x,K,eC,U]),_(()=>{if(U&&K&&eC)return x(\"\".concat(K._id,\"/call.hangup\"),e=>{if(eo(eC.getCurrentQueueName()),$){es();return}ed(),Q({event:l[\"VOIP-CALL-ENDED\"],rid:e.roomId})})},[es,eC,x,K,U,Q,$,ed]),_(()=>{if(!z.voipClient)return;let e=z.voipClient.on(\"registered\",()=>T(\"registered\")),n=z.voipClient.on(\"unregistered\",()=>T(\"unregistered\"));return()=>{e(),n()}},[z.voipClient]),_(()=>{z.voipClient&&ee.current&&z.voipClient.switchMediaRenderer({remoteMediaElement:ee.current})},[z.voipClient]),_(()=>{if(!z.voipClient||!K)return;let e=async e=>{var n;if(!e.callInfo||(eu.stopAll(),e.userState!==s.UAC))return;let{callInfo:t}=e;ee.current&&(null===(n=z.voipClient)||void 0===n||n.switchMediaRenderer({remoteMediaElement:ee.current}));let o=await eE(t,\"outbound\");Q({event:l[\"VOIP-CALL-STARTED\"],rid:o})},n=()=>{\"offline\"===em&&eg(\"online\")},t=()=>{var e,n,t;if(\"online\"===em)switch(eg(\"offline\"),null===(t=z.voipClient)||void 0===t?void 0:t.callerInfo.state){case\"IN_CALL\":case\"ON_HOLD\":null===(e=z.voipClient)||void 0===e||e.endCall();break;case\"OFFER_RECEIVED\":case\"ANSWER_SENT\":null===(n=z.voipClient)||void 0===n||n.rejectCall()}},o=()=>{eu.play(\"outbound-call-ringing\")},i=()=>{eu.play(\"telephone\")},r=()=>{eu.play(\"call-ended\",!1),eu.stopAll()},a=e=>{switch(e){case\"Not Found\":ea({errorMessage:J(\"Dialed_number_doesnt_exist\")});break;case\"Address Incomplete\":ea({errorMessage:J(\"Dialed_number_is_incomplete\")});break;case\"Request Terminated\":break;default:ea({errorMessage:J(\"Something_went_wrong_try_again_later\")})}};return z.voipClient.onNetworkEvent(\"connected\",n),z.voipClient.onNetworkEvent(\"disconnected\",t),z.voipClient.onNetworkEvent(\"connectionerror\",t),z.voipClient.onNetworkEvent(\"localnetworkonline\",n),z.voipClient.onNetworkEvent(\"localnetworkoffline\",t),z.voipClient.on(\"callestablished\",e),z.voipClient.on(\"ringing\",o),z.voipClient.on(\"incomingcall\",i),z.voipClient.on(\"callterminated\",r),V(z.voipClient)&&z.voipClient.on(\"callfailed\",a),()=>{var l,u,d,s,c,v,C,p,m,g;null===(l=z.voipClient)||void 0===l||l.offNetworkEvent(\"connected\",n),null===(u=z.voipClient)||void 0===u||u.offNetworkEvent(\"disconnected\",t),null===(d=z.voipClient)||void 0===d||d.offNetworkEvent(\"connectionerror\",t),null===(s=z.voipClient)||void 0===s||s.offNetworkEvent(\"localnetworkonline\",n),null===(c=z.voipClient)||void 0===c||c.offNetworkEvent(\"localnetworkoffline\",t),null===(v=z.voipClient)||void 0===v||v.off(\"incomingcall\",i),null===(C=z.voipClient)||void 0===C||C.off(\"ringing\",o),null===(p=z.voipClient)||void 0===p||p.off(\"callestablished\",e),null===(m=z.voipClient)||void 0===m||m.off(\"callterminated\",r),V(z.voipClient)&&(null===(g=z.voipClient)||void 0===g||g.off(\"callfailed\",a))}},[eE,Q,em,ea,z.voipClient,eu,J,K]);let eb=A(()=>{if(!U||!(null!=K&&K.extension))return{enabled:!1,ready:!1,outBoundCallsAllowed:void 0,outBoundCallsEnabled:void 0,outBoundCallsEnabledForUser:void 0};if(z.error)return{enabled:!0,ready:!1,error:z.error,outBoundCallsAllowed:void 0,outBoundCallsEnabled:void 0,outBoundCallsEnabledForUser:void 0};if(!z.voipClient)return{enabled:!0,ready:!1,outBoundCallsAllowed:void 0,outBoundCallsEnabled:void 0,outBoundCallsEnabledForUser:void 0};let{registrationInfo:e,voipClient:n}=z;return{outBoundCallsAllowed:$,outBoundCallsEnabled:$,outBoundCallsEnabledForUser:$&&\"registered\"===t&&![\"IN_CALL\",\"ON_HOLD\"].includes(n.callerInfo.state),enabled:!0,ready:!0,openedRoomInfo:ei,voipClient:n,registrationInfo:e,queueCounter:en,queueName:el,actions:{mute:()=>n.muteCall(!0),unmute:()=>n.muteCall(!1),pause:()=>n.holdCall(!0),resume:()=>n.holdCall(!1),end:()=>n.endCall(),pickUp:async()=>ee.current&&n.acceptCall({remoteMediaElement:ee.current}),reject:()=>n.rejectCall()},openRoom:ef,createRoom:eE,closeRoom:ed,networkStatus:em,openWrapUpModal:es,changeAudioOutputDevice:ec,changeAudioInputDevice:ev,register:()=>n.register(),unregister:()=>n.unregister()}},[U,null==K?void 0:K.extension,z,$,t,ei,en,el,ef,eE,ed,es,ec,ev,em]);return h.createElement(y.Provider,{value:eb},n,eb.enabled&&M(h.createElement(\"audio\",{ref:ee},h.createElement(\"track\",{kind:\"captions\"})),document.body))}}","map":"{\"version\":3,\"sources\":[\"client/providers/CallProvider/CallProvider.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IVoipRoom, VoipEventDataSignature, ICallerInfo, ICallDetails, ILivechatVisitor, Serialized } from '@rocket.chat/core-typings';\\nimport {\\n\\tVoipClientEvents,\\n\\tisVoipEventAgentCalled,\\n\\tisVoipEventAgentConnected,\\n\\tisVoipEventCallerJoined,\\n\\tisVoipEventQueueMemberAdded,\\n\\tisVoipEventQueueMemberRemoved,\\n\\tisVoipEventCallAbandoned,\\n\\tUserState,\\n} from '@rocket.chat/core-typings';\\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport { Random } from '@rocket.chat/random';\\nimport type { Device } from '@rocket.chat/ui-contexts';\\nimport {\\n\\tuseRouter,\\n\\tuseUser,\\n\\tuseSetting,\\n\\tuseEndpoint,\\n\\tuseStream,\\n\\tuseSetOutputMediaDevice,\\n\\tuseSetInputMediaDevice,\\n\\tuseSetModal,\\n\\tuseTranslation,\\n} from '@rocket.chat/ui-contexts';\\nimport type { ReactNode } from 'react';\\nimport React, { useMemo, useRef, useCallback, useEffect, useState } from 'react';\\nimport { createPortal } from 'react-dom';\\nimport type { OutgoingByeRequest } from 'sip.js/lib/core';\\n\\nimport type { CallContextValue } from '../../contexts/CallContext';\\nimport { CallContext, useIsVoipEnterprise } from '../../contexts/CallContext';\\nimport { useDialModal } from '../../hooks/useDialModal';\\nimport { isOutboundClient, useVoipClient } from '../../hooks/useVoipClient';\\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\\nimport type { QueueAggregator } from '../../lib/voip/QueueAggregator';\\nimport { parseOutboundPhoneNumber } from '../../lib/voip/parseOutboundPhoneNumber';\\nimport { WrapUpCallModal } from '../../voip/components/modals/WrapUpCallModal';\\nimport { useVoipSounds } from './hooks/useVoipSounds';\\n\\ntype NetworkState = 'online' | 'offline';\\n\\ntype CallProviderProps = {\\n\\tchildren?: ReactNode;\\n};\\n\\nexport const CallProvider = ({ children }: CallProviderProps) => {\\n\\tconst [clientState, setClientState] = useState<'registered' | 'unregistered'>('unregistered');\\n\\n\\tconst voipEnabled = useSetting('VoIP_Enabled');\\n\\tconst subscribeToNotifyUser = useStream('notify-user');\\n\\tconst dispatchEvent = useEndpoint('POST', '/v1/voip/events');\\n\\tconst visitorEndpoint = useEndpoint('POST', '/v1/livechat/visitor');\\n\\tconst voipEndpoint = useEndpoint('GET', '/v1/voip/room');\\n\\tconst voipCloseRoomEndpoint = useEndpoint('POST', '/v1/voip/room.close');\\n\\tconst getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\\n\\tconst setModal = useSetModal();\\n\\tconst t = useTranslation();\\n\\n\\tconst result = useVoipClient();\\n\\tconst user = useUser();\\n\\tconst router = useRouter();\\n\\tconst setOutputMediaDevice = useSetOutputMediaDevice();\\n\\tconst setInputMediaDevice = useSetInputMediaDevice();\\n\\n\\tconst hasVoIPEnterpriseLicense = useIsVoipEnterprise();\\n\\n\\tconst remoteAudioMediaRef = useRef<HTMLAudioElement>(null); // TODO: Create a dedicated file for the AUDIO and make the controls accessible\\n\\n\\tconst [queueCounter, setQueueCounter] = useState(0);\\n\\tconst [queueName, setQueueName] = useState('');\\n\\tconst [roomInfo, setRoomInfo] = useState<{ v: { token?: string }; rid: string }>({ v: {}, rid: '' });\\n\\n\\tconst { openDialModal } = useDialModal();\\n\\n\\tconst voipSounds = useVoipSounds();\\n\\n\\tconst closeRoom = useCallback(\\n\\t\\tasync (data = {}): Promise<void> => {\\n\\t\\t\\troomInfo &&\\n\\t\\t\\t\\t(await voipCloseRoomEndpoint({\\n\\t\\t\\t\\t\\trid: roomInfo.rid,\\n\\t\\t\\t\\t\\ttoken: roomInfo.v.token || '',\\n\\t\\t\\t\\t\\toptions: { comment: data?.comment, tags: data?.tags },\\n\\t\\t\\t\\t}));\\n\\t\\t\\trouter.navigate('/home');\\n\\n\\t\\t\\tconst queueAggregator = result.voipClient?.getAggregator();\\n\\t\\t\\tif (queueAggregator) {\\n\\t\\t\\t\\tqueueAggregator.callEnded();\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t[router, result?.voipClient, roomInfo, voipCloseRoomEndpoint],\\n\\t);\\n\\n\\tconst openWrapUpModal = useCallback((): void => {\\n\\t\\tsetModal(() => <WrapUpCallModal closeRoom={closeRoom} />);\\n\\t}, [closeRoom, setModal]);\\n\\n\\tconst changeAudioOutputDevice = useMutableCallback((selectedAudioDevice: Device): void => {\\n\\t\\tremoteAudioMediaRef?.current &&\\n\\t\\t\\tsetOutputMediaDevice({ outputDevice: selectedAudioDevice, HTMLAudioElement: remoteAudioMediaRef.current });\\n\\t});\\n\\n\\tconst changeAudioInputDevice = useMutableCallback((selectedAudioDevice: Device): void => {\\n\\t\\tif (!result.voipClient) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tconst constraints = { audio: { deviceId: { exact: selectedAudioDevice.id } } };\\n\\n\\t\\t// TODO: Migrate the classes that manage MediaStream to a more react based approach (using contexts/providers perhaps)\\n\\t\\t// For now the MediaStream management is very coupled with the VoIP client,\\n\\t\\t// decoupling it will make it usable by other areas of the project that needs to handle MediaStreams and avoid code duplication\\n\\t\\tresult.voipClient.changeAudioInputDevice(constraints);\\n\\n\\t\\tsetInputMediaDevice(selectedAudioDevice);\\n\\t});\\n\\n\\tconst [queueAggregator, setQueueAggregator] = useState<QueueAggregator>();\\n\\n\\tconst [networkStatus, setNetworkStatus] = useState<NetworkState>('online');\\n\\n\\tuseEffect(() => {\\n\\t\\tconst { voipClient } = result || {};\\n\\n\\t\\tif (!voipClient) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tsetQueueAggregator(voipClient.getAggregator());\\n\\n\\t\\treturn (): void => {\\n\\t\\t\\tif (clientState === 'registered') {\\n\\t\\t\\t\\treturn voipClient.unregister();\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}, [result, clientState]);\\n\\n\\tconst openRoom = useCallback((rid: IVoipRoom['_id']): void => {\\n\\t\\troomCoordinator.openRouteLink('v', { rid });\\n\\t}, []);\\n\\n\\tconst findOrCreateVisitor = useCallback(\\n\\t\\tasync (caller: ICallerInfo): Promise<Serialized<ILivechatVisitor>> => {\\n\\t\\t\\tconst phone = parseOutboundPhoneNumber(caller.callerId);\\n\\n\\t\\t\\tconst { contact } = await getContactBy({ phone });\\n\\n\\t\\t\\tif (contact) {\\n\\t\\t\\t\\treturn contact;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst { visitor } = await visitorEndpoint({\\n\\t\\t\\t\\tvisitor: {\\n\\t\\t\\t\\t\\ttoken: Random.id(),\\n\\t\\t\\t\\t\\tphone,\\n\\t\\t\\t\\t\\tname: caller.callerName || phone,\\n\\t\\t\\t\\t},\\n\\t\\t\\t});\\n\\n\\t\\t\\treturn visitor;\\n\\t\\t},\\n\\t\\t[getContactBy, visitorEndpoint],\\n\\t);\\n\\n\\tconst createRoom = useCallback(\\n\\t\\tasync (caller: ICallerInfo, direction: IVoipRoom['direction'] = 'inbound'): Promise<IVoipRoom['_id']> => {\\n\\t\\t\\tif (!user) {\\n\\t\\t\\t\\treturn '';\\n\\t\\t\\t}\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tconst visitor = await findOrCreateVisitor(caller);\\n\\t\\t\\t\\tconst voipRoom = await voipEndpoint({ token: visitor.token, agentId: user._id, direction });\\n\\t\\t\\t\\topenRoom(voipRoom.room._id);\\n\\t\\t\\t\\tvoipRoom.room && setRoomInfo({ v: { token: voipRoom.room.v.token }, rid: voipRoom.room._id });\\n\\t\\t\\t\\tconst queueAggregator = result.voipClient?.getAggregator();\\n\\t\\t\\t\\tif (queueAggregator) {\\n\\t\\t\\t\\t\\tqueueAggregator.callStarted();\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn voipRoom.room._id;\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tconsole.error(`Error while creating a visitor ${error}`);\\n\\t\\t\\t\\treturn '';\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t[openRoom, result.voipClient, user, voipEndpoint, findOrCreateVisitor],\\n\\t);\\n\\n\\tuseEffect(() => {\\n\\t\\tif (!voipEnabled || !user || !queueAggregator) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst handleEventReceived = async (event: VoipEventDataSignature): Promise<void> => {\\n\\t\\t\\tif (isVoipEventAgentCalled(event)) {\\n\\t\\t\\t\\tconst { data } = event;\\n\\t\\t\\t\\tqueueAggregator.callRinging({ queuename: data.queue, callerid: data.callerId });\\n\\t\\t\\t\\tsetQueueName(queueAggregator.getCurrentQueueName());\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tif (isVoipEventAgentConnected(event)) {\\n\\t\\t\\t\\tconst { data } = event;\\n\\t\\t\\t\\tqueueAggregator.callPickedup({ queuename: data.queue, queuedcalls: data.queuedCalls, waittimeinqueue: data.waitTimeInQueue });\\n\\t\\t\\t\\tsetQueueName(queueAggregator.getCurrentQueueName());\\n\\t\\t\\t\\tsetQueueCounter(queueAggregator.getCallWaitingCount());\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tif (isVoipEventCallerJoined(event)) {\\n\\t\\t\\t\\tconst { data } = event;\\n\\t\\t\\t\\tqueueAggregator.queueJoined({ queuename: data.queue, callerid: data.callerId, queuedcalls: data.queuedCalls });\\n\\t\\t\\t\\tsetQueueCounter(queueAggregator.getCallWaitingCount());\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tif (isVoipEventQueueMemberAdded(event)) {\\n\\t\\t\\t\\tconst { data } = event;\\n\\t\\t\\t\\tqueueAggregator.memberAdded({ queuename: data.queue, queuedcalls: data.queuedCalls });\\n\\t\\t\\t\\tsetQueueName(queueAggregator.getCurrentQueueName());\\n\\t\\t\\t\\tsetQueueCounter(queueAggregator.getCallWaitingCount());\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tif (isVoipEventQueueMemberRemoved(event)) {\\n\\t\\t\\t\\tconst { data } = event;\\n\\t\\t\\t\\tqueueAggregator.memberRemoved({ queuename: data.queue, queuedcalls: data.queuedCalls });\\n\\t\\t\\t\\tsetQueueCounter(queueAggregator.getCallWaitingCount());\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tif (isVoipEventCallAbandoned(event)) {\\n\\t\\t\\t\\tconst { data } = event;\\n\\t\\t\\t\\tqueueAggregator.queueAbandoned({ queuename: data.queue, queuedcallafterabandon: data.queuedCallAfterAbandon });\\n\\t\\t\\t\\tsetQueueName(queueAggregator.getCurrentQueueName());\\n\\t\\t\\t\\tsetQueueCounter(queueAggregator.getCallWaitingCount());\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconsole.warn('Unknown event received');\\n\\t\\t};\\n\\n\\t\\treturn subscribeToNotifyUser(`${user._id}/voip.events`, handleEventReceived);\\n\\t}, [subscribeToNotifyUser, user, queueAggregator, voipEnabled]);\\n\\n\\t// This was causing event duplication before, so we'll leave this here for now\\n\\tuseEffect(() => {\\n\\t\\tif (!voipEnabled || !user || !queueAggregator) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\treturn subscribeToNotifyUser(`${user._id}/call.hangup`, (event): void => {\\n\\t\\t\\tsetQueueName(queueAggregator.getCurrentQueueName());\\n\\n\\t\\t\\tif (hasVoIPEnterpriseLicense) {\\n\\t\\t\\t\\topenWrapUpModal();\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tcloseRoom();\\n\\n\\t\\t\\tdispatchEvent({ event: VoipClientEvents['VOIP-CALL-ENDED'], rid: event.roomId });\\n\\t\\t});\\n\\t}, [openWrapUpModal, queueAggregator, subscribeToNotifyUser, user, voipEnabled, dispatchEvent, hasVoIPEnterpriseLicense, closeRoom]);\\n\\n\\tuseEffect(() => {\\n\\t\\tif (!result.voipClient) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst offRegistered = result.voipClient.on('registered', (): void => setClientState('registered'));\\n\\t\\tconst offUnregistered = result.voipClient.on('unregistered', (): void => setClientState('unregistered'));\\n\\n\\t\\treturn (): void => {\\n\\t\\t\\toffRegistered();\\n\\t\\t\\toffUnregistered();\\n\\t\\t};\\n\\t}, [result.voipClient]);\\n\\n\\tuseEffect(() => {\\n\\t\\tif (!result.voipClient) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t/*\\n\\t\\t * This code may need a revisit when we handle callinqueue differently.\\n\\t\\t * Check clickup tasks for more details\\n\\t\\t * https://app.clickup.com/t/22hy1k4\\n\\t\\t * When customer called a queue (Either using skype or using internal number), call would get established\\n\\t\\t * customer would hear agent's voice but agent would not hear anything from customer.\\n\\t\\t * This issue was observed on unstable. It was found to be inconsistent to reproduce.\\n\\t\\t * On some developer env, it would happen randomly. On Safari it did not happen if\\n\\t\\t * user refreshes before taking every call.\\n\\t\\t *\\n\\t\\t * The reason behind this was as soon as agent accepts a call, queueCounter would change.\\n\\t\\t * This change will trigger re-rendering of media and creation of audio element.\\n\\t\\t * This audio element gets used by voipClient to render the remote audio.\\n\\t\\t * Because the re-render happened, it would hold a stale reference.\\n\\t\\t *\\n\\t\\t * If the dom is inspected, audio element just before body is usually created by this class.\\n\\t\\t * this audio element.srcObject contains null value. In working case, it should display\\n\\t\\t * valid stream object.\\n\\t\\t *\\n\\t\\t * Reason for inconsistencies :\\n\\t\\t * This element is utilized in VoIPUser::setupRemoteMedia\\n\\t\\t * This function is called when webRTC receives a remote track event. i.e when the webrtc's peer connection\\n\\t\\t * starts receiving media. This event call back depends on several factors. How does asterisk setup streams.\\n\\t\\t * How does it creates a bridge which patches up the agent and customer (Media is flowing thru asterisk).\\n\\t\\t * When it works in de-environment, it was observed that the audio element in dom and the audio element hold\\n\\t\\t * by VoIPUser is different. Nonetheless, this stale audio element holds valid media stream, which is being played.\\n\\t\\t * Hence sometimes the audio is heard.\\n\\t\\t *\\n\\t\\t * Ideally call component once gets stable, should not get rerendered. Queue, Room creation are the parameters\\n\\t\\t * which should be independent and should not control the call component.\\n\\t\\t *\\n\\t\\t * Solution :\\n\\t\\t * Either make the audio elemenent rendered independent of rest of the DOM.\\n\\t\\t * or implement useEffect. This useEffect will reset the rendering elements with the latest audio tag.\\n\\t\\t *\\n\\t\\t * Note : If this code gets refactor, revisit the line below to check if this call is needed.\\n\\t\\t *\\n\\t\\t */\\n\\t\\tremoteAudioMediaRef.current && result.voipClient.switchMediaRenderer({ remoteMediaElement: remoteAudioMediaRef.current });\\n\\t}, [result.voipClient]);\\n\\n\\tuseEffect(() => {\\n\\t\\tif (!result.voipClient) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (!user) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst onCallEstablished = async (callDetails: ICallDetails): Promise<undefined> => {\\n\\t\\t\\tif (!callDetails.callInfo) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tvoipSounds.stopAll();\\n\\t\\t\\tif (callDetails.userState !== UserState.UAC) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\t// Agent has sent Invite. So it must create a room.\\n\\t\\t\\tconst { callInfo } = callDetails;\\n\\t\\t\\t// While making the call, there is no remote media element available.\\n\\t\\t\\t// When the call is ringing we have that element created. But we still\\n\\t\\t\\t// do not want it to be attached.\\n\\t\\t\\t// When call gets established, then switch the media renderer.\\n\\t\\t\\tremoteAudioMediaRef.current && result.voipClient?.switchMediaRenderer({ remoteMediaElement: remoteAudioMediaRef.current });\\n\\t\\t\\tconst roomId = await createRoom(callInfo, 'outbound');\\n\\t\\t\\tdispatchEvent({ event: VoipClientEvents['VOIP-CALL-STARTED'], rid: roomId });\\n\\t\\t};\\n\\n\\t\\tconst onNetworkConnected = (): void => {\\n\\t\\t\\tif (networkStatus === 'offline') {\\n\\t\\t\\t\\tsetNetworkStatus('online');\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\tconst onNetworkDisconnected = (): void => {\\n\\t\\t\\t// Transitioning from online -> offline\\n\\t\\t\\t// If there is ongoing call, terminate it or if we are processing an incoming/outgoing call\\n\\t\\t\\t// reject it.\\n\\t\\t\\tif (networkStatus === 'online') {\\n\\t\\t\\t\\tsetNetworkStatus('offline');\\n\\t\\t\\t\\tswitch (result.voipClient?.callerInfo.state) {\\n\\t\\t\\t\\t\\tcase 'IN_CALL':\\n\\t\\t\\t\\t\\tcase 'ON_HOLD':\\n\\t\\t\\t\\t\\t\\tresult.voipClient?.endCall();\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\tcase 'OFFER_RECEIVED':\\n\\t\\t\\t\\t\\tcase 'ANSWER_SENT':\\n\\t\\t\\t\\t\\t\\tresult.voipClient?.rejectCall();\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\tconst onRinging = (): void => {\\n\\t\\t\\tvoipSounds.play('outbound-call-ringing');\\n\\t\\t};\\n\\n\\t\\tconst onIncomingCallRinging = (): void => {\\n\\t\\t\\tvoipSounds.play('telephone');\\n\\t\\t};\\n\\n\\t\\tconst onCallTerminated = (): void => {\\n\\t\\t\\tvoipSounds.play('call-ended', false);\\n\\t\\t\\tvoipSounds.stopAll();\\n\\t\\t};\\n\\n\\t\\tconst onCallFailed = (reason: 'Not Found' | 'Address Incomplete' | 'Request Terminated' | string): void => {\\n\\t\\t\\tswitch (reason) {\\n\\t\\t\\t\\tcase 'Not Found':\\n\\t\\t\\t\\t\\t// This happens when the call matches dialplan and goes to the world, but the trunk doesnt find the number.\\n\\t\\t\\t\\t\\topenDialModal({ errorMessage: t('Dialed_number_doesnt_exist') });\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\tcase 'Address Incomplete':\\n\\t\\t\\t\\t\\t// This happens when the dialed number doesnt match a valid asterisk dialplan pattern or the number is invalid.\\n\\t\\t\\t\\t\\topenDialModal({ errorMessage: t('Dialed_number_is_incomplete') });\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\tcase 'Request Terminated':\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\topenDialModal({ errorMessage: t('Something_went_wrong_try_again_later') });\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\tresult.voipClient.onNetworkEvent('connected', onNetworkConnected);\\n\\t\\tresult.voipClient.onNetworkEvent('disconnected', onNetworkDisconnected);\\n\\t\\tresult.voipClient.onNetworkEvent('connectionerror', onNetworkDisconnected);\\n\\t\\tresult.voipClient.onNetworkEvent('localnetworkonline', onNetworkConnected);\\n\\t\\tresult.voipClient.onNetworkEvent('localnetworkoffline', onNetworkDisconnected);\\n\\t\\tresult.voipClient.on('callestablished', onCallEstablished);\\n\\t\\tresult.voipClient.on('ringing', onRinging); // not called for incoming call\\n\\t\\tresult.voipClient.on('incomingcall', onIncomingCallRinging);\\n\\t\\tresult.voipClient.on('callterminated', onCallTerminated);\\n\\n\\t\\tif (isOutboundClient(result.voipClient)) {\\n\\t\\t\\tresult.voipClient.on('callfailed', onCallFailed);\\n\\t\\t}\\n\\n\\t\\treturn (): void => {\\n\\t\\t\\tresult.voipClient?.offNetworkEvent('connected', onNetworkConnected);\\n\\t\\t\\tresult.voipClient?.offNetworkEvent('disconnected', onNetworkDisconnected);\\n\\t\\t\\tresult.voipClient?.offNetworkEvent('connectionerror', onNetworkDisconnected);\\n\\t\\t\\tresult.voipClient?.offNetworkEvent('localnetworkonline', onNetworkConnected);\\n\\t\\t\\tresult.voipClient?.offNetworkEvent('localnetworkoffline', onNetworkDisconnected);\\n\\t\\t\\tresult.voipClient?.off('incomingcall', onIncomingCallRinging);\\n\\t\\t\\tresult.voipClient?.off('ringing', onRinging);\\n\\t\\t\\tresult.voipClient?.off('callestablished', onCallEstablished);\\n\\t\\t\\tresult.voipClient?.off('callterminated', onCallTerminated);\\n\\n\\t\\t\\tif (isOutboundClient(result.voipClient)) {\\n\\t\\t\\t\\tresult.voipClient?.off('callfailed', onCallFailed);\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}, [createRoom, dispatchEvent, networkStatus, openDialModal, result.voipClient, voipSounds, t, user]);\\n\\n\\tconst contextValue: CallContextValue = useMemo(() => {\\n\\t\\tif (!voipEnabled) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tenabled: false,\\n\\t\\t\\t\\tready: false,\\n\\t\\t\\t\\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\\n\\t\\t\\t\\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\\n\\t\\t\\t\\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\tif (!user?.extension) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tenabled: false,\\n\\t\\t\\t\\tready: false,\\n\\t\\t\\t\\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\\n\\t\\t\\t\\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\\n\\t\\t\\t\\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\tif (result.error) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tenabled: true,\\n\\t\\t\\t\\tready: false,\\n\\t\\t\\t\\terror: result.error,\\n\\t\\t\\t\\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\\n\\t\\t\\t\\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\\n\\t\\t\\t\\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\tif (!result.voipClient) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tenabled: true,\\n\\t\\t\\t\\tready: false,\\n\\t\\t\\t\\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\\n\\t\\t\\t\\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\\n\\t\\t\\t\\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\tconst { registrationInfo, voipClient } = result;\\n\\n\\t\\treturn {\\n\\t\\t\\toutBoundCallsAllowed: hasVoIPEnterpriseLicense, // set to true only if enterprise license is present.\\n\\t\\t\\toutBoundCallsEnabled: hasVoIPEnterpriseLicense, // set to true even if enterprise license is not present.\\n\\t\\t\\toutBoundCallsEnabledForUser:\\n\\t\\t\\t\\thasVoIPEnterpriseLicense && clientState === 'registered' && !['IN_CALL', 'ON_HOLD'].includes(voipClient.callerInfo.state), // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\\n\\n\\t\\t\\tenabled: true,\\n\\t\\t\\tready: true,\\n\\t\\t\\topenedRoomInfo: roomInfo,\\n\\t\\t\\tvoipClient,\\n\\t\\t\\tregistrationInfo,\\n\\t\\t\\tqueueCounter,\\n\\t\\t\\tqueueName,\\n\\t\\t\\tactions: {\\n\\t\\t\\t\\tmute: (): Promise<void> => voipClient.muteCall(true), // voipClient.mute(),\\n\\t\\t\\t\\tunmute: (): Promise<void> => voipClient.muteCall(false), // voipClient.unmute()\\n\\t\\t\\t\\tpause: (): Promise<void> => voipClient.holdCall(true), // voipClient.pause()\\n\\t\\t\\t\\tresume: (): Promise<void> => voipClient.holdCall(false), // voipClient.resume()\\n\\t\\t\\t\\tend: (): Promise<OutgoingByeRequest | void> => voipClient.endCall(),\\n\\t\\t\\t\\tpickUp: async (): Promise<void | null> =>\\n\\t\\t\\t\\t\\tremoteAudioMediaRef.current && voipClient.acceptCall({ remoteMediaElement: remoteAudioMediaRef.current }),\\n\\t\\t\\t\\treject: (): Promise<void> => voipClient.rejectCall(),\\n\\t\\t\\t},\\n\\t\\t\\topenRoom,\\n\\t\\t\\tcreateRoom,\\n\\t\\t\\tcloseRoom,\\n\\t\\t\\tnetworkStatus,\\n\\t\\t\\topenWrapUpModal,\\n\\t\\t\\tchangeAudioOutputDevice,\\n\\t\\t\\tchangeAudioInputDevice,\\n\\t\\t\\tregister: (): void => voipClient.register(),\\n\\t\\t\\tunregister: (): void => voipClient.unregister(),\\n\\t\\t};\\n\\t}, [\\n\\t\\tvoipEnabled,\\n\\t\\tuser?.extension,\\n\\t\\tresult,\\n\\t\\thasVoIPEnterpriseLicense,\\n\\t\\tclientState,\\n\\t\\troomInfo,\\n\\t\\tqueueCounter,\\n\\t\\tqueueName,\\n\\t\\topenRoom,\\n\\t\\tcreateRoom,\\n\\t\\tcloseRoom,\\n\\t\\topenWrapUpModal,\\n\\t\\tchangeAudioOutputDevice,\\n\\t\\tchangeAudioInputDevice,\\n\\t\\tnetworkStatus,\\n\\t]);\\n\\n\\treturn (\\n\\t\\t<CallContext.Provider value={contextValue}>\\n\\t\\t\\t{children}\\n\\t\\t\\t{contextValue.enabled &&\\n\\t\\t\\t\\tcreatePortal(\\n\\t\\t\\t\\t\\t<audio ref={remoteAudioMediaRef}>\\n\\t\\t\\t\\t\\t\\t<track kind='captions' />\\n\\t\\t\\t\\t\\t</audio>,\\n\\t\\t\\t\\t\\tdocument.body,\\n\\t\\t\\t\\t)}\\n\\t\\t</CallContext.Provider>\\n\\t);\\n};\\n\",null],\"names\":[\"VoipClientEvents\",\"isVoipEventAgentCalled\",\"isVoipEventAgentConnected\",\"isVoipEventCallerJoined\",\"isVoipEventQueueMemberAdded\",\"isVoipEventQueueMemberRemoved\",\"isVoipEventCallAbandoned\",\"UserState\",\"useMutableCallback\",\"Random\",\"useRouter\",\"useUser\",\"useSetting\",\"useEndpoint\",\"useStream\",\"useSetOutputMediaDevice\",\"useSetInputMediaDevice\",\"useSetModal\",\"useTranslation\",\"React\",\"useMemo\",\"useRef\",\"useCallback\",\"useEffect\",\"useState\",\"createPortal\",\"CallContext\",\"useIsVoipEnterprise\",\"useDialModal\",\"isOutboundClient\",\"useVoipClient\",\"roomCoordinator\",\"parseOutboundPhoneNumber\",\"WrapUpCallModal\",\"useVoipSounds\",\"module\",\"export\",\"CallProvider\",\"link\",\"v\",\"default\",\"_ref\",\"children\",\"clientState\",\"setClientState\",\"voipEnabled\",\"subscribeToNotifyUser\",\"dispatchEvent\",\"visitorEndpoint\",\"voipEndpoint\",\"voipCloseRoomEndpoint\",\"getContactBy\",\"setModal\",\"t\",\"result\",\"user\",\"router\",\"setOutputMediaDevice\",\"setInputMediaDevice\",\"hasVoIPEnterpriseLicense\",\"remoteAudioMediaRef\",\"queueCounter\",\"setQueueCounter\",\"queueName\",\"setQueueName\",\"roomInfo\",\"setRoomInfo\",\"rid\",\"openDialModal\",\"voipSounds\",\"closeRoom\",\"_result$voipClient\",\"data\",\"arguments\",\"length\",\"undefined\",\"token\",\"options\",\"comment\",\"tags\",\"navigate\",\"queueAggregator\",\"voipClient\",\"getAggregator\",\"callEnded\",\"openWrapUpModal\",\"createElement\",\"changeAudioOutputDevice\",\"selectedAudioDevice\",\"current\",\"outputDevice\",\"HTMLAudioElement\",\"changeAudioInputDevice\",\"constraints\",\"audio\",\"deviceId\",\"exact\",\"id\",\"setQueueAggregator\",\"networkStatus\",\"setNetworkStatus\",\"unregister\",\"openRoom\",\"openRouteLink\",\"findOrCreateVisitor\",\"caller\",\"phone\",\"callerId\",\"contact\",\"visitor\",\"name\",\"callerName\",\"createRoom\",\"direction\",\"_result$voipClient2\",\"voipRoom\",\"agentId\",\"_id\",\"room\",\"callStarted\",\"error\",\"console\",\"concat\",\"handleEventReceived\",\"event\",\"callRinging\",\"queuename\",\"queue\",\"callerid\",\"getCurrentQueueName\",\"callPickedup\",\"queuedcalls\",\"queuedCalls\",\"waittimeinqueue\",\"waitTimeInQueue\",\"getCallWaitingCount\",\"queueJoined\",\"memberAdded\",\"memberRemoved\",\"queueAbandoned\",\"queuedcallafterabandon\",\"queuedCallAfterAbandon\",\"warn\",\"roomId\",\"offRegistered\",\"on\",\"offUnregistered\",\"switchMediaRenderer\",\"remoteMediaElement\",\"onCallEstablished\",\"callDetails\",\"_result$voipClient3\",\"callInfo\",\"stopAll\",\"userState\",\"UAC\",\"onNetworkConnected\",\"onNetworkDisconnected\",\"_result$voipClient5\",\"_result$voipClient6\",\"_result$voipClient4\",\"callerInfo\",\"state\",\"endCall\",\"rejectCall\",\"onRinging\",\"play\",\"onIncomingCallRinging\",\"onCallTerminated\",\"onCallFailed\",\"reason\",\"errorMessage\",\"onNetworkEvent\",\"_result$voipClient7\",\"_result$voipClient8\",\"_result$voipClient9\",\"_result$voipClient10\",\"_result$voipClient11\",\"_result$voipClient12\",\"_result$voipClient13\",\"_result$voipClient14\",\"_result$voipClient15\",\"_result$voipClient16\",\"offNetworkEvent\",\"off\",\"contextValue\",\"extension\",\"enabled\",\"ready\",\"outBoundCallsAllowed\",\"outBoundCallsEnabled\",\"outBoundCallsEnabledForUser\",\"registrationInfo\",\"includes\",\"openedRoomInfo\",\"actions\",\"mute\",\"muteCall\",\"unmute\",\"pause\",\"holdCall\",\"resume\",\"end\",\"pickUp\",\"acceptCall\",\"reject\",\"register\",\"Provider\",\"value\",\"ref\",\"kind\",\"document\",\"body\"],\"mappings\":\"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\"}"}