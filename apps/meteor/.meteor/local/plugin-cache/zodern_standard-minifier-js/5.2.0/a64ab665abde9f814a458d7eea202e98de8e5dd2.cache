{"code":"function module(e,n,t){var i,l,o,a,u,c,s,d,r,m,f,k,h,g,v,b,E,p,M,_,y,L,x,D,R,T,U,B,C=[\"method_id\",\"i18nLabel\"];t.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default:function(e){i=e}},0),t.link(\"@babel/runtime/helpers/objectSpread2\",{default:function(e){l=e}},1),t.link(\"@rocket.chat/core-typings\",{isDiscussionMessage:function(e){o=e},isThreadMainMessage:function(e){a=e},isE2EEMessage:function(e){u=e},isQuoteAttachment:function(e){c=e}},0),t.link(\"@rocket.chat/fuselage\",{MessageBody:function(e){s=e}},1),t.link(\"@rocket.chat/ui-contexts\",{useSetting:function(e){d=e},useTranslation:function(e){r=e},useUserId:function(e){m=e}},2),t.link(\"react\",{default:function(e){f=e},memo:function(e){k=e}},3),t.link(\"../../../../hooks/useUserData\",{useUserData:function(e){h=e}},4),t.link(\"../../../../views/room/contexts/ChatContext\",{useChat:function(e){g=e}},5),t.link(\"../../MessageContentBody\",{default:function(e){v=e}},6),t.link(\"../../ReadReceiptIndicator\",{default:function(e){b=e}},7),t.link(\"../../content/Attachments\",{default:function(e){E=e}},8),t.link(\"../../content/BroadcastMetrics\",{default:function(e){p=e}},9),t.link(\"../../content/DiscussionMetrics\",{default:function(e){M=e}},10),t.link(\"../../content/Location\",{default:function(e){_=e}},11),t.link(\"../../content/MessageActions\",{default:function(e){y=e}},12),t.link(\"../../content/Reactions\",{default:function(e){L=e}},13),t.link(\"../../content/ThreadMetrics\",{default:function(e){x=e}},14),t.link(\"../../content/UrlPreviews\",{default:function(e){D=e}},15),t.link(\"../../hooks/useNormalizedMessage\",{useNormalizedMessage:function(e){R=e}},16),t.link(\"../../hooks/useOembedLayout\",{useOembedLayout:function(e){T=e}},17),t.link(\"../../hooks/useSubscriptionFromMessageQuery\",{useSubscriptionFromMessageQuery:function(e){U=e}},18),t.link(\"../../uikit/UiKitMessageBlock\",{default:function(e){B=e}},19),t.exportDefault(k(function(e){var n,t,k,F,O,S,j,w,A,I,Q,z,N=e.message,P=e.unread,K=e.all,W=e.mention,q=e.searchText,G=u(N),H=T().enabled,J=null!==(n=U(N).data)&&void 0!==n?n:void 0,V=null!==(t=null==J?void 0:J.broadcast)&&void 0!==t&&t,X=m(),Y=l(l({},N.u),{},{roles:[]},h(N.u._id)),Z=d(\"Message_Read_Receipt_Enabled\",!1),$=g(),ee=r(),en=R(N),et=G&&(null==en?void 0:en.e2e)===\"pending\",ei=(null==en?void 0:null===(k=en.attachments)||void 0===k?void 0:k.filter(c))||[],el=(null==en?void 0:null===(F=en.attachments)||void 0===F?void 0:F.filter(function(e){return!c(e)}))||[];return f.createElement(f.Fragment,null,et&&f.createElement(s,null,ee(\"E2E_message_encrypted_placeholder\")),!!(null!=ei&&ei.length)&&f.createElement(E,{attachments:ei}),!(null!==(O=en.blocks)&&void 0!==O&&O.length)&&!!(null!==(S=en.md)&&void 0!==S&&S.length)&&f.createElement(f.Fragment,null,(!G||\"done\"===en.e2e)&&f.createElement(v,{id:en._id+\"-content\",md:en.md,mentions:en.mentions,channels:en.channels,searchText:q})),!!el&&f.createElement(E,{id:null===(j=N.files)||void 0===j?void 0:null===(w=j[0])||void 0===w?void 0:w._id,attachments:el}),en.blocks&&f.createElement(B,{rid:en.rid,mid:en._id,blocks:en.blocks}),H&&!!(null!==(A=en.urls)&&void 0!==A&&A.length)&&f.createElement(D,{urls:en.urls}),(null===(I=en.actionLinks)||void 0===I?void 0:I.length)&&f.createElement(y,{message:en,actions:en.actionLinks.map(function(e){var n=e.method_id,t=e.i18nLabel,o=i(e,C);return l({methodId:n,i18nLabel:t},o)})}),en.reactions&&Object.keys(en.reactions).length&&f.createElement(L,{message:en}),$&&a(en)&&f.createElement(x,{counter:en.tcount,following:!!(X&&(null==en?void 0:null===(Q=en.replies)||void 0===Q?void 0:Q.indexOf(X))>-1),mid:en._id,rid:en.rid,lm:en.tlm,unread:P,mention:W,all:K,participants:null==en?void 0:null===(z=en.replies)||void 0===z?void 0:z.length}),o(en)&&f.createElement(M,{count:en.dcount,drid:en.drid,lm:en.dlm,rid:en.rid}),en.location&&f.createElement(_,{location:en.location}),V&&!!Y.username&&en.u._id!==X&&f.createElement(p,{username:Y.username,message:en}),Z&&f.createElement(b,{mid:en._id,unread:en.unread}))}))}","map":"{\"version\":3,\"sources\":[\"client/components/message/variants/room/RoomMessageContent.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { IMessage } from '@rocket.chat/core-typings';\\nimport { isDiscussionMessage, isThreadMainMessage, isE2EEMessage, isQuoteAttachment } from '@rocket.chat/core-typings';\\nimport { MessageBody } from '@rocket.chat/fuselage';\\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\\nimport { useSetting, useTranslation, useUserId } from '@rocket.chat/ui-contexts';\\nimport type { ReactElement } from 'react';\\nimport React, { memo } from 'react';\\n\\nimport { useUserData } from '../../../../hooks/useUserData';\\nimport type { UserPresence } from '../../../../lib/presence';\\nimport { useChat } from '../../../../views/room/contexts/ChatContext';\\nimport MessageContentBody from '../../MessageContentBody';\\nimport ReadReceiptIndicator from '../../ReadReceiptIndicator';\\nimport Attachments from '../../content/Attachments';\\nimport BroadcastMetrics from '../../content/BroadcastMetrics';\\nimport DiscussionMetrics from '../../content/DiscussionMetrics';\\nimport Location from '../../content/Location';\\nimport MessageActions from '../../content/MessageActions';\\nimport Reactions from '../../content/Reactions';\\nimport ThreadMetrics from '../../content/ThreadMetrics';\\nimport UrlPreviews from '../../content/UrlPreviews';\\nimport { useNormalizedMessage } from '../../hooks/useNormalizedMessage';\\nimport { useOembedLayout } from '../../hooks/useOembedLayout';\\nimport { useSubscriptionFromMessageQuery } from '../../hooks/useSubscriptionFromMessageQuery';\\nimport UiKitMessageBlock from '../../uikit/UiKitMessageBlock';\\n\\ntype RoomMessageContentProps = {\\n\\tmessage: IMessage;\\n\\tunread: boolean;\\n\\tmention: boolean;\\n\\tall: boolean;\\n\\tsearchText?: string;\\n};\\n\\nconst RoomMessageContent = ({ message, unread, all, mention, searchText }: RoomMessageContentProps): ReactElement => {\\n\\tconst encrypted = isE2EEMessage(message);\\n\\tconst { enabled: oembedEnabled } = useOembedLayout();\\n\\tconst subscription = useSubscriptionFromMessageQuery(message).data ?? undefined;\\n\\tconst broadcast = subscription?.broadcast ?? false;\\n\\tconst uid = useUserId();\\n\\tconst messageUser: UserPresence = { ...message.u, roles: [], ...useUserData(message.u._id) };\\n\\tconst readReceiptEnabled = useSetting('Message_Read_Receipt_Enabled', false);\\n\\tconst chat = useChat();\\n\\tconst t = useTranslation();\\n\\n\\tconst normalizedMessage = useNormalizedMessage(message);\\n\\tconst isMessageEncrypted = encrypted && normalizedMessage?.e2e === 'pending';\\n\\n\\tconst quotes = normalizedMessage?.attachments?.filter(isQuoteAttachment) || [];\\n\\n\\tconst attachments = normalizedMessage?.attachments?.filter((attachment) => !isQuoteAttachment(attachment)) || [];\\n\\n\\treturn (\\n\\t\\t<>\\n\\t\\t\\t{isMessageEncrypted && <MessageBody>{t('E2E_message_encrypted_placeholder')}</MessageBody>}\\n\\n\\t\\t\\t{!!quotes?.length && <Attachments attachments={quotes} />}\\n\\n\\t\\t\\t{!normalizedMessage.blocks?.length && !!normalizedMessage.md?.length && (\\n\\t\\t\\t\\t<>\\n\\t\\t\\t\\t\\t{(!encrypted || normalizedMessage.e2e === 'done') && (\\n\\t\\t\\t\\t\\t\\t<MessageContentBody\\n\\t\\t\\t\\t\\t\\t\\tid={`${normalizedMessage._id}-content`}\\n\\t\\t\\t\\t\\t\\t\\tmd={normalizedMessage.md}\\n\\t\\t\\t\\t\\t\\t\\tmentions={normalizedMessage.mentions}\\n\\t\\t\\t\\t\\t\\t\\tchannels={normalizedMessage.channels}\\n\\t\\t\\t\\t\\t\\t\\tsearchText={searchText}\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t</>\\n\\t\\t\\t)}\\n\\n\\t\\t\\t{!!attachments && <Attachments id={message.files?.[0]?._id} attachments={attachments} />}\\n\\n\\t\\t\\t{normalizedMessage.blocks && (\\n\\t\\t\\t\\t<UiKitMessageBlock rid={normalizedMessage.rid} mid={normalizedMessage._id} blocks={normalizedMessage.blocks} />\\n\\t\\t\\t)}\\n\\n\\t\\t\\t{oembedEnabled && !!normalizedMessage.urls?.length && <UrlPreviews urls={normalizedMessage.urls} />}\\n\\n\\t\\t\\t{normalizedMessage.actionLinks?.length && (\\n\\t\\t\\t\\t<MessageActions\\n\\t\\t\\t\\t\\tmessage={normalizedMessage}\\n\\t\\t\\t\\t\\tactions={normalizedMessage.actionLinks.map(({ method_id: methodId, i18nLabel, ...action }) => ({\\n\\t\\t\\t\\t\\t\\tmethodId,\\n\\t\\t\\t\\t\\t\\ti18nLabel: i18nLabel as TranslationKey,\\n\\t\\t\\t\\t\\t\\t...action,\\n\\t\\t\\t\\t\\t}))}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t)}\\n\\n\\t\\t\\t{normalizedMessage.reactions && Object.keys(normalizedMessage.reactions).length && <Reactions message={normalizedMessage} />}\\n\\n\\t\\t\\t{chat && isThreadMainMessage(normalizedMessage) && (\\n\\t\\t\\t\\t<ThreadMetrics\\n\\t\\t\\t\\t\\tcounter={normalizedMessage.tcount}\\n\\t\\t\\t\\t\\tfollowing={Boolean(uid && normalizedMessage?.replies?.indexOf(uid) > -1)}\\n\\t\\t\\t\\t\\tmid={normalizedMessage._id}\\n\\t\\t\\t\\t\\trid={normalizedMessage.rid}\\n\\t\\t\\t\\t\\tlm={normalizedMessage.tlm}\\n\\t\\t\\t\\t\\tunread={unread}\\n\\t\\t\\t\\t\\tmention={mention}\\n\\t\\t\\t\\t\\tall={all}\\n\\t\\t\\t\\t\\tparticipants={normalizedMessage?.replies?.length}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t)}\\n\\n\\t\\t\\t{isDiscussionMessage(normalizedMessage) && (\\n\\t\\t\\t\\t<DiscussionMetrics\\n\\t\\t\\t\\t\\tcount={normalizedMessage.dcount}\\n\\t\\t\\t\\t\\tdrid={normalizedMessage.drid}\\n\\t\\t\\t\\t\\tlm={normalizedMessage.dlm}\\n\\t\\t\\t\\t\\trid={normalizedMessage.rid}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t)}\\n\\n\\t\\t\\t{normalizedMessage.location && <Location location={normalizedMessage.location} />}\\n\\n\\t\\t\\t{broadcast && !!messageUser.username && normalizedMessage.u._id !== uid && (\\n\\t\\t\\t\\t<BroadcastMetrics username={messageUser.username} message={normalizedMessage} />\\n\\t\\t\\t)}\\n\\n\\t\\t\\t{readReceiptEnabled && <ReadReceiptIndicator mid={normalizedMessage._id} unread={normalizedMessage.unread} />}\\n\\t\\t</>\\n\\t);\\n};\\n\\nexport default memo(RoomMessageContent);\\n\",null],\"names\":[\"_objectWithoutProperties\",\"_objectSpread\",\"isDiscussionMessage\",\"isThreadMainMessage\",\"isE2EEMessage\",\"isQuoteAttachment\",\"MessageBody\",\"useSetting\",\"useTranslation\",\"useUserId\",\"React\",\"memo\",\"useUserData\",\"useChat\",\"MessageContentBody\",\"ReadReceiptIndicator\",\"Attachments\",\"BroadcastMetrics\",\"DiscussionMetrics\",\"Location\",\"MessageActions\",\"Reactions\",\"ThreadMetrics\",\"UrlPreviews\",\"useNormalizedMessage\",\"useOembedLayout\",\"useSubscriptionFromMessageQuery\",\"UiKitMessageBlock\",\"module\",\"link\",\"default\",\"v\",\"exportDefault\",\"_ref\",\"_useSubscriptionFromM\",\"_subscription$broadca\",\"_normalizedMessage$at\",\"_normalizedMessage$at2\",\"_normalizedMessage$bl\",\"_normalizedMessage$md\",\"_message$files\",\"_message$files$\",\"_normalizedMessage$ur\",\"_normalizedMessage$ac\",\"_normalizedMessage$re\",\"_normalizedMessage$re2\",\"message\",\"unread\",\"all\",\"mention\",\"searchText\",\"encrypted\",\"oembedEnabled\",\"_useOembedLayout\",\"enabled\",\"subscription\",\"data\",\"undefined\",\"broadcast\",\"uid\",\"messageUser\",\"u\",\"roles\",\"_id\",\"readReceiptEnabled\",\"chat\",\"t\",\"normalizedMessage\",\"isMessageEncrypted\",\"e2e\",\"quotes\",\"attachments\",\"filter\",\"attachment\",\"createElement\",\"Fragment\",\"length\",\"blocks\",\"md\",\"id\",\"mentions\",\"channels\",\"files\",\"rid\",\"mid\",\"urls\",\"actionLinks\",\"actions\",\"map\",\"_ref2\",\"methodId\",\"method_id\",\"i18nLabel\",\"action\",\"_excluded\",\"reactions\",\"Object\",\"keys\",\"counter\",\"tcount\",\"following\",\"Boolean\",\"replies\",\"indexOf\",\"lm\",\"tlm\",\"participants\",\"count\",\"dcount\",\"drid\",\"dlm\",\"location\",\"username\"],\"mappings\":\"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\"}"}