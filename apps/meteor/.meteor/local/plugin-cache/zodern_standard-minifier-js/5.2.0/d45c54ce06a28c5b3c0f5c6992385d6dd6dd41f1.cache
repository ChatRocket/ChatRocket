{"code":"function module(e,t,l){let i,n,a,c,s,r,o,d,m,u;l.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){i=e}},0),l.link(\"@rocket.chat/fuselage\",{Box(e){n=e},Icon(e){a=e},TextInput(e){c=e}},0),l.link(\"@rocket.chat/ui-client\",{MultiSelectCustom(e){s=e}},1),l.link(\"react\",{default(e){r=e},useCallback(e){o=e},useMemo(e){d=e},useState(e){m=e}},2),l.link(\"react-i18next\",{useTranslation(e){u=e}},3);let x=[{id:\"filter_by_room\",text:\"Filter_by_room\",isGroupTitle:!0},{id:\"d\",text:\"Direct_Message\",checked:!1},{id:\"discussions\",text:\"Discussions\",checked:!1},{id:\"l\",text:\"Omnichannel\",checked:!1},{id:\"p\",text:\"Private_Channels\",checked:!1},{id:\"c\",text:\"Public_Channels\",checked:!1},{id:\"teams\",text:\"Teams\",checked:!1}];l.exportDefault(e=>{let{setFilters:t}=e,{t:l}=u(),[h,p]=m(\"\"),[f,k]=m([]),b=d(()=>x.map(e=>i(i({},e),{},{checked:f.some(t=>t.id===e.id)})),[f]),T=o(e=>{let l=e.currentTarget.value;t({searchText:l,types:f}),p(l)},[f,t]),_=o(e=>{t({searchText:h,types:e}),k(e)},[h,t]);return r.createElement(n,{is:\"form\",onSubmit:o(e=>e.preventDefault(),[]),mb:\"x8\",display:\"flex\",flexWrap:\"wrap\",alignItems:\"center\",justifyContent:\"center\"},r.createElement(n,{minWidth:\"x224\",display:\"flex\",m:\"x4\",flexGrow:2},r.createElement(c,{name:\"search-rooms\",alignItems:\"center\",placeholder:l(\"Search_rooms\"),addon:r.createElement(a,{name:\"magnifier\",size:\"x20\"}),onChange:T,value:h})),r.createElement(n,{minWidth:\"x224\",m:\"x4\"},r.createElement(s,{dropdownOptions:b,defaultTitle:\"All_rooms\",selectedOptionsTitle:\"Rooms\",setSelectedOptions:_,selectedOptions:f})))})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/rooms/RoomsTableFilters.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { Box, Icon, TextInput } from '@rocket.chat/fuselage';\\nimport type { OptionProp } from '@rocket.chat/ui-client';\\nimport { MultiSelectCustom } from '@rocket.chat/ui-client';\\nimport React, { useCallback, useMemo, useState } from 'react';\\nimport type { Dispatch, ReactElement, SetStateAction } from 'react';\\nimport { useTranslation } from 'react-i18next';\\n\\nconst initialRoomTypeFilterStructure = [\\n\\t{\\n\\t\\tid: 'filter_by_room',\\n\\t\\ttext: 'Filter_by_room',\\n\\t\\tisGroupTitle: true,\\n\\t},\\n\\t{\\n\\t\\tid: 'd',\\n\\t\\ttext: 'Direct_Message',\\n\\t\\tchecked: false,\\n\\t},\\n\\t{\\n\\t\\tid: 'discussions',\\n\\t\\ttext: 'Discussions',\\n\\t\\tchecked: false,\\n\\t},\\n\\t{\\n\\t\\tid: 'l',\\n\\t\\ttext: 'Omnichannel',\\n\\t\\tchecked: false,\\n\\t},\\n\\t{\\n\\t\\tid: 'p',\\n\\t\\ttext: 'Private_Channels',\\n\\t\\tchecked: false,\\n\\t},\\n\\t{\\n\\t\\tid: 'c',\\n\\t\\ttext: 'Public_Channels',\\n\\t\\tchecked: false,\\n\\t},\\n\\t{\\n\\t\\tid: 'teams',\\n\\t\\ttext: 'Teams',\\n\\t\\tchecked: false,\\n\\t},\\n] as OptionProp[];\\n\\nconst RoomsTableFilters = ({ setFilters }: { setFilters: Dispatch<SetStateAction<any>> }): ReactElement => {\\n\\tconst { t } = useTranslation();\\n\\tconst [text, setText] = useState('');\\n\\n\\tconst [roomTypeSelectedOptions, setRoomTypeSelectedOptions] = useState<OptionProp[]>([]);\\n\\n\\tconst roomTypeFilterStructure = useMemo(() => {\\n\\t\\treturn initialRoomTypeFilterStructure.map((option) => ({\\n\\t\\t\\t...option,\\n\\t\\t\\tchecked: roomTypeSelectedOptions.some((selectedOption) => selectedOption.id === option.id),\\n\\t\\t}));\\n\\t}, [roomTypeSelectedOptions]);\\n\\n\\tconst handleSearchTextChange = useCallback(\\n\\t\\t(event) => {\\n\\t\\t\\tconst text = event.currentTarget.value;\\n\\t\\t\\tsetFilters({ searchText: text, types: roomTypeSelectedOptions });\\n\\t\\t\\tsetText(text);\\n\\t\\t},\\n\\t\\t[roomTypeSelectedOptions, setFilters],\\n\\t);\\n\\n\\tconst handleRoomTypeChange = useCallback(\\n\\t\\t(options: OptionProp[]) => {\\n\\t\\t\\tsetFilters({ searchText: text, types: options });\\n\\t\\t\\tsetRoomTypeSelectedOptions(options);\\n\\t\\t},\\n\\t\\t[text, setFilters],\\n\\t);\\n\\n\\treturn (\\n\\t\\t<Box\\n\\t\\t\\tis='form'\\n\\t\\t\\tonSubmit={useCallback((e) => e.preventDefault(), [])}\\n\\t\\t\\tmb='x8'\\n\\t\\t\\tdisplay='flex'\\n\\t\\t\\tflexWrap='wrap'\\n\\t\\t\\talignItems='center'\\n\\t\\t\\tjustifyContent='center'\\n\\t\\t>\\n\\t\\t\\t<Box minWidth='x224' display='flex' m='x4' flexGrow={2}>\\n\\t\\t\\t\\t<TextInput\\n\\t\\t\\t\\t\\tname='search-rooms'\\n\\t\\t\\t\\t\\talignItems='center'\\n\\t\\t\\t\\t\\tplaceholder={t('Search_rooms')}\\n\\t\\t\\t\\t\\taddon={<Icon name='magnifier' size='x20' />}\\n\\t\\t\\t\\t\\tonChange={handleSearchTextChange}\\n\\t\\t\\t\\t\\tvalue={text}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</Box>\\n\\t\\t\\t<Box minWidth='x224' m='x4'>\\n\\t\\t\\t\\t<MultiSelectCustom\\n\\t\\t\\t\\t\\tdropdownOptions={roomTypeFilterStructure}\\n\\t\\t\\t\\t\\tdefaultTitle='All_rooms'\\n\\t\\t\\t\\t\\tselectedOptionsTitle='Rooms'\\n\\t\\t\\t\\t\\tsetSelectedOptions={handleRoomTypeChange}\\n\\t\\t\\t\\t\\tselectedOptions={roomTypeSelectedOptions}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</Box>\\n\\t\\t</Box>\\n\\t);\\n};\\n\\nexport default RoomsTableFilters;\\n\",null],\"names\":[\"_objectSpread\",\"Box\",\"Icon\",\"TextInput\",\"MultiSelectCustom\",\"React\",\"useCallback\",\"useMemo\",\"useState\",\"useTranslation\",\"module\",\"link\",\"default\",\"v\",\"initialRoomTypeFilterStructure\",\"id\",\"text\",\"isGroupTitle\",\"checked\",\"exportDefault\",\"_ref\",\"setFilters\",\"t\",\"setText\",\"roomTypeSelectedOptions\",\"setRoomTypeSelectedOptions\",\"roomTypeFilterStructure\",\"map\",\"option\",\"some\",\"selectedOption\",\"handleSearchTextChange\",\"event\",\"currentTarget\",\"value\",\"searchText\",\"types\",\"handleRoomTypeChange\",\"options\",\"createElement\",\"is\",\"onSubmit\",\"e\",\"preventDefault\",\"mb\",\"display\",\"flexWrap\",\"alignItems\",\"justifyContent\",\"minWidth\",\"m\",\"flexGrow\",\"name\",\"placeholder\",\"addon\",\"size\",\"onChange\",\"dropdownOptions\",\"defaultTitle\",\"selectedOptionsTitle\",\"setSelectedOptions\",\"selectedOptions\"],\"mappings\":\"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\"}"}