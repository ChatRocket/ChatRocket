{"code":"function module(e,t,r){let s,o;r.export({useMemberExists:()=>n}),r.link(\"@rocket.chat/ui-contexts\",{useEndpoint(e){s=e}},0),r.link(\"@tanstack/react-query\",{useQuery(e){o=e}},1);let n=e=>{let{roomId:t,username:r}=e,n=s(\"GET\",\"/v1/rooms.isMember\");return o([\"rooms/isMember\",t,r],()=>n({roomId:t,username:r}))}}","map":"{\"version\":3,\"sources\":[\"client/views/hooks/useMemberExists.ts\",\"<anon>\"],\"sourcesContent\":[\"import { useEndpoint } from '@rocket.chat/ui-contexts';\\nimport { useQuery } from '@tanstack/react-query';\\n\\ntype UseMemberExistsProps = { roomId: string; username: string };\\n\\nexport const useMemberExists = ({ roomId, username }: UseMemberExistsProps) => {\\n\\tconst checkMember = useEndpoint('GET', '/v1/rooms.isMember');\\n\\n\\treturn useQuery(['rooms/isMember', roomId, username], () => checkMember({ roomId, username }));\\n};\\n\",null],\"names\":[\"useEndpoint\",\"useQuery\",\"module\",\"export\",\"useMemberExists\",\"link\",\"v\",\"_ref\",\"roomId\",\"username\",\"checkMember\"],\"mappings\":\"2BAAuDA,EAAAC,EAAvDC,EAAOC,MAAE,CAAA,CAAAC,gBAAmBA,IAAAA,CAAA,GAA2BF,EAAAG,IAAA,CAAA,2BAAA,CAAAL,YAAAM,CAAA,EAAAN,EAAAM,CAAA,CAAA,EAAA,GAAAJ,EAAAG,IAAA,CAAA,wBAAA,CAAAJ,SAAAK,CAAA,EAAAL,EAAAK,CAAA,CAAA,EAAA,GAKhD,IAAMF,EAAkBG,IAA+C,GAA9C,CAAEC,OAAAA,CAAM,CAAEC,SAAAA,CAAAA,CAAgC,CAAAF,EACnEG,EAAcV,EAAY,MAAO,sBAEvC,OAAOC,EAAS,CAAC,iBAAkBO,EAAQC,EAAS,CAAE,IAAMC,EAAY,CAAEF,OAAAA,EAAQC,SAAAA,CAAQ,GAC3F\"}"}