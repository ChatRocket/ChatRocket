{"code":"function module(e,n,o){let i,t,s;o.export({VideoConfContext:()=>l,useVideoConfDispatchOutgoing:()=>u,useVideoConfDismissOutgoing:()=>C,useVideoConfStartCall:()=>a,useVideoConfAcceptCall:()=>d,useVideoConfJoinCall:()=>f,useVideoConfDismissCall:()=>c,useVideoConfAbortCall:()=>g,useVideoConfRejectIncomingCall:()=>V,useVideoConfIncomingCalls:()=>m,useVideoConfSetPreferences:()=>p,useVideoConfIsRinging:()=>b,useVideoConfIsCalling:()=>x,useVideoConfCapabilities:()=>I,useVideoConfPreferences:()=>v,useVideoConfManager:()=>O}),o.link(\"react\",{createContext(e){i=e},useContext(e){t=e}},0),o.link(\"use-subscription\",{useSubscription(e){s=e}},1);let l=i(void 0),r=()=>{let e=t(l);if(!e)throw Error(\"Must be running in VideoConf Context\");return e},u=()=>r().dispatchOutgoing,C=()=>r().dismissOutgoing,a=()=>r().startCall,d=()=>r().acceptCall,f=()=>r().joinCall,c=()=>r().dismissCall,g=()=>r().abortCall,V=()=>r().rejectIncomingCall,m=()=>{let{queryIncomingCalls:e}=r();return s(e)},p=()=>r().setPreferences,b=()=>{let{queryRinging:e}=r();return s(e)},x=()=>{let{queryCalling:e}=r();return s(e)},I=()=>{let{queryCapabilities:e}=r();return s(e)},v=()=>{let{queryPreferences:e}=r();return s(e)},O=()=>{var e;return null===(e=t(l))||void 0===e?void 0:e.manager}}","map":"{\"version\":3,\"sources\":[\"client/contexts/VideoConfContext.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom } from '@rocket.chat/core-typings';\\nimport { createContext, useContext } from 'react';\\nimport type { Subscription } from 'use-subscription';\\nimport { useSubscription } from 'use-subscription';\\n\\nimport type { DirectCallData, ProviderCapabilities, CallPreferences, VideoConfManager } from '../lib/VideoConfManager';\\n\\nexport type VideoConfPopupPayload = {\\n\\tid: string;\\n\\trid: IRoom['_id'];\\n\\tisReceiving?: boolean;\\n};\\n\\ntype VideoConfContextValue = {\\n\\tmanager: typeof VideoConfManager;\\n\\tdispatchOutgoing: (options: Omit<VideoConfPopupPayload, 'id'>) => void;\\n\\tdismissOutgoing: () => void;\\n\\tstartCall: (rid: IRoom['_id'], title?: string) => void;\\n\\tacceptCall: (callId: string) => void;\\n\\tjoinCall: (callId: string) => void;\\n\\tdismissCall: (callId: string) => void;\\n\\trejectIncomingCall: (callId: string) => void;\\n\\tabortCall: () => void;\\n\\tsetPreferences: (prefs: { mic?: boolean; cam?: boolean }) => void;\\n\\tqueryIncomingCalls: Subscription<DirectCallData[]>;\\n\\tqueryRinging: Subscription<boolean>;\\n\\tqueryCalling: Subscription<boolean>;\\n\\tqueryCapabilities: Subscription<ProviderCapabilities>;\\n\\tqueryPreferences: Subscription<CallPreferences>;\\n};\\n\\nexport const VideoConfContext = createContext<VideoConfContextValue | undefined>(undefined);\\nconst useVideoConfContext = (): VideoConfContextValue => {\\n\\tconst context = useContext(VideoConfContext);\\n\\tif (!context) {\\n\\t\\tthrow new Error('Must be running in VideoConf Context');\\n\\t}\\n\\n\\treturn context;\\n};\\n\\nexport const useVideoConfDispatchOutgoing = (): VideoConfContextValue['dispatchOutgoing'] => useVideoConfContext().dispatchOutgoing;\\nexport const useVideoConfDismissOutgoing = (): VideoConfContextValue['dismissOutgoing'] => useVideoConfContext().dismissOutgoing;\\nexport const useVideoConfStartCall = (): VideoConfContextValue['startCall'] => useVideoConfContext().startCall;\\nexport const useVideoConfAcceptCall = (): VideoConfContextValue['acceptCall'] => useVideoConfContext().acceptCall;\\nexport const useVideoConfJoinCall = (): VideoConfContextValue['joinCall'] => useVideoConfContext().joinCall;\\nexport const useVideoConfDismissCall = (): VideoConfContextValue['dismissCall'] => useVideoConfContext().dismissCall;\\nexport const useVideoConfAbortCall = (): VideoConfContextValue['abortCall'] => useVideoConfContext().abortCall;\\nexport const useVideoConfRejectIncomingCall = (): VideoConfContextValue['rejectIncomingCall'] => useVideoConfContext().rejectIncomingCall;\\nexport const useVideoConfIncomingCalls = (): DirectCallData[] => {\\n\\tconst { queryIncomingCalls } = useVideoConfContext();\\n\\treturn useSubscription(queryIncomingCalls);\\n};\\nexport const useVideoConfSetPreferences = (): VideoConfContextValue['setPreferences'] => useVideoConfContext().setPreferences;\\nexport const useVideoConfIsRinging = (): boolean => {\\n\\tconst { queryRinging } = useVideoConfContext();\\n\\treturn useSubscription(queryRinging);\\n};\\nexport const useVideoConfIsCalling = (): boolean => {\\n\\tconst { queryCalling } = useVideoConfContext();\\n\\treturn useSubscription(queryCalling);\\n};\\nexport const useVideoConfCapabilities = (): ProviderCapabilities => {\\n\\tconst { queryCapabilities } = useVideoConfContext();\\n\\treturn useSubscription(queryCapabilities);\\n};\\nexport const useVideoConfPreferences = (): CallPreferences => {\\n\\tconst { queryPreferences } = useVideoConfContext();\\n\\treturn useSubscription(queryPreferences);\\n};\\n\\nexport const useVideoConfManager = (): typeof VideoConfManager | undefined => useContext(VideoConfContext)?.manager;\\n\",null],\"names\":[\"createContext\",\"useContext\",\"useSubscription\",\"module\",\"export\",\"VideoConfContext\",\"useVideoConfDispatchOutgoing\",\"useVideoConfDismissOutgoing\",\"useVideoConfStartCall\",\"useVideoConfAcceptCall\",\"useVideoConfJoinCall\",\"useVideoConfDismissCall\",\"useVideoConfAbortCall\",\"useVideoConfRejectIncomingCall\",\"useVideoConfIncomingCalls\",\"useVideoConfSetPreferences\",\"useVideoConfIsRinging\",\"useVideoConfIsCalling\",\"useVideoConfCapabilities\",\"useVideoConfPreferences\",\"useVideoConfManager\",\"link\",\"v\",\"undefined\",\"useVideoConfContext\",\"context\",\"Error\",\"dispatchOutgoing\",\"dismissOutgoing\",\"startCall\",\"acceptCall\",\"joinCall\",\"dismissCall\",\"abortCall\",\"rejectIncomingCall\",\"queryIncomingCalls\",\"setPreferences\",\"queryRinging\",\"queryCalling\",\"queryCapabilities\",\"queryPreferences\",\"_useContext\",\"manager\"],\"mappings\":\"2BACkDA,EAAAC,EAAAC,EAAlDC,EAAOC,MAAE,CAAA,CAAAC,iBAAeA,IAAYA,EAAcC,6BAAAA,IAAAA,EAAAC,4BAAAA,IAAAA,EAAAC,sBAAAA,IAAAA,EAAAC,uBAAAA,IAAAA,EAAAC,qBAAAA,IAAAA,EAAAC,wBAAAA,IAAAA,EAAAC,sBAAAA,IAAAA,EAAAC,+BAAAA,IAAAA,EAAAC,0BAAAA,IAAAA,EAAAC,2BAAAA,IAAAA,EAAAC,sBAAAA,IAAAA,EAAAC,sBAAAA,IAAAA,EAAAC,yBAAAA,IAAAA,EAAAC,wBAAAA,IAAAA,EAAAC,oBAAAA,IAAAA,CAAA,GAAAjB,EAAAkB,IAAA,CAAA,QAAA,CAAArB,cAAAsB,CAAA,EAAAtB,EAAAsB,CAAA,EAAArB,WAAAqB,CAAA,EAAArB,EAAAqB,CAAA,CAAA,EAAA,GAAAnB,EAAAkB,IAAA,CAAA,mBAAA,CAAAnB,gBAAAoB,CAAA,EAAApB,EAAAoB,CAAA,CAAA,EAAA,GA8B3C,IAAMjB,EAAmBL,EAAiDuB,KAAAA,GAC3EC,EAAsBA,KAC3B,IAAMC,EAAUxB,EAAWI,GAC3B,GAAI,CAACoB,EACJ,MAAM,AAAIC,MAAM,wCAGjB,OAAOD,CACR,EAEanB,EAA+BA,IAAiDkB,IAAsBG,gBAAgB,CACtHpB,EAA8BA,IAAgDiB,IAAsBI,eAAe,CACnHpB,EAAwBA,IAA0CgB,IAAsBK,SAAS,CACjGpB,EAAyBA,IAA2Ce,IAAsBM,UAAU,CACpGpB,EAAuBA,IAAyCc,IAAsBO,QAAQ,CAC9FpB,EAA0BA,IAA4Ca,IAAsBQ,WAAW,CACvGpB,EAAwBA,IAA0CY,IAAsBS,SAAS,CACjGpB,EAAiCA,IAAmDW,IAAsBU,kBAAkB,CAC5HpB,EAA4BA,KACxC,GAAM,CAAEqB,mBAAAA,CAAAA,CAAoB,CAAGX,IAC/B,OAAOtB,EAAgBiC,EACxB,EACapB,EAA6BA,IAA+CS,IAAsBY,cAAc,CAChHpB,EAAwBA,KACpC,GAAM,CAAEqB,aAAAA,CAAAA,CAAc,CAAGb,IACzB,OAAOtB,EAAgBmC,EACxB,EACapB,EAAwBA,KACpC,GAAM,CAAEqB,aAAAA,CAAAA,CAAc,CAAGd,IACzB,OAAOtB,EAAgBoC,EACxB,EACapB,EAA2BA,KACvC,GAAM,CAAEqB,kBAAAA,CAAAA,CAAmB,CAAGf,IAC9B,OAAOtB,EAAgBqC,EACxB,EACapB,EAA0BA,KACtC,GAAM,CAAEqB,iBAAAA,CAAAA,CAAkB,CAAGhB,IAC7B,OAAOtB,EAAgBsC,EACxB,EAEapB,EAAsBA,KAAA,IAAAqB,EAAA,OAAA,AAAuE,OAAvEA,CAAAA,EAA2CxC,EAAWI,EAAgB,GAACoC,AAAA,KAAA,IAAAA,EAAA,KAAA,EAA5BA,EAA8BC,OAAO\"}"}