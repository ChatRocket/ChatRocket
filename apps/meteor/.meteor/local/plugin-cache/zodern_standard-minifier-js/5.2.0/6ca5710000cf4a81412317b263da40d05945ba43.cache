{"code":"function module(e,t,r){let a,n,o,s,i,l,c,p,m,u,d,g,f,E,_,k,y,h,S,I,v;r.link(\"@rocket.chat/fuselage\",{Box(e){a=e},Margins(e){n=e},ProgressBar(e){o=e},Throbber(e){s=e}},0),r.link(\"@rocket.chat/fuselage-hooks\",{useMutableCallback(e){i=e}},1),r.link(\"@rocket.chat/ui-contexts\",{useToastMessageDispatch(e){l=e},useEndpoint(e){c=e},useTranslation(e){p=e},useStream(e){m=e},useRouter(e){u=e}},2),r.link(\"@tanstack/react-query\",{useQuery(e){d=e},useMutation(e){g=e},useQueryClient(e){f=e}},3),r.link(\"react\",{default(e){E=e},useEffect(e){_=e}},4),r.link(\"../../../../app/importer/lib/ImporterProgressStep\",{ImportingStartedStates(e){k=e}},5),r.link(\"../../../../lib/utils/stringUtils\",{numberFormat(e){y=e}},6),r.link(\"../../../components/Page\",{Page(e){h=e},PageHeader(e){S=e},PageScrollableContentWithShadow(e){I=e}},7),r.link(\"./useErrorHandler\",{useErrorHandler(e){v=e}},8),r.exportDefault(function e(){let e=f(),t=m(\"importers\"),r=p(),C=l(),b=v(),P=u(),w=c(\"GET\",\"/v1/getCurrentImportOperation\"),T=c(\"GET\",\"/v1/getImportProgress\"),x=g({mutationFn:async t=>{e.setQueryData([\"importers\",\"progress\"],t)}}),D=d([\"ImportProgressPage\",\"currentOperation\"],async()=>{let{operation:e}=await w();return e},{refetchInterval:1e3,onSuccess:e=>{let{valid:t,status:a}=e;if(!t){P.navigate(\"/admin/import\");return}if(\"importer_done\"===a){C({type:\"success\",message:r(\"Importer_done\")}),P.navigate(\"/admin/import\");return}k.includes(a)||P.navigate(\"/admin/import/prepare\")},onError:e=>{b(e,r(\"Failed_To_Load_Import_Data\")),P.navigate(\"/admin/import\")}}),L=i(e=>{let{key:t,step:a,completed:n,total:o}=e;if(!D.isSuccess||t.toLowerCase()!==D.data.importerKey.toLowerCase())return;let s=a[0].toUpperCase()+a.slice(1);switch(a){case\"importer_done\":r.has(s)&&C({type:\"success\",message:r(s)}),P.navigate(\"/admin/import\");return;case\"importer_import_failed\":case\"importer_import_cancelled\":r.has(s)&&b(s),P.navigate(\"/admin/import\");return;default:x.mutate({step:a,completed:n,total:o})}}),F=d([\"importers\",\"progress\"],async()=>{let{key:e,step:t,count:{completed:r=0,total:a=0}={}}=await T();return{key:e,step:t,completed:r,total:a}},{enabled:!!D.isSuccess,onSuccess:e=>{if(!e){C({type:\"warning\",message:r(\"Importer_not_in_progress\")}),P.navigate(\"/admin/import/prepare\");return}k.includes(e.step)||L({key:e.key,step:e.step,total:e.total,completed:e.completed})},onError:e=>{b(e,r(\"Failed_To_Load_Import_Data\")),P.navigate(\"/admin/import\")}});return _(()=>t(\"progress\",e=>{\"rate\"in e||L({key:e.key,step:e.step,completed:e.count.completed,total:e.count.total})}),[L,t]),E.createElement(h,null,E.createElement(S,{title:r(\"Importing_Data\")}),E.createElement(I,null,E.createElement(a,{marginInline:\"auto\",marginBlock:\"neg-x24\",width:\"full\",maxWidth:\"x580\"},E.createElement(n,{block:24},D.isLoading&&E.createElement(s,{justifyContent:\"center\"}),\"idle\"!==F.fetchStatus&&F.isLoading&&E.createElement(s,{justifyContent:\"center\"}),(D.isError||F.isError)&&E.createElement(a,{is:\"p\"},r(\"Failed_To_Load_Import_Data\")),F.isSuccess&&E.createElement(E.Fragment,null,E.createElement(a,{is:\"p\",fontScale:\"p2\"},r(F.data.step[0].toUpperCase()+F.data.step.slice(1))),E.createElement(a,{display:\"flex\",justifyContent:\"center\"},E.createElement(o,{percentage:F.data.completed/F.data.total*100}),E.createElement(a,{is:\"span\",fontScale:\"p2\",mis:24},y(F.data.completed/F.data.total*100,0),\"%\")))))))})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/import/ImportProgressPage.tsx\",\"<anon>\"],\"sourcesContent\":[\"import type { ProgressStep } from '@rocket.chat/core-typings';\\nimport { Box, Margins, ProgressBar, Throbber } from '@rocket.chat/fuselage';\\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\\nimport { useToastMessageDispatch, useEndpoint, useTranslation, useStream, useRouter } from '@rocket.chat/ui-contexts';\\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\\nimport React, { useEffect } from 'react';\\n\\nimport { ImportingStartedStates } from '../../../../app/importer/lib/ImporterProgressStep';\\nimport { numberFormat } from '../../../../lib/utils/stringUtils';\\nimport { Page, PageHeader, PageScrollableContentWithShadow } from '../../../components/Page';\\nimport { useErrorHandler } from './useErrorHandler';\\n\\n// TODO: review inner logic\\nconst ImportProgressPage = function ImportProgressPage() {\\n\\tconst queryClient = useQueryClient();\\n\\tconst streamer = useStream('importers');\\n\\tconst t = useTranslation();\\n\\tconst dispatchToastMessage = useToastMessageDispatch();\\n\\tconst handleError = useErrorHandler();\\n\\n\\tconst router = useRouter();\\n\\n\\tconst getCurrentImportOperation = useEndpoint('GET', '/v1/getCurrentImportOperation');\\n\\tconst getImportProgress = useEndpoint('GET', '/v1/getImportProgress');\\n\\n\\tconst mutation = useMutation({\\n\\t\\tmutationFn: async (props: { step: ProgressStep; completed: number; total: number }) => {\\n\\t\\t\\tqueryClient.setQueryData<{\\n\\t\\t\\t\\tstep: ProgressStep;\\n\\t\\t\\t\\tcompleted: number;\\n\\t\\t\\t\\ttotal: number;\\n\\t\\t\\t}>(['importers', 'progress'], props);\\n\\t\\t},\\n\\t});\\n\\n\\tconst currentOperation = useQuery(\\n\\t\\t['ImportProgressPage', 'currentOperation'],\\n\\t\\tasync () => {\\n\\t\\t\\tconst { operation } = await getCurrentImportOperation();\\n\\t\\t\\treturn operation;\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\trefetchInterval: 1000,\\n\\t\\t\\tonSuccess: ({ valid, status }) => {\\n\\t\\t\\t\\tif (!valid) {\\n\\t\\t\\t\\t\\trouter.navigate('/admin/import');\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (status === 'importer_done') {\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'success', message: t('Importer_done') });\\n\\t\\t\\t\\t\\trouter.navigate('/admin/import');\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (!(ImportingStartedStates as string[]).includes(status)) {\\n\\t\\t\\t\\t\\trouter.navigate('/admin/import/prepare');\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\tonError: (error) => {\\n\\t\\t\\t\\thandleError(error, t('Failed_To_Load_Import_Data'));\\n\\t\\t\\t\\trouter.navigate('/admin/import');\\n\\t\\t\\t},\\n\\t\\t},\\n\\t);\\n\\n\\tconst handleProgressUpdated = useMutableCallback(\\n\\t\\t({ key, step, completed, total }: { key: string; step: ProgressStep; completed: number; total: number }) => {\\n\\t\\t\\tif (!currentOperation.isSuccess) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tif (key.toLowerCase() !== currentOperation.data.importerKey.toLowerCase()) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst message = step[0].toUpperCase() + step.slice(1);\\n\\n\\t\\t\\tswitch (step) {\\n\\t\\t\\t\\tcase 'importer_done':\\n\\t\\t\\t\\t\\tt.has(message) &&\\n\\t\\t\\t\\t\\t\\tdispatchToastMessage({\\n\\t\\t\\t\\t\\t\\t\\ttype: 'success',\\n\\t\\t\\t\\t\\t\\t\\tmessage: t(message),\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\trouter.navigate('/admin/import');\\n\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\tcase 'importer_import_failed':\\n\\t\\t\\t\\tcase 'importer_import_cancelled':\\n\\t\\t\\t\\t\\tt.has(message) && handleError(message);\\n\\t\\t\\t\\t\\trouter.navigate('/admin/import');\\n\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\tmutation.mutate({ step, completed, total });\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t);\\n\\n\\tconst progress = useQuery(\\n\\t\\t['importers', 'progress'],\\n\\t\\tasync () => {\\n\\t\\t\\tconst { key, step, count: { completed = 0, total = 0 } = {} } = await getImportProgress();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tkey,\\n\\t\\t\\t\\tstep,\\n\\t\\t\\t\\tcompleted,\\n\\t\\t\\t\\ttotal,\\n\\t\\t\\t};\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tenabled: !!currentOperation.isSuccess,\\n\\t\\t\\tonSuccess: (progress) => {\\n\\t\\t\\t\\tif (!progress) {\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'warning', message: t('Importer_not_in_progress') });\\n\\t\\t\\t\\t\\trouter.navigate('/admin/import/prepare');\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// do not use the endpoint data to update the completed progress, leave it to the streamer\\n\\t\\t\\t\\tif (!(ImportingStartedStates as string[]).includes(progress.step)) {\\n\\t\\t\\t\\t\\thandleProgressUpdated({\\n\\t\\t\\t\\t\\t\\tkey: progress.key,\\n\\t\\t\\t\\t\\t\\tstep: progress.step,\\n\\t\\t\\t\\t\\t\\ttotal: progress.total,\\n\\t\\t\\t\\t\\t\\tcompleted: progress.completed,\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\tonError: (error) => {\\n\\t\\t\\t\\thandleError(error, t('Failed_To_Load_Import_Data'));\\n\\t\\t\\t\\trouter.navigate('/admin/import');\\n\\t\\t\\t},\\n\\t\\t},\\n\\t);\\n\\n\\tuseEffect(() => {\\n\\t\\treturn streamer('progress', (progress) => {\\n\\t\\t\\t// There shouldn't be any progress update sending only the rate at this point of the process\\n\\t\\t\\tif (!('rate' in progress)) {\\n\\t\\t\\t\\thandleProgressUpdated({\\n\\t\\t\\t\\t\\tkey: progress.key,\\n\\t\\t\\t\\t\\tstep: progress.step,\\n\\t\\t\\t\\t\\tcompleted: progress.count.completed,\\n\\t\\t\\t\\t\\ttotal: progress.count.total,\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}, [handleProgressUpdated, streamer]);\\n\\n\\treturn (\\n\\t\\t<Page>\\n\\t\\t\\t<PageHeader title={t('Importing_Data')} />\\n\\t\\t\\t<PageScrollableContentWithShadow>\\n\\t\\t\\t\\t<Box marginInline='auto' marginBlock='neg-x24' width='full' maxWidth='x580'>\\n\\t\\t\\t\\t\\t<Margins block={24}>\\n\\t\\t\\t\\t\\t\\t{currentOperation.isLoading && <Throbber justifyContent='center' />}\\n\\t\\t\\t\\t\\t\\t{progress.fetchStatus !== 'idle' && progress.isLoading && <Throbber justifyContent='center' />}\\n\\n\\t\\t\\t\\t\\t\\t{(currentOperation.isError || progress.isError) && <Box is='p'>{t('Failed_To_Load_Import_Data')}</Box>}\\n\\t\\t\\t\\t\\t\\t{progress.isSuccess && (\\n\\t\\t\\t\\t\\t\\t\\t<>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Box is='p' fontScale='p2'>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{t((progress.data.step[0].toUpperCase() + progress.data.step.slice(1)) as any)}\\n\\t\\t\\t\\t\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Box display='flex' justifyContent='center'>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ProgressBar percentage={(progress.data.completed / progress.data.total) * 100} />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Box is='span' fontScale='p2' mis={24}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{numberFormat((progress.data.completed / progress.data.total) * 100, 0)}%\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t\\t\\t\\t\\t</Box>\\n\\t\\t\\t\\t\\t\\t\\t</>\\n\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t</Margins>\\n\\t\\t\\t\\t</Box>\\n\\t\\t\\t</PageScrollableContentWithShadow>\\n\\t\\t</Page>\\n\\t);\\n};\\n\\nexport default ImportProgressPage;\\n\",null],\"names\":[\"Box\",\"Margins\",\"ProgressBar\",\"Throbber\",\"useMutableCallback\",\"useToastMessageDispatch\",\"useEndpoint\",\"useTranslation\",\"useStream\",\"useRouter\",\"useQuery\",\"useMutation\",\"useQueryClient\",\"React\",\"useEffect\",\"ImportingStartedStates\",\"numberFormat\",\"Page\",\"PageHeader\",\"PageScrollableContentWithShadow\",\"useErrorHandler\",\"module\",\"link\",\"v\",\"default\",\"exportDefault\",\"ImportProgressPage\",\"queryClient\",\"streamer\",\"t\",\"dispatchToastMessage\",\"handleError\",\"router\",\"getCurrentImportOperation\",\"getImportProgress\",\"mutation\",\"mutationFn\",\"props\",\"setQueryData\",\"currentOperation\",\"operation\",\"refetchInterval\",\"onSuccess\",\"_ref\",\"valid\",\"status\",\"navigate\",\"type\",\"message\",\"includes\",\"onError\",\"error\",\"handleProgressUpdated\",\"_ref2\",\"key\",\"step\",\"completed\",\"total\",\"isSuccess\",\"toLowerCase\",\"data\",\"importerKey\",\"toUpperCase\",\"slice\",\"has\",\"mutate\",\"progress\",\"count\",\"enabled\",\"createElement\",\"title\",\"marginInline\",\"marginBlock\",\"width\",\"maxWidth\",\"block\",\"isLoading\",\"justifyContent\",\"fetchStatus\",\"isError\",\"is\",\"Fragment\",\"fontScale\",\"display\",\"percentage\",\"mis\"],\"mappings\":\"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\"}"}