{"code":"function module(t,o,a){a.export({secondsToHHMMSS:()=>r});let r=t=>{\"number\"!=typeof t&&(t=parseFloat(t));let o=Math.floor(t/3600),a=Math.floor((t-3600*o)/60),r=Math.round(t-3600*o-60*a);return\"\".concat(o.toString().padStart(2,\"0\"),\":\").concat(a.toString().padStart(2,\"0\"),\":\").concat(r.toString().padStart(2,\"0\"))}}","map":"{\"version\":3,\"sources\":[\"lib/utils/secondsToHHMMSS.ts\",\"<anon>\"],\"sourcesContent\":[\"/**\\n * @todo check alternatives for date/time formatting\\n */\\nexport const secondsToHHMMSS = (sec: number | string): string => {\\n\\tif (typeof sec !== 'number') {\\n\\t\\tsec = parseFloat(sec);\\n\\t}\\n\\n\\tconst hours = Math.floor(sec / 3600);\\n\\tconst minutes = Math.floor((sec - hours * 3600) / 60);\\n\\tconst seconds = Math.round(sec - hours * 3600 - minutes * 60);\\n\\n\\treturn `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\\n};\\n\",null],\"names\":[\"module\",\"export\",\"secondsToHHMMSS\",\"sec\",\"parseFloat\",\"hours\",\"Math\",\"floor\",\"minutes\",\"seconds\",\"round\",\"concat\",\"toString\",\"padStart\"],\"mappings\":\"uBAAAA,EAAAC,MAAA,CAAA,CAAAC,gBAAAA,IAAAA,CAAA,GAGO,IAAMA,EAAmBC,IACZ,UAAf,OAAOA,GACVA,CAAAA,EAAMC,WAAWD,EAAG,EAGrB,IAAME,EAAQC,KAAKC,KAAK,CAACJ,EAAM,MACzBK,EAAUF,KAAKC,KAAK,CAAC,AAACJ,CAAAA,EAAME,AAAQ,KAARA,CAAQ,EAAQ,IAC5CI,EAAUH,KAAKI,KAAK,CAACP,EAAME,AAAQ,KAARA,EAAeG,AAAU,GAAVA,GAEhD,MAAA,GAAAG,MAAA,CAAUN,EAAMO,QAAQ,GAAGC,QAAQ,CAAC,EAAG,KAAI,KAAAF,MAAA,CAAIH,EAAQI,QAAQ,GAAGC,QAAQ,CAAC,EAAG,KAAI,KAAAF,MAAA,CAAIF,EAAQG,QAAQ,GAAGC,QAAQ,CAAC,EAAG,KACtH\"}"}