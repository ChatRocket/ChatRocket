{"code":"function module(e,t,n){n.link(\"@rocket.chat/ui-contexts\",{usePermission:function(e){a=e},useRouteParameter:function(e){o=e},useRouter:function(e){i=e}},0),n.link(\"react\",{default:function(e){u=e},useEffect:function(e){r=e}},1),n.link(\"../../notAuthorized/NotAuthorizedPage\",{default:function(e){c=e}},2),n.link(\"./ModerationConsolePage\",{default:function(e){s=e}},3);var a,o,i,u,r,c,s,l=[\"users\",\"messages\"];n.exportDefault(function(){var e=a(\"view-moderation-console\"),t=i(),n=o(\"tab\");return(r(function(){l.includes(n)||t.navigate({pattern:\"/admin/moderation/:tab?/:context?/:id?\",params:{tab:\"messages\"}},{replace:!0})},[n,t]),e)?u.createElement(s,{tab:n,onSelectTab:function(e){t.navigate({pattern:\"/admin/moderation/:tab?/:context?/:id?\",params:{tab:e}},{replace:!0})}}):u.createElement(c,null)})}","map":"{\"version\":3,\"sources\":[\"client/views/admin/moderation/ModerationConsoleRoute.tsx\",\"<anon>\"],\"sourcesContent\":[\"import { usePermission, useRouteParameter, useRouter } from '@rocket.chat/ui-contexts';\\nimport React, { useEffect } from 'react';\\n\\nimport NotAuthorizedPage from '../../notAuthorized/NotAuthorizedPage';\\nimport ModerationConsolePage from './ModerationConsolePage';\\n\\nconst MODERATION_VALID_TABS = ['users', 'messages'] as const;\\n\\nconst isValidTab = (tab: string | undefined): tab is (typeof MODERATION_VALID_TABS)[number] => MODERATION_VALID_TABS.includes(tab as any);\\n\\nconst ModerationRoute = () => {\\n\\tconst canViewModerationConsole = usePermission('view-moderation-console');\\n\\tconst router = useRouter();\\n\\tconst tab = useRouteParameter('tab');\\n\\n\\tuseEffect(() => {\\n\\t\\tif (!isValidTab(tab)) {\\n\\t\\t\\trouter.navigate(\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tpattern: '/admin/moderation/:tab?/:context?/:id?',\\n\\t\\t\\t\\t\\tparams: { tab: 'messages' },\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{ replace: true },\\n\\t\\t\\t);\\n\\t\\t}\\n\\t}, [tab, router]);\\n\\n\\tif (!canViewModerationConsole) {\\n\\t\\treturn <NotAuthorizedPage />;\\n\\t}\\n\\n\\tconst onSelectTab = (tab: (typeof MODERATION_VALID_TABS)[number]) => {\\n\\t\\trouter.navigate(\\n\\t\\t\\t{\\n\\t\\t\\t\\tpattern: '/admin/moderation/:tab?/:context?/:id?',\\n\\t\\t\\t\\tparams: { tab },\\n\\t\\t\\t},\\n\\t\\t\\t{ replace: true },\\n\\t\\t);\\n\\t};\\n\\n\\treturn <ModerationConsolePage tab={tab as (typeof MODERATION_VALID_TABS)[number]} onSelectTab={onSelectTab} />;\\n};\\n\\nexport default ModerationRoute;\\n\",null],\"names\":[\"module\",\"link\",\"usePermission\",\"v\",\"useRouteParameter\",\"useRouter\",\"React\",\"useEffect\",\"NotAuthorizedPage\",\"ModerationConsolePage\",\"MODERATION_VALID_TABS\",\"exportDefault\",\"canViewModerationConsole\",\"router\",\"tab\",\"includes\",\"navigate\",\"pattern\",\"params\",\"replace\",\"createElement\",\"onSelectTab\"],\"mappings\":\"uBAA2CA,EAASC,IAAE,CAAA,2BAAM,CAA0BC,cAAC,SAAAC,CAAA,EAAAD,EAAAC,CAAA,EAAAC,kBAAA,SAAAD,CAAA,EAAAC,EAAAD,CAAA,EAAAE,UAAA,SAAAF,CAAA,EAAAE,EAAAF,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,QAAA,CAAA,QAAA,SAAAE,CAAA,EAAAG,EAAAH,CAAA,EAAAI,UAAA,SAAAJ,CAAA,EAAAI,EAAAJ,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,wCAAA,CAAA,QAAA,SAAAE,CAAA,EAAAK,EAAAL,CAAA,CAAA,EAAA,GAAAH,EAAAC,IAAA,CAAA,0BAAA,CAAA,QAAA,SAAAE,CAAA,EAAAM,EAAAN,CAAA,CAAA,EAAA,GAMvF,IANAD,EAASE,EAAeC,EAA+DC,EAAAC,EAAAC,EAAAC,EAMjFC,EAAwB,CAAC,QAAS,WAAoB,CAN5DV,EAAOW,aAAE,CAUe,WACvB,IAAMC,EAA2BV,EAAc,2BACzCW,EAASR,IACTS,EAAMV,EAAkB,aAc9B,CAZAG,EAAU,WAPoFG,EAAsBK,QAAQ,CAQ3GD,IACfD,EAAOG,QAAQ,CACd,CACCC,QAAS,yCACTC,OAAQ,CAAEJ,IAAK,UAAU,GAE1B,CAAEK,QAAS,CAAA,CAAI,EAGlB,EAAG,CAACL,EAAKD,EAAO,EAEXD,GAcEN,EAAAc,aAAA,CAACX,EAAqB,CAACK,IAAKA,EAA+CO,YAV9D,SAACP,CAA2C,EAC/DD,EAAOG,QAAQ,CACd,CACCC,QAAS,yCACTC,OAAQ,CAAEJ,IAAAA,CAAG,GAEd,CAAEK,QAAS,CAAA,CAAI,EAEjB,CAE2G,GAbnGb,EAAAc,aAAA,CAACZ,EAAiB,KAc3B\"}"}