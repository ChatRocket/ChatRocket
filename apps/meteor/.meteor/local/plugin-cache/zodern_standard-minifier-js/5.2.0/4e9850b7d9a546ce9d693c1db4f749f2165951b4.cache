{"code":"function module(e,t,i){let a,n,r,l,u,s,c,d;let o=[\"type\"],p=[\"type\"];i.link(\"@babel/runtime/helpers/objectWithoutProperties\",{default(e){a=e}},0),i.link(\"@babel/runtime/helpers/objectSpread2\",{default(e){n=e}},1),i.export({initializeLivechatInquiryStream:()=>C}),i.link(\"../../../../../client/lib/queryClient\",{queryClient(e){r=e}},0),i.link(\"../../../../../client/lib/utils/callWithErrorHandling\",{callWithErrorHandling(e){l=e}},1),i.link(\"../../../../settings/client\",{settings(e){u=e}},2),i.link(\"../../../../utils/client/lib/SDKClient\",{sdk(e){s=e}},3),i.link(\"../../collections/LivechatInquiry\",{LivechatInquiry(e){c=e}},4);let v=new Set,y={added:async e=>{v.has(e.department)&&(c.insert(n(n({},e),{},{alert:!0,_updatedAt:new Date(e._updatedAt)})),await m(e.rid))},changed:async e=>{if(\"queued\"!==e.status||e.department&&!v.has(e.department))return h(e);c.upsert({_id:e._id},n(n({},e),{},{alert:!0,_updatedAt:new Date(e._updatedAt)})),await m(e.rid)},removed:e=>h(e)},m=async e=>{await r.invalidateQueries([\"rooms\",{reference:e,type:\"l\"}]),await r.removeQueries([\"rooms\",e]),await r.removeQueries([\"/v1/rooms.info\",e])},h=async e=>(await c.remove(e._id),r.invalidateQueries([\"rooms\",{reference:e.rid,type:\"l\"}])),w=async()=>{var e;let t=null!==(e=u.get(\"Livechat_guest_pool_max_number_incoming_livechats_displayed\"))&&void 0!==e?e:0,{inquiries:i}=await s.rest.get(\"/v1/livechat/inquiries.queuedForUser\",{count:t});return i},g=e=>{s.stop(\"livechat-inquiry-queue-observer\",\"department/\".concat(e)),v.delete(e)},_=e=>(v.add(e),s.stream(\"livechat-inquiry-queue-observer\",[\"department/\".concat(e)],async e=>{if(!(\"type\"in e))return;let{type:t}=e,i=a(e,o);await y[e.type](i)}),()=>g(e)),b=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=e.map(e=>_(e));return()=>t.forEach(e=>e())},f=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return e.forEach(e=>c.upsert({_id:e._id},n(n({},e),{},{_updatedAt:new Date(e._updatedAt)})))},q=async e=>{let{departments:t}=await s.rest.get(\"/v1/livechat/agents/\".concat(e,\"/departments\"),{enabledDepartmentsOnly:\"true\"});return t},k=()=>s.stop(\"livechat-inquiry-queue-observer\",\"public\"),A=()=>(s.stream(\"livechat-inquiry-queue-observer\",[\"public\"],async e=>{if(!(\"type\"in e))return;let{type:t}=e,i=a(e,p);await y[e.type](i)}),k),D=async e=>{let t=await l(\"livechat:getRoutingConfig\");if(null!=t&&t.autoAssignAgent)return;let i=(await q(e)).map(e=>e.departmentId),a=b(i),n=A(),r=Tracker.autorun(async()=>{let e=await w();await f(e)});return()=>{c.remove({}),k(),null==a||a(),null==n||n(),v.clear(),r.stop()}},C=async function(){var e;null===(e=d)||void 0===e||e(),d=await D(...arguments)}}","map":"{\"version\":3,\"sources\":[\"app/livechat/client/lib/stream/queueManager.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { ILivechatDepartment, ILivechatInquiryRecord, IOmnichannelAgent } from '@rocket.chat/core-typings';\\n\\nimport { queryClient } from '../../../../../client/lib/queryClient';\\nimport { callWithErrorHandling } from '../../../../../client/lib/utils/callWithErrorHandling';\\nimport { settings } from '../../../../settings/client';\\nimport { sdk } from '../../../../utils/client/lib/SDKClient';\\nimport { LivechatInquiry } from '../../collections/LivechatInquiry';\\n\\nconst departments = new Set();\\n\\nconst events = {\\n\\tadded: async (inquiry: ILivechatInquiryRecord) => {\\n\\t\\tif (!departments.has(inquiry.department)) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tLivechatInquiry.insert({ ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\\n\\t\\tawait invalidateRoomQueries(inquiry.rid);\\n\\t},\\n\\tchanged: async (inquiry: ILivechatInquiryRecord) => {\\n\\t\\tif (inquiry.status !== 'queued' || (inquiry.department && !departments.has(inquiry.department))) {\\n\\t\\t\\treturn removeInquiry(inquiry);\\n\\t\\t}\\n\\n\\t\\tLivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\\n\\t\\tawait invalidateRoomQueries(inquiry.rid);\\n\\t},\\n\\tremoved: (inquiry: ILivechatInquiryRecord) => removeInquiry(inquiry),\\n};\\n\\nconst invalidateRoomQueries = async (rid: string) => {\\n\\tawait queryClient.invalidateQueries(['rooms', { reference: rid, type: 'l' }]);\\n\\tawait queryClient.removeQueries(['rooms', rid]);\\n\\tawait queryClient.removeQueries(['/v1/rooms.info', rid]);\\n};\\n\\nconst removeInquiry = async (inquiry: ILivechatInquiryRecord) => {\\n\\tawait LivechatInquiry.remove(inquiry._id);\\n\\treturn queryClient.invalidateQueries(['rooms', { reference: inquiry.rid, type: 'l' }]);\\n};\\n\\nconst getInquiriesFromAPI = async () => {\\n\\tconst count = settings.get('Livechat_guest_pool_max_number_incoming_livechats_displayed') ?? 0;\\n\\tconst { inquiries } = await sdk.rest.get('/v1/livechat/inquiries.queuedForUser', { count });\\n\\treturn inquiries;\\n};\\n\\nconst removeListenerOfDepartment = (departmentId: ILivechatDepartment['_id']) => {\\n\\tsdk.stop('livechat-inquiry-queue-observer', `department/${departmentId}`);\\n\\tdepartments.delete(departmentId);\\n};\\n\\nconst appendListenerToDepartment = (departmentId: ILivechatDepartment['_id']) => {\\n\\tdepartments.add(departmentId);\\n\\tsdk.stream('livechat-inquiry-queue-observer', [`department/${departmentId}`], async (args) => {\\n\\t\\tif (!('type' in args)) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tconst { type, ...inquiry } = args;\\n\\t\\tawait events[args.type](inquiry);\\n\\t});\\n\\treturn () => removeListenerOfDepartment(departmentId);\\n};\\nconst addListenerForeachDepartment = (departments: ILivechatDepartment['_id'][] = []) => {\\n\\tconst cleanupFunctions = departments.map((department) => appendListenerToDepartment(department));\\n\\treturn () => cleanupFunctions.forEach((cleanup) => cleanup());\\n};\\n\\nconst updateInquiries = async (inquiries: ILivechatInquiryRecord[] = []) =>\\n\\tinquiries.forEach((inquiry) => LivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, _updatedAt: new Date(inquiry._updatedAt) }));\\n\\nconst getAgentsDepartments = async (userId: IOmnichannelAgent['_id']) => {\\n\\tconst { departments } = await sdk.rest.get(`/v1/livechat/agents/${userId}/departments`, { enabledDepartmentsOnly: 'true' });\\n\\treturn departments;\\n};\\n\\nconst removeGlobalListener = () => sdk.stop('livechat-inquiry-queue-observer', 'public');\\n\\nconst addGlobalListener = () => {\\n\\tsdk.stream('livechat-inquiry-queue-observer', ['public'], async (args) => {\\n\\t\\tif (!('type' in args)) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tconst { type, ...inquiry } = args;\\n\\t\\tawait events[args.type](inquiry);\\n\\t});\\n\\treturn removeGlobalListener;\\n};\\n\\nconst subscribe = async (userId: IOmnichannelAgent['_id']) => {\\n\\tconst config = await callWithErrorHandling('livechat:getRoutingConfig');\\n\\tif (config?.autoAssignAgent) {\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst agentDepartments = (await getAgentsDepartments(userId)).map((department) => department.departmentId);\\n\\n\\t// Register to all depts + public queue always to match the inquiry list returned by backend\\n\\tconst cleanDepartmentListeners = addListenerForeachDepartment(agentDepartments);\\n\\tconst globalCleanup = addGlobalListener();\\n\\n\\tconst computation = Tracker.autorun(async () => {\\n\\t\\tconst inquiriesFromAPI = (await getInquiriesFromAPI()) as unknown as ILivechatInquiryRecord[];\\n\\n\\t\\tawait updateInquiries(inquiriesFromAPI);\\n\\t});\\n\\n\\treturn () => {\\n\\t\\tLivechatInquiry.remove({});\\n\\t\\tremoveGlobalListener();\\n\\t\\tcleanDepartmentListeners?.();\\n\\t\\tglobalCleanup?.();\\n\\t\\tdepartments.clear();\\n\\t\\tcomputation.stop();\\n\\t};\\n};\\n\\nexport const initializeLivechatInquiryStream = (() => {\\n\\tlet cleanUp: (() => void) | undefined;\\n\\n\\treturn async (...args: Parameters<typeof subscribe>) => {\\n\\t\\tcleanUp?.();\\n\\t\\tcleanUp = await subscribe(...args);\\n\\t};\\n})();\\n\",null],\"names\":[\"_objectWithoutProperties\",\"_objectSpread\",\"queryClient\",\"callWithErrorHandling\",\"settings\",\"sdk\",\"LivechatInquiry\",\"cleanUp\",\"module\",\"link\",\"default\",\"v\",\"export\",\"initializeLivechatInquiryStream\",\"departments\",\"Set\",\"events\",\"added\",\"inquiry\",\"has\",\"department\",\"insert\",\"alert\",\"_updatedAt\",\"Date\",\"invalidateRoomQueries\",\"rid\",\"changed\",\"status\",\"removeInquiry\",\"upsert\",\"_id\",\"removed\",\"invalidateQueries\",\"reference\",\"type\",\"removeQueries\",\"remove\",\"getInquiriesFromAPI\",\"_settings$get\",\"count\",\"get\",\"inquiries\",\"rest\",\"removeListenerOfDepartment\",\"departmentId\",\"stop\",\"concat\",\"delete\",\"appendListenerToDepartment\",\"add\",\"stream\",\"args\",\"_excluded\",\"addListenerForeachDepartment\",\"arguments\",\"length\",\"undefined\",\"cleanupFunctions\",\"map\",\"forEach\",\"cleanup\",\"updateInquiries\",\"getAgentsDepartments\",\"userId\",\"enabledDepartmentsOnly\",\"removeGlobalListener\",\"addGlobalListener\",\"_excluded2\",\"subscribe\",\"config\",\"autoAssignAgent\",\"agentDepartments\",\"cleanDepartmentListeners\",\"globalCleanup\",\"computation\",\"Tracker\",\"autorun\",\"inquiriesFromAPI\",\"clear\",\"_cleanUp\"],\"mappings\":\"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\"}"}