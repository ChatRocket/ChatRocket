{"code":"function module(e,t,i){let s,r,o,n,a,c,h,l,d,y,u,p,m,_,E,S,I,w,T,k,R,g,f,b,O;i.export({OTRRoom:()=>K}),i.link(\"@rocket.chat/core-typings\",{UserStatus(e){s=e}},0),i.link(\"@rocket.chat/random\",{Random(e){r=e}},1),i.link(\"ejson\",{default(e){o=e}},2),i.link(\"meteor/meteor\",{Meteor(e){n=e}},3),i.link(\"meteor/reactive-var\",{ReactiveVar(e){a=e}},4),i.link(\"meteor/tracker\",{Tracker(e){c=e}},5),i.link(\"../../../client/components/GenericModal\",{default(e){h=e}},6),i.link(\"../../../client/lib/imperativeModal\",{imperativeModal(e){l=e}},7),i.link(\"../../../client/lib/presence\",{Presence(e){d=e}},8),i.link(\"../../../client/lib/toast\",{dispatchToastMessage(e){y=e}},9),i.link(\"../../../client/lib/utils/getUidDirectMessage\",{getUidDirectMessage(e){u=e}},10),i.link(\"../../../client/lib/utils/goToRoomById\",{goToRoomById(e){p=e}},11),i.link(\"../../utils/client/lib/SDKClient\",{sdk(e){m=e}},12),i.link(\"../../utils/lib/i18n\",{t(e){_=e}},13),i.link(\"../lib/OtrRoomState\",{OtrRoomState(e){E=e}},14),i.link(\"../lib/constants\",{otrSystemMessages(e){S=e}},15),i.link(\"../lib/functions\",{decryptAES(e){I=e},deriveBits(e){w=e},digest(e){T=e},encryptAES(e){k=e},exportKey(e){R=e},generateKeyPair(e){g=e},importKey(e){f=e},importKeyRaw(e){b=e},joinEncryptedData(e){O=e}},16);class K{constructor(e,t,i){this._userId=void 0,this._roomId=void 0,this._keyPair=void 0,this._exportedPublicKey=void 0,this._sessionKey=void 0,this._userOnlineComputation=void 0,this.peerId=void 0,this.state=new a(E.NOT_STARTED),this.isFirstOTR=void 0,this.onPresenceEventHook=void 0,this._userId=e,this._roomId=t,this._keyPair=null,this._sessionKey=null,this.peerId=i,this.isFirstOTR=!0,this.onPresenceEventHook=this.onPresenceEvent.bind(this)}static create(e,t){let i=u(t);if(i)return new K(e,t,i)}getPeerId(){return this.peerId}getState(){return this.state.get()}setState(e){this.getState()!==e&&this.state.set(e)}async handshake(e){if(this.setState(E.ESTABLISHING),await this.generateKeyPair(),m.publish(\"notify-user\",[\"\".concat(this.peerId,\"/otr\"),\"handshake\",{roomId:this._roomId,userId:this._userId,publicKey:o.stringify(this._exportedPublicKey),refresh:e}]),e){let e=n.user();e&&(await m.rest.post(\"/v1/chat.otr\",{roomId:this._roomId,type:S.USER_REQUESTED_OTR_KEY_REFRESH}),this.isFirstOTR=!1)}}onPresenceEvent(e){e&&e.status===s.OFFLINE&&(console.warn(\"OTR Room \".concat(this._roomId,\" ended because \").concat(this.peerId,\" went offline\")),this.end(),l.open({component:h,props:{variant:\"warning\",title:_(\"OTR\"),children:_(\"OTR_Session_ended_other_user_went_offline\",{username:e.username}),confirmText:_(\"Ok\"),onClose:l.close,onConfirm:l.close}}))}listenToUserStatus(){d.listen(this.peerId,this.onPresenceEventHook)}acknowledge(){m.rest.post(\"/v1/statistics.telemetry\",{params:[{eventName:\"otrStats\",timestamp:Date.now(),rid:this._roomId}]}),m.publish(\"notify-user\",[\"\".concat(this.peerId,\"/otr\"),\"acknowledge\",{roomId:this._roomId,userId:this._userId,publicKey:o.stringify(this._exportedPublicKey)}])}deny(){this.reset(),this.setState(E.DECLINED),m.publish(\"notify-user\",[\"\".concat(this.peerId,\"/otr\"),\"deny\",{roomId:this._roomId,userId:this._userId}])}softReset(){this.isFirstOTR=!0,this.setState(E.NOT_STARTED),this._keyPair=null,this._exportedPublicKey={},this._sessionKey=null}end(){this.isFirstOTR=!0,this.reset(),this.setState(E.NOT_STARTED),d.stop(this.peerId,this.onPresenceEventHook),m.publish(\"notify-user\",[\"\".concat(this.peerId,\"/otr\"),\"end\",{roomId:this._roomId,userId:this._userId}])}reset(){this._keyPair=null,this._exportedPublicKey={},this._sessionKey=null,m.call(\"deleteOldOTRMessages\",this._roomId)}async generateKeyPair(){this._userOnlineComputation&&this._userOnlineComputation.stop(),this._userOnlineComputation=c.autorun(()=>{let e=document.querySelector(\"#chat-window-\".concat(this._roomId)),t=null==e?void 0:e.querySelector(\".rc-header__title\");if(this.getState()===E.ESTABLISHED)e&&t&&!t.querySelector(\".otr-icon\")&&t.prepend(\"<i class='otr-icon icon-key'></i>\");else if(t){var i;null===(i=t.querySelector(\".otr-icon\"))||void 0===i||i.remove()}});try{if(this._keyPair=await g(),!this._keyPair.publicKey)throw Error(\"Public key is not generated\");this._exportedPublicKey=await R(this._keyPair.publicKey),m.call(\"deleteOldOTRMessages\",this._roomId)}catch(e){throw this.setState(E.ERROR),e}}async importPublicKey(e){try{if(!this._keyPair)throw Error(\"No key pair\");let t=o.parse(e),i=await f(t),s=await w({ecdhObj:{name:\"ECDH\",namedCurve:\"P-256\",public:i},_keyPair:this._keyPair}),r=await T(s),n=new Uint8Array(r).slice(0,16);this._sessionKey=await b(n)}catch(e){throw this.setState(E.ERROR),e}}async encryptText(e){\"string\"==typeof e&&(e=new TextEncoder().encode(o.stringify({text:e,ack:r.id((r.fraction()+1)*20)})));try{if(!this._sessionKey)throw Error(\"Session Key not available\");let t=crypto.getRandomValues(new Uint8Array(12)),i=await k({iv:t,_sessionKey:this._sessionKey,data:e}),s=O({encryptedData:i,iv:t});return o.stringify(s)}catch(e){throw this.setState(E.ERROR),new n.Error(\"encryption-error\",\"Encryption error.\")}}async encrypt(e){try{let t=new TextEncoder().encode(o.stringify({_id:e._id,text:e.msg,userId:this._userId,ack:r.id((r.fraction()+1)*20),ts:new Date})),i=await this.encryptText(t);return i}catch(e){throw new n.Error(\"encryption-error\",\"Encryption error.\")}}async decrypt(e){try{if(!this._sessionKey)throw Error(\"Session Key not available.\");let t=o.parse(e),i=await I(t,this._sessionKey),s=o.parse(new TextDecoder(\"UTF-8\").decode(new Uint8Array(i)));if(s&&\"object\"==typeof s)return s;return e}catch(t){return y({type:\"error\",message:t}),this.setState(E.ERROR),e}}async onUserStream(e,t){switch(e){case\"handshake\":let i;let s=async()=>{this.setState(E.ESTABLISHING),clearTimeout(i);try{if(!t.publicKey)throw Error(\"Public key is not generated\");await this.generateKeyPair(),await this.importPublicKey(t.publicKey),await p(t.roomId),setTimeout(async()=>{this.setState(E.ESTABLISHED),this.acknowledge(),this.listenToUserStatus(),t.refresh&&await m.rest.post(\"/v1/chat.otr\",{roomId:this._roomId,type:S.USER_KEY_REFRESHED_SUCCESSFULLY})},0)}catch(e){throw y({type:\"error\",message:e}),new n.Error(\"establish-connection-error\",\"Establish connection error.\")}},r=()=>{clearTimeout(i),this.deny(),l.close()};try{let e=await d.get(t.userId);if(!(null!=e&&e.username))throw new n.Error(\"user-not-defined\",\"User not defined.\");if(t.refresh&&this.getState()===E.ESTABLISHED)this.reset(),await s();else{if(this.getState()===E.REQUESTED)return;this.getState()===E.ESTABLISHED&&this.reset(),this.setState(E.REQUESTED),l.open({component:h,props:{variant:\"warning\",title:_(\"OTR\"),children:_(\"Username_wants_to_start_otr_Do_you_want_to_accept\",{username:e.username}),confirmText:_(\"Yes\"),cancelText:_(\"No\"),onClose:()=>r(),onCancel:()=>r(),onConfirm:async()=>{await s(),l.close()}}}),i=setTimeout(()=>{this.setState(E.TIMEOUT),l.close()},1e4)}}catch(e){y({type:\"error\",message:e})}break;case\"acknowledge\":try{if(!t.publicKey)throw Error(\"Public key is not generated\");await this.importPublicKey(t.publicKey),this.setState(E.ESTABLISHED),this.isFirstOTR&&(this.listenToUserStatus(),await m.rest.post(\"/v1/chat.otr\",{roomId:this._roomId,type:S.USER_JOINED_OTR})),this.isFirstOTR=!1}catch(e){y({type:\"error\",message:e})}break;case\"deny\":this.getState()===E.ESTABLISHING&&(this.reset(),this.setState(E.DECLINED));break;case\"end\":try{let e=await d.get(this.peerId);if(!(null!=e&&e.username))throw new n.Error(\"user-not-defined\",\"User not defined.\");this.getState()===E.ESTABLISHED&&(this.reset(),this.setState(E.NOT_STARTED),l.open({component:h,props:{variant:\"warning\",title:_(\"OTR\"),children:_(\"Username_ended_the_OTR_session\",{username:e.username}),confirmText:_(\"Ok\"),onClose:l.close,onConfirm:l.close}}))}catch(e){y({type:\"error\",message:e})}}}}}","map":"{\"version\":3,\"sources\":[\"app/otr/client/OTRRoom.ts\",\"<anon>\"],\"sourcesContent\":[\"import type { IRoom, IMessage, IUser } from '@rocket.chat/core-typings';\\nimport { UserStatus } from '@rocket.chat/core-typings';\\nimport { Random } from '@rocket.chat/random';\\nimport EJSON from 'ejson';\\nimport { Meteor } from 'meteor/meteor';\\nimport { ReactiveVar } from 'meteor/reactive-var';\\nimport { Tracker } from 'meteor/tracker';\\n\\nimport GenericModal from '../../../client/components/GenericModal';\\nimport { imperativeModal } from '../../../client/lib/imperativeModal';\\nimport type { UserPresence } from '../../../client/lib/presence';\\nimport { Presence } from '../../../client/lib/presence';\\nimport { dispatchToastMessage } from '../../../client/lib/toast';\\nimport { getUidDirectMessage } from '../../../client/lib/utils/getUidDirectMessage';\\nimport { goToRoomById } from '../../../client/lib/utils/goToRoomById';\\nimport { sdk } from '../../utils/client/lib/SDKClient';\\nimport { t } from '../../utils/lib/i18n';\\nimport type { IOnUserStreamData, IOTRAlgorithm, IOTRDecrypt, IOTRRoom } from '../lib/IOTR';\\nimport { OtrRoomState } from '../lib/OtrRoomState';\\nimport { otrSystemMessages } from '../lib/constants';\\nimport {\\n\\tdecryptAES,\\n\\tderiveBits,\\n\\tdigest,\\n\\tencryptAES,\\n\\texportKey,\\n\\tgenerateKeyPair,\\n\\timportKey,\\n\\timportKeyRaw,\\n\\tjoinEncryptedData,\\n} from '../lib/functions';\\n\\nexport class OTRRoom implements IOTRRoom {\\n\\tprivate _userId: string;\\n\\n\\tprivate _roomId: string;\\n\\n\\tprivate _keyPair: CryptoKeyPair | null;\\n\\n\\tprivate _exportedPublicKey: JsonWebKey;\\n\\n\\tprivate _sessionKey: CryptoKey | null;\\n\\n\\tprivate _userOnlineComputation: Tracker.Computation;\\n\\n\\tprivate peerId: string;\\n\\n\\tprivate state: ReactiveVar<OtrRoomState> = new ReactiveVar(OtrRoomState.NOT_STARTED);\\n\\n\\tprivate isFirstOTR: boolean;\\n\\n\\tprivate onPresenceEventHook: (event: UserPresence | undefined) => void;\\n\\n\\tprotected constructor(uid: IUser['_id'], rid: IRoom['_id'], peerId: IUser['_id']) {\\n\\t\\tthis._userId = uid;\\n\\t\\tthis._roomId = rid;\\n\\t\\tthis._keyPair = null;\\n\\t\\tthis._sessionKey = null;\\n\\t\\tthis.peerId = peerId;\\n\\t\\tthis.isFirstOTR = true;\\n\\t\\tthis.onPresenceEventHook = this.onPresenceEvent.bind(this);\\n\\t}\\n\\n\\tpublic static create(uid: IUser['_id'], rid: IRoom['_id']): OTRRoom | undefined {\\n\\t\\tconst peerId = getUidDirectMessage(rid);\\n\\n\\t\\tif (!peerId) {\\n\\t\\t\\treturn undefined;\\n\\t\\t}\\n\\n\\t\\treturn new OTRRoom(uid, rid, peerId);\\n\\t}\\n\\n\\tgetPeerId(): string {\\n\\t\\treturn this.peerId;\\n\\t}\\n\\n\\tgetState(): OtrRoomState {\\n\\t\\treturn this.state.get();\\n\\t}\\n\\n\\tsetState(nextState: OtrRoomState): void {\\n\\t\\tif (this.getState() === nextState) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.state.set(nextState);\\n\\t}\\n\\n\\tasync handshake(refresh?: boolean): Promise<void> {\\n\\t\\tthis.setState(OtrRoomState.ESTABLISHING);\\n\\n\\t\\tawait this.generateKeyPair();\\n\\t\\tsdk.publish('notify-user', [\\n\\t\\t\\t`${this.peerId}/otr`,\\n\\t\\t\\t'handshake',\\n\\t\\t\\t{\\n\\t\\t\\t\\troomId: this._roomId,\\n\\t\\t\\t\\tuserId: this._userId,\\n\\t\\t\\t\\tpublicKey: EJSON.stringify(this._exportedPublicKey),\\n\\t\\t\\t\\trefresh,\\n\\t\\t\\t},\\n\\t\\t]);\\n\\n\\t\\tif (refresh) {\\n\\t\\t\\tconst user = Meteor.user();\\n\\t\\t\\tif (!user) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tawait sdk.rest.post('/v1/chat.otr', {\\n\\t\\t\\t\\troomId: this._roomId,\\n\\t\\t\\t\\ttype: otrSystemMessages.USER_REQUESTED_OTR_KEY_REFRESH,\\n\\t\\t\\t});\\n\\t\\t\\tthis.isFirstOTR = false;\\n\\t\\t}\\n\\t}\\n\\n\\tonPresenceEvent(event: UserPresence | undefined): void {\\n\\t\\tif (!event) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tif (event.status !== UserStatus.OFFLINE) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tconsole.warn(`OTR Room ${this._roomId} ended because ${this.peerId} went offline`);\\n\\t\\tthis.end();\\n\\n\\t\\timperativeModal.open({\\n\\t\\t\\tcomponent: GenericModal,\\n\\t\\t\\tprops: {\\n\\t\\t\\t\\tvariant: 'warning',\\n\\t\\t\\t\\ttitle: t('OTR'),\\n\\t\\t\\t\\tchildren: t('OTR_Session_ended_other_user_went_offline', { username: event.username }),\\n\\t\\t\\t\\tconfirmText: t('Ok'),\\n\\t\\t\\t\\tonClose: imperativeModal.close,\\n\\t\\t\\t\\tonConfirm: imperativeModal.close,\\n\\t\\t\\t},\\n\\t\\t});\\n\\t}\\n\\n\\t// Starts listening to other user's status changes and end OTR if any of the Users goes offline\\n\\t// this should be called in 2 places: on acknowledge (meaning user accepted OTR) or on establish (meaning user initiated OTR)\\n\\tlistenToUserStatus(): void {\\n\\t\\tPresence.listen(this.peerId, this.onPresenceEventHook);\\n\\t}\\n\\n\\tacknowledge(): void {\\n\\t\\tvoid sdk.rest.post('/v1/statistics.telemetry', { params: [{ eventName: 'otrStats', timestamp: Date.now(), rid: this._roomId }] });\\n\\n\\t\\tsdk.publish('notify-user', [\\n\\t\\t\\t`${this.peerId}/otr`,\\n\\t\\t\\t'acknowledge',\\n\\t\\t\\t{\\n\\t\\t\\t\\troomId: this._roomId,\\n\\t\\t\\t\\tuserId: this._userId,\\n\\t\\t\\t\\tpublicKey: EJSON.stringify(this._exportedPublicKey),\\n\\t\\t\\t},\\n\\t\\t]);\\n\\t}\\n\\n\\tdeny(): void {\\n\\t\\tthis.reset();\\n\\t\\tthis.setState(OtrRoomState.DECLINED);\\n\\t\\tsdk.publish('notify-user', [\\n\\t\\t\\t`${this.peerId}/otr`,\\n\\t\\t\\t'deny',\\n\\t\\t\\t{\\n\\t\\t\\t\\troomId: this._roomId,\\n\\t\\t\\t\\tuserId: this._userId,\\n\\t\\t\\t},\\n\\t\\t]);\\n\\t}\\n\\n\\tsoftReset(): void {\\n\\t\\tthis.isFirstOTR = true;\\n\\t\\tthis.setState(OtrRoomState.NOT_STARTED);\\n\\t\\tthis._keyPair = null;\\n\\t\\tthis._exportedPublicKey = {};\\n\\t\\tthis._sessionKey = null;\\n\\t}\\n\\n\\tend(): void {\\n\\t\\tthis.isFirstOTR = true;\\n\\t\\tthis.reset();\\n\\t\\tthis.setState(OtrRoomState.NOT_STARTED);\\n\\t\\tPresence.stop(this.peerId, this.onPresenceEventHook);\\n\\t\\tsdk.publish('notify-user', [\\n\\t\\t\\t`${this.peerId}/otr`,\\n\\t\\t\\t'end',\\n\\t\\t\\t{\\n\\t\\t\\t\\troomId: this._roomId,\\n\\t\\t\\t\\tuserId: this._userId,\\n\\t\\t\\t},\\n\\t\\t]);\\n\\t}\\n\\n\\treset(): void {\\n\\t\\tthis._keyPair = null;\\n\\t\\tthis._exportedPublicKey = {};\\n\\t\\tthis._sessionKey = null;\\n\\t\\tvoid sdk.call('deleteOldOTRMessages', this._roomId);\\n\\t}\\n\\n\\tasync generateKeyPair(): Promise<void> {\\n\\t\\tif (this._userOnlineComputation) {\\n\\t\\t\\tthis._userOnlineComputation.stop();\\n\\t\\t}\\n\\n\\t\\tthis._userOnlineComputation = Tracker.autorun(() => {\\n\\t\\t\\tconst $room = document.querySelector(`#chat-window-${this._roomId}`);\\n\\t\\t\\tconst $title = $room?.querySelector('.rc-header__title');\\n\\t\\t\\tif (this.getState() === OtrRoomState.ESTABLISHED) {\\n\\t\\t\\t\\tif ($room && $title && !$title.querySelector('.otr-icon')) {\\n\\t\\t\\t\\t\\t$title.prepend(\\\"<i class='otr-icon icon-key'></i>\\\");\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if ($title) {\\n\\t\\t\\t\\t$title.querySelector('.otr-icon')?.remove();\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\ttry {\\n\\t\\t\\t// Generate an ephemeral key pair.\\n\\t\\t\\tthis._keyPair = await generateKeyPair();\\n\\n\\t\\t\\tif (!this._keyPair.publicKey) {\\n\\t\\t\\t\\tthrow new Error('Public key is not generated');\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis._exportedPublicKey = await exportKey(this._keyPair.publicKey);\\n\\n\\t\\t\\t// Once we have generated new keys, it's safe to delete old messages\\n\\t\\t\\tvoid sdk.call('deleteOldOTRMessages', this._roomId);\\n\\t\\t} catch (e) {\\n\\t\\t\\tthis.setState(OtrRoomState.ERROR);\\n\\t\\t\\tthrow e;\\n\\t\\t}\\n\\t}\\n\\n\\tasync importPublicKey(publicKey: string): Promise<void> {\\n\\t\\ttry {\\n\\t\\t\\tif (!this._keyPair) throw new Error('No key pair');\\n\\t\\t\\tconst publicKeyObject: JsonWebKey = EJSON.parse(publicKey);\\n\\t\\t\\tconst peerPublicKey = await importKey(publicKeyObject);\\n\\t\\t\\tconst ecdhObj: IOTRAlgorithm = {\\n\\t\\t\\t\\tname: 'ECDH',\\n\\t\\t\\t\\tnamedCurve: 'P-256',\\n\\t\\t\\t\\tpublic: peerPublicKey,\\n\\t\\t\\t};\\n\\t\\t\\tconst bits = await deriveBits({ ecdhObj, _keyPair: this._keyPair });\\n\\t\\t\\tconst hashedBits = await digest(bits);\\n\\t\\t\\t// We truncate the hash to 128 bits.\\n\\t\\t\\tconst sessionKeyData = new Uint8Array(hashedBits).slice(0, 16);\\n\\t\\t\\t// Session key available.\\n\\t\\t\\tthis._sessionKey = await importKeyRaw(sessionKeyData);\\n\\t\\t} catch (e) {\\n\\t\\t\\tthis.setState(OtrRoomState.ERROR);\\n\\t\\t\\tthrow e;\\n\\t\\t}\\n\\t}\\n\\n\\tasync encryptText(data: string | Uint8Array): Promise<string> {\\n\\t\\tif (typeof data === 'string') {\\n\\t\\t\\tdata = new TextEncoder().encode(EJSON.stringify({ text: data, ack: Random.id((Random.fraction() + 1) * 20) }));\\n\\t\\t}\\n\\t\\ttry {\\n\\t\\t\\tif (!this._sessionKey) throw new Error('Session Key not available');\\n\\n\\t\\t\\tconst iv = crypto.getRandomValues(new Uint8Array(12));\\n\\t\\t\\tconst encryptedData = await encryptAES({ iv, _sessionKey: this._sessionKey, data });\\n\\n\\t\\t\\tconst output = joinEncryptedData({ encryptedData, iv });\\n\\n\\t\\t\\treturn EJSON.stringify(output);\\n\\t\\t} catch (e) {\\n\\t\\t\\tthis.setState(OtrRoomState.ERROR);\\n\\t\\t\\tthrow new Meteor.Error('encryption-error', 'Encryption error.');\\n\\t\\t}\\n\\t}\\n\\n\\tasync encrypt(message: Pick<IMessage, '_id' | 'msg'>): Promise<string> {\\n\\t\\ttry {\\n\\t\\t\\tconst data = new TextEncoder().encode(\\n\\t\\t\\t\\tEJSON.stringify({\\n\\t\\t\\t\\t\\t_id: message._id,\\n\\t\\t\\t\\t\\ttext: message.msg,\\n\\t\\t\\t\\t\\tuserId: this._userId,\\n\\t\\t\\t\\t\\tack: Random.id((Random.fraction() + 1) * 20),\\n\\t\\t\\t\\t\\tts: new Date(),\\n\\t\\t\\t\\t}),\\n\\t\\t\\t);\\n\\t\\t\\tconst enc = await this.encryptText(data);\\n\\t\\t\\treturn enc;\\n\\t\\t} catch (e) {\\n\\t\\t\\tthrow new Meteor.Error('encryption-error', 'Encryption error.');\\n\\t\\t}\\n\\t}\\n\\n\\tasync decrypt(message: string): Promise<IOTRDecrypt | string> {\\n\\t\\ttry {\\n\\t\\t\\tif (!this._sessionKey) throw new Error('Session Key not available.');\\n\\n\\t\\t\\tconst cipherText: Uint8Array = EJSON.parse(message);\\n\\t\\t\\tconst data = await decryptAES(cipherText, this._sessionKey);\\n\\t\\t\\tconst msgDecoded: IOTRDecrypt = EJSON.parse(new TextDecoder('UTF-8').decode(new Uint8Array(data)));\\n\\t\\t\\tif (msgDecoded && typeof msgDecoded === 'object') {\\n\\t\\t\\t\\treturn msgDecoded;\\n\\t\\t\\t}\\n\\t\\t\\treturn message;\\n\\t\\t} catch (e) {\\n\\t\\t\\tdispatchToastMessage({ type: 'error', message: e });\\n\\t\\t\\tthis.setState(OtrRoomState.ERROR);\\n\\t\\t\\treturn message;\\n\\t\\t}\\n\\t}\\n\\n\\tasync onUserStream(type: string, data: IOnUserStreamData): Promise<void> {\\n\\t\\tswitch (type) {\\n\\t\\t\\tcase 'handshake':\\n\\t\\t\\t\\tlet timeout: NodeJS.Timeout;\\n\\n\\t\\t\\t\\tconst establishConnection = async (): Promise<void> => {\\n\\t\\t\\t\\t\\tthis.setState(OtrRoomState.ESTABLISHING);\\n\\t\\t\\t\\t\\tclearTimeout(timeout);\\n\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\tif (!data.publicKey) throw new Error('Public key is not generated');\\n\\t\\t\\t\\t\\t\\tawait this.generateKeyPair();\\n\\t\\t\\t\\t\\t\\tawait this.importPublicKey(data.publicKey);\\n\\t\\t\\t\\t\\t\\tawait goToRoomById(data.roomId);\\n\\t\\t\\t\\t\\t\\tsetTimeout(async () => {\\n\\t\\t\\t\\t\\t\\t\\tthis.setState(OtrRoomState.ESTABLISHED);\\n\\t\\t\\t\\t\\t\\t\\tthis.acknowledge();\\n\\t\\t\\t\\t\\t\\t\\tthis.listenToUserStatus();\\n\\n\\t\\t\\t\\t\\t\\t\\tif (data.refresh) {\\n\\t\\t\\t\\t\\t\\t\\t\\tawait sdk.rest.post('/v1/chat.otr', {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\troomId: this._roomId,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype: otrSystemMessages.USER_KEY_REFRESHED_SUCCESSFULLY,\\n\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}, 0);\\n\\t\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: e });\\n\\t\\t\\t\\t\\t\\tthrow new Meteor.Error('establish-connection-error', 'Establish connection error.');\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\tconst closeOrCancelModal = (): void => {\\n\\t\\t\\t\\t\\tclearTimeout(timeout);\\n\\t\\t\\t\\t\\tthis.deny();\\n\\t\\t\\t\\t\\timperativeModal.close();\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tconst obj = await Presence.get(data.userId);\\n\\t\\t\\t\\t\\tif (!obj?.username) {\\n\\t\\t\\t\\t\\t\\tthrow new Meteor.Error('user-not-defined', 'User not defined.');\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (data.refresh && this.getState() === OtrRoomState.ESTABLISHED) {\\n\\t\\t\\t\\t\\t\\tthis.reset();\\n\\t\\t\\t\\t\\t\\tawait establishConnection();\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t/* \\tWe have to check if there's an in progress handshake request because\\n\\t\\t\\t\\t\\t\\t\\tNotifications.notifyUser will sometimes dispatch 2 events */\\n\\t\\t\\t\\t\\t\\tif (this.getState() === OtrRoomState.REQUESTED) {\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif (this.getState() === OtrRoomState.ESTABLISHED) {\\n\\t\\t\\t\\t\\t\\t\\tthis.reset();\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tthis.setState(OtrRoomState.REQUESTED);\\n\\t\\t\\t\\t\\t\\timperativeModal.open({\\n\\t\\t\\t\\t\\t\\t\\tcomponent: GenericModal,\\n\\t\\t\\t\\t\\t\\t\\tprops: {\\n\\t\\t\\t\\t\\t\\t\\t\\tvariant: 'warning',\\n\\t\\t\\t\\t\\t\\t\\t\\ttitle: t('OTR'),\\n\\t\\t\\t\\t\\t\\t\\t\\tchildren: t('Username_wants_to_start_otr_Do_you_want_to_accept', {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tusername: obj.username,\\n\\t\\t\\t\\t\\t\\t\\t\\t}),\\n\\t\\t\\t\\t\\t\\t\\t\\tconfirmText: t('Yes'),\\n\\t\\t\\t\\t\\t\\t\\t\\tcancelText: t('No'),\\n\\t\\t\\t\\t\\t\\t\\t\\tonClose: (): void => closeOrCancelModal(),\\n\\t\\t\\t\\t\\t\\t\\t\\tonCancel: (): void => closeOrCancelModal(),\\n\\t\\t\\t\\t\\t\\t\\t\\tonConfirm: async (): Promise<void> => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tawait establishConnection();\\n\\t\\t\\t\\t\\t\\t\\t\\t\\timperativeModal.close();\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\ttimeout = setTimeout(() => {\\n\\t\\t\\t\\t\\t\\t\\tthis.setState(OtrRoomState.TIMEOUT);\\n\\t\\t\\t\\t\\t\\t\\timperativeModal.close();\\n\\t\\t\\t\\t\\t\\t}, 10000);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: e });\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 'acknowledge':\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tif (!data.publicKey) throw new Error('Public key is not generated');\\n\\t\\t\\t\\t\\tawait this.importPublicKey(data.publicKey);\\n\\n\\t\\t\\t\\t\\tthis.setState(OtrRoomState.ESTABLISHED);\\n\\n\\t\\t\\t\\t\\tif (this.isFirstOTR) {\\n\\t\\t\\t\\t\\t\\tthis.listenToUserStatus();\\n\\t\\t\\t\\t\\t\\tawait sdk.rest.post('/v1/chat.otr', {\\n\\t\\t\\t\\t\\t\\t\\troomId: this._roomId,\\n\\t\\t\\t\\t\\t\\t\\ttype: otrSystemMessages.USER_JOINED_OTR,\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tthis.isFirstOTR = false;\\n\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: e });\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 'deny':\\n\\t\\t\\t\\tif (this.getState() === OtrRoomState.ESTABLISHING) {\\n\\t\\t\\t\\t\\tthis.reset();\\n\\t\\t\\t\\t\\tthis.setState(OtrRoomState.DECLINED);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 'end':\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tconst obj = await Presence.get(this.peerId);\\n\\t\\t\\t\\t\\tif (!obj?.username) {\\n\\t\\t\\t\\t\\t\\tthrow new Meteor.Error('user-not-defined', 'User not defined.');\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (this.getState() === OtrRoomState.ESTABLISHED) {\\n\\t\\t\\t\\t\\t\\tthis.reset();\\n\\t\\t\\t\\t\\t\\tthis.setState(OtrRoomState.NOT_STARTED);\\n\\t\\t\\t\\t\\t\\timperativeModal.open({\\n\\t\\t\\t\\t\\t\\t\\tcomponent: GenericModal,\\n\\t\\t\\t\\t\\t\\t\\tprops: {\\n\\t\\t\\t\\t\\t\\t\\t\\tvariant: 'warning',\\n\\t\\t\\t\\t\\t\\t\\t\\ttitle: t('OTR'),\\n\\t\\t\\t\\t\\t\\t\\t\\tchildren: t('Username_ended_the_OTR_session', { username: obj.username }),\\n\\t\\t\\t\\t\\t\\t\\t\\tconfirmText: t('Ok'),\\n\\t\\t\\t\\t\\t\\t\\t\\tonClose: imperativeModal.close,\\n\\t\\t\\t\\t\\t\\t\\t\\tonConfirm: imperativeModal.close,\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\tdispatchToastMessage({ type: 'error', message: e });\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n}\\n\",null],\"names\":[\"UserStatus\",\"Random\",\"EJSON\",\"Meteor\",\"ReactiveVar\",\"Tracker\",\"GenericModal\",\"imperativeModal\",\"Presence\",\"dispatchToastMessage\",\"getUidDirectMessage\",\"goToRoomById\",\"sdk\",\"t\",\"OtrRoomState\",\"otrSystemMessages\",\"decryptAES\",\"deriveBits\",\"digest\",\"encryptAES\",\"exportKey\",\"generateKeyPair\",\"importKey\",\"importKeyRaw\",\"joinEncryptedData\",\"module\",\"export\",\"OTRRoom\",\"link\",\"v\",\"default\",\"constructor\",\"uid\",\"rid\",\"peerId\",\"_userId\",\"_roomId\",\"_keyPair\",\"_exportedPublicKey\",\"_sessionKey\",\"_userOnlineComputation\",\"state\",\"NOT_STARTED\",\"isFirstOTR\",\"onPresenceEventHook\",\"onPresenceEvent\",\"bind\",\"create\",\"getPeerId\",\"getState\",\"get\",\"setState\",\"nextState\",\"set\",\"handshake\",\"refresh\",\"ESTABLISHING\",\"publish\",\"concat\",\"roomId\",\"userId\",\"publicKey\",\"stringify\",\"user\",\"rest\",\"post\",\"type\",\"USER_REQUESTED_OTR_KEY_REFRESH\",\"event\",\"status\",\"OFFLINE\",\"console\",\"warn\",\"end\",\"open\",\"component\",\"props\",\"variant\",\"title\",\"children\",\"username\",\"confirmText\",\"onClose\",\"close\",\"onConfirm\",\"listenToUserStatus\",\"listen\",\"acknowledge\",\"params\",\"eventName\",\"timestamp\",\"Date\",\"now\",\"deny\",\"reset\",\"DECLINED\",\"softReset\",\"stop\",\"call\",\"autorun\",\"$room\",\"document\",\"querySelector\",\"$title\",\"ESTABLISHED\",\"prepend\",\"_$title$querySelector\",\"remove\",\"Error\",\"e\",\"ERROR\",\"importPublicKey\",\"publicKeyObject\",\"parse\",\"peerPublicKey\",\"bits\",\"ecdhObj\",\"name\",\"namedCurve\",\"public\",\"hashedBits\",\"sessionKeyData\",\"Uint8Array\",\"slice\",\"encryptText\",\"data\",\"TextEncoder\",\"encode\",\"text\",\"ack\",\"id\",\"fraction\",\"iv\",\"crypto\",\"getRandomValues\",\"encryptedData\",\"output\",\"encrypt\",\"message\",\"_id\",\"msg\",\"ts\",\"enc\",\"decrypt\",\"cipherText\",\"msgDecoded\",\"TextDecoder\",\"decode\",\"onUserStream\",\"timeout\",\"establishConnection\",\"clearTimeout\",\"setTimeout\",\"USER_KEY_REFRESHED_SUCCESSFULLY\",\"closeOrCancelModal\",\"obj\",\"REQUESTED\",\"cancelText\",\"onCancel\",\"TIMEOUT\",\"USER_JOINED_OTR\"],\"mappings\":\"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\"}"}